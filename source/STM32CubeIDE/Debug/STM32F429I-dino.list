
STM32F429I-dino.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001e9d8  080001b0  080001b0  000011b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001ef4  0801eb88  0801eb88  0001fb88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00000aba  08020a7c  08020a7c  00021a7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000020  08021538  08021538  00022538  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000009a  08021558  08021558  00022558  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00051380  080215f4  080215f4  000225f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  08072974  08072974  00074164  2**0
                  CONTENTS
  8 .ARM          00000008  08072974  08072974  00073974  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0807297c  0807297c  00074164  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  0807297c  0807297c  0007397c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  08072990  08072990  00073990  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000164  20000000  08072994  00074000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          000124c8  20000164  08072af8  00074164  2**2
                  ALLOC
 14 ._user_heap_stack 00001404  2001262c  08072af8  0007462c  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00074164  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00025800  d0000000  d0000000  00075000  2**2
                  ALLOC
 17 .debug_line   0005a662  00000000  00000000  00074194  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line_str 00000068  00000000  00000000  000ce7f6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_info   000c47db  00000000  00000000  000ce85e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_abbrev 00017309  00000000  00000000  00193039  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_aranges 00003628  00000000  00000000  001aa348  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_str    0011ed99  00000000  00000000  001ad970  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_rnglists 00003c36  00000000  00000000  002cc709  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_loclists 0001c319  00000000  00000000  002d033f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_macro  000328cb  00000000  00000000  002ec658  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .comment      000000c2  00000000  00000000  0031ef23  2**0
                  CONTENTS, READONLY
 27 .debug_frame  0000906c  00000000  00000000  0031efe8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	@ (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	@ (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000164 	.word	0x20000164
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0801eb70 	.word	0x0801eb70

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	@ (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	@ (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	@ (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000168 	.word	0x20000168
 80001ec:	0801eb70 	.word	0x0801eb70

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b96a 	b.w	800057c <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9d08      	ldr	r5, [sp, #32]
 80002c6:	460c      	mov	r4, r1
 80002c8:	2b00      	cmp	r3, #0
 80002ca:	d14e      	bne.n	800036a <__udivmoddi4+0xaa>
 80002cc:	4694      	mov	ip, r2
 80002ce:	458c      	cmp	ip, r1
 80002d0:	4686      	mov	lr, r0
 80002d2:	fab2 f282 	clz	r2, r2
 80002d6:	d962      	bls.n	800039e <__udivmoddi4+0xde>
 80002d8:	b14a      	cbz	r2, 80002ee <__udivmoddi4+0x2e>
 80002da:	f1c2 0320 	rsb	r3, r2, #32
 80002de:	4091      	lsls	r1, r2
 80002e0:	fa20 f303 	lsr.w	r3, r0, r3
 80002e4:	fa0c fc02 	lsl.w	ip, ip, r2
 80002e8:	4319      	orrs	r1, r3
 80002ea:	fa00 fe02 	lsl.w	lr, r0, r2
 80002ee:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80002f2:	fa1f f68c 	uxth.w	r6, ip
 80002f6:	fbb1 f4f7 	udiv	r4, r1, r7
 80002fa:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80002fe:	fb07 1114 	mls	r1, r7, r4, r1
 8000302:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000306:	fb04 f106 	mul.w	r1, r4, r6
 800030a:	4299      	cmp	r1, r3
 800030c:	d90a      	bls.n	8000324 <__udivmoddi4+0x64>
 800030e:	eb1c 0303 	adds.w	r3, ip, r3
 8000312:	f104 30ff 	add.w	r0, r4, #4294967295
 8000316:	f080 8112 	bcs.w	800053e <__udivmoddi4+0x27e>
 800031a:	4299      	cmp	r1, r3
 800031c:	f240 810f 	bls.w	800053e <__udivmoddi4+0x27e>
 8000320:	3c02      	subs	r4, #2
 8000322:	4463      	add	r3, ip
 8000324:	1a59      	subs	r1, r3, r1
 8000326:	fa1f f38e 	uxth.w	r3, lr
 800032a:	fbb1 f0f7 	udiv	r0, r1, r7
 800032e:	fb07 1110 	mls	r1, r7, r0, r1
 8000332:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000336:	fb00 f606 	mul.w	r6, r0, r6
 800033a:	429e      	cmp	r6, r3
 800033c:	d90a      	bls.n	8000354 <__udivmoddi4+0x94>
 800033e:	eb1c 0303 	adds.w	r3, ip, r3
 8000342:	f100 31ff 	add.w	r1, r0, #4294967295
 8000346:	f080 80fc 	bcs.w	8000542 <__udivmoddi4+0x282>
 800034a:	429e      	cmp	r6, r3
 800034c:	f240 80f9 	bls.w	8000542 <__udivmoddi4+0x282>
 8000350:	4463      	add	r3, ip
 8000352:	3802      	subs	r0, #2
 8000354:	1b9b      	subs	r3, r3, r6
 8000356:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800035a:	2100      	movs	r1, #0
 800035c:	b11d      	cbz	r5, 8000366 <__udivmoddi4+0xa6>
 800035e:	40d3      	lsrs	r3, r2
 8000360:	2200      	movs	r2, #0
 8000362:	e9c5 3200 	strd	r3, r2, [r5]
 8000366:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800036a:	428b      	cmp	r3, r1
 800036c:	d905      	bls.n	800037a <__udivmoddi4+0xba>
 800036e:	b10d      	cbz	r5, 8000374 <__udivmoddi4+0xb4>
 8000370:	e9c5 0100 	strd	r0, r1, [r5]
 8000374:	2100      	movs	r1, #0
 8000376:	4608      	mov	r0, r1
 8000378:	e7f5      	b.n	8000366 <__udivmoddi4+0xa6>
 800037a:	fab3 f183 	clz	r1, r3
 800037e:	2900      	cmp	r1, #0
 8000380:	d146      	bne.n	8000410 <__udivmoddi4+0x150>
 8000382:	42a3      	cmp	r3, r4
 8000384:	d302      	bcc.n	800038c <__udivmoddi4+0xcc>
 8000386:	4290      	cmp	r0, r2
 8000388:	f0c0 80f0 	bcc.w	800056c <__udivmoddi4+0x2ac>
 800038c:	1a86      	subs	r6, r0, r2
 800038e:	eb64 0303 	sbc.w	r3, r4, r3
 8000392:	2001      	movs	r0, #1
 8000394:	2d00      	cmp	r5, #0
 8000396:	d0e6      	beq.n	8000366 <__udivmoddi4+0xa6>
 8000398:	e9c5 6300 	strd	r6, r3, [r5]
 800039c:	e7e3      	b.n	8000366 <__udivmoddi4+0xa6>
 800039e:	2a00      	cmp	r2, #0
 80003a0:	f040 8090 	bne.w	80004c4 <__udivmoddi4+0x204>
 80003a4:	eba1 040c 	sub.w	r4, r1, ip
 80003a8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80003ac:	fa1f f78c 	uxth.w	r7, ip
 80003b0:	2101      	movs	r1, #1
 80003b2:	fbb4 f6f8 	udiv	r6, r4, r8
 80003b6:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80003ba:	fb08 4416 	mls	r4, r8, r6, r4
 80003be:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003c2:	fb07 f006 	mul.w	r0, r7, r6
 80003c6:	4298      	cmp	r0, r3
 80003c8:	d908      	bls.n	80003dc <__udivmoddi4+0x11c>
 80003ca:	eb1c 0303 	adds.w	r3, ip, r3
 80003ce:	f106 34ff 	add.w	r4, r6, #4294967295
 80003d2:	d202      	bcs.n	80003da <__udivmoddi4+0x11a>
 80003d4:	4298      	cmp	r0, r3
 80003d6:	f200 80cd 	bhi.w	8000574 <__udivmoddi4+0x2b4>
 80003da:	4626      	mov	r6, r4
 80003dc:	1a1c      	subs	r4, r3, r0
 80003de:	fa1f f38e 	uxth.w	r3, lr
 80003e2:	fbb4 f0f8 	udiv	r0, r4, r8
 80003e6:	fb08 4410 	mls	r4, r8, r0, r4
 80003ea:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003ee:	fb00 f707 	mul.w	r7, r0, r7
 80003f2:	429f      	cmp	r7, r3
 80003f4:	d908      	bls.n	8000408 <__udivmoddi4+0x148>
 80003f6:	eb1c 0303 	adds.w	r3, ip, r3
 80003fa:	f100 34ff 	add.w	r4, r0, #4294967295
 80003fe:	d202      	bcs.n	8000406 <__udivmoddi4+0x146>
 8000400:	429f      	cmp	r7, r3
 8000402:	f200 80b0 	bhi.w	8000566 <__udivmoddi4+0x2a6>
 8000406:	4620      	mov	r0, r4
 8000408:	1bdb      	subs	r3, r3, r7
 800040a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800040e:	e7a5      	b.n	800035c <__udivmoddi4+0x9c>
 8000410:	f1c1 0620 	rsb	r6, r1, #32
 8000414:	408b      	lsls	r3, r1
 8000416:	fa22 f706 	lsr.w	r7, r2, r6
 800041a:	431f      	orrs	r7, r3
 800041c:	fa20 fc06 	lsr.w	ip, r0, r6
 8000420:	fa04 f301 	lsl.w	r3, r4, r1
 8000424:	ea43 030c 	orr.w	r3, r3, ip
 8000428:	40f4      	lsrs	r4, r6
 800042a:	fa00 f801 	lsl.w	r8, r0, r1
 800042e:	0c38      	lsrs	r0, r7, #16
 8000430:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000434:	fbb4 fef0 	udiv	lr, r4, r0
 8000438:	fa1f fc87 	uxth.w	ip, r7
 800043c:	fb00 441e 	mls	r4, r0, lr, r4
 8000440:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000444:	fb0e f90c 	mul.w	r9, lr, ip
 8000448:	45a1      	cmp	r9, r4
 800044a:	fa02 f201 	lsl.w	r2, r2, r1
 800044e:	d90a      	bls.n	8000466 <__udivmoddi4+0x1a6>
 8000450:	193c      	adds	r4, r7, r4
 8000452:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000456:	f080 8084 	bcs.w	8000562 <__udivmoddi4+0x2a2>
 800045a:	45a1      	cmp	r9, r4
 800045c:	f240 8081 	bls.w	8000562 <__udivmoddi4+0x2a2>
 8000460:	f1ae 0e02 	sub.w	lr, lr, #2
 8000464:	443c      	add	r4, r7
 8000466:	eba4 0409 	sub.w	r4, r4, r9
 800046a:	fa1f f983 	uxth.w	r9, r3
 800046e:	fbb4 f3f0 	udiv	r3, r4, r0
 8000472:	fb00 4413 	mls	r4, r0, r3, r4
 8000476:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 800047a:	fb03 fc0c 	mul.w	ip, r3, ip
 800047e:	45a4      	cmp	ip, r4
 8000480:	d907      	bls.n	8000492 <__udivmoddi4+0x1d2>
 8000482:	193c      	adds	r4, r7, r4
 8000484:	f103 30ff 	add.w	r0, r3, #4294967295
 8000488:	d267      	bcs.n	800055a <__udivmoddi4+0x29a>
 800048a:	45a4      	cmp	ip, r4
 800048c:	d965      	bls.n	800055a <__udivmoddi4+0x29a>
 800048e:	3b02      	subs	r3, #2
 8000490:	443c      	add	r4, r7
 8000492:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000496:	fba0 9302 	umull	r9, r3, r0, r2
 800049a:	eba4 040c 	sub.w	r4, r4, ip
 800049e:	429c      	cmp	r4, r3
 80004a0:	46ce      	mov	lr, r9
 80004a2:	469c      	mov	ip, r3
 80004a4:	d351      	bcc.n	800054a <__udivmoddi4+0x28a>
 80004a6:	d04e      	beq.n	8000546 <__udivmoddi4+0x286>
 80004a8:	b155      	cbz	r5, 80004c0 <__udivmoddi4+0x200>
 80004aa:	ebb8 030e 	subs.w	r3, r8, lr
 80004ae:	eb64 040c 	sbc.w	r4, r4, ip
 80004b2:	fa04 f606 	lsl.w	r6, r4, r6
 80004b6:	40cb      	lsrs	r3, r1
 80004b8:	431e      	orrs	r6, r3
 80004ba:	40cc      	lsrs	r4, r1
 80004bc:	e9c5 6400 	strd	r6, r4, [r5]
 80004c0:	2100      	movs	r1, #0
 80004c2:	e750      	b.n	8000366 <__udivmoddi4+0xa6>
 80004c4:	f1c2 0320 	rsb	r3, r2, #32
 80004c8:	fa20 f103 	lsr.w	r1, r0, r3
 80004cc:	fa0c fc02 	lsl.w	ip, ip, r2
 80004d0:	fa24 f303 	lsr.w	r3, r4, r3
 80004d4:	4094      	lsls	r4, r2
 80004d6:	430c      	orrs	r4, r1
 80004d8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80004dc:	fa00 fe02 	lsl.w	lr, r0, r2
 80004e0:	fa1f f78c 	uxth.w	r7, ip
 80004e4:	fbb3 f0f8 	udiv	r0, r3, r8
 80004e8:	fb08 3110 	mls	r1, r8, r0, r3
 80004ec:	0c23      	lsrs	r3, r4, #16
 80004ee:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80004f2:	fb00 f107 	mul.w	r1, r0, r7
 80004f6:	4299      	cmp	r1, r3
 80004f8:	d908      	bls.n	800050c <__udivmoddi4+0x24c>
 80004fa:	eb1c 0303 	adds.w	r3, ip, r3
 80004fe:	f100 36ff 	add.w	r6, r0, #4294967295
 8000502:	d22c      	bcs.n	800055e <__udivmoddi4+0x29e>
 8000504:	4299      	cmp	r1, r3
 8000506:	d92a      	bls.n	800055e <__udivmoddi4+0x29e>
 8000508:	3802      	subs	r0, #2
 800050a:	4463      	add	r3, ip
 800050c:	1a5b      	subs	r3, r3, r1
 800050e:	b2a4      	uxth	r4, r4
 8000510:	fbb3 f1f8 	udiv	r1, r3, r8
 8000514:	fb08 3311 	mls	r3, r8, r1, r3
 8000518:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800051c:	fb01 f307 	mul.w	r3, r1, r7
 8000520:	42a3      	cmp	r3, r4
 8000522:	d908      	bls.n	8000536 <__udivmoddi4+0x276>
 8000524:	eb1c 0404 	adds.w	r4, ip, r4
 8000528:	f101 36ff 	add.w	r6, r1, #4294967295
 800052c:	d213      	bcs.n	8000556 <__udivmoddi4+0x296>
 800052e:	42a3      	cmp	r3, r4
 8000530:	d911      	bls.n	8000556 <__udivmoddi4+0x296>
 8000532:	3902      	subs	r1, #2
 8000534:	4464      	add	r4, ip
 8000536:	1ae4      	subs	r4, r4, r3
 8000538:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800053c:	e739      	b.n	80003b2 <__udivmoddi4+0xf2>
 800053e:	4604      	mov	r4, r0
 8000540:	e6f0      	b.n	8000324 <__udivmoddi4+0x64>
 8000542:	4608      	mov	r0, r1
 8000544:	e706      	b.n	8000354 <__udivmoddi4+0x94>
 8000546:	45c8      	cmp	r8, r9
 8000548:	d2ae      	bcs.n	80004a8 <__udivmoddi4+0x1e8>
 800054a:	ebb9 0e02 	subs.w	lr, r9, r2
 800054e:	eb63 0c07 	sbc.w	ip, r3, r7
 8000552:	3801      	subs	r0, #1
 8000554:	e7a8      	b.n	80004a8 <__udivmoddi4+0x1e8>
 8000556:	4631      	mov	r1, r6
 8000558:	e7ed      	b.n	8000536 <__udivmoddi4+0x276>
 800055a:	4603      	mov	r3, r0
 800055c:	e799      	b.n	8000492 <__udivmoddi4+0x1d2>
 800055e:	4630      	mov	r0, r6
 8000560:	e7d4      	b.n	800050c <__udivmoddi4+0x24c>
 8000562:	46d6      	mov	lr, sl
 8000564:	e77f      	b.n	8000466 <__udivmoddi4+0x1a6>
 8000566:	4463      	add	r3, ip
 8000568:	3802      	subs	r0, #2
 800056a:	e74d      	b.n	8000408 <__udivmoddi4+0x148>
 800056c:	4606      	mov	r6, r0
 800056e:	4623      	mov	r3, r4
 8000570:	4608      	mov	r0, r1
 8000572:	e70f      	b.n	8000394 <__udivmoddi4+0xd4>
 8000574:	3e02      	subs	r6, #2
 8000576:	4463      	add	r3, ip
 8000578:	e730      	b.n	80003dc <__udivmoddi4+0x11c>
 800057a:	bf00      	nop

0800057c <__aeabi_idiv0>:
 800057c:	4770      	bx	lr
 800057e:	bf00      	nop

08000580 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000580:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80005b8 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000584:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000586:	e003      	b.n	8000590 <LoopCopyDataInit>

08000588 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000588:	4b0c      	ldr	r3, [pc, #48]	@ (80005bc <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800058a:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 800058c:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800058e:	3104      	adds	r1, #4

08000590 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000590:	480b      	ldr	r0, [pc, #44]	@ (80005c0 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000592:	4b0c      	ldr	r3, [pc, #48]	@ (80005c4 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000594:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000596:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000598:	d3f6      	bcc.n	8000588 <CopyDataInit>
  ldr  r2, =_sbss
 800059a:	4a0b      	ldr	r2, [pc, #44]	@ (80005c8 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 800059c:	e002      	b.n	80005a4 <LoopFillZerobss>

0800059e <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800059e:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005a0:	f842 3b04 	str.w	r3, [r2], #4

080005a4 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005a4:	4b09      	ldr	r3, [pc, #36]	@ (80005cc <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005a6:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005a8:	d3f9      	bcc.n	800059e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005aa:	f004 f8a5 	bl	80046f8 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005ae:	f01d fd6f 	bl	801e090 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005b2:	f000 fdaf 	bl	8001114 <main>
  bx  lr    
 80005b6:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005b8:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005bc:	08072994 	.word	0x08072994
  ldr  r0, =_sdata
 80005c0:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005c4:	20000164 	.word	0x20000164
  ldr  r2, =_sbss
 80005c8:	20000164 	.word	0x20000164
  ldr  r3, = _ebss
 80005cc:	2001262c 	.word	0x2001262c

080005d0 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005d0:	e7fe      	b.n	80005d0 <ADC_IRQHandler>

080005d2 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80005d2:	4770      	bx	lr

080005d4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80005d4:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 80005d6:	f000 fbcf 	bl	8000d78 <touchgfx_components_init>
    touchgfx_init();
}
 80005da:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 80005de:	f000 bb5b 	b.w	8000c98 <touchgfx_init>

080005e2 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 80005e2:	f000 bbcb 	b.w	8000d7c <touchgfx_taskEntry>

080005e6 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005e6:	4770      	bx	lr

080005e8 <_ZN20STM32TouchControllerD0Ev>:
 80005e8:	b510      	push	{r4, lr}
 80005ea:	2104      	movs	r1, #4
 80005ec:	4604      	mov	r4, r0
 80005ee:	f01d fa1b 	bl	801da28 <_ZdlPvj>
 80005f2:	4620      	mov	r0, r4
 80005f4:	bd10      	pop	{r4, pc}
	...

080005f8 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80005f8:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80005fa:	4b0c      	ldr	r3, [pc, #48]	@ (800062c <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80005fc:	4c0c      	ldr	r4, [pc, #48]	@ (8000630 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 80005fe:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000600:	4b0c      	ldr	r3, [pc, #48]	@ (8000634 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000602:	2082      	movs	r0, #130	@ 0x82
    TsYBoundary = YSize;
 8000604:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000606:	6863      	ldr	r3, [r4, #4]
 8000608:	4798      	blx	r3
 800060a:	f640 0311 	movw	r3, #2065	@ 0x811
 800060e:	4298      	cmp	r0, r3
 8000610:	d10a      	bne.n	8000628 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000612:	4d09      	ldr	r5, [pc, #36]	@ (8000638 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000614:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8000616:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000618:	2082      	movs	r0, #130	@ 0x82
 800061a:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 800061c:	682b      	ldr	r3, [r5, #0]
 800061e:	2082      	movs	r0, #130	@ 0x82
 8000620:	68db      	ldr	r3, [r3, #12]
 8000622:	4798      	blx	r3
 8000624:	2000      	movs	r0, #0
    }

    return ret;
}
 8000626:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000628:	2001      	movs	r0, #1
 800062a:	e7fc      	b.n	8000626 <_Z11BSP_TS_Inittt+0x2e>
 800062c:	2000018a 	.word	0x2000018a
 8000630:	2000004c 	.word	0x2000004c
 8000634:	20000188 	.word	0x20000188
 8000638:	2000018c 	.word	0x2000018c

0800063c <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 800063c:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8000640:	20f0      	movs	r0, #240	@ 0xf0
 8000642:	f7ff bfd9 	b.w	80005f8 <_Z11BSP_TS_Inittt>
	...

08000648 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000648:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800064a:	4d33      	ldr	r5, [pc, #204]	@ (8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 800064c:	682b      	ldr	r3, [r5, #0]
{
 800064e:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000650:	691b      	ldr	r3, [r3, #16]
 8000652:	2082      	movs	r0, #130	@ 0x82
 8000654:	4798      	blx	r3
 8000656:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000658:	2800      	cmp	r0, #0
 800065a:	d04a      	beq.n	80006f2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xaa>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 800065c:	682b      	ldr	r3, [r5, #0]
 800065e:	f10d 0206 	add.w	r2, sp, #6
 8000662:	695b      	ldr	r3, [r3, #20]
 8000664:	a901      	add	r1, sp, #4
 8000666:	2082      	movs	r0, #130	@ 0x82
 8000668:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 800066a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800066e:	f640 6274 	movw	r2, #3700	@ 0xe74
 8000672:	4293      	cmp	r3, r2
 8000674:	d93f      	bls.n	80006f6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xae>
        {
            y = 3700;
 8000676:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 800067a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800067e:	1ad2      	subs	r2, r2, r3
 8000680:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000682:	2a0a      	cmp	r2, #10
 8000684:	d93d      	bls.n	8000702 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xba>
        yr = y / 11;
 8000686:	230b      	movs	r3, #11
 8000688:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 800068c:	4b23      	ldr	r3, [pc, #140]	@ (800071c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 800068e:	881b      	ldrh	r3, [r3, #0]
 8000690:	429a      	cmp	r2, r3
 8000692:	d901      	bls.n	8000698 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x50>
        {
            yr = TsYBoundary - 1;
 8000694:	3b01      	subs	r3, #1
 8000696:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000698:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800069c:	f640 31b8 	movw	r1, #3000	@ 0xbb8
 80006a0:	428b      	cmp	r3, r1
 80006a2:	d830      	bhi.n	8000706 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbe>
        {
            x = 3870 - x;
 80006a4:	f5c3 6371 	rsb	r3, r3, #3856	@ 0xf10
 80006a8:	330e      	adds	r3, #14
 80006aa:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006ac:	210f      	movs	r1, #15
 80006ae:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006b2:	491b      	ldr	r1, [pc, #108]	@ (8000720 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 80006b4:	8809      	ldrh	r1, [r1, #0]
 80006b6:	428b      	cmp	r3, r1
 80006b8:	d901      	bls.n	80006be <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x76>
        {
            xr = TsXBoundary - 1;
 80006ba:	3901      	subs	r1, #1
 80006bc:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006be:	4e19      	ldr	r6, [pc, #100]	@ (8000724 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006c0:	4d19      	ldr	r5, [pc, #100]	@ (8000728 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006c2:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006c4:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006c6:	4283      	cmp	r3, r0
 80006c8:	b281      	uxth	r1, r0
 80006ca:	bf8c      	ite	hi
 80006cc:	1a59      	subhi	r1, r3, r1
 80006ce:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d0:	b2b8      	uxth	r0, r7
 80006d2:	42ba      	cmp	r2, r7
 80006d4:	bf8c      	ite	hi
 80006d6:	1a10      	subhi	r0, r2, r0
 80006d8:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006da:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006dc:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006de:	4401      	add	r1, r0
 80006e0:	2905      	cmp	r1, #5
        {
            _x = x;
 80006e2:	bfc8      	it	gt
 80006e4:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006e6:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006e8:	bfc8      	it	gt
 80006ea:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006ec:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80006ee:	682b      	ldr	r3, [r5, #0]
 80006f0:	80a3      	strh	r3, [r4, #4]
    }
}
 80006f2:	b003      	add	sp, #12
 80006f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 80006f6:	2bb3      	cmp	r3, #179	@ 0xb3
            y = 180;
 80006f8:	bf9c      	itt	ls
 80006fa:	23b4      	movls	r3, #180	@ 0xb4
 80006fc:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8000700:	e7bb      	b.n	800067a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x32>
            yr = 0;
 8000702:	2200      	movs	r2, #0
 8000704:	e7c8      	b.n	8000698 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x50>
            x = 3800 - x;
 8000706:	f5c3 636d 	rsb	r3, r3, #3792	@ 0xed0
 800070a:	3308      	adds	r3, #8
 800070c:	b29b      	uxth	r3, r3
        if (xr <= 0)
 800070e:	2b0e      	cmp	r3, #14
 8000710:	d8cc      	bhi.n	80006ac <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x64>
            xr = 0;
 8000712:	2300      	movs	r3, #0
 8000714:	e7d3      	b.n	80006be <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x76>
 8000716:	bf00      	nop
 8000718:	2000018c 	.word	0x2000018c
 800071c:	20000188 	.word	0x20000188
 8000720:	2000018a 	.word	0x2000018a
 8000724:	20000184 	.word	0x20000184
 8000728:	20000180 	.word	0x20000180

0800072c <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 800072c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800072e:	4668      	mov	r0, sp
{
 8000730:	460d      	mov	r5, r1
 8000732:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000734:	f7ff ff88 	bl	8000648 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000738:	f8bd 0000 	ldrh.w	r0, [sp]
 800073c:	b130      	cbz	r0, 800074c <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 800073e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000742:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000744:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000748:	6023      	str	r3, [r4, #0]
        return true;
 800074a:	2001      	movs	r0, #1
}
 800074c:	b003      	add	sp, #12
 800074e:	bd30      	pop	{r4, r5, pc}

08000750 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000750:	2803      	cmp	r0, #3
 8000752:	d821      	bhi.n	8000798 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>
 8000754:	e8df f000 	tbb	[pc, r0]
 8000758:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 800075c:	4b0f      	ldr	r3, [pc, #60]	@ (800079c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 800075e:	681a      	ldr	r2, [r3, #0]
 8000760:	fab2 f282 	clz	r2, r2
 8000764:	0952      	lsrs	r2, r2, #5
 8000766:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000768:	480d      	ldr	r0, [pc, #52]	@ (80007a0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 800076a:	f004 be3f 	b.w	80053ec <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 800076e:	4b0b      	ldr	r3, [pc, #44]	@ (800079c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000770:	685a      	ldr	r2, [r3, #4]
 8000772:	fab2 f282 	clz	r2, r2
 8000776:	0952      	lsrs	r2, r2, #5
 8000778:	2108      	movs	r1, #8
 800077a:	e7f5      	b.n	8000768 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 800077c:	4b07      	ldr	r3, [pc, #28]	@ (800079c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 800077e:	689a      	ldr	r2, [r3, #8]
 8000780:	fab2 f282 	clz	r2, r2
 8000784:	0952      	lsrs	r2, r2, #5
 8000786:	2110      	movs	r1, #16
 8000788:	e7ee      	b.n	8000768 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 800078a:	4b04      	ldr	r3, [pc, #16]	@ (800079c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 800078c:	68da      	ldr	r2, [r3, #12]
 800078e:	fab2 f282 	clz	r2, r2
 8000792:	0952      	lsrs	r2, r2, #5
 8000794:	2120      	movs	r1, #32
 8000796:	e7e7      	b.n	8000768 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 8000798:	4770      	bx	lr
 800079a:	bf00      	nop
 800079c:	20000190 	.word	0x20000190
 80007a0:	40021000 	.word	0x40021000

080007a4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 80007a4:	2803      	cmp	r0, #3
 80007a6:	d821      	bhi.n	80007ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>
 80007a8:	e8df f000 	tbb	[pc, r0]
 80007ac:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80007b0:	4b0f      	ldr	r3, [pc, #60]	@ (80007f0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80007b2:	681a      	ldr	r2, [r3, #0]
 80007b4:	3a00      	subs	r2, #0
 80007b6:	bf18      	it	ne
 80007b8:	2201      	movne	r2, #1
 80007ba:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80007bc:	480d      	ldr	r0, [pc, #52]	@ (80007f4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 80007be:	f004 be15 	b.w	80053ec <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80007c2:	4b0b      	ldr	r3, [pc, #44]	@ (80007f0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80007c4:	685a      	ldr	r2, [r3, #4]
 80007c6:	3a00      	subs	r2, #0
 80007c8:	bf18      	it	ne
 80007ca:	2201      	movne	r2, #1
 80007cc:	2108      	movs	r1, #8
 80007ce:	e7f5      	b.n	80007bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 80007d0:	4b07      	ldr	r3, [pc, #28]	@ (80007f0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80007d2:	689a      	ldr	r2, [r3, #8]
 80007d4:	3a00      	subs	r2, #0
 80007d6:	bf18      	it	ne
 80007d8:	2201      	movne	r2, #1
 80007da:	2110      	movs	r1, #16
 80007dc:	e7ee      	b.n	80007bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80007de:	4b04      	ldr	r3, [pc, #16]	@ (80007f0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80007e0:	68da      	ldr	r2, [r3, #12]
 80007e2:	3a00      	subs	r2, #0
 80007e4:	bf18      	it	ne
 80007e6:	2201      	movne	r2, #1
 80007e8:	2120      	movs	r1, #32
 80007ea:	e7e7      	b.n	80007bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80007ec:	4770      	bx	lr
 80007ee:	bf00      	nop
 80007f0:	20000190 	.word	0x20000190
 80007f4:	40021000 	.word	0x40021000

080007f8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80007f8:	2803      	cmp	r0, #3
 80007fa:	d80d      	bhi.n	8000818 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>
 80007fc:	e8df f000 	tbb	[pc, r0]
 8000800:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000804:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000806:	4805      	ldr	r0, [pc, #20]	@ (800081c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 8000808:	f004 bdf5 	b.w	80053f6 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800080c:	2108      	movs	r1, #8
 800080e:	e7fa      	b.n	8000806 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000810:	2110      	movs	r1, #16
 8000812:	e7f8      	b.n	8000806 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000814:	2120      	movs	r1, #32
 8000816:	e7f6      	b.n	8000806 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 8000818:	4770      	bx	lr
 800081a:	bf00      	nop
 800081c:	40021000 	.word	0x40021000

08000820 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8000820:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8000822:	2803      	cmp	r0, #3
 8000824:	d811      	bhi.n	800084a <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2a>
 8000826:	e8df f000 	tbb	[pc, r0]
 800082a:	0a02      	.short	0x0a02
 800082c:	0e0c      	.short	0x0e0c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 800082e:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000830:	4807      	ldr	r0, [pc, #28]	@ (8000850 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 8000832:	f004 fdd5 	bl	80053e0 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8000836:	1e43      	subs	r3, r0, #1
 8000838:	4258      	negs	r0, r3
 800083a:	4158      	adcs	r0, r3
 800083c:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800083e:	2108      	movs	r1, #8
 8000840:	e7f6      	b.n	8000830 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000842:	2110      	movs	r1, #16
 8000844:	e7f4      	b.n	8000830 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000846:	2120      	movs	r1, #32
 8000848:	e7f2      	b.n	8000830 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 800084a:	2000      	movs	r0, #0
 800084c:	e7f3      	b.n	8000836 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 800084e:	bf00      	nop
 8000850:	40021000 	.word	0x40021000

08000854 <_ZN8touchgfx4GPIO4initEv>:
{
 8000854:	b570      	push	{r4, r5, r6, lr}
 8000856:	4d08      	ldr	r5, [pc, #32]	@ (8000878 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000858:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 800085a:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 800085c:	b2e0      	uxtb	r0, r4
 800085e:	f7ff ffdf 	bl	8000820 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8000862:	b118      	cbz	r0, 800086c <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000864:	682b      	ldr	r3, [r5, #0]
 8000866:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000868:	bf18      	it	ne
 800086a:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 800086c:	3401      	adds	r4, #1
 800086e:	2c05      	cmp	r4, #5
 8000870:	f105 0504 	add.w	r5, r5, #4
 8000874:	d1f2      	bne.n	800085c <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000876:	bd70      	pop	{r4, r5, r6, pc}
 8000878:	20000190 	.word	0x20000190

0800087c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 800087c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800087e:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 8000882:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 8000886:	4770      	bx	lr

08000888 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000888:	2000      	movs	r0, #0
 800088a:	4770      	bx	lr

0800088c <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800088c:	4b03      	ldr	r3, [pc, #12]	@ (800089c <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800088e:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000890:	3900      	subs	r1, #0
 8000892:	bf18      	it	ne
 8000894:	2101      	movne	r1, #1
 8000896:	7019      	strb	r1, [r3, #0]
    }
 8000898:	4770      	bx	lr
 800089a:	bf00      	nop
 800089c:	200119fb 	.word	0x200119fb

080008a0 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 80008a0:	2000      	movs	r0, #0
 80008a2:	4770      	bx	lr

080008a4 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80008a4:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 80008a6:	b10b      	cbz	r3, 80008ac <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 80008a8:	4608      	mov	r0, r1
 80008aa:	4718      	bx	r3
        }
    }
 80008ac:	4770      	bx	lr

080008ae <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 80008ae:	6840      	ldr	r0, [r0, #4]
 80008b0:	6803      	ldr	r3, [r0, #0]
 80008b2:	699b      	ldr	r3, [r3, #24]
 80008b4:	4718      	bx	r3

080008b6 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 80008b6:	4770      	bx	lr

080008b8 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 80008b8:	4770      	bx	lr

080008ba <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80008ba:	4770      	bx	lr

080008bc <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA_NOLOAD("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE_NOLOAD("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 80008bc:	b510      	push	{r4, lr}
 80008be:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 80008c0:	f000 fb20 	bl	8000f04 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 80008c4:	6823      	ldr	r3, [r4, #0]
 80008c6:	4903      	ldr	r1, [pc, #12]	@ (80008d4 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 80008c8:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80008cc:	4620      	mov	r0, r4
}
 80008ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 80008d2:	4718      	bx	r3
 80008d4:	d0000000 	.word	0xd0000000

080008d8 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 80008d8:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 80008da:	6803      	ldr	r3, [r0, #0]
{
 80008dc:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 80008de:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80008e2:	4798      	blx	r3
    enableInterrupts();
 80008e4:	6823      	ldr	r3, [r4, #0]
 80008e6:	4620      	mov	r0, r4
 80008e8:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 80008ea:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80008ec:	f000 f8ec 	bl	8000ac8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80008f0:	6823      	ldr	r3, [r4, #0]
 80008f2:	4620      	mov	r0, r4
 80008f4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80008f6:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 80008f8:	2029      	movs	r0, #41	@ 0x29
 80008fa:	f000 fed9 	bl	80016b0 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80008fe:	f000 f8e3 	bl	8000ac8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000902:	6823      	ldr	r3, [r4, #0]
 8000904:	4620      	mov	r0, r4
 8000906:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8000908:	4798      	blx	r3
    for (;;)
 800090a:	e7f8      	b.n	80008fe <_ZN11TouchGFXHAL9taskEntryEv+0x26>

0800090c <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 800090c:	b510      	push	{r4, lr}
 800090e:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000910:	f009 ff54 	bl	800a7bc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000914:	6823      	ldr	r3, [r4, #0]
 8000916:	4620      	mov	r0, r4
 8000918:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
    }
 800091c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000920:	4718      	bx	r3

08000922 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8000922:	f000 bab5 	b.w	8000e90 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08000926 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000926:	f000 bab9 	b.w	8000e9c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

0800092a <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800092a:	f000 bad3 	b.w	8000ed4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

0800092e <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800092e:	f000 ba8d 	b.w	8000e4c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000932 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000932:	f000 badf 	b.w	8000ef4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08000936 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8000936:	f000 bad1 	b.w	8000edc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

0800093a <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800093a:	f000 ba8f 	b.w	8000e5c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

0800093e <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 800093e:	f009 b9a9 	b.w	8009c94 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08000942 <_ZN11TouchGFXHALD0Ev>:
 8000942:	b510      	push	{r4, lr}
 8000944:	217c      	movs	r1, #124	@ 0x7c
 8000946:	4604      	mov	r4, r0
 8000948:	f01d f86e 	bl	801da28 <_ZdlPvj>
 800094c:	4620      	mov	r0, r4
 800094e:	bd10      	pop	{r4, pc}

08000950 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000950:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000952:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
 8000956:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 800095a:	4b0c      	ldr	r3, [pc, #48]	@ (800098c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 800095c:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800095e:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000960:	d009      	beq.n	8000976 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8000962:	b93a      	cbnz	r2, 8000974 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000964:	4a0a      	ldr	r2, [pc, #40]	@ (8000990 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000966:	490b      	ldr	r1, [pc, #44]	@ (8000994 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000968:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 800096a:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 800096c:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800096e:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000970:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000972:	701a      	strb	r2, [r3, #0]
    }
 8000974:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000976:	2a00      	cmp	r2, #0
 8000978:	d0fc      	beq.n	8000974 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800097a:	4a05      	ldr	r2, [pc, #20]	@ (8000990 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 800097c:	4905      	ldr	r1, [pc, #20]	@ (8000994 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800097e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000980:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000982:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000984:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000986:	2200      	movs	r2, #0
 8000988:	e7f3      	b.n	8000972 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 800098a:	bf00      	nop
 800098c:	200119f4 	.word	0x200119f4
 8000990:	200119f0 	.word	0x200119f0
 8000994:	200119f2 	.word	0x200119f2

08000998 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000998:	b570      	push	{r4, r5, r6, lr}
 800099a:	460d      	mov	r5, r1
 800099c:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800099e:	b935      	cbnz	r5, 80009ae <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 80009a0:	4b09      	ldr	r3, [pc, #36]	@ (80009c8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 80009a2:	4a0a      	ldr	r2, [pc, #40]	@ (80009cc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 80009a4:	480a      	ldr	r0, [pc, #40]	@ (80009d0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 80009a6:	f240 21d2 	movw	r1, #722	@ 0x2d2
 80009aa:	f01d f86b 	bl	801da84 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80009ae:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80009b2:	4b08      	ldr	r3, [pc, #32]	@ (80009d4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 80009b4:	3a00      	subs	r2, #0
 80009b6:	bf18      	it	ne
 80009b8:	2201      	movne	r2, #1
 80009ba:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 80009bc:	6803      	ldr	r3, [r0, #0]
    }
 80009be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 80009c2:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80009c6:	4718      	bx	r3
 80009c8:	0801ebe0 	.word	0x0801ebe0
 80009cc:	0801ec18 	.word	0x0801ec18
 80009d0:	0801ec66 	.word	0x0801ec66
 80009d4:	200119fa 	.word	0x200119fa

080009d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80009d8:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80009da:	4b09      	ldr	r3, [pc, #36]	@ (8000a00 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80009dc:	881b      	ldrh	r3, [r3, #0]
 80009de:	428b      	cmp	r3, r1
 80009e0:	d803      	bhi.n	80009ea <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80009e2:	4b08      	ldr	r3, [pc, #32]	@ (8000a04 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80009e4:	881b      	ldrh	r3, [r3, #0]
 80009e6:	4293      	cmp	r3, r2
 80009e8:	d905      	bls.n	80009f6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80009ea:	4b07      	ldr	r3, [pc, #28]	@ (8000a08 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80009ec:	4a07      	ldr	r2, [pc, #28]	@ (8000a0c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80009ee:	4808      	ldr	r0, [pc, #32]	@ (8000a10 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80009f0:	219e      	movs	r1, #158	@ 0x9e
 80009f2:	f01d f847 	bl	801da84 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80009f6:	4b07      	ldr	r3, [pc, #28]	@ (8000a14 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80009f8:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80009fa:	4b07      	ldr	r3, [pc, #28]	@ (8000a18 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80009fc:	801a      	strh	r2, [r3, #0]
    }
 80009fe:	bd08      	pop	{r3, pc}
 8000a00:	200119f0 	.word	0x200119f0
 8000a04:	200119f2 	.word	0x200119f2
 8000a08:	0801ecab 	.word	0x0801ecab
 8000a0c:	0801ed0e 	.word	0x0801ed0e
 8000a10:	0801ec66 	.word	0x0801ec66
 8000a14:	200119f6 	.word	0x200119f6
 8000a18:	200119f8 	.word	0x200119f8

08000a1c <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 8000a1c:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 8000a1e:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 8000a22:	b118      	cbz	r0, 8000a2c <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 8000a24:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 8000a26:	6803      	ldr	r3, [r0, #0]
 8000a28:	681b      	ldr	r3, [r3, #0]
 8000a2a:	4718      	bx	r3
    }
 8000a2c:	4770      	bx	lr
	...

08000a30 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000a30:	2101      	movs	r1, #1
{
 8000a32:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000a34:	2200      	movs	r2, #0
 8000a36:	4608      	mov	r0, r1
 8000a38:	f006 fdd3 	bl	80075e2 <osSemaphoreNew>
 8000a3c:	4b0a      	ldr	r3, [pc, #40]	@ (8000a68 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000a3e:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000a40:	b928      	cbnz	r0, 8000a4e <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000a42:	4b0a      	ldr	r3, [pc, #40]	@ (8000a6c <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000a44:	4a0a      	ldr	r2, [pc, #40]	@ (8000a70 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000a46:	2128      	movs	r1, #40	@ 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000a48:	480a      	ldr	r0, [pc, #40]	@ (8000a74 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000a4a:	f01d f81b 	bl	801da84 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000a4e:	2200      	movs	r2, #0
 8000a50:	2104      	movs	r1, #4
 8000a52:	2001      	movs	r0, #1
 8000a54:	f006 fe6d 	bl	8007732 <osMessageQueueNew>
 8000a58:	4b07      	ldr	r3, [pc, #28]	@ (8000a78 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000a5a:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000a5c:	b918      	cbnz	r0, 8000a66 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000a5e:	4b07      	ldr	r3, [pc, #28]	@ (8000a7c <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000a60:	4a03      	ldr	r2, [pc, #12]	@ (8000a70 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000a62:	212c      	movs	r1, #44	@ 0x2c
 8000a64:	e7f0      	b.n	8000a48 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000a66:	bd08      	pop	{r3, pc}
 8000a68:	200001a4 	.word	0x200001a4
 8000a6c:	0801ee2c 	.word	0x0801ee2c
 8000a70:	0801ee75 	.word	0x0801ee75
 8000a74:	0801eea4 	.word	0x0801eea4
 8000a78:	200001a0 	.word	0x200001a0
 8000a7c:	0801eef3 	.word	0x0801eef3

08000a80 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000a80:	4b02      	ldr	r3, [pc, #8]	@ (8000a8c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000a82:	f04f 31ff 	mov.w	r1, #4294967295
 8000a86:	6818      	ldr	r0, [r3, #0]
 8000a88:	f006 bdf5 	b.w	8007676 <osSemaphoreAcquire>
 8000a8c:	200001a4 	.word	0x200001a4

08000a90 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000a90:	4b01      	ldr	r3, [pc, #4]	@ (8000a98 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000a92:	6818      	ldr	r0, [r3, #0]
 8000a94:	f006 be1b 	b.w	80076ce <osSemaphoreRelease>
 8000a98:	200001a4 	.word	0x200001a4

08000a9c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000a9c:	4b02      	ldr	r3, [pc, #8]	@ (8000aa8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000a9e:	2100      	movs	r1, #0
 8000aa0:	6818      	ldr	r0, [r3, #0]
 8000aa2:	f006 bde8 	b.w	8007676 <osSemaphoreAcquire>
 8000aa6:	bf00      	nop
 8000aa8:	200001a4 	.word	0x200001a4

08000aac <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 8000aac:	f7ff bff0 	b.w	8000a90 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000ab0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000ab0:	4803      	ldr	r0, [pc, #12]	@ (8000ac0 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000ab2:	4904      	ldr	r1, [pc, #16]	@ (8000ac4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000ab4:	6800      	ldr	r0, [r0, #0]
 8000ab6:	2300      	movs	r3, #0
 8000ab8:	461a      	mov	r2, r3
 8000aba:	f006 be75 	b.w	80077a8 <osMessageQueuePut>
 8000abe:	bf00      	nop
 8000ac0:	200001a0 	.word	0x200001a0
 8000ac4:	20000004 	.word	0x20000004

08000ac8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000ac8:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000aca:	4c08      	ldr	r4, [pc, #32]	@ (8000aec <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000acc:	2300      	movs	r3, #0
 8000ace:	461a      	mov	r2, r3
 8000ad0:	a901      	add	r1, sp, #4
 8000ad2:	6820      	ldr	r0, [r4, #0]
 8000ad4:	f006 fe99 	bl	800780a <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000ad8:	6820      	ldr	r0, [r4, #0]
 8000ada:	f04f 33ff 	mov.w	r3, #4294967295
 8000ade:	2200      	movs	r2, #0
 8000ae0:	a901      	add	r1, sp, #4
 8000ae2:	f006 fe92 	bl	800780a <osMessageQueueGet>
}
 8000ae6:	b002      	add	sp, #8
 8000ae8:	bd10      	pop	{r4, pc}
 8000aea:	bf00      	nop
 8000aec:	200001a0 	.word	0x200001a0

08000af0 <_ZN8touchgfx10OSWrappers9taskDelayEt>:
 * see HAL::setFrameRefreshStrategy(FrameRefreshStrategy s)
 * see HAL::registerTaskDelayFunction(void (*delayF)(uint16_t))
 */
void OSWrappers::taskDelay(uint16_t ms)
{
    osDelay(static_cast<uint32_t>(ms));
 8000af0:	f006 bd6b 	b.w	80075ca <osDelay>

08000af4 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 8000af4:	4770      	bx	lr

08000af6 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 8000af6:	2000      	movs	r0, #0
 8000af8:	4770      	bx	lr

08000afa <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 8000afa:	4770      	bx	lr

08000afc <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 8000afc:	4770      	bx	lr

08000afe <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 8000afe:	2000      	movs	r0, #0
 8000b00:	4770      	bx	lr

08000b02 <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 8000b02:	4770      	bx	lr

08000b04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 8000b04:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8000b06:	4a03      	ldr	r2, [pc, #12]	@ (8000b14 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 8000b08:	4b03      	ldr	r3, [pc, #12]	@ (8000b18 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 8000b0a:	4804      	ldr	r0, [pc, #16]	@ (8000b1c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 8000b0c:	2122      	movs	r1, #34	@ 0x22
 8000b0e:	f01c ffb9 	bl	801da84 <__assert_func>
 8000b12:	bf00      	nop
 8000b14:	0801ef58 	.word	0x0801ef58
 8000b18:	0801ef35 	.word	0x0801ef35
 8000b1c:	0801ef96 	.word	0x0801ef96

08000b20 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 8000b20:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8000b22:	4a03      	ldr	r2, [pc, #12]	@ (8000b30 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 8000b24:	4b03      	ldr	r3, [pc, #12]	@ (8000b34 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 8000b26:	4804      	ldr	r0, [pc, #16]	@ (8000b38 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 8000b28:	2127      	movs	r1, #39	@ 0x27
 8000b2a:	f01c ffab 	bl	801da84 <__assert_func>
 8000b2e:	bf00      	nop
 8000b30:	0801efe3 	.word	0x0801efe3
 8000b34:	0801ef35 	.word	0x0801ef35
 8000b38:	0801ef96 	.word	0x0801ef96

08000b3c <_ZN8STM32DMAD0Ev>:
 8000b3c:	b510      	push	{r4, lr}
 8000b3e:	2144      	movs	r1, #68	@ 0x44
 8000b40:	4604      	mov	r4, r0
 8000b42:	f01c ff71 	bl	801da28 <_ZdlPvj>
 8000b46:	4620      	mov	r0, r4
 8000b48:	bd10      	pop	{r4, pc}
	...

08000b4c <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000b4c:	b538      	push	{r3, r4, r5, lr}
 8000b4e:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 8000b50:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000b52:	2500      	movs	r5, #0
 8000b54:	4b06      	ldr	r3, [pc, #24]	@ (8000b70 <_ZN8STM32DMAC1Ev+0x24>)
 8000b56:	7225      	strb	r5, [r4, #8]
 8000b58:	300c      	adds	r0, #12
 8000b5a:	6060      	str	r0, [r4, #4]
 8000b5c:	7265      	strb	r5, [r4, #9]
 8000b5e:	2201      	movs	r2, #1
 8000b60:	f841 3b20 	str.w	r3, [r1], #32
 8000b64:	f009 ff68 	bl	800aa38 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000b68:	62e5      	str	r5, [r4, #44]	@ 0x2c
}
 8000b6a:	4620      	mov	r0, r4
 8000b6c:	bd38      	pop	{r3, r4, r5, pc}
 8000b6e:	bf00      	nop
 8000b70:	0801f02c 	.word	0x0801f02c

08000b74 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000b74:	2001      	movs	r0, #1
 8000b76:	4770      	bx	lr

08000b78 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000b78:	2040      	movs	r0, #64	@ 0x40
 8000b7a:	4770      	bx	lr

08000b7c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000b7c:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
 8000b80:	3008      	adds	r0, #8
 8000b82:	4770      	bx	lr

08000b84 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000b84:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
 8000b88:	3008      	adds	r0, #8
 8000b8a:	4770      	bx	lr

08000b8c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000b8c:	2001      	movs	r0, #1
 8000b8e:	4770      	bx	lr

08000b90 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000b90:	f44f 703e 	mov.w	r0, #760	@ 0x2f8
 8000b94:	4770      	bx	lr

08000b96 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000b96:	f44f 733e 	mov.w	r3, #760	@ 0x2f8
 8000b9a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000b9e:	3008      	adds	r0, #8
 8000ba0:	4770      	bx	lr

08000ba2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000ba2:	f44f 733e 	mov.w	r3, #760	@ 0x2f8
 8000ba6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000baa:	3008      	adds	r0, #8
 8000bac:	4770      	bx	lr

08000bae <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000bae:	2001      	movs	r0, #1
 8000bb0:	4770      	bx	lr

08000bb2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000bb2:	2010      	movs	r0, #16
 8000bb4:	4770      	bx	lr

08000bb6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000bb6:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000bba:	3008      	adds	r0, #8
 8000bbc:	4770      	bx	lr

08000bbe <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000bbe:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000bc2:	3008      	adds	r0, #8
 8000bc4:	4770      	bx	lr

08000bc6 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8000bc6:	4608      	mov	r0, r1
 8000bc8:	f001 be62 	b.w	8002890 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08000bcc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000bcc:	b510      	push	{r4, lr}
 8000bce:	4b03      	ldr	r3, [pc, #12]	@ (8000bdc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000bd0:	6003      	str	r3, [r0, #0]
 8000bd2:	4604      	mov	r4, r0
 8000bd4:	f008 fdb3 	bl	800973e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000bd8:	4620      	mov	r0, r4
 8000bda:	bd10      	pop	{r4, pc}
 8000bdc:	0801f0e4 	.word	0x0801f0e4

08000be0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000be0:	b510      	push	{r4, lr}
 8000be2:	4604      	mov	r4, r0
 8000be4:	f7ff fff2 	bl	8000bcc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000be8:	4620      	mov	r0, r4
 8000bea:	2148      	movs	r1, #72	@ 0x48
 8000bec:	f01c ff1c 	bl	801da28 <_ZdlPvj>
 8000bf0:	4620      	mov	r0, r4
 8000bf2:	bd10      	pop	{r4, pc}

08000bf4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000bf4:	b510      	push	{r4, lr}
 8000bf6:	4b03      	ldr	r3, [pc, #12]	@ (8000c04 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000bf8:	6003      	str	r3, [r0, #0]
 8000bfa:	4604      	mov	r4, r0
 8000bfc:	f008 fd9f 	bl	800973e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000c00:	4620      	mov	r0, r4
 8000c02:	bd10      	pop	{r4, pc}
 8000c04:	0801f0b0 	.word	0x0801f0b0

08000c08 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000c08:	b510      	push	{r4, lr}
 8000c0a:	4604      	mov	r4, r0
 8000c0c:	f7ff fff2 	bl	8000bf4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000c10:	4620      	mov	r0, r4
 8000c12:	f44f 7140 	mov.w	r1, #768	@ 0x300
 8000c16:	f01c ff07 	bl	801da28 <_ZdlPvj>
 8000c1a:	4620      	mov	r0, r4
 8000c1c:	bd10      	pop	{r4, pc}
	...

08000c20 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000c20:	b510      	push	{r4, lr}
 8000c22:	4b03      	ldr	r3, [pc, #12]	@ (8000c30 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000c24:	6003      	str	r3, [r0, #0]
 8000c26:	4604      	mov	r4, r0
 8000c28:	f008 fd89 	bl	800973e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000c2c:	4620      	mov	r0, r4
 8000c2e:	bd10      	pop	{r4, pc}
 8000c30:	0801f07c 	.word	0x0801f07c

08000c34 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000c34:	b510      	push	{r4, lr}
 8000c36:	4604      	mov	r4, r0
 8000c38:	f7ff fff2 	bl	8000c20 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000c3c:	4620      	mov	r0, r4
 8000c3e:	2118      	movs	r1, #24
 8000c40:	f01c fef2 	bl	801da28 <_ZdlPvj>
 8000c44:	4620      	mov	r0, r4
 8000c46:	bd10      	pop	{r4, pc}

08000c48 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000c48:	b510      	push	{r4, lr}
 8000c4a:	4b08      	ldr	r3, [pc, #32]	@ (8000c6c <_ZN12FrontendHeapD1Ev+0x24>)
 8000c4c:	6003      	str	r3, [r0, #0]
 8000c4e:	4604      	mov	r4, r0
 8000c50:	f500 704b 	add.w	r0, r0, #812	@ 0x32c
 8000c54:	f7ff ffba 	bl	8000bcc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000c58:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 8000c5c:	f7ff ffca 	bl	8000bf4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000c60:	f104 0014 	add.w	r0, r4, #20
 8000c64:	f7ff ffdc 	bl	8000c20 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000c68:	4620      	mov	r0, r4
 8000c6a:	bd10      	pop	{r4, pc}
 8000c6c:	0801f118 	.word	0x0801f118

08000c70 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000c70:	b508      	push	{r3, lr}
 8000c72:	4802      	ldr	r0, [pc, #8]	@ (8000c7c <__tcf_0+0xc>)
 8000c74:	f7ff ffe8 	bl	8000c48 <_ZN12FrontendHeapD1Ev>
 8000c78:	bd08      	pop	{r3, pc}
 8000c7a:	bf00      	nop
 8000c7c:	200002fc 	.word	0x200002fc

08000c80 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000c80:	b510      	push	{r4, lr}
 8000c82:	4604      	mov	r4, r0
 8000c84:	f7ff ffe0 	bl	8000c48 <_ZN12FrontendHeapD1Ev>
 8000c88:	4620      	mov	r0, r4
 8000c8a:	f240 41dc 	movw	r1, #1244	@ 0x4dc
 8000c8e:	f01c fecb 	bl	801da28 <_ZdlPvj>
 8000c92:	4620      	mov	r0, r4
 8000c94:	bd10      	pop	{r4, pc}
	...

08000c98 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000c98:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000c9c:	f001 f902 	bl	8001ea4 <_ZN14BitmapDatabase11getInstanceEv>
 8000ca0:	4605      	mov	r5, r0
 8000ca2:	f001 f903 	bl	8001eac <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000ca6:	2400      	movs	r4, #0
 8000ca8:	4601      	mov	r1, r0
 8000caa:	4623      	mov	r3, r4
 8000cac:	4628      	mov	r0, r5
 8000cae:	4622      	mov	r2, r4
 8000cb0:	9400      	str	r4, [sp, #0]
 8000cb2:	f00f fa25 	bl	8010100 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000cb6:	4b25      	ldr	r3, [pc, #148]	@ (8000d4c <touchgfx_init+0xb4>)
 8000cb8:	4a25      	ldr	r2, [pc, #148]	@ (8000d50 <touchgfx_init+0xb8>)
        static FrontendHeap instance;
 8000cba:	4d26      	ldr	r5, [pc, #152]	@ (8000d54 <touchgfx_init+0xbc>)
 8000cbc:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000cbe:	4620      	mov	r0, r4
 8000cc0:	f002 fe46 	bl	8003950 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000cc4:	4824      	ldr	r0, [pc, #144]	@ (8000d58 <touchgfx_init+0xc0>)
 8000cc6:	f00f f983 	bl	800ffd0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000cca:	682b      	ldr	r3, [r5, #0]
 8000ccc:	f3bf 8f5b 	dmb	ish
 8000cd0:	07db      	lsls	r3, r3, #31
 8000cd2:	d435      	bmi.n	8000d40 <touchgfx_init+0xa8>
 8000cd4:	4628      	mov	r0, r5
 8000cd6:	f01c fea9 	bl	801da2c <__cxa_guard_acquire>
 8000cda:	b388      	cbz	r0, 8000d40 <touchgfx_init+0xa8>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8000cdc:	4c1f      	ldr	r4, [pc, #124]	@ (8000d5c <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000cde:	4b20      	ldr	r3, [pc, #128]	@ (8000d60 <touchgfx_init+0xc8>)
 8000ce0:	6023      	str	r3, [r4, #0]
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8000ce2:	f504 7660 	add.w	r6, r4, #896	@ 0x380
        : presenterStorage(pres),
 8000ce6:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8000cea:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
          transitionStorage(tra),
 8000cee:	f504 774b 	add.w	r7, r4, #812	@ 0x32c
        : presenterStorage(pres),
 8000cf2:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8000cf4:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8000cf8:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8000cfa:	6126      	str	r6, [r4, #16]
 8000cfc:	f008 fd20 	bl	8009740 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000d00:	4b18      	ldr	r3, [pc, #96]	@ (8000d64 <touchgfx_init+0xcc>)
 8000d02:	6163      	str	r3, [r4, #20]
 8000d04:	4640      	mov	r0, r8
 8000d06:	f008 fd1b 	bl	8009740 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000d0a:	4b17      	ldr	r3, [pc, #92]	@ (8000d68 <touchgfx_init+0xd0>)
 8000d0c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000d0e:	4638      	mov	r0, r7
 8000d10:	f008 fd16 	bl	8009740 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000d14:	4b15      	ldr	r3, [pc, #84]	@ (8000d6c <touchgfx_init+0xd4>)
 8000d16:	f8c4 332c 	str.w	r3, [r4, #812]	@ 0x32c
 8000d1a:	f504 705d 	add.w	r0, r4, #884	@ 0x374
 8000d1e:	f002 fe97 	bl	8003a50 <_ZN5ModelC1Ev>
 8000d22:	4622      	mov	r2, r4
 8000d24:	f504 715d 	add.w	r1, r4, #884	@ 0x374
 8000d28:	4630      	mov	r0, r6
 8000d2a:	f002 fe87 	bl	8003a3c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000d2e:	4630      	mov	r0, r6
 8000d30:	f001 fdae 	bl	8002890 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8000d34:	480e      	ldr	r0, [pc, #56]	@ (8000d70 <touchgfx_init+0xd8>)
 8000d36:	f01c fec3 	bl	801dac0 <atexit>
 8000d3a:	4628      	mov	r0, r5
 8000d3c:	f01c fe82 	bl	801da44 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000d40:	480c      	ldr	r0, [pc, #48]	@ (8000d74 <touchgfx_init+0xdc>)
}
 8000d42:	b002      	add	sp, #8
 8000d44:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000d48:	f7ff bdb8 	b.w	80008bc <_ZN11TouchGFXHAL10initializeEv>
 8000d4c:	20011a58 	.word	0x20011a58
 8000d50:	20000224 	.word	0x20000224
 8000d54:	200002f8 	.word	0x200002f8
 8000d58:	20000008 	.word	0x20000008
 8000d5c:	200002fc 	.word	0x200002fc
 8000d60:	0801f118 	.word	0x0801f118
 8000d64:	0801f07c 	.word	0x0801f07c
 8000d68:	0801f0b0 	.word	0x0801f0b0
 8000d6c:	0801f0e4 	.word	0x0801f0e4
 8000d70:	08000c71 	.word	0x08000c71
 8000d74:	200001a8 	.word	0x200001a8

08000d78 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8000d78:	4770      	bx	lr
	...

08000d7c <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000d7c:	4801      	ldr	r0, [pc, #4]	@ (8000d84 <touchgfx_taskEntry+0x8>)
 8000d7e:	f7ff bdab 	b.w	80008d8 <_ZN11TouchGFXHAL9taskEntryEv>
 8000d82:	bf00      	nop
 8000d84:	200001a8 	.word	0x200001a8

08000d88 <_GLOBAL__sub_I_touchgfx_init>:
}
 8000d88:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8000d8a:	4e22      	ldr	r6, [pc, #136]	@ (8000e14 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8000d8c:	4c22      	ldr	r4, [pc, #136]	@ (8000e18 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 8000d8e:	4d23      	ldr	r5, [pc, #140]	@ (8000e1c <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8000d90:	4b23      	ldr	r3, [pc, #140]	@ (8000e20 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8000d92:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000d94:	4630      	mov	r0, r6
 8000d96:	f7ff fed9 	bl	8000b4c <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000d9a:	4628      	mov	r0, r5
 8000d9c:	f013 fc82 	bl	80146a4 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8000da0:	4b20      	ldr	r3, [pc, #128]	@ (8000e24 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000da2:	4821      	ldr	r0, [pc, #132]	@ (8000e28 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8000da4:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8000da6:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8000da8:	f44f 7180 	mov.w	r1, #256	@ 0x100
          auxiliaryLCD(0),
 8000dac:	e9c3 1212 	strd	r1, r2, [r3, #72]	@ 0x48
          touchSampleRate(1),
 8000db0:	491e      	ldr	r1, [pc, #120]	@ (8000e2c <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000db2:	861a      	strh	r2, [r3, #48]	@ 0x30
          vSyncCompensationEnabled(false),
 8000db4:	e9c3 121a 	strd	r1, r2, [r3, #104]	@ 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8000db8:	491d      	ldr	r1, [pc, #116]	@ (8000e30 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8000dba:	6799      	str	r1, [r3, #120]	@ 0x78
        instance = this;
 8000dbc:	491d      	ldr	r1, [pc, #116]	@ (8000e34 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 8000dbe:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
        instance = this;
 8000dc2:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000dc4:	21f0      	movs	r1, #240	@ 0xf0
 8000dc6:	8001      	strh	r1, [r0, #0]
 8000dc8:	481b      	ldr	r0, [pc, #108]	@ (8000e38 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 8000dca:	665a      	str	r2, [r3, #100]	@ 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000dcc:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000dce:	481b      	ldr	r0, [pc, #108]	@ (8000e3c <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 8000dd0:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000dd4:	f44f 71a0 	mov.w	r1, #320	@ 0x140
          buttonController(0),
 8000dd8:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8000ddc:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000de0:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000de4:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
          frameBuffer0(0),
 8000de8:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
 8000dec:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000df0:	e9c3 2214 	strd	r2, r2, [r3, #80]	@ 0x50
          lastX(0),
 8000df4:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
          cc_begin(0),
 8000df8:	675a      	str	r2, [r3, #116]	@ 0x74
          lcdRef(display),
 8000dfa:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000dfe:	8001      	strh	r1, [r0, #0]
 8000e00:	480f      	ldr	r0, [pc, #60]	@ (8000e40 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8000e02:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8000e04:	490f      	ldr	r1, [pc, #60]	@ (8000e44 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000e06:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000e08:	2201      	movs	r2, #1
 8000e0a:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000e0e:	4a0e      	ldr	r2, [pc, #56]	@ (8000e48 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000e10:	601a      	str	r2, [r3, #0]
}
 8000e12:	bd70      	pop	{r4, r5, r6, pc}
 8000e14:	200002b0 	.word	0x200002b0
 8000e18:	200002f4 	.word	0x200002f4
 8000e1c:	20000228 	.word	0x20000228
 8000e20:	0801ebd0 	.word	0x0801ebd0
 8000e24:	200001a8 	.word	0x200001a8
 8000e28:	200119f0 	.word	0x200119f0
 8000e2c:	01000001 	.word	0x01000001
 8000e30:	01010000 	.word	0x01010000
 8000e34:	200119fc 	.word	0x200119fc
 8000e38:	200119f6 	.word	0x200119f6
 8000e3c:	200119f2 	.word	0x200119f2
 8000e40:	200119f8 	.word	0x200119f8
 8000e44:	200119f4 	.word	0x200119f4
 8000e48:	0801ed5c 	.word	0x0801ed5c

08000e4c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000e4c:	4b02      	ldr	r3, [pc, #8]	@ (8000e58 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8000e4e:	2290      	movs	r2, #144	@ 0x90
 8000e50:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8000e54:	4770      	bx	lr
 8000e56:	bf00      	nop
 8000e58:	e000e100 	.word	0xe000e100

08000e5c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8000e5c:	4a09      	ldr	r2, [pc, #36]	@ (8000e84 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8000e5e:	490a      	ldr	r1, [pc, #40]	@ (8000e88 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8000e60:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8000e62:	480a      	ldr	r0, [pc, #40]	@ (8000e8c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8000e64:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8000e68:	3b01      	subs	r3, #1
 8000e6a:	b29b      	uxth	r3, r3
 8000e6c:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8000e6e:	6911      	ldr	r1, [r2, #16]
 8000e70:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8000e74:	3901      	subs	r1, #1
 8000e76:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8000e78:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8000e7a:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8000e7c:	f043 0301 	orr.w	r3, r3, #1
 8000e80:	6353      	str	r3, [r2, #52]	@ 0x34
}
 8000e82:	4770      	bx	lr
 8000e84:	40016800 	.word	0x40016800
 8000e88:	200007da 	.word	0x200007da
 8000e8c:	200007d8 	.word	0x200007d8

08000e90 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8000e90:	4b01      	ldr	r3, [pc, #4]	@ (8000e98 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8000e92:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 8000e96:	4770      	bx	lr
 8000e98:	40016800 	.word	0x40016800

08000e9c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8000e9c:	4b02      	ldr	r3, [pc, #8]	@ (8000ea8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000e9e:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8000ea0:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000ea4:	625a      	str	r2, [r3, #36]	@ 0x24
}
 8000ea6:	4770      	bx	lr
 8000ea8:	40016800 	.word	0x40016800

08000eac <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv>:
{
    // This function only requires an implementation if single buffering
    // on LTDC display is being used (REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL).

    // The CPSR register (bits 15:0) specify current line of TFT controller.
    uint16_t curr = (uint16_t)(LTDC->CPSR & 0xffff);
 8000eac:	4b06      	ldr	r3, [pc, #24]	@ (8000ec8 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x1c>)
 8000eae:	6c58      	ldr	r0, [r3, #68]	@ 0x44
    uint16_t backPorchY = (uint16_t)(LTDC->BPCR & 0x7FF) + 1;
 8000eb0:	68db      	ldr	r3, [r3, #12]
 8000eb2:	f3c3 030a 	ubfx	r3, r3, #0, #11
    uint16_t curr = (uint16_t)(LTDC->CPSR & 0xffff);
 8000eb6:	b280      	uxth	r0, r0
    uint16_t backPorchY = (uint16_t)(LTDC->BPCR & 0x7FF) + 1;
 8000eb8:	3301      	adds	r3, #1

    // The semantics of the getTFTCurrentLine() function is to return a value
    // in the range of 0-totalheight. If we are still in back porch area, return 0.
    return (curr < backPorchY) ? 0 : (curr - backPorchY);
 8000eba:	4298      	cmp	r0, r3
 8000ebc:	bf26      	itte	cs
 8000ebe:	1ac0      	subcs	r0, r0, r3
 8000ec0:	b280      	uxthcs	r0, r0
 8000ec2:	2000      	movcc	r0, #0
}
 8000ec4:	4770      	bx	lr
 8000ec6:	bf00      	nop
 8000ec8:	40016800 	.word	0x40016800

08000ecc <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8000ecc:	f008 bf1e 	b.w	8009d0c <_ZN8touchgfx3HAL10beginFrameEv>

08000ed0 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8000ed0:	f008 bf28 	b.w	8009d24 <_ZN8touchgfx3HAL8endFrameEv>

08000ed4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:
    HAL::flushFrameBuffer(rect);
 8000ed4:	f008 bee4 	b.w	8009ca0 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08000ed8 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
    return HAL::blockCopy(dest, src, numBytes);
 8000ed8:	f009 b845 	b.w	8009f66 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08000edc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000edc:	4b04      	ldr	r3, [pc, #16]	@ (8000ef0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 8000ede:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8000ee2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000ee6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000eea:	f3bf 8f6f 	isb	sy
}
 8000eee:	4770      	bx	lr
 8000ef0:	e000e100 	.word	0xe000e100

08000ef4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000ef4:	4b02      	ldr	r3, [pc, #8]	@ (8000f00 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 8000ef6:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8000efa:	609a      	str	r2, [r3, #8]
}
 8000efc:	4770      	bx	lr
 8000efe:	bf00      	nop
 8000f00:	e000e100 	.word	0xe000e100

08000f04 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8000f04:	b570      	push	{r4, r5, r6, lr}
 8000f06:	4604      	mov	r4, r0
    HAL::initialize();
 8000f08:	f008 ff19 	bl	8009d3e <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8000f0c:	6823      	ldr	r3, [r4, #0]
 8000f0e:	6e5d      	ldr	r5, [r3, #100]	@ 0x64
 8000f10:	f00c f822 	bl	800cf58 <_ZN8touchgfx11Application11getInstanceEv>
 8000f14:	4601      	mov	r1, r0
 8000f16:	4620      	mov	r0, r4
 8000f18:	47a8      	blx	r5
        taskDelayFunc = delayF;
 8000f1a:	4b0e      	ldr	r3, [pc, #56]	@ (8000f54 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x50>)
 8000f1c:	63a3      	str	r3, [r4, #56]	@ 0x38
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 8000f1e:	6823      	ldr	r3, [r4, #0]
 8000f20:	4620      	mov	r0, r4
 8000f22:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8000f26:	4798      	blx	r3
 8000f28:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8000f2c:	4298      	cmp	r0, r3
 8000f2e:	d005      	beq.n	8000f3c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x38>
 8000f30:	4b09      	ldr	r3, [pc, #36]	@ (8000f58 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x54>)
 8000f32:	781b      	ldrb	r3, [r3, #0]
 8000f34:	b913      	cbnz	r3, 8000f3c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x38>
                refreshStrategy = s;
 8000f36:	2301      	movs	r3, #1
 8000f38:	f884 3048 	strb.w	r3, [r4, #72]	@ 0x48
    setFrameBufferStartAddresses((void*)0xD0000000, (void*)0, (void*)0);
 8000f3c:	6823      	ldr	r3, [r4, #0]
 8000f3e:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
 8000f42:	2300      	movs	r3, #0
 8000f44:	4620      	mov	r0, r4
 8000f46:	46ac      	mov	ip, r5
 8000f48:	461a      	mov	r2, r3
}
 8000f4a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)0xD0000000, (void*)0, (void*)0);
 8000f4e:	f04f 4150 	mov.w	r1, #3489660928	@ 0xd0000000
 8000f52:	4760      	bx	ip
 8000f54:	08000af1 	.word	0x08000af1
 8000f58:	200119fa 	.word	0x200119fa

08000f5c <HAL_LTDC_LineEventCallback>:

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8000f5c:	b510      	push	{r4, lr}
        return instance;
 8000f5e:	4c14      	ldr	r4, [pc, #80]	@ (8000fb0 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8000f60:	6823      	ldr	r3, [r4, #0]
 8000f62:	b323      	cbz	r3, 8000fae <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8000f64:	4b13      	ldr	r3, [pc, #76]	@ (8000fb4 <HAL_LTDC_LineEventCallback+0x58>)
 8000f66:	4a14      	ldr	r2, [pc, #80]	@ (8000fb8 <HAL_LTDC_LineEventCallback+0x5c>)
 8000f68:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000f6a:	8811      	ldrh	r1, [r2, #0]
 8000f6c:	428b      	cmp	r3, r1
 8000f6e:	d113      	bne.n	8000f98 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8000f70:	4b12      	ldr	r3, [pc, #72]	@ (8000fbc <HAL_LTDC_LineEventCallback+0x60>)
 8000f72:	8819      	ldrh	r1, [r3, #0]
 8000f74:	f005 f84c 	bl	8006010 <HAL_LTDC_ProgramLineEvent>
 8000f78:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8000f7a:	f892 306a 	ldrb.w	r3, [r2, #106]	@ 0x6a
 8000f7e:	3301      	adds	r3, #1
 8000f80:	f882 306a 	strb.w	r3, [r2, #106]	@ 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8000f84:	f7ff fd94 	bl	8000ab0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8000f88:	6820      	ldr	r0, [r4, #0]
 8000f8a:	f009 fc17 	bl	800a7bc <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8000f8e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8000f92:	2000      	movs	r0, #0
 8000f94:	f7ff bbdc 	b.w	8000750 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8000f98:	f005 f83a 	bl	8006010 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8000f9c:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8000f9e:	6803      	ldr	r3, [r0, #0]
 8000fa0:	6a1b      	ldr	r3, [r3, #32]
 8000fa2:	4798      	blx	r3
    }
 8000fa4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000fa8:	2000      	movs	r0, #0
 8000faa:	f7ff bbfb 	b.w	80007a4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8000fae:	bd10      	pop	{r4, pc}
 8000fb0:	200119fc 	.word	0x200119fc
 8000fb4:	40016800 	.word	0x40016800
 8000fb8:	200007da 	.word	0x200007da
 8000fbc:	200007d8 	.word	0x200007d8

08000fc0 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8000fc0:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;

  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8000fc2:	4b06      	ldr	r3, [pc, #24]	@ (8000fdc <SPI5_Write+0x1c>)
{
 8000fc4:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8000fc8:	681b      	ldr	r3, [r3, #0]
 8000fca:	4805      	ldr	r0, [pc, #20]	@ (8000fe0 <SPI5_Write+0x20>)
 8000fcc:	2201      	movs	r2, #1
 8000fce:	f10d 0106 	add.w	r1, sp, #6
 8000fd2:	f005 fd93 	bl	8006afc <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 8000fd6:	b003      	add	sp, #12
 8000fd8:	f85d fb04 	ldr.w	pc, [sp], #4
 8000fdc:	2000000c 	.word	0x2000000c
 8000fe0:	2000086c 	.word	0x2000086c

08000fe4 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8000fe4:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
	for(;;)
	{
		HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 8000fe6:	4c05      	ldr	r4, [pc, #20]	@ (8000ffc <StartDefaultTask+0x18>)
 8000fe8:	4620      	mov	r0, r4
 8000fea:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000fee:	f004 fa02 	bl	80053f6 <HAL_GPIO_TogglePin>
		osDelay(500);
 8000ff2:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 8000ff6:	f006 fae8 	bl	80075ca <osDelay>
	for(;;)
 8000ffa:	e7f5      	b.n	8000fe8 <StartDefaultTask+0x4>
 8000ffc:	40021800 	.word	0x40021800

08001000 <start_hardware_polling_task>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_start_hardware_polling_task */
void start_hardware_polling_task(void *argument)
{
 8001000:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  /* USER CODE BEGIN start_hardware_polling_task */
  /* Infinite loop */
	uint8_t data[] = {0, 0, 0, 0};
 8001002:	2300      	movs	r3, #0
		if (HAL_GPIO_ReadPin(B1_GPIO_Port, B1_Pin) == GPIO_PIN_SET)
		{
		  osMessageQueuePut(joyStickQueueHandle, &data, 0, 10);
		}

		HAL_ADC_Start(&hadc1);
 8001004:	4e19      	ldr	r6, [pc, #100]	@ (800106c <start_hardware_polling_task+0x6c>)
		HAL_ADC_Start(&hadc2);
 8001006:	4d1a      	ldr	r5, [pc, #104]	@ (8001070 <start_hardware_polling_task+0x70>)
	uint8_t data[] = {0, 0, 0, 0};
 8001008:	9300      	str	r3, [sp, #0]
		if (HAL_GPIO_ReadPin(B1_GPIO_Port, B1_Pin) == GPIO_PIN_SET)
 800100a:	481a      	ldr	r0, [pc, #104]	@ (8001074 <start_hardware_polling_task+0x74>)
 800100c:	4f1a      	ldr	r7, [pc, #104]	@ (8001078 <start_hardware_polling_task+0x78>)
 800100e:	2101      	movs	r1, #1
 8001010:	f004 f9e6 	bl	80053e0 <HAL_GPIO_ReadPin>
 8001014:	2801      	cmp	r0, #1
 8001016:	d105      	bne.n	8001024 <start_hardware_polling_task+0x24>
		  osMessageQueuePut(joyStickQueueHandle, &data, 0, 10);
 8001018:	6838      	ldr	r0, [r7, #0]
 800101a:	230a      	movs	r3, #10
 800101c:	2200      	movs	r2, #0
 800101e:	4669      	mov	r1, sp
 8001020:	f006 fbc2 	bl	80077a8 <osMessageQueuePut>
		HAL_ADC_Start(&hadc1);
 8001024:	4630      	mov	r0, r6
 8001026:	f003 fc5b 	bl	80048e0 <HAL_ADC_Start>
		HAL_ADC_Start(&hadc2);
 800102a:	4628      	mov	r0, r5
 800102c:	f003 fc58 	bl	80048e0 <HAL_ADC_Start>
		HAL_ADC_PollForConversion(&hadc1, 1);
 8001030:	2101      	movs	r1, #1
 8001032:	4630      	mov	r0, r6
 8001034:	f003 fcd2 	bl	80049dc <HAL_ADC_PollForConversion>
		HAL_ADC_PollForConversion(&hadc2, 1);
 8001038:	2101      	movs	r1, #1
 800103a:	4628      	mov	r0, r5
 800103c:	f003 fcce 	bl	80049dc <HAL_ADC_PollForConversion>
		JoystickX = HAL_ADC_GetValue(&hadc1);
 8001040:	4630      	mov	r0, r6
 8001042:	f003 fd1e 	bl	8004a82 <HAL_ADC_GetValue>
 8001046:	4604      	mov	r4, r0
		JoystickY = HAL_ADC_GetValue(&hadc2);
 8001048:	4628      	mov	r0, r5
 800104a:	f003 fd1a 	bl	8004a82 <HAL_ADC_GetValue>
		Joystick = (JoystickY << 16) | JoystickX;
 800104e:	b2a4      	uxth	r4, r4
 8001050:	ea44 4400 	orr.w	r4, r4, r0, lsl #16
		osMessageQueuePut(joyStickQueueHandle, &Joystick, 0, 10);
 8001054:	230a      	movs	r3, #10
 8001056:	6838      	ldr	r0, [r7, #0]
		Joystick = (JoystickY << 16) | JoystickX;
 8001058:	9401      	str	r4, [sp, #4]
		osMessageQueuePut(joyStickQueueHandle, &Joystick, 0, 10);
 800105a:	2200      	movs	r2, #0
 800105c:	a901      	add	r1, sp, #4
 800105e:	f006 fba3 	bl	80077a8 <osMessageQueuePut>
		osDelay(100);
 8001062:	2064      	movs	r0, #100	@ 0x64
 8001064:	f006 fab1 	bl	80075ca <osDelay>
		if (HAL_GPIO_ReadPin(B1_GPIO_Port, B1_Pin) == GPIO_PIN_SET)
 8001068:	e7cf      	b.n	800100a <start_hardware_polling_task+0xa>
 800106a:	bf00      	nop
 800106c:	20000a50 	.word	0x20000a50
 8001070:	20000a08 	.word	0x20000a08
 8001074:	40020000 	.word	0x40020000
 8001078:	200007e0 	.word	0x200007e0

0800107c <SystemClock_Config>:
{
 800107c:	b530      	push	{r4, r5, lr}
 800107e:	b095      	sub	sp, #84	@ 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001080:	2210      	movs	r2, #16
 8001082:	2100      	movs	r1, #0
 8001084:	a80a      	add	r0, sp, #40	@ 0x28
 8001086:	f01c ff04 	bl	801de92 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800108a:	2214      	movs	r2, #20
 800108c:	2100      	movs	r1, #0
 800108e:	a803      	add	r0, sp, #12
 8001090:	f01c feff 	bl	801de92 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001094:	2400      	movs	r4, #0
 8001096:	4b1d      	ldr	r3, [pc, #116]	@ (800110c <SystemClock_Config+0x90>)
 8001098:	9401      	str	r4, [sp, #4]
 800109a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800109c:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 80010a0:	641a      	str	r2, [r3, #64]	@ 0x40
 80010a2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80010a4:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80010a8:	9301      	str	r3, [sp, #4]
 80010aa:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80010ac:	4b18      	ldr	r3, [pc, #96]	@ (8001110 <SystemClock_Config+0x94>)
 80010ae:	9402      	str	r4, [sp, #8]
 80010b0:	681a      	ldr	r2, [r3, #0]
 80010b2:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 80010b6:	601a      	str	r2, [r3, #0]
 80010b8:	681b      	ldr	r3, [r3, #0]
 80010ba:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 80010be:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80010c0:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80010c2:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80010c4:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80010c8:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80010cc:	2502      	movs	r5, #2
 80010ce:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 80010d2:	e9cd 530e 	strd	r5, r3, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 80010d6:	2108      	movs	r1, #8
 80010d8:	f44f 73a8 	mov.w	r3, #336	@ 0x150
 80010dc:	e9cd 1310 	strd	r1, r3, [sp, #64]	@ 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80010e0:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80010e2:	2304      	movs	r3, #4
 80010e4:	9313      	str	r3, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80010e6:	9512      	str	r5, [sp, #72]	@ 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80010e8:	f004 ffb0 	bl	800604c <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80010ec:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80010ee:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80010f2:	f44f 50a0 	mov.w	r0, #5120	@ 0x1400
 80010f6:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80010fa:	e9cd 0306 	strd	r0, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80010fe:	2105      	movs	r1, #5
 8001100:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001102:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001104:	f005 f97e 	bl	8006404 <HAL_RCC_ClockConfig>
}
 8001108:	b015      	add	sp, #84	@ 0x54
 800110a:	bd30      	pop	{r4, r5, pc}
 800110c:	40023800 	.word	0x40023800
 8001110:	40007000 	.word	0x40007000

08001114 <main>:
{
 8001114:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001118:	b09b      	sub	sp, #108	@ 0x6c
  HAL_Init();
 800111a:	f003 fafb 	bl	8004714 <HAL_Init>
  SystemClock_Config();
 800111e:	f7ff ffad 	bl	800107c <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001122:	2214      	movs	r2, #20
 8001124:	2100      	movs	r1, #0
 8001126:	a80d      	add	r0, sp, #52	@ 0x34
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001128:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800112a:	f01c feb2 	bl	801de92 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800112e:	4bc8      	ldr	r3, [pc, #800]	@ (8001450 <main+0x33c>)
 8001130:	9400      	str	r4, [sp, #0]
 8001132:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001134:	48c7      	ldr	r0, [pc, #796]	@ (8001454 <main+0x340>)
  hi2c3.Instance = I2C3;
 8001136:	4ec8      	ldr	r6, [pc, #800]	@ (8001458 <main+0x344>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001138:	f042 0210 	orr.w	r2, r2, #16
 800113c:	631a      	str	r2, [r3, #48]	@ 0x30
 800113e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001140:	f002 0210 	and.w	r2, r2, #16
 8001144:	9200      	str	r2, [sp, #0]
 8001146:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001148:	9401      	str	r4, [sp, #4]
 800114a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800114c:	f042 0220 	orr.w	r2, r2, #32
 8001150:	631a      	str	r2, [r3, #48]	@ 0x30
 8001152:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001154:	f002 0220 	and.w	r2, r2, #32
 8001158:	9201      	str	r2, [sp, #4]
 800115a:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800115c:	9402      	str	r4, [sp, #8]
 800115e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001160:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8001164:	631a      	str	r2, [r3, #48]	@ 0x30
 8001166:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001168:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 800116c:	9202      	str	r2, [sp, #8]
 800116e:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001170:	9403      	str	r4, [sp, #12]
 8001172:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001174:	f042 0204 	orr.w	r2, r2, #4
 8001178:	631a      	str	r2, [r3, #48]	@ 0x30
 800117a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800117c:	f002 0204 	and.w	r2, r2, #4
 8001180:	9203      	str	r2, [sp, #12]
 8001182:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001184:	9404      	str	r4, [sp, #16]
 8001186:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001188:	f042 0201 	orr.w	r2, r2, #1
 800118c:	631a      	str	r2, [r3, #48]	@ 0x30
 800118e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001190:	f002 0201 	and.w	r2, r2, #1
 8001194:	9204      	str	r2, [sp, #16]
 8001196:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001198:	9405      	str	r4, [sp, #20]
 800119a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800119c:	f042 0202 	orr.w	r2, r2, #2
 80011a0:	631a      	str	r2, [r3, #48]	@ 0x30
 80011a2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80011a4:	f002 0202 	and.w	r2, r2, #2
 80011a8:	9205      	str	r2, [sp, #20]
 80011aa:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80011ac:	9406      	str	r4, [sp, #24]
 80011ae:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80011b0:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80011b4:	631a      	str	r2, [r3, #48]	@ 0x30
 80011b6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80011b8:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 80011bc:	9206      	str	r2, [sp, #24]
 80011be:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80011c0:	9407      	str	r4, [sp, #28]
 80011c2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80011c4:	f042 0208 	orr.w	r2, r2, #8
 80011c8:	631a      	str	r2, [r3, #48]	@ 0x30
 80011ca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80011cc:	f003 0308 	and.w	r3, r3, #8
 80011d0:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80011d2:	4622      	mov	r2, r4
 80011d4:	213c      	movs	r1, #60	@ 0x3c
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80011d6:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80011d8:	f004 f908 	bl	80053ec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80011dc:	489f      	ldr	r0, [pc, #636]	@ (800145c <main+0x348>)
 80011de:	4622      	mov	r2, r4
 80011e0:	2104      	movs	r1, #4
 80011e2:	f004 f903 	bl	80053ec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80011e6:	489e      	ldr	r0, [pc, #632]	@ (8001460 <main+0x34c>)
 80011e8:	4622      	mov	r2, r4
 80011ea:	f44f 5140 	mov.w	r1, #12288	@ 0x3000
 80011ee:	f004 f8fd 	bl	80053ec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 80011f2:	4622      	mov	r2, r4
 80011f4:	489b      	ldr	r0, [pc, #620]	@ (8001464 <main+0x350>)
 80011f6:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80011fa:	2501      	movs	r5, #1
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 80011fc:	f004 f8f6 	bl	80053ec <HAL_GPIO_WritePin>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001200:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001204:	233c      	movs	r3, #60	@ 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001206:	4893      	ldr	r0, [pc, #588]	@ (8001454 <main+0x340>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001208:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800120c:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800120e:	f04f 0a02 	mov.w	sl, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001212:	2704      	movs	r7, #4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001214:	e9cd 350d 	strd	r3, r5, [sp, #52]	@ 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001218:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800121a:	f003 fffd 	bl	8005218 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800121e:	488f      	ldr	r0, [pc, #572]	@ (800145c <main+0x348>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001220:	f8cd a040 	str.w	sl, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001224:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001226:	e9cd 750d 	strd	r7, r5, [sp, #52]	@ 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800122a:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800122c:	f003 fff4 	bl	8005218 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001230:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001234:	488a      	ldr	r0, [pc, #552]	@ (8001460 <main+0x34c>)
 8001236:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001238:	e9cd 350d 	strd	r3, r5, [sp, #52]	@ 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_13;
 800123c:	f44f 5b00 	mov.w	fp, #8192	@ 0x2000
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001240:	e9cd 4a0f 	strd	r4, sl, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001244:	f003 ffe8 	bl	8005218 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001248:	a90d      	add	r1, sp, #52	@ 0x34
 800124a:	4886      	ldr	r0, [pc, #536]	@ (8001464 <main+0x350>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800124c:	e9cd b50d 	strd	fp, r5, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001250:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001254:	f003 ffe0 	bl	8005218 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001258:	4883      	ldr	r0, [pc, #524]	@ (8001468 <main+0x354>)
 800125a:	4b84      	ldr	r3, [pc, #528]	@ (800146c <main+0x358>)
 800125c:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800125e:	f003 fd01 	bl	8004c64 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001262:	4a83      	ldr	r2, [pc, #524]	@ (8001470 <main+0x35c>)
 8001264:	4b83      	ldr	r3, [pc, #524]	@ (8001474 <main+0x360>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001266:	6234      	str	r4, [r6, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8001268:	e9c6 2300 	strd	r2, r3, [r6]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800126c:	4630      	mov	r0, r6
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800126e:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001272:	e9c6 3404 	strd	r3, r4, [r6, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001276:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800127a:	e9c6 4406 	strd	r4, r4, [r6, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800127e:	f004 fac3 	bl	8005808 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001282:	2110      	movs	r1, #16
 8001284:	4630      	mov	r0, r6
 8001286:	f004 fd07 	bl	8005c98 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 800128a:	4621      	mov	r1, r4
 800128c:	4630      	mov	r0, r6
 800128e:	f004 fd22 	bl	8005cd6 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 8001292:	4879      	ldr	r0, [pc, #484]	@ (8001478 <main+0x364>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001294:	4979      	ldr	r1, [pc, #484]	@ (800147c <main+0x368>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001296:	6284      	str	r4, [r0, #40]	@ 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001298:	f44f 7382 	mov.w	r3, #260	@ 0x104
 800129c:	e9c0 1300 	strd	r1, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 80012a0:	f44f 7600 	mov.w	r6, #512	@ 0x200
 80012a4:	2318      	movs	r3, #24
 80012a6:	e9c0 6306 	strd	r6, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 80012aa:	230a      	movs	r3, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80012ac:	4e74      	ldr	r6, [pc, #464]	@ (8001480 <main+0x36c>)
  hspi5.Init.CRCPolynomial = 10;
 80012ae:	62c3      	str	r3, [r0, #44]	@ 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 80012b0:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 80012b4:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 80012b8:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 80012bc:	f005 fbc2 	bl	8006a44 <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80012c0:	4b70      	ldr	r3, [pc, #448]	@ (8001484 <main+0x370>)
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80012c2:	f8c6 b028 	str.w	fp, [r6, #40]	@ 0x28
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80012c6:	f04f 0810 	mov.w	r8, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 80012ca:	e9c6 3500 	strd	r3, r5, [r6]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80012ce:	2340      	movs	r3, #64	@ 0x40
 80012d0:	e9c6 8304 	strd	r8, r3, [r6, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80012d4:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80012d8:	e9c6 3406 	strd	r3, r4, [r6, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80012dc:	f44f 6300 	mov.w	r3, #2048	@ 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80012e0:	e9c6 3408 	strd	r3, r4, [r6, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80012e4:	a90d      	add	r1, sp, #52	@ 0x34
  SdramTiming.ExitSelfRefreshDelay = 7;
 80012e6:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80012e8:	4630      	mov	r0, r6
  SdramTiming.WriteRecoveryTime = 3;
 80012ea:	e9cd 3910 	strd	r3, r9, [sp, #64]	@ 0x40
  SdramTiming.SelfRefreshTime = 4;
 80012ee:	e9cd 370e 	strd	r3, r7, [sp, #56]	@ 0x38
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80012f2:	f04f 0b08 	mov.w	fp, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80012f6:	e9c6 4702 	strd	r4, r7, [r6, #8]
  SdramTiming.RCDDelay = 2;
 80012fa:	e9cd aa12 	strd	sl, sl, [sp, #72]	@ 0x48
  SdramTiming.LoadToActiveDelay = 2;
 80012fe:	f8cd a034 	str.w	sl, [sp, #52]	@ 0x34
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001302:	f005 fa83 	bl	800680c <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001306:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800130a:	a909      	add	r1, sp, #36	@ 0x24
 800130c:	4630      	mov	r0, r6
  Command->AutoRefreshNumber       = 1;
 800130e:	e9cd b50a 	strd	fp, r5, [sp, #40]	@ 0x28
 __IO uint32_t tmpmrd =0;
 8001312:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8001314:	9509      	str	r5, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8001316:	940c      	str	r4, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001318:	f005 fa98 	bl	800684c <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 800131c:	4628      	mov	r0, r5
 800131e:	f003 fa25 	bl	800476c <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001322:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001326:	a909      	add	r1, sp, #36	@ 0x24
 8001328:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800132a:	e9cd ab09 	strd	sl, fp, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 800132e:	e9cd 540b 	strd	r5, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001332:	f005 fa8b 	bl	800684c <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001336:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800133a:	a909      	add	r1, sp, #36	@ 0x24
 800133c:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800133e:	e9cd 9b09 	strd	r9, fp, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8001342:	e9cd 740b 	strd	r7, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001346:	f005 fa81 	bl	800684c <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 800134a:	f44f 730c 	mov.w	r3, #560	@ 0x230
 800134e:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8001350:	9b08      	ldr	r3, [sp, #32]
 8001352:	930c      	str	r3, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001354:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001358:	a909      	add	r1, sp, #36	@ 0x24
 800135a:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800135c:	e9cd 7b09 	strd	r7, fp, [sp, #36]	@ 0x24
  Command->AutoRefreshNumber       = 1;
 8001360:	950b      	str	r5, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001362:	f005 fa73 	bl	800684c <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001366:	f240 516a 	movw	r1, #1386	@ 0x56a
 800136a:	4630      	mov	r0, r6
 800136c:	f005 fa8c 	bl	8006888 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001370:	2234      	movs	r2, #52	@ 0x34
 8001372:	4621      	mov	r1, r4
 8001374:	eb0d 0002 	add.w	r0, sp, r2
 8001378:	f01c fd8b 	bl	801de92 <memset>
  hltdc.Instance = LTDC;
 800137c:	4e42      	ldr	r6, [pc, #264]	@ (8001488 <main+0x374>)
 800137e:	4b43      	ldr	r3, [pc, #268]	@ (800148c <main+0x378>)
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001380:	6134      	str	r4, [r6, #16]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8001382:	e9c6 3400 	strd	r3, r4, [r6]
  hltdc.Init.HorizontalSync = 9;
 8001386:	2309      	movs	r3, #9
  hltdc.Init.VerticalSync = 1;
 8001388:	e9c6 3505 	strd	r3, r5, [r6, #20]
  hltdc.Init.AccumulatedHBP = 29;
 800138c:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedActiveH = 323;
 800138e:	f240 1c0d 	movw	ip, #269	@ 0x10d
  hltdc.Init.AccumulatedVBP = 3;
 8001392:	e9c6 3907 	strd	r3, r9, [r6, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001396:	f240 1343 	movw	r3, #323	@ 0x143
 800139a:	e9c6 c309 	strd	ip, r3, [r6, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 327;
 800139e:	f240 1e17 	movw	lr, #279	@ 0x117
 80013a2:	f240 1347 	movw	r3, #327	@ 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80013a6:	4630      	mov	r0, r6
  hltdc.Init.TotalHeigh = 327;
 80013a8:	e9c6 e30b 	strd	lr, r3, [r6, #44]	@ 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80013ac:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hltdc.Init.Backcolor.Blue = 0;
 80013b0:	86b4      	strh	r4, [r6, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 80013b2:	f886 4036 	strb.w	r4, [r6, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80013b6:	f004 fd33 	bl	8005e20 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 80013ba:	21ff      	movs	r1, #255	@ 0xff
  pLayerCfg.WindowX1 = 240;
 80013bc:	22f0      	movs	r2, #240	@ 0xf0
  pLayerCfg.Alpha0 = 0;
 80013be:	e9cd 1412 	strd	r1, r4, [sp, #72]	@ 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80013c2:	f04f 0905 	mov.w	r9, #5
 80013c6:	f44f 6180 	mov.w	r1, #1024	@ 0x400
  pLayerCfg.WindowY1 = 320;
 80013ca:	f44f 73a0 	mov.w	r3, #320	@ 0x140
  pLayerCfg.WindowY0 = 0;
 80013ce:	e9cd 240e 	strd	r2, r4, [sp, #56]	@ 0x38
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80013d2:	e9cd 1914 	strd	r1, r9, [sp, #80]	@ 0x50
  pLayerCfg.ImageWidth = 240;
 80013d6:	e9cd 4216 	strd	r4, r2, [sp, #88]	@ 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80013da:	a90d      	add	r1, sp, #52	@ 0x34
 80013dc:	4622      	mov	r2, r4
 80013de:	4630      	mov	r0, r6
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80013e0:	e9cd 3a10 	strd	r3, sl, [sp, #64]	@ 0x40
  LcdDrv = &ili9341_drv;
 80013e4:	4e2a      	ldr	r6, [pc, #168]	@ (8001490 <main+0x37c>)
  pLayerCfg.ImageHeight = 320;
 80013e6:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.WindowX0 = 0;
 80013e8:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.Backcolor.Blue = 0;
 80013ea:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
 80013ee:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80013f2:	f004 fde0 	bl	8005fb6 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 80013f6:	4b27      	ldr	r3, [pc, #156]	@ (8001494 <main+0x380>)
 80013f8:	6033      	str	r3, [r6, #0]
  LcdDrv->Init();
 80013fa:	681b      	ldr	r3, [r3, #0]
 80013fc:	4798      	blx	r3
  LcdDrv->DisplayOff();
 80013fe:	6833      	ldr	r3, [r6, #0]
  hdma2d.Instance = DMA2D;
 8001400:	4e25      	ldr	r6, [pc, #148]	@ (8001498 <main+0x384>)
  LcdDrv->DisplayOff();
 8001402:	68db      	ldr	r3, [r3, #12]
 8001404:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8001406:	4b25      	ldr	r3, [pc, #148]	@ (800149c <main+0x388>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001408:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 800140a:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 800140e:	e9c6 a402 	strd	sl, r4, [r6, #8]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001412:	e9c6 4a0a 	strd	r4, sl, [r6, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001416:	e9c6 440c 	strd	r4, r4, [r6, #48]	@ 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800141a:	f003 fc33 	bl	8004c84 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 800141e:	4629      	mov	r1, r5
 8001420:	4630      	mov	r0, r6
 8001422:	f003 fce7 	bl	8004df4 <HAL_DMA2D_ConfigLayer>
  hadc1.Instance = ADC1;
 8001426:	4e1e      	ldr	r6, [pc, #120]	@ (80014a0 <main+0x38c>)
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001428:	f8df a078 	ldr.w	sl, [pc, #120]	@ 80014a4 <main+0x390>
  ADC_ChannelConfTypeDef sConfig = {0};
 800142c:	4642      	mov	r2, r8
 800142e:	4621      	mov	r1, r4
 8001430:	a80d      	add	r0, sp, #52	@ 0x34
 8001432:	f01c fd2e 	bl	801de92 <memset>
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001436:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 800143a:	e9c6 a300 	strd	sl, r3, [r6]
  hadc1.Init.Resolution = ADC_RESOLUTION_8B;
 800143e:	f04f 7b00 	mov.w	fp, #33554432	@ 0x2000000
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001442:	f8df a064 	ldr.w	sl, [pc, #100]	@ 80014a8 <main+0x394>
  hadc1.Init.Resolution = ADC_RESOLUTION_8B;
 8001446:	f8c6 b008 	str.w	fp, [r6, #8]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 800144a:	4630      	mov	r0, r6
  hadc1.Init.ScanConvMode = DISABLE;
 800144c:	6134      	str	r4, [r6, #16]
 800144e:	e02d      	b.n	80014ac <main+0x398>
 8001450:	40023800 	.word	0x40023800
 8001454:	40021000 	.word	0x40021000
 8001458:	2000096c 	.word	0x2000096c
 800145c:	40020800 	.word	0x40020800
 8001460:	40020c00 	.word	0x40020c00
 8001464:	40021800 	.word	0x40021800
 8001468:	20000a00 	.word	0x20000a00
 800146c:	40023000 	.word	0x40023000
 8001470:	40005c00 	.word	0x40005c00
 8001474:	000186a0 	.word	0x000186a0
 8001478:	2000086c 	.word	0x2000086c
 800147c:	40015000 	.word	0x40015000
 8001480:	200007f0 	.word	0x200007f0
 8001484:	a0000140 	.word	0xa0000140
 8001488:	200008c4 	.word	0x200008c4
 800148c:	40016800 	.word	0x40016800
 8001490:	200007dc 	.word	0x200007dc
 8001494:	20000014 	.word	0x20000014
 8001498:	200009c0 	.word	0x200009c0
 800149c:	4002b000 	.word	0x4002b000
 80014a0:	20000a50 	.word	0x20000a50
 80014a4:	40012000 	.word	0x40012000
 80014a8:	0f000001 	.word	0x0f000001
  hadc1.Init.ContinuousConvMode = DISABLE;
 80014ac:	7634      	strb	r4, [r6, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 80014ae:	f886 4020 	strb.w	r4, [r6, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80014b2:	62f4      	str	r4, [r6, #44]	@ 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80014b4:	f8c6 a028 	str.w	sl, [r6, #40]	@ 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80014b8:	60f4      	str	r4, [r6, #12]
  hadc1.Init.NbrOfConversion = 1;
 80014ba:	61f5      	str	r5, [r6, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 80014bc:	f886 4030 	strb.w	r4, [r6, #48]	@ 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80014c0:	6175      	str	r5, [r6, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80014c2:	f003 f967 	bl	8004794 <HAL_ADC_Init>
  sConfig.Channel = ADC_CHANNEL_13;
 80014c6:	220d      	movs	r2, #13
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80014c8:	a90d      	add	r1, sp, #52	@ 0x34
 80014ca:	4630      	mov	r0, r6
  sConfig.Rank = 1;
 80014cc:	e9cd 250d 	strd	r2, r5, [sp, #52]	@ 0x34
  hadc2.Instance = ADC2;
 80014d0:	4e2c      	ldr	r6, [pc, #176]	@ (8001584 <main+0x470>)
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 80014d2:	940f      	str	r4, [sp, #60]	@ 0x3c
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80014d4:	f003 fad8 	bl	8004a88 <HAL_ADC_ConfigChannel>
  ADC_ChannelConfTypeDef sConfig = {0};
 80014d8:	4621      	mov	r1, r4
 80014da:	4642      	mov	r2, r8
 80014dc:	a80d      	add	r0, sp, #52	@ 0x34
 80014de:	f01c fcd8 	bl	801de92 <memset>
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80014e2:	4a29      	ldr	r2, [pc, #164]	@ (8001588 <main+0x474>)
  hadc2.Init.Resolution = ADC_RESOLUTION_8B;
 80014e4:	f8c6 b008 	str.w	fp, [r6, #8]
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80014e8:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 80014ec:	4630      	mov	r0, r6
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80014ee:	e9c6 2300 	strd	r2, r3, [r6]
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80014f2:	e9c6 a40a 	strd	sl, r4, [r6, #40]	@ 0x28
  hadc2.Init.ScanConvMode = DISABLE;
 80014f6:	6134      	str	r4, [r6, #16]
  hadc2.Init.ContinuousConvMode = DISABLE;
 80014f8:	7634      	strb	r4, [r6, #24]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 80014fa:	f886 4020 	strb.w	r4, [r6, #32]
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80014fe:	60f4      	str	r4, [r6, #12]
  hadc2.Init.NbrOfConversion = 1;
 8001500:	61f5      	str	r5, [r6, #28]
  hadc2.Init.DMAContinuousRequests = DISABLE;
 8001502:	f886 4030 	strb.w	r4, [r6, #48]	@ 0x30
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001506:	6175      	str	r5, [r6, #20]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 8001508:	f003 f944 	bl	8004794 <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 800150c:	a90d      	add	r1, sp, #52	@ 0x34
 800150e:	4630      	mov	r0, r6
  sConfig.Rank = 1;
 8001510:	e9cd 950d 	strd	r9, r5, [sp, #52]	@ 0x34
  huart1.Init.BaudRate = 115200;
 8001514:	f8df b0a4 	ldr.w	fp, [pc, #164]	@ 80015bc <main+0x4a8>
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8001518:	940f      	str	r4, [sp, #60]	@ 0x3c
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 800151a:	f003 fab5 	bl	8004a88 <HAL_ADC_ConfigChannel>
  huart1.Instance = USART1;
 800151e:	481b      	ldr	r0, [pc, #108]	@ (800158c <main+0x478>)
  huart1.Init.BaudRate = 115200;
 8001520:	f44f 33e1 	mov.w	r3, #115200	@ 0x1c200
 8001524:	e9c0 b300 	strd	fp, r3, [r0]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8001528:	230c      	movs	r3, #12
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800152a:	e9c0 3405 	strd	r3, r4, [r0, #20]
  huart1.Init.StopBits = UART_STOPBITS_1;
 800152e:	e9c0 4402 	strd	r4, r4, [r0, #8]
  huart1.Init.Parity = UART_PARITY_NONE;
 8001532:	6104      	str	r4, [r0, #16]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8001534:	61c4      	str	r4, [r0, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8001536:	f005 fefd 	bl	8007334 <HAL_UART_Init>
  MX_TouchGFX_Init();
 800153a:	f7ff f84b 	bl	80005d4 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 800153e:	f7ff f848 	bl	80005d2 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 8001542:	f005 ffcf 	bl	80074e4 <osKernelInitialize>
  joyStickQueueHandle = osMessageQueueNew (16, sizeof(uint32_t), &joyStickQueue_attributes);
 8001546:	4a12      	ldr	r2, [pc, #72]	@ (8001590 <main+0x47c>)
 8001548:	4639      	mov	r1, r7
 800154a:	4640      	mov	r0, r8
 800154c:	f006 f8f1 	bl	8007732 <osMessageQueueNew>
 8001550:	4b10      	ldr	r3, [pc, #64]	@ (8001594 <main+0x480>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001552:	4a11      	ldr	r2, [pc, #68]	@ (8001598 <main+0x484>)
  joyStickQueueHandle = osMessageQueueNew (16, sizeof(uint32_t), &joyStickQueue_attributes);
 8001554:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001556:	4621      	mov	r1, r4
 8001558:	4810      	ldr	r0, [pc, #64]	@ (800159c <main+0x488>)
 800155a:	f005 ffef 	bl	800753c <osThreadNew>
 800155e:	4b10      	ldr	r3, [pc, #64]	@ (80015a0 <main+0x48c>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001560:	4a10      	ldr	r2, [pc, #64]	@ (80015a4 <main+0x490>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001562:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001564:	4621      	mov	r1, r4
 8001566:	4810      	ldr	r0, [pc, #64]	@ (80015a8 <main+0x494>)
 8001568:	f005 ffe8 	bl	800753c <osThreadNew>
 800156c:	4b0f      	ldr	r3, [pc, #60]	@ (80015ac <main+0x498>)
  hardware_pollinHandle = osThreadNew(start_hardware_polling_task, NULL, &hardware_pollin_attributes);
 800156e:	4a10      	ldr	r2, [pc, #64]	@ (80015b0 <main+0x49c>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001570:	6018      	str	r0, [r3, #0]
  hardware_pollinHandle = osThreadNew(start_hardware_polling_task, NULL, &hardware_pollin_attributes);
 8001572:	4621      	mov	r1, r4
 8001574:	480f      	ldr	r0, [pc, #60]	@ (80015b4 <main+0x4a0>)
 8001576:	f005 ffe1 	bl	800753c <osThreadNew>
 800157a:	4b0f      	ldr	r3, [pc, #60]	@ (80015b8 <main+0x4a4>)
 800157c:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800157e:	f005 ffc3 	bl	8007508 <osKernelStart>
  while (1)
 8001582:	e7fe      	b.n	8001582 <main+0x46e>
 8001584:	20000a08 	.word	0x20000a08
 8001588:	40012100 	.word	0x40012100
 800158c:	20000824 	.word	0x20000824
 8001590:	0801f164 	.word	0x0801f164
 8001594:	200007e0 	.word	0x200007e0
 8001598:	0801f1c4 	.word	0x0801f1c4
 800159c:	08000fe5 	.word	0x08000fe5
 80015a0:	200007ec 	.word	0x200007ec
 80015a4:	0801f1a0 	.word	0x0801f1a0
 80015a8:	080005e3 	.word	0x080005e3
 80015ac:	200007e8 	.word	0x200007e8
 80015b0:	0801f17c 	.word	0x0801f17c
 80015b4:	08001001 	.word	0x08001001
 80015b8:	200007e4 	.word	0x200007e4
 80015bc:	40011000 	.word	0x40011000

080015c0 <IOE_Init>:
void IOE_Init(void)
 80015c0:	4770      	bx	lr

080015c2 <IOE_ITConfig>:
void IOE_ITConfig(void)
 80015c2:	4770      	bx	lr

080015c4 <IOE_Write>:
{
 80015c4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80015c6:	4b09      	ldr	r3, [pc, #36]	@ (80015ec <IOE_Write+0x28>)
 80015c8:	f88d 2017 	strb.w	r2, [sp, #23]
 80015cc:	681b      	ldr	r3, [r3, #0]
 80015ce:	9302      	str	r3, [sp, #8]
 80015d0:	f10d 0217 	add.w	r2, sp, #23
 80015d4:	2301      	movs	r3, #1
 80015d6:	9200      	str	r2, [sp, #0]
 80015d8:	9301      	str	r3, [sp, #4]
 80015da:	460a      	mov	r2, r1
 80015dc:	4601      	mov	r1, r0
 80015de:	4804      	ldr	r0, [pc, #16]	@ (80015f0 <IOE_Write+0x2c>)
 80015e0:	f004 f9ba 	bl	8005958 <HAL_I2C_Mem_Write>
}
 80015e4:	b007      	add	sp, #28
 80015e6:	f85d fb04 	ldr.w	pc, [sp], #4
 80015ea:	bf00      	nop
 80015ec:	20000010 	.word	0x20000010
 80015f0:	2000096c 	.word	0x2000096c

080015f4 <IOE_Read>:
{
 80015f4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 80015f6:	2300      	movs	r3, #0
 80015f8:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80015fc:	4b08      	ldr	r3, [pc, #32]	@ (8001620 <IOE_Read+0x2c>)
 80015fe:	681b      	ldr	r3, [r3, #0]
 8001600:	9302      	str	r3, [sp, #8]
{
 8001602:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001604:	2301      	movs	r3, #1
 8001606:	f10d 0117 	add.w	r1, sp, #23
 800160a:	9100      	str	r1, [sp, #0]
 800160c:	9301      	str	r3, [sp, #4]
 800160e:	4601      	mov	r1, r0
 8001610:	4804      	ldr	r0, [pc, #16]	@ (8001624 <IOE_Read+0x30>)
 8001612:	f004 fa31 	bl	8005a78 <HAL_I2C_Mem_Read>
}
 8001616:	f89d 0017 	ldrb.w	r0, [sp, #23]
 800161a:	b007      	add	sp, #28
 800161c:	f85d fb04 	ldr.w	pc, [sp], #4
 8001620:	20000010 	.word	0x20000010
 8001624:	2000096c 	.word	0x2000096c

08001628 <IOE_ReadMultiple>:
{
 8001628:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 800162a:	4c08      	ldr	r4, [pc, #32]	@ (800164c <IOE_ReadMultiple+0x24>)
 800162c:	6824      	ldr	r4, [r4, #0]
 800162e:	9200      	str	r2, [sp, #0]
 8001630:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8001634:	460a      	mov	r2, r1
 8001636:	2301      	movs	r3, #1
 8001638:	4601      	mov	r1, r0
 800163a:	4805      	ldr	r0, [pc, #20]	@ (8001650 <IOE_ReadMultiple+0x28>)
 800163c:	f004 fa1c 	bl	8005a78 <HAL_I2C_Mem_Read>
}
 8001640:	3800      	subs	r0, #0
 8001642:	bf18      	it	ne
 8001644:	2001      	movne	r0, #1
 8001646:	b004      	add	sp, #16
 8001648:	bd10      	pop	{r4, pc}
 800164a:	bf00      	nop
 800164c:	20000010 	.word	0x20000010
 8001650:	2000096c 	.word	0x2000096c

08001654 <IOE_Delay>:
void IOE_Delay(uint32_t Delay)
 8001654:	f003 b88a 	b.w	800476c <HAL_Delay>

08001658 <LCD_IO_Init>:
{
 8001658:	b510      	push	{r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800165a:	4c06      	ldr	r4, [pc, #24]	@ (8001674 <LCD_IO_Init+0x1c>)
 800165c:	2200      	movs	r2, #0
 800165e:	4620      	mov	r0, r4
 8001660:	2104      	movs	r1, #4
 8001662:	f003 fec3 	bl	80053ec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001666:	4620      	mov	r0, r4
 8001668:	2201      	movs	r2, #1
}
 800166a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800166e:	2104      	movs	r1, #4
 8001670:	f003 bebc 	b.w	80053ec <HAL_GPIO_WritePin>
 8001674:	40020800 	.word	0x40020800

08001678 <LCD_IO_WriteData>:
{
 8001678:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800167a:	4d0b      	ldr	r5, [pc, #44]	@ (80016a8 <LCD_IO_WriteData+0x30>)
{
 800167c:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800167e:	2201      	movs	r2, #1
 8001680:	480a      	ldr	r0, [pc, #40]	@ (80016ac <LCD_IO_WriteData+0x34>)
 8001682:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001686:	f003 feb1 	bl	80053ec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800168a:	2200      	movs	r2, #0
 800168c:	2104      	movs	r1, #4
 800168e:	4628      	mov	r0, r5
 8001690:	f003 feac 	bl	80053ec <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001694:	4620      	mov	r0, r4
 8001696:	f7ff fc93 	bl	8000fc0 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800169a:	4628      	mov	r0, r5
 800169c:	2201      	movs	r2, #1
}
 800169e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80016a2:	2104      	movs	r1, #4
 80016a4:	f003 bea2 	b.w	80053ec <HAL_GPIO_WritePin>
 80016a8:	40020800 	.word	0x40020800
 80016ac:	40020c00 	.word	0x40020c00

080016b0 <LCD_IO_WriteReg>:
{
 80016b0:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80016b2:	4d0b      	ldr	r5, [pc, #44]	@ (80016e0 <LCD_IO_WriteReg+0x30>)
{
 80016b4:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80016b6:	2200      	movs	r2, #0
 80016b8:	480a      	ldr	r0, [pc, #40]	@ (80016e4 <LCD_IO_WriteReg+0x34>)
 80016ba:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80016be:	f003 fe95 	bl	80053ec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80016c2:	2200      	movs	r2, #0
 80016c4:	2104      	movs	r1, #4
 80016c6:	4628      	mov	r0, r5
 80016c8:	f003 fe90 	bl	80053ec <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 80016cc:	4620      	mov	r0, r4
 80016ce:	f7ff fc77 	bl	8000fc0 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80016d2:	4628      	mov	r0, r5
 80016d4:	2201      	movs	r2, #1
}
 80016d6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80016da:	2104      	movs	r1, #4
 80016dc:	f003 be86 	b.w	80053ec <HAL_GPIO_WritePin>
 80016e0:	40020800 	.word	0x40020800
 80016e4:	40020c00 	.word	0x40020c00

080016e8 <LCD_IO_ReadData>:
{
 80016e8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80016ea:	4e14      	ldr	r6, [pc, #80]	@ (800173c <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80016ec:	4f14      	ldr	r7, [pc, #80]	@ (8001740 <LCD_IO_ReadData+0x58>)
{
 80016ee:	4605      	mov	r5, r0
 80016f0:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80016f2:	4630      	mov	r0, r6
 80016f4:	2200      	movs	r2, #0
 80016f6:	2104      	movs	r1, #4
 80016f8:	f003 fe78 	bl	80053ec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80016fc:	2200      	movs	r2, #0
 80016fe:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001702:	4638      	mov	r0, r7
 8001704:	f003 fe72 	bl	80053ec <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001708:	4628      	mov	r0, r5
 800170a:	f7ff fc59 	bl	8000fc0 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 800170e:	4b0d      	ldr	r3, [pc, #52]	@ (8001744 <LCD_IO_ReadData+0x5c>)
 8001710:	480d      	ldr	r0, [pc, #52]	@ (8001748 <LCD_IO_ReadData+0x60>)
 8001712:	681b      	ldr	r3, [r3, #0]
 8001714:	4622      	mov	r2, r4
 8001716:	a901      	add	r1, sp, #4
 8001718:	f005 fb9b 	bl	8006e52 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800171c:	4638      	mov	r0, r7
 800171e:	2201      	movs	r2, #1
 8001720:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
  return readvalue;
 8001724:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001726:	f003 fe61 	bl	80053ec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800172a:	4630      	mov	r0, r6
 800172c:	2201      	movs	r2, #1
 800172e:	2104      	movs	r1, #4
 8001730:	f003 fe5c 	bl	80053ec <HAL_GPIO_WritePin>
}
 8001734:	4620      	mov	r0, r4
 8001736:	b003      	add	sp, #12
 8001738:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800173a:	bf00      	nop
 800173c:	40020800 	.word	0x40020800
 8001740:	40020c00 	.word	0x40020c00
 8001744:	2000000c 	.word	0x2000000c
 8001748:	2000086c 	.word	0x2000086c

0800174c <LCD_Delay>:
  HAL_Delay(Delay);
 800174c:	f003 b80e 	b.w	800476c <HAL_Delay>

08001750 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001750:	6802      	ldr	r2, [r0, #0]
 8001752:	4b03      	ldr	r3, [pc, #12]	@ (8001760 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001754:	429a      	cmp	r2, r3
 8001756:	d101      	bne.n	800175c <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8001758:	f002 bff6 	b.w	8004748 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 800175c:	4770      	bx	lr
 800175e:	bf00      	nop
 8001760:	40001000 	.word	0x40001000

08001764 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001764:	4770      	bx	lr
	...

08001768 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001768:	b082      	sub	sp, #8

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800176a:	4b0e      	ldr	r3, [pc, #56]	@ (80017a4 <HAL_MspInit+0x3c>)
 800176c:	2200      	movs	r2, #0
 800176e:	9200      	str	r2, [sp, #0]
 8001770:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 8001772:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 8001776:	6459      	str	r1, [r3, #68]	@ 0x44
 8001778:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 800177a:	f401 4180 	and.w	r1, r1, #16384	@ 0x4000
 800177e:	9100      	str	r1, [sp, #0]
 8001780:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001782:	9201      	str	r2, [sp, #4]
 8001784:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 8001786:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
 800178a:	6419      	str	r1, [r3, #64]	@ 0x40
 800178c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800178e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001792:	9301      	str	r3, [sp, #4]
 8001794:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001796:	210f      	movs	r1, #15
 8001798:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800179c:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800179e:	f003 ba21 	b.w	8004be4 <HAL_NVIC_SetPriority>
 80017a2:	bf00      	nop
 80017a4:	40023800 	.word	0x40023800

080017a8 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 80017a8:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80017aa:	2214      	movs	r2, #20
{
 80017ac:	b08a      	sub	sp, #40	@ 0x28
 80017ae:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80017b0:	2100      	movs	r1, #0
 80017b2:	eb0d 0002 	add.w	r0, sp, r2
 80017b6:	f01c fb6c 	bl	801de92 <memset>
  if(hadc->Instance==ADC1)
 80017ba:	6823      	ldr	r3, [r4, #0]
 80017bc:	4a21      	ldr	r2, [pc, #132]	@ (8001844 <HAL_ADC_MspInit+0x9c>)
 80017be:	4293      	cmp	r3, r2
 80017c0:	d11f      	bne.n	8001802 <HAL_ADC_MspInit+0x5a>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 80017c2:	4b21      	ldr	r3, [pc, #132]	@ (8001848 <HAL_ADC_MspInit+0xa0>)
    PC3     ------> ADC1_IN13
    */
    GPIO_InitStruct.Pin = GPIO_PIN_3;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80017c4:	4821      	ldr	r0, [pc, #132]	@ (800184c <HAL_ADC_MspInit+0xa4>)
    __HAL_RCC_ADC1_CLK_ENABLE();
 80017c6:	2100      	movs	r1, #0
 80017c8:	9101      	str	r1, [sp, #4]
 80017ca:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80017cc:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80017d0:	645a      	str	r2, [r3, #68]	@ 0x44
 80017d2:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80017d4:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 80017d8:	9201      	str	r2, [sp, #4]
 80017da:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80017dc:	9102      	str	r1, [sp, #8]
 80017de:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80017e0:	f042 0204 	orr.w	r2, r2, #4
 80017e4:	631a      	str	r2, [r3, #48]	@ 0x30
 80017e6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80017e8:	f003 0304 	and.w	r3, r3, #4
 80017ec:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80017ee:	2108      	movs	r1, #8
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80017f0:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80017f2:	2303      	movs	r3, #3
 80017f4:	e9cd 1305 	strd	r1, r3, [sp, #20]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80017f8:	a905      	add	r1, sp, #20
    PA5     ------> ADC2_IN5
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80017fa:	f003 fd0d 	bl	8005218 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC2_MspInit 1 */

  /* USER CODE END ADC2_MspInit 1 */
  }

}
 80017fe:	b00a      	add	sp, #40	@ 0x28
 8001800:	bd10      	pop	{r4, pc}
  else if(hadc->Instance==ADC2)
 8001802:	4a13      	ldr	r2, [pc, #76]	@ (8001850 <HAL_ADC_MspInit+0xa8>)
 8001804:	4293      	cmp	r3, r2
 8001806:	d1fa      	bne.n	80017fe <HAL_ADC_MspInit+0x56>
    __HAL_RCC_ADC2_CLK_ENABLE();
 8001808:	4b0f      	ldr	r3, [pc, #60]	@ (8001848 <HAL_ADC_MspInit+0xa0>)
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800180a:	4812      	ldr	r0, [pc, #72]	@ (8001854 <HAL_ADC_MspInit+0xac>)
    __HAL_RCC_ADC2_CLK_ENABLE();
 800180c:	2100      	movs	r1, #0
 800180e:	9103      	str	r1, [sp, #12]
 8001810:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001812:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8001816:	645a      	str	r2, [r3, #68]	@ 0x44
 8001818:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800181a:	f402 7200 	and.w	r2, r2, #512	@ 0x200
 800181e:	9203      	str	r2, [sp, #12]
 8001820:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001822:	9104      	str	r1, [sp, #16]
 8001824:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001826:	f042 0201 	orr.w	r2, r2, #1
 800182a:	631a      	str	r2, [r3, #48]	@ 0x30
 800182c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800182e:	f003 0301 	and.w	r3, r3, #1
 8001832:	9304      	str	r3, [sp, #16]
 8001834:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001836:	2220      	movs	r2, #32
 8001838:	2303      	movs	r3, #3
 800183a:	e9cd 2305 	strd	r2, r3, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800183e:	a905      	add	r1, sp, #20
 8001840:	e7db      	b.n	80017fa <HAL_ADC_MspInit+0x52>
 8001842:	bf00      	nop
 8001844:	40012000 	.word	0x40012000
 8001848:	40023800 	.word	0x40023800
 800184c:	40020800 	.word	0x40020800
 8001850:	40012100 	.word	0x40012100
 8001854:	40020000 	.word	0x40020000

08001858 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001858:	6802      	ldr	r2, [r0, #0]
 800185a:	4b09      	ldr	r3, [pc, #36]	@ (8001880 <HAL_CRC_MspInit+0x28>)
 800185c:	429a      	cmp	r2, r3
{
 800185e:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001860:	d10b      	bne.n	800187a <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001862:	2300      	movs	r3, #0
 8001864:	9301      	str	r3, [sp, #4]
 8001866:	4b07      	ldr	r3, [pc, #28]	@ (8001884 <HAL_CRC_MspInit+0x2c>)
 8001868:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800186a:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 800186e:	631a      	str	r2, [r3, #48]	@ 0x30
 8001870:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001872:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001876:	9301      	str	r3, [sp, #4]
 8001878:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 800187a:	b002      	add	sp, #8
 800187c:	4770      	bx	lr
 800187e:	bf00      	nop
 8001880:	40023000 	.word	0x40023000
 8001884:	40023800 	.word	0x40023800

08001888 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001888:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 800188a:	4b0f      	ldr	r3, [pc, #60]	@ (80018c8 <HAL_DMA2D_MspInit+0x40>)
 800188c:	6802      	ldr	r2, [r0, #0]
 800188e:	429a      	cmp	r2, r3
 8001890:	d116      	bne.n	80018c0 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001892:	2200      	movs	r2, #0
 8001894:	f5a3 43f0 	sub.w	r3, r3, #30720	@ 0x7800
 8001898:	9201      	str	r2, [sp, #4]
 800189a:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 800189c:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 80018a0:	6319      	str	r1, [r3, #48]	@ 0x30
 80018a2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80018a4:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80018a8:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80018aa:	2105      	movs	r1, #5
 80018ac:	205a      	movs	r0, #90	@ 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80018ae:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80018b0:	f003 f998 	bl	8004be4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80018b4:	205a      	movs	r0, #90	@ 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 80018b6:	b003      	add	sp, #12
 80018b8:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80018bc:	f003 b9c4 	b.w	8004c48 <HAL_NVIC_EnableIRQ>
}
 80018c0:	b003      	add	sp, #12
 80018c2:	f85d fb04 	ldr.w	pc, [sp], #4
 80018c6:	bf00      	nop
 80018c8:	4002b000 	.word	0x4002b000

080018cc <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80018cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80018d0:	4604      	mov	r4, r0
 80018d2:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80018d4:	2214      	movs	r2, #20
 80018d6:	2100      	movs	r1, #0
 80018d8:	a803      	add	r0, sp, #12
 80018da:	f01c fada 	bl	801de92 <memset>
  if(hi2c->Instance==I2C3)
 80018de:	6822      	ldr	r2, [r4, #0]
 80018e0:	4b24      	ldr	r3, [pc, #144]	@ (8001974 <HAL_I2C_MspInit+0xa8>)
 80018e2:	429a      	cmp	r2, r3
 80018e4:	d143      	bne.n	800196e <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 80018e6:	4c24      	ldr	r4, [pc, #144]	@ (8001978 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80018e8:	4824      	ldr	r0, [pc, #144]	@ (800197c <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80018ea:	2500      	movs	r5, #0
 80018ec:	9500      	str	r5, [sp, #0]
 80018ee:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80018f0:	f043 0304 	orr.w	r3, r3, #4
 80018f4:	6323      	str	r3, [r4, #48]	@ 0x30
 80018f6:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80018f8:	f003 0304 	and.w	r3, r3, #4
 80018fc:	9300      	str	r3, [sp, #0]
 80018fe:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001900:	9501      	str	r5, [sp, #4]
 8001902:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001904:	f043 0301 	orr.w	r3, r3, #1
 8001908:	6323      	str	r3, [r4, #48]	@ 0x30
 800190a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800190c:	f003 0301 	and.w	r3, r3, #1
 8001910:	9301      	str	r3, [sp, #4]
 8001912:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001914:	f04f 0912 	mov.w	r9, #18
 8001918:	f44f 7300 	mov.w	r3, #512	@ 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800191c:	f04f 0801 	mov.w	r8, #1
 8001920:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001922:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001924:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001926:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800192a:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800192e:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001930:	f003 fc72 	bl	8005218 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001934:	f44f 7380 	mov.w	r3, #256	@ 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001938:	4811      	ldr	r0, [pc, #68]	@ (8001980 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800193a:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800193c:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800193e:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001942:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001946:	f003 fc67 	bl	8005218 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 800194a:	9502      	str	r5, [sp, #8]
 800194c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800194e:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8001952:	6423      	str	r3, [r4, #64]	@ 0x40
 8001954:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001956:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800195a:	9302      	str	r3, [sp, #8]
 800195c:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 800195e:	6a23      	ldr	r3, [r4, #32]
 8001960:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8001964:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001966:	6a23      	ldr	r3, [r4, #32]
 8001968:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 800196c:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 800196e:	b009      	add	sp, #36	@ 0x24
 8001970:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001974:	40005c00 	.word	0x40005c00
 8001978:	40023800 	.word	0x40023800
 800197c:	40020800 	.word	0x40020800
 8001980:	40020000 	.word	0x40020000

08001984 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001984:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001986:	b099      	sub	sp, #100	@ 0x64
 8001988:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800198a:	2214      	movs	r2, #20
 800198c:	2100      	movs	r1, #0
 800198e:	a807      	add	r0, sp, #28
 8001990:	f01c fa7f 	bl	801de92 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001994:	2230      	movs	r2, #48	@ 0x30
 8001996:	eb0d 0002 	add.w	r0, sp, r2
 800199a:	2100      	movs	r1, #0
 800199c:	f01c fa79 	bl	801de92 <memset>
  if(hltdc->Instance==LTDC)
 80019a0:	6822      	ldr	r2, [r4, #0]
 80019a2:	4b5e      	ldr	r3, [pc, #376]	@ (8001b1c <HAL_LTDC_MspInit+0x198>)
 80019a4:	429a      	cmp	r2, r3
 80019a6:	f040 80b7 	bne.w	8001b18 <HAL_LTDC_MspInit+0x194>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80019aa:	2308      	movs	r3, #8
 80019ac:	930c      	str	r3, [sp, #48]	@ 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80019ae:	23c0      	movs	r3, #192	@ 0xc0
 80019b0:	9310      	str	r3, [sp, #64]	@ 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80019b2:	2304      	movs	r3, #4
 80019b4:	9312      	str	r3, [sp, #72]	@ 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80019b6:	a80c      	add	r0, sp, #48	@ 0x30
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80019b8:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 80019bc:	9315      	str	r3, [sp, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80019be:	f004 fdf9 	bl	80065b4 <HAL_RCCEx_PeriphCLKConfig>
 80019c2:	b108      	cbz	r0, 80019c8 <HAL_LTDC_MspInit+0x44>
    {
      Error_Handler();
 80019c4:	f7ff fece 	bl	8001764 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 80019c8:	4b55      	ldr	r3, [pc, #340]	@ (8001b20 <HAL_LTDC_MspInit+0x19c>)
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80019ca:	4856      	ldr	r0, [pc, #344]	@ (8001b24 <HAL_LTDC_MspInit+0x1a0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 80019cc:	2400      	movs	r4, #0
 80019ce:	9400      	str	r4, [sp, #0]
 80019d0:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80019d2:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 80019d6:	645a      	str	r2, [r3, #68]	@ 0x44
 80019d8:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80019da:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 80019de:	9200      	str	r2, [sp, #0]
 80019e0:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80019e2:	9401      	str	r4, [sp, #4]
 80019e4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80019e6:	f042 0220 	orr.w	r2, r2, #32
 80019ea:	631a      	str	r2, [r3, #48]	@ 0x30
 80019ec:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80019ee:	f002 0220 	and.w	r2, r2, #32
 80019f2:	9201      	str	r2, [sp, #4]
 80019f4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80019f6:	9402      	str	r4, [sp, #8]
 80019f8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80019fa:	f042 0201 	orr.w	r2, r2, #1
 80019fe:	631a      	str	r2, [r3, #48]	@ 0x30
 8001a00:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001a02:	f002 0201 	and.w	r2, r2, #1
 8001a06:	9202      	str	r2, [sp, #8]
 8001a08:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001a0a:	9403      	str	r4, [sp, #12]
 8001a0c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001a0e:	f042 0202 	orr.w	r2, r2, #2
 8001a12:	631a      	str	r2, [r3, #48]	@ 0x30
 8001a14:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001a16:	f002 0202 	and.w	r2, r2, #2
 8001a1a:	9203      	str	r2, [sp, #12]
 8001a1c:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001a1e:	9404      	str	r4, [sp, #16]
 8001a20:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001a22:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8001a26:	631a      	str	r2, [r3, #48]	@ 0x30
 8001a28:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001a2a:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 8001a2e:	9204      	str	r2, [sp, #16]
 8001a30:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001a32:	9405      	str	r4, [sp, #20]
 8001a34:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001a36:	f042 0204 	orr.w	r2, r2, #4
 8001a3a:	631a      	str	r2, [r3, #48]	@ 0x30
 8001a3c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001a3e:	f002 0204 	and.w	r2, r2, #4
 8001a42:	9205      	str	r2, [sp, #20]
 8001a44:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001a46:	9406      	str	r4, [sp, #24]
 8001a48:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001a4a:	f042 0208 	orr.w	r2, r2, #8
 8001a4e:	631a      	str	r2, [r3, #48]	@ 0x30
 8001a50:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a52:	f003 0308 	and.w	r3, r3, #8
 8001a56:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a58:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001a5a:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001a5c:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001a5e:	960b      	str	r6, [sp, #44]	@ 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a60:	f44f 6380 	mov.w	r3, #1024	@ 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001a64:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a66:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001a6a:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001a6e:	f003 fbd3 	bl	8005218 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001a72:	f641 0358 	movw	r3, #6232	@ 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a76:	482c      	ldr	r0, [pc, #176]	@ (8001b28 <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001a78:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a7a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a7c:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001a80:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001a82:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a86:	f003 fbc7 	bl	8005218 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001a8a:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a8c:	4827      	ldr	r0, [pc, #156]	@ (8001b2c <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001a8e:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a90:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a92:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001a96:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a9a:	f003 fbbd 	bl	8005218 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001a9e:	f44f 6370 	mov.w	r3, #3840	@ 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001aa2:	4822      	ldr	r0, [pc, #136]	@ (8001b2c <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001aa4:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001aa6:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001aa8:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001aac:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ab0:	f003 fbb2 	bl	8005218 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001ab4:	f44f 630c 	mov.w	r3, #2240	@ 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ab8:	481d      	ldr	r0, [pc, #116]	@ (8001b30 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001aba:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001abc:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001abe:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001ac2:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ac6:	f003 fba7 	bl	8005218 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001aca:	23c0      	movs	r3, #192	@ 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001acc:	4819      	ldr	r0, [pc, #100]	@ (8001b34 <HAL_LTDC_MspInit+0x1b0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001ace:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ad0:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ad2:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001ad6:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ada:	f003 fb9d 	bl	8005218 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001ade:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ae0:	4815      	ldr	r0, [pc, #84]	@ (8001b38 <HAL_LTDC_MspInit+0x1b4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001ae2:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ae4:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ae6:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001aea:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001aee:	f003 fb93 	bl	8005218 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001af2:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001af6:	480e      	ldr	r0, [pc, #56]	@ (8001b30 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001af8:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001afa:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001afc:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001b00:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001b04:	f003 fb88 	bl	8005218 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001b08:	2058      	movs	r0, #88	@ 0x58
 8001b0a:	4622      	mov	r2, r4
 8001b0c:	2105      	movs	r1, #5
 8001b0e:	f003 f869 	bl	8004be4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001b12:	2058      	movs	r0, #88	@ 0x58
 8001b14:	f003 f898 	bl	8004c48 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001b18:	b019      	add	sp, #100	@ 0x64
 8001b1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001b1c:	40016800 	.word	0x40016800
 8001b20:	40023800 	.word	0x40023800
 8001b24:	40021400 	.word	0x40021400
 8001b28:	40020000 	.word	0x40020000
 8001b2c:	40020400 	.word	0x40020400
 8001b30:	40021800 	.word	0x40021800
 8001b34:	40020800 	.word	0x40020800
 8001b38:	40020c00 	.word	0x40020c00

08001b3c <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001b3c:	b510      	push	{r4, lr}
 8001b3e:	4604      	mov	r4, r0
 8001b40:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b42:	2214      	movs	r2, #20
 8001b44:	2100      	movs	r1, #0
 8001b46:	a803      	add	r0, sp, #12
 8001b48:	f01c f9a3 	bl	801de92 <memset>
  if(hspi->Instance==SPI5)
 8001b4c:	6822      	ldr	r2, [r4, #0]
 8001b4e:	4b14      	ldr	r3, [pc, #80]	@ (8001ba0 <HAL_SPI_MspInit+0x64>)
 8001b50:	429a      	cmp	r2, r3
 8001b52:	d123      	bne.n	8001b9c <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001b54:	f503 4368 	add.w	r3, r3, #59392	@ 0xe800
 8001b58:	2100      	movs	r1, #0
 8001b5a:	9101      	str	r1, [sp, #4]
 8001b5c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001b5e:	4811      	ldr	r0, [pc, #68]	@ (8001ba4 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001b60:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 8001b64:	645a      	str	r2, [r3, #68]	@ 0x44
 8001b66:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001b68:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 8001b6c:	9201      	str	r2, [sp, #4]
 8001b6e:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001b70:	9102      	str	r1, [sp, #8]
 8001b72:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b74:	f042 0220 	orr.w	r2, r2, #32
 8001b78:	631a      	str	r2, [r3, #48]	@ 0x30
 8001b7a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001b7c:	f003 0320 	and.w	r3, r3, #32
 8001b80:	9302      	str	r3, [sp, #8]
 8001b82:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b84:	f44f 7260 	mov.w	r2, #896	@ 0x380
 8001b88:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001b8a:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b8c:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001b90:	2305      	movs	r3, #5
 8001b92:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001b96:	a903      	add	r1, sp, #12
 8001b98:	f003 fb3e 	bl	8005218 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001b9c:	b008      	add	sp, #32
 8001b9e:	bd10      	pop	{r4, pc}
 8001ba0:	40015000 	.word	0x40015000
 8001ba4:	40021400 	.word	0x40021400

08001ba8 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8001ba8:	b510      	push	{r4, lr}
 8001baa:	4604      	mov	r4, r0
 8001bac:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001bae:	2214      	movs	r2, #20
 8001bb0:	2100      	movs	r1, #0
 8001bb2:	a803      	add	r0, sp, #12
 8001bb4:	f01c f96d 	bl	801de92 <memset>
  if(huart->Instance==USART1)
 8001bb8:	6822      	ldr	r2, [r4, #0]
 8001bba:	4b14      	ldr	r3, [pc, #80]	@ (8001c0c <HAL_UART_MspInit+0x64>)
 8001bbc:	429a      	cmp	r2, r3
 8001bbe:	d123      	bne.n	8001c08 <HAL_UART_MspInit+0x60>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8001bc0:	f503 3394 	add.w	r3, r3, #75776	@ 0x12800
 8001bc4:	2100      	movs	r1, #0
 8001bc6:	9101      	str	r1, [sp, #4]
 8001bc8:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bca:	4811      	ldr	r0, [pc, #68]	@ (8001c10 <HAL_UART_MspInit+0x68>)
    __HAL_RCC_USART1_CLK_ENABLE();
 8001bcc:	f042 0210 	orr.w	r2, r2, #16
 8001bd0:	645a      	str	r2, [r3, #68]	@ 0x44
 8001bd2:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001bd4:	f002 0210 	and.w	r2, r2, #16
 8001bd8:	9201      	str	r2, [sp, #4]
 8001bda:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001bdc:	9102      	str	r1, [sp, #8]
 8001bde:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001be0:	f042 0201 	orr.w	r2, r2, #1
 8001be4:	631a      	str	r2, [r3, #48]	@ 0x30
 8001be6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001be8:	f003 0301 	and.w	r3, r3, #1
 8001bec:	9302      	str	r3, [sp, #8]
 8001bee:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bf0:	f44f 62c0 	mov.w	r2, #1536	@ 0x600
 8001bf4:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8001bf6:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bf8:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8001bfc:	2307      	movs	r3, #7
 8001bfe:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c02:	a903      	add	r1, sp, #12
 8001c04:	f003 fb08 	bl	8005218 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 8001c08:	b008      	add	sp, #32
 8001c0a:	bd10      	pop	{r4, pc}
 8001c0c:	40011000 	.word	0x40011000
 8001c10:	40020000 	.word	0x40020000

08001c14 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001c14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001c18:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001c1a:	2300      	movs	r3, #0
 8001c1c:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001c1e:	4b2b      	ldr	r3, [pc, #172]	@ (8001ccc <HAL_SDRAM_MspInit+0xb8>)
 8001c20:	681c      	ldr	r4, [r3, #0]
 8001c22:	2c00      	cmp	r4, #0
 8001c24:	d14f      	bne.n	8001cc6 <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8001c26:	f04f 0801 	mov.w	r8, #1
 8001c2a:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001c2e:	4b28      	ldr	r3, [pc, #160]	@ (8001cd0 <HAL_SDRAM_MspInit+0xbc>)
 8001c30:	9400      	str	r4, [sp, #0]
 8001c32:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c34:	4827      	ldr	r0, [pc, #156]	@ (8001cd4 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001c36:	ea42 0208 	orr.w	r2, r2, r8
 8001c3a:	639a      	str	r2, [r3, #56]	@ 0x38
 8001c3c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001c3e:	ea03 0308 	and.w	r3, r3, r8
 8001c42:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c44:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c46:	2603      	movs	r6, #3
 8001c48:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001c4a:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c4c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c4e:	f64f 033f 	movw	r3, #63551	@ 0xf83f
 8001c52:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c56:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c5a:	f003 fadd 	bl	8005218 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c5e:	481e      	ldr	r0, [pc, #120]	@ (8001cd8 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c60:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c62:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c64:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c68:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c6c:	f003 fad4 	bl	8005218 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001c70:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c74:	4819      	ldr	r0, [pc, #100]	@ (8001cdc <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c76:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c78:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c7a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c7e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c82:	f003 fac9 	bl	8005218 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001c86:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001c8a:	4815      	ldr	r0, [pc, #84]	@ (8001ce0 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c8c:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001c8e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c90:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c94:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001c98:	f003 fabe 	bl	8005218 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001c9c:	f24c 7303 	movw	r3, #50947	@ 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ca0:	4810      	ldr	r0, [pc, #64]	@ (8001ce4 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ca2:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ca4:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ca6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001caa:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001cae:	f003 fab3 	bl	8005218 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001cb2:	2360      	movs	r3, #96	@ 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cb4:	480c      	ldr	r0, [pc, #48]	@ (8001ce8 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001cb6:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cb8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cba:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cbe:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cc2:	f003 faa9 	bl	8005218 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001cc6:	b006      	add	sp, #24
 8001cc8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001ccc:	20000a98 	.word	0x20000a98
 8001cd0:	40023800 	.word	0x40023800
 8001cd4:	40021400 	.word	0x40021400
 8001cd8:	40020800 	.word	0x40020800
 8001cdc:	40021800 	.word	0x40021800
 8001ce0:	40021000 	.word	0x40021000
 8001ce4:	40020c00 	.word	0x40020c00
 8001ce8:	40020400 	.word	0x40020400

08001cec <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001cec:	b570      	push	{r4, r5, r6, lr}
 8001cee:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001cf0:	2300      	movs	r3, #0
 8001cf2:	9302      	str	r3, [sp, #8]
 8001cf4:	4b20      	ldr	r3, [pc, #128]	@ (8001d78 <HAL_InitTick+0x8c>)
 8001cf6:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001cf8:	f042 0210 	orr.w	r2, r2, #16
 8001cfc:	641a      	str	r2, [r3, #64]	@ 0x40
 8001cfe:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001d00:	f003 0310 	and.w	r3, r3, #16
 8001d04:	9302      	str	r3, [sp, #8]
{
 8001d06:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001d08:	a901      	add	r1, sp, #4
 8001d0a:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001d0c:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001d0e:	f004 fc33 	bl	8006578 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8001d12:	9b06      	ldr	r3, [sp, #24]
 8001d14:	bb4b      	cbnz	r3, 8001d6a <HAL_InitTick+0x7e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8001d16:	f004 fc0f 	bl	8006538 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001d1a:	4e18      	ldr	r6, [pc, #96]	@ (8001d7c <HAL_InitTick+0x90>)
 8001d1c:	4b18      	ldr	r3, [pc, #96]	@ (8001d80 <HAL_InitTick+0x94>)
 8001d1e:	6033      	str	r3, [r6, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001d20:	f240 33e7 	movw	r3, #999	@ 0x3e7
 8001d24:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001d26:	4b17      	ldr	r3, [pc, #92]	@ (8001d84 <HAL_InitTick+0x98>)
 8001d28:	fbb0 f3f3 	udiv	r3, r0, r3
 8001d2c:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001d2e:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8001d30:	4630      	mov	r0, r6
  htim6.Init.ClockDivision = 0;
 8001d32:	2300      	movs	r3, #0
 8001d34:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001d36:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001d38:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 8001d3a:	f005 fa6f 	bl	800721c <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8001d3e:	4604      	mov	r4, r0
 8001d40:	b980      	cbnz	r0, 8001d64 <HAL_InitTick+0x78>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 8001d42:	4630      	mov	r0, r6
 8001d44:	f005 f92c 	bl	8006fa0 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8001d48:	4604      	mov	r4, r0
 8001d4a:	b958      	cbnz	r0, 8001d64 <HAL_InitTick+0x78>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001d4c:	2036      	movs	r0, #54	@ 0x36
 8001d4e:	f002 ff7b 	bl	8004c48 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001d52:	2d0f      	cmp	r5, #15
 8001d54:	d80d      	bhi.n	8001d72 <HAL_InitTick+0x86>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8001d56:	4622      	mov	r2, r4
 8001d58:	4629      	mov	r1, r5
 8001d5a:	2036      	movs	r0, #54	@ 0x36
 8001d5c:	f002 ff42 	bl	8004be4 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8001d60:	4b09      	ldr	r3, [pc, #36]	@ (8001d88 <HAL_InitTick+0x9c>)
 8001d62:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 8001d64:	4620      	mov	r0, r4
 8001d66:	b008      	add	sp, #32
 8001d68:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8001d6a:	f004 fbe5 	bl	8006538 <HAL_RCC_GetPCLK1Freq>
 8001d6e:	0040      	lsls	r0, r0, #1
 8001d70:	e7d3      	b.n	8001d1a <HAL_InitTick+0x2e>
        status = HAL_ERROR;
 8001d72:	2401      	movs	r4, #1
 8001d74:	e7f6      	b.n	8001d64 <HAL_InitTick+0x78>
 8001d76:	bf00      	nop
 8001d78:	40023800 	.word	0x40023800
 8001d7c:	20000a9c 	.word	0x20000a9c
 8001d80:	40001000 	.word	0x40001000
 8001d84:	000f4240 	.word	0x000f4240
 8001d88:	2000007c 	.word	0x2000007c

08001d8c <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001d8c:	4770      	bx	lr

08001d8e <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001d8e:	e7fe      	b.n	8001d8e <HardFault_Handler>

08001d90 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001d90:	e7fe      	b.n	8001d90 <MemManage_Handler>

08001d92 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001d92:	e7fe      	b.n	8001d92 <BusFault_Handler>

08001d94 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001d94:	e7fe      	b.n	8001d94 <UsageFault_Handler>

08001d96 <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 8001d96:	4770      	bx	lr

08001d98 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001d98:	4801      	ldr	r0, [pc, #4]	@ (8001da0 <TIM6_DAC_IRQHandler+0x8>)
 8001d9a:	f005 b93f 	b.w	800701c <HAL_TIM_IRQHandler>
 8001d9e:	bf00      	nop
 8001da0:	20000a9c 	.word	0x20000a9c

08001da4 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001da4:	4801      	ldr	r0, [pc, #4]	@ (8001dac <LTDC_IRQHandler+0x8>)
 8001da6:	f004 b8a9 	b.w	8005efc <HAL_LTDC_IRQHandler>
 8001daa:	bf00      	nop
 8001dac:	200008c4 	.word	0x200008c4

08001db0 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001db0:	4801      	ldr	r0, [pc, #4]	@ (8001db8 <DMA2D_IRQHandler+0x8>)
 8001db2:	f002 bf95 	b.w	8004ce0 <HAL_DMA2D_IRQHandler>
 8001db6:	bf00      	nop
 8001db8:	200009c0 	.word	0x200009c0

08001dbc <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001dbc:	2001      	movs	r0, #1
 8001dbe:	4770      	bx	lr

08001dc0 <_kill>:

int _kill(int pid, int sig)
{
 8001dc0:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001dc2:	f01c f95f 	bl	801e084 <__errno>
 8001dc6:	2316      	movs	r3, #22
 8001dc8:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001dca:	f04f 30ff 	mov.w	r0, #4294967295
 8001dce:	bd08      	pop	{r3, pc}

08001dd0 <_exit>:

void _exit (int status)
{
 8001dd0:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001dd2:	f01c f957 	bl	801e084 <__errno>
 8001dd6:	2316      	movs	r3, #22
 8001dd8:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001dda:	e7fe      	b.n	8001dda <_exit+0xa>

08001ddc <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001ddc:	b570      	push	{r4, r5, r6, lr}
 8001dde:	460d      	mov	r5, r1
 8001de0:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001de2:	460e      	mov	r6, r1
 8001de4:	1b73      	subs	r3, r6, r5
 8001de6:	429c      	cmp	r4, r3
 8001de8:	dc01      	bgt.n	8001dee <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001dea:	4620      	mov	r0, r4
 8001dec:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001dee:	f3af 8000 	nop.w
 8001df2:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001df6:	e7f5      	b.n	8001de4 <_read+0x8>

08001df8 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001df8:	b570      	push	{r4, r5, r6, lr}
 8001dfa:	460d      	mov	r5, r1
 8001dfc:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001dfe:	460e      	mov	r6, r1
 8001e00:	1b73      	subs	r3, r6, r5
 8001e02:	429c      	cmp	r4, r3
 8001e04:	dc01      	bgt.n	8001e0a <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001e06:	4620      	mov	r0, r4
 8001e08:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001e0a:	f816 0b01 	ldrb.w	r0, [r6], #1
 8001e0e:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001e12:	e7f5      	b.n	8001e00 <_write+0x8>

08001e14 <_close>:

int _close(int file)
{
	return -1;
}
 8001e14:	f04f 30ff 	mov.w	r0, #4294967295
 8001e18:	4770      	bx	lr

08001e1a <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001e1a:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001e1e:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001e20:	2000      	movs	r0, #0
 8001e22:	4770      	bx	lr

08001e24 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001e24:	2001      	movs	r0, #1
 8001e26:	4770      	bx	lr

08001e28 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001e28:	2000      	movs	r0, #0
 8001e2a:	4770      	bx	lr

08001e2c <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001e2c:	4a0a      	ldr	r2, [pc, #40]	@ (8001e58 <_sbrk+0x2c>)
 8001e2e:	6811      	ldr	r1, [r2, #0]
{
 8001e30:	b508      	push	{r3, lr}
 8001e32:	4603      	mov	r3, r0
	if (heap_end == 0)
 8001e34:	b909      	cbnz	r1, 8001e3a <_sbrk+0xe>
		heap_end = &end;
 8001e36:	4909      	ldr	r1, [pc, #36]	@ (8001e5c <_sbrk+0x30>)
 8001e38:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8001e3a:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8001e3c:	4669      	mov	r1, sp
 8001e3e:	4403      	add	r3, r0
 8001e40:	428b      	cmp	r3, r1
 8001e42:	d906      	bls.n	8001e52 <_sbrk+0x26>
	{
		errno = ENOMEM;
 8001e44:	f01c f91e 	bl	801e084 <__errno>
 8001e48:	230c      	movs	r3, #12
 8001e4a:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001e4c:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8001e50:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8001e52:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8001e54:	e7fc      	b.n	8001e50 <_sbrk+0x24>
 8001e56:	bf00      	nop
 8001e58:	20000ae4 	.word	0x20000ae4
 8001e5c:	20012630 	.word	0x20012630

08001e60 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const touchgfx::FontId COUNTER = 3; // verdanab_15_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8001e60:	4770      	bx	lr

08001e62 <_ZN23ApplicationFontProviderD0Ev>:
 8001e62:	b510      	push	{r4, lr}
 8001e64:	2104      	movs	r1, #4
 8001e66:	4604      	mov	r4, r0
 8001e68:	f01b fdde 	bl	801da28 <_ZdlPvj>
 8001e6c:	4620      	mov	r0, r4
 8001e6e:	bd10      	pop	{r4, pc}

08001e70 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8001e70:	b508      	push	{r3, lr}
    switch (typography)
 8001e72:	2903      	cmp	r1, #3
 8001e74:	d813      	bhi.n	8001e9e <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 8001e76:	e8df f001 	tbb	[pc, r1]
 8001e7a:	0602      	.short	0x0602
 8001e7c:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_15_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8001e7e:	f001 fdb3 	bl	80039e8 <_ZN17TypedTextDatabase8getFontsEv>
 8001e82:	6800      	ldr	r0, [r0, #0]
        // verdanab_15_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8001e84:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8001e86:	f001 fdaf 	bl	80039e8 <_ZN17TypedTextDatabase8getFontsEv>
 8001e8a:	6840      	ldr	r0, [r0, #4]
 8001e8c:	e7fa      	b.n	8001e84 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8001e8e:	f001 fdab 	bl	80039e8 <_ZN17TypedTextDatabase8getFontsEv>
 8001e92:	6880      	ldr	r0, [r0, #8]
 8001e94:	e7f6      	b.n	8001e84 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8001e96:	f001 fda7 	bl	80039e8 <_ZN17TypedTextDatabase8getFontsEv>
 8001e9a:	68c0      	ldr	r0, [r0, #12]
 8001e9c:	e7f2      	b.n	8001e84 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 8001e9e:	2000      	movs	r0, #0
 8001ea0:	e7f0      	b.n	8001e84 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08001ea4 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8001ea4:	4800      	ldr	r0, [pc, #0]	@ (8001ea8 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8001ea6:	4770      	bx	lr
 8001ea8:	0801f1fc 	.word	0x0801f1fc

08001eac <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8001eac:	2020      	movs	r0, #32
 8001eae:	4770      	bx	lr

08001eb0 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8001eb0:	b513      	push	{r0, r1, r4, lr}
 8001eb2:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8001eb4:	b151      	cbz	r1, 8001ecc <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8001eb6:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8001eb8:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8001eba:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8001ebe:	aa01      	add	r2, sp, #4
 8001ec0:	689c      	ldr	r4, [r3, #8]
 8001ec2:	f10d 0303 	add.w	r3, sp, #3
 8001ec6:	47a0      	blx	r4
        return glyph;
    }
 8001ec8:	b002      	add	sp, #8
 8001eca:	bd10      	pop	{r4, pc}
            return 0;
 8001ecc:	4608      	mov	r0, r1
 8001ece:	e7fb      	b.n	8001ec8 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08001ed0 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8001ed0:	89c0      	ldrh	r0, [r0, #14]
 8001ed2:	4770      	bx	lr

08001ed4 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8001ed4:	8a00      	ldrh	r0, [r0, #16]
 8001ed6:	4770      	bx	lr

08001ed8 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8001ed8:	88c0      	ldrh	r0, [r0, #6]
 8001eda:	4770      	bx	lr

08001edc <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8001edc:	8880      	ldrh	r0, [r0, #4]
 8001ede:	4770      	bx	lr

08001ee0 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8001ee0:	7a80      	ldrb	r0, [r0, #10]
    }
 8001ee2:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 8001ee6:	4770      	bx	lr

08001ee8 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8001ee8:	7a80      	ldrb	r0, [r0, #10]
    }
 8001eea:	09c0      	lsrs	r0, r0, #7
 8001eec:	4770      	bx	lr

08001eee <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 8001eee:	2000      	movs	r0, #0
 8001ef0:	4770      	bx	lr
	...

08001ef4 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 8001ef4:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8001efc <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 8001ef8:	4770      	bx	lr
 8001efa:	bf00      	nop
 8001efc:	00000000 	.word	0x00000000

08001f00 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8001f00:	4770      	bx	lr

08001f02 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8001f02:	b510      	push	{r4, lr}
    }
 8001f04:	2108      	movs	r1, #8
    virtual ~TypedText()
 8001f06:	4604      	mov	r4, r0
    }
 8001f08:	f01b fd8e 	bl	801da28 <_ZdlPvj>
 8001f0c:	4620      	mov	r0, r4
 8001f0e:	bd10      	pop	{r4, pc}

08001f10 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8001f10:	2000      	movs	r0, #0
 8001f12:	4770      	bx	lr

08001f14 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8001f14:	8081      	strh	r1, [r0, #4]
    }
 8001f16:	4770      	bx	lr

08001f18 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8001f18:	80c1      	strh	r1, [r0, #6]
    }
 8001f1a:	4770      	bx	lr

08001f1c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001f1c:	8101      	strh	r1, [r0, #8]
    }
 8001f1e:	4770      	bx	lr

08001f20 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001f20:	8141      	strh	r1, [r0, #10]
    }
 8001f22:	4770      	bx	lr

08001f24 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001f24:	4770      	bx	lr

08001f26 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8001f26:	4770      	bx	lr

08001f28 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8001f28:	4770      	bx	lr

08001f2a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8001f2a:	4770      	bx	lr

08001f2c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001f2c:	4770      	bx	lr

08001f2e <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8001f2e:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001f30:	88c4      	ldrh	r4, [r0, #6]
 8001f32:	6803      	ldr	r3, [r0, #0]
 8001f34:	1b12      	subs	r2, r2, r4
 8001f36:	8884      	ldrh	r4, [r0, #4]
 8001f38:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8001f3a:	1b09      	subs	r1, r1, r4
 8001f3c:	b212      	sxth	r2, r2
    }
 8001f3e:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8001f42:	b209      	sxth	r1, r1
 8001f44:	4718      	bx	r3

08001f46 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8001f46:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8001f4a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001f4c:	f04f 33ff 	mov.w	r3, #4294967295
 8001f50:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8001f52:	6813      	ldr	r3, [r2, #0]
 8001f54:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8001f56:	6010      	str	r0, [r2, #0]
    }
 8001f58:	4770      	bx	lr

08001f5a <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8001f5a:	4770      	bx	lr

08001f5c <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8001f5c:	4770      	bx	lr

08001f5e <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8001f5e:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 8001f62:	6808      	ldr	r0, [r1, #0]
 8001f64:	6849      	ldr	r1, [r1, #4]
 8001f66:	c303      	stmia	r3!, {r0, r1}
    }
 8001f68:	4770      	bx	lr

08001f6a <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8001f6a:	4770      	bx	lr

08001f6c <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8001f6c:	4770      	bx	lr

08001f6e <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8001f6e:	6041      	str	r1, [r0, #4]
    }
 8001f70:	4770      	bx	lr

08001f72 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 8001f72:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8001f74:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 8001f76:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8001f7a:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8001f7e:	8002      	strh	r2, [r0, #0]
 8001f80:	8042      	strh	r2, [r0, #2]
 8001f82:	8084      	strh	r4, [r0, #4]
 8001f84:	80c1      	strh	r1, [r0, #6]
        }
 8001f86:	bd10      	pop	{r4, pc}

08001f88 <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 8001f88:	4770      	bx	lr

08001f8a <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8001f8a:	4770      	bx	lr

08001f8c <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8001f8c:	4b06      	ldr	r3, [pc, #24]	@ (8001fa8 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8001f8e:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8001f92:	2300      	movs	r3, #0
 8001f94:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8001f98:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8001f9c:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8001fa0:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 8001fa4:	4770      	bx	lr
 8001fa6:	bf00      	nop
 8001fa8:	08002365 	.word	0x08002365

08001fac <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8001fac:	2301      	movs	r3, #1
 8001fae:	7203      	strb	r3, [r0, #8]
    }
 8001fb0:	4770      	bx	lr

08001fb2 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 8001fb2:	4770      	bx	lr

08001fb4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>:
 * Screen transitioning to.
 *
 * @see Transition
 */
template <Direction templateDirection>
class SlideTransition : public Transition
 8001fb4:	4770      	bx	lr

08001fb6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE1EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 8001fb6:	4770      	bx	lr

08001fb8 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8001fb8:	4770      	bx	lr

08001fba <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8001fba:	4770      	bx	lr

08001fbc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE1EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8001fbc:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8001fbe:	6840      	ldr	r0, [r0, #4]
 8001fc0:	6803      	ldr	r3, [r0, #0]
 8001fc2:	3110      	adds	r1, #16
 8001fc4:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8001fc6:	4718      	bx	r3

08001fc8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE1EE4initEv>:
    }

    virtual void init()
 8001fc8:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8001fca:	6840      	ldr	r0, [r0, #4]
 8001fcc:	6803      	ldr	r3, [r0, #0]
 8001fce:	3110      	adds	r1, #16
 8001fd0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001fd2:	4718      	bx	r3

08001fd4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE1EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8001fd4:	4770      	bx	lr

08001fd6 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8001fd6:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8001fd8:	68c2      	ldr	r2, [r0, #12]
 8001fda:	6841      	ldr	r1, [r0, #4]
 8001fdc:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8001fde:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8001fe0:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8001fe4:	07d2      	lsls	r2, r2, #31
 8001fe6:	bf48      	it	mi
 8001fe8:	590a      	ldrmi	r2, [r1, r4]
 8001fea:	689b      	ldr	r3, [r3, #8]
    }
 8001fec:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8001ff0:	bf48      	it	mi
 8001ff2:	58d3      	ldrmi	r3, [r2, r3]
 8001ff4:	4718      	bx	r3

08001ff6 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8001ff6:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 8001ff8:	6840      	ldr	r0, [r0, #4]
 8001ffa:	b130      	cbz	r0, 800200a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8001ffc:	689a      	ldr	r2, [r3, #8]
 8001ffe:	b91a      	cbnz	r2, 8002008 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 8002000:	68d8      	ldr	r0, [r3, #12]
 8002002:	f000 0001 	and.w	r0, r0, #1
 8002006:	4770      	bx	lr
 8002008:	2001      	movs	r0, #1
    }
 800200a:	4770      	bx	lr

0800200c <_ZN8touchgfx12NoTransitionD0Ev>:
 800200c:	b510      	push	{r4, lr}
 800200e:	210c      	movs	r1, #12
 8002010:	4604      	mov	r4, r0
 8002012:	f01b fd09 	bl	801da28 <_ZdlPvj>
 8002016:	4620      	mov	r0, r4
 8002018:	bd10      	pop	{r4, pc}

0800201a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800201a:	b510      	push	{r4, lr}
 800201c:	2110      	movs	r1, #16
 800201e:	4604      	mov	r4, r0
 8002020:	f01b fd02 	bl	801da28 <_ZdlPvj>
 8002024:	4620      	mov	r0, r4
 8002026:	bd10      	pop	{r4, pc}

08002028 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002028:	b510      	push	{r4, lr}
 800202a:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 800202e:	4604      	mov	r4, r0
 8002030:	f01b fcfa 	bl	801da28 <_ZdlPvj>
 8002034:	4620      	mov	r0, r4
 8002036:	bd10      	pop	{r4, pc}

08002038 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE1EED0Ev>:
class WipeTransition : public Transition
 8002038:	b510      	push	{r4, lr}
 800203a:	2138      	movs	r1, #56	@ 0x38
 800203c:	4604      	mov	r4, r0
 800203e:	f01b fcf3 	bl	801da28 <_ZdlPvj>
 8002042:	4620      	mov	r0, r4
 8002044:	bd10      	pop	{r4, pc}

08002046 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 8002046:	b510      	push	{r4, lr}
 8002048:	2128      	movs	r1, #40	@ 0x28
 800204a:	4604      	mov	r4, r0
 800204c:	f01b fcec 	bl	801da28 <_ZdlPvj>
 8002050:	4620      	mov	r0, r4
 8002052:	bd10      	pop	{r4, pc}

08002054 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev>:
 8002054:	b510      	push	{r4, lr}
 8002056:	2140      	movs	r1, #64	@ 0x40
 8002058:	4604      	mov	r4, r0
 800205a:	f01b fce5 	bl	801da28 <_ZdlPvj>
 800205e:	4620      	mov	r0, r4
 8002060:	bd10      	pop	{r4, pc}

08002062 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002062:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8002064:	f00a ff78 	bl	800cf58 <_ZN8touchgfx11Application11getInstanceEv>
 8002068:	6803      	ldr	r3, [r0, #0]
    }
 800206a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 800206e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002070:	4718      	bx	r3

08002072 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8002072:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8002076:	b112      	cbz	r2, 800207e <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8002078:	6803      	ldr	r3, [r0, #0]
 800207a:	695b      	ldr	r3, [r3, #20]
 800207c:	4718      	bx	r3
    }
 800207e:	4770      	bx	lr

08002080 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv>:
        screenContainer->invalidate();
    }

    virtual void tearDown()
    {
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 8002080:	4b05      	ldr	r3, [pc, #20]	@ (8002098 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x18>)
 8002082:	781b      	ldrb	r3, [r3, #0]
    virtual void tearDown()
 8002084:	4601      	mov	r1, r0
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 8002086:	b12b      	cbz	r3, 8002094 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x14>
 8002088:	6840      	ldr	r0, [r0, #4]
 800208a:	b118      	cbz	r0, 8002094 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x14>
        {
            screenContainer->remove(snapshot);
 800208c:	6803      	ldr	r3, [r0, #0]
 800208e:	310c      	adds	r1, #12
 8002090:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8002092:	4718      	bx	r3
        }
    }
 8002094:	4770      	bx	lr
 8002096:	bf00      	nop
 8002098:	200119fb 	.word	0x200119fb

0800209c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv>:

    virtual void init()
    {
        Transition::init();

        if (done)
 800209c:	7a03      	ldrb	r3, [r0, #8]
    virtual void init()
 800209e:	b570      	push	{r4, r5, r6, lr}
 80020a0:	4605      	mov	r5, r0
        if (done)
 80020a2:	b9bb      	cbnz	r3, 80020d4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x38>
        {
            return;
        }

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
 80020a4:	6840      	ldr	r0, [r0, #4]
 80020a6:	6803      	ldr	r3, [r0, #0]
 80020a8:	69db      	ldr	r3, [r3, #28]
 80020aa:	4798      	blx	r3
 80020ac:	4604      	mov	r4, r0
        while (d)
 80020ae:	b93c      	cbnz	r4, 80020c0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x24>
            }

            d = d->getNextSibling();
        }

        screenContainer->add(snapshot);
 80020b0:	6868      	ldr	r0, [r5, #4]
 80020b2:	6803      	ldr	r3, [r0, #0]
 80020b4:	f105 010c 	add.w	r1, r5, #12
 80020b8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
    }
 80020ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
 80020be:	4718      	bx	r3
                d->setX(d->getX() - targetValue);
 80020c0:	88a1      	ldrh	r1, [r4, #4]
 80020c2:	8f6b      	ldrh	r3, [r5, #58]	@ 0x3a
 80020c4:	1ac9      	subs	r1, r1, r3
 80020c6:	6823      	ldr	r3, [r4, #0]
 80020c8:	4620      	mov	r0, r4
 80020ca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80020cc:	b209      	sxth	r1, r1
 80020ce:	4798      	blx	r3
        return nextSibling;
 80020d0:	69a4      	ldr	r4, [r4, #24]
 80020d2:	e7ec      	b.n	80020ae <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x12>
    }
 80020d4:	bd70      	pop	{r4, r5, r6, pc}
	...

080020d8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE1EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80020d8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80020da:	4604      	mov	r4, r0
        animationCounter++;
 80020dc:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80020de:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80020e0:	3001      	adds	r0, #1
 80020e2:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80020e4:	4298      	cmp	r0, r3
        animationCounter++;
 80020e6:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80020e8:	d905      	bls.n	80020f6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE1EE15handleTickEventEv+0x1e>
            done = true;
 80020ea:	2301      	movs	r3, #1
 80020ec:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80020ee:	2300      	movs	r3, #0
 80020f0:	72a3      	strb	r3, [r4, #10]
    }
 80020f2:	b002      	add	sp, #8
 80020f4:	bd70      	pop	{r4, r5, r6, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80020f6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80020fa:	2100      	movs	r1, #0
 80020fc:	f00c fc6e 	bl	800e9dc <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8002100:	07c3      	lsls	r3, r0, #31
 8002102:	d506      	bpl.n	8002112 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE1EE15handleTickEventEv+0x3a>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002104:	2800      	cmp	r0, #0
 8002106:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800210a:	bfc8      	it	gt
 800210c:	2301      	movgt	r3, #1
 800210e:	4418      	add	r0, r3
 8002110:	b200      	sxth	r0, r0
                solid.setHeight(HAL::DISPLAY_HEIGHT - calculatedValue);
 8002112:	4a14      	ldr	r2, [pc, #80]	@ (8002164 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE1EE15handleTickEventEv+0x8c>)
                const uint16_t prevSolidHeight = solid.getHeight();
 8002114:	8b63      	ldrh	r3, [r4, #26]
                solid.setHeight(HAL::DISPLAY_HEIGHT - calculatedValue);
 8002116:	8811      	ldrh	r1, [r2, #0]
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002118:	81e0      	strh	r0, [r4, #14]
                solid.setHeight(HAL::DISPLAY_HEIGHT - calculatedValue);
 800211a:	b280      	uxth	r0, r0
 800211c:	1a0a      	subs	r2, r1, r0
                const uint16_t delta = prevSolidHeight - solid.getHeight();
 800211e:	4403      	add	r3, r0
                screenContainer->invalidateRect(r);
 8002120:	6860      	ldr	r0, [r4, #4]
                Rect r(0, solid.getHeight(), HAL::DISPLAY_WIDTH, delta);
 8002122:	4d11      	ldr	r5, [pc, #68]	@ (8002168 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE1EE15handleTickEventEv+0x90>)
                const uint16_t delta = prevSolidHeight - solid.getHeight();
 8002124:	1a5b      	subs	r3, r3, r1
 8002126:	f8ad 3006 	strh.w	r3, [sp, #6]
                screenContainer->invalidateRect(r);
 800212a:	6803      	ldr	r3, [r0, #0]
                Rect r(0, solid.getHeight(), HAL::DISPLAY_WIDTH, delta);
 800212c:	f9b5 5000 	ldrsh.w	r5, [r5]
                screenContainer->invalidateRect(r);
 8002130:	691b      	ldr	r3, [r3, #16]
 8002132:	f8ad 5004 	strh.w	r5, [sp, #4]
                solid.setHeight(HAL::DISPLAY_HEIGHT - calculatedValue);
 8002136:	b212      	sxth	r2, r2
 8002138:	2600      	movs	r6, #0
        rect.height = height;
 800213a:	8362      	strh	r2, [r4, #26]
 800213c:	f8ad 6000 	strh.w	r6, [sp]
 8002140:	f8ad 2002 	strh.w	r2, [sp, #2]
                screenContainer->invalidateRect(r);
 8002144:	4669      	mov	r1, sp
 8002146:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8002148:	7aa3      	ldrb	r3, [r4, #10]
 800214a:	2b01      	cmp	r3, #1
 800214c:	d1d1      	bne.n	80020f2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE1EE15handleTickEventEv+0x1a>
 800214e:	4b07      	ldr	r3, [pc, #28]	@ (800216c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE1EE15handleTickEventEv+0x94>)
 8002150:	781b      	ldrb	r3, [r3, #0]
 8002152:	2b00      	cmp	r3, #0
 8002154:	d0cd      	beq.n	80020f2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE1EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8002156:	f00a feff 	bl	800cf58 <_ZN8touchgfx11Application11getInstanceEv>
    }
 800215a:	b002      	add	sp, #8
 800215c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8002160:	f00a bf00 	b.w	800cf64 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
 8002164:	200119f2 	.word	0x200119f2
 8002168:	200119f0 	.word	0x200119f0
 800216c:	200119fa 	.word	0x200119fa

08002170 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8002170:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8002174:	b11a      	cbz	r2, 800217e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002176:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 800217a:	b102      	cbz	r2, 800217e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800217c:	6018      	str	r0, [r3, #0]
        }
    }
 800217e:	4770      	bx	lr

08002180 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002180:	b510      	push	{r4, lr}
 8002182:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002184:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 8002188:	b158      	cbz	r0, 80021a2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800218a:	6803      	ldr	r3, [r0, #0]
 800218c:	68db      	ldr	r3, [r3, #12]
 800218e:	4798      	blx	r3
 8002190:	b138      	cbz	r0, 80021a2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002192:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 8002196:	6803      	ldr	r3, [r0, #0]
 8002198:	689b      	ldr	r3, [r3, #8]
 800219a:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800219c:	2300      	movs	r3, #0
 800219e:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 80021a2:	bd10      	pop	{r4, pc}

080021a4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80021a4:	b570      	push	{r4, r5, r6, lr}
 80021a6:	4604      	mov	r4, r0
        animationCounter++;
 80021a8:	f890 0039 	ldrb.w	r0, [r0, #57]	@ 0x39
        if (animationCounter > animationSteps)
 80021ac:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
        animationCounter++;
 80021b0:	3001      	adds	r0, #1
 80021b2:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80021b4:	4298      	cmp	r0, r3
        animationCounter++;
 80021b6:	f884 0039 	strb.w	r0, [r4, #57]	@ 0x39
        if (animationCounter > animationSteps)
 80021ba:	d905      	bls.n	80021c8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x24>
            done = true;
 80021bc:	2301      	movs	r3, #1
 80021be:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80021c0:	2300      	movs	r3, #0
 80021c2:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
    }
 80021c6:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80021c8:	f9b4 203a 	ldrsh.w	r2, [r4, #58]	@ 0x3a
 80021cc:	2100      	movs	r1, #0
 80021ce:	f00c fc05 	bl	800e9dc <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 80021d2:	07c3      	lsls	r3, r0, #31
 80021d4:	d506      	bpl.n	80021e4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x40>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80021d6:	2800      	cmp	r0, #0
 80021d8:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80021dc:	bfc8      	it	gt
 80021de:	2301      	movgt	r3, #1
 80021e0:	4418      	add	r0, r3
 80021e2:	b200      	sxth	r0, r0
            relativeValue = calculatedValue - snapshot.getX();
 80021e4:	8a23      	ldrh	r3, [r4, #16]
 80021e6:	1ac0      	subs	r0, r0, r3
 80021e8:	87a0      	strh	r0, [r4, #60]	@ 0x3c
        Drawable* d = screenContainer->getFirstChild();
 80021ea:	6860      	ldr	r0, [r4, #4]
 80021ec:	6803      	ldr	r3, [r0, #0]
 80021ee:	69db      	ldr	r3, [r3, #28]
 80021f0:	4798      	blx	r3
 80021f2:	4605      	mov	r5, r0
        while (d)
 80021f4:	b92d      	cbnz	r5, 8002202 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x5e>
 80021f6:	6860      	ldr	r0, [r4, #4]
        screenContainer->invalidate();
 80021f8:	6803      	ldr	r3, [r0, #0]
    }
 80021fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
 80021fe:	695b      	ldr	r3, [r3, #20]
 8002200:	4718      	bx	r3
                d->setX(d->getX() + relativeValue);
 8002202:	88a9      	ldrh	r1, [r5, #4]
 8002204:	8fa3      	ldrh	r3, [r4, #60]	@ 0x3c
 8002206:	4419      	add	r1, r3
 8002208:	682b      	ldr	r3, [r5, #0]
 800220a:	4628      	mov	r0, r5
 800220c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800220e:	b209      	sxth	r1, r1
 8002210:	4798      	blx	r3
        return nextSibling;
 8002212:	69ad      	ldr	r5, [r5, #24]
 8002214:	e7ee      	b.n	80021f4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x50>
	...

08002218 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen2ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreen2ScreenNoTransitionImpl()
{
 8002218:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen2View, Screen2Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800221c:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8002220:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002222:	68b0      	ldr	r0, [r6, #8]
 8002224:	6803      	ldr	r3, [r0, #0]
 8002226:	6a1b      	ldr	r3, [r3, #32]
 8002228:	4798      	blx	r3
 800222a:	f5b0 7f2d 	cmp.w	r0, #692	@ 0x2b4
 800222e:	d205      	bcs.n	800223c <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x24>
 8002230:	4b44      	ldr	r3, [pc, #272]	@ (8002344 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x12c>)
 8002232:	4a45      	ldr	r2, [pc, #276]	@ (8002348 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x130>)
 8002234:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002236:	4845      	ldr	r0, [pc, #276]	@ (800234c <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x134>)
 8002238:	f01b fc24 	bl	801da84 <__assert_func>
 800223c:	6870      	ldr	r0, [r6, #4]
 800223e:	6803      	ldr	r3, [r0, #0]
 8002240:	6a1b      	ldr	r3, [r3, #32]
 8002242:	4798      	blx	r3
 8002244:	280f      	cmp	r0, #15
 8002246:	d803      	bhi.n	8002250 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x38>
 8002248:	4b41      	ldr	r3, [pc, #260]	@ (8002350 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x138>)
 800224a:	4a3f      	ldr	r2, [pc, #252]	@ (8002348 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x130>)
 800224c:	21a4      	movs	r1, #164	@ 0xa4
 800224e:	e7f2      	b.n	8002236 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002250:	68f0      	ldr	r0, [r6, #12]
 8002252:	6803      	ldr	r3, [r0, #0]
 8002254:	6a1b      	ldr	r3, [r3, #32]
 8002256:	4798      	blx	r3
 8002258:	280b      	cmp	r0, #11
 800225a:	d803      	bhi.n	8002264 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x4c>
 800225c:	4b3d      	ldr	r3, [pc, #244]	@ (8002354 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x13c>)
 800225e:	4a3a      	ldr	r2, [pc, #232]	@ (8002348 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x130>)
 8002260:	21a5      	movs	r1, #165	@ 0xa5
 8002262:	e7e8      	b.n	8002236 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8002264:	f00a fe78 	bl	800cf58 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002268:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 800235c <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x144>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 800226c:	3004      	adds	r0, #4
 800226e:	f00a fed9 	bl	800d024 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002272:	f8d9 0000 	ldr.w	r0, [r9]
 8002276:	b110      	cbz	r0, 800227e <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8002278:	6803      	ldr	r3, [r0, #0]
 800227a:	68db      	ldr	r3, [r3, #12]
 800227c:	4798      	blx	r3
    if (*currentTrans)
 800227e:	f8d9 0000 	ldr.w	r0, [r9]
 8002282:	b110      	cbz	r0, 800228a <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8002284:	6803      	ldr	r3, [r0, #0]
 8002286:	681b      	ldr	r3, [r3, #0]
 8002288:	4798      	blx	r3
    if (*currentScreen)
 800228a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8002360 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x148>
 800228e:	f8d8 0000 	ldr.w	r0, [r8]
 8002292:	b110      	cbz	r0, 800229a <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8002294:	6803      	ldr	r3, [r0, #0]
 8002296:	695b      	ldr	r3, [r3, #20]
 8002298:	4798      	blx	r3
    if (*currentPresenter)
 800229a:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800229e:	b110      	cbz	r0, 80022a6 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80022a0:	6803      	ldr	r3, [r0, #0]
 80022a2:	685b      	ldr	r3, [r3, #4]
 80022a4:	4798      	blx	r3
    if (*currentScreen)
 80022a6:	f8d8 0000 	ldr.w	r0, [r8]
 80022aa:	b110      	cbz	r0, 80022b2 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 80022ac:	6803      	ldr	r3, [r0, #0]
 80022ae:	681b      	ldr	r3, [r3, #0]
 80022b0:	4798      	blx	r3
    if (*currentPresenter)
 80022b2:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80022b6:	b110      	cbz	r0, 80022be <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80022b8:	6803      	ldr	r3, [r0, #0]
 80022ba:	689b      	ldr	r3, [r3, #8]
 80022bc:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80022be:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80022c0:	6803      	ldr	r3, [r0, #0]
 80022c2:	2100      	movs	r1, #0
 80022c4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80022c6:	4798      	blx	r3
        : screenContainer(0), done(false)
 80022c8:	f04f 0b00 	mov.w	fp, #0
 80022cc:	4b22      	ldr	r3, [pc, #136]	@ (8002358 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x140>)
 80022ce:	f8c0 b004 	str.w	fp, [r0, #4]
 80022d2:	4604      	mov	r4, r0
 80022d4:	f880 b008 	strb.w	fp, [r0, #8]
 80022d8:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80022da:	68b0      	ldr	r0, [r6, #8]
 80022dc:	6803      	ldr	r3, [r0, #0]
 80022de:	4659      	mov	r1, fp
 80022e0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80022e2:	4798      	blx	r3
 80022e4:	4605      	mov	r5, r0
 80022e6:	f001 fd4b 	bl	8003d80 <_ZN11Screen2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80022ea:	6870      	ldr	r0, [r6, #4]
 80022ec:	6803      	ldr	r3, [r0, #0]
 80022ee:	4659      	mov	r1, fp
 80022f0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80022f2:	4798      	blx	r3
 80022f4:	4629      	mov	r1, r5
 80022f6:	4606      	mov	r6, r0
 80022f8:	f001 fbfa 	bl	8003af0 <_ZN16Screen2PresenterC1ER11Screen2View>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 80022fc:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 80022fe:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8002302:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8002306:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800230a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800230e:	682b      	ldr	r3, [r5, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002310:	f8c6 a008 	str.w	sl, [r6, #8]
 8002314:	4628      	mov	r0, r5
 8002316:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002318:	63ee      	str	r6, [r5, #60]	@ 0x3c
 800231a:	4798      	blx	r3
    newPresenter->activate();
 800231c:	6833      	ldr	r3, [r6, #0]
 800231e:	4630      	mov	r0, r6
 8002320:	681b      	ldr	r3, [r3, #0]
 8002322:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002324:	4621      	mov	r1, r4
 8002326:	4628      	mov	r0, r5
 8002328:	f00c fb52 	bl	800e9d0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800232c:	6823      	ldr	r3, [r4, #0]
 800232e:	4620      	mov	r0, r4
 8002330:	691b      	ldr	r3, [r3, #16]
 8002332:	4798      	blx	r3
    newTransition->invalidate();
 8002334:	6823      	ldr	r3, [r4, #0]
 8002336:	695b      	ldr	r3, [r3, #20]
 8002338:	4620      	mov	r0, r4
}
 800233a:	b001      	add	sp, #4
 800233c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002340:	4718      	bx	r3
 8002342:	bf00      	nop
 8002344:	0801f48c 	.word	0x0801f48c
 8002348:	0801f51a 	.word	0x0801f51a
 800234c:	0801f5ec 	.word	0x0801f5ec
 8002350:	0801f633 	.word	0x0801f633
 8002354:	0801f6d6 	.word	0x0801f6d6
 8002358:	0801faf4 	.word	0x0801faf4
 800235c:	20011a3c 	.word	0x20011a3c
 8002360:	20011a38 	.word	0x20011a38

08002364 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
{
 8002364:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002368:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 800236c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800236e:	68b0      	ldr	r0, [r6, #8]
 8002370:	6803      	ldr	r3, [r0, #0]
 8002372:	6a1b      	ldr	r3, [r3, #32]
 8002374:	4798      	blx	r3
 8002376:	f5b0 7fb4 	cmp.w	r0, #360	@ 0x168
 800237a:	d205      	bcs.n	8002388 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 800237c:	4b44      	ldr	r3, [pc, #272]	@ (8002490 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12c>)
 800237e:	4a45      	ldr	r2, [pc, #276]	@ (8002494 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8002380:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002382:	4845      	ldr	r0, [pc, #276]	@ (8002498 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002384:	f01b fb7e 	bl	801da84 <__assert_func>
 8002388:	6870      	ldr	r0, [r6, #4]
 800238a:	6803      	ldr	r3, [r0, #0]
 800238c:	6a1b      	ldr	r3, [r3, #32]
 800238e:	4798      	blx	r3
 8002390:	280f      	cmp	r0, #15
 8002392:	d803      	bhi.n	800239c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 8002394:	4b41      	ldr	r3, [pc, #260]	@ (800249c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 8002396:	4a3f      	ldr	r2, [pc, #252]	@ (8002494 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8002398:	21a4      	movs	r1, #164	@ 0xa4
 800239a:	e7f2      	b.n	8002382 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800239c:	68f0      	ldr	r0, [r6, #12]
 800239e:	6803      	ldr	r3, [r0, #0]
 80023a0:	6a1b      	ldr	r3, [r3, #32]
 80023a2:	4798      	blx	r3
 80023a4:	280b      	cmp	r0, #11
 80023a6:	d803      	bhi.n	80023b0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 80023a8:	4b3d      	ldr	r3, [pc, #244]	@ (80024a0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 80023aa:	4a3a      	ldr	r2, [pc, #232]	@ (8002494 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 80023ac:	21a5      	movs	r1, #165	@ 0xa5
 80023ae:	e7e8      	b.n	8002382 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80023b0:	f00a fdd2 	bl	800cf58 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80023b4:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 80024a8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>
 80023b8:	3004      	adds	r0, #4
 80023ba:	f00a fe33 	bl	800d024 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80023be:	f8d9 0000 	ldr.w	r0, [r9]
 80023c2:	b110      	cbz	r0, 80023ca <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 80023c4:	6803      	ldr	r3, [r0, #0]
 80023c6:	68db      	ldr	r3, [r3, #12]
 80023c8:	4798      	blx	r3
    if (*currentTrans)
 80023ca:	f8d9 0000 	ldr.w	r0, [r9]
 80023ce:	b110      	cbz	r0, 80023d6 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 80023d0:	6803      	ldr	r3, [r0, #0]
 80023d2:	681b      	ldr	r3, [r3, #0]
 80023d4:	4798      	blx	r3
    if (*currentScreen)
 80023d6:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80024ac <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
 80023da:	f8d8 0000 	ldr.w	r0, [r8]
 80023de:	b110      	cbz	r0, 80023e6 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80023e0:	6803      	ldr	r3, [r0, #0]
 80023e2:	695b      	ldr	r3, [r3, #20]
 80023e4:	4798      	blx	r3
    if (*currentPresenter)
 80023e6:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80023ea:	b110      	cbz	r0, 80023f2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80023ec:	6803      	ldr	r3, [r0, #0]
 80023ee:	685b      	ldr	r3, [r3, #4]
 80023f0:	4798      	blx	r3
    if (*currentScreen)
 80023f2:	f8d8 0000 	ldr.w	r0, [r8]
 80023f6:	b110      	cbz	r0, 80023fe <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 80023f8:	6803      	ldr	r3, [r0, #0]
 80023fa:	681b      	ldr	r3, [r3, #0]
 80023fc:	4798      	blx	r3
    if (*currentPresenter)
 80023fe:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002402:	b110      	cbz	r0, 800240a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8002404:	6803      	ldr	r3, [r0, #0]
 8002406:	689b      	ldr	r3, [r3, #8]
 8002408:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800240a:	68f0      	ldr	r0, [r6, #12]
 800240c:	6803      	ldr	r3, [r0, #0]
 800240e:	2100      	movs	r1, #0
 8002410:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002412:	4798      	blx	r3
 8002414:	f04f 0b00 	mov.w	fp, #0
 8002418:	4b22      	ldr	r3, [pc, #136]	@ (80024a4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 800241a:	f8c0 b004 	str.w	fp, [r0, #4]
 800241e:	4604      	mov	r4, r0
 8002420:	f880 b008 	strb.w	fp, [r0, #8]
 8002424:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002426:	68b0      	ldr	r0, [r6, #8]
 8002428:	6803      	ldr	r3, [r0, #0]
 800242a:	4659      	mov	r1, fp
 800242c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800242e:	4798      	blx	r3
 8002430:	4605      	mov	r5, r0
 8002432:	f001 fb43 	bl	8003abc <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002436:	6870      	ldr	r0, [r6, #4]
 8002438:	6803      	ldr	r3, [r0, #0]
 800243a:	4659      	mov	r1, fp
 800243c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800243e:	4798      	blx	r3
 8002440:	4629      	mov	r1, r5
 8002442:	4606      	mov	r6, r0
 8002444:	f001 fb18 	bl	8003a78 <_ZN16Screen1PresenterC1ER11Screen1View>
    model->bind(newPresenter);
 8002448:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 800244a:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 800244e:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8002452:	f8c8 5000 	str.w	r5, [r8]
 8002456:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800245a:	682b      	ldr	r3, [r5, #0]
 800245c:	f8c6 a008 	str.w	sl, [r6, #8]
 8002460:	4628      	mov	r0, r5
 8002462:	68db      	ldr	r3, [r3, #12]
 8002464:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8002466:	4798      	blx	r3
    newPresenter->activate();
 8002468:	6833      	ldr	r3, [r6, #0]
 800246a:	4630      	mov	r0, r6
 800246c:	681b      	ldr	r3, [r3, #0]
 800246e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002470:	4621      	mov	r1, r4
 8002472:	4628      	mov	r0, r5
 8002474:	f00c faac 	bl	800e9d0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002478:	6823      	ldr	r3, [r4, #0]
 800247a:	4620      	mov	r0, r4
 800247c:	691b      	ldr	r3, [r3, #16]
 800247e:	4798      	blx	r3
    newTransition->invalidate();
 8002480:	6823      	ldr	r3, [r4, #0]
 8002482:	695b      	ldr	r3, [r3, #20]
 8002484:	4620      	mov	r0, r4
}
 8002486:	b001      	add	sp, #4
 8002488:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800248c:	4718      	bx	r3
 800248e:	bf00      	nop
 8002490:	0801f48c 	.word	0x0801f48c
 8002494:	0801f779 	.word	0x0801f779
 8002498:	0801f5ec 	.word	0x0801f5ec
 800249c:	0801f633 	.word	0x0801f633
 80024a0:	0801f6d6 	.word	0x0801f6d6
 80024a4:	0801faf4 	.word	0x0801faf4
 80024a8:	20011a3c 	.word	0x20011a3c
 80024ac:	20011a38 	.word	0x20011a38

080024b0 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80024b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80024b4:	461d      	mov	r5, r3
        setX(x);
 80024b6:	6803      	ldr	r3, [r0, #0]
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80024b8:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
        setX(x);
 80024bc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80024be:	4604      	mov	r4, r0
 80024c0:	4616      	mov	r6, r2
        setX(x);
 80024c2:	4798      	blx	r3
        setY(y);
 80024c4:	6823      	ldr	r3, [r4, #0]
 80024c6:	4631      	mov	r1, r6
 80024c8:	4620      	mov	r0, r4
 80024ca:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80024cc:	4798      	blx	r3
        setWidth(width);
 80024ce:	6823      	ldr	r3, [r4, #0]
 80024d0:	4629      	mov	r1, r5
 80024d2:	4620      	mov	r0, r4
 80024d4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80024d6:	4798      	blx	r3
        setHeight(height);
 80024d8:	6823      	ldr	r3, [r4, #0]
 80024da:	4639      	mov	r1, r7
 80024dc:	4620      	mov	r0, r4
 80024de:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
    }
 80024e0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setHeight(height);
 80024e4:	4718      	bx	r3
	...

080024e8 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv>:
{
 80024e8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen2View, Screen2Presenter, touchgfx::WipeTransition<SOUTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80024ec:	e9d0 ba55 	ldrd	fp, sl, [r0, #340]	@ 0x154
{
 80024f0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80024f2:	f8db 0008 	ldr.w	r0, [fp, #8]
 80024f6:	6803      	ldr	r3, [r0, #0]
 80024f8:	6a1b      	ldr	r3, [r3, #32]
 80024fa:	4798      	blx	r3
 80024fc:	f5b0 7f2d 	cmp.w	r0, #692	@ 0x2b4
 8002500:	d205      	bcs.n	800250e <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x26>
 8002502:	4b54      	ldr	r3, [pc, #336]	@ (8002654 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x16c>)
 8002504:	4a54      	ldr	r2, [pc, #336]	@ (8002658 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x170>)
 8002506:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002508:	4854      	ldr	r0, [pc, #336]	@ (800265c <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x174>)
 800250a:	f01b fabb 	bl	801da84 <__assert_func>
 800250e:	f8db 0004 	ldr.w	r0, [fp, #4]
 8002512:	6803      	ldr	r3, [r0, #0]
 8002514:	6a1b      	ldr	r3, [r3, #32]
 8002516:	4798      	blx	r3
 8002518:	280f      	cmp	r0, #15
 800251a:	d803      	bhi.n	8002524 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x3c>
 800251c:	4b50      	ldr	r3, [pc, #320]	@ (8002660 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x178>)
 800251e:	4a4e      	ldr	r2, [pc, #312]	@ (8002658 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x170>)
 8002520:	21a4      	movs	r1, #164	@ 0xa4
 8002522:	e7f1      	b.n	8002508 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002524:	f8db 000c 	ldr.w	r0, [fp, #12]
 8002528:	6803      	ldr	r3, [r0, #0]
 800252a:	6a1b      	ldr	r3, [r3, #32]
 800252c:	4798      	blx	r3
 800252e:	2837      	cmp	r0, #55	@ 0x37
 8002530:	d803      	bhi.n	800253a <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x52>
 8002532:	4b4c      	ldr	r3, [pc, #304]	@ (8002664 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x17c>)
 8002534:	4a48      	ldr	r2, [pc, #288]	@ (8002658 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x170>)
 8002536:	21a5      	movs	r1, #165	@ 0xa5
 8002538:	e7e6      	b.n	8002508 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800253a:	f00a fd0d 	bl	800cf58 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800253e:	f8df 9138 	ldr.w	r9, [pc, #312]	@ 8002678 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x190>
 8002542:	3004      	adds	r0, #4
 8002544:	f00a fd6e 	bl	800d024 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002548:	f8d9 0000 	ldr.w	r0, [r9]
 800254c:	b110      	cbz	r0, 8002554 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x6c>
        (*currentTrans)->tearDown();
 800254e:	6803      	ldr	r3, [r0, #0]
 8002550:	68db      	ldr	r3, [r3, #12]
 8002552:	4798      	blx	r3
    if (*currentTrans)
 8002554:	f8d9 0000 	ldr.w	r0, [r9]
 8002558:	b110      	cbz	r0, 8002560 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x78>
        (*currentTrans)->~Transition();
 800255a:	6803      	ldr	r3, [r0, #0]
 800255c:	681b      	ldr	r3, [r3, #0]
 800255e:	4798      	blx	r3
    if (*currentScreen)
 8002560:	f8df 8118 	ldr.w	r8, [pc, #280]	@ 800267c <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x194>
 8002564:	f8d8 0000 	ldr.w	r0, [r8]
 8002568:	b110      	cbz	r0, 8002570 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x88>
        (*currentScreen)->tearDownScreen();
 800256a:	6803      	ldr	r3, [r0, #0]
 800256c:	695b      	ldr	r3, [r3, #20]
 800256e:	4798      	blx	r3
    if (*currentPresenter)
 8002570:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002574:	b110      	cbz	r0, 800257c <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x94>
        (*currentPresenter)->deactivate();
 8002576:	6803      	ldr	r3, [r0, #0]
 8002578:	685b      	ldr	r3, [r3, #4]
 800257a:	4798      	blx	r3
    if (*currentScreen)
 800257c:	f8d8 0000 	ldr.w	r0, [r8]
 8002580:	b110      	cbz	r0, 8002588 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0xa0>
        (*currentScreen)->~Screen();
 8002582:	6803      	ldr	r3, [r0, #0]
 8002584:	681b      	ldr	r3, [r3, #0]
 8002586:	4798      	blx	r3
    if (*currentPresenter)
 8002588:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800258c:	b110      	cbz	r0, 8002594 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0xac>
        (*currentPresenter)->~Presenter();
 800258e:	6803      	ldr	r3, [r0, #0]
 8002590:	689b      	ldr	r3, [r3, #8]
 8002592:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002594:	f8db 000c 	ldr.w	r0, [fp, #12]
 8002598:	6803      	ldr	r3, [r0, #0]
 800259a:	2100      	movs	r1, #0
 800259c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800259e:	4798      	blx	r3
          solid()
 80025a0:	4b31      	ldr	r3, [pc, #196]	@ (8002668 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x180>)
 80025a2:	6003      	str	r3, [r0, #0]
 80025a4:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 80025a8:	8103      	strh	r3, [r0, #8]
 80025aa:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80025ae:	6343      	str	r3, [r0, #52]	@ 0x34
    class FullSolidRect : public Widget
 80025b0:	4b2e      	ldr	r3, [pc, #184]	@ (800266c <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x184>)
 80025b2:	6103      	str	r3, [r0, #16]
            targetValue = HAL::DISPLAY_HEIGHT;
 80025b4:	4b2e      	ldr	r3, [pc, #184]	@ (8002670 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x188>)
        : screenContainer(0), done(false)
 80025b6:	2500      	movs	r5, #0
 80025b8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80025bc:	6045      	str	r5, [r0, #4]
          animationCounter(0),
 80025be:	7285      	strb	r5, [r0, #10]
          calculatedValue(0),
 80025c0:	81c5      	strh	r5, [r0, #14]
            targetValue = HAL::DISPLAY_HEIGHT;
 80025c2:	8183      	strh	r3, [r0, #12]
          solid()
 80025c4:	e9c0 5505 	strd	r5, r5, [r0, #20]
 80025c8:	e9c0 5507 	strd	r5, r5, [r0, #28]
 80025cc:	e9c0 5509 	strd	r5, r5, [r0, #36]	@ 0x24
 80025d0:	e9c0 550b 	strd	r5, r5, [r0, #44]	@ 0x2c
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80025d4:	9300      	str	r3, [sp, #0]
 80025d6:	4b27      	ldr	r3, [pc, #156]	@ (8002674 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x18c>)
 80025d8:	462a      	mov	r2, r5
 80025da:	4604      	mov	r4, r0
 80025dc:	4629      	mov	r1, r5
 80025de:	f9b3 3000 	ldrsh.w	r3, [r3]
 80025e2:	3010      	adds	r0, #16
 80025e4:	f7ff ff64 	bl	80024b0 <_ZN8touchgfx8Drawable11setPositionEssss>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80025e8:	f8db 0008 	ldr.w	r0, [fp, #8]
 80025ec:	6803      	ldr	r3, [r0, #0]
 80025ee:	4629      	mov	r1, r5
 80025f0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80025f2:	4798      	blx	r3
 80025f4:	4606      	mov	r6, r0
 80025f6:	f001 fbc3 	bl	8003d80 <_ZN11Screen2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80025fa:	f8db 0004 	ldr.w	r0, [fp, #4]
 80025fe:	6803      	ldr	r3, [r0, #0]
 8002600:	4629      	mov	r1, r5
 8002602:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002604:	4798      	blx	r3
 8002606:	4631      	mov	r1, r6
 8002608:	4605      	mov	r5, r0
 800260a:	f001 fa71 	bl	8003af0 <_ZN16Screen2PresenterC1ER11Screen2View>
    model->bind(newPresenter);
 800260e:	1d2b      	adds	r3, r5, #4
    *currentPresenter = newPresenter;
 8002610:	f8c7 513c 	str.w	r5, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8002614:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8002618:	f8c8 6000 	str.w	r6, [r8]
 800261c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002620:	6833      	ldr	r3, [r6, #0]
 8002622:	f8c5 a008 	str.w	sl, [r5, #8]
 8002626:	4630      	mov	r0, r6
 8002628:	68db      	ldr	r3, [r3, #12]
 800262a:	63f5      	str	r5, [r6, #60]	@ 0x3c
 800262c:	4798      	blx	r3
    newPresenter->activate();
 800262e:	682b      	ldr	r3, [r5, #0]
 8002630:	4628      	mov	r0, r5
 8002632:	681b      	ldr	r3, [r3, #0]
 8002634:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002636:	4621      	mov	r1, r4
 8002638:	4630      	mov	r0, r6
 800263a:	f00c f9c9 	bl	800e9d0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800263e:	6823      	ldr	r3, [r4, #0]
 8002640:	4620      	mov	r0, r4
 8002642:	691b      	ldr	r3, [r3, #16]
 8002644:	4798      	blx	r3
    newTransition->invalidate();
 8002646:	6823      	ldr	r3, [r4, #0]
 8002648:	695b      	ldr	r3, [r3, #20]
 800264a:	4620      	mov	r0, r4
}
 800264c:	b003      	add	sp, #12
 800264e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002652:	4718      	bx	r3
 8002654:	0801f48c 	.word	0x0801f48c
 8002658:	0801f84b 	.word	0x0801f84b
 800265c:	0801f5ec 	.word	0x0801f5ec
 8002660:	0801f633 	.word	0x0801f633
 8002664:	0801f6d6 	.word	0x0801f6d6
 8002668:	0801fb18 	.word	0x0801fb18
 800266c:	0801fa20 	.word	0x0801fa20
 8002670:	200119f2 	.word	0x200119f2
 8002674:	200119f0 	.word	0x200119f0
 8002678:	20011a3c 	.word	0x20011a3c
 800267c:	20011a38 	.word	0x20011a38

08002680 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen3ScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreen3ScreenSlideTransitionEastImpl()
{
 8002680:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen3View, Screen3Presenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002684:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8002688:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800268a:	68b0      	ldr	r0, [r6, #8]
 800268c:	6803      	ldr	r3, [r0, #0]
 800268e:	6a1b      	ldr	r3, [r3, #32]
 8002690:	4798      	blx	r3
 8002692:	f5b0 7f3e 	cmp.w	r0, #760	@ 0x2f8
 8002696:	d205      	bcs.n	80026a4 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x24>
 8002698:	4b54      	ldr	r3, [pc, #336]	@ (80027ec <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x16c>)
 800269a:	4a55      	ldr	r2, [pc, #340]	@ (80027f0 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x170>)
 800269c:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800269e:	4855      	ldr	r0, [pc, #340]	@ (80027f4 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x174>)
 80026a0:	f01b f9f0 	bl	801da84 <__assert_func>
 80026a4:	6870      	ldr	r0, [r6, #4]
 80026a6:	6803      	ldr	r3, [r0, #0]
 80026a8:	6a1b      	ldr	r3, [r3, #32]
 80026aa:	4798      	blx	r3
 80026ac:	280f      	cmp	r0, #15
 80026ae:	d803      	bhi.n	80026b8 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x38>
 80026b0:	4b51      	ldr	r3, [pc, #324]	@ (80027f8 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x178>)
 80026b2:	4a4f      	ldr	r2, [pc, #316]	@ (80027f0 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x170>)
 80026b4:	21a4      	movs	r1, #164	@ 0xa4
 80026b6:	e7f2      	b.n	800269e <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80026b8:	68f0      	ldr	r0, [r6, #12]
 80026ba:	6803      	ldr	r3, [r0, #0]
 80026bc:	6a1b      	ldr	r3, [r3, #32]
 80026be:	4798      	blx	r3
 80026c0:	283f      	cmp	r0, #63	@ 0x3f
 80026c2:	d803      	bhi.n	80026cc <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x4c>
 80026c4:	4b4d      	ldr	r3, [pc, #308]	@ (80027fc <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x17c>)
 80026c6:	4a4a      	ldr	r2, [pc, #296]	@ (80027f0 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x170>)
 80026c8:	21a5      	movs	r1, #165	@ 0xa5
 80026ca:	e7e8      	b.n	800269e <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80026cc:	f00a fc44 	bl	800cf58 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80026d0:	f8df 9138 	ldr.w	r9, [pc, #312]	@ 800280c <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x18c>
 80026d4:	3004      	adds	r0, #4
 80026d6:	f00a fca5 	bl	800d024 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80026da:	f8d9 0000 	ldr.w	r0, [r9]
 80026de:	b110      	cbz	r0, 80026e6 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80026e0:	6803      	ldr	r3, [r0, #0]
 80026e2:	68db      	ldr	r3, [r3, #12]
 80026e4:	4798      	blx	r3
    if (*currentTrans)
 80026e6:	f8d9 0000 	ldr.w	r0, [r9]
 80026ea:	b110      	cbz	r0, 80026f2 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 80026ec:	6803      	ldr	r3, [r0, #0]
 80026ee:	681b      	ldr	r3, [r3, #0]
 80026f0:	4798      	blx	r3
    if (*currentScreen)
 80026f2:	f8df 811c 	ldr.w	r8, [pc, #284]	@ 8002810 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x190>
 80026f6:	f8d8 0000 	ldr.w	r0, [r8]
 80026fa:	b110      	cbz	r0, 8002702 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80026fc:	6803      	ldr	r3, [r0, #0]
 80026fe:	695b      	ldr	r3, [r3, #20]
 8002700:	4798      	blx	r3
    if (*currentPresenter)
 8002702:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002706:	b110      	cbz	r0, 800270e <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8002708:	6803      	ldr	r3, [r0, #0]
 800270a:	685b      	ldr	r3, [r3, #4]
 800270c:	4798      	blx	r3
    if (*currentScreen)
 800270e:	f8d8 0000 	ldr.w	r0, [r8]
 8002712:	b110      	cbz	r0, 800271a <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8002714:	6803      	ldr	r3, [r0, #0]
 8002716:	681b      	ldr	r3, [r3, #0]
 8002718:	4798      	blx	r3
    if (*currentPresenter)
 800271a:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800271e:	b110      	cbz	r0, 8002726 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8002720:	6803      	ldr	r3, [r0, #0]
 8002722:	689b      	ldr	r3, [r3, #8]
 8002724:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002726:	68f0      	ldr	r0, [r6, #12]
 8002728:	6803      	ldr	r3, [r0, #0]
 800272a:	2100      	movs	r1, #0
 800272c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800272e:	4798      	blx	r3
          relativeValue(0)
 8002730:	4605      	mov	r5, r0
 8002732:	2200      	movs	r2, #0
 8002734:	4b32      	ldr	r3, [pc, #200]	@ (8002800 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x180>)
 8002736:	6042      	str	r2, [r0, #4]
 8002738:	7202      	strb	r2, [r0, #8]
 800273a:	f845 3b0c 	str.w	r3, [r5], #12
 800273e:	4604      	mov	r4, r0
          snapshot(),
 8002740:	4628      	mov	r0, r5
 8002742:	f008 fa15 	bl	800ab70 <_ZN8touchgfx14SnapshotWidgetC1Ev>
          animationSteps(transitionSteps),
 8002746:	2314      	movs	r3, #20
 8002748:	8723      	strh	r3, [r4, #56]	@ 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
 800274a:	4b2e      	ldr	r3, [pc, #184]	@ (8002804 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x184>)
 800274c:	781b      	ldrb	r3, [r3, #0]
          relativeValue(0)
 800274e:	2200      	movs	r2, #0
 8002750:	87a2      	strh	r2, [r4, #60]	@ 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
 8002752:	2b00      	cmp	r3, #0
 8002754:	d135      	bne.n	80027c2 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x142>
            done = true;
 8002756:	2301      	movs	r3, #1
 8002758:	7223      	strb	r3, [r4, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800275a:	68b0      	ldr	r0, [r6, #8]
 800275c:	6803      	ldr	r3, [r0, #0]
 800275e:	2100      	movs	r1, #0
 8002760:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002762:	4798      	blx	r3
 8002764:	4605      	mov	r5, r0
 8002766:	f001 fd05 	bl	8004174 <_ZN11Screen3ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800276a:	6870      	ldr	r0, [r6, #4]
 800276c:	6803      	ldr	r3, [r0, #0]
 800276e:	2100      	movs	r1, #0
 8002770:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002772:	4798      	blx	r3
 8002774:	4629      	mov	r1, r5
 8002776:	4606      	mov	r6, r0
 8002778:	f001 fcda 	bl	8004130 <_ZN16Screen3PresenterC1ER11Screen3View>
    model->bind(newPresenter);
 800277c:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 800277e:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8002782:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8002786:	f8c8 5000 	str.w	r5, [r8]
 800278a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800278e:	682b      	ldr	r3, [r5, #0]
 8002790:	f8c6 a008 	str.w	sl, [r6, #8]
 8002794:	4628      	mov	r0, r5
 8002796:	68db      	ldr	r3, [r3, #12]
 8002798:	63ee      	str	r6, [r5, #60]	@ 0x3c
 800279a:	4798      	blx	r3
    newPresenter->activate();
 800279c:	6833      	ldr	r3, [r6, #0]
 800279e:	4630      	mov	r0, r6
 80027a0:	681b      	ldr	r3, [r3, #0]
 80027a2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80027a4:	4621      	mov	r1, r4
 80027a6:	4628      	mov	r0, r5
 80027a8:	f00c f912 	bl	800e9d0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80027ac:	6823      	ldr	r3, [r4, #0]
 80027ae:	4620      	mov	r0, r4
 80027b0:	691b      	ldr	r3, [r3, #16]
 80027b2:	4798      	blx	r3
    newTransition->invalidate();
 80027b4:	6823      	ldr	r3, [r4, #0]
 80027b6:	695b      	ldr	r3, [r3, #20]
 80027b8:	4620      	mov	r0, r4
}
 80027ba:	b003      	add	sp, #12
 80027bc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80027c0:	4718      	bx	r3
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80027c2:	4b11      	ldr	r3, [pc, #68]	@ (8002808 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x188>)
 80027c4:	f8df b04c 	ldr.w	fp, [pc, #76]	@ 8002814 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x194>
 80027c8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80027cc:	9300      	str	r3, [sp, #0]
 80027ce:	f9bb 3000 	ldrsh.w	r3, [fp]
 80027d2:	4611      	mov	r1, r2
 80027d4:	4628      	mov	r0, r5
 80027d6:	f7ff fe6b 	bl	80024b0 <_ZN8touchgfx8Drawable11setPositionEssss>
        snapshot.makeSnapshot();
 80027da:	4628      	mov	r0, r5
 80027dc:	f008 f943 	bl	800aa66 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = -HAL::DISPLAY_WIDTH;
 80027e0:	f8bb 3000 	ldrh.w	r3, [fp]
 80027e4:	425b      	negs	r3, r3
 80027e6:	8763      	strh	r3, [r4, #58]	@ 0x3a
            break;
 80027e8:	e7b7      	b.n	800275a <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0xda>
 80027ea:	bf00      	nop
 80027ec:	0801f48c 	.word	0x0801f48c
 80027f0:	0801f930 	.word	0x0801f930
 80027f4:	0801f5ec 	.word	0x0801f5ec
 80027f8:	0801f633 	.word	0x0801f633
 80027fc:	0801f6d6 	.word	0x0801f6d6
 8002800:	0801fb3c 	.word	0x0801fb3c
 8002804:	200119fb 	.word	0x200119fb
 8002808:	200119f2 	.word	0x200119f2
 800280c:	20011a3c 	.word	0x20011a3c
 8002810:	20011a38 	.word	0x20011a38
 8002814:	200119f0 	.word	0x200119f0

08002818 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002818:	4b04      	ldr	r3, [pc, #16]	@ (800282c <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800281a:	681b      	ldr	r3, [r3, #0]
 800281c:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8002820:	b10a      	cbz	r2, 8002826 <_ZN8touchgfx3HAL3lcdEv+0xe>
 8002822:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8002824:	b900      	cbnz	r0, 8002828 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8002826:	6898      	ldr	r0, [r3, #8]
    }
 8002828:	4770      	bx	lr
 800282a:	bf00      	nop
 800282c:	200119fc 	.word	0x200119fc

08002830 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002830:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002832:	4604      	mov	r4, r0
 8002834:	4617      	mov	r7, r2
 8002836:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002838:	f00a fcc2 	bl	800d1c0 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 800283c:	4b10      	ldr	r3, [pc, #64]	@ (8002880 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 800283e:	601c      	str	r4, [r3, #0]
      model(m)
 8002840:	4b10      	ldr	r3, [pc, #64]	@ (8002884 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8002842:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8002844:	4b10      	ldr	r3, [pc, #64]	@ (8002888 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 8002846:	2500      	movs	r5, #0
 8002848:	e9c4 3551 	strd	r3, r5, [r4, #324]	@ 0x144
        return instance;
 800284c:	4b0f      	ldr	r3, [pc, #60]	@ (800288c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 800284e:	e9c4 5553 	strd	r5, r5, [r4, #332]	@ 0x14c
 8002852:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002854:	6803      	ldr	r3, [r0, #0]
 8002856:	4629      	mov	r1, r5
 8002858:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 800285a:	e9c4 554f 	strd	r5, r5, [r4, #316]	@ 0x13c
      model(m)
 800285e:	e9c4 7655 	strd	r7, r6, [r4, #340]	@ 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002862:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002864:	4628      	mov	r0, r5
 8002866:	f001 f873 	bl	8003950 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800286a:	f7ff ffd5 	bl	8002818 <_ZN8touchgfx3HAL3lcdEv>
 800286e:	f013 fd4a 	bl	8016306 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8002872:	f7ff ffd1 	bl	8002818 <_ZN8touchgfx3HAL3lcdEv>
 8002876:	f013 fdc1 	bl	80163fc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 800287a:	4620      	mov	r0, r4
 800287c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800287e:	bf00      	nop
 8002880:	20011a48 	.word	0x20011a48
 8002884:	0801faa0 	.word	0x0801faa0
 8002888:	0801fa88 	.word	0x0801fa88
 800288c:	200119fc 	.word	0x200119fc

08002890 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002890:	4b06      	ldr	r3, [pc, #24]	@ (80028ac <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8002892:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8002896:	2300      	movs	r3, #0
 8002898:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800289c:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80028a0:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80028a4:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80028a8:	4770      	bx	lr
 80028aa:	bf00      	nop
 80028ac:	08002365 	.word	0x08002365

080028b0 <_ZN23FrontendApplicationBase36gotoScreen2ScreenWipeTransitionSouthEv>:
 80028b0:	4b06      	ldr	r3, [pc, #24]	@ (80028cc <_ZN23FrontendApplicationBase36gotoScreen2ScreenWipeTransitionSouthEv+0x1c>)
 80028b2:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80028b6:	2300      	movs	r3, #0
 80028b8:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80028bc:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80028c0:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80028c4:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80028c8:	4770      	bx	lr
 80028ca:	bf00      	nop
 80028cc:	080024e9 	.word	0x080024e9

080028d0 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>:
 80028d0:	4b06      	ldr	r3, [pc, #24]	@ (80028ec <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv+0x1c>)
 80028d2:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80028d6:	2300      	movs	r3, #0
 80028d8:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80028dc:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80028e0:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80028e4:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80028e8:	4770      	bx	lr
 80028ea:	bf00      	nop
 80028ec:	08002219 	.word	0x08002219

080028f0 <_ZN23FrontendApplicationBase36gotoScreen3ScreenSlideTransitionEastEv>:
 80028f0:	4b06      	ldr	r3, [pc, #24]	@ (800290c <_ZN23FrontendApplicationBase36gotoScreen3ScreenSlideTransitionEastEv+0x1c>)
 80028f2:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80028f6:	2300      	movs	r3, #0
 80028f8:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80028fc:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002900:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002904:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8002908:	4770      	bx	lr
 800290a:	bf00      	nop
 800290c:	08002681 	.word	0x08002681

08002910 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002910:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8002912:	4770      	bx	lr

08002914 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002914:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8002916:	4770      	bx	lr

08002918 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002918:	4770      	bx	lr

0800291a <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800291a:	888b      	ldrh	r3, [r1, #4]
 800291c:	69c0      	ldr	r0, [r0, #28]
 800291e:	680a      	ldr	r2, [r1, #0]
 8002920:	0adb      	lsrs	r3, r3, #11
 8002922:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8002926:	4410      	add	r0, r2
 8002928:	4770      	bx	lr

0800292a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800292a:	b510      	push	{r4, lr}
 800292c:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 800292e:	b1ba      	cbz	r2, 8002960 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8002930:	7b10      	ldrb	r0, [r2, #12]
 8002932:	b168      	cbz	r0, 8002950 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002934:	7b53      	ldrb	r3, [r2, #13]
 8002936:	7ad2      	ldrb	r2, [r2, #11]
 8002938:	021b      	lsls	r3, r3, #8
 800293a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800293e:	431a      	orrs	r2, r3
 8002940:	6a23      	ldr	r3, [r4, #32]
 8002942:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002946:	881a      	ldrh	r2, [r3, #0]
 8002948:	428a      	cmp	r2, r1
 800294a:	d102      	bne.n	8002952 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 800294c:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 8002950:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002952:	d805      	bhi.n	8002960 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002954:	3801      	subs	r0, #1
 8002956:	b280      	uxth	r0, r0
 8002958:	3304      	adds	r3, #4
 800295a:	2800      	cmp	r0, #0
 800295c:	d1f3      	bne.n	8002946 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800295e:	e7f7      	b.n	8002950 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002960:	2000      	movs	r0, #0
 8002962:	e7f5      	b.n	8002950 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002964 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002964:	b510      	push	{r4, lr}
 8002966:	212c      	movs	r1, #44	@ 0x2c
 8002968:	4604      	mov	r4, r0
 800296a:	f01b f85d 	bl	801da28 <_ZdlPvj>
 800296e:	4620      	mov	r0, r4
 8002970:	bd10      	pop	{r4, pc}
	...

08002974 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002974:	b530      	push	{r4, r5, lr}
 8002976:	b08b      	sub	sp, #44	@ 0x2c
 8002978:	4604      	mov	r4, r0
      arabicTable(formsTable)
 800297a:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 800297e:	9508      	str	r5, [sp, #32]
 8002980:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 8002984:	9507      	str	r5, [sp, #28]
 8002986:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800298a:	9506      	str	r5, [sp, #24]
 800298c:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 8002990:	9505      	str	r5, [sp, #20]
 8002992:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 8002996:	9504      	str	r5, [sp, #16]
 8002998:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800299c:	9503      	str	r5, [sp, #12]
 800299e:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 80029a2:	9502      	str	r5, [sp, #8]
 80029a4:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 80029a8:	9501      	str	r5, [sp, #4]
 80029aa:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 80029ae:	9500      	str	r5, [sp, #0]
 80029b0:	f00b fc68 	bl	800e284 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 80029b4:	4b06      	ldr	r3, [pc, #24]	@ (80029d0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 80029b6:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 80029b8:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80029ba:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 80029bc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80029be:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 80029c0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80029c2:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 80029c4:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80029c6:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 80029c8:	4620      	mov	r0, r4
 80029ca:	b00b      	add	sp, #44	@ 0x2c
 80029cc:	bd30      	pop	{r4, r5, pc}
 80029ce:	bf00      	nop
 80029d0:	0801fb60 	.word	0x0801fb60

080029d4 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80029d4:	4770      	bx	lr

080029d6 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80029d6:	4770      	bx	lr

080029d8 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80029d8:	4770      	bx	lr

080029da <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80029da:	4770      	bx	lr

080029dc <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 80029dc:	4770      	bx	lr

080029de <_ZN15Screen1ViewBaseD1Ev>:
}

Screen1ViewBase::~Screen1ViewBase()
{

}
 80029de:	4770      	bx	lr

080029e0 <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{

}
 80029e0:	4770      	bx	lr

080029e2 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80029e2:	4770      	bx	lr

080029e4 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80029e4:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80029e6:	68c2      	ldr	r2, [r0, #12]
 80029e8:	6844      	ldr	r4, [r0, #4]
 80029ea:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80029ec:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80029ee:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80029f2:	07d2      	lsls	r2, r2, #31
 80029f4:	bf48      	it	mi
 80029f6:	5962      	ldrmi	r2, [r4, r5]
 80029f8:	689b      	ldr	r3, [r3, #8]
    }
 80029fa:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80029fc:	bf48      	it	mi
 80029fe:	58d3      	ldrmi	r3, [r2, r3]
 8002a00:	4718      	bx	r3

08002a02 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 8002a02:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8002a04:	6840      	ldr	r0, [r0, #4]
 8002a06:	b130      	cbz	r0, 8002a16 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002a08:	689a      	ldr	r2, [r3, #8]
 8002a0a:	b91a      	cbnz	r2, 8002a14 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 8002a0c:	68d8      	ldr	r0, [r3, #12]
 8002a0e:	f000 0001 	and.w	r0, r0, #1
 8002a12:	4770      	bx	lr
 8002a14:	2001      	movs	r0, #1
    }
 8002a16:	4770      	bx	lr

08002a18 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002a18:	b510      	push	{r4, lr}
 8002a1a:	2110      	movs	r1, #16
 8002a1c:	4604      	mov	r4, r0
 8002a1e:	f01b f803 	bl	801da28 <_ZdlPvj>
 8002a22:	4620      	mov	r0, r4
 8002a24:	bd10      	pop	{r4, pc}

08002a26 <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
 8002a26:	b510      	push	{r4, lr}
}
 8002a28:	f44f 71b4 	mov.w	r1, #360	@ 0x168
Screen1ViewBase::~Screen1ViewBase()
 8002a2c:	4604      	mov	r4, r0
}
 8002a2e:	f01a fffb 	bl	801da28 <_ZdlPvj>
 8002a32:	4620      	mov	r0, r4
 8002a34:	bd10      	pop	{r4, pc}

08002a36 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &start)
 8002a36:	3098      	adds	r0, #152	@ 0x98
 8002a38:	4288      	cmp	r0, r1
{
 8002a3a:	b508      	push	{r3, lr}
    if (&src == &start)
 8002a3c:	d105      	bne.n	8002a4a <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Screen1ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002a3e:	f00a fa8b 	bl	800cf58 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When start clicked change screen to Screen2
        //Go to Screen2 with screen transition towards South
        application().gotoScreen2ScreenWipeTransitionSouth();
    }
}
 8002a42:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen2ScreenWipeTransitionSouth();
 8002a46:	f7ff bf33 	b.w	80028b0 <_ZN23FrontendApplicationBase36gotoScreen2ScreenWipeTransitionSouthEv>
}
 8002a4a:	bd08      	pop	{r3, pc}

08002a4c <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002a4c:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002a4e:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002a50:	4604      	mov	r4, r0
        setX(x);
 8002a52:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    void setXY(int16_t x, int16_t y)
 8002a54:	4615      	mov	r5, r2
        setX(x);
 8002a56:	4798      	blx	r3
        setY(y);
 8002a58:	6823      	ldr	r3, [r4, #0]
 8002a5a:	4629      	mov	r1, r5
 8002a5c:	4620      	mov	r0, r4
 8002a5e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
    }
 8002a60:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002a64:	4718      	bx	r3
	...

08002a68 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
        : x(0), y(0), width(0), height(0)
 8002a68:	2300      	movs	r3, #0
     *
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
 8002a6a:	b510      	push	{r4, lr}
 8002a6c:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8002a70:	e9c0 3303 	strd	r3, r3, [r0, #12]
          cachedAbsX(0),
 8002a74:	e9c0 3307 	strd	r3, r3, [r0, #28]
          nextSibling(0),
 8002a78:	e9c0 3305 	strd	r3, r3, [r0, #20]
          touchable(false),
 8002a7c:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8002a80:	8483      	strh	r3, [r0, #36]	@ 0x24
        : Widget(), bitmap(bmp), alpha(255)
 8002a82:	4b06      	ldr	r3, [pc, #24]	@ (8002a9c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x34>)
 8002a84:	6003      	str	r3, [r0, #0]
 8002a86:	880b      	ldrh	r3, [r1, #0]
 8002a88:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8002a8a:	23ff      	movs	r3, #255	@ 0xff
    Image(const Bitmap& bmp = Bitmap())
 8002a8c:	4604      	mov	r4, r0
        : Widget(), bitmap(bmp), alpha(255)
 8002a8e:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
    {
        Image::setBitmap(bmp);
 8002a92:	f008 fc18 	bl	800b2c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8002a96:	4620      	mov	r0, r4
 8002a98:	bd10      	pop	{r4, pc}
 8002a9a:	bf00      	nop
 8002a9c:	08020528 	.word	0x08020528

08002aa0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002aa0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        return typedTextId < numberOfTypedTexts;
 8002aa2:	4b19      	ldr	r3, [pc, #100]	@ (8002b08 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x68>)
 8002aa4:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
    {
        if (typedText.hasValidId())
 8002aa6:	881b      	ldrh	r3, [r3, #0]
 8002aa8:	428b      	cmp	r3, r1
    void updateTextPosition()
 8002aaa:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002aac:	d92a      	bls.n	8002b04 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x64>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002aae:	4b17      	ldr	r3, [pc, #92]	@ (8002b0c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
 8002ab0:	681b      	ldr	r3, [r3, #0]
 8002ab2:	b92b      	cbnz	r3, 8002ac0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002ab4:	4b16      	ldr	r3, [pc, #88]	@ (8002b10 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8002ab6:	4a17      	ldr	r2, [pc, #92]	@ (8002b14 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8002ab8:	4817      	ldr	r0, [pc, #92]	@ (8002b18 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002aba:	216c      	movs	r1, #108	@ 0x6c
 8002abc:	f01a ffe2 	bl	801da84 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002ac0:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002ac4:	4b15      	ldr	r3, [pc, #84]	@ (8002b1c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002ac6:	681b      	ldr	r3, [r3, #0]
 8002ac8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002acc:	4b14      	ldr	r3, [pc, #80]	@ (8002b20 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002ace:	6818      	ldr	r0, [r3, #0]
 8002ad0:	f000 ff7a 	bl	80039c8 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002ad4:	682b      	ldr	r3, [r5, #0]
 8002ad6:	4607      	mov	r7, r0
 8002ad8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002ada:	4628      	mov	r0, r5
 8002adc:	4798      	blx	r3
 8002ade:	682b      	ldr	r3, [r5, #0]
 8002ae0:	4604      	mov	r4, r0
 8002ae2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002ae4:	4639      	mov	r1, r7
 8002ae6:	4628      	mov	r0, r5
 8002ae8:	4798      	blx	r3
 8002aea:	682b      	ldr	r3, [r5, #0]
 8002aec:	fb14 f400 	smulbb	r4, r4, r0
 8002af0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002af2:	4639      	mov	r1, r7
 8002af4:	4628      	mov	r0, r5
 8002af6:	4798      	blx	r3
 8002af8:	b2a4      	uxth	r4, r4
 8002afa:	1823      	adds	r3, r4, r0
 8002afc:	b21b      	sxth	r3, r3
 8002afe:	f8a6 3046 	strh.w	r3, [r6, #70]	@ 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002b02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002b04:	2300      	movs	r3, #0
 8002b06:	e7fa      	b.n	8002afe <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 8002b08:	20011a50 	.word	0x20011a50
 8002b0c:	20011a4c 	.word	0x20011a4c
 8002b10:	0801fbc0 	.word	0x0801fbc0
 8002b14:	0801fc02 	.word	0x0801fc02
 8002b18:	0801fc3d 	.word	0x0801fc3d
 8002b1c:	20011a54 	.word	0x20011a54
 8002b20:	20011a58 	.word	0x20011a58

08002b24 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8002b24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002b28:	4604      	mov	r4, r0
 8002b2a:	b085      	sub	sp, #20
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
 8002b2c:	46a1      	mov	r9, r4
        : presenter(0)
 8002b2e:	2500      	movs	r5, #0
 8002b30:	f00b fda2 	bl	800e678 <_ZN8touchgfx6ScreenC1Ev>
 8002b34:	4b68      	ldr	r3, [pc, #416]	@ (8002cd8 <_ZN15Screen1ViewBaseC1Ev+0x1b4>)
 8002b36:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8002b38:	f849 3b40 	str.w	r3, [r9], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002b3c:	4b67      	ldr	r3, [pc, #412]	@ (8002cdc <_ZN15Screen1ViewBaseC1Ev+0x1b8>)
          cachedAbsX(0),
 8002b3e:	6625      	str	r5, [r4, #96]	@ 0x60
 8002b40:	e9c4 3510 	strd	r3, r5, [r4, #64]	@ 0x40
          touchable(false),
 8002b44:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8002b48:	f8a4 3064 	strh.w	r3, [r4, #100]	@ 0x64
 8002b4c:	23ff      	movs	r3, #255	@ 0xff
 8002b4e:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
 8002b52:	f104 036c 	add.w	r3, r4, #108	@ 0x6c
 8002b56:	f104 0b98 	add.w	fp, r4, #152	@ 0x98
 8002b5a:	a903      	add	r1, sp, #12
 8002b5c:	4618      	mov	r0, r3
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002b5e:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8002b62:	e9c4 5512 	strd	r5, r5, [r4, #72]	@ 0x48
          parent(0),
 8002b66:	e9c4 5514 	strd	r5, r5, [r4, #80]	@ 0x50
          nextDrawChainElement(0),
 8002b6a:	e9c4 5516 	strd	r5, r5, [r4, #88]	@ 0x58
        : color(col)
 8002b6e:	66a5      	str	r5, [r4, #104]	@ 0x68
 8002b70:	f104 08e0 	add.w	r8, r4, #224	@ 0xe0
 8002b74:	9301      	str	r3, [sp, #4]
 8002b76:	f8ad 600c 	strh.w	r6, [sp, #12]
 8002b7a:	f7ff ff75 	bl	8002a68 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002b7e:	4658      	mov	r0, fp
 8002b80:	f008 fcd8 	bl	800b534 <_ZN8touchgfx15ButtonWithLabelC1Ev>
          endId(BITMAP_INVALID),
          updateTicksInterval(updateInterval),
          ticksSinceUpdate(0),
          reverse(false),
          loopAnimation(false),
          running(false)
 8002b84:	a903      	add	r1, sp, #12
 8002b86:	4640      	mov	r0, r8
 8002b88:	f504 778e 	add.w	r7, r4, #284	@ 0x11c
 8002b8c:	f8df a158 	ldr.w	sl, [pc, #344]	@ 8002ce8 <_ZN15Screen1ViewBaseC1Ev+0x1c4>
 8002b90:	f8ad 600c 	strh.w	r6, [sp, #12]
 8002b94:	f7ff ff68 	bl	8002a68 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
          updateTicksInterval(updateInterval),
 8002b98:	2601      	movs	r6, #1
 8002b9a:	f04f 33ff 	mov.w	r3, #4294967295
 8002b9e:	e9c4 3644 	strd	r3, r6, [r4, #272]	@ 0x110
          running(false)
 8002ba2:	f8c4 a0e0 	str.w	sl, [r4, #224]	@ 0xe0
 8002ba6:	a903      	add	r1, sp, #12
        : animationDoneAction(0),
 8002ba8:	f8c4 510c 	str.w	r5, [r4, #268]	@ 0x10c
          running(false)
 8002bac:	f884 5118 	strb.w	r5, [r4, #280]	@ 0x118
 8002bb0:	4638      	mov	r0, r7
 8002bb2:	f8ad 300c 	strh.w	r3, [sp, #12]
 8002bb6:	f7ff ff57 	bl	8002a68 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002bba:	4a49      	ldr	r2, [pc, #292]	@ (8002ce0 <_ZN15Screen1ViewBaseC1Ev+0x1bc>)
 8002bbc:	f8c4 a11c 	str.w	sl, [r4, #284]	@ 0x11c
 8002bc0:	e9c4 2456 	strd	r2, r4, [r4, #344]	@ 0x158
 8002bc4:	4a47      	ldr	r2, [pc, #284]	@ (8002ce4 <_ZN15Screen1ViewBaseC1Ev+0x1c0>)
        : animationDoneAction(0),
 8002bc6:	f8c4 5148 	str.w	r5, [r4, #328]	@ 0x148
          startId(BITMAP_INVALID),
 8002bca:	f04f 33ff 	mov.w	r3, #4294967295
          updateTicksInterval(updateInterval),
 8002bce:	e9c4 3653 	strd	r3, r6, [r4, #332]	@ 0x14c
 8002bd2:	e9c4 2558 	strd	r2, r5, [r4, #352]	@ 0x160
        setXY(x, y);
 8002bd6:	4629      	mov	r1, r5
 8002bd8:	462a      	mov	r2, r5
 8002bda:	4648      	mov	r0, r9
          running(false)
 8002bdc:	f884 5154 	strb.w	r5, [r4, #340]	@ 0x154
 8002be0:	f7ff ff34 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002be4:	4648      	mov	r0, r9
 8002be6:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8002bea:	f7ff f997 	bl	8001f1c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8002bee:	4648      	mov	r0, r9
 8002bf0:	21f0      	movs	r1, #240	@ 0xf0
 8002bf2:	f7ff f995 	bl	8001f20 <_ZN8touchgfx8Drawable9setHeightEs>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002bf6:	f104 0a04 	add.w	sl, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002bfa:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8002bfe:	66a3      	str	r3, [r4, #104]	@ 0x68
 8002c00:	4649      	mov	r1, r9
 8002c02:	4650      	mov	r0, sl
 8002c04:	f006 fdb0 	bl	8009768 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bg.setXY(-17, 0);
 8002c08:	9801      	ldr	r0, [sp, #4]
 8002c0a:	462a      	mov	r2, r5
 8002c0c:	f06f 0110 	mvn.w	r1, #16
 8002c10:	f7ff ff1c 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
 8002c14:	2202      	movs	r2, #2
    bg.setBitmap(touchgfx::Bitmap(BITMAP_BG_ID));
 8002c16:	9801      	ldr	r0, [sp, #4]
 8002c18:	f8ad 200c 	strh.w	r2, [sp, #12]
 8002c1c:	a903      	add	r1, sp, #12
 8002c1e:	f008 fb52 	bl	800b2c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002c22:	9901      	ldr	r1, [sp, #4]
 8002c24:	4650      	mov	r0, sl
 8002c26:	f006 fd9f 	bl	8009768 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    start.setXY(40, 63);
 8002c2a:	4658      	mov	r0, fp
 8002c2c:	223f      	movs	r2, #63	@ 0x3f
 8002c2e:	2128      	movs	r1, #40	@ 0x28
 8002c30:	f7ff ff0c 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
    start.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_INACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_INACTIVE_ID));
 8002c34:	a902      	add	r1, sp, #8
 8002c36:	aa03      	add	r2, sp, #12
 8002c38:	4658      	mov	r0, fp
 8002c3a:	f8ad 6008 	strh.w	r6, [sp, #8]
 8002c3e:	f8ad 600c 	strh.w	r6, [sp, #12]
 8002c42:	f008 fa07 	bl	800b054 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8002c46:	2206      	movs	r2, #6
 8002c48:	f8a4 20d0 	strh.w	r2, [r4, #208]	@ 0xd0
        updateTextPosition();
 8002c4c:	4658      	mov	r0, fp
 8002c4e:	f7ff ff27 	bl	8002aa0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        colorPressed = col;
 8002c52:	f04f 427f 	mov.w	r2, #4278190080	@ 0xff000000
 8002c56:	f04f 33ff 	mov.w	r3, #4294967295
 8002c5a:	e9c4 2335 	strd	r2, r3, [r4, #212]	@ 0xd4
    start.setAction(buttonCallback);
 8002c5e:	f504 73ac 	add.w	r3, r4, #344	@ 0x158
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002c62:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 8002c66:	4659      	mov	r1, fp
 8002c68:	4650      	mov	r0, sl
 8002c6a:	f006 fd7d 	bl	8009768 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ground.setXY(0, 180);
 8002c6e:	4629      	mov	r1, r5
 8002c70:	4640      	mov	r0, r8
 8002c72:	22b4      	movs	r2, #180	@ 0xb4
 8002c74:	f7ff feea 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
    ground.setBitmaps(BITMAP_GROUND0_ID, BITMAP_GROUND2_ID);
 8002c78:	221a      	movs	r2, #26
 8002c7a:	4640      	mov	r0, r8
 8002c7c:	2118      	movs	r1, #24
 8002c7e:	f008 f865 	bl	800ad4c <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>
    ground.setUpdateTicksInterval(1);
 8002c82:	4631      	mov	r1, r6
 8002c84:	4640      	mov	r0, r8
 8002c86:	f008 f874 	bl	800ad72 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
    ground.startAnimation(false, true, false);
 8002c8a:	462b      	mov	r3, r5
 8002c8c:	4632      	mov	r2, r6
 8002c8e:	4629      	mov	r1, r5
 8002c90:	4640      	mov	r0, r8
 8002c92:	f007 ffb3 	bl	800abfc <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
 8002c96:	4641      	mov	r1, r8
 8002c98:	4650      	mov	r0, sl
 8002c9a:	f006 fd65 	bl	8009768 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    dino.setXY(12, 140);
 8002c9e:	4638      	mov	r0, r7
 8002ca0:	228c      	movs	r2, #140	@ 0x8c
 8002ca2:	210c      	movs	r1, #12
 8002ca4:	f7ff fed2 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
    dino.setBitmaps(BITMAP_DINO1_ID, BITMAP_DINO3_ID);
 8002ca8:	2213      	movs	r2, #19
 8002caa:	4638      	mov	r0, r7
 8002cac:	2111      	movs	r1, #17
 8002cae:	f008 f84d 	bl	800ad4c <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>
    dino.setUpdateTicksInterval(1);
 8002cb2:	4631      	mov	r1, r6
 8002cb4:	4638      	mov	r0, r7
 8002cb6:	f008 f85c 	bl	800ad72 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
    dino.startAnimation(false, true, false);
 8002cba:	462b      	mov	r3, r5
 8002cbc:	4632      	mov	r2, r6
 8002cbe:	4629      	mov	r1, r5
 8002cc0:	4638      	mov	r0, r7
 8002cc2:	f007 ff9b 	bl	800abfc <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
 8002cc6:	4650      	mov	r0, sl
 8002cc8:	4639      	mov	r1, r7
 8002cca:	f006 fd4d 	bl	8009768 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002cce:	4620      	mov	r0, r4
 8002cd0:	b005      	add	sp, #20
 8002cd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002cd6:	bf00      	nop
 8002cd8:	0801fca4 	.word	0x0801fca4
 8002cdc:	0802044c 	.word	0x0802044c
 8002ce0:	0801fc8c 	.word	0x0801fc8c
 8002ce4:	08002a37 	.word	0x08002a37
 8002ce8:	080203d0 	.word	0x080203d0

08002cec <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002cec:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002cee:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8002cf0:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002cf2:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002cf4:	466d      	mov	r5, sp
 8002cf6:	4601      	mov	r1, r0
 8002cf8:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
    virtual void setWidth(int16_t width)
 8002cfc:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002cfe:	4628      	mov	r0, r5
 8002d00:	4798      	blx	r3
 8002d02:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002d06:	343c      	adds	r4, #60	@ 0x3c
 8002d08:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002d0c:	b005      	add	sp, #20
 8002d0e:	bd30      	pop	{r4, r5, pc}

08002d10 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8002d10:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002d12:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8002d14:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002d16:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002d18:	466d      	mov	r5, sp
 8002d1a:	4601      	mov	r1, r0
 8002d1c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
    virtual void setHeight(int16_t height)
 8002d20:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002d22:	4628      	mov	r0, r5
 8002d24:	4798      	blx	r3
 8002d26:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002d2a:	343c      	adds	r4, #60	@ 0x3c
 8002d2c:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002d30:	b005      	add	sp, #20
 8002d32:	bd30      	pop	{r4, r5, pc}

08002d34 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8002d34:	2200      	movs	r2, #0
 8002d36:	8002      	strh	r2, [r0, #0]
 8002d38:	8042      	strh	r2, [r0, #2]
 8002d3a:	8082      	strh	r2, [r0, #4]
 8002d3c:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002d3e:	4770      	bx	lr

08002d40 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002d40:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
    }
 8002d44:	4770      	bx	lr

08002d46 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002d46:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002d48:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002d4a:	4604      	mov	r4, r0
        setX(x);
 8002d4c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002d4e:	4615      	mov	r5, r2
        setX(x);
 8002d50:	4798      	blx	r3
        setBaselineY(baselineY);
 8002d52:	6823      	ldr	r3, [r4, #0]
 8002d54:	4629      	mov	r1, r5
 8002d56:	4620      	mov	r0, r4
 8002d58:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
    }
 8002d5a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002d5e:	4718      	bx	r3

08002d60 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8002d60:	2000      	movs	r0, #0
 8002d62:	4770      	bx	lr

08002d64 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8002d64:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 8002d66:	4770      	bx	lr

08002d68 <_ZN15Screen2ViewBaseD1Ev>:
}

Screen2ViewBase::~Screen2ViewBase()
{

}
 8002d68:	4770      	bx	lr

08002d6a <_ZN15Screen2ViewBase11setupScreenEv>:

void Screen2ViewBase::setupScreen()
{

}
 8002d6a:	4770      	bx	lr

08002d6c <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002d6c:	4770      	bx	lr

08002d6e <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002d6e:	b510      	push	{r4, lr}
 8002d70:	214c      	movs	r1, #76	@ 0x4c
 8002d72:	4604      	mov	r4, r0
 8002d74:	f01a fe58 	bl	801da28 <_ZdlPvj>
 8002d78:	4620      	mov	r0, r4
 8002d7a:	bd10      	pop	{r4, pc}

08002d7c <_ZN15Screen2ViewBaseD0Ev>:
Screen2ViewBase::~Screen2ViewBase()
 8002d7c:	b510      	push	{r4, lr}
}
 8002d7e:	f44f 711d 	mov.w	r1, #628	@ 0x274
Screen2ViewBase::~Screen2ViewBase()
 8002d82:	4604      	mov	r4, r0
}
 8002d84:	f01a fe50 	bl	801da28 <_ZdlPvj>
 8002d88:	4620      	mov	r0, r4
 8002d8a:	bd10      	pop	{r4, pc}

08002d8c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8002d8c:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8002d8e:	f7ff f970 	bl	8002072 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8002d92:	bd08      	pop	{r3, pc}

08002d94 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002d94:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002d96:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002d98:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002d9a:	4b12      	ldr	r3, [pc, #72]	@ (8002de4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002d9c:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002d9e:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002da0:	b28d      	uxth	r5, r1
 8002da2:	b92b      	cbnz	r3, 8002db0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002da4:	4b10      	ldr	r3, [pc, #64]	@ (8002de8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8002da6:	4a11      	ldr	r2, [pc, #68]	@ (8002dec <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002da8:	216c      	movs	r1, #108	@ 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002daa:	4811      	ldr	r0, [pc, #68]	@ (8002df0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002dac:	f01a fe6a 	bl	801da84 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002db0:	4910      	ldr	r1, [pc, #64]	@ (8002df4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002db2:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002db4:	8809      	ldrh	r1, [r1, #0]
 8002db6:	4291      	cmp	r1, r2
 8002db8:	d803      	bhi.n	8002dc2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002dba:	4b0f      	ldr	r3, [pc, #60]	@ (8002df8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002dbc:	4a0b      	ldr	r2, [pc, #44]	@ (8002dec <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002dbe:	216d      	movs	r1, #109	@ 0x6d
 8002dc0:	e7f3      	b.n	8002daa <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002dc2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002dc6:	4b0d      	ldr	r3, [pc, #52]	@ (8002dfc <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002dc8:	681b      	ldr	r3, [r3, #0]
 8002dca:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002dce:	6803      	ldr	r3, [r0, #0]
 8002dd0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002dd2:	4798      	blx	r3
 8002dd4:	1a29      	subs	r1, r5, r0
 8002dd6:	4633      	mov	r3, r6
 8002dd8:	4620      	mov	r0, r4
 8002dda:	b209      	sxth	r1, r1
    }
 8002ddc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002de0:	4718      	bx	r3
 8002de2:	bf00      	nop
 8002de4:	20011a4c 	.word	0x20011a4c
 8002de8:	0801fbc0 	.word	0x0801fbc0
 8002dec:	0801fc02 	.word	0x0801fc02
 8002df0:	0801fc3d 	.word	0x0801fc3d
 8002df4:	20011a50 	.word	0x20011a50
 8002df8:	0801fcd0 	.word	0x0801fcd0
 8002dfc:	20011a54 	.word	0x20011a54

08002e00 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002e00:	2200      	movs	r2, #0
 8002e02:	f04f 31ff 	mov.w	r1, #4294967295
 8002e06:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002e0a:	6082      	str	r2, [r0, #8]
    }
 8002e0c:	4770      	bx	lr
	...

08002e10 <_ZN8touchgfx6WidgetC1Ev>:
 8002e10:	2200      	movs	r2, #0
 8002e12:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002e16:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8002e1a:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002e1e:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8002e22:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8002e26:	8482      	strh	r2, [r0, #36]	@ 0x24
class Widget : public Drawable
 8002e28:	4a01      	ldr	r2, [pc, #4]	@ (8002e30 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002e2a:	6002      	str	r2, [r0, #0]
 8002e2c:	4770      	bx	lr
 8002e2e:	bf00      	nop
 8002e30:	0801fd64 	.word	0x0801fd64

08002e34 <_ZN8touchgfx13AnimatedImageC1ERKh>:
    AnimatedImage(const uint8_t& updateInterval = 1)
 8002e34:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002e36:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002e3a:	4604      	mov	r4, r0
 8002e3c:	460d      	mov	r5, r1
          running(false)
 8002e3e:	a901      	add	r1, sp, #4
 8002e40:	f8ad 3004 	strh.w	r3, [sp, #4]
 8002e44:	f7ff fe10 	bl	8002a68 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002e48:	4b08      	ldr	r3, [pc, #32]	@ (8002e6c <_ZN8touchgfx13AnimatedImageC1ERKh+0x38>)
 8002e4a:	6023      	str	r3, [r4, #0]
          startId(BITMAP_INVALID),
 8002e4c:	f04f 32ff 	mov.w	r2, #4294967295
 8002e50:	2300      	movs	r3, #0
 8002e52:	e9c4 320b 	strd	r3, r2, [r4, #44]	@ 0x2c
          updateTicksInterval(updateInterval),
 8002e56:	782a      	ldrb	r2, [r5, #0]
 8002e58:	f884 2034 	strb.w	r2, [r4, #52]	@ 0x34
    {
    }
 8002e5c:	4620      	mov	r0, r4
          ticksSinceUpdate(0),
 8002e5e:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
          reverse(false),
 8002e62:	86e3      	strh	r3, [r4, #54]	@ 0x36
          running(false)
 8002e64:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
    }
 8002e68:	b003      	add	sp, #12
 8002e6a:	bd30      	pop	{r4, r5, pc}
 8002e6c:	080203d0 	.word	0x080203d0

08002e70 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8002e70:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002e72:	2226      	movs	r2, #38	@ 0x26
 8002e74:	4604      	mov	r4, r0
 8002e76:	2100      	movs	r1, #0
 8002e78:	f01b f80b 	bl	801de92 <memset>
 8002e7c:	4620      	mov	r0, r4
 8002e7e:	f7ff ffc7 	bl	8002e10 <_ZN8touchgfx6WidgetC1Ev>
        : typedTextId(id)
 8002e82:	4b0a      	ldr	r3, [pc, #40]	@ (8002eac <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x3c>)
 8002e84:	62a3      	str	r3, [r4, #40]	@ 0x28
 8002e86:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002e8a:	85a3      	strh	r3, [r4, #44]	@ 0x2c
 8002e8c:	f44f 027f 	mov.w	r2, #16711680	@ 0xff0000
 8002e90:	2300      	movs	r3, #0
 8002e92:	e9c4 320c 	strd	r3, r2, [r4, #48]	@ 0x30
        : TextAreaWithWildcardBase(), wc1(0)
 8002e96:	4a06      	ldr	r2, [pc, #24]	@ (8002eb0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x40>)
 8002e98:	6022      	str	r2, [r4, #0]
 8002e9a:	8723      	strh	r3, [r4, #56]	@ 0x38
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002e9c:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 8002ea0:	e9c4 2310 	strd	r2, r3, [r4, #64]	@ 0x40
 8002ea4:	63e3      	str	r3, [r4, #60]	@ 0x3c
 8002ea6:	64a3      	str	r3, [r4, #72]	@ 0x48
    }
 8002ea8:	4620      	mov	r0, r4
 8002eaa:	bd10      	pop	{r4, pc}
 8002eac:	0801f484 	.word	0x0801f484
 8002eb0:	0801fdcc 	.word	0x0801fdcc

08002eb4 <_ZN15Screen2ViewBaseC1Ev>:
Screen2ViewBase::Screen2ViewBase()
 8002eb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002eb8:	4604      	mov	r4, r0
 8002eba:	b08d      	sub	sp, #52	@ 0x34
 8002ebc:	46a0      	mov	r8, r4
 8002ebe:	2500      	movs	r5, #0
 8002ec0:	f00b fbda 	bl	800e678 <_ZN8touchgfx6ScreenC1Ev>
 8002ec4:	4bc0      	ldr	r3, [pc, #768]	@ (80031c8 <_ZN15Screen2ViewBaseC1Ev+0x314>)
 8002ec6:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8002ec8:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 8002ecc:	2226      	movs	r2, #38	@ 0x26
 8002ece:	4629      	mov	r1, r5
 8002ed0:	4640      	mov	r0, r8
 8002ed2:	f01a ffde 	bl	801de92 <memset>
 8002ed6:	4640      	mov	r0, r8
 8002ed8:	f7ff ff9a 	bl	8002e10 <_ZN8touchgfx6WidgetC1Ev>
 8002edc:	4bbb      	ldr	r3, [pc, #748]	@ (80031cc <_ZN15Screen2ViewBaseC1Ev+0x318>)
 8002ede:	6423      	str	r3, [r4, #64]	@ 0x40
 8002ee0:	23ff      	movs	r3, #255	@ 0xff
 8002ee2:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
 8002ee6:	f104 036c 	add.w	r3, r4, #108	@ 0x6c
 8002eea:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8002eee:	a90a      	add	r1, sp, #40	@ 0x28
 8002ef0:	4618      	mov	r0, r3
        : color(col)
 8002ef2:	66a5      	str	r5, [r4, #104]	@ 0x68
 8002ef4:	9304      	str	r3, [sp, #16]
 8002ef6:	f8ad 6028 	strh.w	r6, [sp, #40]	@ 0x28
 8002efa:	f7ff fdb5 	bl	8002a68 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002efe:	f104 0398 	add.w	r3, r4, #152	@ 0x98
 8002f02:	f104 09c4 	add.w	r9, r4, #196	@ 0xc4
 8002f06:	4618      	mov	r0, r3
 8002f08:	a90a      	add	r1, sp, #40	@ 0x28
 8002f0a:	9305      	str	r3, [sp, #20]
 8002f0c:	f8ad 6028 	strh.w	r6, [sp, #40]	@ 0x28
    AnimatedImage(const uint8_t& updateInterval = 1)
 8002f10:	2601      	movs	r6, #1
 8002f12:	f7ff fda9 	bl	8002a68 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002f16:	a90a      	add	r1, sp, #40	@ 0x28
 8002f18:	4648      	mov	r0, r9
 8002f1a:	f88d 6028 	strb.w	r6, [sp, #40]	@ 0x28
 8002f1e:	f7ff ff89 	bl	8002e34 <_ZN8touchgfx13AnimatedImageC1ERKh>
 8002f22:	f504 7380 	add.w	r3, r4, #256	@ 0x100
 8002f26:	f504 7b9e 	add.w	fp, r4, #316	@ 0x13c
 8002f2a:	4618      	mov	r0, r3
 8002f2c:	a90a      	add	r1, sp, #40	@ 0x28
 8002f2e:	f504 7abc 	add.w	sl, r4, #376	@ 0x178
 8002f32:	9301      	str	r3, [sp, #4]
 8002f34:	f88d 6028 	strb.w	r6, [sp, #40]	@ 0x28
 8002f38:	f7ff ff7c 	bl	8002e34 <_ZN8touchgfx13AnimatedImageC1ERKh>
 8002f3c:	a90a      	add	r1, sp, #40	@ 0x28
 8002f3e:	4658      	mov	r0, fp
 8002f40:	f88d 6028 	strb.w	r6, [sp, #40]	@ 0x28
 8002f44:	f7ff ff76 	bl	8002e34 <_ZN8touchgfx13AnimatedImageC1ERKh>
 8002f48:	a90a      	add	r1, sp, #40	@ 0x28
 8002f4a:	4650      	mov	r0, sl
 8002f4c:	f88d 6028 	strb.w	r6, [sp, #40]	@ 0x28
 8002f50:	f7ff ff70 	bl	8002e34 <_ZN8touchgfx13AnimatedImageC1ERKh>
 8002f54:	f504 73da 	add.w	r3, r4, #436	@ 0x1b4
 8002f58:	4618      	mov	r0, r3
 8002f5a:	9302      	str	r3, [sp, #8]
 8002f5c:	f7ff ff88 	bl	8002e70 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002f60:	f504 7300 	add.w	r3, r4, #512	@ 0x200
 8002f64:	4618      	mov	r0, r3
 8002f66:	9303      	str	r3, [sp, #12]
 8002f68:	f7ff ff82 	bl	8002e70 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
        setXY(x, y);
 8002f6c:	462a      	mov	r2, r5
 8002f6e:	4640      	mov	r0, r8
 8002f70:	4629      	mov	r1, r5
 8002f72:	f7ff fd6b 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002f76:	4640      	mov	r0, r8
 8002f78:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8002f7c:	f7fe ffce 	bl	8001f1c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8002f80:	4640      	mov	r0, r8
 8002f82:	21f0      	movs	r1, #240	@ 0xf0
 8002f84:	f7fe ffcc 	bl	8001f20 <_ZN8touchgfx8Drawable9setHeightEs>
 8002f88:	1d27      	adds	r7, r4, #4
        color = newColor;
 8002f8a:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8002f8e:	66a3      	str	r3, [r4, #104]	@ 0x68
 8002f90:	4641      	mov	r1, r8
 8002f92:	4638      	mov	r0, r7
 8002f94:	f006 fbe8 	bl	8009768 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bg.setXY(-17, 0);
 8002f98:	462a      	mov	r2, r5
 8002f9a:	9804      	ldr	r0, [sp, #16]
 8002f9c:	f06f 0110 	mvn.w	r1, #16
 8002fa0:	f7ff fd54 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
 8002fa4:	f04f 0302 	mov.w	r3, #2
    bg.setBitmap(touchgfx::Bitmap(BITMAP_BG_ID));
 8002fa8:	9804      	ldr	r0, [sp, #16]
 8002faa:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 8002fae:	a90a      	add	r1, sp, #40	@ 0x28
 8002fb0:	f008 f989 	bl	800b2c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002fb4:	9904      	ldr	r1, [sp, #16]
 8002fb6:	4638      	mov	r0, r7
 8002fb8:	f006 fbd6 	bl	8009768 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    cacti1.setXY(213, 157);
 8002fbc:	229d      	movs	r2, #157	@ 0x9d
 8002fbe:	9805      	ldr	r0, [sp, #20]
 8002fc0:	21d5      	movs	r1, #213	@ 0xd5
 8002fc2:	f7ff fd43 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
 8002fc6:	230f      	movs	r3, #15
    cacti1.setBitmap(touchgfx::Bitmap(BITMAP_CACTUS0_ID));
 8002fc8:	9805      	ldr	r0, [sp, #20]
 8002fca:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 8002fce:	a90a      	add	r1, sp, #40	@ 0x28
 8002fd0:	f008 f979 	bl	800b2c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002fd4:	9905      	ldr	r1, [sp, #20]
 8002fd6:	4638      	mov	r0, r7
 8002fd8:	f006 fbc6 	bl	8009768 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ground.setXY(0, 184);
 8002fdc:	4648      	mov	r0, r9
 8002fde:	22b8      	movs	r2, #184	@ 0xb8
 8002fe0:	4629      	mov	r1, r5
 8002fe2:	f7ff fd33 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
    ground.setBitmaps(BITMAP_GROUND0_ID, BITMAP_GROUND2_ID);
 8002fe6:	221a      	movs	r2, #26
 8002fe8:	4648      	mov	r0, r9
 8002fea:	2118      	movs	r1, #24
 8002fec:	f007 feae 	bl	800ad4c <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>
    ground.setUpdateTicksInterval(1);
 8002ff0:	4648      	mov	r0, r9
 8002ff2:	4631      	mov	r1, r6
 8002ff4:	f007 febd 	bl	800ad72 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
    ground.startAnimation(false, true, false);
 8002ff8:	462b      	mov	r3, r5
 8002ffa:	4632      	mov	r2, r6
 8002ffc:	4648      	mov	r0, r9
 8002ffe:	4629      	mov	r1, r5
 8003000:	f007 fdfc 	bl	800abfc <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
 8003004:	4649      	mov	r1, r9
 8003006:	4638      	mov	r0, r7
 8003008:	f006 fbae 	bl	8009768 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    dinoc.setXY(11, 159);
 800300c:	9801      	ldr	r0, [sp, #4]
 800300e:	229f      	movs	r2, #159	@ 0x9f
 8003010:	210b      	movs	r1, #11
 8003012:	f7ff fd1b 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
    dinoc.setBitmaps(BITMAP_DINOC0_ID, BITMAP_DINOC1_ID);
 8003016:	2215      	movs	r2, #21
 8003018:	9801      	ldr	r0, [sp, #4]
 800301a:	2114      	movs	r1, #20
 800301c:	f007 fe96 	bl	800ad4c <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>
    dinoc.setUpdateTicksInterval(1);
 8003020:	9801      	ldr	r0, [sp, #4]
 8003022:	4631      	mov	r1, r6
 8003024:	f007 fea5 	bl	800ad72 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
    dinoc.startAnimation(false, true, false);
 8003028:	462b      	mov	r3, r5
 800302a:	4632      	mov	r2, r6
 800302c:	9801      	ldr	r0, [sp, #4]
 800302e:	4629      	mov	r1, r5
 8003030:	f007 fde4 	bl	800abfc <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
 8003034:	9901      	ldr	r1, [sp, #4]
        visible = vis;
 8003036:	f884 5125 	strb.w	r5, [r4, #293]	@ 0x125
 800303a:	4638      	mov	r0, r7
 800303c:	f006 fb94 	bl	8009768 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    dino.setXY(18, 140);
 8003040:	4658      	mov	r0, fp
 8003042:	228c      	movs	r2, #140	@ 0x8c
 8003044:	2112      	movs	r1, #18
 8003046:	f7ff fd01 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
    dino.setBitmaps(BITMAP_DINO2_ID, BITMAP_DINO3_ID);
 800304a:	2213      	movs	r2, #19
 800304c:	4658      	mov	r0, fp
 800304e:	2112      	movs	r1, #18
 8003050:	f007 fe7c 	bl	800ad4c <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>
    dino.setUpdateTicksInterval(1);
 8003054:	4658      	mov	r0, fp
 8003056:	4631      	mov	r1, r6
 8003058:	f007 fe8b 	bl	800ad72 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
    dino.startAnimation(false, true, false);
 800305c:	462b      	mov	r3, r5
 800305e:	4632      	mov	r2, r6
 8003060:	4658      	mov	r0, fp
 8003062:	4629      	mov	r1, r5
 8003064:	f007 fdca 	bl	800abfc <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
 8003068:	4659      	mov	r1, fp
 800306a:	4638      	mov	r0, r7
 800306c:	f006 fb7c 	bl	8009768 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bird.setXY(243, 120);
 8003070:	2278      	movs	r2, #120	@ 0x78
 8003072:	21f3      	movs	r1, #243	@ 0xf3
 8003074:	4650      	mov	r0, sl
 8003076:	f7ff fce9 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
    bird.setBitmaps(BITMAP_BIRD0_ID, BITMAP_BIRD1_ID);
 800307a:	2204      	movs	r2, #4
 800307c:	2103      	movs	r1, #3
 800307e:	4650      	mov	r0, sl
 8003080:	f007 fe64 	bl	800ad4c <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>
    bird.setUpdateTicksInterval(1);
 8003084:	4631      	mov	r1, r6
 8003086:	4650      	mov	r0, sl
 8003088:	f007 fe73 	bl	800ad72 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
    bird.startAnimation(false, true, false);
 800308c:	462b      	mov	r3, r5
 800308e:	4632      	mov	r2, r6
 8003090:	4629      	mov	r1, r5
 8003092:	4650      	mov	r0, sl
 8003094:	f007 fdb2 	bl	800abfc <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
 8003098:	4651      	mov	r1, sl
 800309a:	4638      	mov	r0, r7
 800309c:	f006 fb64 	bl	8009768 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    highestScoreTextArea.setXY(34, 18);
 80030a0:	2212      	movs	r2, #18
 80030a2:	9802      	ldr	r0, [sp, #8]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80030a4:	f8df b140 	ldr.w	fp, [pc, #320]	@ 80031e8 <_ZN15Screen2ViewBaseC1Ev+0x334>
 80030a8:	2122      	movs	r1, #34	@ 0x22
 80030aa:	f7ff fccf 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80030ae:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80030b2:	f8c4 31e4 	str.w	r3, [r4, #484]	@ 0x1e4
        boundingArea = calculateBoundingArea();
 80030b6:	f8d4 31b4 	ldr.w	r3, [r4, #436]	@ 0x1b4
 80030ba:	9902      	ldr	r1, [sp, #8]
 80030bc:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        linespace = space;
 80030c0:	f8a4 51e8 	strh.w	r5, [r4, #488]	@ 0x1e8
        boundingArea = calculateBoundingArea();
 80030c4:	f10d 0818 	add.w	r8, sp, #24
 80030c8:	4640      	mov	r0, r8
 80030ca:	4798      	blx	r3
 80030cc:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80030d0:	f504 73f8 	add.w	r3, r4, #496	@ 0x1f0
 80030d4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80030d8:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(highestScoreTextAreaBuffer, HIGHESTSCORETEXTAREA_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JVXV).getText());
 80030dc:	f504 7913 	add.w	r9, r4, #588	@ 0x24c
 80030e0:	b92b      	cbnz	r3, 80030ee <_ZN15Screen2ViewBaseC1Ev+0x23a>
 80030e2:	4b3b      	ldr	r3, [pc, #236]	@ (80031d0 <_ZN15Screen2ViewBaseC1Ev+0x31c>)
 80030e4:	4a3b      	ldr	r2, [pc, #236]	@ (80031d4 <_ZN15Screen2ViewBaseC1Ev+0x320>)
 80030e6:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80030e8:	483b      	ldr	r0, [pc, #236]	@ (80031d8 <_ZN15Screen2ViewBaseC1Ev+0x324>)
 80030ea:	f01a fccb 	bl	801da84 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80030ee:	f8df a0fc 	ldr.w	sl, [pc, #252]	@ 80031ec <_ZN15Screen2ViewBaseC1Ev+0x338>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80030f2:	f8ba 3000 	ldrh.w	r3, [sl]
 80030f6:	2b03      	cmp	r3, #3
 80030f8:	d803      	bhi.n	8003102 <_ZN15Screen2ViewBaseC1Ev+0x24e>
 80030fa:	4b38      	ldr	r3, [pc, #224]	@ (80031dc <_ZN15Screen2ViewBaseC1Ev+0x328>)
 80030fc:	4a35      	ldr	r2, [pc, #212]	@ (80031d4 <_ZN15Screen2ViewBaseC1Ev+0x320>)
 80030fe:	2161      	movs	r1, #97	@ 0x61
 8003100:	e7f2      	b.n	80030e8 <_ZN15Screen2ViewBaseC1Ev+0x234>
        return texts->getText(typedTextId);
 8003102:	4b37      	ldr	r3, [pc, #220]	@ (80031e0 <_ZN15Screen2ViewBaseC1Ev+0x32c>)
 8003104:	2103      	movs	r1, #3
 8003106:	6818      	ldr	r0, [r3, #0]
 8003108:	f000 fc5e 	bl	80039c8 <_ZNK8touchgfx5Texts7getTextEt>
 800310c:	4a35      	ldr	r2, [pc, #212]	@ (80031e4 <_ZN15Screen2ViewBaseC1Ev+0x330>)
 800310e:	4603      	mov	r3, r0
 8003110:	210a      	movs	r1, #10
 8003112:	4648      	mov	r0, r9
 8003114:	f00c ff4e 	bl	800ffb4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    highestScoreTextArea.resizeToCurrentText();
 8003118:	9802      	ldr	r0, [sp, #8]
        wc1 = value;
 800311a:	f8c4 91fc 	str.w	r9, [r4, #508]	@ 0x1fc
 800311e:	f007 ff1b 	bl	800af58 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003122:	f8df 90cc 	ldr.w	r9, [pc, #204]	@ 80031f0 <_ZN15Screen2ViewBaseC1Ev+0x33c>
    highestScoreTextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4RMC));
 8003126:	9802      	ldr	r0, [sp, #8]
 8003128:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 800312c:	2304      	movs	r3, #4
 800312e:	a90a      	add	r1, sp, #40	@ 0x28
 8003130:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8003134:	f007 ff30 	bl	800af98 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003138:	9902      	ldr	r1, [sp, #8]
 800313a:	4638      	mov	r0, r7
 800313c:	f006 fb14 	bl	8009768 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaPoint.setXY(34, 45);
 8003140:	9803      	ldr	r0, [sp, #12]
 8003142:	222d      	movs	r2, #45	@ 0x2d
 8003144:	2122      	movs	r1, #34	@ 0x22
 8003146:	f7ff fc81 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
 800314a:	f8d4 3200 	ldr.w	r3, [r4, #512]	@ 0x200
 800314e:	9903      	ldr	r1, [sp, #12]
 8003150:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        linespace = space;
 8003154:	f8a4 5234 	strh.w	r5, [r4, #564]	@ 0x234
        color = newColor;
 8003158:	f04f 427f 	mov.w	r2, #4278190080	@ 0xff000000
 800315c:	f8c4 2230 	str.w	r2, [r4, #560]	@ 0x230
        boundingArea = calculateBoundingArea();
 8003160:	4640      	mov	r0, r8
 8003162:	4798      	blx	r3
 8003164:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003168:	f504 730f 	add.w	r3, r4, #572	@ 0x23c
 800316c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003170:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaPointBuffer, TEXTAREAPOINT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_YKYT).getText());
 8003174:	f504 7518 	add.w	r5, r4, #608	@ 0x260
 8003178:	2b00      	cmp	r3, #0
 800317a:	d0b2      	beq.n	80030e2 <_ZN15Screen2ViewBaseC1Ev+0x22e>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800317c:	f8ba 3000 	ldrh.w	r3, [sl]
 8003180:	2b01      	cmp	r3, #1
 8003182:	d9ba      	bls.n	80030fa <_ZN15Screen2ViewBaseC1Ev+0x246>
        return texts->getText(typedTextId);
 8003184:	4b16      	ldr	r3, [pc, #88]	@ (80031e0 <_ZN15Screen2ViewBaseC1Ev+0x32c>)
 8003186:	4631      	mov	r1, r6
 8003188:	6818      	ldr	r0, [r3, #0]
 800318a:	f000 fc1d 	bl	80039c8 <_ZNK8touchgfx5Texts7getTextEt>
 800318e:	4a15      	ldr	r2, [pc, #84]	@ (80031e4 <_ZN15Screen2ViewBaseC1Ev+0x330>)
 8003190:	4603      	mov	r3, r0
 8003192:	210a      	movs	r1, #10
 8003194:	4628      	mov	r0, r5
 8003196:	f00c ff0d 	bl	800ffb4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaPoint.resizeToCurrentText();
 800319a:	9803      	ldr	r0, [sp, #12]
 800319c:	f8c4 5248 	str.w	r5, [r4, #584]	@ 0x248
 80031a0:	f007 feda 	bl	800af58 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80031a4:	f04f 0302 	mov.w	r3, #2
    textAreaPoint.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0E7D));
 80031a8:	9803      	ldr	r0, [sp, #12]
 80031aa:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 80031ae:	a90a      	add	r1, sp, #40	@ 0x28
 80031b0:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 80031b4:	f007 fef0 	bl	800af98 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80031b8:	4638      	mov	r0, r7
 80031ba:	9903      	ldr	r1, [sp, #12]
 80031bc:	f006 fad4 	bl	8009768 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80031c0:	4620      	mov	r0, r4
 80031c2:	b00d      	add	sp, #52	@ 0x34
 80031c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80031c8:	0801fe5c 	.word	0x0801fe5c
 80031cc:	0802044c 	.word	0x0802044c
 80031d0:	0801fbc0 	.word	0x0801fbc0
 80031d4:	0801fd0e 	.word	0x0801fd0e
 80031d8:	0801fc3d 	.word	0x0801fc3d
 80031dc:	0801fcd0 	.word	0x0801fcd0
 80031e0:	20011a58 	.word	0x20011a58
 80031e4:	0801fd59 	.word	0x0801fd59
 80031e8:	20011a4c 	.word	0x20011a4c
 80031ec:	20011a50 	.word	0x20011a50
 80031f0:	0801f484 	.word	0x0801f484

080031f4 <_ZN15Screen3ViewBaseD1Ev>:
}

Screen3ViewBase::~Screen3ViewBase()
{

}
 80031f4:	4770      	bx	lr

080031f6 <_ZN15Screen3ViewBase11setupScreenEv>:

void Screen3ViewBase::setupScreen()
{

}
 80031f6:	4770      	bx	lr

080031f8 <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80031f8:	4770      	bx	lr

080031fa <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80031fa:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80031fc:	68c2      	ldr	r2, [r0, #12]
 80031fe:	6844      	ldr	r4, [r0, #4]
 8003200:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003202:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003204:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003208:	07d2      	lsls	r2, r2, #31
 800320a:	bf48      	it	mi
 800320c:	5962      	ldrmi	r2, [r4, r5]
 800320e:	689b      	ldr	r3, [r3, #8]
    }
 8003210:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003212:	bf48      	it	mi
 8003214:	58d3      	ldrmi	r3, [r2, r3]
 8003216:	4718      	bx	r3

08003218 <_ZNK8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 8003218:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 800321a:	6840      	ldr	r0, [r0, #4]
 800321c:	b130      	cbz	r0, 800322c <_ZNK8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800321e:	689a      	ldr	r2, [r3, #8]
 8003220:	b91a      	cbnz	r2, 800322a <_ZNK8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 8003222:	68d8      	ldr	r0, [r3, #12]
 8003224:	f000 0001 	and.w	r0, r0, #1
 8003228:	4770      	bx	lr
 800322a:	2001      	movs	r0, #1
    }
 800322c:	4770      	bx	lr

0800322e <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800322e:	b510      	push	{r4, lr}
 8003230:	2110      	movs	r1, #16
 8003232:	4604      	mov	r4, r0
 8003234:	f01a fbf8 	bl	801da28 <_ZdlPvj>
 8003238:	4620      	mov	r0, r4
 800323a:	bd10      	pop	{r4, pc}

0800323c <_ZN15Screen3ViewBaseD0Ev>:
Screen3ViewBase::~Screen3ViewBase()
 800323c:	b510      	push	{r4, lr}
}
 800323e:	f44f 713d 	mov.w	r1, #756	@ 0x2f4
Screen3ViewBase::~Screen3ViewBase()
 8003242:	4604      	mov	r4, r0
}
 8003244:	f01a fbf0 	bl	801da28 <_ZdlPvj>
 8003248:	4620      	mov	r0, r4
 800324a:	bd10      	pop	{r4, pc}

0800324c <_ZN15Screen3ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen3ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
 800324c:	f500 7014 	add.w	r0, r0, #592	@ 0x250
 8003250:	4288      	cmp	r0, r1
{
 8003252:	b508      	push	{r3, lr}
    if (&src == &button1)
 8003254:	d105      	bne.n	8003262 <_ZN15Screen3ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Screen3ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003256:	f009 fe7f 	bl	800cf58 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When button1 clicked change screen to Screen2
        //Go to Screen2 with no screen transition
        application().gotoScreen2ScreenNoTransition();
    }
}
 800325a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen2ScreenNoTransition();
 800325e:	f7ff bb37 	b.w	80028d0 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>
}
 8003262:	bd08      	pop	{r3, pc}

08003264 <_ZN15Screen3ViewBaseC1Ev>:
Screen3ViewBase::Screen3ViewBase() :
 8003264:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003268:	4604      	mov	r4, r0
 800326a:	b095      	sub	sp, #84	@ 0x54
    buttonCallback(this, &Screen3ViewBase::buttonCallbackHandler)
 800326c:	46a1      	mov	r9, r4
 800326e:	2500      	movs	r5, #0
 8003270:	f00b fa02 	bl	800e678 <_ZN8touchgfx6ScreenC1Ev>
 8003274:	4bd7      	ldr	r3, [pc, #860]	@ (80035d4 <_ZN15Screen3ViewBaseC1Ev+0x370>)
 8003276:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8003278:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 800327c:	2226      	movs	r2, #38	@ 0x26
 800327e:	4629      	mov	r1, r5
 8003280:	4648      	mov	r0, r9
 8003282:	f01a fe06 	bl	801de92 <memset>
 8003286:	4648      	mov	r0, r9
 8003288:	f7ff fdc2 	bl	8002e10 <_ZN8touchgfx6WidgetC1Ev>
 800328c:	4bd2      	ldr	r3, [pc, #840]	@ (80035d8 <_ZN15Screen3ViewBaseC1Ev+0x374>)
 800328e:	6423      	str	r3, [r4, #64]	@ 0x40
 8003290:	f104 0b6c 	add.w	fp, r4, #108	@ 0x6c
 8003294:	23ff      	movs	r3, #255	@ 0xff
 8003296:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 800329a:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
 800329e:	a912      	add	r1, sp, #72	@ 0x48
 80032a0:	66a5      	str	r5, [r4, #104]	@ 0x68
 80032a2:	4658      	mov	r0, fp
 80032a4:	f8ad 6048 	strh.w	r6, [sp, #72]	@ 0x48
 80032a8:	f7ff fbde 	bl	8002a68 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80032ac:	f104 0398 	add.w	r3, r4, #152	@ 0x98
 80032b0:	a912      	add	r1, sp, #72	@ 0x48
 80032b2:	4618      	mov	r0, r3
 80032b4:	9303      	str	r3, [sp, #12]
 80032b6:	f8ad 6048 	strh.w	r6, [sp, #72]	@ 0x48
 80032ba:	f7ff fbd5 	bl	8002a68 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
          touchable(false),
 80032be:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80032c2:	f8a4 30e8 	strh.w	r3, [r4, #232]	@ 0xe8
class Container : public Drawable
{
public:
    Container()
        : Drawable(),
          firstChild(0)
 80032c6:	4bc5      	ldr	r3, [pc, #788]	@ (80035dc <_ZN15Screen3ViewBaseC1Ev+0x378>)
 80032c8:	f8c4 30c4 	str.w	r3, [r4, #196]	@ 0xc4
 80032cc:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 80032d0:	a912      	add	r1, sp, #72	@ 0x48
 80032d2:	4618      	mov	r0, r3
        : x(0), y(0), width(0), height(0)
 80032d4:	e9c4 5532 	strd	r5, r5, [r4, #200]	@ 0xc8
 80032d8:	e9c4 5534 	strd	r5, r5, [r4, #208]	@ 0xd0
          nextSibling(0),
 80032dc:	e9c4 5536 	strd	r5, r5, [r4, #216]	@ 0xd8
          cachedAbsX(0),
 80032e0:	e9c4 5538 	strd	r5, r5, [r4, #224]	@ 0xe0
 80032e4:	f8c4 50ec 	str.w	r5, [r4, #236]	@ 0xec
 80032e8:	9304      	str	r3, [sp, #16]
 80032ea:	f8ad 6048 	strh.w	r6, [sp, #72]	@ 0x48
 80032ee:	f7ff fbbb 	bl	8002a68 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80032f2:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 80032f6:	a912      	add	r1, sp, #72	@ 0x48
 80032f8:	4618      	mov	r0, r3
 80032fa:	9305      	str	r3, [sp, #20]
 80032fc:	f8ad 6048 	strh.w	r6, [sp, #72]	@ 0x48
 8003300:	f7ff fbb2 	bl	8002a68 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003304:	f504 73a4 	add.w	r3, r4, #328	@ 0x148
 8003308:	a912      	add	r1, sp, #72	@ 0x48
 800330a:	4618      	mov	r0, r3
 800330c:	9306      	str	r3, [sp, #24]
 800330e:	f8ad 6048 	strh.w	r6, [sp, #72]	@ 0x48
 8003312:	f7ff fba9 	bl	8002a68 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003316:	f504 73ba 	add.w	r3, r4, #372	@ 0x174
 800331a:	a912      	add	r1, sp, #72	@ 0x48
 800331c:	4618      	mov	r0, r3
 800331e:	9307      	str	r3, [sp, #28]
 8003320:	f8ad 6048 	strh.w	r6, [sp, #72]	@ 0x48
 8003324:	f7ff fba0 	bl	8002a68 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003328:	f504 73d0 	add.w	r3, r4, #416	@ 0x1a0
 800332c:	a912      	add	r1, sp, #72	@ 0x48
 800332e:	4618      	mov	r0, r3
 8003330:	9308      	str	r3, [sp, #32]
 8003332:	f8ad 6048 	strh.w	r6, [sp, #72]	@ 0x48
 8003336:	f7ff fb97 	bl	8002a68 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800333a:	f504 73e6 	add.w	r3, r4, #460	@ 0x1cc
 800333e:	a912      	add	r1, sp, #72	@ 0x48
 8003340:	4618      	mov	r0, r3
 8003342:	9309      	str	r3, [sp, #36]	@ 0x24
 8003344:	f8ad 6048 	strh.w	r6, [sp, #72]	@ 0x48
 8003348:	f7ff fb8e 	bl	8002a68 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800334c:	f504 73fc 	add.w	r3, r4, #504	@ 0x1f8
 8003350:	a912      	add	r1, sp, #72	@ 0x48
 8003352:	4618      	mov	r0, r3
 8003354:	930a      	str	r3, [sp, #40]	@ 0x28
 8003356:	f8ad 6048 	strh.w	r6, [sp, #72]	@ 0x48
 800335a:	f7ff fb85 	bl	8002a68 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800335e:	f504 7309 	add.w	r3, r4, #548	@ 0x224
 8003362:	f504 7a14 	add.w	sl, r4, #592	@ 0x250
 8003366:	4618      	mov	r0, r3
 8003368:	a912      	add	r1, sp, #72	@ 0x48
 800336a:	930b      	str	r3, [sp, #44]	@ 0x2c
 800336c:	f8ad 6048 	strh.w	r6, [sp, #72]	@ 0x48
 8003370:	f7ff fb7a 	bl	8002a68 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        : Widget(), action(), pressed(false)
 8003374:	2226      	movs	r2, #38	@ 0x26
 8003376:	4629      	mov	r1, r5
 8003378:	4650      	mov	r0, sl
 800337a:	f01a fd8a 	bl	801de92 <memset>
 800337e:	4650      	mov	r0, sl
 8003380:	f7ff fd46 	bl	8002e10 <_ZN8touchgfx6WidgetC1Ev>
        touchable = touch;
 8003384:	2301      	movs	r3, #1
 8003386:	f504 7821 	add.w	r8, r4, #644	@ 0x284
 800338a:	f884 3274 	strb.w	r3, [r4, #628]	@ 0x274
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 800338e:	4b94      	ldr	r3, [pc, #592]	@ (80035e0 <_ZN15Screen3ViewBaseC1Ev+0x37c>)
 8003390:	f8c4 3250 	str.w	r3, [r4, #592]	@ 0x250
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003394:	2226      	movs	r2, #38	@ 0x26
 8003396:	4629      	mov	r1, r5
 8003398:	f8a4 627e 	strh.w	r6, [r4, #638]	@ 0x27e
 800339c:	f8a4 6280 	strh.w	r6, [r4, #640]	@ 0x280
 80033a0:	f884 6282 	strb.w	r6, [r4, #642]	@ 0x282
 80033a4:	f8c4 5278 	str.w	r5, [r4, #632]	@ 0x278
 80033a8:	f884 527c 	strb.w	r5, [r4, #636]	@ 0x27c
 80033ac:	4640      	mov	r0, r8
 80033ae:	f01a fd70 	bl	801de92 <memset>
 80033b2:	4640      	mov	r0, r8
 80033b4:	f7ff fd2c 	bl	8002e10 <_ZN8touchgfx6WidgetC1Ev>
 80033b8:	4b8a      	ldr	r3, [pc, #552]	@ (80035e4 <_ZN15Screen3ViewBaseC1Ev+0x380>)
 80033ba:	f8c4 32ac 	str.w	r3, [r4, #684]	@ 0x2ac
 80033be:	f44f 037f 	mov.w	r3, #16711680	@ 0xff0000
 80033c2:	f8c4 32b8 	str.w	r3, [r4, #696]	@ 0x2b8
        : TextAreaWithWildcardBase(), wc1(0)
 80033c6:	4b88      	ldr	r3, [pc, #544]	@ (80035e8 <_ZN15Screen3ViewBaseC1Ev+0x384>)
 80033c8:	f8c4 3284 	str.w	r3, [r4, #644]	@ 0x284
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80033cc:	f04f 33ff 	mov.w	r3, #4294967295
              text(0)
 80033d0:	e9c4 35b1 	strd	r3, r5, [r4, #708]	@ 0x2c4
        : pobject(pObject), pmemfun(pmemfun_1)
 80033d4:	4b85      	ldr	r3, [pc, #532]	@ (80035ec <_ZN15Screen3ViewBaseC1Ev+0x388>)
 80033d6:	f8a4 62b0 	strh.w	r6, [r4, #688]	@ 0x2b0
 80033da:	e9c4 34b9 	strd	r3, r4, [r4, #740]	@ 0x2e4
 80033de:	4b84      	ldr	r3, [pc, #528]	@ (80035f0 <_ZN15Screen3ViewBaseC1Ev+0x38c>)
        : color(col)
 80033e0:	f8c4 52b4 	str.w	r5, [r4, #692]	@ 0x2b4
 80033e4:	e9c4 35bb 	strd	r3, r5, [r4, #748]	@ 0x2ec
    __background.setPosition(0, 0, 320, 240);
 80033e8:	23f0      	movs	r3, #240	@ 0xf0
 80033ea:	462a      	mov	r2, r5
 80033ec:	4648      	mov	r0, r9
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80033ee:	f8a4 52bc 	strh.w	r5, [r4, #700]	@ 0x2bc
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80033f2:	f8c4 52c0 	str.w	r5, [r4, #704]	@ 0x2c0
 80033f6:	f8c4 52cc 	str.w	r5, [r4, #716]	@ 0x2cc
 80033fa:	4629      	mov	r1, r5
 80033fc:	9300      	str	r3, [sp, #0]
 80033fe:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8003402:	f7ff f855 	bl	80024b0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003406:	1d26      	adds	r6, r4, #4
        color = newColor;
 8003408:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 800340c:	66a3      	str	r3, [r4, #104]	@ 0x68
 800340e:	4649      	mov	r1, r9
 8003410:	4630      	mov	r0, r6
 8003412:	f006 f9a9 	bl	8009768 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bg.setXY(-17, 0);
 8003416:	462a      	mov	r2, r5
 8003418:	f06f 0110 	mvn.w	r1, #16
 800341c:	4658      	mov	r0, fp
 800341e:	f7ff fb15 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
 8003422:	2302      	movs	r3, #2
    bg.setBitmap(touchgfx::Bitmap(BITMAP_BG_ID));
 8003424:	a912      	add	r1, sp, #72	@ 0x48
 8003426:	4658      	mov	r0, fp
 8003428:	f8ad 3048 	strh.w	r3, [sp, #72]	@ 0x48
 800342c:	f007 ff4b 	bl	800b2c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003430:	4659      	mov	r1, fp
 8003432:	4630      	mov	r0, r6
 8003434:	f006 f998 	bl	8009768 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ground.setXY(0, 180);
 8003438:	22b4      	movs	r2, #180	@ 0xb4
 800343a:	9803      	ldr	r0, [sp, #12]
 800343c:	4629      	mov	r1, r5
 800343e:	f7ff fb05 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
 8003442:	2318      	movs	r3, #24
    ground.setBitmap(touchgfx::Bitmap(BITMAP_GROUND0_ID));
 8003444:	9803      	ldr	r0, [sp, #12]
 8003446:	f8ad 3048 	strh.w	r3, [sp, #72]	@ 0x48
 800344a:	a912      	add	r1, sp, #72	@ 0x48
 800344c:	f007 ff3b 	bl	800b2c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003450:	9903      	ldr	r1, [sp, #12]
 8003452:	4630      	mov	r0, r6
    buttonCallback(this, &Screen3ViewBase::buttonCallbackHandler)
 8003454:	f104 07c4 	add.w	r7, r4, #196	@ 0xc4
 8003458:	f006 f986 	bl	8009768 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gameover.setPosition(45, 74, 231, 80);
 800345c:	2350      	movs	r3, #80	@ 0x50
 800345e:	4638      	mov	r0, r7
 8003460:	9300      	str	r3, [sp, #0]
 8003462:	224a      	movs	r2, #74	@ 0x4a
 8003464:	23e7      	movs	r3, #231	@ 0xe7
 8003466:	212d      	movs	r1, #45	@ 0x2d
 8003468:	f7ff f822 	bl	80024b0 <_ZN8touchgfx8Drawable11setPositionEssss>
    g.setXY(37, 15);
 800346c:	220f      	movs	r2, #15
 800346e:	9804      	ldr	r0, [sp, #16]
 8003470:	2125      	movs	r1, #37	@ 0x25
 8003472:	f7ff faeb 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
 8003476:	2317      	movs	r3, #23
    g.setBitmap(touchgfx::Bitmap(BITMAP_G_ID));
 8003478:	9804      	ldr	r0, [sp, #16]
 800347a:	f8ad 3048 	strh.w	r3, [sp, #72]	@ 0x48
 800347e:	a912      	add	r1, sp, #72	@ 0x48
 8003480:	f007 ff21 	bl	800b2c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    gameover.add(g);
 8003484:	4638      	mov	r0, r7
 8003486:	9904      	ldr	r1, [sp, #16]
 8003488:	f006 f96e 	bl	8009768 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    a.setXY(57, 15);
 800348c:	220f      	movs	r2, #15
 800348e:	9805      	ldr	r0, [sp, #20]
 8003490:	2139      	movs	r1, #57	@ 0x39
 8003492:	f7ff fadb 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
    a.setBitmap(touchgfx::Bitmap(BITMAP_A_ID));
 8003496:	9805      	ldr	r0, [sp, #20]
 8003498:	f8ad 5048 	strh.w	r5, [sp, #72]	@ 0x48
 800349c:	a912      	add	r1, sp, #72	@ 0x48
 800349e:	f007 ff12 	bl	800b2c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    gameover.add(a);
 80034a2:	4638      	mov	r0, r7
 80034a4:	9905      	ldr	r1, [sp, #20]
 80034a6:	f006 f95f 	bl	8009768 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    m.setXY(77, 15);
 80034aa:	220f      	movs	r2, #15
 80034ac:	9806      	ldr	r0, [sp, #24]
 80034ae:	214d      	movs	r1, #77	@ 0x4d
 80034b0:	f7ff facc 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
 80034b4:	231b      	movs	r3, #27
    m.setBitmap(touchgfx::Bitmap(BITMAP_M_ID));
 80034b6:	9806      	ldr	r0, [sp, #24]
 80034b8:	f8ad 3048 	strh.w	r3, [sp, #72]	@ 0x48
 80034bc:	a912      	add	r1, sp, #72	@ 0x48
 80034be:	f007 ff02 	bl	800b2c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    gameover.add(m);
 80034c2:	4638      	mov	r0, r7
 80034c4:	9906      	ldr	r1, [sp, #24]
 80034c6:	f006 f94f 	bl	8009768 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    e.setXY(97, 15);
 80034ca:	220f      	movs	r2, #15
 80034cc:	9807      	ldr	r0, [sp, #28]
 80034ce:	2161      	movs	r1, #97	@ 0x61
 80034d0:	f7ff fabc 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
 80034d4:	f04f 0916 	mov.w	r9, #22
    e.setBitmap(touchgfx::Bitmap(BITMAP_E_ID));
 80034d8:	9807      	ldr	r0, [sp, #28]
 80034da:	f8ad 9048 	strh.w	r9, [sp, #72]	@ 0x48
 80034de:	a912      	add	r1, sp, #72	@ 0x48
 80034e0:	f007 fef1 	bl	800b2c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    gameover.add(e);
 80034e4:	4638      	mov	r0, r7
 80034e6:	9907      	ldr	r1, [sp, #28]
 80034e8:	f006 f93e 	bl	8009768 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    o.setXY(122, 15);
 80034ec:	220f      	movs	r2, #15
 80034ee:	9808      	ldr	r0, [sp, #32]
 80034f0:	217a      	movs	r1, #122	@ 0x7a
 80034f2:	f7ff faab 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
 80034f6:	231c      	movs	r3, #28
    o.setBitmap(touchgfx::Bitmap(BITMAP_O_ID));
 80034f8:	9808      	ldr	r0, [sp, #32]
 80034fa:	f8ad 3048 	strh.w	r3, [sp, #72]	@ 0x48
 80034fe:	a912      	add	r1, sp, #72	@ 0x48
 8003500:	f007 fee1 	bl	800b2c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    gameover.add(o);
 8003504:	4638      	mov	r0, r7
 8003506:	9908      	ldr	r1, [sp, #32]
 8003508:	f006 f92e 	bl	8009768 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    v.setXY(141, 15);
 800350c:	220f      	movs	r2, #15
 800350e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003510:	218d      	movs	r1, #141	@ 0x8d
 8003512:	f7ff fa9b 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
 8003516:	231f      	movs	r3, #31
    v.setBitmap(touchgfx::Bitmap(BITMAP_V_ID));
 8003518:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800351a:	f8ad 3048 	strh.w	r3, [sp, #72]	@ 0x48
 800351e:	a912      	add	r1, sp, #72	@ 0x48
 8003520:	f007 fed1 	bl	800b2c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    gameover.add(v);
 8003524:	4638      	mov	r0, r7
 8003526:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003528:	f006 f91e 	bl	8009768 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    e1.setXY(158, 15);
 800352c:	220f      	movs	r2, #15
 800352e:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8003530:	219e      	movs	r1, #158	@ 0x9e
 8003532:	f7ff fa8b 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
    e1.setBitmap(touchgfx::Bitmap(BITMAP_E_ID));
 8003536:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8003538:	f8ad 9048 	strh.w	r9, [sp, #72]	@ 0x48
 800353c:	a912      	add	r1, sp, #72	@ 0x48
 800353e:	f007 fec2 	bl	800b2c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    gameover.add(e1);
 8003542:	4638      	mov	r0, r7
 8003544:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003546:	f006 f90f 	bl	8009768 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    r.setXY(177, 15);
 800354a:	220f      	movs	r2, #15
 800354c:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800354e:	21b1      	movs	r1, #177	@ 0xb1
 8003550:	f7ff fa7c 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
 8003554:	231d      	movs	r3, #29
    r.setBitmap(touchgfx::Bitmap(BITMAP_R_ID));
 8003556:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8003558:	f8ad 3048 	strh.w	r3, [sp, #72]	@ 0x48
 800355c:	a912      	add	r1, sp, #72	@ 0x48
 800355e:	f007 feb2 	bl	800b2c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    gameover.add(r);
 8003562:	4638      	mov	r0, r7
 8003564:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8003566:	f006 f8ff 	bl	8009768 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800356a:	4639      	mov	r1, r7
 800356c:	4630      	mov	r0, r6
 800356e:	f006 f8fb 	bl	8009768 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    button1.setXY(133, 138);
 8003572:	228a      	movs	r2, #138	@ 0x8a
 8003574:	2185      	movs	r1, #133	@ 0x85
 8003576:	4650      	mov	r0, sl
 8003578:	f7ff fa68 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
 800357c:	231e      	movs	r3, #30
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_RETRY_ID), touchgfx::Bitmap(BITMAP_RETRY_ID));
 800357e:	aa12      	add	r2, sp, #72	@ 0x48
 8003580:	a911      	add	r1, sp, #68	@ 0x44
 8003582:	4650      	mov	r0, sl
 8003584:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8003588:	f8ad 3048 	strh.w	r3, [sp, #72]	@ 0x48
 800358c:	f007 fd62 	bl	800b054 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    button1.setAction(buttonCallback);
 8003590:	f504 7339 	add.w	r3, r4, #740	@ 0x2e4
        action = &callback;
 8003594:	f8c4 3278 	str.w	r3, [r4, #632]	@ 0x278
 8003598:	4651      	mov	r1, sl
 800359a:	4630      	mov	r0, r6
 800359c:	f006 f8e4 	bl	8009768 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(126, 111);
 80035a0:	226f      	movs	r2, #111	@ 0x6f
 80035a2:	217e      	movs	r1, #126	@ 0x7e
 80035a4:	4640      	mov	r0, r8
 80035a6:	f7ff fa51 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80035aa:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80035ae:	f8c4 32b4 	str.w	r3, [r4, #692]	@ 0x2b4
        boundingArea = calculateBoundingArea();
 80035b2:	f8d4 3284 	ldr.w	r3, [r4, #644]	@ 0x284
        linespace = space;
 80035b6:	f8a4 52b8 	strh.w	r5, [r4, #696]	@ 0x2b8
        boundingArea = calculateBoundingArea();
 80035ba:	af0c      	add	r7, sp, #48	@ 0x30
 80035bc:	4638      	mov	r0, r7
 80035be:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80035c2:	4641      	mov	r1, r8
 80035c4:	4798      	blx	r3
 80035c6:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80035ca:	f504 7330 	add.w	r3, r4, #704	@ 0x2c0
 80035ce:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80035d2:	e00f      	b.n	80035f4 <_ZN15Screen3ViewBaseC1Ev+0x390>
 80035d4:	0801fea8 	.word	0x0801fea8
 80035d8:	0802044c 	.word	0x0802044c
 80035dc:	080202a0 	.word	0x080202a0
 80035e0:	080204b4 	.word	0x080204b4
 80035e4:	0801f484 	.word	0x0801f484
 80035e8:	0801fdcc 	.word	0x0801fdcc
 80035ec:	0801fe90 	.word	0x0801fe90
 80035f0:	0800324d 	.word	0x0800324d
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80035f4:	4b19      	ldr	r3, [pc, #100]	@ (800365c <_ZN15Screen3ViewBaseC1Ev+0x3f8>)
 80035f6:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4SZT).getText());
 80035f8:	f504 7734 	add.w	r7, r4, #720	@ 0x2d0
 80035fc:	b92b      	cbnz	r3, 800360a <_ZN15Screen3ViewBaseC1Ev+0x3a6>
 80035fe:	4b18      	ldr	r3, [pc, #96]	@ (8003660 <_ZN15Screen3ViewBaseC1Ev+0x3fc>)
 8003600:	4a18      	ldr	r2, [pc, #96]	@ (8003664 <_ZN15Screen3ViewBaseC1Ev+0x400>)
 8003602:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003604:	4818      	ldr	r0, [pc, #96]	@ (8003668 <_ZN15Screen3ViewBaseC1Ev+0x404>)
 8003606:	f01a fa3d 	bl	801da84 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800360a:	4b18      	ldr	r3, [pc, #96]	@ (800366c <_ZN15Screen3ViewBaseC1Ev+0x408>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800360c:	881b      	ldrh	r3, [r3, #0]
 800360e:	b91b      	cbnz	r3, 8003618 <_ZN15Screen3ViewBaseC1Ev+0x3b4>
 8003610:	4b17      	ldr	r3, [pc, #92]	@ (8003670 <_ZN15Screen3ViewBaseC1Ev+0x40c>)
 8003612:	4a14      	ldr	r2, [pc, #80]	@ (8003664 <_ZN15Screen3ViewBaseC1Ev+0x400>)
 8003614:	2161      	movs	r1, #97	@ 0x61
 8003616:	e7f5      	b.n	8003604 <_ZN15Screen3ViewBaseC1Ev+0x3a0>
        return texts->getText(typedTextId);
 8003618:	4b16      	ldr	r3, [pc, #88]	@ (8003674 <_ZN15Screen3ViewBaseC1Ev+0x410>)
 800361a:	4629      	mov	r1, r5
 800361c:	6818      	ldr	r0, [r3, #0]
 800361e:	f000 f9d3 	bl	80039c8 <_ZNK8touchgfx5Texts7getTextEt>
 8003622:	4a15      	ldr	r2, [pc, #84]	@ (8003678 <_ZN15Screen3ViewBaseC1Ev+0x414>)
 8003624:	4603      	mov	r3, r0
 8003626:	210a      	movs	r1, #10
 8003628:	4638      	mov	r0, r7
 800362a:	f00c fcc3 	bl	800ffb4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea1.resizeToCurrentText();
 800362e:	4640      	mov	r0, r8
        wc1 = value;
 8003630:	f8c4 72cc 	str.w	r7, [r4, #716]	@ 0x2cc
 8003634:	f007 fc90 	bl	800af58 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003638:	4b10      	ldr	r3, [pc, #64]	@ (800367c <_ZN15Screen3ViewBaseC1Ev+0x418>)
 800363a:	9312      	str	r3, [sp, #72]	@ 0x48
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3XVM));
 800363c:	a912      	add	r1, sp, #72	@ 0x48
 800363e:	2305      	movs	r3, #5
 8003640:	4640      	mov	r0, r8
 8003642:	f8ad 304c 	strh.w	r3, [sp, #76]	@ 0x4c
 8003646:	f007 fca7 	bl	800af98 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800364a:	4630      	mov	r0, r6
 800364c:	4641      	mov	r1, r8
 800364e:	f006 f88b 	bl	8009768 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003652:	4620      	mov	r0, r4
 8003654:	b015      	add	sp, #84	@ 0x54
 8003656:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800365a:	bf00      	nop
 800365c:	20011a4c 	.word	0x20011a4c
 8003660:	0801fbc0 	.word	0x0801fbc0
 8003664:	0801fd0e 	.word	0x0801fd0e
 8003668:	0801fc3d 	.word	0x0801fc3d
 800366c:	20011a50 	.word	0x20011a50
 8003670:	0801fcd0 	.word	0x0801fcd0
 8003674:	20011a58 	.word	0x20011a58
 8003678:	0801fd59 	.word	0x0801fd59
 800367c:	0801f484 	.word	0x0801f484

08003680 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8003680:	4770      	bx	lr
	...

08003684 <_Z23getFont_verdana_10_4bppv>:
{
 8003684:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8003686:	4d16      	ldr	r5, [pc, #88]	@ (80036e0 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8003688:	682c      	ldr	r4, [r5, #0]
 800368a:	f3bf 8f5b 	dmb	ish
 800368e:	f014 0401 	ands.w	r4, r4, #1
{
 8003692:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8003694:	d120      	bne.n	80036d8 <_Z23getFont_verdana_10_4bppv+0x54>
 8003696:	4628      	mov	r0, r5
 8003698:	f01a f9c8 	bl	801da2c <__cxa_guard_acquire>
 800369c:	b1e0      	cbz	r0, 80036d8 <_Z23getFont_verdana_10_4bppv+0x54>
 800369e:	233f      	movs	r3, #63	@ 0x3f
 80036a0:	9309      	str	r3, [sp, #36]	@ 0x24
 80036a2:	4b10      	ldr	r3, [pc, #64]	@ (80036e4 <_Z23getFont_verdana_10_4bppv+0x60>)
 80036a4:	9308      	str	r3, [sp, #32]
 80036a6:	4b10      	ldr	r3, [pc, #64]	@ (80036e8 <_Z23getFont_verdana_10_4bppv+0x64>)
 80036a8:	4910      	ldr	r1, [pc, #64]	@ (80036ec <_Z23getFont_verdana_10_4bppv+0x68>)
 80036aa:	4811      	ldr	r0, [pc, #68]	@ (80036f0 <_Z23getFont_verdana_10_4bppv+0x6c>)
 80036ac:	940a      	str	r4, [sp, #40]	@ 0x28
 80036ae:	2201      	movs	r2, #1
 80036b0:	e9cd 4306 	strd	r4, r3, [sp, #24]
 80036b4:	2304      	movs	r3, #4
 80036b6:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80036ba:	230a      	movs	r3, #10
 80036bc:	9300      	str	r3, [sp, #0]
 80036be:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 80036c2:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80036c6:	9405      	str	r4, [sp, #20]
 80036c8:	f7ff f954 	bl	8002974 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80036cc:	4809      	ldr	r0, [pc, #36]	@ (80036f4 <_Z23getFont_verdana_10_4bppv+0x70>)
 80036ce:	f01a f9f7 	bl	801dac0 <atexit>
 80036d2:	4628      	mov	r0, r5
 80036d4:	f01a f9b6 	bl	801da44 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 80036d8:	4805      	ldr	r0, [pc, #20]	@ (80036f0 <_Z23getFont_verdana_10_4bppv+0x6c>)
 80036da:	b00f      	add	sp, #60	@ 0x3c
 80036dc:	bd30      	pop	{r4, r5, pc}
 80036de:	bf00      	nop
 80036e0:	20000ae8 	.word	0x20000ae8
 80036e4:	08021538 	.word	0x08021538
 80036e8:	08021548 	.word	0x08021548
 80036ec:	080212f4 	.word	0x080212f4
 80036f0:	20000aec 	.word	0x20000aec
 80036f4:	08003681 	.word	0x08003681

080036f8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_15_4bpp();

touchgfx::GeneratedFont& getFont_verdana_15_4bpp()
{
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 18, 18, 15, 0, 0, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 80036f8:	4770      	bx	lr
	...

080036fc <_Z23getFont_verdana_15_4bppv>:
{
 80036fc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 18, 18, 15, 0, 0, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 80036fe:	4d17      	ldr	r5, [pc, #92]	@ (800375c <_Z23getFont_verdana_15_4bppv+0x60>)
 8003700:	682c      	ldr	r4, [r5, #0]
 8003702:	f3bf 8f5b 	dmb	ish
 8003706:	f014 0401 	ands.w	r4, r4, #1
{
 800370a:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 18, 18, 15, 0, 0, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 800370c:	d122      	bne.n	8003754 <_Z23getFont_verdana_15_4bppv+0x58>
 800370e:	4628      	mov	r0, r5
 8003710:	f01a f98c 	bl	801da2c <__cxa_guard_acquire>
 8003714:	b1f0      	cbz	r0, 8003754 <_Z23getFont_verdana_15_4bppv+0x58>
 8003716:	233f      	movs	r3, #63	@ 0x3f
 8003718:	9309      	str	r3, [sp, #36]	@ 0x24
 800371a:	4b11      	ldr	r3, [pc, #68]	@ (8003760 <_Z23getFont_verdana_15_4bppv+0x64>)
 800371c:	9308      	str	r3, [sp, #32]
 800371e:	4b11      	ldr	r3, [pc, #68]	@ (8003764 <_Z23getFont_verdana_15_4bppv+0x68>)
 8003720:	9307      	str	r3, [sp, #28]
 8003722:	2301      	movs	r3, #1
 8003724:	e9cd 4305 	strd	r4, r3, [sp, #20]
 8003728:	9304      	str	r3, [sp, #16]
 800372a:	2304      	movs	r3, #4
 800372c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8003730:	230f      	movs	r3, #15
 8003732:	9300      	str	r3, [sp, #0]
 8003734:	2312      	movs	r3, #18
 8003736:	490c      	ldr	r1, [pc, #48]	@ (8003768 <_Z23getFont_verdana_15_4bppv+0x6c>)
 8003738:	480c      	ldr	r0, [pc, #48]	@ (800376c <_Z23getFont_verdana_15_4bppv+0x70>)
 800373a:	940a      	str	r4, [sp, #40]	@ 0x28
 800373c:	461a      	mov	r2, r3
 800373e:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8003742:	9401      	str	r4, [sp, #4]
 8003744:	f7ff f916 	bl	8002974 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003748:	4809      	ldr	r0, [pc, #36]	@ (8003770 <_Z23getFont_verdana_15_4bppv+0x74>)
 800374a:	f01a f9b9 	bl	801dac0 <atexit>
 800374e:	4628      	mov	r0, r5
 8003750:	f01a f978 	bl	801da44 <__cxa_guard_release>
    return verdana_15_4bpp;
}
 8003754:	4805      	ldr	r0, [pc, #20]	@ (800376c <_Z23getFont_verdana_15_4bppv+0x70>)
 8003756:	b00f      	add	sp, #60	@ 0x3c
 8003758:	bd30      	pop	{r4, r5, pc}
 800375a:	bf00      	nop
 800375c:	20000b18 	.word	0x20000b18
 8003760:	0802153c 	.word	0x0802153c
 8003764:	0802154c 	.word	0x0802154c
 8003768:	08021304 	.word	0x08021304
 800376c:	20000b1c 	.word	0x20000b1c
 8003770:	080036f9 	.word	0x080036f9

08003774 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8003774:	4770      	bx	lr
	...

08003778 <_Z23getFont_verdana_40_4bppv>:
{
 8003778:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800377a:	4d16      	ldr	r5, [pc, #88]	@ (80037d4 <_Z23getFont_verdana_40_4bppv+0x5c>)
 800377c:	682c      	ldr	r4, [r5, #0]
 800377e:	f3bf 8f5b 	dmb	ish
 8003782:	f014 0401 	ands.w	r4, r4, #1
{
 8003786:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8003788:	d120      	bne.n	80037cc <_Z23getFont_verdana_40_4bppv+0x54>
 800378a:	4628      	mov	r0, r5
 800378c:	f01a f94e 	bl	801da2c <__cxa_guard_acquire>
 8003790:	b1e0      	cbz	r0, 80037cc <_Z23getFont_verdana_40_4bppv+0x54>
 8003792:	233f      	movs	r3, #63	@ 0x3f
 8003794:	9309      	str	r3, [sp, #36]	@ 0x24
 8003796:	4b10      	ldr	r3, [pc, #64]	@ (80037d8 <_Z23getFont_verdana_40_4bppv+0x60>)
 8003798:	9308      	str	r3, [sp, #32]
 800379a:	4b10      	ldr	r3, [pc, #64]	@ (80037dc <_Z23getFont_verdana_40_4bppv+0x64>)
 800379c:	4910      	ldr	r1, [pc, #64]	@ (80037e0 <_Z23getFont_verdana_40_4bppv+0x68>)
 800379e:	4811      	ldr	r0, [pc, #68]	@ (80037e4 <_Z23getFont_verdana_40_4bppv+0x6c>)
 80037a0:	940a      	str	r4, [sp, #40]	@ 0x28
 80037a2:	2201      	movs	r2, #1
 80037a4:	e9cd 4306 	strd	r4, r3, [sp, #24]
 80037a8:	2304      	movs	r3, #4
 80037aa:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80037ae:	2328      	movs	r3, #40	@ 0x28
 80037b0:	9300      	str	r3, [sp, #0]
 80037b2:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 80037b6:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80037ba:	9405      	str	r4, [sp, #20]
 80037bc:	f7ff f8da 	bl	8002974 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80037c0:	4809      	ldr	r0, [pc, #36]	@ (80037e8 <_Z23getFont_verdana_40_4bppv+0x70>)
 80037c2:	f01a f97d 	bl	801dac0 <atexit>
 80037c6:	4628      	mov	r0, r5
 80037c8:	f01a f93c 	bl	801da44 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 80037cc:	4805      	ldr	r0, [pc, #20]	@ (80037e4 <_Z23getFont_verdana_40_4bppv+0x6c>)
 80037ce:	b00f      	add	sp, #60	@ 0x3c
 80037d0:	bd30      	pop	{r4, r5, pc}
 80037d2:	bf00      	nop
 80037d4:	20000b48 	.word	0x20000b48
 80037d8:	08021540 	.word	0x08021540
 80037dc:	08021550 	.word	0x08021550
 80037e0:	08021400 	.word	0x08021400
 80037e4:	20000b4c 	.word	0x20000b4c
 80037e8:	08003775 	.word	0x08003775

080037ec <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdanab_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdanab_15_4bpp();

touchgfx::GeneratedFont& getFont_verdanab_15_4bpp()
{
    static touchgfx::GeneratedFont verdanab_15_4bpp(glyphs_verdanab_15_4bpp, 21, 15, 15, 0, 0, 4, 1, 0, 1, unicodes_verdanab_15_4bpp, kerning_verdanab_15_4bpp, 63, 0, 0, 0);
 80037ec:	4770      	bx	lr
	...

080037f0 <_Z24getFont_verdanab_15_4bppv>:
{
 80037f0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdanab_15_4bpp(glyphs_verdanab_15_4bpp, 21, 15, 15, 0, 0, 4, 1, 0, 1, unicodes_verdanab_15_4bpp, kerning_verdanab_15_4bpp, 63, 0, 0, 0);
 80037f2:	4d16      	ldr	r5, [pc, #88]	@ (800384c <_Z24getFont_verdanab_15_4bppv+0x5c>)
 80037f4:	682c      	ldr	r4, [r5, #0]
 80037f6:	f3bf 8f5b 	dmb	ish
 80037fa:	f014 0401 	ands.w	r4, r4, #1
{
 80037fe:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdanab_15_4bpp(glyphs_verdanab_15_4bpp, 21, 15, 15, 0, 0, 4, 1, 0, 1, unicodes_verdanab_15_4bpp, kerning_verdanab_15_4bpp, 63, 0, 0, 0);
 8003800:	d121      	bne.n	8003846 <_Z24getFont_verdanab_15_4bppv+0x56>
 8003802:	4628      	mov	r0, r5
 8003804:	f01a f912 	bl	801da2c <__cxa_guard_acquire>
 8003808:	b1e8      	cbz	r0, 8003846 <_Z24getFont_verdanab_15_4bppv+0x56>
 800380a:	233f      	movs	r3, #63	@ 0x3f
 800380c:	9309      	str	r3, [sp, #36]	@ 0x24
 800380e:	4b10      	ldr	r3, [pc, #64]	@ (8003850 <_Z24getFont_verdanab_15_4bppv+0x60>)
 8003810:	9308      	str	r3, [sp, #32]
 8003812:	4b10      	ldr	r3, [pc, #64]	@ (8003854 <_Z24getFont_verdanab_15_4bppv+0x64>)
 8003814:	9307      	str	r3, [sp, #28]
 8003816:	2301      	movs	r3, #1
 8003818:	e9cd 4305 	strd	r4, r3, [sp, #20]
 800381c:	9304      	str	r3, [sp, #16]
 800381e:	2304      	movs	r3, #4
 8003820:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8003824:	230f      	movs	r3, #15
 8003826:	490c      	ldr	r1, [pc, #48]	@ (8003858 <_Z24getFont_verdanab_15_4bppv+0x68>)
 8003828:	9300      	str	r3, [sp, #0]
 800382a:	2215      	movs	r2, #21
 800382c:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8003830:	480a      	ldr	r0, [pc, #40]	@ (800385c <_Z24getFont_verdanab_15_4bppv+0x6c>)
 8003832:	940a      	str	r4, [sp, #40]	@ 0x28
 8003834:	9401      	str	r4, [sp, #4]
 8003836:	f7ff f89d 	bl	8002974 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800383a:	4809      	ldr	r0, [pc, #36]	@ (8003860 <_Z24getFont_verdanab_15_4bppv+0x70>)
 800383c:	f01a f940 	bl	801dac0 <atexit>
 8003840:	4628      	mov	r0, r5
 8003842:	f01a f8ff 	bl	801da44 <__cxa_guard_release>
    return verdanab_15_4bpp;
}
 8003846:	4805      	ldr	r0, [pc, #20]	@ (800385c <_Z24getFont_verdanab_15_4bppv+0x6c>)
 8003848:	b00f      	add	sp, #60	@ 0x3c
 800384a:	bd30      	pop	{r4, r5, pc}
 800384c:	20000b78 	.word	0x20000b78
 8003850:	08021544 	.word	0x08021544
 8003854:	08021554 	.word	0x08021554
 8003858:	08021410 	.word	0x08021410
 800385c:	20000b7c 	.word	0x20000b7c
 8003860:	080037ed 	.word	0x080037ed

08003864 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 8003864:	2000      	movs	r0, #0
 8003866:	4770      	bx	lr

08003868 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 8003868:	2000      	movs	r0, #0
 800386a:	4770      	bx	lr

0800386c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800386c:	b40e      	push	{r1, r2, r3}
 800386e:	b503      	push	{r0, r1, lr}
 8003870:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8003872:	2100      	movs	r1, #0
{
 8003874:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8003878:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800387a:	f00a fb2b 	bl	800ded4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800387e:	b002      	add	sp, #8
 8003880:	f85d eb04 	ldr.w	lr, [sp], #4
 8003884:	b003      	add	sp, #12
 8003886:	4770      	bx	lr

08003888 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8003888:	b40c      	push	{r2, r3}
 800388a:	b507      	push	{r0, r1, r2, lr}
 800388c:	ab04      	add	r3, sp, #16
 800388e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8003892:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8003894:	f00a fb1e 	bl	800ded4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8003898:	b003      	add	sp, #12
 800389a:	f85d eb04 	ldr.w	lr, [sp], #4
 800389e:	b002      	add	sp, #8
 80038a0:	4770      	bx	lr
	...

080038a4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 80038a4:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 80038a6:	b510      	push	{r4, lr}
 80038a8:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 80038aa:	b373      	cbz	r3, 800390a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 80038ac:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 80038ae:	b92b      	cbnz	r3, 80038bc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80038b0:	4b18      	ldr	r3, [pc, #96]	@ (8003914 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80038b2:	4a19      	ldr	r2, [pc, #100]	@ (8003918 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 80038b4:	21c5      	movs	r1, #197	@ 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80038b6:	4819      	ldr	r0, [pc, #100]	@ (800391c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80038b8:	f01a f8e4 	bl	801da84 <__assert_func>
            return buffer[pos];
 80038bc:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80038be:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80038c2:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 80038c4:	b30b      	cbz	r3, 800390a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 80038c6:	f00b fdcc 	bl	800f462 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80038ca:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80038cc:	2b01      	cmp	r3, #1
 80038ce:	d803      	bhi.n	80038d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 80038d0:	4b13      	ldr	r3, [pc, #76]	@ (8003920 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80038d2:	4a14      	ldr	r2, [pc, #80]	@ (8003924 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 80038d4:	21cb      	movs	r1, #203	@ 0xcb
 80038d6:	e7ee      	b.n	80038b6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80038d8:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 80038da:	1c53      	adds	r3, r2, #1
 80038dc:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80038de:	2b09      	cmp	r3, #9
 80038e0:	4619      	mov	r1, r3
 80038e2:	bf88      	it	hi
 80038e4:	f1a3 010a 	subhi.w	r1, r3, #10
 80038e8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 80038ec:	f640 103f 	movw	r0, #2367	@ 0x93f
 80038f0:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 80038f2:	4281      	cmp	r1, r0
 80038f4:	d109      	bne.n	800390a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 80038f6:	2b0a      	cmp	r3, #10
 80038f8:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 80038fc:	bf28      	it	cs
 80038fe:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8003900:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8003904:	8c50      	ldrh	r0, [r2, #34]	@ 0x22
            buffer[index < size ? index : 0] = newChar;
 8003906:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 8003908:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800390a:	4620      	mov	r0, r4
}
 800390c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8003910:	f00b bcaa 	b.w	800f268 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8003914:	0801fed4 	.word	0x0801fed4
 8003918:	0801fedd 	.word	0x0801fedd
 800391c:	0801ff88 	.word	0x0801ff88
 8003920:	0801ffd2 	.word	0x0801ffd2
 8003924:	0801ffe0 	.word	0x0801ffe0

08003928 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8003928:	f00b bc65 	b.w	800f1f6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800392c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800392c:	b510      	push	{r4, lr}
 800392e:	b086      	sub	sp, #24
 8003930:	ac02      	add	r4, sp, #8
 8003932:	e884 0006 	stmia.w	r4, {r1, r2}
 8003936:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8003938:	ab0a      	add	r3, sp, #40	@ 0x28
 800393a:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800393c:	9301      	str	r3, [sp, #4]
 800393e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003940:	9300      	str	r3, [sp, #0]
 8003942:	4621      	mov	r1, r4
 8003944:	9b08      	ldr	r3, [sp, #32]
 8003946:	f008 fea5 	bl	800c694 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800394a:	b006      	add	sp, #24
 800394c:	bd10      	pop	{r4, pc}
	...

08003950 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8003950:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8003952:	bb18      	cbnz	r0, 800399c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8003954:	4b12      	ldr	r3, [pc, #72]	@ (80039a0 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8003956:	4813      	ldr	r0, [pc, #76]	@ (80039a4 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8003958:	681c      	ldr	r4, [r3, #0]
 800395a:	4913      	ldr	r1, [pc, #76]	@ (80039a8 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 800395c:	b1b4      	cbz	r4, 800398c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800395e:	6822      	ldr	r2, [r4, #0]
 8003960:	4422      	add	r2, r4
 8003962:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8003964:	6862      	ldr	r2, [r4, #4]
 8003966:	4422      	add	r2, r4
 8003968:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800396a:	68a2      	ldr	r2, [r4, #8]
 800396c:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800396e:	4b0f      	ldr	r3, [pc, #60]	@ (80039ac <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8003970:	2200      	movs	r2, #0
 8003972:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8003974:	f000 f838 	bl	80039e8 <_ZN17TypedTextDatabase8getFontsEv>
 8003978:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800397a:	f000 f833 	bl	80039e4 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800397e:	4b0c      	ldr	r3, [pc, #48]	@ (80039b0 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8003980:	601c      	str	r4, [r3, #0]
        fonts = f;
 8003982:	4b0c      	ldr	r3, [pc, #48]	@ (80039b4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8003984:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8003986:	4b0c      	ldr	r3, [pc, #48]	@ (80039b8 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8003988:	8018      	strh	r0, [r3, #0]
    }
}
 800398a:	e007      	b.n	800399c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 800398c:	4b0b      	ldr	r3, [pc, #44]	@ (80039bc <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800398e:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8003990:	4b0b      	ldr	r3, [pc, #44]	@ (80039c0 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8003992:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8003994:	4b0b      	ldr	r3, [pc, #44]	@ (80039c4 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8003996:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8003998:	2c00      	cmp	r4, #0
 800399a:	d1e8      	bne.n	800396e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 800399c:	bd38      	pop	{r3, r4, r5, pc}
 800399e:	bf00      	nop
 80039a0:	20000bb4 	.word	0x20000bb4
 80039a4:	20000bac 	.word	0x20000bac
 80039a8:	20000ba8 	.word	0x20000ba8
 80039ac:	20000bb0 	.word	0x20000bb0
 80039b0:	20011a4c 	.word	0x20011a4c
 80039b4:	20011a54 	.word	0x20011a54
 80039b8:	20011a50 	.word	0x20011a50
 80039bc:	08021574 	.word	0x08021574
 80039c0:	08021558 	.word	0x08021558
 80039c4:	080215e0 	.word	0x080215e0

080039c8 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 80039c8:	4b04      	ldr	r3, [pc, #16]	@ (80039dc <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 80039ca:	681b      	ldr	r3, [r3, #0]
 80039cc:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80039d0:	4b03      	ldr	r3, [pc, #12]	@ (80039e0 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 80039d2:	681b      	ldr	r3, [r3, #0]
}
 80039d4:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80039d8:	4770      	bx	lr
 80039da:	bf00      	nop
 80039dc:	20000ba8 	.word	0x20000ba8
 80039e0:	20000bac 	.word	0x20000bac

080039e4 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 80039e4:	2007      	movs	r0, #7
 80039e6:	4770      	bx	lr

080039e8 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 80039e8:	4800      	ldr	r0, [pc, #0]	@ (80039ec <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 80039ea:	4770      	bx	lr
 80039ec:	20000bb8 	.word	0x20000bb8

080039f0 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdanab_15_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 80039f0:	b510      	push	{r4, lr}
    &(getFont_verdana_15_4bpp()),
 80039f2:	f7ff fe83 	bl	80036fc <_Z23getFont_verdana_15_4bppv>
};
 80039f6:	4c06      	ldr	r4, [pc, #24]	@ (8003a10 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 80039f8:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80039fa:	f7ff febd 	bl	8003778 <_Z23getFont_verdana_40_4bppv>
};
 80039fe:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8003a00:	f7ff fe40 	bl	8003684 <_Z23getFont_verdana_10_4bppv>
};
 8003a04:	60a0      	str	r0, [r4, #8]
    &(getFont_verdanab_15_4bpp())
 8003a06:	f7ff fef3 	bl	80037f0 <_Z24getFont_verdanab_15_4bppv>
};
 8003a0a:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 8003a0c:	bd10      	pop	{r4, pc}
 8003a0e:	bf00      	nop
 8003a10:	20000bb8 	.word	0x20000bb8

08003a14 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8003a14:	4770      	bx	lr

08003a16 <_ZN19FrontendApplicationD0Ev>:
 8003a16:	b510      	push	{r4, lr}
 8003a18:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8003a1c:	4604      	mov	r4, r0
 8003a1e:	f01a f803 	bl	801da28 <_ZdlPvj>
 8003a22:	4620      	mov	r0, r4
 8003a24:	bd10      	pop	{r4, pc}

08003a26 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8003a26:	b510      	push	{r4, lr}
 8003a28:	4604      	mov	r4, r0
    {
        model.tick();
 8003a2a:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 8003a2e:	f000 f813 	bl	8003a58 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8003a32:	4620      	mov	r0, r4
    }
 8003a34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8003a38:	f009 bb52 	b.w	800d0e0 <_ZN8touchgfx11Application15handleTickEventEv>

08003a3c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendHeap.hpp>
#include <touchgfx/transitions/NoTransition.hpp>
#include <gui/screen3_screen/Screen3View.hpp>
#include <gui/screen3_screen/Screen3Presenter.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8003a3c:	b510      	push	{r4, lr}
 8003a3e:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8003a40:	f7fe fef6 	bl	8002830 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8003a44:	4b01      	ldr	r3, [pc, #4]	@ (8003a4c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8003a46:	6023      	str	r3, [r4, #0]
{

}
 8003a48:	4620      	mov	r0, r4
 8003a4a:	bd10      	pop	{r4, pc}
 8003a4c:	080200bc 	.word	0x080200bc

08003a50 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0), score(0)
 8003a50:	2200      	movs	r2, #0
 8003a52:	e9c0 2200 	strd	r2, r2, [r0]
{

}
 8003a56:	4770      	bx	lr

08003a58 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8003a58:	4770      	bx	lr

08003a5a <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {}
 8003a5a:	4770      	bx	lr

08003a5c <_ZThn4_N16Screen1PresenterD1Ev>:
 8003a5c:	3804      	subs	r0, #4
 8003a5e:	4770      	bx	lr

08003a60 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8003a60:	4770      	bx	lr

08003a62 <_ZN16Screen1PresenterD0Ev>:
 8003a62:	b510      	push	{r4, lr}
 8003a64:	2110      	movs	r1, #16
 8003a66:	4604      	mov	r4, r0
 8003a68:	f019 ffde 	bl	801da28 <_ZdlPvj>
 8003a6c:	4620      	mov	r0, r4
 8003a6e:	bd10      	pop	{r4, pc}

08003a70 <_ZThn4_N16Screen1PresenterD0Ev>:
 8003a70:	f1a0 0004 	sub.w	r0, r0, #4
 8003a74:	e7f5      	b.n	8003a62 <_ZN16Screen1PresenterD0Ev>
	...

08003a78 <_ZN16Screen1PresenterC1ER11Screen1View>:
    ModelListener() : model(0) {}
 8003a78:	2200      	movs	r2, #0
 8003a7a:	6082      	str	r2, [r0, #8]
    : view(v)
 8003a7c:	4a02      	ldr	r2, [pc, #8]	@ (8003a88 <_ZN16Screen1PresenterC1ER11Screen1View+0x10>)
 8003a7e:	6002      	str	r2, [r0, #0]
 8003a80:	3218      	adds	r2, #24
 8003a82:	6042      	str	r2, [r0, #4]
 8003a84:	60c1      	str	r1, [r0, #12]
}
 8003a86:	4770      	bx	lr
 8003a88:	08020110 	.word	0x08020110

08003a8c <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8003a8c:	4770      	bx	lr
	...

08003a90 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8003a90:	b510      	push	{r4, lr}
 8003a92:	4b03      	ldr	r3, [pc, #12]	@ (8003aa0 <_ZN11Screen1ViewD1Ev+0x10>)
 8003a94:	6003      	str	r3, [r0, #0]
 8003a96:	4604      	mov	r4, r0
 8003a98:	f7fe ffa1 	bl	80029de <_ZN15Screen1ViewBaseD1Ev>
 8003a9c:	4620      	mov	r0, r4
 8003a9e:	bd10      	pop	{r4, pc}
 8003aa0:	08020138 	.word	0x08020138

08003aa4 <_ZN11Screen1ViewD0Ev>:
 8003aa4:	b510      	push	{r4, lr}
 8003aa6:	4604      	mov	r4, r0
 8003aa8:	f7ff fff2 	bl	8003a90 <_ZN11Screen1ViewD1Ev>
 8003aac:	4620      	mov	r0, r4
 8003aae:	f44f 71b4 	mov.w	r1, #360	@ 0x168
 8003ab2:	f019 ffb9 	bl	801da28 <_ZdlPvj>
 8003ab6:	4620      	mov	r0, r4
 8003ab8:	bd10      	pop	{r4, pc}
	...

08003abc <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8003abc:	b510      	push	{r4, lr}
 8003abe:	4604      	mov	r4, r0
 8003ac0:	f7ff f830 	bl	8002b24 <_ZN15Screen1ViewBaseC1Ev>
 8003ac4:	4b01      	ldr	r3, [pc, #4]	@ (8003acc <_ZN11Screen1ViewC1Ev+0x10>)
 8003ac6:	6023      	str	r3, [r4, #0]
}
 8003ac8:	4620      	mov	r0, r4
 8003aca:	bd10      	pop	{r4, pc}
 8003acc:	08020138 	.word	0x08020138

08003ad0 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8003ad0:	f7fe bf86 	b.w	80029e0 <_ZN15Screen1ViewBase11setupScreenEv>

08003ad4 <_ZN16Screen2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen2Presenter() {}
 8003ad4:	4770      	bx	lr

08003ad6 <_ZThn4_N16Screen2PresenterD1Ev>:
 8003ad6:	3804      	subs	r0, #4
 8003ad8:	4770      	bx	lr

08003ada <_ZN16Screen2Presenter10deactivateEv>:
}

void Screen2Presenter::activate()
{

}
 8003ada:	4770      	bx	lr

08003adc <_ZN16Screen2PresenterD0Ev>:
 8003adc:	b510      	push	{r4, lr}
 8003ade:	2110      	movs	r1, #16
 8003ae0:	4604      	mov	r4, r0
 8003ae2:	f019 ffa1 	bl	801da28 <_ZdlPvj>
 8003ae6:	4620      	mov	r0, r4
 8003ae8:	bd10      	pop	{r4, pc}

08003aea <_ZThn4_N16Screen2PresenterD0Ev>:
 8003aea:	f1a0 0004 	sub.w	r0, r0, #4
 8003aee:	e7f5      	b.n	8003adc <_ZN16Screen2PresenterD0Ev>

08003af0 <_ZN16Screen2PresenterC1ER11Screen2View>:
 8003af0:	2200      	movs	r2, #0
 8003af2:	6082      	str	r2, [r0, #8]
    : view(v)
 8003af4:	4a02      	ldr	r2, [pc, #8]	@ (8003b00 <_ZN16Screen2PresenterC1ER11Screen2View+0x10>)
 8003af6:	6002      	str	r2, [r0, #0]
 8003af8:	3218      	adds	r2, #24
 8003afa:	6042      	str	r2, [r0, #4]
 8003afc:	60c1      	str	r1, [r0, #12]
}
 8003afe:	4770      	bx	lr
 8003b00:	0802016c 	.word	0x0802016c

08003b04 <_ZN11Screen2View14checkCollisionEv>:
	}
}

bool Screen2View::checkCollision(){
	int16_t dinoT, dinoR, dinoB, dinoL;
	if (dino.isVisible()){
 8003b04:	f890 3161 	ldrb.w	r3, [r0, #353]	@ 0x161
bool Screen2View::checkCollision(){
 8003b08:	b5f0      	push	{r4, r5, r6, r7, lr}
	if (dino.isVisible()){
 8003b0a:	2b00      	cmp	r3, #0
 8003b0c:	d037      	beq.n	8003b7e <_ZN11Screen2View14checkCollisionEv+0x7a>
		int deviation = BASE_HEIGHT - dino.getY(); // amount of deviation of the dino from the ground
		if (deviation > 8) deviation = 8; // max deviation is 8, which reaches dino's legs
		dinoL = dino.getX() + 10;
 8003b0e:	f8b0 3140 	ldrh.w	r3, [r0, #320]	@ 0x140
		dinoT = dino.getY() + 10;
		// simulate the skew of the dino's lower body using the deviation value
		dinoR = dino.getX() + dino.getWidth() - 10 - deviation;
 8003b12:	f8b0 4144 	ldrh.w	r4, [r0, #324]	@ 0x144
        return rect.y;
 8003b16:	f9b0 6142 	ldrsh.w	r6, [r0, #322]	@ 0x142
		dinoT = dino.getY() + 10;
 8003b1a:	f8b0 2142 	ldrh.w	r2, [r0, #322]	@ 0x142
		dinoL = dino.getX() + 10;
 8003b1e:	f103 050a 	add.w	r5, r3, #10
		dinoR = dino.getX() + dino.getWidth() - 10 - deviation;
 8003b22:	4423      	add	r3, r4
		int deviation = BASE_HEIGHT - dino.getY(); // amount of deviation of the dino from the ground
 8003b24:	f8d0 4294 	ldr.w	r4, [r0, #660]	@ 0x294
 8003b28:	1ba4      	subs	r4, r4, r6
		dinoR = dino.getX() + dino.getWidth() - 10 - deviation;
 8003b2a:	3b0a      	subs	r3, #10
 8003b2c:	2c08      	cmp	r4, #8
 8003b2e:	bfd8      	it	le
 8003b30:	1b1b      	suble	r3, r3, r4
		dinoB = dino.getY() + dino.getHeight() - 10;
 8003b32:	f8b0 4146 	ldrh.w	r4, [r0, #326]	@ 0x146
		dinoT = dino.getY() + 10;
 8003b36:	f102 010a 	add.w	r1, r2, #10
		dinoR = dino.getX() + dino.getWidth() - 10 - deviation;
 8003b3a:	bfc8      	it	gt
 8003b3c:	3b08      	subgt	r3, #8
		dinoB = dino.getY() + dino.getHeight() - 10;
 8003b3e:	4422      	add	r2, r4
		dinoL = dino.getX() + 10;
 8003b40:	b22d      	sxth	r5, r5
		dinoT = dino.getY() + 10;
 8003b42:	b209      	sxth	r1, r1
		dinoR = dino.getX() + dino.getWidth() - 10 - deviation;
 8003b44:	b21b      	sxth	r3, r3
		dinoB = dino.getY() + dino.getHeight() - 10;
 8003b46:	3a0a      	subs	r2, #10
		dinoR = dinoc.getX() + dinoc.getWidth();
		dinoB = dinoc.getY() + dinoc.getHeight();
	}

	int16_t obsT, obsR, obsB, obsL;
	if (currentEnemy == 0){
 8003b48:	f8d0 42ac 	ldr.w	r4, [r0, #684]	@ 0x2ac
		dinoB = dinoc.getY() + dinoc.getHeight();
 8003b4c:	b212      	sxth	r2, r2
	if (currentEnemy == 0){
 8003b4e:	bb2c      	cbnz	r4, 8003b9c <_ZN11Screen2View14checkCollisionEv+0x98>
        return rect.x;
 8003b50:	f9b0 709c 	ldrsh.w	r7, [r0, #156]	@ 0x9c
		obsL = cacti1.getX();
		obsT = cacti1.getY();
		obsR = cacti1.getX() + cacti1.getWidth();
 8003b54:	f8b0 40a0 	ldrh.w	r4, [r0, #160]	@ 0xa0
        return rect.y;
 8003b58:	f9b0 609e 	ldrsh.w	r6, [r0, #158]	@ 0x9e
		obsB = cacti1.getY() + cacti1.getHeight();
 8003b5c:	f8b0 00a2 	ldrh.w	r0, [r0, #162]	@ 0xa2
		obsR = cacti1.getX() + cacti1.getWidth();
 8003b60:	443c      	add	r4, r7
 8003b62:	b224      	sxth	r4, r4
	} else {
		obsL = bird.getX();
		obsT = bird.getY();
		obsR = bird.getX() + bird.getWidth();
		obsB = bird.getY() + bird.getHeight();
 8003b64:	4430      	add	r0, r6
	}

	if (dinoR >= obsL && dinoL <= obsR && dinoB >= obsT && dinoT <= obsB){
 8003b66:	42bb      	cmp	r3, r7
		obsB = bird.getY() + bird.getHeight();
 8003b68:	b200      	sxth	r0, r0
	if (dinoR >= obsL && dinoL <= obsR && dinoB >= obsT && dinoT <= obsB){
 8003b6a:	db22      	blt.n	8003bb2 <_ZN11Screen2View14checkCollisionEv+0xae>
 8003b6c:	42a5      	cmp	r5, r4
 8003b6e:	dc20      	bgt.n	8003bb2 <_ZN11Screen2View14checkCollisionEv+0xae>
 8003b70:	42b2      	cmp	r2, r6
 8003b72:	db1e      	blt.n	8003bb2 <_ZN11Screen2View14checkCollisionEv+0xae>
 8003b74:	4281      	cmp	r1, r0
 8003b76:	bfcc      	ite	gt
 8003b78:	2000      	movgt	r0, #0
 8003b7a:	2001      	movle	r0, #1
		return true;
	}

	return false;
}
 8003b7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
		dinoT = dinoc.getY() + 10;
 8003b7e:	f8b0 2106 	ldrh.w	r2, [r0, #262]	@ 0x106
        return rect.x;
 8003b82:	f9b0 5104 	ldrsh.w	r5, [r0, #260]	@ 0x104
		dinoR = dinoc.getX() + dinoc.getWidth();
 8003b86:	f8b0 3108 	ldrh.w	r3, [r0, #264]	@ 0x108
		dinoB = dinoc.getY() + dinoc.getHeight();
 8003b8a:	f8b0 410a 	ldrh.w	r4, [r0, #266]	@ 0x10a
		dinoT = dinoc.getY() + 10;
 8003b8e:	f102 010a 	add.w	r1, r2, #10
		dinoR = dinoc.getX() + dinoc.getWidth();
 8003b92:	442b      	add	r3, r5
		dinoT = dinoc.getY() + 10;
 8003b94:	b209      	sxth	r1, r1
		dinoR = dinoc.getX() + dinoc.getWidth();
 8003b96:	b21b      	sxth	r3, r3
		dinoB = dinoc.getY() + dinoc.getHeight();
 8003b98:	4422      	add	r2, r4
 8003b9a:	e7d5      	b.n	8003b48 <_ZN11Screen2View14checkCollisionEv+0x44>
 8003b9c:	f9b0 717c 	ldrsh.w	r7, [r0, #380]	@ 0x17c
		obsR = bird.getX() + bird.getWidth();
 8003ba0:	f8b0 4180 	ldrh.w	r4, [r0, #384]	@ 0x180
        return rect.y;
 8003ba4:	f9b0 617e 	ldrsh.w	r6, [r0, #382]	@ 0x17e
		obsB = bird.getY() + bird.getHeight();
 8003ba8:	f8b0 0182 	ldrh.w	r0, [r0, #386]	@ 0x182
		obsR = bird.getX() + bird.getWidth();
 8003bac:	443c      	add	r4, r7
 8003bae:	b224      	sxth	r4, r4
        return rect.height;
 8003bb0:	e7d8      	b.n	8003b64 <_ZN11Screen2View14checkCollisionEv+0x60>
	return false;
 8003bb2:	2000      	movs	r0, #0
 8003bb4:	e7e2      	b.n	8003b7c <_ZN11Screen2View14checkCollisionEv+0x78>

08003bb6 <_ZN11Screen2View14tearDownScreenEv>:


void Screen2View::tearDownScreen()
{
    Screen2ViewBase::tearDownScreen();
}
 8003bb6:	4770      	bx	lr

08003bb8 <_ZL9GetSectorm>:

static uint32_t GetSector(uint32_t Address)
{
  uint32_t sector = 0;

  if((Address < 0x08003FFF) && (Address >= 0x08000000))
 8003bb8:	f100 4378 	add.w	r3, r0, #4160749568	@ 0xf8000000
 8003bbc:	f643 72fe 	movw	r2, #16382	@ 0x3ffe
 8003bc0:	4293      	cmp	r3, r2
{
 8003bc2:	b510      	push	{r4, lr}
  if((Address < 0x08003FFF) && (Address >= 0x08000000))
 8003bc4:	d968      	bls.n	8003c98 <_ZL9GetSectorm+0xe0>
  {
    sector = FLASH_SECTOR_0;
  }
  else if((Address < 0x08007FFF) && (Address >= 0x08004000))
 8003bc6:	f5a3 4180 	sub.w	r1, r3, #16384	@ 0x4000
 8003bca:	4291      	cmp	r1, r2
 8003bcc:	d966      	bls.n	8003c9c <_ZL9GetSectorm+0xe4>
  {
    sector = FLASH_SECTOR_1;
  }
  else if((Address < 0x0800BFFF) && (Address >= 0x08008000))
 8003bce:	f5a3 4100 	sub.w	r1, r3, #32768	@ 0x8000
 8003bd2:	4291      	cmp	r1, r2
 8003bd4:	d964      	bls.n	8003ca0 <_ZL9GetSectorm+0xe8>
  {
    sector = FLASH_SECTOR_2;
  }
  else if((Address < 0x0800FFFF) && (Address >= 0x0800C000))
 8003bd6:	f5a3 4340 	sub.w	r3, r3, #49152	@ 0xc000
 8003bda:	4293      	cmp	r3, r2
 8003bdc:	d962      	bls.n	8003ca4 <_ZL9GetSectorm+0xec>
  {
    sector = FLASH_SECTOR_3;
  }
  else if((Address < 0x0801FFFF) && (Address >= 0x08010000))
 8003bde:	f100 4377 	add.w	r3, r0, #4143972352	@ 0xf7000000
 8003be2:	f503 017f 	add.w	r1, r3, #16711680	@ 0xff0000
 8003be6:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8003bea:	4291      	cmp	r1, r2
 8003bec:	d95c      	bls.n	8003ca8 <_ZL9GetSectorm+0xf0>
  {
    sector = FLASH_SECTOR_4;
  }
  else if((Address < 0x0803FFFF) && (Address >= 0x08020000))
 8003bee:	f503 017e 	add.w	r1, r3, #16646144	@ 0xfe0000
 8003bf2:	f502 3280 	add.w	r2, r2, #65536	@ 0x10000
 8003bf6:	4291      	cmp	r1, r2
 8003bf8:	d958      	bls.n	8003cac <_ZL9GetSectorm+0xf4>
  {
    sector = FLASH_SECTOR_5;
  }
  else if((Address < 0x0805FFFF) && (Address >= 0x08040000))
 8003bfa:	f503 017c 	add.w	r1, r3, #16515072	@ 0xfc0000
 8003bfe:	4291      	cmp	r1, r2
 8003c00:	d956      	bls.n	8003cb0 <_ZL9GetSectorm+0xf8>
  {
    sector = FLASH_SECTOR_6;
  }
  else if((Address < 0x0807FFFF) && (Address >= 0x08060000))
 8003c02:	f503 017a 	add.w	r1, r3, #16384000	@ 0xfa0000
 8003c06:	4291      	cmp	r1, r2
 8003c08:	d954      	bls.n	8003cb4 <_ZL9GetSectorm+0xfc>
  {
    sector = FLASH_SECTOR_7;
  }
  else if((Address < 0x0809FFFF) && (Address >= 0x08080000))
 8003c0a:	f503 0178 	add.w	r1, r3, #16252928	@ 0xf80000
 8003c0e:	4291      	cmp	r1, r2
 8003c10:	d952      	bls.n	8003cb8 <_ZL9GetSectorm+0x100>
  {
    sector = FLASH_SECTOR_8;
  }
  else if((Address < 0x080BFFFF) && (Address >= 0x080A0000))
 8003c12:	f503 0176 	add.w	r1, r3, #16121856	@ 0xf60000
 8003c16:	4291      	cmp	r1, r2
 8003c18:	d950      	bls.n	8003cbc <_ZL9GetSectorm+0x104>
  {
    sector = FLASH_SECTOR_9;
  }
  else if((Address < 0x080DFFFF) && (Address >= 0x080C0000))
 8003c1a:	f503 0174 	add.w	r1, r3, #15990784	@ 0xf40000
 8003c1e:	4291      	cmp	r1, r2
 8003c20:	d94e      	bls.n	8003cc0 <_ZL9GetSectorm+0x108>
  {
    sector = FLASH_SECTOR_10;
  }
  else if((Address < 0x080FFFFF) && (Address >= 0x080E0000))
 8003c22:	f503 0172 	add.w	r1, r3, #15859712	@ 0xf20000
 8003c26:	4291      	cmp	r1, r2
 8003c28:	d94c      	bls.n	8003cc4 <_ZL9GetSectorm+0x10c>
  {
    sector = FLASH_SECTOR_11;
  }
  else if((Address < 0x08103FFF) && (Address >= 0x08100000))
 8003c2a:	f1a0 6001 	sub.w	r0, r0, #135266304	@ 0x8100000
 8003c2e:	f643 71fe 	movw	r1, #16382	@ 0x3ffe
 8003c32:	4288      	cmp	r0, r1
 8003c34:	d948      	bls.n	8003cc8 <_ZL9GetSectorm+0x110>
  {
    sector = FLASH_SECTOR_12;
  }
  else if((Address < 0x08107FFF) && (Address >= 0x08104000))
 8003c36:	f5a0 4480 	sub.w	r4, r0, #16384	@ 0x4000
 8003c3a:	428c      	cmp	r4, r1
 8003c3c:	d946      	bls.n	8003ccc <_ZL9GetSectorm+0x114>
  {
    sector = FLASH_SECTOR_13;
  }
  else if((Address < 0x0810BFFF) && (Address >= 0x08108000))
 8003c3e:	f5a0 4400 	sub.w	r4, r0, #32768	@ 0x8000
 8003c42:	428c      	cmp	r4, r1
 8003c44:	d944      	bls.n	8003cd0 <_ZL9GetSectorm+0x118>
  {
    sector = FLASH_SECTOR_14;
  }
  else if((Address < 0x0810FFFF) && (Address >= 0x0810C000))
 8003c46:	f5a0 4040 	sub.w	r0, r0, #49152	@ 0xc000
 8003c4a:	4288      	cmp	r0, r1
 8003c4c:	d942      	bls.n	8003cd4 <_ZL9GetSectorm+0x11c>
  {
    sector = FLASH_SECTOR_15;
  }
  else if((Address < 0x0811FFFF) && (Address >= 0x08110000))
 8003c4e:	f503 006f 	add.w	r0, r3, #15663104	@ 0xef0000
 8003c52:	f64f 71fe 	movw	r1, #65534	@ 0xfffe
 8003c56:	4288      	cmp	r0, r1
 8003c58:	d93e      	bls.n	8003cd8 <_ZL9GetSectorm+0x120>
  {
    sector = FLASH_SECTOR_16;
  }
  else if((Address < 0x0813FFFF) && (Address >= 0x08120000))
 8003c5a:	f503 016e 	add.w	r1, r3, #15597568	@ 0xee0000
 8003c5e:	4291      	cmp	r1, r2
 8003c60:	d93c      	bls.n	8003cdc <_ZL9GetSectorm+0x124>
  {
    sector = FLASH_SECTOR_17;
  }
  else if((Address < 0x0815FFFF) && (Address >= 0x08140000))
 8003c62:	f503 016c 	add.w	r1, r3, #15466496	@ 0xec0000
 8003c66:	4291      	cmp	r1, r2
 8003c68:	d93a      	bls.n	8003ce0 <_ZL9GetSectorm+0x128>
  {
    sector = FLASH_SECTOR_18;
  }
  else if((Address < 0x0817FFFF) && (Address >= 0x08160000))
 8003c6a:	f503 016a 	add.w	r1, r3, #15335424	@ 0xea0000
 8003c6e:	4291      	cmp	r1, r2
 8003c70:	d938      	bls.n	8003ce4 <_ZL9GetSectorm+0x12c>
  {
    sector = FLASH_SECTOR_19;
  }
  else if((Address < 0x0819FFFF) && (Address >= 0x08180000))
 8003c72:	f503 0168 	add.w	r1, r3, #15204352	@ 0xe80000
 8003c76:	4291      	cmp	r1, r2
 8003c78:	d936      	bls.n	8003ce8 <_ZL9GetSectorm+0x130>
  {
    sector = FLASH_SECTOR_20;
  }
  else if((Address < 0x081BFFFF) && (Address >= 0x081A0000))
 8003c7a:	f503 0166 	add.w	r1, r3, #15073280	@ 0xe60000
 8003c7e:	4291      	cmp	r1, r2
 8003c80:	d934      	bls.n	8003cec <_ZL9GetSectorm+0x134>
  {
    sector = FLASH_SECTOR_21;
  }
  else if((Address < 0x081DFFFF) && (Address >= 0x081C0000))
 8003c82:	f503 0164 	add.w	r1, r3, #14942208	@ 0xe40000
 8003c86:	4291      	cmp	r1, r2
 8003c88:	d932      	bls.n	8003cf0 <_ZL9GetSectorm+0x138>
  {
    sector = FLASH_SECTOR_22;
  }
  else if((Address < 0x081FFFFF) && (Address >= 0x081E0000))
 8003c8a:	f503 0062 	add.w	r0, r3, #14811136	@ 0xe20000
  {
    sector = FLASH_SECTOR_23;
 8003c8e:	4290      	cmp	r0, r2
 8003c90:	bf94      	ite	ls
 8003c92:	2017      	movls	r0, #23
 8003c94:	2000      	movhi	r0, #0
  }
  return sector;
}
 8003c96:	bd10      	pop	{r4, pc}
    sector = FLASH_SECTOR_0;
 8003c98:	2000      	movs	r0, #0
 8003c9a:	e7fc      	b.n	8003c96 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_1;
 8003c9c:	2001      	movs	r0, #1
 8003c9e:	e7fa      	b.n	8003c96 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_2;
 8003ca0:	2002      	movs	r0, #2
 8003ca2:	e7f8      	b.n	8003c96 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_3;
 8003ca4:	2003      	movs	r0, #3
 8003ca6:	e7f6      	b.n	8003c96 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_4;
 8003ca8:	2004      	movs	r0, #4
 8003caa:	e7f4      	b.n	8003c96 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_5;
 8003cac:	2005      	movs	r0, #5
 8003cae:	e7f2      	b.n	8003c96 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_6;
 8003cb0:	2006      	movs	r0, #6
 8003cb2:	e7f0      	b.n	8003c96 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_7;
 8003cb4:	2007      	movs	r0, #7
 8003cb6:	e7ee      	b.n	8003c96 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_8;
 8003cb8:	2008      	movs	r0, #8
 8003cba:	e7ec      	b.n	8003c96 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_9;
 8003cbc:	2009      	movs	r0, #9
 8003cbe:	e7ea      	b.n	8003c96 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_10;
 8003cc0:	200a      	movs	r0, #10
 8003cc2:	e7e8      	b.n	8003c96 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_11;
 8003cc4:	200b      	movs	r0, #11
 8003cc6:	e7e6      	b.n	8003c96 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_12;
 8003cc8:	200c      	movs	r0, #12
 8003cca:	e7e4      	b.n	8003c96 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_13;
 8003ccc:	200d      	movs	r0, #13
 8003cce:	e7e2      	b.n	8003c96 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_14;
 8003cd0:	200e      	movs	r0, #14
 8003cd2:	e7e0      	b.n	8003c96 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_15;
 8003cd4:	200f      	movs	r0, #15
 8003cd6:	e7de      	b.n	8003c96 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_16;
 8003cd8:	2010      	movs	r0, #16
 8003cda:	e7dc      	b.n	8003c96 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_17;
 8003cdc:	2011      	movs	r0, #17
 8003cde:	e7da      	b.n	8003c96 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_18;
 8003ce0:	2012      	movs	r0, #18
 8003ce2:	e7d8      	b.n	8003c96 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_19;
 8003ce4:	2013      	movs	r0, #19
 8003ce6:	e7d6      	b.n	8003c96 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_20;
 8003ce8:	2014      	movs	r0, #20
 8003cea:	e7d4      	b.n	8003c96 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_21;
 8003cec:	2015      	movs	r0, #21
 8003cee:	e7d2      	b.n	8003c96 <_ZL9GetSectorm+0xde>
    sector = FLASH_SECTOR_22;
 8003cf0:	2016      	movs	r0, #22
 8003cf2:	e7d0      	b.n	8003c96 <_ZL9GetSectorm+0xde>

08003cf4 <_ZN11Screen2View19handleJoystickEventEm>:
void Screen2View::handleJoystickEvent(uint32_t count){
 8003cf4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
        osMessageQueueGet(joyStickQueueHandle, &Joystick, NULL, osWaitForever);
 8003cf6:	4f16      	ldr	r7, [pc, #88]	@ (8003d50 <_ZN11Screen2View19handleJoystickEventEm+0x5c>)
void Screen2View::handleJoystickEvent(uint32_t count){
 8003cf8:	4604      	mov	r4, r0
 8003cfa:	460d      	mov	r5, r1
    for(int i = 0; i < count; i++){
 8003cfc:	2600      	movs	r6, #0
 8003cfe:	42ae      	cmp	r6, r5
 8003d00:	d101      	bne.n	8003d06 <_ZN11Screen2View19handleJoystickEventEm+0x12>
}
 8003d02:	b003      	add	sp, #12
 8003d04:	bdf0      	pop	{r4, r5, r6, r7, pc}
        osMessageQueueGet(joyStickQueueHandle, &Joystick, NULL, osWaitForever);
 8003d06:	f04f 33ff 	mov.w	r3, #4294967295
 8003d0a:	6838      	ldr	r0, [r7, #0]
 8003d0c:	2200      	movs	r2, #0
 8003d0e:	a901      	add	r1, sp, #4
 8003d10:	f003 fd7b 	bl	800780a <osMessageQueueGet>
        JoystickY = Joystick & 0xFFFF;
 8003d14:	f8bd 3004 	ldrh.w	r3, [sp, #4]
        if ((JoystickY < 64) && (!isJumping)) {
 8003d18:	2b3f      	cmp	r3, #63	@ 0x3f
 8003d1a:	d808      	bhi.n	8003d2e <_ZN11Screen2View19handleJoystickEventEm+0x3a>
 8003d1c:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
 8003d20:	b98b      	cbnz	r3, 8003d46 <_ZN11Screen2View19handleJoystickEventEm+0x52>
        visible = vis;
 8003d22:	f884 3161 	strb.w	r3, [r4, #353]	@ 0x161
 8003d26:	2301      	movs	r3, #1
 8003d28:	f884 3125 	strb.w	r3, [r4, #293]	@ 0x125
    }
 8003d2c:	e009      	b.n	8003d42 <_ZN11Screen2View19handleJoystickEventEm+0x4e>
        } else if ((JoystickY > 192) && (!isJumping)) {
 8003d2e:	2bc0      	cmp	r3, #192	@ 0xc0
 8003d30:	d909      	bls.n	8003d46 <_ZN11Screen2View19handleJoystickEventEm+0x52>
 8003d32:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
 8003d36:	b933      	cbnz	r3, 8003d46 <_ZN11Screen2View19handleJoystickEventEm+0x52>
            timeJump = 0;
 8003d38:	f8c4 32a0 	str.w	r3, [r4, #672]	@ 0x2a0
            isJumping = true;
 8003d3c:	2301      	movs	r3, #1
 8003d3e:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
    for(int i = 0; i < count; i++){
 8003d42:	3601      	adds	r6, #1
 8003d44:	e7db      	b.n	8003cfe <_ZN11Screen2View19handleJoystickEventEm+0xa>
        visible = vis;
 8003d46:	2301      	movs	r3, #1
 8003d48:	f884 3161 	strb.w	r3, [r4, #353]	@ 0x161
 8003d4c:	2300      	movs	r3, #0
 8003d4e:	e7eb      	b.n	8003d28 <_ZN11Screen2View19handleJoystickEventEm+0x34>
 8003d50:	200007e0 	.word	0x200007e0

08003d54 <_ZN11Screen2ViewD1Ev>:

class Screen2View : public Screen2ViewBase
{
public:
    Screen2View();
    virtual ~Screen2View() {}
 8003d54:	b510      	push	{r4, lr}
 8003d56:	4b03      	ldr	r3, [pc, #12]	@ (8003d64 <_ZN11Screen2ViewD1Ev+0x10>)
 8003d58:	6003      	str	r3, [r0, #0]
 8003d5a:	4604      	mov	r4, r0
 8003d5c:	f7ff f804 	bl	8002d68 <_ZN15Screen2ViewBaseD1Ev>
 8003d60:	4620      	mov	r0, r4
 8003d62:	bd10      	pop	{r4, pc}
 8003d64:	08020198 	.word	0x08020198

08003d68 <_ZN11Screen2ViewD0Ev>:
 8003d68:	b510      	push	{r4, lr}
 8003d6a:	4604      	mov	r4, r0
 8003d6c:	f7ff fff2 	bl	8003d54 <_ZN11Screen2ViewD1Ev>
 8003d70:	4620      	mov	r0, r4
 8003d72:	f44f 712d 	mov.w	r1, #692	@ 0x2b4
 8003d76:	f019 fe57 	bl	801da28 <_ZdlPvj>
 8003d7a:	4620      	mov	r0, r4
 8003d7c:	bd10      	pop	{r4, pc}
	...

08003d80 <_ZN11Screen2ViewC1Ev>:
Screen2View::Screen2View()
 8003d80:	b510      	push	{r4, lr}
 8003d82:	4604      	mov	r4, r0
 8003d84:	f7ff f896 	bl	8002eb4 <_ZN15Screen2ViewBaseC1Ev>
 8003d88:	4b0d      	ldr	r3, [pc, #52]	@ (8003dc0 <_ZN11Screen2ViewC1Ev+0x40>)
 8003d8a:	6023      	str	r3, [r4, #0]
    SCREEN_WIDTH = 320;
 8003d8c:	f44f 72a0 	mov.w	r2, #320	@ 0x140
    isJumping = false;
 8003d90:	2300      	movs	r3, #0
    enemyPositionX = SCREEN_WIDTH;
 8003d92:	e9c4 23aa 	strd	r2, r3, [r4, #680]	@ 0x2a8
    SCREEN_WIDTH = 320;
 8003d96:	f8c4 2290 	str.w	r2, [r4, #656]	@ 0x290
    isJumping = false;
 8003d9a:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
	currentHeight = 1;
 8003d9e:	208c      	movs	r0, #140	@ 0x8c
 8003da0:	2101      	movs	r1, #1
	timeJump = 0;
 8003da2:	f8c4 32a0 	str.w	r3, [r4, #672]	@ 0x2a0
    enemySpeed = 2;
 8003da6:	2202      	movs	r2, #2
	tick = 0;
 8003da8:	f8c4 3274 	str.w	r3, [r4, #628]	@ 0x274
	highestScore = 1222;
 8003dac:	f240 43c6 	movw	r3, #1222	@ 0x4c6
	currentHeight = 1;
 8003db0:	e9c4 01a5 	strd	r0, r1, [r4, #660]	@ 0x294
    enemySpeed = 2;
 8003db4:	f8c4 22a4 	str.w	r2, [r4, #676]	@ 0x2a4
	highestScore = 1222;
 8003db8:	f8c4 32b0 	str.w	r3, [r4, #688]	@ 0x2b0
}
 8003dbc:	4620      	mov	r0, r4
 8003dbe:	bd10      	pop	{r4, pc}
 8003dc0:	08020198 	.word	0x08020198

08003dc4 <_Z16Flash_Write_DatamPmt>:

uint32_t Flash_Write_Data (uint32_t StartSectorAddress, uint32_t *Data, uint16_t numberofwords)
{
 8003dc4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003dc6:	4605      	mov	r5, r0
 8003dc8:	4616      	mov	r6, r2
 8003dca:	460f      	mov	r7, r1
	uint32_t SECTORError;
	int sofar=0;


	 /* Unlock the Flash to enable the flash control register access *************/
	  HAL_FLASH_Unlock();
 8003dcc:	f001 f8d6 	bl	8004f7c <HAL_FLASH_Unlock>

	  /* Erase the user Flash area */

	  /* Get the number of sector to erase from 1st sector */

	  uint32_t StartSector = GetSector(StartSectorAddress);
 8003dd0:	4628      	mov	r0, r5
 8003dd2:	f7ff fef1 	bl	8003bb8 <_ZL9GetSectorm>
 8003dd6:	4604      	mov	r4, r0
	  uint32_t EndSectorAddress = StartSectorAddress + numberofwords*4;
	  uint32_t EndSector = GetSector(EndSectorAddress);
 8003dd8:	eb05 0086 	add.w	r0, r5, r6, lsl #2
 8003ddc:	f7ff feec 	bl	8003bb8 <_ZL9GetSectorm>

	  /* Fill EraseInit structure*/
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 8003de0:	4b11      	ldr	r3, [pc, #68]	@ (8003e28 <_Z16Flash_Write_DatamPmt+0x64>)
 8003de2:	2200      	movs	r2, #0
 8003de4:	601a      	str	r2, [r3, #0]
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
 8003de6:	2202      	movs	r2, #2
 8003de8:	611a      	str	r2, [r3, #16]
	  EraseInitStruct.Sector        = StartSector;
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 8003dea:	1c42      	adds	r2, r0, #1
 8003dec:	1b12      	subs	r2, r2, r4

	  /* Note: If an erase operation in Flash memory also concerns data in the data or instruction cache,
	     you have to make sure that these data are rewritten before they are accessed during code
	     execution. If this cannot be done safely, it is recommended to flush the caches by setting the
	     DCRST and ICRST bits in the FLASH_CR register. */
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 8003dee:	a901      	add	r1, sp, #4
 8003df0:	4618      	mov	r0, r3
	  EraseInitStruct.Sector        = StartSector;
 8003df2:	609c      	str	r4, [r3, #8]
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 8003df4:	60da      	str	r2, [r3, #12]
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 8003df6:	f001 f9bb 	bl	8005170 <HAL_FLASHEx_Erase>
 8003dfa:	4604      	mov	r4, r0
 8003dfc:	b160      	cbz	r0, 8003e18 <_Z16Flash_Write_DatamPmt+0x54>
	    	 sofar++;
	     }
	     else
	     {
	       /* Error occurred while writing data in Flash memory*/
	    	 return HAL_FLASH_GetError ();
 8003dfe:	f001 f8d9 	bl	8004fb4 <HAL_FLASH_GetError>
	  /* Lock the Flash to disable the flash control register access (recommended
	     to protect the FLASH memory against possible unwanted operation) *********/
	  HAL_FLASH_Lock();

	   return 0;
}
 8003e02:	b003      	add	sp, #12
 8003e04:	bdf0      	pop	{r4, r5, r6, r7, pc}
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8003e06:	f857 2024 	ldr.w	r2, [r7, r4, lsl #2]
 8003e0a:	2300      	movs	r3, #0
 8003e0c:	2002      	movs	r0, #2
 8003e0e:	f001 f8ff 	bl	8005010 <HAL_FLASH_Program>
 8003e12:	2800      	cmp	r0, #0
 8003e14:	d1f3      	bne.n	8003dfe <_Z16Flash_Write_DatamPmt+0x3a>
	    	 sofar++;
 8003e16:	3401      	adds	r4, #1
	   while (sofar<numberofwords)
 8003e18:	42a6      	cmp	r6, r4
 8003e1a:	eb05 0184 	add.w	r1, r5, r4, lsl #2
 8003e1e:	dcf2      	bgt.n	8003e06 <_Z16Flash_Write_DatamPmt+0x42>
	  HAL_FLASH_Lock();
 8003e20:	f001 f8be 	bl	8004fa0 <HAL_FLASH_Lock>
	   return 0;
 8003e24:	2000      	movs	r0, #0
 8003e26:	e7ec      	b.n	8003e02 <_Z16Flash_Write_DatamPmt+0x3e>
 8003e28:	20000bc8 	.word	0x20000bc8

08003e2c <_ZN11Screen2View17writeHighestScoreEi>:
		RxBuf++;
		if (!(numberofwords--)) break;
	}
}

void Screen2View::writeHighestScore(int score){
 8003e2c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
	uint32_t data[3];
	data[0] = (uint32_t) score;
	Flash_Write_Data(0x081E0000, data, 3);
 8003e2e:	2203      	movs	r2, #3
	data[0] = (uint32_t) score;
 8003e30:	9101      	str	r1, [sp, #4]
	Flash_Write_Data(0x081E0000, data, 3);
 8003e32:	4803      	ldr	r0, [pc, #12]	@ (8003e40 <_ZN11Screen2View17writeHighestScoreEi+0x14>)
 8003e34:	a901      	add	r1, sp, #4
 8003e36:	f7ff ffc5 	bl	8003dc4 <_Z16Flash_Write_DatamPmt>
}
 8003e3a:	b005      	add	sp, #20
 8003e3c:	f85d fb04 	ldr.w	pc, [sp], #4
 8003e40:	081e0000 	.word	0x081e0000

08003e44 <_Z15Flash_Read_DatamPmt>:
{
 8003e44:	b510      	push	{r4, lr}
		*RxBuf = *(__IO uint32_t *)StartSectorAddress;
 8003e46:	1a40      	subs	r0, r0, r1
		if (!(numberofwords--)) break;
 8003e48:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8003e4c:	3a01      	subs	r2, #1
 8003e4e:	b292      	uxth	r2, r2
		*RxBuf = *(__IO uint32_t *)StartSectorAddress;
 8003e50:	580c      	ldr	r4, [r1, r0]
 8003e52:	f841 4b04 	str.w	r4, [r1], #4
		if (!(numberofwords--)) break;
 8003e56:	429a      	cmp	r2, r3
 8003e58:	d1f8      	bne.n	8003e4c <_Z15Flash_Read_DatamPmt+0x8>
}
 8003e5a:	bd10      	pop	{r4, pc}

08003e5c <_ZN11Screen2View16readHighestScoreEv>:

int Screen2View::readHighestScore(){
 8003e5c:	b507      	push	{r0, r1, r2, lr}
	int result;
	uint32_t data[0];
	Flash_Read_Data(0x081E0000, data, 1);
 8003e5e:	4804      	ldr	r0, [pc, #16]	@ (8003e70 <_ZN11Screen2View16readHighestScoreEv+0x14>)
 8003e60:	2201      	movs	r2, #1
 8003e62:	a901      	add	r1, sp, #4
 8003e64:	f7ff ffee 	bl	8003e44 <_Z15Flash_Read_DatamPmt>
	result = data[0];
	return result;
}
 8003e68:	9801      	ldr	r0, [sp, #4]
 8003e6a:	b003      	add	sp, #12
 8003e6c:	f85d fb04 	ldr.w	pc, [sp], #4
 8003e70:	081e0000 	.word	0x081e0000

08003e74 <_ZN11Screen2View15handleTickEventEv>:
	tick++;
 8003e74:	f8d0 3274 	ldr.w	r3, [r0, #628]	@ 0x274
 8003e78:	3301      	adds	r3, #1
void Screen2View::handleTickEvent() {
 8003e7a:	b510      	push	{r4, lr}
	tick++;
 8003e7c:	f8c0 3274 	str.w	r3, [r0, #628]	@ 0x274
	bool gameOver = checkCollision();
 8003e80:	6803      	ldr	r3, [r0, #0]
 8003e82:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
void Screen2View::handleTickEvent() {
 8003e84:	4604      	mov	r4, r0
	bool gameOver = checkCollision();
 8003e86:	4798      	blx	r3
	if (gameOver) {
 8003e88:	b1a8      	cbz	r0, 8003eb6 <_ZN11Screen2View15handleTickEventEv+0x42>
		if(counter > highestScore) highestScore = counter;
 8003e8a:	f8d4 328c 	ldr.w	r3, [r4, #652]	@ 0x28c
 8003e8e:	f8d4 22b0 	ldr.w	r2, [r4, #688]	@ 0x2b0
 8003e92:	4293      	cmp	r3, r2

    void saveScore(int savedScore){
    	model->saveScore(savedScore);
 8003e94:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 8003e96:	bfc8      	it	gt
 8003e98:	f8c4 32b0 	strgt.w	r3, [r4, #688]	@ 0x2b0
 8003e9c:	6892      	ldr	r2, [r2, #8]
		presenter->saveHighestScore(highestScore);
 8003e9e:	f8d4 12b0 	ldr.w	r1, [r4, #688]	@ 0x2b0
    }

    void tick();

    void saveScore(int savedScore){
    	score = savedScore;
 8003ea2:	6053      	str	r3, [r2, #4]
		writeHighestScore(highestScore);
 8003ea4:	6823      	ldr	r3, [r4, #0]

    int getScore(){
    	return score;
    }
    void saveHighestScore(int savedHighestScore){
    	highestScore = savedHighestScore;
 8003ea6:	6091      	str	r1, [r2, #8]
 8003ea8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003eaa:	4620      	mov	r0, r4
 8003eac:	4798      	blx	r3
		static_cast<FrontendApplication*>(Application::getInstance())->gotoScreen3ScreenSlideTransitionEast();;
 8003eae:	f009 f853 	bl	800cf58 <_ZN8touchgfx11Application11getInstanceEv>
 8003eb2:	f7fe fd1d 	bl	80028f0 <_ZN23FrontendApplicationBase36gotoScreen3ScreenSlideTransitionEastEv>
	uint32_t count = osMessageQueueGetCount(joyStickQueueHandle);
 8003eb6:	4b23      	ldr	r3, [pc, #140]	@ (8003f44 <_ZN11Screen2View15handleTickEventEv+0xd0>)
 8003eb8:	6818      	ldr	r0, [r3, #0]
 8003eba:	f003 fcd6 	bl	800786a <osMessageQueueGetCount>
	if(count > 0){
 8003ebe:	4601      	mov	r1, r0
 8003ec0:	b118      	cbz	r0, 8003eca <_ZN11Screen2View15handleTickEventEv+0x56>
		handleJoystickEvent(count);
 8003ec2:	6823      	ldr	r3, [r4, #0]
 8003ec4:	4620      	mov	r0, r4
 8003ec6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003ec8:	4798      	blx	r3
            cacti1.setX(enemyPositionX);
 8003eca:	e9d4 23aa 	ldrd	r2, r3, [r4, #680]	@ 0x2a8
    switch (currentEnemy) {
 8003ece:	b31b      	cbz	r3, 8003f18 <_ZN11Screen2View15handleTickEventEv+0xa4>
 8003ed0:	2b01      	cmp	r3, #1
 8003ed2:	d024      	beq.n	8003f1e <_ZN11Screen2View15handleTickEventEv+0xaa>
    enemyPositionX -= enemySpeed;
 8003ed4:	f8d4 12a4 	ldr.w	r1, [r4, #676]	@ 0x2a4
 8003ed8:	1a52      	subs	r2, r2, r1
 8003eda:	f8c4 22a8 	str.w	r2, [r4, #680]	@ 0x2a8
    if (enemyPositionX < -50) {
 8003ede:	3232      	adds	r2, #50	@ 0x32
 8003ee0:	da0a      	bge.n	8003ef8 <_ZN11Screen2View15handleTickEventEv+0x84>
        enemyPositionX = SCREEN_WIDTH;
 8003ee2:	f8d4 2290 	ldr.w	r2, [r4, #656]	@ 0x290
 8003ee6:	f8c4 22a8 	str.w	r2, [r4, #680]	@ 0x2a8
        currentEnemy = 1 - currentEnemy;
 8003eea:	f1c3 0301 	rsb	r3, r3, #1
 8003eee:	f8c4 32ac 	str.w	r3, [r4, #684]	@ 0x2ac
        switch (currentEnemy) {
 8003ef2:	b1bb      	cbz	r3, 8003f24 <_ZN11Screen2View15handleTickEventEv+0xb0>
 8003ef4:	2b01      	cmp	r3, #1
 8003ef6:	d01d      	beq.n	8003f34 <_ZN11Screen2View15handleTickEventEv+0xc0>
    checkScore();
 8003ef8:	6823      	ldr	r3, [r4, #0]
 8003efa:	4620      	mov	r0, r4
 8003efc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003efe:	4798      	blx	r3
    if (isJumping) {
 8003f00:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
 8003f04:	b11b      	cbz	r3, 8003f0e <_ZN11Screen2View15handleTickEventEv+0x9a>
        dinoJump();
 8003f06:	6823      	ldr	r3, [r4, #0]
 8003f08:	4620      	mov	r0, r4
 8003f0a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003f0c:	4798      	blx	r3
     *
     * @see Container::invalidate
     */
    void invalidate() const
    {
        container.invalidate();
 8003f0e:	1d20      	adds	r0, r4, #4
}
 8003f10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003f14:	f00a b908 	b.w	800e128 <_ZNK8touchgfx8Drawable10invalidateEv>
            cacti1.setX(enemyPositionX);
 8003f18:	f8a4 209c 	strh.w	r2, [r4, #156]	@ 0x9c
    }
 8003f1c:	e7da      	b.n	8003ed4 <_ZN11Screen2View15handleTickEventEv+0x60>
            bird.setX(enemyPositionX);
 8003f1e:	f8a4 217c 	strh.w	r2, [r4, #380]	@ 0x17c
 8003f22:	e7d7      	b.n	8003ed4 <_ZN11Screen2View15handleTickEventEv+0x60>
                cacti1.setX(enemyPositionX);
 8003f24:	f8a4 209c 	strh.w	r2, [r4, #156]	@ 0x9c
        visible = vis;
 8003f28:	2201      	movs	r2, #1
 8003f2a:	f884 20bd 	strb.w	r2, [r4, #189]	@ 0xbd
 8003f2e:	f884 319d 	strb.w	r3, [r4, #413]	@ 0x19d
    }
 8003f32:	e7e1      	b.n	8003ef8 <_ZN11Screen2View15handleTickEventEv+0x84>
        visible = vis;
 8003f34:	f884 319d 	strb.w	r3, [r4, #413]	@ 0x19d
 8003f38:	2300      	movs	r3, #0
                bird.setX(enemyPositionX);
 8003f3a:	f8a4 217c 	strh.w	r2, [r4, #380]	@ 0x17c
 8003f3e:	f884 30bd 	strb.w	r3, [r4, #189]	@ 0xbd
    }
 8003f42:	e7d9      	b.n	8003ef8 <_ZN11Screen2View15handleTickEventEv+0x84>
 8003f44:	200007e0 	.word	0x200007e0

08003f48 <_ZN11Screen2View10checkScoreEv>:
void Screen2View::checkScore(){
 8003f48:	4a19      	ldr	r2, [pc, #100]	@ (8003fb0 <_ZN11Screen2View10checkScoreEv+0x68>)
 8003f4a:	f8d0 3274 	ldr.w	r3, [r0, #628]	@ 0x274
 8003f4e:	4353      	muls	r3, r2
	if(tick % 5 == 0) counter++;
 8003f50:	f1b3 3f33 	cmp.w	r3, #858993459	@ 0x33333333
 8003f54:	bf98      	it	ls
 8003f56:	f8d0 328c 	ldrls.w	r3, [r0, #652]	@ 0x28c
	if(counter < highestScore){
 8003f5a:	f8d0 22b0 	ldr.w	r2, [r0, #688]	@ 0x2b0
	if(tick % 5 == 0) counter++;
 8003f5e:	bf98      	it	ls
 8003f60:	3301      	addls	r3, #1
void Screen2View::checkScore(){
 8003f62:	b570      	push	{r4, r5, r6, lr}
	if(tick % 5 == 0) counter++;
 8003f64:	bf98      	it	ls
 8003f66:	f8c0 328c 	strls.w	r3, [r0, #652]	@ 0x28c
	if(counter < highestScore){
 8003f6a:	f8d0 328c 	ldr.w	r3, [r0, #652]	@ 0x28c
 8003f6e:	4293      	cmp	r3, r2
void Screen2View::checkScore(){
 8003f70:	4604      	mov	r4, r0
		Unicode::snprintf(highestScoreTextAreaBuffer, HIGHESTSCORETEXTAREA_SIZE, "%d", highestScore);
 8003f72:	f500 7613 	add.w	r6, r0, #588	@ 0x24c
		highestScoreTextArea.invalidate();
 8003f76:	f500 75da 	add.w	r5, r0, #436	@ 0x1b4
	if(counter < highestScore){
 8003f7a:	da15      	bge.n	8003fa8 <_ZN11Screen2View10checkScoreEv+0x60>
		Unicode::snprintf(textAreaPointBuffer, TEXTAREAPOINT_SIZE, "%d", counter);
 8003f7c:	4a0d      	ldr	r2, [pc, #52]	@ (8003fb4 <_ZN11Screen2View10checkScoreEv+0x6c>)
 8003f7e:	210a      	movs	r1, #10
 8003f80:	f500 7018 	add.w	r0, r0, #608	@ 0x260
 8003f84:	f00c f816 	bl	800ffb4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		textAreaPoint.invalidate();
 8003f88:	f504 7000 	add.w	r0, r4, #512	@ 0x200
 8003f8c:	f00a f8cc 	bl	800e128 <_ZNK8touchgfx8Drawable10invalidateEv>
		Unicode::snprintf(highestScoreTextAreaBuffer, HIGHESTSCORETEXTAREA_SIZE, "%d", highestScore);
 8003f90:	f8d4 32b0 	ldr.w	r3, [r4, #688]	@ 0x2b0
		Unicode::snprintf(highestScoreTextAreaBuffer, HIGHESTSCORETEXTAREA_SIZE, "%d", counter);
 8003f94:	4a07      	ldr	r2, [pc, #28]	@ (8003fb4 <_ZN11Screen2View10checkScoreEv+0x6c>)
 8003f96:	4630      	mov	r0, r6
 8003f98:	210a      	movs	r1, #10
 8003f9a:	f00c f80b 	bl	800ffb4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		highestScoreTextArea.invalidate();
 8003f9e:	4628      	mov	r0, r5
}
 8003fa0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		highestScoreTextArea.invalidate();
 8003fa4:	f00a b8c0 	b.w	800e128 <_ZNK8touchgfx8Drawable10invalidateEv>
        visible = vis;
 8003fa8:	2200      	movs	r2, #0
 8003faa:	f880 2225 	strb.w	r2, [r0, #549]	@ 0x225
 8003fae:	e7f1      	b.n	8003f94 <_ZN11Screen2View10checkScoreEv+0x4c>
 8003fb0:	cccccccd 	.word	0xcccccccd
 8003fb4:	0802018c 	.word	0x0802018c

08003fb8 <_ZN11Screen2View11setupScreenEv>:
{
 8003fb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003fba:	4604      	mov	r4, r0
    Unicode::snprintf(highestScoreTextAreaBuffer, HIGHESTSCORETEXTAREA_SIZE, "%d", highestScore);
 8003fbc:	4e36      	ldr	r6, [pc, #216]	@ (8004098 <_ZN11Screen2View11setupScreenEv+0xe0>)
 8003fbe:	2500      	movs	r5, #0
    Screen2ViewBase::setupScreen();
 8003fc0:	f7fe fed3 	bl	8002d6a <_ZN15Screen2ViewBase11setupScreenEv>
    Unicode::snprintf(highestScoreTextAreaBuffer, HIGHESTSCORETEXTAREA_SIZE, "%d", highestScore);
 8003fc4:	f8d4 32b0 	ldr.w	r3, [r4, #688]	@ 0x2b0
 8003fc8:	f884 5125 	strb.w	r5, [r4, #293]	@ 0x125
 8003fcc:	4632      	mov	r2, r6
 8003fce:	210a      	movs	r1, #10
 8003fd0:	f504 7013 	add.w	r0, r4, #588	@ 0x24c
 8003fd4:	f00b ffee 	bl	800ffb4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    highestScoreTextArea.invalidate();
 8003fd8:	f504 70da 	add.w	r0, r4, #436	@ 0x1b4
 8003fdc:	f00a f8a4 	bl	800e128 <_ZNK8touchgfx8Drawable10invalidateEv>
    Unicode::snprintf(textAreaPointBuffer, TEXTAREAPOINT_SIZE, "%d", counter);
 8003fe0:	f8d4 328c 	ldr.w	r3, [r4, #652]	@ 0x28c
 8003fe4:	4632      	mov	r2, r6
 8003fe6:	210a      	movs	r1, #10
 8003fe8:	f504 7018 	add.w	r0, r4, #608	@ 0x260
 8003fec:	f00b ffe2 	bl	800ffb4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    ground.setXY(0, 180);
 8003ff0:	f104 06c4 	add.w	r6, r4, #196	@ 0xc4
    textAreaPoint.invalidate();
 8003ff4:	f504 7000 	add.w	r0, r4, #512	@ 0x200
 8003ff8:	f00a f896 	bl	800e128 <_ZNK8touchgfx8Drawable10invalidateEv>
    ground.setXY(0, 180);
 8003ffc:	4629      	mov	r1, r5
 8003ffe:	4630      	mov	r0, r6
 8004000:	22b4      	movs	r2, #180	@ 0xb4
 8004002:	f7fe fd23 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
    ground.startAnimation(false, true, true);
 8004006:	2301      	movs	r3, #1
 8004008:	461a      	mov	r2, r3
 800400a:	4629      	mov	r1, r5
 800400c:	4630      	mov	r0, r6
    dino.setXY(25, 140);
 800400e:	f504 769e 	add.w	r6, r4, #316	@ 0x13c
    ground.startAnimation(false, true, true);
 8004012:	f006 fdf3 	bl	800abfc <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
    dino.setXY(25, 140);
 8004016:	4630      	mov	r0, r6
 8004018:	228c      	movs	r2, #140	@ 0x8c
 800401a:	2119      	movs	r1, #25
 800401c:	f7fe fd16 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
    dino.startAnimation(false, true, true);
 8004020:	2301      	movs	r3, #1
 8004022:	461a      	mov	r2, r3
 8004024:	4629      	mov	r1, r5
 8004026:	4630      	mov	r0, r6
 8004028:	f006 fde8 	bl	800abfc <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
    dino.setUpdateTicksInterval(10);
 800402c:	4630      	mov	r0, r6
 800402e:	210a      	movs	r1, #10
    dinoc.setXY(21, 161);
 8004030:	f504 7680 	add.w	r6, r4, #256	@ 0x100
    dino.setUpdateTicksInterval(10);
 8004034:	f006 fe9d 	bl	800ad72 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
    dinoc.setXY(21, 161);
 8004038:	4630      	mov	r0, r6
 800403a:	22a1      	movs	r2, #161	@ 0xa1
 800403c:	2115      	movs	r1, #21
 800403e:	f7fe fd05 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
    dinoc.startAnimation(false, true, true);
 8004042:	2301      	movs	r3, #1
 8004044:	461a      	mov	r2, r3
 8004046:	4629      	mov	r1, r5
 8004048:	4630      	mov	r0, r6
 800404a:	f006 fdd7 	bl	800abfc <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
    dinoc.setUpdateTicksInterval(10);
 800404e:	4630      	mov	r0, r6
 8004050:	210a      	movs	r1, #10
 8004052:	f006 fe8e 	bl	800ad72 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
 8004056:	2701      	movs	r7, #1
    bird.setXY(SCREEN_WIDTH, 96);
 8004058:	f504 76bc 	add.w	r6, r4, #376	@ 0x178
    cacti1.setXY(SCREEN_WIDTH, 157);
 800405c:	f9b4 1290 	ldrsh.w	r1, [r4, #656]	@ 0x290
 8004060:	f884 5125 	strb.w	r5, [r4, #293]	@ 0x125
 8004064:	f104 0098 	add.w	r0, r4, #152	@ 0x98
 8004068:	229d      	movs	r2, #157	@ 0x9d
 800406a:	f7fe fcef 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
    bird.setXY(SCREEN_WIDTH, 96);
 800406e:	f9b4 1290 	ldrsh.w	r1, [r4, #656]	@ 0x290
 8004072:	f884 70bd 	strb.w	r7, [r4, #189]	@ 0xbd
 8004076:	4630      	mov	r0, r6
 8004078:	2260      	movs	r2, #96	@ 0x60
 800407a:	f7fe fce7 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
    bird.startAnimation(false, true, true);
 800407e:	4629      	mov	r1, r5
 8004080:	4630      	mov	r0, r6
 8004082:	463b      	mov	r3, r7
 8004084:	463a      	mov	r2, r7
 8004086:	f006 fdb9 	bl	800abfc <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
    bird.setUpdateTicksInterval(10);
 800408a:	4630      	mov	r0, r6
 800408c:	210a      	movs	r1, #10
}
 800408e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    bird.setUpdateTicksInterval(10);
 8004092:	f006 be6e 	b.w	800ad72 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
 8004096:	bf00      	nop
 8004098:	0802018c 	.word	0x0802018c

0800409c <_ZN11Screen2View8dinoJumpEv>:
void Screen2View::dinoJump(){
 800409c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80040a0:	4605      	mov	r5, r0
 80040a2:	f04f 0801 	mov.w	r8, #1
 80040a6:	2600      	movs	r6, #0
	dino.stopAnimation();
 80040a8:	f500 779e 	add.w	r7, r0, #316	@ 0x13c
 80040ac:	f880 6125 	strb.w	r6, [r0, #293]	@ 0x125
 80040b0:	f880 8161 	strb.w	r8, [r0, #353]	@ 0x161
 80040b4:	4638      	mov	r0, r7
 80040b6:	f006 fd81 	bl	800abbc <_ZN8touchgfx13AnimatedImage13stopAnimationEv>
	timeJump++;
 80040ba:	f8d5 32a0 	ldr.w	r3, [r5, #672]	@ 0x2a0
	currentHeight = round(BASE_HEIGHT - a*timeJump*timeJump/100 - v0*timeJump/10);//y = a*t*t + v0*t + y0
 80040be:	f8d5 2294 	ldr.w	r2, [r5, #660]	@ 0x294
	timeJump++;
 80040c2:	4443      	add	r3, r8
	currentHeight = round(BASE_HEIGHT - a*timeJump*timeJump/100 - v0*timeJump/10);//y = a*t*t + v0*t + y0
 80040c4:	fb03 f403 	mul.w	r4, r3, r3
 80040c8:	f06f 0163 	mvn.w	r1, #99	@ 0x63
 80040cc:	eba4 1404 	sub.w	r4, r4, r4, lsl #4
 80040d0:	fb94 f4f1 	sdiv	r4, r4, r1
 80040d4:	4414      	add	r4, r2
	timeJump++;
 80040d6:	f8c5 32a0 	str.w	r3, [r5, #672]	@ 0x2a0
	currentHeight = round(BASE_HEIGHT - a*timeJump*timeJump/100 - v0*timeJump/10);//y = a*t*t + v0*t + y0
 80040da:	f06f 0109 	mvn.w	r1, #9
 80040de:	eb03 1383 	add.w	r3, r3, r3, lsl #6
 80040e2:	fb93 f3f1 	sdiv	r3, r3, r1
 80040e6:	441c      	add	r4, r3
 80040e8:	f8c5 4298 	str.w	r4, [r5, #664]	@ 0x298
	dino.setY(currentHeight);
 80040ec:	b224      	sxth	r4, r4
	if (dino.getY() >= BASE_HEIGHT){
 80040ee:	42a2      	cmp	r2, r4
 80040f0:	dd03      	ble.n	80040fa <_ZN11Screen2View8dinoJumpEv+0x5e>
        rect.y = y;
 80040f2:	f8a5 4142 	strh.w	r4, [r5, #322]	@ 0x142
}
 80040f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		dino.setY(BASE_HEIGHT);
 80040fa:	f8a5 2142 	strh.w	r2, [r5, #322]	@ 0x142
		dino.startAnimation(false, true, true);
 80040fe:	4643      	mov	r3, r8
 8004100:	4642      	mov	r2, r8
 8004102:	4631      	mov	r1, r6
 8004104:	4638      	mov	r0, r7
 8004106:	f006 fd79 	bl	800abfc <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
		isJumping = false;
 800410a:	f885 629c 	strb.w	r6, [r5, #668]	@ 0x29c
		currentHeight = 1;
 800410e:	f8c5 8298 	str.w	r8, [r5, #664]	@ 0x298
}
 8004112:	e7f0      	b.n	80040f6 <_ZN11Screen2View8dinoJumpEv+0x5a>

08004114 <_ZN16Screen3PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen3Presenter() {}
 8004114:	4770      	bx	lr

08004116 <_ZThn4_N16Screen3PresenterD1Ev>:
 8004116:	3804      	subs	r0, #4
 8004118:	4770      	bx	lr

0800411a <_ZN16Screen3Presenter10deactivateEv>:
}

void Screen3Presenter::activate()
{

}
 800411a:	4770      	bx	lr

0800411c <_ZN16Screen3PresenterD0Ev>:
 800411c:	b510      	push	{r4, lr}
 800411e:	2110      	movs	r1, #16
 8004120:	4604      	mov	r4, r0
 8004122:	f019 fc81 	bl	801da28 <_ZdlPvj>
 8004126:	4620      	mov	r0, r4
 8004128:	bd10      	pop	{r4, pc}

0800412a <_ZThn4_N16Screen3PresenterD0Ev>:
 800412a:	f1a0 0004 	sub.w	r0, r0, #4
 800412e:	e7f5      	b.n	800411c <_ZN16Screen3PresenterD0Ev>

08004130 <_ZN16Screen3PresenterC1ER11Screen3View>:
 8004130:	2200      	movs	r2, #0
 8004132:	6082      	str	r2, [r0, #8]
    : view(v)
 8004134:	4a02      	ldr	r2, [pc, #8]	@ (8004140 <_ZN16Screen3PresenterC1ER11Screen3View+0x10>)
 8004136:	6002      	str	r2, [r0, #0]
 8004138:	3218      	adds	r2, #24
 800413a:	6042      	str	r2, [r0, #4]
 800413c:	60c1      	str	r1, [r0, #12]
}
 800413e:	4770      	bx	lr
 8004140:	080201e4 	.word	0x080201e4

08004144 <_ZN11Screen3View14tearDownScreenEv>:
}

void Screen3View::tearDownScreen()
{
    Screen3ViewBase::tearDownScreen();
}
 8004144:	4770      	bx	lr
	...

08004148 <_ZN11Screen3ViewD1Ev>:

class Screen3View : public Screen3ViewBase
{
public:
    Screen3View();
    virtual ~Screen3View() {}
 8004148:	b510      	push	{r4, lr}
 800414a:	4b03      	ldr	r3, [pc, #12]	@ (8004158 <_ZN11Screen3ViewD1Ev+0x10>)
 800414c:	6003      	str	r3, [r0, #0]
 800414e:	4604      	mov	r4, r0
 8004150:	f7ff f850 	bl	80031f4 <_ZN15Screen3ViewBaseD1Ev>
 8004154:	4620      	mov	r0, r4
 8004156:	bd10      	pop	{r4, pc}
 8004158:	0802020c 	.word	0x0802020c

0800415c <_ZN11Screen3ViewD0Ev>:
 800415c:	b510      	push	{r4, lr}
 800415e:	4604      	mov	r4, r0
 8004160:	f7ff fff2 	bl	8004148 <_ZN11Screen3ViewD1Ev>
 8004164:	4620      	mov	r0, r4
 8004166:	f44f 713e 	mov.w	r1, #760	@ 0x2f8
 800416a:	f019 fc5d 	bl	801da28 <_ZdlPvj>
 800416e:	4620      	mov	r0, r4
 8004170:	bd10      	pop	{r4, pc}
	...

08004174 <_ZN11Screen3ViewC1Ev>:
Screen3View::Screen3View()
 8004174:	b510      	push	{r4, lr}
 8004176:	4604      	mov	r4, r0
 8004178:	f7ff f874 	bl	8003264 <_ZN15Screen3ViewBaseC1Ev>
 800417c:	4b03      	ldr	r3, [pc, #12]	@ (800418c <_ZN11Screen3ViewC1Ev+0x18>)
 800417e:	6023      	str	r3, [r4, #0]
	score = 0;
 8004180:	2300      	movs	r3, #0
 8004182:	f8c4 32f4 	str.w	r3, [r4, #756]	@ 0x2f4
}
 8004186:	4620      	mov	r0, r4
 8004188:	bd10      	pop	{r4, pc}
 800418a:	bf00      	nop
 800418c:	0802020c 	.word	0x0802020c

08004190 <_ZN11Screen3View11setupScreenEv>:
{
 8004190:	b510      	push	{r4, lr}
 8004192:	4604      	mov	r4, r0
    Screen3ViewBase::setupScreen();
 8004194:	f7ff f82f 	bl	80031f6 <_ZN15Screen3ViewBase11setupScreenEv>

    int getScore(){
    	return model->getScore();
 8004198:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%d", score);
 800419a:	4a06      	ldr	r2, [pc, #24]	@ (80041b4 <_ZN11Screen3View11setupScreenEv+0x24>)
    	return score;
 800419c:	689b      	ldr	r3, [r3, #8]
 800419e:	685b      	ldr	r3, [r3, #4]
    score = presenter->getScore();
 80041a0:	f8c4 32f4 	str.w	r3, [r4, #756]	@ 0x2f4
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%d", score);
 80041a4:	f504 7034 	add.w	r0, r4, #720	@ 0x2d0
 80041a8:	210a      	movs	r1, #10
}
 80041aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%d", score);
 80041ae:	f00b bf01 	b.w	800ffb4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80041b2:	bf00      	nop
 80041b4:	0802018c 	.word	0x0802018c

080041b8 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 80041b8:	20f0      	movs	r0, #240	@ 0xf0
 80041ba:	4770      	bx	lr

080041bc <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 80041bc:	f44f 70a0 	mov.w	r0, #320	@ 0x140
 80041c0:	4770      	bx	lr

080041c2 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 80041c2:	2029      	movs	r0, #41	@ 0x29
 80041c4:	f7fd ba74 	b.w	80016b0 <LCD_IO_WriteReg>

080041c8 <ili9341_DisplayOff>:
 80041c8:	2028      	movs	r0, #40	@ 0x28
 80041ca:	f7fd ba71 	b.w	80016b0 <LCD_IO_WriteReg>

080041ce <ili9341_Init>:
{
 80041ce:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80041d0:	f7fd fa42 	bl	8001658 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 80041d4:	20ca      	movs	r0, #202	@ 0xca
 80041d6:	f7fd fa6b 	bl	80016b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80041da:	20c3      	movs	r0, #195	@ 0xc3
 80041dc:	f7fd fa4c 	bl	8001678 <LCD_IO_WriteData>
 80041e0:	2008      	movs	r0, #8
 80041e2:	f7fd fa49 	bl	8001678 <LCD_IO_WriteData>
 80041e6:	2050      	movs	r0, #80	@ 0x50
 80041e8:	f7fd fa46 	bl	8001678 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80041ec:	20cf      	movs	r0, #207	@ 0xcf
 80041ee:	f7fd fa5f 	bl	80016b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80041f2:	2000      	movs	r0, #0
 80041f4:	f7fd fa40 	bl	8001678 <LCD_IO_WriteData>
 80041f8:	20c1      	movs	r0, #193	@ 0xc1
 80041fa:	f7fd fa3d 	bl	8001678 <LCD_IO_WriteData>
 80041fe:	2030      	movs	r0, #48	@ 0x30
 8004200:	f7fd fa3a 	bl	8001678 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004204:	20ed      	movs	r0, #237	@ 0xed
 8004206:	f7fd fa53 	bl	80016b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800420a:	2064      	movs	r0, #100	@ 0x64
 800420c:	f7fd fa34 	bl	8001678 <LCD_IO_WriteData>
 8004210:	2003      	movs	r0, #3
 8004212:	f7fd fa31 	bl	8001678 <LCD_IO_WriteData>
 8004216:	2012      	movs	r0, #18
 8004218:	f7fd fa2e 	bl	8001678 <LCD_IO_WriteData>
 800421c:	2081      	movs	r0, #129	@ 0x81
 800421e:	f7fd fa2b 	bl	8001678 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004222:	20e8      	movs	r0, #232	@ 0xe8
 8004224:	f7fd fa44 	bl	80016b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004228:	2085      	movs	r0, #133	@ 0x85
 800422a:	f7fd fa25 	bl	8001678 <LCD_IO_WriteData>
 800422e:	2000      	movs	r0, #0
 8004230:	f7fd fa22 	bl	8001678 <LCD_IO_WriteData>
 8004234:	2078      	movs	r0, #120	@ 0x78
 8004236:	f7fd fa1f 	bl	8001678 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800423a:	20cb      	movs	r0, #203	@ 0xcb
 800423c:	f7fd fa38 	bl	80016b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004240:	2039      	movs	r0, #57	@ 0x39
 8004242:	f7fd fa19 	bl	8001678 <LCD_IO_WriteData>
 8004246:	202c      	movs	r0, #44	@ 0x2c
 8004248:	f7fd fa16 	bl	8001678 <LCD_IO_WriteData>
 800424c:	2000      	movs	r0, #0
 800424e:	f7fd fa13 	bl	8001678 <LCD_IO_WriteData>
 8004252:	2034      	movs	r0, #52	@ 0x34
 8004254:	f7fd fa10 	bl	8001678 <LCD_IO_WriteData>
 8004258:	2002      	movs	r0, #2
 800425a:	f7fd fa0d 	bl	8001678 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800425e:	20f7      	movs	r0, #247	@ 0xf7
 8004260:	f7fd fa26 	bl	80016b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004264:	2020      	movs	r0, #32
 8004266:	f7fd fa07 	bl	8001678 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800426a:	20ea      	movs	r0, #234	@ 0xea
 800426c:	f7fd fa20 	bl	80016b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004270:	2000      	movs	r0, #0
 8004272:	f7fd fa01 	bl	8001678 <LCD_IO_WriteData>
 8004276:	2000      	movs	r0, #0
 8004278:	f7fd f9fe 	bl	8001678 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800427c:	20b1      	movs	r0, #177	@ 0xb1
 800427e:	f7fd fa17 	bl	80016b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004282:	2000      	movs	r0, #0
 8004284:	f7fd f9f8 	bl	8001678 <LCD_IO_WriteData>
 8004288:	201b      	movs	r0, #27
 800428a:	f7fd f9f5 	bl	8001678 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800428e:	20b6      	movs	r0, #182	@ 0xb6
 8004290:	f7fd fa0e 	bl	80016b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004294:	200a      	movs	r0, #10
 8004296:	f7fd f9ef 	bl	8001678 <LCD_IO_WriteData>
 800429a:	20a2      	movs	r0, #162	@ 0xa2
 800429c:	f7fd f9ec 	bl	8001678 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80042a0:	20c0      	movs	r0, #192	@ 0xc0
 80042a2:	f7fd fa05 	bl	80016b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80042a6:	2010      	movs	r0, #16
 80042a8:	f7fd f9e6 	bl	8001678 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80042ac:	20c1      	movs	r0, #193	@ 0xc1
 80042ae:	f7fd f9ff 	bl	80016b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80042b2:	2010      	movs	r0, #16
 80042b4:	f7fd f9e0 	bl	8001678 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80042b8:	20c5      	movs	r0, #197	@ 0xc5
 80042ba:	f7fd f9f9 	bl	80016b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80042be:	2045      	movs	r0, #69	@ 0x45
 80042c0:	f7fd f9da 	bl	8001678 <LCD_IO_WriteData>
 80042c4:	2015      	movs	r0, #21
 80042c6:	f7fd f9d7 	bl	8001678 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80042ca:	20c7      	movs	r0, #199	@ 0xc7
 80042cc:	f7fd f9f0 	bl	80016b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80042d0:	2090      	movs	r0, #144	@ 0x90
 80042d2:	f7fd f9d1 	bl	8001678 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80042d6:	2036      	movs	r0, #54	@ 0x36
 80042d8:	f7fd f9ea 	bl	80016b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80042dc:	20c8      	movs	r0, #200	@ 0xc8
 80042de:	f7fd f9cb 	bl	8001678 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80042e2:	20f2      	movs	r0, #242	@ 0xf2
 80042e4:	f7fd f9e4 	bl	80016b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80042e8:	2000      	movs	r0, #0
 80042ea:	f7fd f9c5 	bl	8001678 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80042ee:	20b0      	movs	r0, #176	@ 0xb0
 80042f0:	f7fd f9de 	bl	80016b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80042f4:	20c2      	movs	r0, #194	@ 0xc2
 80042f6:	f7fd f9bf 	bl	8001678 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80042fa:	20b6      	movs	r0, #182	@ 0xb6
 80042fc:	f7fd f9d8 	bl	80016b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004300:	200a      	movs	r0, #10
 8004302:	f7fd f9b9 	bl	8001678 <LCD_IO_WriteData>
 8004306:	20a7      	movs	r0, #167	@ 0xa7
 8004308:	f7fd f9b6 	bl	8001678 <LCD_IO_WriteData>
 800430c:	2027      	movs	r0, #39	@ 0x27
 800430e:	f7fd f9b3 	bl	8001678 <LCD_IO_WriteData>
 8004312:	2004      	movs	r0, #4
 8004314:	f7fd f9b0 	bl	8001678 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004318:	202a      	movs	r0, #42	@ 0x2a
 800431a:	f7fd f9c9 	bl	80016b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800431e:	2000      	movs	r0, #0
 8004320:	f7fd f9aa 	bl	8001678 <LCD_IO_WriteData>
 8004324:	2000      	movs	r0, #0
 8004326:	f7fd f9a7 	bl	8001678 <LCD_IO_WriteData>
 800432a:	2000      	movs	r0, #0
 800432c:	f7fd f9a4 	bl	8001678 <LCD_IO_WriteData>
 8004330:	20ef      	movs	r0, #239	@ 0xef
 8004332:	f7fd f9a1 	bl	8001678 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004336:	202b      	movs	r0, #43	@ 0x2b
 8004338:	f7fd f9ba 	bl	80016b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800433c:	2000      	movs	r0, #0
 800433e:	f7fd f99b 	bl	8001678 <LCD_IO_WriteData>
 8004342:	2000      	movs	r0, #0
 8004344:	f7fd f998 	bl	8001678 <LCD_IO_WriteData>
 8004348:	2001      	movs	r0, #1
 800434a:	f7fd f995 	bl	8001678 <LCD_IO_WriteData>
 800434e:	203f      	movs	r0, #63	@ 0x3f
 8004350:	f7fd f992 	bl	8001678 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004354:	20f6      	movs	r0, #246	@ 0xf6
 8004356:	f7fd f9ab 	bl	80016b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800435a:	2001      	movs	r0, #1
 800435c:	f7fd f98c 	bl	8001678 <LCD_IO_WriteData>
 8004360:	2000      	movs	r0, #0
 8004362:	f7fd f989 	bl	8001678 <LCD_IO_WriteData>
 8004366:	2006      	movs	r0, #6
 8004368:	f7fd f986 	bl	8001678 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800436c:	202c      	movs	r0, #44	@ 0x2c
 800436e:	f7fd f99f 	bl	80016b0 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8004372:	20c8      	movs	r0, #200	@ 0xc8
 8004374:	f7fd f9ea 	bl	800174c <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8004378:	2026      	movs	r0, #38	@ 0x26
 800437a:	f7fd f999 	bl	80016b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800437e:	2001      	movs	r0, #1
 8004380:	f7fd f97a 	bl	8001678 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004384:	20e0      	movs	r0, #224	@ 0xe0
 8004386:	f7fd f993 	bl	80016b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800438a:	200f      	movs	r0, #15
 800438c:	f7fd f974 	bl	8001678 <LCD_IO_WriteData>
 8004390:	2029      	movs	r0, #41	@ 0x29
 8004392:	f7fd f971 	bl	8001678 <LCD_IO_WriteData>
 8004396:	2024      	movs	r0, #36	@ 0x24
 8004398:	f7fd f96e 	bl	8001678 <LCD_IO_WriteData>
 800439c:	200c      	movs	r0, #12
 800439e:	f7fd f96b 	bl	8001678 <LCD_IO_WriteData>
 80043a2:	200e      	movs	r0, #14
 80043a4:	f7fd f968 	bl	8001678 <LCD_IO_WriteData>
 80043a8:	2009      	movs	r0, #9
 80043aa:	f7fd f965 	bl	8001678 <LCD_IO_WriteData>
 80043ae:	204e      	movs	r0, #78	@ 0x4e
 80043b0:	f7fd f962 	bl	8001678 <LCD_IO_WriteData>
 80043b4:	2078      	movs	r0, #120	@ 0x78
 80043b6:	f7fd f95f 	bl	8001678 <LCD_IO_WriteData>
 80043ba:	203c      	movs	r0, #60	@ 0x3c
 80043bc:	f7fd f95c 	bl	8001678 <LCD_IO_WriteData>
 80043c0:	2009      	movs	r0, #9
 80043c2:	f7fd f959 	bl	8001678 <LCD_IO_WriteData>
 80043c6:	2013      	movs	r0, #19
 80043c8:	f7fd f956 	bl	8001678 <LCD_IO_WriteData>
 80043cc:	2005      	movs	r0, #5
 80043ce:	f7fd f953 	bl	8001678 <LCD_IO_WriteData>
 80043d2:	2017      	movs	r0, #23
 80043d4:	f7fd f950 	bl	8001678 <LCD_IO_WriteData>
 80043d8:	2011      	movs	r0, #17
 80043da:	f7fd f94d 	bl	8001678 <LCD_IO_WriteData>
 80043de:	2000      	movs	r0, #0
 80043e0:	f7fd f94a 	bl	8001678 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80043e4:	20e1      	movs	r0, #225	@ 0xe1
 80043e6:	f7fd f963 	bl	80016b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80043ea:	2000      	movs	r0, #0
 80043ec:	f7fd f944 	bl	8001678 <LCD_IO_WriteData>
 80043f0:	2016      	movs	r0, #22
 80043f2:	f7fd f941 	bl	8001678 <LCD_IO_WriteData>
 80043f6:	201b      	movs	r0, #27
 80043f8:	f7fd f93e 	bl	8001678 <LCD_IO_WriteData>
 80043fc:	2004      	movs	r0, #4
 80043fe:	f7fd f93b 	bl	8001678 <LCD_IO_WriteData>
 8004402:	2011      	movs	r0, #17
 8004404:	f7fd f938 	bl	8001678 <LCD_IO_WriteData>
 8004408:	2007      	movs	r0, #7
 800440a:	f7fd f935 	bl	8001678 <LCD_IO_WriteData>
 800440e:	2031      	movs	r0, #49	@ 0x31
 8004410:	f7fd f932 	bl	8001678 <LCD_IO_WriteData>
 8004414:	2033      	movs	r0, #51	@ 0x33
 8004416:	f7fd f92f 	bl	8001678 <LCD_IO_WriteData>
 800441a:	2042      	movs	r0, #66	@ 0x42
 800441c:	f7fd f92c 	bl	8001678 <LCD_IO_WriteData>
 8004420:	2005      	movs	r0, #5
 8004422:	f7fd f929 	bl	8001678 <LCD_IO_WriteData>
 8004426:	200c      	movs	r0, #12
 8004428:	f7fd f926 	bl	8001678 <LCD_IO_WriteData>
 800442c:	200a      	movs	r0, #10
 800442e:	f7fd f923 	bl	8001678 <LCD_IO_WriteData>
 8004432:	2028      	movs	r0, #40	@ 0x28
 8004434:	f7fd f920 	bl	8001678 <LCD_IO_WriteData>
 8004438:	202f      	movs	r0, #47	@ 0x2f
 800443a:	f7fd f91d 	bl	8001678 <LCD_IO_WriteData>
 800443e:	200f      	movs	r0, #15
 8004440:	f7fd f91a 	bl	8001678 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004444:	2011      	movs	r0, #17
 8004446:	f7fd f933 	bl	80016b0 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800444a:	20c8      	movs	r0, #200	@ 0xc8
 800444c:	f7fd f97e 	bl	800174c <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8004450:	2029      	movs	r0, #41	@ 0x29
 8004452:	f7fd f92d 	bl	80016b0 <LCD_IO_WriteReg>
}
 8004456:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 800445a:	202c      	movs	r0, #44	@ 0x2c
 800445c:	f7fd b928 	b.w	80016b0 <LCD_IO_WriteReg>

08004460 <ili9341_ReadID>:
{
 8004460:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8004462:	f7fd f8f9 	bl	8001658 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8004466:	2103      	movs	r1, #3
 8004468:	20d3      	movs	r0, #211	@ 0xd3
 800446a:	f7fd f93d 	bl	80016e8 <LCD_IO_ReadData>
}
 800446e:	b280      	uxth	r0, r0
 8004470:	bd08      	pop	{r3, pc}

08004472 <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8004472:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8004474:	b2c4      	uxtb	r4, r0
 8004476:	2202      	movs	r2, #2
 8004478:	2103      	movs	r1, #3
 800447a:	4620      	mov	r0, r4
 800447c:	f7fd f8a2 	bl	80015c4 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8004480:	200a      	movs	r0, #10
 8004482:	f7fd f8e7 	bl	8001654 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8004486:	4620      	mov	r0, r4
 8004488:	2200      	movs	r2, #0
 800448a:	2103      	movs	r1, #3
 800448c:	f7fd f89a 	bl	80015c4 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 8004490:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8004494:	2002      	movs	r0, #2
 8004496:	f7fd b8dd 	b.w	8001654 <IOE_Delay>

0800449a <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 800449a:	b538      	push	{r3, r4, r5, lr}
 800449c:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800449e:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 80044a0:	f7fd f88e 	bl	80015c0 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80044a4:	2100      	movs	r1, #0
 80044a6:	4620      	mov	r0, r4
 80044a8:	f7fd f8a4 	bl	80015f4 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80044ac:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80044ae:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80044b0:	4620      	mov	r0, r4
 80044b2:	f7fd f89f 	bl	80015f4 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80044b6:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 80044ba:	b280      	uxth	r0, r0
 80044bc:	bd38      	pop	{r3, r4, r5, pc}

080044be <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 80044be:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 80044c0:	b2c4      	uxtb	r4, r0
 80044c2:	2140      	movs	r1, #64	@ 0x40
 80044c4:	4620      	mov	r0, r4
 80044c6:	f7fd f895 	bl	80015f4 <IOE_Read>
  
  if(state > 0)
 80044ca:	0603      	lsls	r3, r0, #24
 80044cc:	d507      	bpl.n	80044de <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 80044ce:	214c      	movs	r1, #76	@ 0x4c
 80044d0:	4620      	mov	r0, r4
 80044d2:	f7fd f88f 	bl	80015f4 <IOE_Read>
 80044d6:	3800      	subs	r0, #0
 80044d8:	bf18      	it	ne
 80044da:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 80044dc:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80044de:	2201      	movs	r2, #1
 80044e0:	214b      	movs	r1, #75	@ 0x4b
 80044e2:	4620      	mov	r0, r4
 80044e4:	f7fd f86e 	bl	80015c4 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80044e8:	4620      	mov	r0, r4
 80044ea:	2200      	movs	r2, #0
 80044ec:	214b      	movs	r1, #75	@ 0x4b
 80044ee:	f7fd f869 	bl	80015c4 <IOE_Write>
  uint8_t ret = 0;
 80044f2:	2000      	movs	r0, #0
 80044f4:	e7f2      	b.n	80044dc <stmpe811_TS_DetectTouch+0x1e>

080044f6 <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 80044f6:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80044f8:	2304      	movs	r3, #4
 80044fa:	b2c4      	uxtb	r4, r0
{
 80044fc:	460e      	mov	r6, r1
 80044fe:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8004500:	21d7      	movs	r1, #215	@ 0xd7
 8004502:	eb0d 0203 	add.w	r2, sp, r3
 8004506:	4620      	mov	r0, r4
 8004508:	f7fd f88e 	bl	8001628 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 800450c:	9b01      	ldr	r3, [sp, #4]
 800450e:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8004510:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8004512:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8004516:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004518:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800451a:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800451c:	2201      	movs	r2, #1
 800451e:	214b      	movs	r1, #75	@ 0x4b
 8004520:	f7fd f850 	bl	80015c4 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8004524:	2200      	movs	r2, #0
 8004526:	214b      	movs	r1, #75	@ 0x4b
 8004528:	4620      	mov	r0, r4
 800452a:	f7fd f84b 	bl	80015c4 <IOE_Write>
}
 800452e:	b002      	add	sp, #8
 8004530:	bd70      	pop	{r4, r5, r6, pc}
	...

08004534 <stmpe811_Init>:
{
 8004534:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8004536:	4a0a      	ldr	r2, [pc, #40]	@ (8004560 <stmpe811_Init+0x2c>)
 8004538:	7813      	ldrb	r3, [r2, #0]
 800453a:	4298      	cmp	r0, r3
{
 800453c:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 800453e:	d00d      	beq.n	800455c <stmpe811_Init+0x28>
 8004540:	7851      	ldrb	r1, [r2, #1]
 8004542:	4288      	cmp	r0, r1
 8004544:	d00a      	beq.n	800455c <stmpe811_Init+0x28>
 8004546:	b10b      	cbz	r3, 800454c <stmpe811_Init+0x18>
 8004548:	b941      	cbnz	r1, 800455c <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 800454a:	2301      	movs	r3, #1
      stmpe811[empty] = DeviceAddr;
 800454c:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 800454e:	f7fd f837 	bl	80015c0 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8004552:	4620      	mov	r0, r4
}
 8004554:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8004558:	f7ff bf8b 	b.w	8004472 <stmpe811_Reset>
}
 800455c:	bd10      	pop	{r4, pc}
 800455e:	bf00      	nop
 8004560:	20000bdc 	.word	0x20000bdc

08004564 <stmpe811_EnableGlobalIT>:
{
 8004564:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8004566:	b2c4      	uxtb	r4, r0
 8004568:	2109      	movs	r1, #9
 800456a:	4620      	mov	r0, r4
 800456c:	f7fd f842 	bl	80015f4 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8004570:	f040 0201 	orr.w	r2, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8004574:	b2d2      	uxtb	r2, r2
 8004576:	4620      	mov	r0, r4
 8004578:	2109      	movs	r1, #9
}
 800457a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800457e:	f7fd b821 	b.w	80015c4 <IOE_Write>

08004582 <stmpe811_DisableGlobalIT>:
{
 8004582:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8004584:	b2c4      	uxtb	r4, r0
 8004586:	2109      	movs	r1, #9
 8004588:	4620      	mov	r0, r4
 800458a:	f7fd f833 	bl	80015f4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800458e:	2109      	movs	r1, #9
 8004590:	f000 02fe 	and.w	r2, r0, #254	@ 0xfe
 8004594:	4620      	mov	r0, r4
}
 8004596:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800459a:	f7fd b813 	b.w	80015c4 <IOE_Write>

0800459e <stmpe811_EnableITSource>:
{
 800459e:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80045a0:	b2c4      	uxtb	r4, r0
{
 80045a2:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80045a4:	4620      	mov	r0, r4
 80045a6:	210a      	movs	r1, #10
 80045a8:	f7fd f824 	bl	80015f4 <IOE_Read>
  tmp |= Source; 
 80045ac:	ea40 0205 	orr.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80045b0:	b2d2      	uxtb	r2, r2
 80045b2:	4620      	mov	r0, r4
 80045b4:	210a      	movs	r1, #10
}
 80045b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80045ba:	f7fd b803 	b.w	80015c4 <IOE_Write>

080045be <stmpe811_TS_EnableIT>:
{
 80045be:	b510      	push	{r4, lr}
 80045c0:	4604      	mov	r4, r0
  IOE_ITConfig();
 80045c2:	f7fc fffe 	bl	80015c2 <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 80045c6:	4620      	mov	r0, r4
 80045c8:	211f      	movs	r1, #31
 80045ca:	f7ff ffe8 	bl	800459e <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 80045ce:	4620      	mov	r0, r4
}
 80045d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_EnableGlobalIT(DeviceAddr);
 80045d4:	f7ff bfc6 	b.w	8004564 <stmpe811_EnableGlobalIT>

080045d8 <stmpe811_DisableITSource>:
{
 80045d8:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80045da:	b2c4      	uxtb	r4, r0
{
 80045dc:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80045de:	4620      	mov	r0, r4
 80045e0:	210a      	movs	r1, #10
 80045e2:	f7fd f807 	bl	80015f4 <IOE_Read>
  tmp &= ~Source; 
 80045e6:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80045ea:	b2d2      	uxtb	r2, r2
 80045ec:	4620      	mov	r0, r4
 80045ee:	210a      	movs	r1, #10
}
 80045f0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80045f4:	f7fc bfe6 	b.w	80015c4 <IOE_Write>

080045f8 <stmpe811_TS_DisableIT>:
{
 80045f8:	b510      	push	{r4, lr}
 80045fa:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 80045fc:	f7ff ffc1 	bl	8004582 <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8004600:	4620      	mov	r0, r4
 8004602:	211f      	movs	r1, #31
}
 8004604:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8004608:	f7ff bfe6 	b.w	80045d8 <stmpe811_DisableITSource>

0800460c <stmpe811_ReadGITStatus>:
{
 800460c:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800460e:	b2c0      	uxtb	r0, r0
{
 8004610:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8004612:	210b      	movs	r1, #11
 8004614:	f7fc ffee 	bl	80015f4 <IOE_Read>
}
 8004618:	4020      	ands	r0, r4
 800461a:	bd10      	pop	{r4, pc}

0800461c <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 800461c:	211f      	movs	r1, #31
 800461e:	f7ff bff5 	b.w	800460c <stmpe811_ReadGITStatus>

08004622 <stmpe811_ClearGlobalIT>:
{
 8004622:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8004624:	b2c0      	uxtb	r0, r0
 8004626:	210b      	movs	r1, #11
 8004628:	f7fc bfcc 	b.w	80015c4 <IOE_Write>

0800462c <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 800462c:	211f      	movs	r1, #31
 800462e:	f7ff bff8 	b.w	8004622 <stmpe811_ClearGlobalIT>

08004632 <stmpe811_IO_EnableAF>:
{
 8004632:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8004634:	b2c4      	uxtb	r4, r0
{
 8004636:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8004638:	4620      	mov	r0, r4
 800463a:	2117      	movs	r1, #23
 800463c:	f7fc ffda 	bl	80015f4 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8004640:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8004644:	b2d2      	uxtb	r2, r2
 8004646:	4620      	mov	r0, r4
 8004648:	2117      	movs	r1, #23
}
 800464a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800464e:	f7fc bfb9 	b.w	80015c4 <IOE_Write>

08004652 <stmpe811_TS_Start>:
{
 8004652:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8004654:	b2c4      	uxtb	r4, r0
{
 8004656:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8004658:	2104      	movs	r1, #4
 800465a:	4620      	mov	r0, r4
 800465c:	f7fc ffca 	bl	80015f4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8004660:	2104      	movs	r1, #4
 8004662:	f000 02fb 	and.w	r2, r0, #251	@ 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8004666:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8004668:	4620      	mov	r0, r4
 800466a:	f7fc ffab 	bl	80015c4 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 800466e:	4630      	mov	r0, r6
 8004670:	21f0      	movs	r1, #240	@ 0xf0
 8004672:	f7ff ffde 	bl	8004632 <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8004676:	f005 02f8 	and.w	r2, r5, #248	@ 0xf8
 800467a:	4620      	mov	r0, r4
 800467c:	2104      	movs	r1, #4
 800467e:	f7fc ffa1 	bl	80015c4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8004682:	2249      	movs	r2, #73	@ 0x49
 8004684:	2120      	movs	r1, #32
 8004686:	4620      	mov	r0, r4
 8004688:	f7fc ff9c 	bl	80015c4 <IOE_Write>
  IOE_Delay(2); 
 800468c:	2002      	movs	r0, #2
 800468e:	f7fc ffe1 	bl	8001654 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8004692:	4620      	mov	r0, r4
 8004694:	2201      	movs	r2, #1
 8004696:	2121      	movs	r1, #33	@ 0x21
 8004698:	f7fc ff94 	bl	80015c4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 800469c:	4620      	mov	r0, r4
 800469e:	229a      	movs	r2, #154	@ 0x9a
 80046a0:	2141      	movs	r1, #65	@ 0x41
 80046a2:	f7fc ff8f 	bl	80015c4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 80046a6:	4620      	mov	r0, r4
 80046a8:	2201      	movs	r2, #1
 80046aa:	214a      	movs	r1, #74	@ 0x4a
 80046ac:	f7fc ff8a 	bl	80015c4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80046b0:	4620      	mov	r0, r4
 80046b2:	2201      	movs	r2, #1
 80046b4:	214b      	movs	r1, #75	@ 0x4b
 80046b6:	f7fc ff85 	bl	80015c4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80046ba:	4620      	mov	r0, r4
 80046bc:	2200      	movs	r2, #0
 80046be:	214b      	movs	r1, #75	@ 0x4b
 80046c0:	f7fc ff80 	bl	80015c4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 80046c4:	4620      	mov	r0, r4
 80046c6:	2201      	movs	r2, #1
 80046c8:	2156      	movs	r1, #86	@ 0x56
 80046ca:	f7fc ff7b 	bl	80015c4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 80046ce:	4620      	mov	r0, r4
 80046d0:	2201      	movs	r2, #1
 80046d2:	2158      	movs	r1, #88	@ 0x58
 80046d4:	f7fc ff76 	bl	80015c4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 80046d8:	4620      	mov	r0, r4
 80046da:	2201      	movs	r2, #1
 80046dc:	2140      	movs	r1, #64	@ 0x40
 80046de:	f7fc ff71 	bl	80015c4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 80046e2:	4620      	mov	r0, r4
 80046e4:	22ff      	movs	r2, #255	@ 0xff
 80046e6:	210b      	movs	r1, #11
 80046e8:	f7fc ff6c 	bl	80015c4 <IOE_Write>
}
 80046ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 80046f0:	2002      	movs	r0, #2
 80046f2:	f7fc bfaf 	b.w	8001654 <IOE_Delay>
	...

080046f8 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80046f8:	4b05      	ldr	r3, [pc, #20]	@ (8004710 <SystemInit+0x18>)
 80046fa:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 80046fe:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 8004702:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8004706:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 800470a:	609a      	str	r2, [r3, #8]
#endif
}
 800470c:	4770      	bx	lr
 800470e:	bf00      	nop
 8004710:	e000ed00 	.word	0xe000ed00

08004714 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8004714:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8004716:	4b0b      	ldr	r3, [pc, #44]	@ (8004744 <HAL_Init+0x30>)
 8004718:	681a      	ldr	r2, [r3, #0]
 800471a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800471e:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8004720:	681a      	ldr	r2, [r3, #0]
 8004722:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8004726:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8004728:	681a      	ldr	r2, [r3, #0]
 800472a:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800472e:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8004730:	2003      	movs	r0, #3
 8004732:	f000 fa45 	bl	8004bc0 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8004736:	2000      	movs	r0, #0
 8004738:	f7fd fad8 	bl	8001cec <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800473c:	f7fd f814 	bl	8001768 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8004740:	2000      	movs	r0, #0
 8004742:	bd08      	pop	{r3, pc}
 8004744:	40023c00 	.word	0x40023c00

08004748 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8004748:	4a03      	ldr	r2, [pc, #12]	@ (8004758 <HAL_IncTick+0x10>)
 800474a:	4b04      	ldr	r3, [pc, #16]	@ (800475c <HAL_IncTick+0x14>)
 800474c:	6811      	ldr	r1, [r2, #0]
 800474e:	781b      	ldrb	r3, [r3, #0]
 8004750:	440b      	add	r3, r1
 8004752:	6013      	str	r3, [r2, #0]
}
 8004754:	4770      	bx	lr
 8004756:	bf00      	nop
 8004758:	20000be0 	.word	0x20000be0
 800475c:	20000078 	.word	0x20000078

08004760 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8004760:	4b01      	ldr	r3, [pc, #4]	@ (8004768 <HAL_GetTick+0x8>)
 8004762:	6818      	ldr	r0, [r3, #0]
}
 8004764:	4770      	bx	lr
 8004766:	bf00      	nop
 8004768:	20000be0 	.word	0x20000be0

0800476c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800476c:	b538      	push	{r3, r4, r5, lr}
 800476e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8004770:	f7ff fff6 	bl	8004760 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8004774:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8004776:	bf1c      	itt	ne
 8004778:	4b05      	ldrne	r3, [pc, #20]	@ (8004790 <HAL_Delay+0x24>)
 800477a:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 800477c:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 800477e:	bf18      	it	ne
 8004780:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8004782:	f7ff ffed 	bl	8004760 <HAL_GetTick>
 8004786:	1b43      	subs	r3, r0, r5
 8004788:	42a3      	cmp	r3, r4
 800478a:	d3fa      	bcc.n	8004782 <HAL_Delay+0x16>
  {
  }
}
 800478c:	bd38      	pop	{r3, r4, r5, pc}
 800478e:	bf00      	nop
 8004790:	20000078 	.word	0x20000078

08004794 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
{
 8004794:	b538      	push	{r3, r4, r5, lr}
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;

  /* Check ADC handle */
  if (hadc == NULL)
 8004796:	4604      	mov	r4, r0
 8004798:	2800      	cmp	r0, #0
 800479a:	f000 809b 	beq.w	80048d4 <HAL_ADC_Init+0x140>
  if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }

  if (hadc->State == HAL_ADC_STATE_RESET)
 800479e:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 80047a0:	b925      	cbnz	r5, 80047ac <HAL_ADC_Init+0x18>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 80047a2:	f7fd f801 	bl	80017a8 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 80047a6:	6465      	str	r5, [r4, #68]	@ 0x44

    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 80047a8:	f884 503c 	strb.w	r5, [r4, #60]	@ 0x3c
  }

  /* Configuration of ADC parameters if previous preliminary actions are      */
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 80047ac:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80047ae:	06db      	lsls	r3, r3, #27
 80047b0:	f100 808e 	bmi.w	80048d0 <HAL_ADC_Init+0x13c>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 80047b4:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80047b6:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 80047ba:	f023 0302 	bic.w	r3, r3, #2
 80047be:	f043 0302 	orr.w	r3, r3, #2
 80047c2:	6423      	str	r3, [r4, #64]	@ 0x40
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);

  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 80047c4:	4b44      	ldr	r3, [pc, #272]	@ (80048d8 <HAL_ADC_Init+0x144>)
 80047c6:	685a      	ldr	r2, [r3, #4]
 80047c8:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 80047cc:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 80047ce:	685a      	ldr	r2, [r3, #4]
 80047d0:	6861      	ldr	r1, [r4, #4]
 80047d2:	430a      	orrs	r2, r1
 80047d4:	605a      	str	r2, [r3, #4]

  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 80047d6:	6823      	ldr	r3, [r4, #0]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 80047d8:	6921      	ldr	r1, [r4, #16]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 80047da:	685a      	ldr	r2, [r3, #4]
 80047dc:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80047e0:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 80047e2:	685a      	ldr	r2, [r3, #4]
 80047e4:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80047e8:	605a      	str	r2, [r3, #4]

  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 80047ea:	685a      	ldr	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 80047ec:	68a1      	ldr	r1, [r4, #8]
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 80047ee:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 80047f2:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 80047f4:	685a      	ldr	r2, [r3, #4]
 80047f6:	430a      	orrs	r2, r1
 80047f8:	605a      	str	r2, [r3, #4]

  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 80047fa:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 80047fc:	68e1      	ldr	r1, [r4, #12]
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 80047fe:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004802:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8004804:	689a      	ldr	r2, [r3, #8]
 8004806:	430a      	orrs	r2, r1
 8004808:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 800480a:	4934      	ldr	r1, [pc, #208]	@ (80048dc <HAL_ADC_Init+0x148>)
 800480c:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800480e:	428a      	cmp	r2, r1
 8004810:	d052      	beq.n	80048b8 <HAL_ADC_Init+0x124>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8004812:	6899      	ldr	r1, [r3, #8]
 8004814:	f021 6170 	bic.w	r1, r1, #251658240	@ 0xf000000
 8004818:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 800481a:	6899      	ldr	r1, [r3, #8]
 800481c:	430a      	orrs	r2, r1
 800481e:	609a      	str	r2, [r3, #8]

    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8004820:	689a      	ldr	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8004822:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8004824:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8004828:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 800482a:	689a      	ldr	r2, [r3, #8]
 800482c:	430a      	orrs	r2, r1
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800482e:	609a      	str	r2, [r3, #8]
  }

  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8004830:	689a      	ldr	r2, [r3, #8]
 8004832:	f022 0202 	bic.w	r2, r2, #2
 8004836:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8004838:	689a      	ldr	r2, [r3, #8]
 800483a:	7e21      	ldrb	r1, [r4, #24]
 800483c:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 8004840:	609a      	str	r2, [r3, #8]

  if (hadc->Init.DiscontinuousConvMode != DISABLE)
 8004842:	f894 2020 	ldrb.w	r2, [r4, #32]
 8004846:	2a00      	cmp	r2, #0
 8004848:	d03e      	beq.n	80048c8 <HAL_ADC_Init+0x134>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));

    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 800484a:	685a      	ldr	r2, [r3, #4]

    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 800484c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 800484e:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004852:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 8004854:	685a      	ldr	r2, [r3, #4]
 8004856:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 800485a:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 800485c:	685a      	ldr	r2, [r3, #4]
 800485e:	3901      	subs	r1, #1
 8004860:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8004864:	605a      	str	r2, [r3, #4]
  }

  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8004866:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8004868:	69e1      	ldr	r1, [r4, #28]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 800486a:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 800486e:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8004870:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8004872:	3901      	subs	r1, #1
 8004874:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
 8004878:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 800487a:	689a      	ldr	r2, [r3, #8]
 800487c:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8004880:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 8004882:	689a      	ldr	r2, [r3, #8]
 8004884:	f894 1030 	ldrb.w	r1, [r4, #48]	@ 0x30
 8004888:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
 800488c:	609a      	str	r2, [r3, #8]

  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 800488e:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8004890:	6961      	ldr	r1, [r4, #20]
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8004892:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004896:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8004898:	689a      	ldr	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 800489a:	2000      	movs	r0, #0
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 800489c:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 80048a0:	609a      	str	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 80048a2:	6460      	str	r0, [r4, #68]	@ 0x44
    ADC_STATE_CLR_SET(hadc->State,
 80048a4:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80048a6:	f023 0303 	bic.w	r3, r3, #3
 80048aa:	f043 0301 	orr.w	r3, r3, #1
 80048ae:	6423      	str	r3, [r4, #64]	@ 0x40
  __HAL_UNLOCK(hadc);
 80048b0:	2300      	movs	r3, #0
 80048b2:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
}
 80048b6:	bd38      	pop	{r3, r4, r5, pc}
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 80048b8:	689a      	ldr	r2, [r3, #8]
 80048ba:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 80048be:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 80048c0:	689a      	ldr	r2, [r3, #8]
 80048c2:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 80048c6:	e7b2      	b.n	800482e <HAL_ADC_Init+0x9a>
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 80048c8:	685a      	ldr	r2, [r3, #4]
 80048ca:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80048ce:	e7c9      	b.n	8004864 <HAL_ADC_Init+0xd0>
    tmp_hal_status = HAL_ERROR;
 80048d0:	2001      	movs	r0, #1
 80048d2:	e7ed      	b.n	80048b0 <HAL_ADC_Init+0x11c>
    return HAL_ERROR;
 80048d4:	2001      	movs	r0, #1
 80048d6:	e7ee      	b.n	80048b6 <HAL_ADC_Init+0x122>
 80048d8:	40012300 	.word	0x40012300
 80048dc:	0f000001 	.word	0x0f000001

080048e0 <HAL_ADC_Start>:
{
 80048e0:	b082      	sub	sp, #8
  __IO uint32_t counter = 0U;
 80048e2:	2300      	movs	r3, #0
 80048e4:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 80048e6:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
 80048ea:	2b01      	cmp	r3, #1
 80048ec:	d069      	beq.n	80049c2 <HAL_ADC_Start+0xe2>
 80048ee:	2301      	movs	r3, #1
 80048f0:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  if ((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 80048f4:	6803      	ldr	r3, [r0, #0]
 80048f6:	689a      	ldr	r2, [r3, #8]
 80048f8:	07d2      	lsls	r2, r2, #31
 80048fa:	d50b      	bpl.n	8004914 <HAL_ADC_Start+0x34>
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 80048fc:	689a      	ldr	r2, [r3, #8]
 80048fe:	07d1      	lsls	r1, r2, #31
 8004900:	d41a      	bmi.n	8004938 <HAL_ADC_Start+0x58>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8004902:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8004904:	f043 0310 	orr.w	r3, r3, #16
 8004908:	6403      	str	r3, [r0, #64]	@ 0x40
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 800490a:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 800490c:	f043 0301 	orr.w	r3, r3, #1
 8004910:	6443      	str	r3, [r0, #68]	@ 0x44
 8004912:	e04c      	b.n	80049ae <HAL_ADC_Start+0xce>
    __HAL_ADC_ENABLE(hadc);
 8004914:	689a      	ldr	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8004916:	492c      	ldr	r1, [pc, #176]	@ (80049c8 <HAL_ADC_Start+0xe8>)
    __HAL_ADC_ENABLE(hadc);
 8004918:	f042 0201 	orr.w	r2, r2, #1
 800491c:	609a      	str	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 800491e:	4a2b      	ldr	r2, [pc, #172]	@ (80049cc <HAL_ADC_Start+0xec>)
 8004920:	6812      	ldr	r2, [r2, #0]
 8004922:	fbb2 f2f1 	udiv	r2, r2, r1
 8004926:	eb02 0242 	add.w	r2, r2, r2, lsl #1
      counter--;
 800492a:	9201      	str	r2, [sp, #4]
    while (counter != 0U)
 800492c:	9a01      	ldr	r2, [sp, #4]
 800492e:	2a00      	cmp	r2, #0
 8004930:	d0e4      	beq.n	80048fc <HAL_ADC_Start+0x1c>
      counter--;
 8004932:	9a01      	ldr	r2, [sp, #4]
 8004934:	3a01      	subs	r2, #1
 8004936:	e7f8      	b.n	800492a <HAL_ADC_Start+0x4a>
    ADC_STATE_CLR_SET(hadc->State,
 8004938:	6c02      	ldr	r2, [r0, #64]	@ 0x40
 800493a:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 800493e:	f022 0201 	bic.w	r2, r2, #1
 8004942:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004946:	6402      	str	r2, [r0, #64]	@ 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8004948:	685a      	ldr	r2, [r3, #4]
 800494a:	0552      	lsls	r2, r2, #21
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 800494c:	bf41      	itttt	mi
 800494e:	6c02      	ldrmi	r2, [r0, #64]	@ 0x40
 8004950:	f422 5240 	bicmi.w	r2, r2, #12288	@ 0x3000
 8004954:	f442 5280 	orrmi.w	r2, r2, #4096	@ 0x1000
 8004958:	6402      	strmi	r2, [r0, #64]	@ 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 800495a:	6c02      	ldr	r2, [r0, #64]	@ 0x40
 800495c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
 8004960:	bf1c      	itt	ne
 8004962:	6c42      	ldrne	r2, [r0, #68]	@ 0x44
 8004964:	f022 0206 	bicne.w	r2, r2, #6
      ADC_CLEAR_ERRORCODE(hadc);
 8004968:	6442      	str	r2, [r0, #68]	@ 0x44
    __HAL_UNLOCK(hadc);
 800496a:	2200      	movs	r2, #0
 800496c:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8004970:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 8004974:	601a      	str	r2, [r3, #0]
    if (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8004976:	4a16      	ldr	r2, [pc, #88]	@ (80049d0 <HAL_ADC_Start+0xf0>)
 8004978:	6851      	ldr	r1, [r2, #4]
 800497a:	f011 0f1f 	tst.w	r1, #31
 800497e:	4915      	ldr	r1, [pc, #84]	@ (80049d4 <HAL_ADC_Start+0xf4>)
 8004980:	d11c      	bne.n	80049bc <HAL_ADC_Start+0xdc>
      if ((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 8004982:	428b      	cmp	r3, r1
 8004984:	d007      	beq.n	8004996 <HAL_ADC_Start+0xb6>
 8004986:	f501 7180 	add.w	r1, r1, #256	@ 0x100
 800498a:	428b      	cmp	r3, r1
 800498c:	d10c      	bne.n	80049a8 <HAL_ADC_Start+0xc8>
 800498e:	6852      	ldr	r2, [r2, #4]
 8004990:	f012 0f1f 	tst.w	r2, #31
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8004994:	d10b      	bne.n	80049ae <HAL_ADC_Start+0xce>
      if ((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8004996:	689a      	ldr	r2, [r3, #8]
 8004998:	f012 5f40 	tst.w	r2, #805306368	@ 0x30000000
 800499c:	d107      	bne.n	80049ae <HAL_ADC_Start+0xce>
        hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 800499e:	689a      	ldr	r2, [r3, #8]
 80049a0:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 80049a4:	609a      	str	r2, [r3, #8]
 80049a6:	e002      	b.n	80049ae <HAL_ADC_Start+0xce>
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 80049a8:	490b      	ldr	r1, [pc, #44]	@ (80049d8 <HAL_ADC_Start+0xf8>)
 80049aa:	428b      	cmp	r3, r1
 80049ac:	d002      	beq.n	80049b4 <HAL_ADC_Start+0xd4>
  return HAL_OK;
 80049ae:	2000      	movs	r0, #0
}
 80049b0:	b002      	add	sp, #8
 80049b2:	4770      	bx	lr
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 80049b4:	6852      	ldr	r2, [r2, #4]
 80049b6:	f012 0f10 	tst.w	r2, #16
 80049ba:	e7eb      	b.n	8004994 <HAL_ADC_Start+0xb4>
      if ((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 80049bc:	428b      	cmp	r3, r1
 80049be:	d1f6      	bne.n	80049ae <HAL_ADC_Start+0xce>
 80049c0:	e7e9      	b.n	8004996 <HAL_ADC_Start+0xb6>
  __HAL_LOCK(hadc);
 80049c2:	2002      	movs	r0, #2
 80049c4:	e7f4      	b.n	80049b0 <HAL_ADC_Start+0xd0>
 80049c6:	bf00      	nop
 80049c8:	000f4240 	.word	0x000f4240
 80049cc:	20000074 	.word	0x20000074
 80049d0:	40012300 	.word	0x40012300
 80049d4:	40012000 	.word	0x40012000
 80049d8:	40012200 	.word	0x40012200

080049dc <HAL_ADC_PollForConversion>:
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 80049dc:	6803      	ldr	r3, [r0, #0]
 80049de:	689a      	ldr	r2, [r3, #8]
 80049e0:	0552      	lsls	r2, r2, #21
{
 80049e2:	b570      	push	{r4, r5, r6, lr}
 80049e4:	4604      	mov	r4, r0
 80049e6:	460d      	mov	r5, r1
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 80049e8:	d50b      	bpl.n	8004a02 <HAL_ADC_PollForConversion+0x26>
      HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA))
 80049ea:	689b      	ldr	r3, [r3, #8]
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 80049ec:	05de      	lsls	r6, r3, #23
 80049ee:	d508      	bpl.n	8004a02 <HAL_ADC_PollForConversion+0x26>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 80049f0:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80049f2:	f043 0320 	orr.w	r3, r3, #32
 80049f6:	6403      	str	r3, [r0, #64]	@ 0x40
    __HAL_UNLOCK(hadc);
 80049f8:	2300      	movs	r3, #0
 80049fa:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
    return HAL_ERROR;
 80049fe:	2001      	movs	r0, #1
}
 8004a00:	bd70      	pop	{r4, r5, r6, pc}
  tickstart = HAL_GetTick();
 8004a02:	f7ff fead 	bl	8004760 <HAL_GetTick>
 8004a06:	4606      	mov	r6, r0
  while (!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8004a08:	6823      	ldr	r3, [r4, #0]
 8004a0a:	681a      	ldr	r2, [r3, #0]
 8004a0c:	0791      	lsls	r1, r2, #30
 8004a0e:	d50c      	bpl.n	8004a2a <HAL_ADC_PollForConversion+0x4e>
  __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 8004a10:	f06f 0212 	mvn.w	r2, #18
 8004a14:	601a      	str	r2, [r3, #0]
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 8004a16:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8004a18:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004a1c:	6422      	str	r2, [r4, #64]	@ 0x40
  if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8004a1e:	689a      	ldr	r2, [r3, #8]
 8004a20:	f012 5f40 	tst.w	r2, #805306368	@ 0x30000000
 8004a24:	d017      	beq.n	8004a56 <HAL_ADC_PollForConversion+0x7a>
  return HAL_OK;
 8004a26:	2000      	movs	r0, #0
 8004a28:	e7ea      	b.n	8004a00 <HAL_ADC_PollForConversion+0x24>
    if (Timeout != HAL_MAX_DELAY)
 8004a2a:	1c68      	adds	r0, r5, #1
 8004a2c:	d0ed      	beq.n	8004a0a <HAL_ADC_PollForConversion+0x2e>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8004a2e:	b965      	cbnz	r5, 8004a4a <HAL_ADC_PollForConversion+0x6e>
        if (!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8004a30:	6823      	ldr	r3, [r4, #0]
 8004a32:	681b      	ldr	r3, [r3, #0]
 8004a34:	f013 0302 	ands.w	r3, r3, #2
 8004a38:	d1e6      	bne.n	8004a08 <HAL_ADC_PollForConversion+0x2c>
          SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 8004a3a:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hadc);
 8004a3c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 8004a40:	f042 0204 	orr.w	r2, r2, #4
 8004a44:	6422      	str	r2, [r4, #64]	@ 0x40
          return HAL_TIMEOUT;
 8004a46:	2003      	movs	r0, #3
 8004a48:	e7da      	b.n	8004a00 <HAL_ADC_PollForConversion+0x24>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8004a4a:	f7ff fe89 	bl	8004760 <HAL_GetTick>
 8004a4e:	1b80      	subs	r0, r0, r6
 8004a50:	42a8      	cmp	r0, r5
 8004a52:	d8ed      	bhi.n	8004a30 <HAL_ADC_PollForConversion+0x54>
 8004a54:	e7d8      	b.n	8004a08 <HAL_ADC_PollForConversion+0x2c>
  if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8004a56:	7e22      	ldrb	r2, [r4, #24]
 8004a58:	2a00      	cmp	r2, #0
 8004a5a:	d1e4      	bne.n	8004a26 <HAL_ADC_PollForConversion+0x4a>
      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8004a5c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8004a5e:	f412 0f70 	tst.w	r2, #15728640	@ 0xf00000
 8004a62:	d002      	beq.n	8004a6a <HAL_ADC_PollForConversion+0x8e>
       HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)))
 8004a64:	689b      	ldr	r3, [r3, #8]
      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8004a66:	055a      	lsls	r2, r3, #21
 8004a68:	d4dd      	bmi.n	8004a26 <HAL_ADC_PollForConversion+0x4a>
    CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 8004a6a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004a6c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8004a70:	6423      	str	r3, [r4, #64]	@ 0x40
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8004a72:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004a74:	04db      	lsls	r3, r3, #19
 8004a76:	d4d6      	bmi.n	8004a26 <HAL_ADC_PollForConversion+0x4a>
      SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 8004a78:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004a7a:	f043 0301 	orr.w	r3, r3, #1
 8004a7e:	6423      	str	r3, [r4, #64]	@ 0x40
 8004a80:	e7d1      	b.n	8004a26 <HAL_ADC_PollForConversion+0x4a>

08004a82 <HAL_ADC_GetValue>:
  return hadc->Instance->DR;
 8004a82:	6803      	ldr	r3, [r0, #0]
 8004a84:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
}
 8004a86:	4770      	bx	lr

08004a88 <HAL_ADC_ConfigChannel>:
{
 8004a88:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t counter = 0U;
 8004a8a:	2300      	movs	r3, #0
 8004a8c:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8004a8e:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
 8004a92:	2b01      	cmp	r3, #1
{
 8004a94:	4605      	mov	r5, r0
  __HAL_LOCK(hadc);
 8004a96:	f000 8086 	beq.w	8004ba6 <HAL_ADC_ConfigChannel+0x11e>
 8004a9a:	2301      	movs	r3, #1
 8004a9c:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  if (sConfig->Channel > ADC_CHANNEL_9)
 8004aa0:	6808      	ldr	r0, [r1, #0]
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8004aa2:	682b      	ldr	r3, [r5, #0]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8004aa4:	688e      	ldr	r6, [r1, #8]
  if (sConfig->Channel > ADC_CHANNEL_9)
 8004aa6:	2809      	cmp	r0, #9
 8004aa8:	b284      	uxth	r4, r0
 8004aaa:	d933      	bls.n	8004b14 <HAL_ADC_ConfigChannel+0x8c>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8004aac:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 8004ab0:	68df      	ldr	r7, [r3, #12]
 8004ab2:	3a1e      	subs	r2, #30
 8004ab4:	f04f 0c07 	mov.w	ip, #7
 8004ab8:	fa0c fc02 	lsl.w	ip, ip, r2
 8004abc:	ea27 070c 	bic.w	r7, r7, ip
 8004ac0:	60df      	str	r7, [r3, #12]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8004ac2:	68df      	ldr	r7, [r3, #12]
 8004ac4:	fa06 f202 	lsl.w	r2, r6, r2
 8004ac8:	433a      	orrs	r2, r7
 8004aca:	60da      	str	r2, [r3, #12]
  if (sConfig->Rank < 7U)
 8004acc:	6849      	ldr	r1, [r1, #4]
 8004ace:	2906      	cmp	r1, #6
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8004ad0:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  if (sConfig->Rank < 7U)
 8004ad4:	d82d      	bhi.n	8004b32 <HAL_ADC_ConfigChannel+0xaa>
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8004ad6:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8004ad8:	3a05      	subs	r2, #5
 8004ada:	261f      	movs	r6, #31
 8004adc:	4096      	lsls	r6, r2
 8004ade:	ea21 0106 	bic.w	r1, r1, r6
 8004ae2:	6359      	str	r1, [r3, #52]	@ 0x34
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 8004ae4:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8004ae6:	fa04 f202 	lsl.w	r2, r4, r2
 8004aea:	430a      	orrs	r2, r1
 8004aec:	635a      	str	r2, [r3, #52]	@ 0x34
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 8004aee:	4a2f      	ldr	r2, [pc, #188]	@ (8004bac <HAL_ADC_ConfigChannel+0x124>)
 8004af0:	4293      	cmp	r3, r2
 8004af2:	d10a      	bne.n	8004b0a <HAL_ADC_ConfigChannel+0x82>
 8004af4:	2812      	cmp	r0, #18
 8004af6:	d137      	bne.n	8004b68 <HAL_ADC_ConfigChannel+0xe0>
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 8004af8:	4b2d      	ldr	r3, [pc, #180]	@ (8004bb0 <HAL_ADC_ConfigChannel+0x128>)
 8004afa:	685a      	ldr	r2, [r3, #4]
 8004afc:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 8004b00:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 8004b02:	685a      	ldr	r2, [r3, #4]
 8004b04:	f442 0280 	orr.w	r2, r2, #4194304	@ 0x400000
 8004b08:	605a      	str	r2, [r3, #4]
  __HAL_UNLOCK(hadc);
 8004b0a:	2000      	movs	r0, #0
 8004b0c:	f885 003c 	strb.w	r0, [r5, #60]	@ 0x3c
}
 8004b10:	b003      	add	sp, #12
 8004b12:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8004b14:	691a      	ldr	r2, [r3, #16]
 8004b16:	eb00 0c40 	add.w	ip, r0, r0, lsl #1
 8004b1a:	2707      	movs	r7, #7
 8004b1c:	fa07 f70c 	lsl.w	r7, r7, ip
 8004b20:	ea22 0207 	bic.w	r2, r2, r7
 8004b24:	611a      	str	r2, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 8004b26:	691a      	ldr	r2, [r3, #16]
 8004b28:	fa06 f60c 	lsl.w	r6, r6, ip
 8004b2c:	4316      	orrs	r6, r2
 8004b2e:	611e      	str	r6, [r3, #16]
 8004b30:	e7cc      	b.n	8004acc <HAL_ADC_ConfigChannel+0x44>
  else if (sConfig->Rank < 13U)
 8004b32:	290c      	cmp	r1, #12
 8004b34:	f04f 011f 	mov.w	r1, #31
 8004b38:	d80b      	bhi.n	8004b52 <HAL_ADC_ConfigChannel+0xca>
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 8004b3a:	6b1e      	ldr	r6, [r3, #48]	@ 0x30
 8004b3c:	3a23      	subs	r2, #35	@ 0x23
 8004b3e:	4091      	lsls	r1, r2
 8004b40:	ea26 0101 	bic.w	r1, r6, r1
 8004b44:	6319      	str	r1, [r3, #48]	@ 0x30
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 8004b46:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8004b48:	fa04 f202 	lsl.w	r2, r4, r2
 8004b4c:	430a      	orrs	r2, r1
 8004b4e:	631a      	str	r2, [r3, #48]	@ 0x30
 8004b50:	e7cd      	b.n	8004aee <HAL_ADC_ConfigChannel+0x66>
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8004b52:	6ade      	ldr	r6, [r3, #44]	@ 0x2c
 8004b54:	3a41      	subs	r2, #65	@ 0x41
 8004b56:	4091      	lsls	r1, r2
 8004b58:	ea26 0101 	bic.w	r1, r6, r1
 8004b5c:	62d9      	str	r1, [r3, #44]	@ 0x2c
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8004b5e:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8004b60:	4094      	lsls	r4, r2
 8004b62:	430c      	orrs	r4, r1
 8004b64:	62dc      	str	r4, [r3, #44]	@ 0x2c
 8004b66:	e7c2      	b.n	8004aee <HAL_ADC_ConfigChannel+0x66>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 8004b68:	4b12      	ldr	r3, [pc, #72]	@ (8004bb4 <HAL_ADC_ConfigChannel+0x12c>)
 8004b6a:	4298      	cmp	r0, r3
 8004b6c:	d001      	beq.n	8004b72 <HAL_ADC_ConfigChannel+0xea>
 8004b6e:	2811      	cmp	r0, #17
 8004b70:	d1cb      	bne.n	8004b0a <HAL_ADC_ConfigChannel+0x82>
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 8004b72:	4b0f      	ldr	r3, [pc, #60]	@ (8004bb0 <HAL_ADC_ConfigChannel+0x128>)
 8004b74:	685a      	ldr	r2, [r3, #4]
 8004b76:	f422 0280 	bic.w	r2, r2, #4194304	@ 0x400000
 8004b7a:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 8004b7c:	685a      	ldr	r2, [r3, #4]
 8004b7e:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8004b82:	605a      	str	r2, [r3, #4]
    if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 8004b84:	4b0b      	ldr	r3, [pc, #44]	@ (8004bb4 <HAL_ADC_ConfigChannel+0x12c>)
 8004b86:	4298      	cmp	r0, r3
 8004b88:	d1bf      	bne.n	8004b0a <HAL_ADC_ConfigChannel+0x82>
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 8004b8a:	4b0b      	ldr	r3, [pc, #44]	@ (8004bb8 <HAL_ADC_ConfigChannel+0x130>)
 8004b8c:	4a0b      	ldr	r2, [pc, #44]	@ (8004bbc <HAL_ADC_ConfigChannel+0x134>)
 8004b8e:	681b      	ldr	r3, [r3, #0]
 8004b90:	fbb3 f3f2 	udiv	r3, r3, r2
 8004b94:	220a      	movs	r2, #10
 8004b96:	4353      	muls	r3, r2
        counter--;
 8004b98:	9301      	str	r3, [sp, #4]
      while (counter != 0U)
 8004b9a:	9b01      	ldr	r3, [sp, #4]
 8004b9c:	2b00      	cmp	r3, #0
 8004b9e:	d0b4      	beq.n	8004b0a <HAL_ADC_ConfigChannel+0x82>
        counter--;
 8004ba0:	9b01      	ldr	r3, [sp, #4]
 8004ba2:	3b01      	subs	r3, #1
 8004ba4:	e7f8      	b.n	8004b98 <HAL_ADC_ConfigChannel+0x110>
  __HAL_LOCK(hadc);
 8004ba6:	2002      	movs	r0, #2
 8004ba8:	e7b2      	b.n	8004b10 <HAL_ADC_ConfigChannel+0x88>
 8004baa:	bf00      	nop
 8004bac:	40012000 	.word	0x40012000
 8004bb0:	40012300 	.word	0x40012300
 8004bb4:	10000012 	.word	0x10000012
 8004bb8:	20000074 	.word	0x20000074
 8004bbc:	000f4240 	.word	0x000f4240

08004bc0 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8004bc0:	4907      	ldr	r1, [pc, #28]	@ (8004be0 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8004bc2:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004bc4:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004bc8:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004bca:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004bcc:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004bd0:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8004bd2:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8004bd4:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8004bd8:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 8004bdc:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8004bde:	4770      	bx	lr
 8004be0:	e000ed00 	.word	0xe000ed00

08004be4 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8004be4:	4b16      	ldr	r3, [pc, #88]	@ (8004c40 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8004be6:	b530      	push	{r4, r5, lr}
 8004be8:	68dc      	ldr	r4, [r3, #12]
 8004bea:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004bee:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004bf2:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004bf4:	2b04      	cmp	r3, #4
 8004bf6:	bf28      	it	cs
 8004bf8:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004bfa:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004bfc:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004c00:	bf8c      	ite	hi
 8004c02:	3c03      	subhi	r4, #3
 8004c04:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004c06:	fa05 f303 	lsl.w	r3, r5, r3
 8004c0a:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8004c0e:	40a5      	lsls	r5, r4
 8004c10:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004c14:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 8004c16:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004c18:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004c1c:	bfac      	ite	ge
 8004c1e:	f100 4060 	addge.w	r0, r0, #3758096384	@ 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004c22:	4a08      	ldrlt	r2, [pc, #32]	@ (8004c44 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004c24:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004c28:	bfb8      	it	lt
 8004c2a:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004c2e:	b2db      	uxtb	r3, r3
 8004c30:	bfaa      	itet	ge
 8004c32:	f500 4061 	addge.w	r0, r0, #57600	@ 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004c36:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004c38:	f880 3300 	strbge.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8004c3c:	bd30      	pop	{r4, r5, pc}
 8004c3e:	bf00      	nop
 8004c40:	e000ed00 	.word	0xe000ed00
 8004c44:	e000ed14 	.word	0xe000ed14

08004c48 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004c48:	2800      	cmp	r0, #0
 8004c4a:	db07      	blt.n	8004c5c <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004c4c:	4a04      	ldr	r2, [pc, #16]	@ (8004c60 <HAL_NVIC_EnableIRQ+0x18>)
 8004c4e:	0941      	lsrs	r1, r0, #5
 8004c50:	2301      	movs	r3, #1
 8004c52:	f000 001f 	and.w	r0, r0, #31
 8004c56:	4083      	lsls	r3, r0
 8004c58:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8004c5c:	4770      	bx	lr
 8004c5e:	bf00      	nop
 8004c60:	e000e100 	.word	0xe000e100

08004c64 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8004c64:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8004c66:	4604      	mov	r4, r0
 8004c68:	b150      	cbz	r0, 8004c80 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8004c6a:	7943      	ldrb	r3, [r0, #5]
 8004c6c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004c70:	b913      	cbnz	r3, 8004c78 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8004c72:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8004c74:	f7fc fdf0 	bl	8001858 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8004c78:	2301      	movs	r3, #1
 8004c7a:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8004c7c:	2000      	movs	r0, #0
}
 8004c7e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004c80:	2001      	movs	r0, #1
 8004c82:	e7fc      	b.n	8004c7e <HAL_CRC_Init+0x1a>

08004c84 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8004c84:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8004c86:	4604      	mov	r4, r0
 8004c88:	b330      	cbz	r0, 8004cd8 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8004c8a:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 8004c8e:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004c92:	b91b      	cbnz	r3, 8004c9c <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8004c94:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8004c98:	f7fc fdf6 	bl	8001888 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004c9c:	6822      	ldr	r2, [r4, #0]
 8004c9e:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004ca0:	2302      	movs	r3, #2
 8004ca2:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004ca6:	6813      	ldr	r3, [r2, #0]
 8004ca8:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 8004cac:	430b      	orrs	r3, r1
 8004cae:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8004cb0:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8004cb2:	68a1      	ldr	r1, [r4, #8]
 8004cb4:	f023 0307 	bic.w	r3, r3, #7
 8004cb8:	430b      	orrs	r3, r1
 8004cba:	6353      	str	r3, [r2, #52]	@ 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8004cbc:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 8004cbe:	68e1      	ldr	r1, [r4, #12]
 8004cc0:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 8004cc4:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8004cc8:	430b      	orrs	r3, r1
 8004cca:	6413      	str	r3, [r2, #64]	@ 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004ccc:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004cce:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004cd0:	63e0      	str	r0, [r4, #60]	@ 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004cd2:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  return HAL_OK;
}
 8004cd6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004cd8:	2001      	movs	r0, #1
 8004cda:	e7fc      	b.n	8004cd6 <HAL_DMA2D_Init+0x52>

08004cdc <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 8004cdc:	4770      	bx	lr

08004cde <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 8004cde:	4770      	bx	lr

08004ce0 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004ce0:	6803      	ldr	r3, [r0, #0]
{
 8004ce2:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004ce4:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8004ce6:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004ce8:	07f2      	lsls	r2, r6, #31
{
 8004cea:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004cec:	d514      	bpl.n	8004d18 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 8004cee:	05e9      	lsls	r1, r5, #23
 8004cf0:	d512      	bpl.n	8004d18 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8004cf2:	681a      	ldr	r2, [r3, #0]
 8004cf4:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8004cf8:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8004cfa:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8004cfc:	f042 0201 	orr.w	r2, r2, #1
 8004d00:	63c2      	str	r2, [r0, #60]	@ 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8004d02:	2201      	movs	r2, #1
 8004d04:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004d06:	2304      	movs	r3, #4
 8004d08:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004d0c:	2300      	movs	r3, #0
 8004d0e:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8004d12:	6943      	ldr	r3, [r0, #20]
 8004d14:	b103      	cbz	r3, 8004d18 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 8004d16:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8004d18:	06b2      	lsls	r2, r6, #26
 8004d1a:	d516      	bpl.n	8004d4a <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 8004d1c:	04ab      	lsls	r3, r5, #18
 8004d1e:	d514      	bpl.n	8004d4a <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8004d20:	6823      	ldr	r3, [r4, #0]
 8004d22:	681a      	ldr	r2, [r3, #0]
 8004d24:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8004d28:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8004d2a:	2220      	movs	r2, #32
 8004d2c:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8004d2e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8004d30:	f043 0302 	orr.w	r3, r3, #2
 8004d34:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004d36:	2304      	movs	r3, #4
 8004d38:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004d3c:	2300      	movs	r3, #0
 8004d3e:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8004d42:	6963      	ldr	r3, [r4, #20]
 8004d44:	b10b      	cbz	r3, 8004d4a <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 8004d46:	4620      	mov	r0, r4
 8004d48:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8004d4a:	0730      	lsls	r0, r6, #28
 8004d4c:	d516      	bpl.n	8004d7c <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8004d4e:	0529      	lsls	r1, r5, #20
 8004d50:	d514      	bpl.n	8004d7c <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8004d52:	6823      	ldr	r3, [r4, #0]
 8004d54:	681a      	ldr	r2, [r3, #0]
 8004d56:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004d5a:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8004d5c:	2208      	movs	r2, #8
 8004d5e:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8004d60:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8004d62:	f043 0304 	orr.w	r3, r3, #4
 8004d66:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004d68:	2304      	movs	r3, #4
 8004d6a:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004d6e:	2300      	movs	r3, #0
 8004d70:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8004d74:	6963      	ldr	r3, [r4, #20]
 8004d76:	b10b      	cbz	r3, 8004d7c <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8004d78:	4620      	mov	r0, r4
 8004d7a:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8004d7c:	0772      	lsls	r2, r6, #29
 8004d7e:	d50b      	bpl.n	8004d98 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 8004d80:	056b      	lsls	r3, r5, #21
 8004d82:	d509      	bpl.n	8004d98 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004d84:	6823      	ldr	r3, [r4, #0]
 8004d86:	681a      	ldr	r2, [r3, #0]
 8004d88:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004d8c:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8004d8e:	2204      	movs	r2, #4
 8004d90:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8004d92:	4620      	mov	r0, r4
 8004d94:	f7ff ffa2 	bl	8004cdc <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8004d98:	07b0      	lsls	r0, r6, #30
 8004d9a:	d514      	bpl.n	8004dc6 <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 8004d9c:	05a9      	lsls	r1, r5, #22
 8004d9e:	d512      	bpl.n	8004dc6 <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8004da0:	6823      	ldr	r3, [r4, #0]
 8004da2:	681a      	ldr	r2, [r3, #0]
 8004da4:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8004da8:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8004daa:	2202      	movs	r2, #2
 8004dac:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004dae:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8004db0:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004db2:	2301      	movs	r3, #1
 8004db4:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004db8:	2300      	movs	r3, #0
 8004dba:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferCpltCallback != NULL)
 8004dbe:	6923      	ldr	r3, [r4, #16]
 8004dc0:	b10b      	cbz	r3, 8004dc6 <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 8004dc2:	4620      	mov	r0, r4
 8004dc4:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8004dc6:	06f2      	lsls	r2, r6, #27
 8004dc8:	d513      	bpl.n	8004df2 <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8004dca:	04eb      	lsls	r3, r5, #19
 8004dcc:	d511      	bpl.n	8004df2 <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8004dce:	6823      	ldr	r3, [r4, #0]
 8004dd0:	681a      	ldr	r2, [r3, #0]
 8004dd2:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8004dd6:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8004dd8:	2210      	movs	r2, #16
 8004dda:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004ddc:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8004dde:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004de0:	2301      	movs	r3, #1
 8004de2:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004de6:	2300      	movs	r3, #0
 8004de8:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004dec:	4620      	mov	r0, r4
 8004dee:	f7ff ff76 	bl	8004cde <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 8004df2:	bd70      	pop	{r4, r5, r6, pc}

08004df4 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8004df4:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8004df6:	f890 2038 	ldrb.w	r2, [r0, #56]	@ 0x38
 8004dfa:	2a01      	cmp	r2, #1
{
 8004dfc:	4603      	mov	r3, r0
 8004dfe:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hdma2d);
 8004e02:	d02b      	beq.n	8004e5c <HAL_DMA2D_ConfigLayer+0x68>
 8004e04:	2201      	movs	r2, #1
 8004e06:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004e0a:	f883 0039 	strb.w	r0, [r3, #57]	@ 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004e0e:	eb03 1201 	add.w	r2, r3, r1, lsl #4
 8004e12:	e9d2 4007 	ldrd	r4, r0, [r2, #28]
 8004e16:	6a55      	ldr	r5, [r2, #36]	@ 0x24
 8004e18:	4f17      	ldr	r7, [pc, #92]	@ (8004e78 <HAL_DMA2D_ConfigLayer+0x84>)
 8004e1a:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004e1e:	3c09      	subs	r4, #9
 8004e20:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8004e22:	bf9c      	itt	ls
 8004e24:	f005 427f 	andls.w	r2, r5, #4278190080	@ 0xff000000
 8004e28:	4310      	orrls	r0, r2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004e2a:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004e2e:	681a      	ldr	r2, [r3, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8004e30:	bf88      	it	hi
 8004e32:	ea40 6005 	orrhi.w	r0, r0, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8004e36:	b991      	cbnz	r1, 8004e5e <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004e38:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 8004e3a:	4039      	ands	r1, r7
 8004e3c:	4301      	orrs	r1, r0
 8004e3e:	6251      	str	r1, [r2, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004e40:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8004e42:	6999      	ldr	r1, [r3, #24]
 8004e44:	6191      	str	r1, [r2, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004e46:	d803      	bhi.n	8004e50 <HAL_DMA2D_ConfigLayer+0x5c>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8004e48:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8004e4a:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8004e4e:	6291      	str	r1, [r2, #40]	@ 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004e50:	2201      	movs	r2, #1

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8004e52:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004e54:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
  __HAL_UNLOCK(hdma2d);
 8004e58:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38

  return HAL_OK;
}
 8004e5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8004e5e:	69d1      	ldr	r1, [r2, #28]
 8004e60:	4039      	ands	r1, r7
 8004e62:	4301      	orrs	r1, r0
 8004e64:	61d1      	str	r1, [r2, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004e66:	1999      	adds	r1, r3, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004e68:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004e6a:	6989      	ldr	r1, [r1, #24]
 8004e6c:	6111      	str	r1, [r2, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8004e6e:	bf9c      	itt	ls
 8004e70:	f025 457f 	bicls.w	r5, r5, #4278190080	@ 0xff000000
 8004e74:	6215      	strls	r5, [r2, #32]
 8004e76:	e7eb      	b.n	8004e50 <HAL_DMA2D_ConfigLayer+0x5c>
 8004e78:	00fcfff0 	.word	0x00fcfff0

08004e7c <FLASH_Program_DoubleWord>:
{
  /* Check the parameters */
  assert_param(IS_FLASH_ADDRESS(Address));
  
  /* If the previous operation is completed, proceed to program the new data */
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8004e7c:	4909      	ldr	r1, [pc, #36]	@ (8004ea4 <FLASH_Program_DoubleWord+0x28>)
{
 8004e7e:	b510      	push	{r4, lr}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8004e80:	690c      	ldr	r4, [r1, #16]
 8004e82:	f424 7440 	bic.w	r4, r4, #768	@ 0x300
 8004e86:	610c      	str	r4, [r1, #16]
  FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 8004e88:	690c      	ldr	r4, [r1, #16]
 8004e8a:	f444 7440 	orr.w	r4, r4, #768	@ 0x300
 8004e8e:	610c      	str	r4, [r1, #16]
  FLASH->CR |= FLASH_CR_PG;
 8004e90:	690c      	ldr	r4, [r1, #16]
 8004e92:	f044 0401 	orr.w	r4, r4, #1
 8004e96:	610c      	str	r4, [r1, #16]

  /* Program first word */
  *(__IO uint32_t*)Address = (uint32_t)Data;
 8004e98:	6002      	str	r2, [r0, #0]
 8004e9a:	f3bf 8f6f 	isb	sy
  /* Barrier to ensure programming is performed in 2 steps, in right order
    (independently of compiler optimization behavior) */
  __ISB();

  /* Program second word */
  *(__IO uint32_t*)(Address+4) = (uint32_t)(Data >> 32);
 8004e9e:	6043      	str	r3, [r0, #4]
}
 8004ea0:	bd10      	pop	{r4, pc}
 8004ea2:	bf00      	nop
 8004ea4:	40023c00 	.word	0x40023c00

08004ea8 <FLASH_Program_Word>:
{
  /* Check the parameters */
  assert_param(IS_FLASH_ADDRESS(Address));
  
  /* If the previous operation is completed, proceed to program the new data */
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8004ea8:	4b07      	ldr	r3, [pc, #28]	@ (8004ec8 <FLASH_Program_Word+0x20>)
 8004eaa:	691a      	ldr	r2, [r3, #16]
 8004eac:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 8004eb0:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_WORD;
 8004eb2:	691a      	ldr	r2, [r3, #16]
 8004eb4:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004eb8:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8004eba:	691a      	ldr	r2, [r3, #16]
 8004ebc:	f042 0201 	orr.w	r2, r2, #1
 8004ec0:	611a      	str	r2, [r3, #16]

  *(__IO uint32_t*)Address = Data;
 8004ec2:	6001      	str	r1, [r0, #0]
}
 8004ec4:	4770      	bx	lr
 8004ec6:	bf00      	nop
 8004ec8:	40023c00 	.word	0x40023c00

08004ecc <FLASH_Program_HalfWord>:
{
  /* Check the parameters */
  assert_param(IS_FLASH_ADDRESS(Address));
  
  /* If the previous operation is completed, proceed to program the new data */
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8004ecc:	4b07      	ldr	r3, [pc, #28]	@ (8004eec <FLASH_Program_HalfWord+0x20>)
 8004ece:	691a      	ldr	r2, [r3, #16]
 8004ed0:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 8004ed4:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 8004ed6:	691a      	ldr	r2, [r3, #16]
 8004ed8:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004edc:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8004ede:	691a      	ldr	r2, [r3, #16]
 8004ee0:	f042 0201 	orr.w	r2, r2, #1
 8004ee4:	611a      	str	r2, [r3, #16]

  *(__IO uint16_t*)Address = Data;
 8004ee6:	8001      	strh	r1, [r0, #0]
}
 8004ee8:	4770      	bx	lr
 8004eea:	bf00      	nop
 8004eec:	40023c00 	.word	0x40023c00

08004ef0 <FLASH_SetErrorCode>:
  * @brief  Set the specific FLASH error flag.
  * @retval None
  */
static void FLASH_SetErrorCode(void)
{ 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_WRPERR) != RESET)
 8004ef0:	4b20      	ldr	r3, [pc, #128]	@ (8004f74 <FLASH_SetErrorCode+0x84>)
 8004ef2:	68da      	ldr	r2, [r3, #12]
 8004ef4:	06d0      	lsls	r0, r2, #27
 8004ef6:	d506      	bpl.n	8004f06 <FLASH_SetErrorCode+0x16>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 8004ef8:	491f      	ldr	r1, [pc, #124]	@ (8004f78 <FLASH_SetErrorCode+0x88>)
 8004efa:	69ca      	ldr	r2, [r1, #28]
 8004efc:	f042 0210 	orr.w	r2, r2, #16
 8004f00:	61ca      	str	r2, [r1, #28]
   
   /* Clear FLASH write protection error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 8004f02:	2210      	movs	r2, #16
 8004f04:	60da      	str	r2, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGAERR) != RESET)
 8004f06:	68da      	ldr	r2, [r3, #12]
 8004f08:	0691      	lsls	r1, r2, #26
 8004f0a:	d506      	bpl.n	8004f1a <FLASH_SetErrorCode+0x2a>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 8004f0c:	491a      	ldr	r1, [pc, #104]	@ (8004f78 <FLASH_SetErrorCode+0x88>)
 8004f0e:	69ca      	ldr	r2, [r1, #28]
 8004f10:	f042 0208 	orr.w	r2, r2, #8
 8004f14:	61ca      	str	r2, [r1, #28]
   
   /* Clear FLASH Programming alignment error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 8004f16:	2220      	movs	r2, #32
 8004f18:	60da      	str	r2, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGPERR) != RESET)
 8004f1a:	4b16      	ldr	r3, [pc, #88]	@ (8004f74 <FLASH_SetErrorCode+0x84>)
 8004f1c:	68da      	ldr	r2, [r3, #12]
 8004f1e:	0652      	lsls	r2, r2, #25
 8004f20:	d506      	bpl.n	8004f30 <FLASH_SetErrorCode+0x40>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 8004f22:	4915      	ldr	r1, [pc, #84]	@ (8004f78 <FLASH_SetErrorCode+0x88>)
 8004f24:	69ca      	ldr	r2, [r1, #28]
 8004f26:	f042 0204 	orr.w	r2, r2, #4
 8004f2a:	61ca      	str	r2, [r1, #28]
    
    /* Clear FLASH Programming parallelism error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 8004f2c:	2240      	movs	r2, #64	@ 0x40
 8004f2e:	60da      	str	r2, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGSERR) != RESET)
 8004f30:	68da      	ldr	r2, [r3, #12]
 8004f32:	0610      	lsls	r0, r2, #24
 8004f34:	d506      	bpl.n	8004f44 <FLASH_SetErrorCode+0x54>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 8004f36:	4910      	ldr	r1, [pc, #64]	@ (8004f78 <FLASH_SetErrorCode+0x88>)
 8004f38:	69ca      	ldr	r2, [r1, #28]
 8004f3a:	f042 0202 	orr.w	r2, r2, #2
 8004f3e:	61ca      	str	r2, [r1, #28]
    
    /* Clear FLASH Programming sequence error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 8004f40:	2280      	movs	r2, #128	@ 0x80
 8004f42:	60da      	str	r2, [r3, #12]
  }
#if defined(FLASH_SR_RDERR) 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_RDERR) != RESET)
 8004f44:	4b0b      	ldr	r3, [pc, #44]	@ (8004f74 <FLASH_SetErrorCode+0x84>)
 8004f46:	68da      	ldr	r2, [r3, #12]
 8004f48:	05d1      	lsls	r1, r2, #23
 8004f4a:	d507      	bpl.n	8004f5c <FLASH_SetErrorCode+0x6c>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 8004f4c:	490a      	ldr	r1, [pc, #40]	@ (8004f78 <FLASH_SetErrorCode+0x88>)
 8004f4e:	69ca      	ldr	r2, [r1, #28]
 8004f50:	f042 0201 	orr.w	r2, r2, #1
 8004f54:	61ca      	str	r2, [r1, #28]
    
    /* Clear FLASH Proprietary readout protection error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 8004f56:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8004f5a:	60da      	str	r2, [r3, #12]
  }
#endif /* FLASH_SR_RDERR */  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_OPERR) != RESET)
 8004f5c:	68da      	ldr	r2, [r3, #12]
 8004f5e:	0792      	lsls	r2, r2, #30
 8004f60:	d506      	bpl.n	8004f70 <FLASH_SetErrorCode+0x80>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 8004f62:	4905      	ldr	r1, [pc, #20]	@ (8004f78 <FLASH_SetErrorCode+0x88>)
 8004f64:	69ca      	ldr	r2, [r1, #28]
 8004f66:	f042 0220 	orr.w	r2, r2, #32
 8004f6a:	61ca      	str	r2, [r1, #28]
    
    /* Clear FLASH Operation error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 8004f6c:	2202      	movs	r2, #2
 8004f6e:	60da      	str	r2, [r3, #12]
  }
}
 8004f70:	4770      	bx	lr
 8004f72:	bf00      	nop
 8004f74:	40023c00 	.word	0x40023c00
 8004f78:	20000be4 	.word	0x20000be4

08004f7c <HAL_FLASH_Unlock>:
  if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 8004f7c:	4b06      	ldr	r3, [pc, #24]	@ (8004f98 <HAL_FLASH_Unlock+0x1c>)
 8004f7e:	691a      	ldr	r2, [r3, #16]
 8004f80:	2a00      	cmp	r2, #0
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 8004f82:	bfbf      	itttt	lt
 8004f84:	4a05      	ldrlt	r2, [pc, #20]	@ (8004f9c <HAL_FLASH_Unlock+0x20>)
 8004f86:	605a      	strlt	r2, [r3, #4]
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 8004f88:	f102 3288 	addlt.w	r2, r2, #2290649224	@ 0x88888888
 8004f8c:	605a      	strlt	r2, [r3, #4]
    if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 8004f8e:	bfba      	itte	lt
 8004f90:	6918      	ldrlt	r0, [r3, #16]
 8004f92:	0fc0      	lsrlt	r0, r0, #31
  HAL_StatusTypeDef status = HAL_OK;
 8004f94:	2000      	movge	r0, #0
}
 8004f96:	4770      	bx	lr
 8004f98:	40023c00 	.word	0x40023c00
 8004f9c:	45670123 	.word	0x45670123

08004fa0 <HAL_FLASH_Lock>:
  FLASH->CR |= FLASH_CR_LOCK;
 8004fa0:	4a03      	ldr	r2, [pc, #12]	@ (8004fb0 <HAL_FLASH_Lock+0x10>)
 8004fa2:	6913      	ldr	r3, [r2, #16]
 8004fa4:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8004fa8:	6113      	str	r3, [r2, #16]
}
 8004faa:	2000      	movs	r0, #0
 8004fac:	4770      	bx	lr
 8004fae:	bf00      	nop
 8004fb0:	40023c00 	.word	0x40023c00

08004fb4 <HAL_FLASH_GetError>:
   return pFlash.ErrorCode;
 8004fb4:	4b01      	ldr	r3, [pc, #4]	@ (8004fbc <HAL_FLASH_GetError+0x8>)
 8004fb6:	69d8      	ldr	r0, [r3, #28]
}  
 8004fb8:	4770      	bx	lr
 8004fba:	bf00      	nop
 8004fbc:	20000be4 	.word	0x20000be4

08004fc0 <FLASH_WaitForLastOperation>:
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8004fc0:	4b11      	ldr	r3, [pc, #68]	@ (8005008 <FLASH_WaitForLastOperation+0x48>)
{ 
 8004fc2:	b570      	push	{r4, r5, r6, lr}
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8004fc4:	2200      	movs	r2, #0
{ 
 8004fc6:	4604      	mov	r4, r0
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8004fc8:	61da      	str	r2, [r3, #28]
  tickstart = HAL_GetTick();
 8004fca:	f7ff fbc9 	bl	8004760 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8004fce:	4d0f      	ldr	r5, [pc, #60]	@ (800500c <FLASH_WaitForLastOperation+0x4c>)
  tickstart = HAL_GetTick();
 8004fd0:	4606      	mov	r6, r0
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8004fd2:	68eb      	ldr	r3, [r5, #12]
 8004fd4:	03da      	lsls	r2, r3, #15
 8004fd6:	d40c      	bmi.n	8004ff2 <FLASH_WaitForLastOperation+0x32>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8004fd8:	68eb      	ldr	r3, [r5, #12]
 8004fda:	07db      	lsls	r3, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 8004fdc:	bf44      	itt	mi
 8004fde:	2301      	movmi	r3, #1
 8004fe0:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 8004fe2:	68e8      	ldr	r0, [r5, #12]
 8004fe4:	f410 70f9 	ands.w	r0, r0, #498	@ 0x1f2
 8004fe8:	d007      	beq.n	8004ffa <FLASH_WaitForLastOperation+0x3a>
    FLASH_SetErrorCode();
 8004fea:	f7ff ff81 	bl	8004ef0 <FLASH_SetErrorCode>
    return HAL_ERROR;
 8004fee:	2001      	movs	r0, #1
 8004ff0:	e003      	b.n	8004ffa <FLASH_WaitForLastOperation+0x3a>
    if(Timeout != HAL_MAX_DELAY)
 8004ff2:	1c61      	adds	r1, r4, #1
 8004ff4:	d0ed      	beq.n	8004fd2 <FLASH_WaitForLastOperation+0x12>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8004ff6:	b90c      	cbnz	r4, 8004ffc <FLASH_WaitForLastOperation+0x3c>
        return HAL_TIMEOUT;
 8004ff8:	2003      	movs	r0, #3
}  
 8004ffa:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8004ffc:	f7ff fbb0 	bl	8004760 <HAL_GetTick>
 8005000:	1b80      	subs	r0, r0, r6
 8005002:	42a0      	cmp	r0, r4
 8005004:	d9e5      	bls.n	8004fd2 <FLASH_WaitForLastOperation+0x12>
 8005006:	e7f7      	b.n	8004ff8 <FLASH_WaitForLastOperation+0x38>
 8005008:	20000be4 	.word	0x20000be4
 800500c:	40023c00 	.word	0x40023c00

08005010 <HAL_FLASH_Program>:
{
 8005010:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(&pFlash);
 8005014:	4e1f      	ldr	r6, [pc, #124]	@ (8005094 <HAL_FLASH_Program+0x84>)
{
 8005016:	4698      	mov	r8, r3
  __HAL_LOCK(&pFlash);
 8005018:	7e33      	ldrb	r3, [r6, #24]
 800501a:	2b01      	cmp	r3, #1
{
 800501c:	4607      	mov	r7, r0
 800501e:	460d      	mov	r5, r1
 8005020:	4614      	mov	r4, r2
  __HAL_LOCK(&pFlash);
 8005022:	d035      	beq.n	8005090 <HAL_FLASH_Program+0x80>
 8005024:	2301      	movs	r3, #1
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8005026:	f24c 3050 	movw	r0, #50000	@ 0xc350
  __HAL_LOCK(&pFlash);
 800502a:	7633      	strb	r3, [r6, #24]
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800502c:	f7ff ffc8 	bl	8004fc0 <FLASH_WaitForLastOperation>
  if(status == HAL_OK)
 8005030:	b9b0      	cbnz	r0, 8005060 <HAL_FLASH_Program+0x50>
    if(TypeProgram == FLASH_TYPEPROGRAM_BYTE)
 8005032:	b9cf      	cbnz	r7, 8005068 <HAL_FLASH_Program+0x58>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8005034:	4b18      	ldr	r3, [pc, #96]	@ (8005098 <HAL_FLASH_Program+0x88>)
 8005036:	691a      	ldr	r2, [r3, #16]
 8005038:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 800503c:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_BYTE;
 800503e:	691a      	ldr	r2, [r3, #16]
 8005040:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8005042:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_Byte(Address, (uint8_t) Data);
 8005044:	b2e4      	uxtb	r4, r4
  FLASH->CR |= FLASH_CR_PG;
 8005046:	f042 0201 	orr.w	r2, r2, #1
 800504a:	611a      	str	r2, [r3, #16]
  *(__IO uint8_t*)Address = Data;
 800504c:	702c      	strb	r4, [r5, #0]
    status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800504e:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8005052:	f7ff ffb5 	bl	8004fc0 <FLASH_WaitForLastOperation>
    FLASH->CR &= (~FLASH_CR_PG);  
 8005056:	4a10      	ldr	r2, [pc, #64]	@ (8005098 <HAL_FLASH_Program+0x88>)
 8005058:	6913      	ldr	r3, [r2, #16]
 800505a:	f023 0301 	bic.w	r3, r3, #1
 800505e:	6113      	str	r3, [r2, #16]
  __HAL_UNLOCK(&pFlash);
 8005060:	2300      	movs	r3, #0
 8005062:	7633      	strb	r3, [r6, #24]
}
 8005064:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 8005068:	2f01      	cmp	r7, #1
 800506a:	d104      	bne.n	8005076 <HAL_FLASH_Program+0x66>
      FLASH_Program_HalfWord(Address, (uint16_t) Data);
 800506c:	b2a1      	uxth	r1, r4
 800506e:	4628      	mov	r0, r5
 8005070:	f7ff ff2c 	bl	8004ecc <FLASH_Program_HalfWord>
 8005074:	e7eb      	b.n	800504e <HAL_FLASH_Program+0x3e>
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 8005076:	2f02      	cmp	r7, #2
 8005078:	d104      	bne.n	8005084 <HAL_FLASH_Program+0x74>
      FLASH_Program_Word(Address, (uint32_t) Data);
 800507a:	4621      	mov	r1, r4
 800507c:	4628      	mov	r0, r5
 800507e:	f7ff ff13 	bl	8004ea8 <FLASH_Program_Word>
 8005082:	e7e4      	b.n	800504e <HAL_FLASH_Program+0x3e>
      FLASH_Program_DoubleWord(Address, Data);
 8005084:	4622      	mov	r2, r4
 8005086:	4643      	mov	r3, r8
 8005088:	4628      	mov	r0, r5
 800508a:	f7ff fef7 	bl	8004e7c <FLASH_Program_DoubleWord>
 800508e:	e7de      	b.n	800504e <HAL_FLASH_Program+0x3e>
  __HAL_LOCK(&pFlash);
 8005090:	2002      	movs	r0, #2
 8005092:	e7e7      	b.n	8005064 <HAL_FLASH_Program+0x54>
 8005094:	20000be4 	.word	0x20000be4
 8005098:	40023c00 	.word	0x40023c00

0800509c <FLASH_MassErase>:
  /* Check the parameters */
  assert_param(IS_VOLTAGERANGE(VoltageRange));
  assert_param(IS_FLASH_BANK(Banks));

  /* if the previous operation is completed, proceed to erase all sectors */
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800509c:	4b0c      	ldr	r3, [pc, #48]	@ (80050d0 <FLASH_MassErase+0x34>)
 800509e:	691a      	ldr	r2, [r3, #16]
 80050a0:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 80050a4:	611a      	str	r2, [r3, #16]

  if (Banks == FLASH_BANK_BOTH)
 80050a6:	2903      	cmp	r1, #3
  {
    /* bank1 & bank2 will be erased*/
    FLASH->CR |= FLASH_MER_BIT;
 80050a8:	691a      	ldr	r2, [r3, #16]
  if (Banks == FLASH_BANK_BOTH)
 80050aa:	d10b      	bne.n	80050c4 <FLASH_MassErase+0x28>
    FLASH->CR |= FLASH_MER_BIT;
 80050ac:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
  }
  else if (Banks == FLASH_BANK_1)
  {
    /*Only bank1 will be erased*/
    FLASH->CR |= FLASH_CR_MER1;
 80050b0:	f042 0204 	orr.w	r2, r2, #4
  }
  else
  {
    /*Only bank2 will be erased*/
    FLASH->CR |= FLASH_CR_MER2;
 80050b4:	611a      	str	r2, [r3, #16]
  }
  FLASH->CR |= FLASH_CR_STRT | ((uint32_t)VoltageRange << 8U);
 80050b6:	691a      	ldr	r2, [r3, #16]
 80050b8:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
 80050bc:	f440 3080 	orr.w	r0, r0, #65536	@ 0x10000
 80050c0:	6118      	str	r0, [r3, #16]
}
 80050c2:	4770      	bx	lr
  else if (Banks == FLASH_BANK_1)
 80050c4:	2901      	cmp	r1, #1
 80050c6:	d0f3      	beq.n	80050b0 <FLASH_MassErase+0x14>
    FLASH->CR |= FLASH_CR_MER2;
 80050c8:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80050cc:	e7f2      	b.n	80050b4 <FLASH_MassErase+0x18>
 80050ce:	bf00      	nop
 80050d0:	40023c00 	.word	0x40023c00

080050d4 <FLASH_Erase_Sector>:
  if (Sector > FLASH_SECTOR_11)
  {
    Sector += 4U;
  }
  /* If the previous operation is completed, proceed to erase the sector */
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 80050d4:	4b0f      	ldr	r3, [pc, #60]	@ (8005114 <FLASH_Erase_Sector+0x40>)
 80050d6:	691a      	ldr	r2, [r3, #16]
 80050d8:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 80050dc:	611a      	str	r2, [r3, #16]
  FLASH->CR |= tmp_psize;
 80050de:	691a      	ldr	r2, [r3, #16]
 80050e0:	2902      	cmp	r1, #2
 80050e2:	bf94      	ite	ls
 80050e4:	0209      	lslls	r1, r1, #8
{
 80050e6:	f44f 7140 	movhi.w	r1, #768	@ 0x300
  FLASH->CR |= tmp_psize;
 80050ea:	430a      	orrs	r2, r1
 80050ec:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 80050ee:	691a      	ldr	r2, [r3, #16]
 80050f0:	f022 02f8 	bic.w	r2, r2, #248	@ 0xf8
 80050f4:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 80050f6:	691a      	ldr	r2, [r3, #16]
  if (Sector > FLASH_SECTOR_11)
 80050f8:	280b      	cmp	r0, #11
    Sector += 4U;
 80050fa:	bf88      	it	hi
 80050fc:	3004      	addhi	r0, #4
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 80050fe:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 8005102:	f042 0202 	orr.w	r2, r2, #2
 8005106:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_STRT;
 8005108:	691a      	ldr	r2, [r3, #16]
 800510a:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 800510e:	611a      	str	r2, [r3, #16]
}
 8005110:	4770      	bx	lr
 8005112:	bf00      	nop
 8005114:	40023c00 	.word	0x40023c00

08005118 <FLASH_FlushCaches>:
  * @retval None
  */
void FLASH_FlushCaches(void)
{
  /* Flush instruction cache  */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_ICEN) != RESET)
 8005118:	4b14      	ldr	r3, [pc, #80]	@ (800516c <FLASH_FlushCaches+0x54>)
 800511a:	681a      	ldr	r2, [r3, #0]
 800511c:	0591      	lsls	r1, r2, #22
 800511e:	d50f      	bpl.n	8005140 <FLASH_FlushCaches+0x28>
  {
    /* Disable instruction cache  */
    __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
 8005120:	681a      	ldr	r2, [r3, #0]
 8005122:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8005126:	601a      	str	r2, [r3, #0]
    /* Reset instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_RESET();
 8005128:	681a      	ldr	r2, [r3, #0]
 800512a:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800512e:	601a      	str	r2, [r3, #0]
 8005130:	681a      	ldr	r2, [r3, #0]
 8005132:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8005136:	601a      	str	r2, [r3, #0]
    /* Enable instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8005138:	681a      	ldr	r2, [r3, #0]
 800513a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800513e:	601a      	str	r2, [r3, #0]
  }

  /* Flush data cache */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_DCEN) != RESET)
 8005140:	4b0a      	ldr	r3, [pc, #40]	@ (800516c <FLASH_FlushCaches+0x54>)
 8005142:	681a      	ldr	r2, [r3, #0]
 8005144:	0552      	lsls	r2, r2, #21
 8005146:	d50f      	bpl.n	8005168 <FLASH_FlushCaches+0x50>
  {
    /* Disable data cache  */
    __HAL_FLASH_DATA_CACHE_DISABLE();
 8005148:	681a      	ldr	r2, [r3, #0]
 800514a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800514e:	601a      	str	r2, [r3, #0]
    /* Reset data cache */
    __HAL_FLASH_DATA_CACHE_RESET();
 8005150:	681a      	ldr	r2, [r3, #0]
 8005152:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8005156:	601a      	str	r2, [r3, #0]
 8005158:	681a      	ldr	r2, [r3, #0]
 800515a:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 800515e:	601a      	str	r2, [r3, #0]
    /* Enable data cache */
    __HAL_FLASH_DATA_CACHE_ENABLE();
 8005160:	681a      	ldr	r2, [r3, #0]
 8005162:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8005166:	601a      	str	r2, [r3, #0]
  }
}
 8005168:	4770      	bx	lr
 800516a:	bf00      	nop
 800516c:	40023c00 	.word	0x40023c00

08005170 <HAL_FLASHEx_Erase>:
{
 8005170:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  __HAL_LOCK(&pFlash);
 8005174:	f8df 809c 	ldr.w	r8, [pc, #156]	@ 8005214 <HAL_FLASHEx_Erase+0xa4>
 8005178:	f898 3018 	ldrb.w	r3, [r8, #24]
 800517c:	2b01      	cmp	r3, #1
{
 800517e:	4605      	mov	r5, r0
 8005180:	460f      	mov	r7, r1
  __HAL_LOCK(&pFlash);
 8005182:	d042      	beq.n	800520a <HAL_FLASHEx_Erase+0x9a>
 8005184:	2301      	movs	r3, #1
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8005186:	f24c 3050 	movw	r0, #50000	@ 0xc350
  __HAL_LOCK(&pFlash);
 800518a:	f888 3018 	strb.w	r3, [r8, #24]
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800518e:	f7ff ff17 	bl	8004fc0 <FLASH_WaitForLastOperation>
  if (status == HAL_OK)
 8005192:	4604      	mov	r4, r0
 8005194:	b9b8      	cbnz	r0, 80051c6 <HAL_FLASHEx_Erase+0x56>
    *SectorError = 0xFFFFFFFFU;
 8005196:	f04f 33ff 	mov.w	r3, #4294967295
 800519a:	603b      	str	r3, [r7, #0]
    if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 800519c:	682b      	ldr	r3, [r5, #0]
 800519e:	2b01      	cmp	r3, #1
 80051a0:	d117      	bne.n	80051d2 <HAL_FLASHEx_Erase+0x62>
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 80051a2:	6869      	ldr	r1, [r5, #4]
 80051a4:	7c28      	ldrb	r0, [r5, #16]
 80051a6:	f7ff ff79 	bl	800509c <FLASH_MassErase>
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 80051aa:	f24c 3050 	movw	r0, #50000	@ 0xc350
 80051ae:	f7ff ff07 	bl	8004fc0 <FLASH_WaitForLastOperation>
      FLASH->CR &= (~FLASH_MER_BIT);
 80051b2:	4a17      	ldr	r2, [pc, #92]	@ (8005210 <HAL_FLASHEx_Erase+0xa0>)
 80051b4:	6913      	ldr	r3, [r2, #16]
 80051b6:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 80051ba:	f023 0304 	bic.w	r3, r3, #4
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 80051be:	4604      	mov	r4, r0
      FLASH->CR &= (~FLASH_MER_BIT);
 80051c0:	6113      	str	r3, [r2, #16]
    FLASH_FlushCaches();
 80051c2:	f7ff ffa9 	bl	8005118 <FLASH_FlushCaches>
  __HAL_UNLOCK(&pFlash);
 80051c6:	2300      	movs	r3, #0
 80051c8:	f888 3018 	strb.w	r3, [r8, #24]
}
 80051cc:	4620      	mov	r0, r4
 80051ce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 80051d2:	68ae      	ldr	r6, [r5, #8]
        CLEAR_BIT(FLASH->CR, (FLASH_CR_SER | FLASH_CR_SNB));
 80051d4:	f8df 9038 	ldr.w	r9, [pc, #56]	@ 8005210 <HAL_FLASHEx_Erase+0xa0>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 80051d8:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 80051dc:	4413      	add	r3, r2
 80051de:	42b3      	cmp	r3, r6
 80051e0:	d9ef      	bls.n	80051c2 <HAL_FLASHEx_Erase+0x52>
        FLASH_Erase_Sector(index, (uint8_t) pEraseInit->VoltageRange);
 80051e2:	7c29      	ldrb	r1, [r5, #16]
 80051e4:	4630      	mov	r0, r6
 80051e6:	f7ff ff75 	bl	80050d4 <FLASH_Erase_Sector>
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 80051ea:	f24c 3050 	movw	r0, #50000	@ 0xc350
 80051ee:	f7ff fee7 	bl	8004fc0 <FLASH_WaitForLastOperation>
        CLEAR_BIT(FLASH->CR, (FLASH_CR_SER | FLASH_CR_SNB));
 80051f2:	f8d9 3010 	ldr.w	r3, [r9, #16]
 80051f6:	f023 03fa 	bic.w	r3, r3, #250	@ 0xfa
 80051fa:	f8c9 3010 	str.w	r3, [r9, #16]
        if (status != HAL_OK)
 80051fe:	b110      	cbz	r0, 8005206 <HAL_FLASHEx_Erase+0x96>
          *SectorError = index;
 8005200:	603e      	str	r6, [r7, #0]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8005202:	4604      	mov	r4, r0
          break;
 8005204:	e7dd      	b.n	80051c2 <HAL_FLASHEx_Erase+0x52>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 8005206:	3601      	adds	r6, #1
 8005208:	e7e6      	b.n	80051d8 <HAL_FLASHEx_Erase+0x68>
  __HAL_LOCK(&pFlash);
 800520a:	2402      	movs	r4, #2
 800520c:	e7de      	b.n	80051cc <HAL_FLASHEx_Erase+0x5c>
 800520e:	bf00      	nop
 8005210:	40023c00 	.word	0x40023c00
 8005214:	20000be4 	.word	0x20000be4

08005218 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8005218:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800521c:	f8df 91bc 	ldr.w	r9, [pc, #444]	@ 80053dc <HAL_GPIO_Init+0x1c4>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8005220:	4a6c      	ldr	r2, [pc, #432]	@ (80053d4 <HAL_GPIO_Init+0x1bc>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 8005222:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8005224:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8005226:	2401      	movs	r4, #1
 8005228:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800522a:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 800522e:	43ac      	bics	r4, r5
 8005230:	f040 80b7 	bne.w	80053a2 <HAL_GPIO_Init+0x18a>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8005234:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8005236:	2703      	movs	r7, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8005238:	f005 0403 	and.w	r4, r5, #3
 800523c:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8005240:	fa07 fc08 	lsl.w	ip, r7, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8005244:	1e67      	subs	r7, r4, #1
 8005246:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8005248:	ea6f 0c0c 	mvn.w	ip, ip
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800524c:	d834      	bhi.n	80052b8 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 800524e:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8005250:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2U));
 8005254:	68cf      	ldr	r7, [r1, #12]
 8005256:	fa07 f708 	lsl.w	r7, r7, r8
 800525a:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800525e:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8005260:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8005262:	ea27 0e06 	bic.w	lr, r7, r6
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8005266:	f3c5 1700 	ubfx	r7, r5, #4, #1
 800526a:	409f      	lsls	r7, r3
 800526c:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 8005270:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8005272:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8005274:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8005278:	688f      	ldr	r7, [r1, #8]
 800527a:	fa07 f708 	lsl.w	r7, r7, r8
 800527e:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8005282:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 8005284:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8005286:	d119      	bne.n	80052bc <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 8005288:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 800528c:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8005290:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8005294:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8005298:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 800529c:	f04f 0e0f 	mov.w	lr, #15
 80052a0:	fa0e fe0b 	lsl.w	lr, lr, fp
 80052a4:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80052a8:	690f      	ldr	r7, [r1, #16]
 80052aa:	fa07 f70b 	lsl.w	r7, r7, fp
 80052ae:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 80052b2:	f8ca 7020 	str.w	r7, [sl, #32]
 80052b6:	e001      	b.n	80052bc <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80052b8:	2c03      	cmp	r4, #3
 80052ba:	d1da      	bne.n	8005272 <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 80052bc:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80052be:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80052c2:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80052c6:	433c      	orrs	r4, r7
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80052c8:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      GPIOx->MODER = temp;
 80052cc:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80052ce:	d068      	beq.n	80053a2 <HAL_GPIO_Init+0x18a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80052d0:	2400      	movs	r4, #0
 80052d2:	9401      	str	r4, [sp, #4]
 80052d4:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 80052d8:	f444 4480 	orr.w	r4, r4, #16384	@ 0x4000
 80052dc:	f8c9 4044 	str.w	r4, [r9, #68]	@ 0x44
 80052e0:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 80052e4:	f023 0703 	bic.w	r7, r3, #3
 80052e8:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 80052ec:	f404 4480 	and.w	r4, r4, #16384	@ 0x4000
 80052f0:	f507 379c 	add.w	r7, r7, #79872	@ 0x13800
 80052f4:	9401      	str	r4, [sp, #4]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80052f6:	f003 0c03 	and.w	ip, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80052fa:	9c01      	ldr	r4, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 80052fc:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8005300:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8005304:	240f      	movs	r4, #15
 8005306:	fa04 f40c 	lsl.w	r4, r4, ip
 800530a:	ea2e 0e04 	bic.w	lr, lr, r4
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800530e:	4c32      	ldr	r4, [pc, #200]	@ (80053d8 <HAL_GPIO_Init+0x1c0>)
 8005310:	42a0      	cmp	r0, r4
 8005312:	d04d      	beq.n	80053b0 <HAL_GPIO_Init+0x198>
 8005314:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005318:	42a0      	cmp	r0, r4
 800531a:	d04b      	beq.n	80053b4 <HAL_GPIO_Init+0x19c>
 800531c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005320:	42a0      	cmp	r0, r4
 8005322:	d049      	beq.n	80053b8 <HAL_GPIO_Init+0x1a0>
 8005324:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005328:	42a0      	cmp	r0, r4
 800532a:	d047      	beq.n	80053bc <HAL_GPIO_Init+0x1a4>
 800532c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005330:	42a0      	cmp	r0, r4
 8005332:	d045      	beq.n	80053c0 <HAL_GPIO_Init+0x1a8>
 8005334:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005338:	42a0      	cmp	r0, r4
 800533a:	d043      	beq.n	80053c4 <HAL_GPIO_Init+0x1ac>
 800533c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005340:	42a0      	cmp	r0, r4
 8005342:	d041      	beq.n	80053c8 <HAL_GPIO_Init+0x1b0>
 8005344:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005348:	42a0      	cmp	r0, r4
 800534a:	d03f      	beq.n	80053cc <HAL_GPIO_Init+0x1b4>
 800534c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005350:	42a0      	cmp	r0, r4
 8005352:	d03d      	beq.n	80053d0 <HAL_GPIO_Init+0x1b8>
 8005354:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005358:	42a0      	cmp	r0, r4
 800535a:	bf14      	ite	ne
 800535c:	240a      	movne	r4, #10
 800535e:	2409      	moveq	r4, #9
 8005360:	fa04 f40c 	lsl.w	r4, r4, ip
 8005364:	ea44 040e 	orr.w	r4, r4, lr
        SYSCFG->EXTICR[position >> 2U] = temp;
 8005368:	60bc      	str	r4, [r7, #8]
        temp = EXTI->RTSR;
 800536a:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 800536c:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800536e:	f415 1f80 	tst.w	r5, #1048576	@ 0x100000
        temp &= ~((uint32_t)iocurrent);
 8005372:	bf0c      	ite	eq
 8005374:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8005376:	4334      	orrne	r4, r6
        }
        EXTI->RTSR = temp;
 8005378:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 800537a:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800537c:	f415 1f00 	tst.w	r5, #2097152	@ 0x200000
        temp &= ~((uint32_t)iocurrent);
 8005380:	bf0c      	ite	eq
 8005382:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8005384:	4334      	orrne	r4, r6
        }
        EXTI->FTSR = temp;
 8005386:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 8005388:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800538a:	f415 3f00 	tst.w	r5, #131072	@ 0x20000
        temp &= ~((uint32_t)iocurrent);
 800538e:	bf0c      	ite	eq
 8005390:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8005392:	4334      	orrne	r4, r6
        }
        EXTI->EMR = temp;
 8005394:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8005396:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8005398:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 800539a:	bf54      	ite	pl
 800539c:	403c      	andpl	r4, r7
        {
          temp |= iocurrent;
 800539e:	4334      	orrmi	r4, r6
        }
        EXTI->IMR = temp;
 80053a0:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80053a2:	3301      	adds	r3, #1
 80053a4:	2b10      	cmp	r3, #16
 80053a6:	f47f af3d 	bne.w	8005224 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 80053aa:	b003      	add	sp, #12
 80053ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80053b0:	2400      	movs	r4, #0
 80053b2:	e7d5      	b.n	8005360 <HAL_GPIO_Init+0x148>
 80053b4:	2401      	movs	r4, #1
 80053b6:	e7d3      	b.n	8005360 <HAL_GPIO_Init+0x148>
 80053b8:	2402      	movs	r4, #2
 80053ba:	e7d1      	b.n	8005360 <HAL_GPIO_Init+0x148>
 80053bc:	2403      	movs	r4, #3
 80053be:	e7cf      	b.n	8005360 <HAL_GPIO_Init+0x148>
 80053c0:	2404      	movs	r4, #4
 80053c2:	e7cd      	b.n	8005360 <HAL_GPIO_Init+0x148>
 80053c4:	2405      	movs	r4, #5
 80053c6:	e7cb      	b.n	8005360 <HAL_GPIO_Init+0x148>
 80053c8:	2406      	movs	r4, #6
 80053ca:	e7c9      	b.n	8005360 <HAL_GPIO_Init+0x148>
 80053cc:	2407      	movs	r4, #7
 80053ce:	e7c7      	b.n	8005360 <HAL_GPIO_Init+0x148>
 80053d0:	2408      	movs	r4, #8
 80053d2:	e7c5      	b.n	8005360 <HAL_GPIO_Init+0x148>
 80053d4:	40013c00 	.word	0x40013c00
 80053d8:	40020000 	.word	0x40020000
 80053dc:	40023800 	.word	0x40023800

080053e0 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 80053e0:	6903      	ldr	r3, [r0, #16]
 80053e2:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 80053e4:	bf14      	ite	ne
 80053e6:	2001      	movne	r0, #1
 80053e8:	2000      	moveq	r0, #0
 80053ea:	4770      	bx	lr

080053ec <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80053ec:	b10a      	cbz	r2, 80053f2 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80053ee:	6181      	str	r1, [r0, #24]
  }
}
 80053f0:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80053f2:	0409      	lsls	r1, r1, #16
 80053f4:	e7fb      	b.n	80053ee <HAL_GPIO_WritePin+0x2>

080053f6 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 80053f6:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 80053f8:	ea01 0203 	and.w	r2, r1, r3
 80053fc:	ea21 0103 	bic.w	r1, r1, r3
 8005400:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8005404:	6181      	str	r1, [r0, #24]
}
 8005406:	4770      	bx	lr

08005408 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8005408:	6801      	ldr	r1, [r0, #0]
 800540a:	694b      	ldr	r3, [r1, #20]
 800540c:	f413 6380 	ands.w	r3, r3, #1024	@ 0x400
 8005410:	f04f 0200 	mov.w	r2, #0
 8005414:	d010      	beq.n	8005438 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8005416:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 800541a:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 800541c:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 800541e:	6302      	str	r2, [r0, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8005420:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005424:	f880 203e 	strb.w	r2, [r0, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005428:	6c03      	ldr	r3, [r0, #64]	@ 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800542a:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800542e:	f043 0304 	orr.w	r3, r3, #4
 8005432:	6403      	str	r3, [r0, #64]	@ 0x40

    return HAL_ERROR;
 8005434:	2001      	movs	r0, #1
 8005436:	4770      	bx	lr
  }
  return HAL_OK;
 8005438:	4618      	mov	r0, r3
}
 800543a:	4770      	bx	lr

0800543c <I2C_WaitOnFlagUntilTimeout>:
{
 800543c:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8005440:	4606      	mov	r6, r0
 8005442:	460f      	mov	r7, r1
 8005444:	4691      	mov	r9, r2
 8005446:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8005448:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800544c:	6833      	ldr	r3, [r6, #0]
 800544e:	f1ba 0f01 	cmp.w	sl, #1
 8005452:	bf0c      	ite	eq
 8005454:	695c      	ldreq	r4, [r3, #20]
 8005456:	699c      	ldrne	r4, [r3, #24]
 8005458:	ea27 0404 	bic.w	r4, r7, r4
 800545c:	b2a4      	uxth	r4, r4
 800545e:	fab4 f484 	clz	r4, r4
 8005462:	0964      	lsrs	r4, r4, #5
 8005464:	45a1      	cmp	r9, r4
 8005466:	d001      	beq.n	800546c <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8005468:	2000      	movs	r0, #0
 800546a:	e025      	b.n	80054b8 <I2C_WaitOnFlagUntilTimeout+0x7c>
    if (Timeout != HAL_MAX_DELAY)
 800546c:	1c6a      	adds	r2, r5, #1
 800546e:	d0ee      	beq.n	800544e <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005470:	f7ff f976 	bl	8004760 <HAL_GetTick>
 8005474:	9b08      	ldr	r3, [sp, #32]
 8005476:	1ac0      	subs	r0, r0, r3
 8005478:	42a8      	cmp	r0, r5
 800547a:	d801      	bhi.n	8005480 <I2C_WaitOnFlagUntilTimeout+0x44>
 800547c:	2d00      	cmp	r5, #0
 800547e:	d1e5      	bne.n	800544c <I2C_WaitOnFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8005480:	6833      	ldr	r3, [r6, #0]
 8005482:	f1ba 0f01 	cmp.w	sl, #1
 8005486:	bf0c      	ite	eq
 8005488:	695b      	ldreq	r3, [r3, #20]
 800548a:	699b      	ldrne	r3, [r3, #24]
 800548c:	ea27 0303 	bic.w	r3, r7, r3
 8005490:	b29b      	uxth	r3, r3
 8005492:	fab3 f383 	clz	r3, r3
 8005496:	095b      	lsrs	r3, r3, #5
 8005498:	4599      	cmp	r9, r3
 800549a:	d1d7      	bne.n	800544c <I2C_WaitOnFlagUntilTimeout+0x10>
          hi2c->PreviousState     = I2C_STATE_NONE;
 800549c:	2300      	movs	r3, #0
          hi2c->State             = HAL_I2C_STATE_READY;
 800549e:	2220      	movs	r2, #32
          hi2c->PreviousState     = I2C_STATE_NONE;
 80054a0:	6333      	str	r3, [r6, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 80054a2:	f886 203d 	strb.w	r2, [r6, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 80054a6:	f886 303e 	strb.w	r3, [r6, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80054aa:	6c32      	ldr	r2, [r6, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 80054ac:	f886 303c 	strb.w	r3, [r6, #60]	@ 0x3c
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80054b0:	f042 0220 	orr.w	r2, r2, #32
 80054b4:	6432      	str	r2, [r6, #64]	@ 0x40
          return HAL_ERROR;
 80054b6:	2001      	movs	r0, #1
}
 80054b8:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

080054bc <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 80054bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80054c0:	4604      	mov	r4, r0
 80054c2:	460f      	mov	r7, r1
 80054c4:	4616      	mov	r6, r2
 80054c6:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80054c8:	6825      	ldr	r5, [r4, #0]
 80054ca:	6968      	ldr	r0, [r5, #20]
 80054cc:	ea27 0000 	bic.w	r0, r7, r0
 80054d0:	b280      	uxth	r0, r0
 80054d2:	b1c0      	cbz	r0, 8005506 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80054d4:	696b      	ldr	r3, [r5, #20]
 80054d6:	055a      	lsls	r2, r3, #21
 80054d8:	d517      	bpl.n	800550a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4e>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80054da:	682b      	ldr	r3, [r5, #0]
 80054dc:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80054e0:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80054e2:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 80054e6:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80054e8:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80054ea:	2300      	movs	r3, #0
 80054ec:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80054ee:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80054f2:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80054f6:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80054f8:	f043 0304 	orr.w	r3, r3, #4
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80054fc:	6423      	str	r3, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 80054fe:	2300      	movs	r3, #0
 8005500:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 8005504:	2001      	movs	r0, #1
}
 8005506:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 800550a:	1c73      	adds	r3, r6, #1
 800550c:	d0dd      	beq.n	80054ca <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800550e:	f7ff f927 	bl	8004760 <HAL_GetTick>
 8005512:	eba0 0008 	sub.w	r0, r0, r8
 8005516:	42b0      	cmp	r0, r6
 8005518:	d801      	bhi.n	800551e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x62>
 800551a:	2e00      	cmp	r6, #0
 800551c:	d1d4      	bne.n	80054c8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 800551e:	6823      	ldr	r3, [r4, #0]
 8005520:	695a      	ldr	r2, [r3, #20]
 8005522:	ea27 0202 	bic.w	r2, r7, r2
 8005526:	b292      	uxth	r2, r2
 8005528:	2a00      	cmp	r2, #0
 800552a:	d0cd      	beq.n	80054c8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
          hi2c->PreviousState       = I2C_STATE_NONE;
 800552c:	2300      	movs	r3, #0
          hi2c->State               = HAL_I2C_STATE_READY;
 800552e:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8005530:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8005532:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005536:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800553a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800553c:	4313      	orrs	r3, r2
 800553e:	e7dd      	b.n	80054fc <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08005540 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8005540:	b570      	push	{r4, r5, r6, lr}
 8005542:	4604      	mov	r4, r0
 8005544:	460d      	mov	r5, r1
 8005546:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8005548:	6823      	ldr	r3, [r4, #0]
 800554a:	695b      	ldr	r3, [r3, #20]
 800554c:	061b      	lsls	r3, r3, #24
 800554e:	d501      	bpl.n	8005554 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8005550:	2000      	movs	r0, #0
 8005552:	e01e      	b.n	8005592 <I2C_WaitOnTXEFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8005554:	4620      	mov	r0, r4
 8005556:	f7ff ff57 	bl	8005408 <I2C_IsAcknowledgeFailed>
 800555a:	b9c8      	cbnz	r0, 8005590 <I2C_WaitOnTXEFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 800555c:	1c6a      	adds	r2, r5, #1
 800555e:	d0f3      	beq.n	8005548 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005560:	f7ff f8fe 	bl	8004760 <HAL_GetTick>
 8005564:	1b80      	subs	r0, r0, r6
 8005566:	42a8      	cmp	r0, r5
 8005568:	d801      	bhi.n	800556e <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 800556a:	2d00      	cmp	r5, #0
 800556c:	d1ec      	bne.n	8005548 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 800556e:	6823      	ldr	r3, [r4, #0]
 8005570:	695b      	ldr	r3, [r3, #20]
 8005572:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
 8005576:	d1e7      	bne.n	8005548 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 8005578:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 800557a:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 800557c:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005580:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005584:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8005586:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800558a:	f042 0220 	orr.w	r2, r2, #32
 800558e:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8005590:	2001      	movs	r0, #1
}
 8005592:	bd70      	pop	{r4, r5, r6, pc}

08005594 <I2C_RequestMemoryWrite>:
{
 8005594:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005598:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800559a:	6802      	ldr	r2, [r0, #0]
{
 800559c:	b085      	sub	sp, #20
 800559e:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
 80055a2:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80055a4:	6813      	ldr	r3, [r2, #0]
 80055a6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80055aa:	6013      	str	r3, [r2, #0]
{
 80055ac:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80055ae:	463b      	mov	r3, r7
 80055b0:	f8cd 8000 	str.w	r8, [sp]
 80055b4:	2200      	movs	r2, #0
 80055b6:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 80055ba:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80055bc:	f7ff ff3e 	bl	800543c <I2C_WaitOnFlagUntilTimeout>
 80055c0:	6823      	ldr	r3, [r4, #0]
 80055c2:	b138      	cbz	r0, 80055d4 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80055c4:	681b      	ldr	r3, [r3, #0]
 80055c6:	05db      	lsls	r3, r3, #23
 80055c8:	d502      	bpl.n	80055d0 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80055ca:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80055ce:	6423      	str	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 80055d0:	2603      	movs	r6, #3
 80055d2:	e020      	b.n	8005616 <I2C_RequestMemoryWrite+0x82>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80055d4:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 80055d8:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80055da:	491a      	ldr	r1, [pc, #104]	@ (8005644 <I2C_RequestMemoryWrite+0xb0>)
 80055dc:	4643      	mov	r3, r8
 80055de:	463a      	mov	r2, r7
 80055e0:	4620      	mov	r0, r4
 80055e2:	f7ff ff6b 	bl	80054bc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80055e6:	b9a8      	cbnz	r0, 8005614 <I2C_RequestMemoryWrite+0x80>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80055e8:	6823      	ldr	r3, [r4, #0]
 80055ea:	9003      	str	r0, [sp, #12]
 80055ec:	695a      	ldr	r2, [r3, #20]
 80055ee:	9203      	str	r2, [sp, #12]
 80055f0:	699b      	ldr	r3, [r3, #24]
 80055f2:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80055f4:	4642      	mov	r2, r8
 80055f6:	4639      	mov	r1, r7
 80055f8:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80055fa:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80055fc:	f7ff ffa0 	bl	8005540 <I2C_WaitOnTXEFlagUntilTimeout>
 8005600:	4606      	mov	r6, r0
 8005602:	b160      	cbz	r0, 800561e <I2C_RequestMemoryWrite+0x8a>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8005604:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8005606:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005608:	bf01      	itttt	eq
 800560a:	6822      	ldreq	r2, [r4, #0]
 800560c:	6813      	ldreq	r3, [r2, #0]
 800560e:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 8005612:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 8005614:	2601      	movs	r6, #1
}
 8005616:	4630      	mov	r0, r6
 8005618:	b005      	add	sp, #20
 800561a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800561e:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005622:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005624:	d102      	bne.n	800562c <I2C_RequestMemoryWrite+0x98>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005626:	b2ed      	uxtb	r5, r5
 8005628:	611d      	str	r5, [r3, #16]
 800562a:	e7f4      	b.n	8005616 <I2C_RequestMemoryWrite+0x82>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800562c:	0a2a      	lsrs	r2, r5, #8
 800562e:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005630:	4639      	mov	r1, r7
 8005632:	4642      	mov	r2, r8
 8005634:	4620      	mov	r0, r4
 8005636:	f7ff ff83 	bl	8005540 <I2C_WaitOnTXEFlagUntilTimeout>
 800563a:	2800      	cmp	r0, #0
 800563c:	d1e2      	bne.n	8005604 <I2C_RequestMemoryWrite+0x70>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800563e:	6823      	ldr	r3, [r4, #0]
 8005640:	e7f1      	b.n	8005626 <I2C_RequestMemoryWrite+0x92>
 8005642:	bf00      	nop
 8005644:	00010002 	.word	0x00010002

08005648 <I2C_RequestMemoryRead>:
{
 8005648:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800564c:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800564e:	6803      	ldr	r3, [r0, #0]
{
 8005650:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005652:	681a      	ldr	r2, [r3, #0]
 8005654:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8005658:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800565a:	681a      	ldr	r2, [r3, #0]
{
 800565c:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005660:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8005664:	601a      	str	r2, [r3, #0]
{
 8005666:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005668:	463b      	mov	r3, r7
 800566a:	f8cd 8000 	str.w	r8, [sp]
 800566e:	2200      	movs	r2, #0
 8005670:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 8005674:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005676:	f7ff fee1 	bl	800543c <I2C_WaitOnFlagUntilTimeout>
 800567a:	6823      	ldr	r3, [r4, #0]
 800567c:	b138      	cbz	r0, 800568e <I2C_RequestMemoryRead+0x46>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800567e:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005680:	05db      	lsls	r3, r3, #23
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8005682:	bf44      	itt	mi
 8005684:	f44f 7300 	movmi.w	r3, #512	@ 0x200
 8005688:	6423      	strmi	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 800568a:	2003      	movs	r0, #3
 800568c:	e021      	b.n	80056d2 <I2C_RequestMemoryRead+0x8a>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800568e:	fa5f f986 	uxtb.w	r9, r6
 8005692:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 8005696:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005698:	492b      	ldr	r1, [pc, #172]	@ (8005748 <I2C_RequestMemoryRead+0x100>)
 800569a:	4643      	mov	r3, r8
 800569c:	463a      	mov	r2, r7
 800569e:	4620      	mov	r0, r4
 80056a0:	f7ff ff0c 	bl	80054bc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80056a4:	b9a0      	cbnz	r0, 80056d0 <I2C_RequestMemoryRead+0x88>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80056a6:	6823      	ldr	r3, [r4, #0]
 80056a8:	9003      	str	r0, [sp, #12]
 80056aa:	695a      	ldr	r2, [r3, #20]
 80056ac:	9203      	str	r2, [sp, #12]
 80056ae:	699b      	ldr	r3, [r3, #24]
 80056b0:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80056b2:	4642      	mov	r2, r8
 80056b4:	4639      	mov	r1, r7
 80056b6:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80056b8:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80056ba:	f7ff ff41 	bl	8005540 <I2C_WaitOnTXEFlagUntilTimeout>
 80056be:	b158      	cbz	r0, 80056d8 <I2C_RequestMemoryRead+0x90>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80056c0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80056c2:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80056c4:	bf01      	itttt	eq
 80056c6:	6822      	ldreq	r2, [r4, #0]
 80056c8:	6813      	ldreq	r3, [r2, #0]
 80056ca:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 80056ce:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 80056d0:	2001      	movs	r0, #1
}
 80056d2:	b004      	add	sp, #16
 80056d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80056d8:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80056dc:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80056de:	d11a      	bne.n	8005716 <I2C_RequestMemoryRead+0xce>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80056e0:	b2ed      	uxtb	r5, r5
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80056e2:	4642      	mov	r2, r8
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80056e4:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80056e6:	4639      	mov	r1, r7
 80056e8:	4620      	mov	r0, r4
 80056ea:	f7ff ff29 	bl	8005540 <I2C_WaitOnTXEFlagUntilTimeout>
 80056ee:	4602      	mov	r2, r0
 80056f0:	2800      	cmp	r0, #0
 80056f2:	d1e5      	bne.n	80056c0 <I2C_RequestMemoryRead+0x78>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80056f4:	6821      	ldr	r1, [r4, #0]
 80056f6:	680b      	ldr	r3, [r1, #0]
 80056f8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80056fc:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80056fe:	4620      	mov	r0, r4
 8005700:	f8cd 8000 	str.w	r8, [sp]
 8005704:	463b      	mov	r3, r7
 8005706:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 800570a:	f7ff fe97 	bl	800543c <I2C_WaitOnFlagUntilTimeout>
 800570e:	6822      	ldr	r2, [r4, #0]
 8005710:	b160      	cbz	r0, 800572c <I2C_RequestMemoryRead+0xe4>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005712:	6813      	ldr	r3, [r2, #0]
 8005714:	e7b4      	b.n	8005680 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8005716:	0a2a      	lsrs	r2, r5, #8
 8005718:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800571a:	4639      	mov	r1, r7
 800571c:	4642      	mov	r2, r8
 800571e:	4620      	mov	r0, r4
 8005720:	f7ff ff0e 	bl	8005540 <I2C_WaitOnTXEFlagUntilTimeout>
 8005724:	2800      	cmp	r0, #0
 8005726:	d1cb      	bne.n	80056c0 <I2C_RequestMemoryRead+0x78>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005728:	6823      	ldr	r3, [r4, #0]
 800572a:	e7d9      	b.n	80056e0 <I2C_RequestMemoryRead+0x98>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800572c:	f049 0301 	orr.w	r3, r9, #1
 8005730:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005732:	4905      	ldr	r1, [pc, #20]	@ (8005748 <I2C_RequestMemoryRead+0x100>)
 8005734:	4643      	mov	r3, r8
 8005736:	463a      	mov	r2, r7
 8005738:	4620      	mov	r0, r4
 800573a:	f7ff febf 	bl	80054bc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800573e:	3800      	subs	r0, #0
 8005740:	bf18      	it	ne
 8005742:	2001      	movne	r0, #1
 8005744:	e7c5      	b.n	80056d2 <I2C_RequestMemoryRead+0x8a>
 8005746:	bf00      	nop
 8005748:	00010002 	.word	0x00010002

0800574c <I2C_WaitOnBTFFlagUntilTimeout>:
{
 800574c:	b570      	push	{r4, r5, r6, lr}
 800574e:	4604      	mov	r4, r0
 8005750:	460d      	mov	r5, r1
 8005752:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8005754:	6823      	ldr	r3, [r4, #0]
 8005756:	695b      	ldr	r3, [r3, #20]
 8005758:	075b      	lsls	r3, r3, #29
 800575a:	d501      	bpl.n	8005760 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 800575c:	2000      	movs	r0, #0
 800575e:	e01e      	b.n	800579e <I2C_WaitOnBTFFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8005760:	4620      	mov	r0, r4
 8005762:	f7ff fe51 	bl	8005408 <I2C_IsAcknowledgeFailed>
 8005766:	b9c8      	cbnz	r0, 800579c <I2C_WaitOnBTFFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8005768:	1c6a      	adds	r2, r5, #1
 800576a:	d0f3      	beq.n	8005754 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800576c:	f7fe fff8 	bl	8004760 <HAL_GetTick>
 8005770:	1b80      	subs	r0, r0, r6
 8005772:	42a8      	cmp	r0, r5
 8005774:	d801      	bhi.n	800577a <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8005776:	2d00      	cmp	r5, #0
 8005778:	d1ec      	bne.n	8005754 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 800577a:	6823      	ldr	r3, [r4, #0]
 800577c:	695b      	ldr	r3, [r3, #20]
 800577e:	f013 0304 	ands.w	r3, r3, #4
 8005782:	d1e7      	bne.n	8005754 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 8005784:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8005786:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8005788:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 800578c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005790:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8005792:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005796:	f042 0220 	orr.w	r2, r2, #32
 800579a:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 800579c:	2001      	movs	r0, #1
}
 800579e:	bd70      	pop	{r4, r5, r6, pc}

080057a0 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 80057a0:	b570      	push	{r4, r5, r6, lr}
 80057a2:	4604      	mov	r4, r0
 80057a4:	460d      	mov	r5, r1
 80057a6:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 80057a8:	6821      	ldr	r1, [r4, #0]
 80057aa:	694b      	ldr	r3, [r1, #20]
 80057ac:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 80057b0:	d001      	beq.n	80057b6 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 80057b2:	2000      	movs	r0, #0
 80057b4:	e011      	b.n	80057da <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 80057b6:	694a      	ldr	r2, [r1, #20]
 80057b8:	06d2      	lsls	r2, r2, #27
 80057ba:	d50f      	bpl.n	80057dc <I2C_WaitOnRXNEFlagUntilTimeout+0x3c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80057bc:	f06f 0210 	mvn.w	r2, #16
 80057c0:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80057c2:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80057c4:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80057c6:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80057ca:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 80057ce:	6c23      	ldr	r3, [r4, #64]	@ 0x40
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80057d0:	6423      	str	r3, [r4, #64]	@ 0x40
        __HAL_UNLOCK(hi2c);
 80057d2:	2300      	movs	r3, #0
 80057d4:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 80057d8:	2001      	movs	r0, #1
}
 80057da:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80057dc:	f7fe ffc0 	bl	8004760 <HAL_GetTick>
 80057e0:	1b80      	subs	r0, r0, r6
 80057e2:	42a8      	cmp	r0, r5
 80057e4:	d801      	bhi.n	80057ea <I2C_WaitOnRXNEFlagUntilTimeout+0x4a>
 80057e6:	2d00      	cmp	r5, #0
 80057e8:	d1de      	bne.n	80057a8 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 80057ea:	6823      	ldr	r3, [r4, #0]
 80057ec:	695b      	ldr	r3, [r3, #20]
 80057ee:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 80057f2:	d1d9      	bne.n	80057a8 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->State               = HAL_I2C_STATE_READY;
 80057f4:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80057f6:	6323      	str	r3, [r4, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80057f8:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80057fc:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005800:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8005802:	4313      	orrs	r3, r2
 8005804:	e7e4      	b.n	80057d0 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>
	...

08005808 <HAL_I2C_Init>:
{
 8005808:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 800580a:	4604      	mov	r4, r0
 800580c:	b908      	cbnz	r0, 8005812 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 800580e:	2001      	movs	r0, #1
}
 8005810:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8005812:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8005816:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800581a:	b91b      	cbnz	r3, 8005824 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 800581c:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_I2C_MspInit(hi2c);
 8005820:	f7fc f854 	bl	80018cc <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8005824:	2324      	movs	r3, #36	@ 0x24
 8005826:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800582a:	6823      	ldr	r3, [r4, #0]
 800582c:	681a      	ldr	r2, [r3, #0]
 800582e:	f022 0201 	bic.w	r2, r2, #1
 8005832:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8005834:	681a      	ldr	r2, [r3, #0]
 8005836:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800583a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800583c:	681a      	ldr	r2, [r3, #0]
 800583e:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8005842:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8005844:	f000 fe78 	bl	8006538 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8005848:	4b3f      	ldr	r3, [pc, #252]	@ (8005948 <HAL_I2C_Init+0x140>)
 800584a:	6865      	ldr	r5, [r4, #4]
 800584c:	429d      	cmp	r5, r3
 800584e:	bf94      	ite	ls
 8005850:	4b3e      	ldrls	r3, [pc, #248]	@ (800594c <HAL_I2C_Init+0x144>)
 8005852:	4b3f      	ldrhi	r3, [pc, #252]	@ (8005950 <HAL_I2C_Init+0x148>)
 8005854:	4298      	cmp	r0, r3
 8005856:	bf8c      	ite	hi
 8005858:	2300      	movhi	r3, #0
 800585a:	2301      	movls	r3, #1
 800585c:	2b00      	cmp	r3, #0
 800585e:	d1d6      	bne.n	800580e <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005860:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8005862:	4e39      	ldr	r6, [pc, #228]	@ (8005948 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005864:	6851      	ldr	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8005866:	4b3b      	ldr	r3, [pc, #236]	@ (8005954 <HAL_I2C_Init+0x14c>)
 8005868:	fbb0 f3f3 	udiv	r3, r0, r3
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800586c:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 8005870:	4319      	orrs	r1, r3
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8005872:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005874:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8005876:	bf88      	it	hi
 8005878:	f44f 7696 	movhi.w	r6, #300	@ 0x12c
 800587c:	6a11      	ldr	r1, [r2, #32]
 800587e:	bf88      	it	hi
 8005880:	4373      	mulhi	r3, r6
 8005882:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 8005886:	bf84      	itt	hi
 8005888:	f44f 767a 	movhi.w	r6, #1000	@ 0x3e8
 800588c:	fbb3 f3f6 	udivhi	r3, r3, r6
 8005890:	3301      	adds	r3, #1
 8005892:	430b      	orrs	r3, r1
 8005894:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8005896:	69d1      	ldr	r1, [r2, #28]
 8005898:	1e43      	subs	r3, r0, #1
 800589a:	482b      	ldr	r0, [pc, #172]	@ (8005948 <HAL_I2C_Init+0x140>)
 800589c:	f421 414f 	bic.w	r1, r1, #52992	@ 0xcf00
 80058a0:	4285      	cmp	r5, r0
 80058a2:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 80058a6:	d832      	bhi.n	800590e <HAL_I2C_Init+0x106>
 80058a8:	006d      	lsls	r5, r5, #1
 80058aa:	f640 70fc 	movw	r0, #4092	@ 0xffc
 80058ae:	fbb3 f3f5 	udiv	r3, r3, r5
 80058b2:	3301      	adds	r3, #1
 80058b4:	4203      	tst	r3, r0
 80058b6:	d042      	beq.n	800593e <HAL_I2C_Init+0x136>
 80058b8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80058bc:	4319      	orrs	r1, r3
 80058be:	61d1      	str	r1, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 80058c0:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 80058c4:	6811      	ldr	r1, [r2, #0]
 80058c6:	4303      	orrs	r3, r0
 80058c8:	f021 01c0 	bic.w	r1, r1, #192	@ 0xc0
 80058cc:	430b      	orrs	r3, r1
 80058ce:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 80058d0:	6891      	ldr	r1, [r2, #8]
 80058d2:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 80058d6:	f421 4103 	bic.w	r1, r1, #33536	@ 0x8300
 80058da:	4303      	orrs	r3, r0
 80058dc:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 80058e0:	430b      	orrs	r3, r1
 80058e2:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 80058e4:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 80058e8:	68d1      	ldr	r1, [r2, #12]
 80058ea:	4303      	orrs	r3, r0
 80058ec:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 80058f0:	430b      	orrs	r3, r1
 80058f2:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 80058f4:	6813      	ldr	r3, [r2, #0]
 80058f6:	f043 0301 	orr.w	r3, r3, #1
 80058fa:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80058fc:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 80058fe:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005900:	6420      	str	r0, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8005902:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8005906:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8005908:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
  return HAL_OK;
 800590c:	e780      	b.n	8005810 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800590e:	68a0      	ldr	r0, [r4, #8]
 8005910:	b950      	cbnz	r0, 8005928 <HAL_I2C_Init+0x120>
 8005912:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8005916:	fbb3 f3f5 	udiv	r3, r3, r5
 800591a:	3301      	adds	r3, #1
 800591c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005920:	b17b      	cbz	r3, 8005942 <HAL_I2C_Init+0x13a>
 8005922:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8005926:	e7c9      	b.n	80058bc <HAL_I2C_Init+0xb4>
 8005928:	2019      	movs	r0, #25
 800592a:	4368      	muls	r0, r5
 800592c:	fbb3 f3f0 	udiv	r3, r3, r0
 8005930:	3301      	adds	r3, #1
 8005932:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005936:	b123      	cbz	r3, 8005942 <HAL_I2C_Init+0x13a>
 8005938:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800593c:	e7be      	b.n	80058bc <HAL_I2C_Init+0xb4>
 800593e:	2304      	movs	r3, #4
 8005940:	e7bc      	b.n	80058bc <HAL_I2C_Init+0xb4>
 8005942:	2301      	movs	r3, #1
 8005944:	e7ba      	b.n	80058bc <HAL_I2C_Init+0xb4>
 8005946:	bf00      	nop
 8005948:	000186a0 	.word	0x000186a0
 800594c:	001e847f 	.word	0x001e847f
 8005950:	003d08ff 	.word	0x003d08ff
 8005954:	000f4240 	.word	0x000f4240

08005958 <HAL_I2C_Mem_Write>:
{
 8005958:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800595c:	4604      	mov	r4, r0
 800595e:	4699      	mov	r9, r3
 8005960:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8005962:	460f      	mov	r7, r1
 8005964:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8005966:	f7fe fefb 	bl	8004760 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800596a:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 800596e:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8005970:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005972:	d003      	beq.n	800597c <HAL_I2C_Mem_Write+0x24>
      return HAL_BUSY;
 8005974:	2002      	movs	r0, #2
}
 8005976:	b003      	add	sp, #12
 8005978:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800597c:	9000      	str	r0, [sp, #0]
 800597e:	493c      	ldr	r1, [pc, #240]	@ (8005a70 <HAL_I2C_Mem_Write+0x118>)
 8005980:	2319      	movs	r3, #25
 8005982:	2201      	movs	r2, #1
 8005984:	4620      	mov	r0, r4
 8005986:	f7ff fd59 	bl	800543c <I2C_WaitOnFlagUntilTimeout>
 800598a:	2800      	cmp	r0, #0
 800598c:	d1f2      	bne.n	8005974 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 800598e:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 8005992:	2b01      	cmp	r3, #1
 8005994:	d0ee      	beq.n	8005974 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005996:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8005998:	2301      	movs	r3, #1
 800599a:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800599e:	6803      	ldr	r3, [r0, #0]
 80059a0:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 80059a2:	bf5e      	ittt	pl
 80059a4:	6803      	ldrpl	r3, [r0, #0]
 80059a6:	f043 0301 	orrpl.w	r3, r3, #1
 80059aa:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80059ac:	6803      	ldr	r3, [r0, #0]
 80059ae:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80059b2:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80059b4:	2321      	movs	r3, #33	@ 0x21
 80059b6:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80059ba:	2340      	movs	r3, #64	@ 0x40
 80059bc:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80059c0:	2300      	movs	r3, #0
 80059c2:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 80059c4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80059c6:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 80059c8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 80059cc:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80059ce:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80059d0:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80059d2:	4b28      	ldr	r3, [pc, #160]	@ (8005a74 <HAL_I2C_Mem_Write+0x11c>)
 80059d4:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80059d6:	4642      	mov	r2, r8
 80059d8:	e9cd 6500 	strd	r6, r5, [sp]
 80059dc:	464b      	mov	r3, r9
 80059de:	4639      	mov	r1, r7
 80059e0:	4620      	mov	r0, r4
 80059e2:	f7ff fdd7 	bl	8005594 <I2C_RequestMemoryWrite>
 80059e6:	2800      	cmp	r0, #0
 80059e8:	d02a      	beq.n	8005a40 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 80059ea:	2001      	movs	r0, #1
 80059ec:	e7c3      	b.n	8005976 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80059ee:	f7ff fda7 	bl	8005540 <I2C_WaitOnTXEFlagUntilTimeout>
 80059f2:	b140      	cbz	r0, 8005a06 <HAL_I2C_Mem_Write+0xae>
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80059f4:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80059f6:	2b04      	cmp	r3, #4
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80059f8:	bf01      	itttt	eq
 80059fa:	6822      	ldreq	r2, [r4, #0]
 80059fc:	6813      	ldreq	r3, [r2, #0]
 80059fe:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 8005a02:	6013      	streq	r3, [r2, #0]
 8005a04:	e7f1      	b.n	80059ea <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8005a06:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005a08:	6827      	ldr	r7, [r4, #0]
 8005a0a:	461a      	mov	r2, r3
 8005a0c:	f812 1b01 	ldrb.w	r1, [r2], #1
 8005a10:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8005a12:	6262      	str	r2, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 8005a14:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8005a16:	8d21      	ldrh	r1, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 8005a18:	3a01      	subs	r2, #1
 8005a1a:	b292      	uxth	r2, r2
 8005a1c:	8562      	strh	r2, [r4, #42]	@ 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005a1e:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8005a20:	1e48      	subs	r0, r1, #1
 8005a22:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005a24:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8005a26:	8520      	strh	r0, [r4, #40]	@ 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005a28:	d50a      	bpl.n	8005a40 <HAL_I2C_Mem_Write+0xe8>
 8005a2a:	b148      	cbz	r0, 8005a40 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8005a2c:	785a      	ldrb	r2, [r3, #1]
 8005a2e:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8005a30:	3302      	adds	r3, #2
 8005a32:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 8005a34:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005a36:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8005a38:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8005a3a:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8005a3c:	8521      	strh	r1, [r4, #40]	@ 0x28
        hi2c->XferCount--;
 8005a3e:	8563      	strh	r3, [r4, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 8005a40:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005a42:	462a      	mov	r2, r5
 8005a44:	4631      	mov	r1, r6
 8005a46:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8005a48:	2b00      	cmp	r3, #0
 8005a4a:	d1d0      	bne.n	80059ee <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005a4c:	f7ff fe7e 	bl	800574c <I2C_WaitOnBTFFlagUntilTimeout>
 8005a50:	2800      	cmp	r0, #0
 8005a52:	d1cf      	bne.n	80059f4 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005a54:	6822      	ldr	r2, [r4, #0]
 8005a56:	6813      	ldr	r3, [r2, #0]
 8005a58:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8005a5c:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8005a5e:	2320      	movs	r3, #32
 8005a60:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 8005a64:	f884 003c 	strb.w	r0, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005a68:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
    return HAL_OK;
 8005a6c:	e783      	b.n	8005976 <HAL_I2C_Mem_Write+0x1e>
 8005a6e:	bf00      	nop
 8005a70:	00100002 	.word	0x00100002
 8005a74:	ffff0000 	.word	0xffff0000

08005a78 <HAL_I2C_Mem_Read>:
{
 8005a78:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005a7c:	4604      	mov	r4, r0
 8005a7e:	b087      	sub	sp, #28
 8005a80:	4699      	mov	r9, r3
 8005a82:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 8005a84:	460d      	mov	r5, r1
 8005a86:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8005a88:	f7fe fe6a 	bl	8004760 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005a8c:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 8005a90:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8005a92:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005a94:	d004      	beq.n	8005aa0 <HAL_I2C_Mem_Read+0x28>
      return HAL_BUSY;
 8005a96:	2502      	movs	r5, #2
}
 8005a98:	4628      	mov	r0, r5
 8005a9a:	b007      	add	sp, #28
 8005a9c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8005aa0:	9000      	str	r0, [sp, #0]
 8005aa2:	497a      	ldr	r1, [pc, #488]	@ (8005c8c <HAL_I2C_Mem_Read+0x214>)
 8005aa4:	2319      	movs	r3, #25
 8005aa6:	2201      	movs	r2, #1
 8005aa8:	4620      	mov	r0, r4
 8005aaa:	f7ff fcc7 	bl	800543c <I2C_WaitOnFlagUntilTimeout>
 8005aae:	2800      	cmp	r0, #0
 8005ab0:	d1f1      	bne.n	8005a96 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8005ab2:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 8005ab6:	2b01      	cmp	r3, #1
 8005ab8:	d0ed      	beq.n	8005a96 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005aba:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8005abc:	2301      	movs	r3, #1
 8005abe:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005ac2:	6803      	ldr	r3, [r0, #0]
 8005ac4:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8005ac6:	bf5e      	ittt	pl
 8005ac8:	6803      	ldrpl	r3, [r0, #0]
 8005aca:	f043 0301 	orrpl.w	r3, r3, #1
 8005ace:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005ad0:	6803      	ldr	r3, [r0, #0]
 8005ad2:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8005ad6:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8005ad8:	2322      	movs	r3, #34	@ 0x22
 8005ada:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005ade:	2340      	movs	r3, #64	@ 0x40
 8005ae0:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005ae4:	2300      	movs	r3, #0
 8005ae6:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 8005ae8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005aea:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8005aec:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 8005af0:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8005af2:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005af4:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8005af6:	4b66      	ldr	r3, [pc, #408]	@ (8005c90 <HAL_I2C_Mem_Read+0x218>)
 8005af8:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8005afa:	4629      	mov	r1, r5
 8005afc:	e9cd 7600 	strd	r7, r6, [sp]
 8005b00:	464b      	mov	r3, r9
 8005b02:	4642      	mov	r2, r8
 8005b04:	4620      	mov	r0, r4
 8005b06:	f7ff fd9f 	bl	8005648 <I2C_RequestMemoryRead>
 8005b0a:	4605      	mov	r5, r0
 8005b0c:	b108      	cbz	r0, 8005b12 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8005b0e:	2501      	movs	r5, #1
 8005b10:	e7c2      	b.n	8005a98 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8005b12:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005b14:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8005b16:	b9b2      	cbnz	r2, 8005b46 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005b18:	9002      	str	r0, [sp, #8]
 8005b1a:	695a      	ldr	r2, [r3, #20]
 8005b1c:	9202      	str	r2, [sp, #8]
 8005b1e:	699a      	ldr	r2, [r3, #24]
 8005b20:	9202      	str	r2, [sp, #8]
 8005b22:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005b24:	681a      	ldr	r2, [r3, #0]
 8005b26:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8005b2a:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005b2c:	f8df 8164 	ldr.w	r8, [pc, #356]	@ 8005c94 <HAL_I2C_Mem_Read+0x21c>
    while (hi2c->XferSize > 0U)
 8005b30:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8005b32:	2b00      	cmp	r3, #0
 8005b34:	d12c      	bne.n	8005b90 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8005b36:	2220      	movs	r2, #32
 8005b38:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 8005b3c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005b40:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    return HAL_OK;
 8005b44:	e7a8      	b.n	8005a98 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8005b46:	2a01      	cmp	r2, #1
 8005b48:	d10a      	bne.n	8005b60 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005b4a:	681a      	ldr	r2, [r3, #0]
 8005b4c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005b50:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005b52:	9003      	str	r0, [sp, #12]
 8005b54:	695a      	ldr	r2, [r3, #20]
 8005b56:	9203      	str	r2, [sp, #12]
 8005b58:	699a      	ldr	r2, [r3, #24]
 8005b5a:	9203      	str	r2, [sp, #12]
 8005b5c:	9a03      	ldr	r2, [sp, #12]
 8005b5e:	e7e1      	b.n	8005b24 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8005b60:	2a02      	cmp	r2, #2
 8005b62:	d10e      	bne.n	8005b82 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005b64:	681a      	ldr	r2, [r3, #0]
 8005b66:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005b6a:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005b6c:	681a      	ldr	r2, [r3, #0]
 8005b6e:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8005b72:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005b74:	9004      	str	r0, [sp, #16]
 8005b76:	695a      	ldr	r2, [r3, #20]
 8005b78:	9204      	str	r2, [sp, #16]
 8005b7a:	699b      	ldr	r3, [r3, #24]
 8005b7c:	9304      	str	r3, [sp, #16]
 8005b7e:	9b04      	ldr	r3, [sp, #16]
 8005b80:	e7d4      	b.n	8005b2c <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005b82:	9005      	str	r0, [sp, #20]
 8005b84:	695a      	ldr	r2, [r3, #20]
 8005b86:	9205      	str	r2, [sp, #20]
 8005b88:	699b      	ldr	r3, [r3, #24]
 8005b8a:	9305      	str	r3, [sp, #20]
 8005b8c:	9b05      	ldr	r3, [sp, #20]
 8005b8e:	e7cd      	b.n	8005b2c <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8005b90:	2b03      	cmp	r3, #3
 8005b92:	d856      	bhi.n	8005c42 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8005b94:	2b01      	cmp	r3, #1
 8005b96:	d115      	bne.n	8005bc4 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005b98:	4632      	mov	r2, r6
 8005b9a:	4639      	mov	r1, r7
 8005b9c:	4620      	mov	r0, r4
 8005b9e:	f7ff fdff 	bl	80057a0 <I2C_WaitOnRXNEFlagUntilTimeout>
 8005ba2:	2800      	cmp	r0, #0
 8005ba4:	d1b3      	bne.n	8005b0e <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005ba6:	6823      	ldr	r3, [r4, #0]
 8005ba8:	691a      	ldr	r2, [r3, #16]
 8005baa:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005bac:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005bae:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005bb0:	3301      	adds	r3, #1
 8005bb2:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8005bb4:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8005bb6:	3b01      	subs	r3, #1
 8005bb8:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8005bba:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005bbc:	3b01      	subs	r3, #1
 8005bbe:	b29b      	uxth	r3, r3
 8005bc0:	8563      	strh	r3, [r4, #42]	@ 0x2a
 8005bc2:	e7b5      	b.n	8005b30 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8005bc4:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005bc6:	9600      	str	r6, [sp, #0]
 8005bc8:	463b      	mov	r3, r7
 8005bca:	f04f 0200 	mov.w	r2, #0
 8005bce:	4641      	mov	r1, r8
 8005bd0:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8005bd2:	d119      	bne.n	8005c08 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005bd4:	f7ff fc32 	bl	800543c <I2C_WaitOnFlagUntilTimeout>
 8005bd8:	2800      	cmp	r0, #0
 8005bda:	d198      	bne.n	8005b0e <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005bdc:	6823      	ldr	r3, [r4, #0]
 8005bde:	681a      	ldr	r2, [r3, #0]
 8005be0:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8005be4:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005be6:	691a      	ldr	r2, [r3, #16]
 8005be8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005bea:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005bec:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005bee:	1c53      	adds	r3, r2, #1
 8005bf0:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8005bf2:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8005bf4:	3b01      	subs	r3, #1
 8005bf6:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8005bf8:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005bfa:	3b01      	subs	r3, #1
 8005bfc:	b29b      	uxth	r3, r3
 8005bfe:	8563      	strh	r3, [r4, #42]	@ 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005c00:	6823      	ldr	r3, [r4, #0]
 8005c02:	691b      	ldr	r3, [r3, #16]
 8005c04:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 8005c06:	e7d2      	b.n	8005bae <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005c08:	f7ff fc18 	bl	800543c <I2C_WaitOnFlagUntilTimeout>
 8005c0c:	4602      	mov	r2, r0
 8005c0e:	2800      	cmp	r0, #0
 8005c10:	f47f af7d 	bne.w	8005b0e <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005c14:	6823      	ldr	r3, [r4, #0]
 8005c16:	6819      	ldr	r1, [r3, #0]
 8005c18:	f421 6180 	bic.w	r1, r1, #1024	@ 0x400
 8005c1c:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005c1e:	6919      	ldr	r1, [r3, #16]
 8005c20:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005c22:	7019      	strb	r1, [r3, #0]
          hi2c->pBuffPtr++;
 8005c24:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005c26:	3301      	adds	r3, #1
 8005c28:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8005c2a:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8005c2c:	3b01      	subs	r3, #1
 8005c2e:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8005c30:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005c32:	3b01      	subs	r3, #1
 8005c34:	b29b      	uxth	r3, r3
 8005c36:	8563      	strh	r3, [r4, #42]	@ 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005c38:	4641      	mov	r1, r8
 8005c3a:	9600      	str	r6, [sp, #0]
 8005c3c:	463b      	mov	r3, r7
 8005c3e:	4620      	mov	r0, r4
 8005c40:	e7c8      	b.n	8005bd4 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005c42:	4632      	mov	r2, r6
 8005c44:	4639      	mov	r1, r7
 8005c46:	4620      	mov	r0, r4
 8005c48:	f7ff fdaa 	bl	80057a0 <I2C_WaitOnRXNEFlagUntilTimeout>
 8005c4c:	2800      	cmp	r0, #0
 8005c4e:	f47f af5e 	bne.w	8005b0e <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005c52:	6823      	ldr	r3, [r4, #0]
 8005c54:	691a      	ldr	r2, [r3, #16]
 8005c56:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005c58:	701a      	strb	r2, [r3, #0]
        hi2c->XferCount--;
 8005c5a:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
        hi2c->pBuffPtr++;
 8005c5c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 8005c5e:	3a01      	subs	r2, #1
 8005c60:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 8005c62:	1c4b      	adds	r3, r1, #1
        hi2c->XferCount--;
 8005c64:	8562      	strh	r2, [r4, #42]	@ 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8005c66:	6822      	ldr	r2, [r4, #0]
        hi2c->pBuffPtr++;
 8005c68:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferSize--;
 8005c6a:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8005c6c:	6950      	ldr	r0, [r2, #20]
        hi2c->XferSize--;
 8005c6e:	3b01      	subs	r3, #1
 8005c70:	b29b      	uxth	r3, r3
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8005c72:	0740      	lsls	r0, r0, #29
        hi2c->XferSize--;
 8005c74:	8523      	strh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8005c76:	f57f af5b 	bpl.w	8005b30 <HAL_I2C_Mem_Read+0xb8>
          if (hi2c->XferSize == 3U)
 8005c7a:	2b03      	cmp	r3, #3
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005c7c:	bf02      	ittt	eq
 8005c7e:	6813      	ldreq	r3, [r2, #0]
 8005c80:	f423 6380 	biceq.w	r3, r3, #1024	@ 0x400
 8005c84:	6013      	streq	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005c86:	6913      	ldr	r3, [r2, #16]
 8005c88:	704b      	strb	r3, [r1, #1]
 8005c8a:	e790      	b.n	8005bae <HAL_I2C_Mem_Read+0x136>
 8005c8c:	00100002 	.word	0x00100002
 8005c90:	ffff0000 	.word	0xffff0000
 8005c94:	00010004 	.word	0x00010004

08005c98 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8005c98:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005c9a:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8005c9e:	2b20      	cmp	r3, #32
 8005ca0:	b2dc      	uxtb	r4, r3
 8005ca2:	d116      	bne.n	8005cd2 <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8005ca4:	2324      	movs	r3, #36	@ 0x24
 8005ca6:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005caa:	6803      	ldr	r3, [r0, #0]
 8005cac:	681a      	ldr	r2, [r3, #0]
 8005cae:	f022 0201 	bic.w	r2, r2, #1
 8005cb2:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8005cb4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8005cb6:	f022 0210 	bic.w	r2, r2, #16
 8005cba:	625a      	str	r2, [r3, #36]	@ 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8005cbc:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8005cbe:	4311      	orrs	r1, r2
 8005cc0:	6259      	str	r1, [r3, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 8005cc2:	681a      	ldr	r2, [r3, #0]
 8005cc4:	f042 0201 	orr.w	r2, r2, #1
 8005cc8:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8005cca:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 8005cce:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8005cd0:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8005cd2:	2002      	movs	r0, #2
 8005cd4:	e7fc      	b.n	8005cd0 <HAL_I2CEx_ConfigAnalogFilter+0x38>

08005cd6 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8005cd6:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005cd8:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8005cdc:	2b20      	cmp	r3, #32
 8005cde:	b2dc      	uxtb	r4, r3
 8005ce0:	d116      	bne.n	8005d10 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005ce2:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8005ce4:	2324      	movs	r3, #36	@ 0x24
 8005ce6:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8005cea:	6813      	ldr	r3, [r2, #0]
 8005cec:	f023 0301 	bic.w	r3, r3, #1
 8005cf0:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8005cf2:	6a55      	ldr	r5, [r2, #36]	@ 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8005cf4:	f64f 73f0 	movw	r3, #65520	@ 0xfff0
 8005cf8:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8005cfa:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8005cfc:	b29b      	uxth	r3, r3
 8005cfe:	6253      	str	r3, [r2, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 8005d00:	6813      	ldr	r3, [r2, #0]
 8005d02:	f043 0301 	orr.w	r3, r3, #1
 8005d06:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8005d08:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 8005d0c:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8005d0e:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8005d10:	2002      	movs	r0, #2
 8005d12:	e7fc      	b.n	8005d0e <HAL_I2CEx_ConfigDigitalFilter+0x38>

08005d14 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005d14:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005d16:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005d1a:	01d2      	lsls	r2, r2, #7
 8005d1c:	3284      	adds	r2, #132	@ 0x84
 8005d1e:	1883      	adds	r3, r0, r2
{
 8005d20:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005d24:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005d26:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005d28:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8005d2a:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005d2e:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 8005d32:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005d34:	68c5      	ldr	r5, [r0, #12]
 8005d36:	f10c 0701 	add.w	r7, ip, #1
 8005d3a:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005d3e:	f3c6 460b 	ubfx	r6, r6, #16, #12
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005d42:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005d44:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005d46:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005d4a:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8005d4c:	68c6      	ldr	r6, [r0, #12]
 8005d4e:	68cd      	ldr	r5, [r1, #12]
 8005d50:	f3c6 060a 	ubfx	r6, r6, #0, #11
 8005d54:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8005d56:	689d      	ldr	r5, [r3, #8]
 8005d58:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 8005d5c:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005d5e:	68c7      	ldr	r7, [r0, #12]
 8005d60:	688d      	ldr	r5, [r1, #8]
 8005d62:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8005d66:	3501      	adds	r5, #1
 8005d68:	443d      	add	r5, r7
 8005d6a:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8005d6e:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005d70:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005d72:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005d74:	f025 0507 	bic.w	r5, r5, #7
 8005d78:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005d7a:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005d7e:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005d80:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8005d82:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8005d86:	f891 8031 	ldrb.w	r8, [r1, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005d8a:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8005d8e:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 8005d92:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8005d96:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8005d9a:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8005d9e:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8005da0:	695d      	ldr	r5, [r3, #20]
 8005da2:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 8005da6:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8005da8:	694d      	ldr	r5, [r1, #20]
 8005daa:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8005dac:	69dd      	ldr	r5, [r3, #28]
 8005dae:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 8005db2:	f025 0507 	bic.w	r5, r5, #7
 8005db6:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8005db8:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8005dbc:	433d      	orrs	r5, r7
 8005dbe:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005dc0:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005dc2:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005dc4:	f8c3 e028 	str.w	lr, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005dc8:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8005dca:	b31e      	cbz	r6, 8005e14 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8005dcc:	2e01      	cmp	r6, #1
 8005dce:	d023      	beq.n	8005e18 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8005dd0:	1eb5      	subs	r5, r6, #2
 8005dd2:	2d02      	cmp	r5, #2
 8005dd4:	d922      	bls.n	8005e1c <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_AL88))
  {
    tmp = 2U;
 8005dd6:	2e07      	cmp	r6, #7
 8005dd8:	bf14      	ite	ne
 8005dda:	2501      	movne	r5, #1
 8005ddc:	2502      	moveq	r5, #2
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005dde:	6ade      	ldr	r6, [r3, #44]	@ 0x2c
 8005de0:	f006 26e0 	and.w	r6, r6, #3758153728	@ 0xe000e000
 8005de4:	62de      	str	r6, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005de6:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005dea:	6a8e      	ldr	r6, [r1, #40]	@ 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005dec:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005dee:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005df0:	436e      	muls	r6, r5
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005df2:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005df4:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8005df8:	62dc      	str	r4, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8005dfa:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
 8005dfc:	f424 64ff 	bic.w	r4, r4, #2040	@ 0x7f8
 8005e00:	f024 0407 	bic.w	r4, r4, #7
 8005e04:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005e06:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8005e08:	5883      	ldr	r3, [r0, r2]
 8005e0a:	f043 0301 	orr.w	r3, r3, #1
 8005e0e:	5083      	str	r3, [r0, r2]
}
 8005e10:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8005e14:	2504      	movs	r5, #4
 8005e16:	e7e2      	b.n	8005dde <LTDC_SetConfig+0xca>
    tmp = 3U;
 8005e18:	2503      	movs	r5, #3
 8005e1a:	e7e0      	b.n	8005dde <LTDC_SetConfig+0xca>
    tmp = 2U;
 8005e1c:	2502      	movs	r5, #2
 8005e1e:	e7de      	b.n	8005dde <LTDC_SetConfig+0xca>

08005e20 <HAL_LTDC_Init>:
{
 8005e20:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8005e22:	4604      	mov	r4, r0
 8005e24:	2800      	cmp	r0, #0
 8005e26:	d063      	beq.n	8005ef0 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8005e28:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 8005e2c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005e30:	b91b      	cbnz	r3, 8005e3a <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8005e32:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 8005e36:	f7fb fda5 	bl	8001984 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005e3a:	2302      	movs	r3, #2
 8005e3c:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8005e40:	6823      	ldr	r3, [r4, #0]
 8005e42:	699a      	ldr	r2, [r3, #24]
 8005e44:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 8005e48:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005e4a:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8005e4e:	4302      	orrs	r2, r0
 8005e50:	68e0      	ldr	r0, [r4, #12]
 8005e52:	6999      	ldr	r1, [r3, #24]
 8005e54:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8005e56:	6920      	ldr	r0, [r4, #16]
 8005e58:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005e5a:	430a      	orrs	r2, r1
 8005e5c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005e5e:	689a      	ldr	r2, [r3, #8]
 8005e60:	4924      	ldr	r1, [pc, #144]	@ (8005ef4 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8005e62:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005e64:	400a      	ands	r2, r1
 8005e66:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8005e68:	689a      	ldr	r2, [r3, #8]
 8005e6a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005e6e:	69a0      	ldr	r0, [r4, #24]
 8005e70:	4302      	orrs	r2, r0
 8005e72:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005e74:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8005e76:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005e78:	400a      	ands	r2, r1
 8005e7a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8005e7c:	68da      	ldr	r2, [r3, #12]
 8005e7e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005e82:	6a20      	ldr	r0, [r4, #32]
 8005e84:	4302      	orrs	r2, r0
 8005e86:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005e88:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8005e8a:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005e8c:	400a      	ands	r2, r1
 8005e8e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8005e90:	691a      	ldr	r2, [r3, #16]
 8005e92:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005e96:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8005e98:	4302      	orrs	r2, r0
 8005e9a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8005e9c:	695a      	ldr	r2, [r3, #20]
 8005e9e:	400a      	ands	r2, r1
 8005ea0:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005ea2:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8005ea4:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005ea6:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8005eaa:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8005eac:	430a      	orrs	r2, r1
 8005eae:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005eb0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8005eb2:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8005eb6:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005eba:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 8005ebe:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8005ec0:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8005ec2:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 8005ec6:	432a      	orrs	r2, r5
 8005ec8:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8005ecc:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8005ed0:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8005ed2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005ed4:	f042 0206 	orr.w	r2, r2, #6
 8005ed8:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8005eda:	699a      	ldr	r2, [r3, #24]
 8005edc:	f042 0201 	orr.w	r2, r2, #1
 8005ee0:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005ee2:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8005ee4:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005ee6:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8005eea:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 8005eee:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005ef0:	2001      	movs	r0, #1
 8005ef2:	e7fc      	b.n	8005eee <HAL_LTDC_Init+0xce>
 8005ef4:	f000f800 	.word	0xf000f800

08005ef8 <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 8005ef8:	4770      	bx	lr

08005efa <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 8005efa:	4770      	bx	lr

08005efc <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005efc:	6803      	ldr	r3, [r0, #0]
{
 8005efe:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005f00:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8005f02:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005f04:	0772      	lsls	r2, r6, #29
{
 8005f06:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005f08:	d514      	bpl.n	8005f34 <HAL_LTDC_IRQHandler+0x38>
 8005f0a:	0769      	lsls	r1, r5, #29
 8005f0c:	d512      	bpl.n	8005f34 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8005f0e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005f10:	f022 0204 	bic.w	r2, r2, #4
 8005f14:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8005f16:	2204      	movs	r2, #4
 8005f18:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8005f1a:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 8005f1e:	f043 0301 	orr.w	r3, r3, #1
 8005f22:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 8005f26:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005f28:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005f2c:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005f30:	f7ff ffe2 	bl	8005ef8 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8005f34:	07b2      	lsls	r2, r6, #30
 8005f36:	d516      	bpl.n	8005f66 <HAL_LTDC_IRQHandler+0x6a>
 8005f38:	07ab      	lsls	r3, r5, #30
 8005f3a:	d514      	bpl.n	8005f66 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8005f3c:	6823      	ldr	r3, [r4, #0]
 8005f3e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005f40:	f022 0202 	bic.w	r2, r2, #2
 8005f44:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8005f46:	2202      	movs	r2, #2
 8005f48:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8005f4a:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 8005f4e:	4313      	orrs	r3, r2
 8005f50:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005f54:	2304      	movs	r3, #4
 8005f56:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005f5a:	2300      	movs	r3, #0
 8005f5c:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005f60:	4620      	mov	r0, r4
 8005f62:	f7ff ffc9 	bl	8005ef8 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8005f66:	07f0      	lsls	r0, r6, #31
 8005f68:	d510      	bpl.n	8005f8c <HAL_LTDC_IRQHandler+0x90>
 8005f6a:	07e9      	lsls	r1, r5, #31
 8005f6c:	d50e      	bpl.n	8005f8c <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005f6e:	6823      	ldr	r3, [r4, #0]
 8005f70:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005f72:	f022 0201 	bic.w	r2, r2, #1
 8005f76:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8005f78:	2201      	movs	r2, #1
 8005f7a:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 8005f7c:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8005f7e:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005f82:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8005f86:	4620      	mov	r0, r4
 8005f88:	f7fa ffe8 	bl	8000f5c <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8005f8c:	0732      	lsls	r2, r6, #28
 8005f8e:	d511      	bpl.n	8005fb4 <HAL_LTDC_IRQHandler+0xb8>
 8005f90:	072b      	lsls	r3, r5, #28
 8005f92:	d50f      	bpl.n	8005fb4 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8005f94:	6823      	ldr	r3, [r4, #0]
 8005f96:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005f98:	f022 0208 	bic.w	r2, r2, #8
 8005f9c:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8005f9e:	2208      	movs	r2, #8
 8005fa0:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8005fa2:	2301      	movs	r3, #1
 8005fa4:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005fa8:	2300      	movs	r3, #0
 8005faa:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8005fae:	4620      	mov	r0, r4
 8005fb0:	f7ff ffa3 	bl	8005efa <HAL_LTDC_ReloadEventCallback>
}
 8005fb4:	bd70      	pop	{r4, r5, r6, pc}

08005fb6 <HAL_LTDC_ConfigLayer>:
{
 8005fb6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8005fba:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
 8005fbe:	2b01      	cmp	r3, #1
{
 8005fc0:	4606      	mov	r6, r0
 8005fc2:	460f      	mov	r7, r1
 8005fc4:	4694      	mov	ip, r2
 8005fc6:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8005fca:	d01f      	beq.n	800600c <HAL_LTDC_ConfigLayer+0x56>
 8005fcc:	f04f 0801 	mov.w	r8, #1
 8005fd0:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005fd4:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005fd8:	2434      	movs	r4, #52	@ 0x34
 8005fda:	460d      	mov	r5, r1
 8005fdc:	fb04 6402 	mla	r4, r4, r2, r6
 8005fe0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005fe2:	3438      	adds	r4, #56	@ 0x38
 8005fe4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005fe6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005fe8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005fea:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005fec:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005fee:	682b      	ldr	r3, [r5, #0]
 8005ff0:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8005ff2:	4630      	mov	r0, r6
 8005ff4:	4662      	mov	r2, ip
 8005ff6:	4639      	mov	r1, r7
 8005ff8:	f7ff fe8c 	bl	8005d14 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005ffc:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8005ffe:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8006000:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8006004:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8006008:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 800600c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08006010 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8006010:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
 8006014:	2a01      	cmp	r2, #1
{
 8006016:	4603      	mov	r3, r0
 8006018:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800601c:	d012      	beq.n	8006044 <HAL_LTDC_ProgramLineEvent+0x34>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800601e:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006020:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8006024:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 8006026:	f020 0001 	bic.w	r0, r0, #1
 800602a:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800602c:	4806      	ldr	r0, [pc, #24]	@ (8006048 <HAL_LTDC_ProgramLineEvent+0x38>)
 800602e:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8006030:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8006032:	f041 0101 	orr.w	r1, r1, #1
 8006036:	6351      	str	r1, [r2, #52]	@ 0x34
  __HAL_UNLOCK(hltdc);
 8006038:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800603a:	2201      	movs	r2, #1
 800603c:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8006040:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
}
 8006044:	4770      	bx	lr
 8006046:	bf00      	nop
 8006048:	40016800 	.word	0x40016800

0800604c <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800604c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8006050:	4604      	mov	r4, r0
 8006052:	b340      	cbz	r0, 80060a6 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006054:	6803      	ldr	r3, [r0, #0]
 8006056:	07de      	lsls	r6, r3, #31
 8006058:	d410      	bmi.n	800607c <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800605a:	6823      	ldr	r3, [r4, #0]
 800605c:	079d      	lsls	r5, r3, #30
 800605e:	d45b      	bmi.n	8006118 <HAL_RCC_OscConfig+0xcc>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8006060:	6823      	ldr	r3, [r4, #0]
 8006062:	0719      	lsls	r1, r3, #28
 8006064:	f100 809d 	bmi.w	80061a2 <HAL_RCC_OscConfig+0x156>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8006068:	6823      	ldr	r3, [r4, #0]
 800606a:	075a      	lsls	r2, r3, #29
 800606c:	f100 80bd 	bmi.w	80061ea <HAL_RCC_OscConfig+0x19e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8006070:	69a3      	ldr	r3, [r4, #24]
 8006072:	2b00      	cmp	r3, #0
 8006074:	f040 8124 	bne.w	80062c0 <HAL_RCC_OscConfig+0x274>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8006078:	2000      	movs	r0, #0
 800607a:	e02c      	b.n	80060d6 <HAL_RCC_OscConfig+0x8a>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800607c:	4b8d      	ldr	r3, [pc, #564]	@ (80062b4 <HAL_RCC_OscConfig+0x268>)
 800607e:	689a      	ldr	r2, [r3, #8]
 8006080:	f002 020c 	and.w	r2, r2, #12
 8006084:	2a04      	cmp	r2, #4
 8006086:	d007      	beq.n	8006098 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8006088:	689a      	ldr	r2, [r3, #8]
 800608a:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800608e:	2a08      	cmp	r2, #8
 8006090:	d10b      	bne.n	80060aa <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8006092:	685b      	ldr	r3, [r3, #4]
 8006094:	0259      	lsls	r1, r3, #9
 8006096:	d508      	bpl.n	80060aa <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8006098:	4b86      	ldr	r3, [pc, #536]	@ (80062b4 <HAL_RCC_OscConfig+0x268>)
 800609a:	681b      	ldr	r3, [r3, #0]
 800609c:	039a      	lsls	r2, r3, #14
 800609e:	d5dc      	bpl.n	800605a <HAL_RCC_OscConfig+0xe>
 80060a0:	6863      	ldr	r3, [r4, #4]
 80060a2:	2b00      	cmp	r3, #0
 80060a4:	d1d9      	bne.n	800605a <HAL_RCC_OscConfig+0xe>
    return HAL_ERROR;
 80060a6:	2001      	movs	r0, #1
 80060a8:	e015      	b.n	80060d6 <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80060aa:	6863      	ldr	r3, [r4, #4]
 80060ac:	4d81      	ldr	r5, [pc, #516]	@ (80062b4 <HAL_RCC_OscConfig+0x268>)
 80060ae:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80060b2:	d113      	bne.n	80060dc <HAL_RCC_OscConfig+0x90>
 80060b4:	682b      	ldr	r3, [r5, #0]
 80060b6:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80060ba:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80060bc:	f7fe fb50 	bl	8004760 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80060c0:	4e7c      	ldr	r6, [pc, #496]	@ (80062b4 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 80060c2:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80060c4:	6833      	ldr	r3, [r6, #0]
 80060c6:	039b      	lsls	r3, r3, #14
 80060c8:	d4c7      	bmi.n	800605a <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80060ca:	f7fe fb49 	bl	8004760 <HAL_GetTick>
 80060ce:	1b40      	subs	r0, r0, r5
 80060d0:	2864      	cmp	r0, #100	@ 0x64
 80060d2:	d9f7      	bls.n	80060c4 <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 80060d4:	2003      	movs	r0, #3
}
 80060d6:	b002      	add	sp, #8
 80060d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80060dc:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80060e0:	d104      	bne.n	80060ec <HAL_RCC_OscConfig+0xa0>
 80060e2:	682b      	ldr	r3, [r5, #0]
 80060e4:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80060e8:	602b      	str	r3, [r5, #0]
 80060ea:	e7e3      	b.n	80060b4 <HAL_RCC_OscConfig+0x68>
 80060ec:	682a      	ldr	r2, [r5, #0]
 80060ee:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 80060f2:	602a      	str	r2, [r5, #0]
 80060f4:	682a      	ldr	r2, [r5, #0]
 80060f6:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 80060fa:	602a      	str	r2, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80060fc:	2b00      	cmp	r3, #0
 80060fe:	d1dd      	bne.n	80060bc <HAL_RCC_OscConfig+0x70>
        tickstart = HAL_GetTick();
 8006100:	f7fe fb2e 	bl	8004760 <HAL_GetTick>
 8006104:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8006106:	682b      	ldr	r3, [r5, #0]
 8006108:	039f      	lsls	r7, r3, #14
 800610a:	d5a6      	bpl.n	800605a <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800610c:	f7fe fb28 	bl	8004760 <HAL_GetTick>
 8006110:	1b80      	subs	r0, r0, r6
 8006112:	2864      	cmp	r0, #100	@ 0x64
 8006114:	d9f7      	bls.n	8006106 <HAL_RCC_OscConfig+0xba>
 8006116:	e7dd      	b.n	80060d4 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8006118:	4b66      	ldr	r3, [pc, #408]	@ (80062b4 <HAL_RCC_OscConfig+0x268>)
 800611a:	689a      	ldr	r2, [r3, #8]
 800611c:	f012 0f0c 	tst.w	r2, #12
 8006120:	d007      	beq.n	8006132 <HAL_RCC_OscConfig+0xe6>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006122:	689a      	ldr	r2, [r3, #8]
 8006124:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8006128:	2a08      	cmp	r2, #8
 800612a:	d111      	bne.n	8006150 <HAL_RCC_OscConfig+0x104>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800612c:	685b      	ldr	r3, [r3, #4]
 800612e:	025d      	lsls	r5, r3, #9
 8006130:	d40e      	bmi.n	8006150 <HAL_RCC_OscConfig+0x104>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8006132:	4a60      	ldr	r2, [pc, #384]	@ (80062b4 <HAL_RCC_OscConfig+0x268>)
 8006134:	6813      	ldr	r3, [r2, #0]
 8006136:	0799      	lsls	r1, r3, #30
 8006138:	d502      	bpl.n	8006140 <HAL_RCC_OscConfig+0xf4>
 800613a:	68e3      	ldr	r3, [r4, #12]
 800613c:	2b01      	cmp	r3, #1
 800613e:	d1b2      	bne.n	80060a6 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006140:	6813      	ldr	r3, [r2, #0]
 8006142:	6921      	ldr	r1, [r4, #16]
 8006144:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8006148:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800614c:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800614e:	e787      	b.n	8006060 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8006150:	68e2      	ldr	r2, [r4, #12]
 8006152:	4b59      	ldr	r3, [pc, #356]	@ (80062b8 <HAL_RCC_OscConfig+0x26c>)
 8006154:	b1b2      	cbz	r2, 8006184 <HAL_RCC_OscConfig+0x138>
        __HAL_RCC_HSI_ENABLE();
 8006156:	2201      	movs	r2, #1
 8006158:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800615a:	f7fe fb01 	bl	8004760 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800615e:	4d55      	ldr	r5, [pc, #340]	@ (80062b4 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8006160:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006162:	682b      	ldr	r3, [r5, #0]
 8006164:	079b      	lsls	r3, r3, #30
 8006166:	d507      	bpl.n	8006178 <HAL_RCC_OscConfig+0x12c>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006168:	682b      	ldr	r3, [r5, #0]
 800616a:	6922      	ldr	r2, [r4, #16]
 800616c:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8006170:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8006174:	602b      	str	r3, [r5, #0]
 8006176:	e773      	b.n	8006060 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8006178:	f7fe faf2 	bl	8004760 <HAL_GetTick>
 800617c:	1b80      	subs	r0, r0, r6
 800617e:	2802      	cmp	r0, #2
 8006180:	d9ef      	bls.n	8006162 <HAL_RCC_OscConfig+0x116>
 8006182:	e7a7      	b.n	80060d4 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 8006184:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006186:	f7fe faeb 	bl	8004760 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800618a:	4e4a      	ldr	r6, [pc, #296]	@ (80062b4 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 800618c:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800618e:	6833      	ldr	r3, [r6, #0]
 8006190:	079f      	lsls	r7, r3, #30
 8006192:	f57f af65 	bpl.w	8006060 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8006196:	f7fe fae3 	bl	8004760 <HAL_GetTick>
 800619a:	1b40      	subs	r0, r0, r5
 800619c:	2802      	cmp	r0, #2
 800619e:	d9f6      	bls.n	800618e <HAL_RCC_OscConfig+0x142>
 80061a0:	e798      	b.n	80060d4 <HAL_RCC_OscConfig+0x88>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 80061a2:	6962      	ldr	r2, [r4, #20]
 80061a4:	4b44      	ldr	r3, [pc, #272]	@ (80062b8 <HAL_RCC_OscConfig+0x26c>)
 80061a6:	b182      	cbz	r2, 80061ca <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 80061a8:	2201      	movs	r2, #1
 80061aa:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 80061ae:	f7fe fad7 	bl	8004760 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80061b2:	4e40      	ldr	r6, [pc, #256]	@ (80062b4 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 80061b4:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80061b6:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 80061b8:	079b      	lsls	r3, r3, #30
 80061ba:	f53f af55 	bmi.w	8006068 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80061be:	f7fe facf 	bl	8004760 <HAL_GetTick>
 80061c2:	1b40      	subs	r0, r0, r5
 80061c4:	2802      	cmp	r0, #2
 80061c6:	d9f6      	bls.n	80061b6 <HAL_RCC_OscConfig+0x16a>
 80061c8:	e784      	b.n	80060d4 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 80061ca:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 80061ce:	f7fe fac7 	bl	8004760 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80061d2:	4e38      	ldr	r6, [pc, #224]	@ (80062b4 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 80061d4:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80061d6:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 80061d8:	079f      	lsls	r7, r3, #30
 80061da:	f57f af45 	bpl.w	8006068 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80061de:	f7fe fabf 	bl	8004760 <HAL_GetTick>
 80061e2:	1b40      	subs	r0, r0, r5
 80061e4:	2802      	cmp	r0, #2
 80061e6:	d9f6      	bls.n	80061d6 <HAL_RCC_OscConfig+0x18a>
 80061e8:	e774      	b.n	80060d4 <HAL_RCC_OscConfig+0x88>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80061ea:	4b32      	ldr	r3, [pc, #200]	@ (80062b4 <HAL_RCC_OscConfig+0x268>)
 80061ec:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80061ee:	f012 5280 	ands.w	r2, r2, #268435456	@ 0x10000000
 80061f2:	d128      	bne.n	8006246 <HAL_RCC_OscConfig+0x1fa>
      __HAL_RCC_PWR_CLK_ENABLE();
 80061f4:	9201      	str	r2, [sp, #4]
 80061f6:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80061f8:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 80061fc:	641a      	str	r2, [r3, #64]	@ 0x40
 80061fe:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006200:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006204:	9301      	str	r3, [sp, #4]
 8006206:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8006208:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800620a:	4d2c      	ldr	r5, [pc, #176]	@ (80062bc <HAL_RCC_OscConfig+0x270>)
 800620c:	682b      	ldr	r3, [r5, #0]
 800620e:	05d8      	lsls	r0, r3, #23
 8006210:	d51b      	bpl.n	800624a <HAL_RCC_OscConfig+0x1fe>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006212:	68a3      	ldr	r3, [r4, #8]
 8006214:	4d27      	ldr	r5, [pc, #156]	@ (80062b4 <HAL_RCC_OscConfig+0x268>)
 8006216:	2b01      	cmp	r3, #1
 8006218:	d127      	bne.n	800626a <HAL_RCC_OscConfig+0x21e>
 800621a:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800621c:	f043 0301 	orr.w	r3, r3, #1
 8006220:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
 8006222:	f7fe fa9d 	bl	8004760 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006226:	4e23      	ldr	r6, [pc, #140]	@ (80062b4 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8006228:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800622a:	f241 3888 	movw	r8, #5000	@ 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800622e:	6f33      	ldr	r3, [r6, #112]	@ 0x70
 8006230:	079a      	lsls	r2, r3, #30
 8006232:	d539      	bpl.n	80062a8 <HAL_RCC_OscConfig+0x25c>
    if(pwrclkchanged == SET)
 8006234:	2f00      	cmp	r7, #0
 8006236:	f43f af1b 	beq.w	8006070 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 800623a:	4a1e      	ldr	r2, [pc, #120]	@ (80062b4 <HAL_RCC_OscConfig+0x268>)
 800623c:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 800623e:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8006242:	6413      	str	r3, [r2, #64]	@ 0x40
 8006244:	e714      	b.n	8006070 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 8006246:	2700      	movs	r7, #0
 8006248:	e7df      	b.n	800620a <HAL_RCC_OscConfig+0x1be>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800624a:	682b      	ldr	r3, [r5, #0]
 800624c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006250:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8006252:	f7fe fa85 	bl	8004760 <HAL_GetTick>
 8006256:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006258:	682b      	ldr	r3, [r5, #0]
 800625a:	05d9      	lsls	r1, r3, #23
 800625c:	d4d9      	bmi.n	8006212 <HAL_RCC_OscConfig+0x1c6>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800625e:	f7fe fa7f 	bl	8004760 <HAL_GetTick>
 8006262:	1b80      	subs	r0, r0, r6
 8006264:	2802      	cmp	r0, #2
 8006266:	d9f7      	bls.n	8006258 <HAL_RCC_OscConfig+0x20c>
 8006268:	e734      	b.n	80060d4 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800626a:	2b05      	cmp	r3, #5
 800626c:	d104      	bne.n	8006278 <HAL_RCC_OscConfig+0x22c>
 800626e:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8006270:	f043 0304 	orr.w	r3, r3, #4
 8006274:	672b      	str	r3, [r5, #112]	@ 0x70
 8006276:	e7d0      	b.n	800621a <HAL_RCC_OscConfig+0x1ce>
 8006278:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 800627a:	f022 0201 	bic.w	r2, r2, #1
 800627e:	672a      	str	r2, [r5, #112]	@ 0x70
 8006280:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 8006282:	f022 0204 	bic.w	r2, r2, #4
 8006286:	672a      	str	r2, [r5, #112]	@ 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8006288:	2b00      	cmp	r3, #0
 800628a:	d1ca      	bne.n	8006222 <HAL_RCC_OscConfig+0x1d6>
      tickstart = HAL_GetTick();
 800628c:	f7fe fa68 	bl	8004760 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006290:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 8006294:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8006296:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8006298:	079b      	lsls	r3, r3, #30
 800629a:	d5cb      	bpl.n	8006234 <HAL_RCC_OscConfig+0x1e8>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800629c:	f7fe fa60 	bl	8004760 <HAL_GetTick>
 80062a0:	1b80      	subs	r0, r0, r6
 80062a2:	4540      	cmp	r0, r8
 80062a4:	d9f7      	bls.n	8006296 <HAL_RCC_OscConfig+0x24a>
 80062a6:	e715      	b.n	80060d4 <HAL_RCC_OscConfig+0x88>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80062a8:	f7fe fa5a 	bl	8004760 <HAL_GetTick>
 80062ac:	1b40      	subs	r0, r0, r5
 80062ae:	4540      	cmp	r0, r8
 80062b0:	d9bd      	bls.n	800622e <HAL_RCC_OscConfig+0x1e2>
 80062b2:	e70f      	b.n	80060d4 <HAL_RCC_OscConfig+0x88>
 80062b4:	40023800 	.word	0x40023800
 80062b8:	42470000 	.word	0x42470000
 80062bc:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 80062c0:	4d37      	ldr	r5, [pc, #220]	@ (80063a0 <HAL_RCC_OscConfig+0x354>)
 80062c2:	68aa      	ldr	r2, [r5, #8]
 80062c4:	f002 020c 	and.w	r2, r2, #12
 80062c8:	2a08      	cmp	r2, #8
 80062ca:	d03e      	beq.n	800634a <HAL_RCC_OscConfig+0x2fe>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80062cc:	2b02      	cmp	r3, #2
 80062ce:	4b35      	ldr	r3, [pc, #212]	@ (80063a4 <HAL_RCC_OscConfig+0x358>)
 80062d0:	f04f 0200 	mov.w	r2, #0
        __HAL_RCC_PLL_DISABLE();
 80062d4:	661a      	str	r2, [r3, #96]	@ 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80062d6:	d12b      	bne.n	8006330 <HAL_RCC_OscConfig+0x2e4>
        tickstart = HAL_GetTick();
 80062d8:	f7fe fa42 	bl	8004760 <HAL_GetTick>
 80062dc:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80062de:	682b      	ldr	r3, [r5, #0]
 80062e0:	0199      	lsls	r1, r3, #6
 80062e2:	d41f      	bmi.n	8006324 <HAL_RCC_OscConfig+0x2d8>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 80062e4:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 80062e8:	4313      	orrs	r3, r2
 80062ea:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 80062ec:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80062f0:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80062f2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80062f6:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 80062f8:	0852      	lsrs	r2, r2, #1
 80062fa:	3a01      	subs	r2, #1
 80062fc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8006300:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8006302:	4b28      	ldr	r3, [pc, #160]	@ (80063a4 <HAL_RCC_OscConfig+0x358>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006304:	4d26      	ldr	r5, [pc, #152]	@ (80063a0 <HAL_RCC_OscConfig+0x354>)
        __HAL_RCC_PLL_ENABLE();
 8006306:	2201      	movs	r2, #1
 8006308:	661a      	str	r2, [r3, #96]	@ 0x60
        tickstart = HAL_GetTick();
 800630a:	f7fe fa29 	bl	8004760 <HAL_GetTick>
 800630e:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006310:	682b      	ldr	r3, [r5, #0]
 8006312:	019a      	lsls	r2, r3, #6
 8006314:	f53f aeb0 	bmi.w	8006078 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006318:	f7fe fa22 	bl	8004760 <HAL_GetTick>
 800631c:	1b00      	subs	r0, r0, r4
 800631e:	2802      	cmp	r0, #2
 8006320:	d9f6      	bls.n	8006310 <HAL_RCC_OscConfig+0x2c4>
 8006322:	e6d7      	b.n	80060d4 <HAL_RCC_OscConfig+0x88>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006324:	f7fe fa1c 	bl	8004760 <HAL_GetTick>
 8006328:	1b80      	subs	r0, r0, r6
 800632a:	2802      	cmp	r0, #2
 800632c:	d9d7      	bls.n	80062de <HAL_RCC_OscConfig+0x292>
 800632e:	e6d1      	b.n	80060d4 <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 8006330:	f7fe fa16 	bl	8004760 <HAL_GetTick>
 8006334:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006336:	682b      	ldr	r3, [r5, #0]
 8006338:	019b      	lsls	r3, r3, #6
 800633a:	f57f ae9d 	bpl.w	8006078 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800633e:	f7fe fa0f 	bl	8004760 <HAL_GetTick>
 8006342:	1b00      	subs	r0, r0, r4
 8006344:	2802      	cmp	r0, #2
 8006346:	d9f6      	bls.n	8006336 <HAL_RCC_OscConfig+0x2ea>
 8006348:	e6c4      	b.n	80060d4 <HAL_RCC_OscConfig+0x88>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800634a:	2b01      	cmp	r3, #1
 800634c:	f43f aeab 	beq.w	80060a6 <HAL_RCC_OscConfig+0x5a>
        pll_config = RCC->PLLCFGR;
 8006350:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006352:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006354:	f403 0180 	and.w	r1, r3, #4194304	@ 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006358:	4291      	cmp	r1, r2
 800635a:	f47f aea4 	bne.w	80060a6 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800635e:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8006360:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006364:	428a      	cmp	r2, r1
 8006366:	f47f ae9e 	bne.w	80060a6 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800636a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800636c:	f647 72c0 	movw	r2, #32704	@ 0x7fc0
 8006370:	401a      	ands	r2, r3
 8006372:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 8006376:	f47f ae96 	bne.w	80060a6 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800637a:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800637c:	0852      	lsrs	r2, r2, #1
 800637e:	f403 3140 	and.w	r1, r3, #196608	@ 0x30000
 8006382:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8006384:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8006388:	f47f ae8d 	bne.w	80060a6 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800638c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800638e:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8006392:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 8006396:	bf14      	ite	ne
 8006398:	2001      	movne	r0, #1
 800639a:	2000      	moveq	r0, #0
 800639c:	e69b      	b.n	80060d6 <HAL_RCC_OscConfig+0x8a>
 800639e:	bf00      	nop
 80063a0:	40023800 	.word	0x40023800
 80063a4:	42470000 	.word	0x42470000

080063a8 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80063a8:	4913      	ldr	r1, [pc, #76]	@ (80063f8 <HAL_RCC_GetSysClockFreq+0x50>)
{
 80063aa:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80063ac:	688b      	ldr	r3, [r1, #8]
 80063ae:	f003 030c 	and.w	r3, r3, #12
 80063b2:	2b04      	cmp	r3, #4
 80063b4:	d01c      	beq.n	80063f0 <HAL_RCC_GetSysClockFreq+0x48>
 80063b6:	2b08      	cmp	r3, #8
 80063b8:	d11c      	bne.n	80063f4 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80063ba:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80063bc:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80063be:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80063c0:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80063c4:	bf14      	ite	ne
 80063c6:	480d      	ldrne	r0, [pc, #52]	@ (80063fc <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80063c8:	480d      	ldreq	r0, [pc, #52]	@ (8006400 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80063ca:	f3c1 1188 	ubfx	r1, r1, #6, #9
 80063ce:	bf18      	it	ne
 80063d0:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80063d2:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80063d6:	fba1 0100 	umull	r0, r1, r1, r0
 80063da:	f7f9 ff59 	bl	8000290 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 80063de:	4b06      	ldr	r3, [pc, #24]	@ (80063f8 <HAL_RCC_GetSysClockFreq+0x50>)
 80063e0:	685b      	ldr	r3, [r3, #4]
 80063e2:	f3c3 4301 	ubfx	r3, r3, #16, #2
 80063e6:	3301      	adds	r3, #1
 80063e8:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 80063ea:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 80063ee:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80063f0:	4802      	ldr	r0, [pc, #8]	@ (80063fc <HAL_RCC_GetSysClockFreq+0x54>)
 80063f2:	e7fc      	b.n	80063ee <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 80063f4:	4802      	ldr	r0, [pc, #8]	@ (8006400 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 80063f6:	e7fa      	b.n	80063ee <HAL_RCC_GetSysClockFreq+0x46>
 80063f8:	40023800 	.word	0x40023800
 80063fc:	007a1200 	.word	0x007a1200
 8006400:	00f42400 	.word	0x00f42400

08006404 <HAL_RCC_ClockConfig>:
{
 8006404:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006408:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 800640a:	4604      	mov	r4, r0
 800640c:	b910      	cbnz	r0, 8006414 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 800640e:	2001      	movs	r0, #1
}
 8006410:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8006414:	4b43      	ldr	r3, [pc, #268]	@ (8006524 <HAL_RCC_ClockConfig+0x120>)
 8006416:	681a      	ldr	r2, [r3, #0]
 8006418:	f002 020f 	and.w	r2, r2, #15
 800641c:	428a      	cmp	r2, r1
 800641e:	d328      	bcc.n	8006472 <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006420:	6821      	ldr	r1, [r4, #0]
 8006422:	078f      	lsls	r7, r1, #30
 8006424:	d42d      	bmi.n	8006482 <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8006426:	07c8      	lsls	r0, r1, #31
 8006428:	d440      	bmi.n	80064ac <HAL_RCC_ClockConfig+0xa8>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800642a:	4b3e      	ldr	r3, [pc, #248]	@ (8006524 <HAL_RCC_ClockConfig+0x120>)
 800642c:	681a      	ldr	r2, [r3, #0]
 800642e:	f002 020f 	and.w	r2, r2, #15
 8006432:	42aa      	cmp	r2, r5
 8006434:	d865      	bhi.n	8006502 <HAL_RCC_ClockConfig+0xfe>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006436:	6822      	ldr	r2, [r4, #0]
 8006438:	0751      	lsls	r1, r2, #29
 800643a:	d46b      	bmi.n	8006514 <HAL_RCC_ClockConfig+0x110>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800643c:	0713      	lsls	r3, r2, #28
 800643e:	d507      	bpl.n	8006450 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8006440:	4a39      	ldr	r2, [pc, #228]	@ (8006528 <HAL_RCC_ClockConfig+0x124>)
 8006442:	6921      	ldr	r1, [r4, #16]
 8006444:	6893      	ldr	r3, [r2, #8]
 8006446:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 800644a:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800644e:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8006450:	f7ff ffaa 	bl	80063a8 <HAL_RCC_GetSysClockFreq>
 8006454:	4b34      	ldr	r3, [pc, #208]	@ (8006528 <HAL_RCC_ClockConfig+0x124>)
 8006456:	4a35      	ldr	r2, [pc, #212]	@ (800652c <HAL_RCC_ClockConfig+0x128>)
 8006458:	689b      	ldr	r3, [r3, #8]
 800645a:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800645e:	5cd3      	ldrb	r3, [r2, r3]
 8006460:	40d8      	lsrs	r0, r3
 8006462:	4b33      	ldr	r3, [pc, #204]	@ (8006530 <HAL_RCC_ClockConfig+0x12c>)
 8006464:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8006466:	4b33      	ldr	r3, [pc, #204]	@ (8006534 <HAL_RCC_ClockConfig+0x130>)
 8006468:	6818      	ldr	r0, [r3, #0]
 800646a:	f7fb fc3f 	bl	8001cec <HAL_InitTick>
  return HAL_OK;
 800646e:	2000      	movs	r0, #0
 8006470:	e7ce      	b.n	8006410 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006472:	b2ca      	uxtb	r2, r1
 8006474:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8006476:	681b      	ldr	r3, [r3, #0]
 8006478:	f003 030f 	and.w	r3, r3, #15
 800647c:	428b      	cmp	r3, r1
 800647e:	d1c6      	bne.n	800640e <HAL_RCC_ClockConfig+0xa>
 8006480:	e7ce      	b.n	8006420 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006482:	4b29      	ldr	r3, [pc, #164]	@ (8006528 <HAL_RCC_ClockConfig+0x124>)
 8006484:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8006488:	bf1e      	ittt	ne
 800648a:	689a      	ldrne	r2, [r3, #8]
 800648c:	f442 52e0 	orrne.w	r2, r2, #7168	@ 0x1c00
 8006490:	609a      	strne	r2, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006492:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8006494:	bf42      	ittt	mi
 8006496:	689a      	ldrmi	r2, [r3, #8]
 8006498:	f442 4260 	orrmi.w	r2, r2, #57344	@ 0xe000
 800649c:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800649e:	689a      	ldr	r2, [r3, #8]
 80064a0:	68a0      	ldr	r0, [r4, #8]
 80064a2:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 80064a6:	4302      	orrs	r2, r0
 80064a8:	609a      	str	r2, [r3, #8]
 80064aa:	e7bc      	b.n	8006426 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80064ac:	6862      	ldr	r2, [r4, #4]
 80064ae:	4b1e      	ldr	r3, [pc, #120]	@ (8006528 <HAL_RCC_ClockConfig+0x124>)
 80064b0:	2a01      	cmp	r2, #1
 80064b2:	d11c      	bne.n	80064ee <HAL_RCC_ClockConfig+0xea>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80064b4:	681b      	ldr	r3, [r3, #0]
 80064b6:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80064ba:	d0a8      	beq.n	800640e <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80064bc:	4e1a      	ldr	r6, [pc, #104]	@ (8006528 <HAL_RCC_ClockConfig+0x124>)
 80064be:	68b3      	ldr	r3, [r6, #8]
 80064c0:	f023 0303 	bic.w	r3, r3, #3
 80064c4:	4313      	orrs	r3, r2
 80064c6:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 80064c8:	f7fe f94a 	bl	8004760 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80064cc:	f241 3888 	movw	r8, #5000	@ 0x1388
    tickstart = HAL_GetTick();
 80064d0:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80064d2:	68b3      	ldr	r3, [r6, #8]
 80064d4:	6862      	ldr	r2, [r4, #4]
 80064d6:	f003 030c 	and.w	r3, r3, #12
 80064da:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 80064de:	d0a4      	beq.n	800642a <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80064e0:	f7fe f93e 	bl	8004760 <HAL_GetTick>
 80064e4:	1bc0      	subs	r0, r0, r7
 80064e6:	4540      	cmp	r0, r8
 80064e8:	d9f3      	bls.n	80064d2 <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 80064ea:	2003      	movs	r0, #3
 80064ec:	e790      	b.n	8006410 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80064ee:	1e91      	subs	r1, r2, #2
 80064f0:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80064f2:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80064f4:	d802      	bhi.n	80064fc <HAL_RCC_ClockConfig+0xf8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80064f6:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
 80064fa:	e7de      	b.n	80064ba <HAL_RCC_ClockConfig+0xb6>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80064fc:	f013 0f02 	tst.w	r3, #2
 8006500:	e7db      	b.n	80064ba <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006502:	b2ea      	uxtb	r2, r5
 8006504:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8006506:	681b      	ldr	r3, [r3, #0]
 8006508:	f003 030f 	and.w	r3, r3, #15
 800650c:	42ab      	cmp	r3, r5
 800650e:	f47f af7e 	bne.w	800640e <HAL_RCC_ClockConfig+0xa>
 8006512:	e790      	b.n	8006436 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8006514:	4904      	ldr	r1, [pc, #16]	@ (8006528 <HAL_RCC_ClockConfig+0x124>)
 8006516:	68e0      	ldr	r0, [r4, #12]
 8006518:	688b      	ldr	r3, [r1, #8]
 800651a:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 800651e:	4303      	orrs	r3, r0
 8006520:	608b      	str	r3, [r1, #8]
 8006522:	e78b      	b.n	800643c <HAL_RCC_ClockConfig+0x38>
 8006524:	40023c00 	.word	0x40023c00
 8006528:	40023800 	.word	0x40023800
 800652c:	08020240 	.word	0x08020240
 8006530:	20000074 	.word	0x20000074
 8006534:	2000007c 	.word	0x2000007c

08006538 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8006538:	4b04      	ldr	r3, [pc, #16]	@ (800654c <HAL_RCC_GetPCLK1Freq+0x14>)
 800653a:	4a05      	ldr	r2, [pc, #20]	@ (8006550 <HAL_RCC_GetPCLK1Freq+0x18>)
 800653c:	689b      	ldr	r3, [r3, #8]
 800653e:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8006542:	5cd3      	ldrb	r3, [r2, r3]
 8006544:	4a03      	ldr	r2, [pc, #12]	@ (8006554 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8006546:	6810      	ldr	r0, [r2, #0]
}
 8006548:	40d8      	lsrs	r0, r3
 800654a:	4770      	bx	lr
 800654c:	40023800 	.word	0x40023800
 8006550:	08020238 	.word	0x08020238
 8006554:	20000074 	.word	0x20000074

08006558 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 8006558:	4b04      	ldr	r3, [pc, #16]	@ (800656c <HAL_RCC_GetPCLK2Freq+0x14>)
 800655a:	4a05      	ldr	r2, [pc, #20]	@ (8006570 <HAL_RCC_GetPCLK2Freq+0x18>)
 800655c:	689b      	ldr	r3, [r3, #8]
 800655e:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8006562:	5cd3      	ldrb	r3, [r2, r3]
 8006564:	4a03      	ldr	r2, [pc, #12]	@ (8006574 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8006566:	6810      	ldr	r0, [r2, #0]
}
 8006568:	40d8      	lsrs	r0, r3
 800656a:	4770      	bx	lr
 800656c:	40023800 	.word	0x40023800
 8006570:	08020238 	.word	0x08020238
 8006574:	20000074 	.word	0x20000074

08006578 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8006578:	230f      	movs	r3, #15
 800657a:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800657c:	4b0b      	ldr	r3, [pc, #44]	@ (80065ac <HAL_RCC_GetClockConfig+0x34>)
 800657e:	689a      	ldr	r2, [r3, #8]
 8006580:	f002 0203 	and.w	r2, r2, #3
 8006584:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8006586:	689a      	ldr	r2, [r3, #8]
 8006588:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 800658c:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800658e:	689a      	ldr	r2, [r3, #8]
 8006590:	f402 52e0 	and.w	r2, r2, #7168	@ 0x1c00
 8006594:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8006596:	689b      	ldr	r3, [r3, #8]
 8006598:	08db      	lsrs	r3, r3, #3
 800659a:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 800659e:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 80065a0:	4b03      	ldr	r3, [pc, #12]	@ (80065b0 <HAL_RCC_GetClockConfig+0x38>)
 80065a2:	681b      	ldr	r3, [r3, #0]
 80065a4:	f003 030f 	and.w	r3, r3, #15
 80065a8:	600b      	str	r3, [r1, #0]
}
 80065aa:	4770      	bx	lr
 80065ac:	40023800 	.word	0x40023800
 80065b0:	40023c00 	.word	0x40023c00

080065b4 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 80065b4:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 80065b6:	f013 0f43 	tst.w	r3, #67	@ 0x43
{
 80065ba:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80065bc:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 80065be:	f040 8088 	bne.w	80066d2 <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 80065c2:	6823      	ldr	r3, [r4, #0]
 80065c4:	f013 0f0c 	tst.w	r3, #12
 80065c8:	d045      	beq.n	8006656 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 80065ca:	4b8c      	ldr	r3, [pc, #560]	@ (80067fc <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80065cc:	4d8c      	ldr	r5, [pc, #560]	@ (8006800 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_DISABLE();
 80065ce:	2200      	movs	r2, #0
 80065d0:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 80065d2:	f7fe f8c5 	bl	8004760 <HAL_GetTick>
 80065d6:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80065d8:	682b      	ldr	r3, [r5, #0]
 80065da:	0099      	lsls	r1, r3, #2
 80065dc:	f100 80cb 	bmi.w	8006776 <HAL_RCCEx_PeriphCLKConfig+0x1c2>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 80065e0:	6821      	ldr	r1, [r4, #0]
 80065e2:	074a      	lsls	r2, r1, #29
 80065e4:	d515      	bpl.n	8006612 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80065e6:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 80065ea:	f8d5 2088 	ldr.w	r2, [r5, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80065ee:	061b      	lsls	r3, r3, #24
 80065f0:	f002 42e0 	and.w	r2, r2, #1879048192	@ 0x70000000
 80065f4:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80065f8:	4313      	orrs	r3, r2
 80065fa:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 80065fe:	f8d5 308c 	ldr.w	r3, [r5, #140]	@ 0x8c
 8006602:	6a22      	ldr	r2, [r4, #32]
 8006604:	f423 53f8 	bic.w	r3, r3, #7936	@ 0x1f00
 8006608:	3a01      	subs	r2, #1
 800660a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800660e:	f8c5 308c 	str.w	r3, [r5, #140]	@ 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8006612:	070b      	lsls	r3, r1, #28
 8006614:	d514      	bpl.n	8006640 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006616:	4a7a      	ldr	r2, [pc, #488]	@ (8006800 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8006618:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800661a:	f8d2 1088 	ldr.w	r1, [r2, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800661e:	6920      	ldr	r0, [r4, #16]
 8006620:	071b      	lsls	r3, r3, #28
 8006622:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 8006626:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800662a:	430b      	orrs	r3, r1
 800662c:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8006630:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 8006634:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8006636:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 800663a:	430b      	orrs	r3, r1
 800663c:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8006640:	4b6e      	ldr	r3, [pc, #440]	@ (80067fc <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8006642:	4e6f      	ldr	r6, [pc, #444]	@ (8006800 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_ENABLE();
 8006644:	2201      	movs	r2, #1
 8006646:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 8006648:	f7fe f88a 	bl	8004760 <HAL_GetTick>
 800664c:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800664e:	6833      	ldr	r3, [r6, #0]
 8006650:	009f      	lsls	r7, r3, #2
 8006652:	f140 8097 	bpl.w	8006784 <HAL_RCCEx_PeriphCLKConfig+0x1d0>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8006656:	6823      	ldr	r3, [r4, #0]
 8006658:	0698      	lsls	r0, r3, #26
 800665a:	d534      	bpl.n	80066c6 <HAL_RCCEx_PeriphCLKConfig+0x112>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 800665c:	2300      	movs	r3, #0
 800665e:	9301      	str	r3, [sp, #4]
 8006660:	4b67      	ldr	r3, [pc, #412]	@ (8006800 <HAL_RCCEx_PeriphCLKConfig+0x24c>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8006662:	4d68      	ldr	r5, [pc, #416]	@ (8006804 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8006664:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8006666:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 800666a:	641a      	str	r2, [r3, #64]	@ 0x40
 800666c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800666e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006672:	9301      	str	r3, [sp, #4]
 8006674:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8006676:	682b      	ldr	r3, [r5, #0]
 8006678:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800667c:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 800667e:	f7fe f86f 	bl	8004760 <HAL_GetTick>
 8006682:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8006684:	682b      	ldr	r3, [r5, #0]
 8006686:	05d8      	lsls	r0, r3, #23
 8006688:	f140 8083 	bpl.w	8006792 <HAL_RCCEx_PeriphCLKConfig+0x1de>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800668c:	4d5c      	ldr	r5, [pc, #368]	@ (8006800 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800668e:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8006690:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006692:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 8006696:	f040 8083 	bne.w	80067a0 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800669a:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800669c:	f403 7240 	and.w	r2, r3, #768	@ 0x300
 80066a0:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
 80066a4:	4a56      	ldr	r2, [pc, #344]	@ (8006800 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 80066a6:	f040 809e 	bne.w	80067e6 <HAL_RCCEx_PeriphCLKConfig+0x232>
 80066aa:	6891      	ldr	r1, [r2, #8]
 80066ac:	f023 4070 	bic.w	r0, r3, #4026531840	@ 0xf0000000
 80066b0:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 80066b4:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
 80066b8:	4301      	orrs	r1, r0
 80066ba:	6091      	str	r1, [r2, #8]
 80066bc:	6f11      	ldr	r1, [r2, #112]	@ 0x70
 80066be:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80066c2:	430b      	orrs	r3, r1
 80066c4:	6713      	str	r3, [r2, #112]	@ 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 80066c6:	6823      	ldr	r3, [r4, #0]
 80066c8:	06db      	lsls	r3, r3, #27
 80066ca:	f100 8090 	bmi.w	80067ee <HAL_RCCEx_PeriphCLKConfig+0x23a>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
 80066ce:	2000      	movs	r0, #0
 80066d0:	e04f      	b.n	8006772 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 80066d2:	4b4a      	ldr	r3, [pc, #296]	@ (80067fc <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80066d4:	4e4a      	ldr	r6, [pc, #296]	@ (8006800 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_DISABLE();
 80066d6:	2200      	movs	r2, #0
 80066d8:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 80066da:	f7fe f841 	bl	8004760 <HAL_GetTick>
 80066de:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80066e0:	6833      	ldr	r3, [r6, #0]
 80066e2:	011f      	lsls	r7, r3, #4
 80066e4:	d43f      	bmi.n	8006766 <HAL_RCCEx_PeriphCLKConfig+0x1b2>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 80066e6:	6821      	ldr	r1, [r4, #0]
 80066e8:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 80066ea:	bf41      	itttt	mi
 80066ec:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 80066f0:	071b      	lslmi	r3, r3, #28
 80066f2:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 80066f6:	f8c6 3084 	strmi.w	r3, [r6, #132]	@ 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 80066fa:	078a      	lsls	r2, r1, #30
 80066fc:	d515      	bpl.n	800672a <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80066fe:	4a40      	ldr	r2, [pc, #256]	@ (8006800 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8006700:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006702:	f8d2 0084 	ldr.w	r0, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8006706:	6865      	ldr	r5, [r4, #4]
 8006708:	061b      	lsls	r3, r3, #24
 800670a:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 800670e:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8006712:	4303      	orrs	r3, r0
 8006714:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8006718:	f8d2 008c 	ldr.w	r0, [r2, #140]	@ 0x8c
 800671c:	69e3      	ldr	r3, [r4, #28]
 800671e:	f020 001f 	bic.w	r0, r0, #31
 8006722:	3b01      	subs	r3, #1
 8006724:	4303      	orrs	r3, r0
 8006726:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800672a:	064b      	lsls	r3, r1, #25
 800672c:	d50a      	bpl.n	8006744 <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800672e:	68e3      	ldr	r3, [r4, #12]
 8006730:	6862      	ldr	r2, [r4, #4]
 8006732:	061b      	lsls	r3, r3, #24
 8006734:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006738:	68a2      	ldr	r2, [r4, #8]
 800673a:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800673e:	4a30      	ldr	r2, [pc, #192]	@ (8006800 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 8006740:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8006744:	4b2d      	ldr	r3, [pc, #180]	@ (80067fc <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006746:	4e2e      	ldr	r6, [pc, #184]	@ (8006800 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_ENABLE();
 8006748:	2201      	movs	r2, #1
 800674a:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 800674c:	f7fe f808 	bl	8004760 <HAL_GetTick>
 8006750:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006752:	6833      	ldr	r3, [r6, #0]
 8006754:	011f      	lsls	r7, r3, #4
 8006756:	f53f af34 	bmi.w	80065c2 <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800675a:	f7fe f801 	bl	8004760 <HAL_GetTick>
 800675e:	1b40      	subs	r0, r0, r5
 8006760:	2802      	cmp	r0, #2
 8006762:	d9f6      	bls.n	8006752 <HAL_RCCEx_PeriphCLKConfig+0x19e>
 8006764:	e004      	b.n	8006770 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8006766:	f7fd fffb 	bl	8004760 <HAL_GetTick>
 800676a:	1b40      	subs	r0, r0, r5
 800676c:	2802      	cmp	r0, #2
 800676e:	d9b7      	bls.n	80066e0 <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 8006770:	2003      	movs	r0, #3
}
 8006772:	b003      	add	sp, #12
 8006774:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8006776:	f7fd fff3 	bl	8004760 <HAL_GetTick>
 800677a:	1b80      	subs	r0, r0, r6
 800677c:	2802      	cmp	r0, #2
 800677e:	f67f af2b 	bls.w	80065d8 <HAL_RCCEx_PeriphCLKConfig+0x24>
 8006782:	e7f5      	b.n	8006770 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8006784:	f7fd ffec 	bl	8004760 <HAL_GetTick>
 8006788:	1b40      	subs	r0, r0, r5
 800678a:	2802      	cmp	r0, #2
 800678c:	f67f af5f 	bls.w	800664e <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8006790:	e7ee      	b.n	8006770 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8006792:	f7fd ffe5 	bl	8004760 <HAL_GetTick>
 8006796:	1b80      	subs	r0, r0, r6
 8006798:	2802      	cmp	r0, #2
 800679a:	f67f af73 	bls.w	8006684 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 800679e:	e7e7      	b.n	8006770 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80067a0:	f402 7240 	and.w	r2, r2, #768	@ 0x300
 80067a4:	4293      	cmp	r3, r2
 80067a6:	f43f af78 	beq.w	800669a <HAL_RCCEx_PeriphCLKConfig+0xe6>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80067aa:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 80067ac:	4a13      	ldr	r2, [pc, #76]	@ (80067fc <HAL_RCCEx_PeriphCLKConfig+0x248>)
 80067ae:	2101      	movs	r1, #1
 80067b0:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80067b4:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 80067b8:	2100      	movs	r1, #0
 80067ba:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      RCC->BDCR = tmpreg1;
 80067be:	672b      	str	r3, [r5, #112]	@ 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 80067c0:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 80067c2:	07d9      	lsls	r1, r3, #31
 80067c4:	f57f af69 	bpl.w	800669a <HAL_RCCEx_PeriphCLKConfig+0xe6>
        tickstart = HAL_GetTick();
 80067c8:	f7fd ffca 	bl	8004760 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80067cc:	f241 3788 	movw	r7, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 80067d0:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80067d2:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 80067d4:	079a      	lsls	r2, r3, #30
 80067d6:	f53f af60 	bmi.w	800669a <HAL_RCCEx_PeriphCLKConfig+0xe6>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80067da:	f7fd ffc1 	bl	8004760 <HAL_GetTick>
 80067de:	1b80      	subs	r0, r0, r6
 80067e0:	42b8      	cmp	r0, r7
 80067e2:	d9f6      	bls.n	80067d2 <HAL_RCCEx_PeriphCLKConfig+0x21e>
 80067e4:	e7c4      	b.n	8006770 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80067e6:	6891      	ldr	r1, [r2, #8]
 80067e8:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 80067ec:	e765      	b.n	80066ba <HAL_RCCEx_PeriphCLKConfig+0x106>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 80067ee:	4b06      	ldr	r3, [pc, #24]	@ (8006808 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 80067f0:	f894 202c 	ldrb.w	r2, [r4, #44]	@ 0x2c
 80067f4:	f8c3 21e0 	str.w	r2, [r3, #480]	@ 0x1e0
 80067f8:	e769      	b.n	80066ce <HAL_RCCEx_PeriphCLKConfig+0x11a>
 80067fa:	bf00      	nop
 80067fc:	42470000 	.word	0x42470000
 8006800:	40023800 	.word	0x40023800
 8006804:	40007000 	.word	0x40007000
 8006808:	42471000 	.word	0x42471000

0800680c <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 800680c:	b538      	push	{r3, r4, r5, lr}
 800680e:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8006810:	4604      	mov	r4, r0
 8006812:	b1c8      	cbz	r0, 8006848 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8006814:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8006818:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800681c:	b91b      	cbnz	r3, 8006826 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800681e:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8006822:	f7fb f9f7 	bl	8001c14 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006826:	2302      	movs	r3, #2
 8006828:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800682c:	1d21      	adds	r1, r4, #4
 800682e:	6820      	ldr	r0, [r4, #0]
 8006830:	f000 fdaf 	bl	8007392 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8006834:	6862      	ldr	r2, [r4, #4]
 8006836:	6820      	ldr	r0, [r4, #0]
 8006838:	4629      	mov	r1, r5
 800683a:	f000 fde2 	bl	8007402 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800683e:	2301      	movs	r3, #1
 8006840:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  return HAL_OK;
 8006844:	2000      	movs	r0, #0
}
 8006846:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006848:	2001      	movs	r0, #1
 800684a:	e7fc      	b.n	8006846 <HAL_SDRAM_Init+0x3a>

0800684c <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800684c:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800684e:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 8006852:	2b02      	cmp	r3, #2
{
 8006854:	4605      	mov	r5, r0
 8006856:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8006858:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800685a:	d012      	beq.n	8006882 <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800685c:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
 8006860:	2c01      	cmp	r4, #1
 8006862:	d10f      	bne.n	8006884 <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006864:	2302      	movs	r3, #2
 8006866:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800686a:	6828      	ldr	r0, [r5, #0]
 800686c:	f000 fdff 	bl	800746e <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8006870:	6833      	ldr	r3, [r6, #0]
 8006872:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8006874:	bf06      	itte	eq
 8006876:	2305      	moveq	r3, #5
 8006878:	f885 302c 	strbeq.w	r3, [r5, #44]	@ 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 800687c:	f885 402c 	strbne.w	r4, [r5, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8006880:	2000      	movs	r0, #0
}
 8006882:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 8006884:	2001      	movs	r0, #1
 8006886:	e7fc      	b.n	8006882 <HAL_SDRAM_SendCommand+0x36>

08006888 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8006888:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800688a:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800688e:	2b02      	cmp	r3, #2
{
 8006890:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006892:	b2d8      	uxtb	r0, r3
 8006894:	d00d      	beq.n	80068b2 <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 8006896:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 800689a:	2b01      	cmp	r3, #1
 800689c:	b2dd      	uxtb	r5, r3
 800689e:	d109      	bne.n	80068b4 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80068a0:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 80068a2:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80068a4:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 80068a8:	f000 fe05 	bl	80074b6 <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 80068ac:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 80068b0:	2000      	movs	r0, #0
}
 80068b2:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80068b4:	2001      	movs	r0, #1
 80068b6:	e7fc      	b.n	80068b2 <HAL_SDRAM_ProgramRefreshRate+0x2a>

080068b8 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 80068b8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80068bc:	461f      	mov	r7, r3
 80068be:	4689      	mov	r9, r1
 80068c0:	4690      	mov	r8, r2
 80068c2:	4604      	mov	r4, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 80068c4:	f7fd ff4c 	bl	8004760 <HAL_GetTick>
 80068c8:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 80068ca:	443d      	add	r5, r7
 80068cc:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 80068ce:	f7fd ff47 	bl	8004760 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 80068d2:	4b26      	ldr	r3, [pc, #152]	@ (800696c <SPI_WaitFlagStateUntilTimeout+0xb4>)
 80068d4:	681e      	ldr	r6, [r3, #0]
 80068d6:	f3c6 36cb 	ubfx	r6, r6, #15, #12
 80068da:	436e      	muls	r6, r5
  tmp_tickstart = HAL_GetTick();
 80068dc:	4682      	mov	sl, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 80068de:	9601      	str	r6, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 80068e0:	6822      	ldr	r2, [r4, #0]
 80068e2:	6893      	ldr	r3, [r2, #8]
 80068e4:	ea39 0303 	bics.w	r3, r9, r3
 80068e8:	bf0c      	ite	eq
 80068ea:	2301      	moveq	r3, #1
 80068ec:	2300      	movne	r3, #0
 80068ee:	4543      	cmp	r3, r8
 80068f0:	d101      	bne.n	80068f6 <SPI_WaitFlagStateUntilTimeout+0x3e>
      }
      count--;
    }
  }

  return HAL_OK;
 80068f2:	2000      	movs	r0, #0
 80068f4:	e02e      	b.n	8006954 <SPI_WaitFlagStateUntilTimeout+0x9c>
    if (Timeout != HAL_MAX_DELAY)
 80068f6:	1c7b      	adds	r3, r7, #1
 80068f8:	d0f3      	beq.n	80068e2 <SPI_WaitFlagStateUntilTimeout+0x2a>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 80068fa:	f7fd ff31 	bl	8004760 <HAL_GetTick>
 80068fe:	eba0 000a 	sub.w	r0, r0, sl
 8006902:	42a8      	cmp	r0, r5
 8006904:	d329      	bcc.n	800695a <SPI_WaitFlagStateUntilTimeout+0xa2>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8006906:	6823      	ldr	r3, [r4, #0]
 8006908:	685a      	ldr	r2, [r3, #4]
 800690a:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 800690e:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006910:	6862      	ldr	r2, [r4, #4]
 8006912:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 8006916:	d10a      	bne.n	800692e <SPI_WaitFlagStateUntilTimeout+0x76>
 8006918:	68a2      	ldr	r2, [r4, #8]
 800691a:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 800691e:	d002      	beq.n	8006926 <SPI_WaitFlagStateUntilTimeout+0x6e>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006920:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8006924:	d103      	bne.n	800692e <SPI_WaitFlagStateUntilTimeout+0x76>
          __HAL_SPI_DISABLE(hspi);
 8006926:	681a      	ldr	r2, [r3, #0]
 8006928:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800692c:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800692e:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8006930:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 8006934:	d107      	bne.n	8006946 <SPI_WaitFlagStateUntilTimeout+0x8e>
          SPI_RESET_CRC(hspi);
 8006936:	681a      	ldr	r2, [r3, #0]
 8006938:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800693c:	601a      	str	r2, [r3, #0]
 800693e:	681a      	ldr	r2, [r3, #0]
 8006940:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8006944:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8006946:	2301      	movs	r3, #1
 8006948:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 800694c:	2300      	movs	r3, #0
 800694e:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 8006952:	2003      	movs	r0, #3
}
 8006954:	b002      	add	sp, #8
 8006956:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (count == 0U)
 800695a:	9a01      	ldr	r2, [sp, #4]
      count--;
 800695c:	9b01      	ldr	r3, [sp, #4]
      if (count == 0U)
 800695e:	2a00      	cmp	r2, #0
      count--;
 8006960:	f103 33ff 	add.w	r3, r3, #4294967295
 8006964:	9301      	str	r3, [sp, #4]
 8006966:	bf08      	it	eq
 8006968:	4615      	moveq	r5, r2
 800696a:	e7b9      	b.n	80068e0 <SPI_WaitFlagStateUntilTimeout+0x28>
 800696c:	20000074 	.word	0x20000074

08006970 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8006970:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006972:	b085      	sub	sp, #20
  /* Wait until TXE flag */
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8006974:	460b      	mov	r3, r1
 8006976:	9200      	str	r2, [sp, #0]
{
 8006978:	460e      	mov	r6, r1
 800697a:	4617      	mov	r7, r2
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 800697c:	2102      	movs	r1, #2
 800697e:	2201      	movs	r2, #1
{
 8006980:	4604      	mov	r4, r0
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8006982:	f7ff ff99 	bl	80068b8 <SPI_WaitFlagStateUntilTimeout>
 8006986:	4605      	mov	r5, r0
 8006988:	b128      	cbz	r0, 8006996 <SPI_EndRxTxTransaction+0x26>
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800698a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800698c:	f043 0320 	orr.w	r3, r3, #32
 8006990:	6563      	str	r3, [r4, #84]	@ 0x54
    return HAL_TIMEOUT;
 8006992:	2503      	movs	r5, #3
 8006994:	e015      	b.n	80069c2 <SPI_EndRxTxTransaction+0x52>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8006996:	4b12      	ldr	r3, [pc, #72]	@ (80069e0 <SPI_EndRxTxTransaction+0x70>)
 8006998:	6818      	ldr	r0, [r3, #0]
 800699a:	4b12      	ldr	r3, [pc, #72]	@ (80069e4 <SPI_EndRxTxTransaction+0x74>)
 800699c:	fbb0 f0f3 	udiv	r0, r0, r3
 80069a0:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80069a4:	4358      	muls	r0, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 80069a6:	6863      	ldr	r3, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 80069a8:	9003      	str	r0, [sp, #12]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 80069aa:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80069ae:	d10b      	bne.n	80069c8 <SPI_EndRxTxTransaction+0x58>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 80069b0:	9700      	str	r7, [sp, #0]
 80069b2:	4633      	mov	r3, r6
 80069b4:	462a      	mov	r2, r5
 80069b6:	2180      	movs	r1, #128	@ 0x80
 80069b8:	4620      	mov	r0, r4
 80069ba:	f7ff ff7d 	bl	80068b8 <SPI_WaitFlagStateUntilTimeout>
 80069be:	2800      	cmp	r0, #0
 80069c0:	d1e3      	bne.n	800698a <SPI_EndRxTxTransaction+0x1a>
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 80069c2:	4628      	mov	r0, r5
 80069c4:	b005      	add	sp, #20
 80069c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (count == 0U)
 80069c8:	9b03      	ldr	r3, [sp, #12]
 80069ca:	2b00      	cmp	r3, #0
 80069cc:	d0f9      	beq.n	80069c2 <SPI_EndRxTxTransaction+0x52>
      count--;
 80069ce:	9b03      	ldr	r3, [sp, #12]
 80069d0:	3b01      	subs	r3, #1
 80069d2:	9303      	str	r3, [sp, #12]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 80069d4:	6823      	ldr	r3, [r4, #0]
 80069d6:	689b      	ldr	r3, [r3, #8]
 80069d8:	061b      	lsls	r3, r3, #24
 80069da:	d4f5      	bmi.n	80069c8 <SPI_EndRxTxTransaction+0x58>
 80069dc:	e7f1      	b.n	80069c2 <SPI_EndRxTxTransaction+0x52>
 80069de:	bf00      	nop
 80069e0:	20000074 	.word	0x20000074
 80069e4:	016e3600 	.word	0x016e3600

080069e8 <SPI_EndRxTransaction>:
{
 80069e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80069ea:	460b      	mov	r3, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80069ec:	6841      	ldr	r1, [r0, #4]
 80069ee:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
{
 80069f2:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80069f4:	d008      	beq.n	8006a08 <SPI_EndRxTransaction+0x20>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 80069f6:	9200      	str	r2, [sp, #0]
 80069f8:	2101      	movs	r1, #1
 80069fa:	2200      	movs	r2, #0
 80069fc:	f7ff ff5c 	bl	80068b8 <SPI_WaitFlagStateUntilTimeout>
 8006a00:	b9d0      	cbnz	r0, 8006a38 <SPI_EndRxTransaction+0x50>
  return HAL_OK;
 8006a02:	2000      	movs	r0, #0
}
 8006a04:	b003      	add	sp, #12
 8006a06:	bd30      	pop	{r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006a08:	6881      	ldr	r1, [r0, #8]
 8006a0a:	f5b1 4f00 	cmp.w	r1, #32768	@ 0x8000
 8006a0e:	d002      	beq.n	8006a16 <SPI_EndRxTransaction+0x2e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006a10:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8006a14:	d107      	bne.n	8006a26 <SPI_EndRxTransaction+0x3e>
    __HAL_SPI_DISABLE(hspi);
 8006a16:	6825      	ldr	r5, [r4, #0]
 8006a18:	6828      	ldr	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8006a1a:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
    __HAL_SPI_DISABLE(hspi);
 8006a1e:	f020 0040 	bic.w	r0, r0, #64	@ 0x40
 8006a22:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8006a24:	d004      	beq.n	8006a30 <SPI_EndRxTransaction+0x48>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8006a26:	9200      	str	r2, [sp, #0]
 8006a28:	2180      	movs	r1, #128	@ 0x80
 8006a2a:	2200      	movs	r2, #0
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8006a2c:	4620      	mov	r0, r4
 8006a2e:	e7e5      	b.n	80069fc <SPI_EndRxTransaction+0x14>
 8006a30:	9200      	str	r2, [sp, #0]
 8006a32:	2101      	movs	r1, #1
 8006a34:	2200      	movs	r2, #0
 8006a36:	e7f9      	b.n	8006a2c <SPI_EndRxTransaction+0x44>
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006a38:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8006a3a:	f043 0320 	orr.w	r3, r3, #32
 8006a3e:	6563      	str	r3, [r4, #84]	@ 0x54
        return HAL_TIMEOUT;
 8006a40:	2003      	movs	r0, #3
 8006a42:	e7df      	b.n	8006a04 <SPI_EndRxTransaction+0x1c>

08006a44 <HAL_SPI_Init>:
{
 8006a44:	b510      	push	{r4, lr}
  if (hspi == NULL)
 8006a46:	4604      	mov	r4, r0
 8006a48:	2800      	cmp	r0, #0
 8006a4a:	d055      	beq.n	8006af8 <HAL_SPI_Init+0xb4>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8006a4c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8006a4e:	2b00      	cmp	r3, #0
 8006a50:	d14e      	bne.n	8006af0 <HAL_SPI_Init+0xac>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006a52:	6842      	ldr	r2, [r0, #4]
 8006a54:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 8006a58:	d000      	beq.n	8006a5c <HAL_SPI_Init+0x18>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8006a5a:	61c3      	str	r3, [r0, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8006a5c:	2300      	movs	r3, #0
 8006a5e:	62a3      	str	r3, [r4, #40]	@ 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8006a60:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 8006a64:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8006a68:	b923      	cbnz	r3, 8006a74 <HAL_SPI_Init+0x30>
    hspi->Lock = HAL_UNLOCKED;
 8006a6a:	f884 2050 	strb.w	r2, [r4, #80]	@ 0x50
    HAL_SPI_MspInit(hspi);
 8006a6e:	4620      	mov	r0, r4
 8006a70:	f7fb f864 	bl	8001b3c <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8006a74:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8006a76:	68a0      	ldr	r0, [r4, #8]
 8006a78:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 8006a7a:	2302      	movs	r3, #2
 8006a7c:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  __HAL_SPI_DISABLE(hspi);
 8006a80:	680b      	ldr	r3, [r1, #0]
 8006a82:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006a86:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8006a88:	6863      	ldr	r3, [r4, #4]
 8006a8a:	f400 4004 	and.w	r0, r0, #33792	@ 0x8400
 8006a8e:	f403 7382 	and.w	r3, r3, #260	@ 0x104
 8006a92:	4303      	orrs	r3, r0
 8006a94:	68e0      	ldr	r0, [r4, #12]
 8006a96:	f400 6000 	and.w	r0, r0, #2048	@ 0x800
 8006a9a:	4303      	orrs	r3, r0
 8006a9c:	6920      	ldr	r0, [r4, #16]
 8006a9e:	f000 0002 	and.w	r0, r0, #2
 8006aa2:	4303      	orrs	r3, r0
 8006aa4:	6960      	ldr	r0, [r4, #20]
 8006aa6:	f000 0001 	and.w	r0, r0, #1
 8006aaa:	4303      	orrs	r3, r0
 8006aac:	f402 7000 	and.w	r0, r2, #512	@ 0x200
 8006ab0:	4303      	orrs	r3, r0
 8006ab2:	69e0      	ldr	r0, [r4, #28]
 8006ab4:	f000 0038 	and.w	r0, r0, #56	@ 0x38
 8006ab8:	4303      	orrs	r3, r0
 8006aba:	6a20      	ldr	r0, [r4, #32]
 8006abc:	f000 0080 	and.w	r0, r0, #128	@ 0x80
 8006ac0:	4303      	orrs	r3, r0
 8006ac2:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8006ac4:	f400 5000 	and.w	r0, r0, #8192	@ 0x2000
 8006ac8:	4303      	orrs	r3, r0
 8006aca:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 8006acc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8006ace:	0c12      	lsrs	r2, r2, #16
 8006ad0:	f003 0310 	and.w	r3, r3, #16
 8006ad4:	f002 0204 	and.w	r2, r2, #4
 8006ad8:	431a      	orrs	r2, r3
 8006ada:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8006adc:	69cb      	ldr	r3, [r1, #28]
 8006ade:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8006ae2:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8006ae4:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8006ae6:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8006ae8:	6560      	str	r0, [r4, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8006aea:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
}
 8006aee:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8006af0:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8006af2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8006af6:	e7b1      	b.n	8006a5c <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 8006af8:	2001      	movs	r0, #1
 8006afa:	e7f8      	b.n	8006aee <HAL_SPI_Init+0xaa>

08006afc <HAL_SPI_Transmit>:
{
 8006afc:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8006b00:	461f      	mov	r7, r3
  __HAL_LOCK(hspi);
 8006b02:	f890 3050 	ldrb.w	r3, [r0, #80]	@ 0x50
 8006b06:	2b01      	cmp	r3, #1
{
 8006b08:	4604      	mov	r4, r0
 8006b0a:	460d      	mov	r5, r1
 8006b0c:	4690      	mov	r8, r2
  __HAL_LOCK(hspi);
 8006b0e:	f000 80a6 	beq.w	8006c5e <HAL_SPI_Transmit+0x162>
 8006b12:	2301      	movs	r3, #1
 8006b14:	f880 3050 	strb.w	r3, [r0, #80]	@ 0x50
  tickstart = HAL_GetTick();
 8006b18:	f7fd fe22 	bl	8004760 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8006b1c:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 8006b20:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8006b22:	4682      	mov	sl, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8006b24:	fa5f f983 	uxtb.w	r9, r3
 8006b28:	f040 8096 	bne.w	8006c58 <HAL_SPI_Transmit+0x15c>
  if ((pData == NULL) || (Size == 0U))
 8006b2c:	2d00      	cmp	r5, #0
 8006b2e:	d067      	beq.n	8006c00 <HAL_SPI_Transmit+0x104>
 8006b30:	f1b8 0f00 	cmp.w	r8, #0
 8006b34:	d064      	beq.n	8006c00 <HAL_SPI_Transmit+0x104>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8006b36:	2303      	movs	r3, #3
 8006b38:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006b3c:	2300      	movs	r3, #0
 8006b3e:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->RxISR       = NULL;
 8006b40:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  hspi->TxXferCount = Size;
 8006b44:	f8a4 8036 	strh.w	r8, [r4, #54]	@ 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8006b48:	63a3      	str	r3, [r4, #56]	@ 0x38
  hspi->RxXferSize  = 0U;
 8006b4a:	87a3      	strh	r3, [r4, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 8006b4c:	87e3      	strh	r3, [r4, #62]	@ 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006b4e:	68a3      	ldr	r3, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 8006b50:	6826      	ldr	r6, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8006b52:	6325      	str	r5, [r4, #48]	@ 0x30
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006b54:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
  hspi->TxXferSize  = Size;
 8006b58:	f8a4 8034 	strh.w	r8, [r4, #52]	@ 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006b5c:	d107      	bne.n	8006b6e <HAL_SPI_Transmit+0x72>
    __HAL_SPI_DISABLE(hspi);
 8006b5e:	6833      	ldr	r3, [r6, #0]
 8006b60:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006b64:	6033      	str	r3, [r6, #0]
    SPI_1LINE_TX(hspi);
 8006b66:	6833      	ldr	r3, [r6, #0]
 8006b68:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8006b6c:	6033      	str	r3, [r6, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006b6e:	6833      	ldr	r3, [r6, #0]
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006b70:	6862      	ldr	r2, [r4, #4]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006b72:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 8006b74:	bf5e      	ittt	pl
 8006b76:	6833      	ldrpl	r3, [r6, #0]
 8006b78:	f043 0340 	orrpl.w	r3, r3, #64	@ 0x40
 8006b7c:	6033      	strpl	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006b7e:	68e3      	ldr	r3, [r4, #12]
 8006b80:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8006b84:	d143      	bne.n	8006c0e <HAL_SPI_Transmit+0x112>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006b86:	b112      	cbz	r2, 8006b8e <HAL_SPI_Transmit+0x92>
 8006b88:	f1b8 0f01 	cmp.w	r8, #1
 8006b8c:	d107      	bne.n	8006b9e <HAL_SPI_Transmit+0xa2>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006b8e:	f835 3b02 	ldrh.w	r3, [r5], #2
 8006b92:	60f3      	str	r3, [r6, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8006b94:	6325      	str	r5, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8006b96:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006b98:	3b01      	subs	r3, #1
 8006b9a:	b29b      	uxth	r3, r3
 8006b9c:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 8006b9e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006ba0:	b29b      	uxth	r3, r3
 8006ba2:	b9b3      	cbnz	r3, 8006bd2 <HAL_SPI_Transmit+0xd6>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006ba4:	4652      	mov	r2, sl
 8006ba6:	4639      	mov	r1, r7
 8006ba8:	4620      	mov	r0, r4
 8006baa:	f7ff fee1 	bl	8006970 <SPI_EndRxTxTransaction>
 8006bae:	2800      	cmp	r0, #0
 8006bb0:	d14f      	bne.n	8006c52 <HAL_SPI_Transmit+0x156>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006bb2:	68a3      	ldr	r3, [r4, #8]
 8006bb4:	b933      	cbnz	r3, 8006bc4 <HAL_SPI_Transmit+0xc8>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006bb6:	9301      	str	r3, [sp, #4]
 8006bb8:	6823      	ldr	r3, [r4, #0]
 8006bba:	68da      	ldr	r2, [r3, #12]
 8006bbc:	9201      	str	r2, [sp, #4]
 8006bbe:	689b      	ldr	r3, [r3, #8]
 8006bc0:	9301      	str	r3, [sp, #4]
 8006bc2:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006bc4:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8006bc6:	b9db      	cbnz	r3, 8006c00 <HAL_SPI_Transmit+0x104>
    hspi->State = HAL_SPI_STATE_READY;
 8006bc8:	2201      	movs	r2, #1
 8006bca:	f884 2051 	strb.w	r2, [r4, #81]	@ 0x51
  HAL_StatusTypeDef errorcode = HAL_OK;
 8006bce:	4699      	mov	r9, r3
 8006bd0:	e016      	b.n	8006c00 <HAL_SPI_Transmit+0x104>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8006bd2:	6822      	ldr	r2, [r4, #0]
 8006bd4:	6893      	ldr	r3, [r2, #8]
 8006bd6:	0798      	lsls	r0, r3, #30
 8006bd8:	d505      	bpl.n	8006be6 <HAL_SPI_Transmit+0xea>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006bda:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006bdc:	f833 1b02 	ldrh.w	r1, [r3], #2
 8006be0:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8006be2:	6323      	str	r3, [r4, #48]	@ 0x30
 8006be4:	e7d7      	b.n	8006b96 <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006be6:	f7fd fdbb 	bl	8004760 <HAL_GetTick>
 8006bea:	eba0 000a 	sub.w	r0, r0, sl
 8006bee:	42b8      	cmp	r0, r7
 8006bf0:	d3d5      	bcc.n	8006b9e <HAL_SPI_Transmit+0xa2>
 8006bf2:	1c79      	adds	r1, r7, #1
 8006bf4:	d0d3      	beq.n	8006b9e <HAL_SPI_Transmit+0xa2>
          hspi->State = HAL_SPI_STATE_READY;
 8006bf6:	2301      	movs	r3, #1
 8006bf8:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          errorcode = HAL_TIMEOUT;
 8006bfc:	f04f 0903 	mov.w	r9, #3
  __HAL_UNLOCK(hspi);
 8006c00:	2300      	movs	r3, #0
 8006c02:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
}
 8006c06:	4648      	mov	r0, r9
 8006c08:	b002      	add	sp, #8
 8006c0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006c0e:	b112      	cbz	r2, 8006c16 <HAL_SPI_Transmit+0x11a>
 8006c10:	f1b8 0f01 	cmp.w	r8, #1
 8006c14:	d108      	bne.n	8006c28 <HAL_SPI_Transmit+0x12c>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006c16:	782b      	ldrb	r3, [r5, #0]
 8006c18:	7333      	strb	r3, [r6, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8006c1a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006c1c:	3301      	adds	r3, #1
 8006c1e:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8006c20:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006c22:	3b01      	subs	r3, #1
 8006c24:	b29b      	uxth	r3, r3
 8006c26:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 8006c28:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006c2a:	b29b      	uxth	r3, r3
 8006c2c:	2b00      	cmp	r3, #0
 8006c2e:	d0b9      	beq.n	8006ba4 <HAL_SPI_Transmit+0xa8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8006c30:	6823      	ldr	r3, [r4, #0]
 8006c32:	689a      	ldr	r2, [r3, #8]
 8006c34:	0792      	lsls	r2, r2, #30
 8006c36:	d503      	bpl.n	8006c40 <HAL_SPI_Transmit+0x144>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006c38:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8006c3a:	7812      	ldrb	r2, [r2, #0]
 8006c3c:	731a      	strb	r2, [r3, #12]
 8006c3e:	e7ec      	b.n	8006c1a <HAL_SPI_Transmit+0x11e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006c40:	f7fd fd8e 	bl	8004760 <HAL_GetTick>
 8006c44:	eba0 000a 	sub.w	r0, r0, sl
 8006c48:	42b8      	cmp	r0, r7
 8006c4a:	d3ed      	bcc.n	8006c28 <HAL_SPI_Transmit+0x12c>
 8006c4c:	1c7b      	adds	r3, r7, #1
 8006c4e:	d0eb      	beq.n	8006c28 <HAL_SPI_Transmit+0x12c>
 8006c50:	e7d1      	b.n	8006bf6 <HAL_SPI_Transmit+0xfa>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006c52:	2320      	movs	r3, #32
 8006c54:	6563      	str	r3, [r4, #84]	@ 0x54
 8006c56:	e7ac      	b.n	8006bb2 <HAL_SPI_Transmit+0xb6>
    errorcode = HAL_BUSY;
 8006c58:	f04f 0902 	mov.w	r9, #2
 8006c5c:	e7d0      	b.n	8006c00 <HAL_SPI_Transmit+0x104>
  __HAL_LOCK(hspi);
 8006c5e:	f04f 0902 	mov.w	r9, #2
 8006c62:	e7d0      	b.n	8006c06 <HAL_SPI_Transmit+0x10a>

08006c64 <HAL_SPI_TransmitReceive>:
{
 8006c64:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006c68:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8006c6a:	f890 3050 	ldrb.w	r3, [r0, #80]	@ 0x50
{
 8006c6e:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
  __HAL_LOCK(hspi);
 8006c72:	2b01      	cmp	r3, #1
{
 8006c74:	4604      	mov	r4, r0
 8006c76:	460d      	mov	r5, r1
 8006c78:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 8006c7a:	f000 80e8 	beq.w	8006e4e <HAL_SPI_TransmitReceive+0x1ea>
 8006c7e:	2301      	movs	r3, #1
 8006c80:	f880 3050 	strb.w	r3, [r0, #80]	@ 0x50
  tickstart = HAL_GetTick();
 8006c84:	f7fd fd6c 	bl	8004760 <HAL_GetTick>
  tmp_state           = hspi->State;
 8006c88:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  tmp_mode            = hspi->Init.Mode;
 8006c8c:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8006c8e:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8006c90:	4607      	mov	r7, r0
  tmp_state           = hspi->State;
 8006c92:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8006c94:	d00a      	beq.n	8006cac <HAL_SPI_TransmitReceive+0x48>
 8006c96:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 8006c9a:	f040 80d6 	bne.w	8006e4a <HAL_SPI_TransmitReceive+0x1e6>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8006c9e:	68a3      	ldr	r3, [r4, #8]
 8006ca0:	2b00      	cmp	r3, #0
 8006ca2:	f040 80d2 	bne.w	8006e4a <HAL_SPI_TransmitReceive+0x1e6>
 8006ca6:	2904      	cmp	r1, #4
 8006ca8:	f040 80cf 	bne.w	8006e4a <HAL_SPI_TransmitReceive+0x1e6>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8006cac:	2d00      	cmp	r5, #0
 8006cae:	d03f      	beq.n	8006d30 <HAL_SPI_TransmitReceive+0xcc>
 8006cb0:	f1b9 0f00 	cmp.w	r9, #0
 8006cb4:	d03c      	beq.n	8006d30 <HAL_SPI_TransmitReceive+0xcc>
 8006cb6:	2e00      	cmp	r6, #0
 8006cb8:	d03a      	beq.n	8006d30 <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8006cba:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8006cbe:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8006cc2:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8006cc4:	bf1c      	itt	ne
 8006cc6:	2305      	movne	r3, #5
 8006cc8:	f884 3051 	strbne.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006ccc:	2300      	movs	r3, #0
 8006cce:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->TxISR       = NULL;
 8006cd0:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006cd4:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8006cd6:	87e6      	strh	r6, [r4, #62]	@ 0x3e
  hspi->TxXferCount = Size;
 8006cd8:	86e6      	strh	r6, [r4, #54]	@ 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006cda:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 8006cdc:	87a6      	strh	r6, [r4, #60]	@ 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006cde:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8006ce0:	bf58      	it	pl
 8006ce2:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8006ce4:	6325      	str	r5, [r4, #48]	@ 0x30
    __HAL_SPI_ENABLE(hspi);
 8006ce6:	bf58      	it	pl
 8006ce8:	f041 0140 	orrpl.w	r1, r1, #64	@ 0x40
  hspi->TxXferSize  = Size;
 8006cec:	86a6      	strh	r6, [r4, #52]	@ 0x34
    __HAL_SPI_ENABLE(hspi);
 8006cee:	bf58      	it	pl
 8006cf0:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006cf2:	68e1      	ldr	r1, [r4, #12]
 8006cf4:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
 8006cf8:	d151      	bne.n	8006d9e <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006cfa:	b10a      	cbz	r2, 8006d00 <HAL_SPI_TransmitReceive+0x9c>
 8006cfc:	2e01      	cmp	r6, #1
 8006cfe:	d107      	bne.n	8006d10 <HAL_SPI_TransmitReceive+0xac>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006d00:	f835 2b02 	ldrh.w	r2, [r5], #2
 8006d04:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8006d06:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8006d08:	6325      	str	r5, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 8006d0a:	3b01      	subs	r3, #1
 8006d0c:	b29b      	uxth	r3, r3
 8006d0e:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 8006d10:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006d12:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006d14:	b29b      	uxth	r3, r3
 8006d16:	b96b      	cbnz	r3, 8006d34 <HAL_SPI_TransmitReceive+0xd0>
 8006d18:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006d1a:	b29b      	uxth	r3, r3
 8006d1c:	b953      	cbnz	r3, 8006d34 <HAL_SPI_TransmitReceive+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006d1e:	463a      	mov	r2, r7
 8006d20:	4641      	mov	r1, r8
 8006d22:	4620      	mov	r0, r4
 8006d24:	f7ff fe24 	bl	8006970 <SPI_EndRxTxTransaction>
 8006d28:	2800      	cmp	r0, #0
 8006d2a:	d07d      	beq.n	8006e28 <HAL_SPI_TransmitReceive+0x1c4>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006d2c:	2320      	movs	r3, #32
 8006d2e:	6563      	str	r3, [r4, #84]	@ 0x54
    errorcode = HAL_ERROR;
 8006d30:	2001      	movs	r0, #1
 8006d32:	e02e      	b.n	8006d92 <HAL_SPI_TransmitReceive+0x12e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8006d34:	6821      	ldr	r1, [r4, #0]
 8006d36:	688b      	ldr	r3, [r1, #8]
 8006d38:	079a      	lsls	r2, r3, #30
 8006d3a:	d50d      	bpl.n	8006d58 <HAL_SPI_TransmitReceive+0xf4>
 8006d3c:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006d3e:	b29b      	uxth	r3, r3
 8006d40:	b153      	cbz	r3, 8006d58 <HAL_SPI_TransmitReceive+0xf4>
 8006d42:	b145      	cbz	r5, 8006d56 <HAL_SPI_TransmitReceive+0xf2>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006d44:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006d46:	f833 2b02 	ldrh.w	r2, [r3], #2
 8006d4a:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8006d4c:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8006d4e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006d50:	3b01      	subs	r3, #1
 8006d52:	b29b      	uxth	r3, r3
 8006d54:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 0U;
 8006d56:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006d58:	688a      	ldr	r2, [r1, #8]
 8006d5a:	f012 0201 	ands.w	r2, r2, #1
 8006d5e:	d00c      	beq.n	8006d7a <HAL_SPI_TransmitReceive+0x116>
 8006d60:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006d62:	b29b      	uxth	r3, r3
 8006d64:	b14b      	cbz	r3, 8006d7a <HAL_SPI_TransmitReceive+0x116>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8006d66:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006d68:	68c9      	ldr	r1, [r1, #12]
 8006d6a:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8006d6e:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8006d70:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006d72:	3b01      	subs	r3, #1
 8006d74:	b29b      	uxth	r3, r3
 8006d76:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 8006d78:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8006d7a:	f7fd fcf1 	bl	8004760 <HAL_GetTick>
 8006d7e:	1bc0      	subs	r0, r0, r7
 8006d80:	4540      	cmp	r0, r8
 8006d82:	d3c6      	bcc.n	8006d12 <HAL_SPI_TransmitReceive+0xae>
 8006d84:	f1b8 3fff 	cmp.w	r8, #4294967295
 8006d88:	d0c3      	beq.n	8006d12 <HAL_SPI_TransmitReceive+0xae>
        hspi->State = HAL_SPI_STATE_READY;
 8006d8a:	2301      	movs	r3, #1
 8006d8c:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        errorcode = HAL_TIMEOUT;
 8006d90:	2003      	movs	r0, #3
  __HAL_UNLOCK(hspi);
 8006d92:	2300      	movs	r3, #0
 8006d94:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
}
 8006d98:	b003      	add	sp, #12
 8006d9a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006d9e:	b10a      	cbz	r2, 8006da4 <HAL_SPI_TransmitReceive+0x140>
 8006da0:	2e01      	cmp	r6, #1
 8006da2:	d108      	bne.n	8006db6 <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006da4:	782a      	ldrb	r2, [r5, #0]
 8006da6:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8006da8:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006daa:	3301      	adds	r3, #1
 8006dac:	6323      	str	r3, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 8006dae:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006db0:	3b01      	subs	r3, #1
 8006db2:	b29b      	uxth	r3, r3
 8006db4:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 8006db6:	2501      	movs	r5, #1
 8006db8:	e02d      	b.n	8006e16 <HAL_SPI_TransmitReceive+0x1b2>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8006dba:	6822      	ldr	r2, [r4, #0]
 8006dbc:	6893      	ldr	r3, [r2, #8]
 8006dbe:	079b      	lsls	r3, r3, #30
 8006dc0:	d50e      	bpl.n	8006de0 <HAL_SPI_TransmitReceive+0x17c>
 8006dc2:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006dc4:	b29b      	uxth	r3, r3
 8006dc6:	b15b      	cbz	r3, 8006de0 <HAL_SPI_TransmitReceive+0x17c>
 8006dc8:	b14d      	cbz	r5, 8006dde <HAL_SPI_TransmitReceive+0x17a>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8006dca:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006dcc:	781b      	ldrb	r3, [r3, #0]
 8006dce:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8006dd0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006dd2:	3301      	adds	r3, #1
 8006dd4:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8006dd6:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006dd8:	3b01      	subs	r3, #1
 8006dda:	b29b      	uxth	r3, r3
 8006ddc:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 0U;
 8006dde:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006de0:	6822      	ldr	r2, [r4, #0]
 8006de2:	6891      	ldr	r1, [r2, #8]
 8006de4:	f011 0101 	ands.w	r1, r1, #1
 8006de8:	d00d      	beq.n	8006e06 <HAL_SPI_TransmitReceive+0x1a2>
 8006dea:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006dec:	b29b      	uxth	r3, r3
 8006dee:	b153      	cbz	r3, 8006e06 <HAL_SPI_TransmitReceive+0x1a2>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8006df0:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006df2:	68d2      	ldr	r2, [r2, #12]
 8006df4:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8006df6:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006df8:	3301      	adds	r3, #1
 8006dfa:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8006dfc:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006dfe:	3b01      	subs	r3, #1
 8006e00:	b29b      	uxth	r3, r3
 8006e02:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 8006e04:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8006e06:	f7fd fcab 	bl	8004760 <HAL_GetTick>
 8006e0a:	1bc0      	subs	r0, r0, r7
 8006e0c:	4540      	cmp	r0, r8
 8006e0e:	d302      	bcc.n	8006e16 <HAL_SPI_TransmitReceive+0x1b2>
 8006e10:	f1b8 3fff 	cmp.w	r8, #4294967295
 8006e14:	d1b9      	bne.n	8006d8a <HAL_SPI_TransmitReceive+0x126>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006e16:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006e18:	b29b      	uxth	r3, r3
 8006e1a:	2b00      	cmp	r3, #0
 8006e1c:	d1cd      	bne.n	8006dba <HAL_SPI_TransmitReceive+0x156>
 8006e1e:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006e20:	b29b      	uxth	r3, r3
 8006e22:	2b00      	cmp	r3, #0
 8006e24:	d1c9      	bne.n	8006dba <HAL_SPI_TransmitReceive+0x156>
 8006e26:	e77a      	b.n	8006d1e <HAL_SPI_TransmitReceive+0xba>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006e28:	68a3      	ldr	r3, [r4, #8]
 8006e2a:	b933      	cbnz	r3, 8006e3a <HAL_SPI_TransmitReceive+0x1d6>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006e2c:	6823      	ldr	r3, [r4, #0]
 8006e2e:	9001      	str	r0, [sp, #4]
 8006e30:	68da      	ldr	r2, [r3, #12]
 8006e32:	9201      	str	r2, [sp, #4]
 8006e34:	689b      	ldr	r3, [r3, #8]
 8006e36:	9301      	str	r3, [sp, #4]
 8006e38:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006e3a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8006e3c:	2b00      	cmp	r3, #0
 8006e3e:	f47f af77 	bne.w	8006d30 <HAL_SPI_TransmitReceive+0xcc>
    hspi->State = HAL_SPI_STATE_READY;
 8006e42:	2301      	movs	r3, #1
 8006e44:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
 8006e48:	e7a3      	b.n	8006d92 <HAL_SPI_TransmitReceive+0x12e>
    errorcode = HAL_BUSY;
 8006e4a:	2002      	movs	r0, #2
 8006e4c:	e7a1      	b.n	8006d92 <HAL_SPI_TransmitReceive+0x12e>
  __HAL_LOCK(hspi);
 8006e4e:	2002      	movs	r0, #2
 8006e50:	e7a2      	b.n	8006d98 <HAL_SPI_TransmitReceive+0x134>

08006e52 <HAL_SPI_Receive>:
{
 8006e52:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8006e56:	461e      	mov	r6, r3
  if (hspi->State != HAL_SPI_STATE_READY)
 8006e58:	f890 3051 	ldrb.w	r3, [r0, #81]	@ 0x51
 8006e5c:	2b01      	cmp	r3, #1
{
 8006e5e:	4604      	mov	r4, r0
 8006e60:	468a      	mov	sl, r1
 8006e62:	4690      	mov	r8, r2
  if (hspi->State != HAL_SPI_STATE_READY)
 8006e64:	b2dd      	uxtb	r5, r3
 8006e66:	f040 8095 	bne.w	8006f94 <HAL_SPI_Receive+0x142>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8006e6a:	6843      	ldr	r3, [r0, #4]
 8006e6c:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006e70:	d10e      	bne.n	8006e90 <HAL_SPI_Receive+0x3e>
 8006e72:	6883      	ldr	r3, [r0, #8]
 8006e74:	b963      	cbnz	r3, 8006e90 <HAL_SPI_Receive+0x3e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8006e76:	2304      	movs	r3, #4
 8006e78:	f880 3051 	strb.w	r3, [r0, #81]	@ 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8006e7c:	4613      	mov	r3, r2
 8006e7e:	9600      	str	r6, [sp, #0]
 8006e80:	460a      	mov	r2, r1
 8006e82:	f7ff feef 	bl	8006c64 <HAL_SPI_TransmitReceive>
 8006e86:	4605      	mov	r5, r0
}
 8006e88:	4628      	mov	r0, r5
 8006e8a:	b002      	add	sp, #8
 8006e8c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  __HAL_LOCK(hspi);
 8006e90:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 8006e94:	2b01      	cmp	r3, #1
 8006e96:	d07f      	beq.n	8006f98 <HAL_SPI_Receive+0x146>
 8006e98:	2301      	movs	r3, #1
 8006e9a:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  tickstart = HAL_GetTick();
 8006e9e:	f7fd fc5f 	bl	8004760 <HAL_GetTick>
 8006ea2:	4681      	mov	r9, r0
  if ((pData == NULL) || (Size == 0U))
 8006ea4:	f1ba 0f00 	cmp.w	sl, #0
 8006ea8:	d064      	beq.n	8006f74 <HAL_SPI_Receive+0x122>
 8006eaa:	f1b8 0f00 	cmp.w	r8, #0
 8006eae:	d061      	beq.n	8006f74 <HAL_SPI_Receive+0x122>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006eb0:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8006eb2:	f8c4 a038 	str.w	sl, [r4, #56]	@ 0x38
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006eb6:	2700      	movs	r7, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8006eb8:	2304      	movs	r3, #4
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006eba:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8006ebe:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->TxISR       = NULL;
 8006ec2:	e9c4 7710 	strd	r7, r7, [r4, #64]	@ 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006ec6:	6567      	str	r7, [r4, #84]	@ 0x54
    __HAL_SPI_DISABLE(hspi);
 8006ec8:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8006eca:	f8a4 803e 	strh.w	r8, [r4, #62]	@ 0x3e
  hspi->RxXferSize  = Size;
 8006ece:	f8a4 803c 	strh.w	r8, [r4, #60]	@ 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8006ed2:	6327      	str	r7, [r4, #48]	@ 0x30
  hspi->TxXferSize  = 0U;
 8006ed4:	86a7      	strh	r7, [r4, #52]	@ 0x34
  hspi->TxXferCount = 0U;
 8006ed6:	86e7      	strh	r7, [r4, #54]	@ 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006ed8:	d107      	bne.n	8006eea <HAL_SPI_Receive+0x98>
    __HAL_SPI_DISABLE(hspi);
 8006eda:	681a      	ldr	r2, [r3, #0]
 8006edc:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006ee0:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 8006ee2:	681a      	ldr	r2, [r3, #0]
 8006ee4:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8006ee8:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006eea:	681a      	ldr	r2, [r3, #0]
 8006eec:	0657      	lsls	r7, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8006eee:	bf5e      	ittt	pl
 8006ef0:	681a      	ldrpl	r2, [r3, #0]
 8006ef2:	f042 0240 	orrpl.w	r2, r2, #64	@ 0x40
 8006ef6:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8006ef8:	68e3      	ldr	r3, [r4, #12]
 8006efa:	b1f3      	cbz	r3, 8006f3a <HAL_SPI_Receive+0xe8>
    while (hspi->RxXferCount > 0U)
 8006efc:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006efe:	b29b      	uxth	r3, r3
 8006f00:	b1fb      	cbz	r3, 8006f42 <HAL_SPI_Receive+0xf0>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8006f02:	6823      	ldr	r3, [r4, #0]
 8006f04:	689a      	ldr	r2, [r3, #8]
 8006f06:	07d2      	lsls	r2, r2, #31
 8006f08:	d538      	bpl.n	8006f7c <HAL_SPI_Receive+0x12a>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8006f0a:	68da      	ldr	r2, [r3, #12]
 8006f0c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006f0e:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8006f12:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8006f14:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006f16:	3b01      	subs	r3, #1
 8006f18:	b29b      	uxth	r3, r3
 8006f1a:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8006f1c:	e7ee      	b.n	8006efc <HAL_SPI_Receive+0xaa>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8006f1e:	6823      	ldr	r3, [r4, #0]
 8006f20:	689a      	ldr	r2, [r3, #8]
 8006f22:	07d0      	lsls	r0, r2, #31
 8006f24:	d51a      	bpl.n	8006f5c <HAL_SPI_Receive+0x10a>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8006f26:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8006f28:	7b1b      	ldrb	r3, [r3, #12]
 8006f2a:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8006f2c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006f2e:	3301      	adds	r3, #1
 8006f30:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8006f32:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006f34:	3b01      	subs	r3, #1
 8006f36:	b29b      	uxth	r3, r3
 8006f38:	87e3      	strh	r3, [r4, #62]	@ 0x3e
    while (hspi->RxXferCount > 0U)
 8006f3a:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006f3c:	b29b      	uxth	r3, r3
 8006f3e:	2b00      	cmp	r3, #0
 8006f40:	d1ed      	bne.n	8006f1e <HAL_SPI_Receive+0xcc>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006f42:	464a      	mov	r2, r9
 8006f44:	4631      	mov	r1, r6
 8006f46:	4620      	mov	r0, r4
 8006f48:	f7ff fd4e 	bl	80069e8 <SPI_EndRxTransaction>
 8006f4c:	b9f8      	cbnz	r0, 8006f8e <HAL_SPI_Receive+0x13c>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006f4e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8006f50:	b983      	cbnz	r3, 8006f74 <HAL_SPI_Receive+0x122>
    hspi->State = HAL_SPI_STATE_READY;
 8006f52:	2201      	movs	r2, #1
 8006f54:	f884 2051 	strb.w	r2, [r4, #81]	@ 0x51
  HAL_StatusTypeDef errorcode = HAL_OK;
 8006f58:	461d      	mov	r5, r3
 8006f5a:	e00b      	b.n	8006f74 <HAL_SPI_Receive+0x122>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006f5c:	f7fd fc00 	bl	8004760 <HAL_GetTick>
 8006f60:	eba0 0009 	sub.w	r0, r0, r9
 8006f64:	42b0      	cmp	r0, r6
 8006f66:	d3e8      	bcc.n	8006f3a <HAL_SPI_Receive+0xe8>
 8006f68:	1c71      	adds	r1, r6, #1
 8006f6a:	d0e6      	beq.n	8006f3a <HAL_SPI_Receive+0xe8>
          hspi->State = HAL_SPI_STATE_READY;
 8006f6c:	2301      	movs	r3, #1
 8006f6e:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          errorcode = HAL_TIMEOUT;
 8006f72:	2503      	movs	r5, #3
  __HAL_UNLOCK(hspi);
 8006f74:	2300      	movs	r3, #0
 8006f76:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  return errorcode;
 8006f7a:	e785      	b.n	8006e88 <HAL_SPI_Receive+0x36>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006f7c:	f7fd fbf0 	bl	8004760 <HAL_GetTick>
 8006f80:	eba0 0009 	sub.w	r0, r0, r9
 8006f84:	42b0      	cmp	r0, r6
 8006f86:	d3b9      	bcc.n	8006efc <HAL_SPI_Receive+0xaa>
 8006f88:	1c73      	adds	r3, r6, #1
 8006f8a:	d0b7      	beq.n	8006efc <HAL_SPI_Receive+0xaa>
 8006f8c:	e7ee      	b.n	8006f6c <HAL_SPI_Receive+0x11a>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006f8e:	2320      	movs	r3, #32
 8006f90:	6563      	str	r3, [r4, #84]	@ 0x54
 8006f92:	e7dc      	b.n	8006f4e <HAL_SPI_Receive+0xfc>
    errorcode = HAL_BUSY;
 8006f94:	2502      	movs	r5, #2
 8006f96:	e7ed      	b.n	8006f74 <HAL_SPI_Receive+0x122>
  __HAL_LOCK(hspi);
 8006f98:	2502      	movs	r5, #2
 8006f9a:	e775      	b.n	8006e88 <HAL_SPI_Receive+0x36>

08006f9c <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8006f9c:	4770      	bx	lr
	...

08006fa0 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8006fa0:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8006fa4:	2b01      	cmp	r3, #1
 8006fa6:	d130      	bne.n	800700a <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006fa8:	2302      	movs	r3, #2
 8006faa:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8006fae:	6803      	ldr	r3, [r0, #0]
 8006fb0:	68da      	ldr	r2, [r3, #12]
 8006fb2:	f042 0201 	orr.w	r2, r2, #1
 8006fb6:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8006fb8:	4a15      	ldr	r2, [pc, #84]	@ (8007010 <HAL_TIM_Base_Start_IT+0x70>)
 8006fba:	4293      	cmp	r3, r2
 8006fbc:	d01a      	beq.n	8006ff4 <HAL_TIM_Base_Start_IT+0x54>
 8006fbe:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006fc2:	d017      	beq.n	8006ff4 <HAL_TIM_Base_Start_IT+0x54>
 8006fc4:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 8006fc8:	4293      	cmp	r3, r2
 8006fca:	d013      	beq.n	8006ff4 <HAL_TIM_Base_Start_IT+0x54>
 8006fcc:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006fd0:	4293      	cmp	r3, r2
 8006fd2:	d00f      	beq.n	8006ff4 <HAL_TIM_Base_Start_IT+0x54>
 8006fd4:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006fd8:	4293      	cmp	r3, r2
 8006fda:	d00b      	beq.n	8006ff4 <HAL_TIM_Base_Start_IT+0x54>
 8006fdc:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 8006fe0:	4293      	cmp	r3, r2
 8006fe2:	d007      	beq.n	8006ff4 <HAL_TIM_Base_Start_IT+0x54>
 8006fe4:	f502 5270 	add.w	r2, r2, #15360	@ 0x3c00
 8006fe8:	4293      	cmp	r3, r2
 8006fea:	d003      	beq.n	8006ff4 <HAL_TIM_Base_Start_IT+0x54>
 8006fec:	f5a2 3294 	sub.w	r2, r2, #75776	@ 0x12800
 8006ff0:	4293      	cmp	r3, r2
 8006ff2:	d104      	bne.n	8006ffe <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006ff4:	689a      	ldr	r2, [r3, #8]
 8006ff6:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006ffa:	2a06      	cmp	r2, #6
 8006ffc:	d003      	beq.n	8007006 <HAL_TIM_Base_Start_IT+0x66>
    {
      __HAL_TIM_ENABLE(htim);
 8006ffe:	681a      	ldr	r2, [r3, #0]
 8007000:	f042 0201 	orr.w	r2, r2, #1
 8007004:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 8007006:	2000      	movs	r0, #0
 8007008:	4770      	bx	lr
    return HAL_ERROR;
 800700a:	2001      	movs	r0, #1
}
 800700c:	4770      	bx	lr
 800700e:	bf00      	nop
 8007010:	40010000 	.word	0x40010000

08007014 <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 8007014:	4770      	bx	lr

08007016 <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 8007016:	4770      	bx	lr

08007018 <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 8007018:	4770      	bx	lr

0800701a <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 800701a:	4770      	bx	lr

0800701c <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
 800701c:	6803      	ldr	r3, [r0, #0]
{
 800701e:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
 8007020:	68dd      	ldr	r5, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
 8007022:	691e      	ldr	r6, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8007024:	07b1      	lsls	r1, r6, #30
{
 8007026:	4604      	mov	r4, r0
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8007028:	d50d      	bpl.n	8007046 <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 800702a:	07aa      	lsls	r2, r5, #30
 800702c:	d50b      	bpl.n	8007046 <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 800702e:	f06f 0202 	mvn.w	r2, #2
 8007032:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8007034:	2201      	movs	r2, #1
 8007036:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8007038:	699b      	ldr	r3, [r3, #24]
 800703a:	079b      	lsls	r3, r3, #30
 800703c:	d069      	beq.n	8007112 <HAL_TIM_IRQHandler+0xf6>
          HAL_TIM_IC_CaptureCallback(htim);
 800703e:	f7ff ffea 	bl	8007016 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007042:	2300      	movs	r3, #0
 8007044:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 8007046:	0771      	lsls	r1, r6, #29
 8007048:	d510      	bpl.n	800706c <HAL_TIM_IRQHandler+0x50>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 800704a:	076a      	lsls	r2, r5, #29
 800704c:	d50e      	bpl.n	800706c <HAL_TIM_IRQHandler+0x50>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 800704e:	6823      	ldr	r3, [r4, #0]
 8007050:	f06f 0204 	mvn.w	r2, #4
 8007054:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8007056:	2202      	movs	r2, #2
 8007058:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800705a:	699b      	ldr	r3, [r3, #24]
 800705c:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 8007060:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8007062:	d05c      	beq.n	800711e <HAL_TIM_IRQHandler+0x102>
        HAL_TIM_IC_CaptureCallback(htim);
 8007064:	f7ff ffd7 	bl	8007016 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007068:	2300      	movs	r3, #0
 800706a:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 800706c:	0733      	lsls	r3, r6, #28
 800706e:	d50f      	bpl.n	8007090 <HAL_TIM_IRQHandler+0x74>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 8007070:	0728      	lsls	r0, r5, #28
 8007072:	d50d      	bpl.n	8007090 <HAL_TIM_IRQHandler+0x74>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8007074:	6823      	ldr	r3, [r4, #0]
 8007076:	f06f 0208 	mvn.w	r2, #8
 800707a:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800707c:	2204      	movs	r2, #4
 800707e:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8007080:	69db      	ldr	r3, [r3, #28]
 8007082:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 8007084:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8007086:	d050      	beq.n	800712a <HAL_TIM_IRQHandler+0x10e>
        HAL_TIM_IC_CaptureCallback(htim);
 8007088:	f7ff ffc5 	bl	8007016 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800708c:	2300      	movs	r3, #0
 800708e:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 8007090:	06f2      	lsls	r2, r6, #27
 8007092:	d510      	bpl.n	80070b6 <HAL_TIM_IRQHandler+0x9a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 8007094:	06eb      	lsls	r3, r5, #27
 8007096:	d50e      	bpl.n	80070b6 <HAL_TIM_IRQHandler+0x9a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 8007098:	6823      	ldr	r3, [r4, #0]
 800709a:	f06f 0210 	mvn.w	r2, #16
 800709e:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80070a0:	2208      	movs	r2, #8
 80070a2:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80070a4:	69db      	ldr	r3, [r3, #28]
 80070a6:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 80070aa:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80070ac:	d043      	beq.n	8007136 <HAL_TIM_IRQHandler+0x11a>
        HAL_TIM_IC_CaptureCallback(htim);
 80070ae:	f7ff ffb2 	bl	8007016 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80070b2:	2300      	movs	r3, #0
 80070b4:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 80070b6:	07f0      	lsls	r0, r6, #31
 80070b8:	d508      	bpl.n	80070cc <HAL_TIM_IRQHandler+0xb0>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 80070ba:	07e9      	lsls	r1, r5, #31
 80070bc:	d506      	bpl.n	80070cc <HAL_TIM_IRQHandler+0xb0>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 80070be:	6823      	ldr	r3, [r4, #0]
 80070c0:	f06f 0201 	mvn.w	r2, #1
 80070c4:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 80070c6:	4620      	mov	r0, r4
 80070c8:	f7fa fb42 	bl	8001750 <HAL_TIM_PeriodElapsedCallback>
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 80070cc:	0632      	lsls	r2, r6, #24
 80070ce:	d508      	bpl.n	80070e2 <HAL_TIM_IRQHandler+0xc6>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 80070d0:	062b      	lsls	r3, r5, #24
 80070d2:	d506      	bpl.n	80070e2 <HAL_TIM_IRQHandler+0xc6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 80070d4:	6823      	ldr	r3, [r4, #0]
 80070d6:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 80070da:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 80070dc:	4620      	mov	r0, r4
 80070de:	f000 f8ca 	bl	8007276 <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 80070e2:	0670      	lsls	r0, r6, #25
 80070e4:	d508      	bpl.n	80070f8 <HAL_TIM_IRQHandler+0xdc>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 80070e6:	0669      	lsls	r1, r5, #25
 80070e8:	d506      	bpl.n	80070f8 <HAL_TIM_IRQHandler+0xdc>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 80070ea:	6823      	ldr	r3, [r4, #0]
 80070ec:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 80070f0:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 80070f2:	4620      	mov	r0, r4
 80070f4:	f7ff ff91 	bl	800701a <HAL_TIM_TriggerCallback>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 80070f8:	06b2      	lsls	r2, r6, #26
 80070fa:	d522      	bpl.n	8007142 <HAL_TIM_IRQHandler+0x126>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 80070fc:	06ab      	lsls	r3, r5, #26
 80070fe:	d520      	bpl.n	8007142 <HAL_TIM_IRQHandler+0x126>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8007100:	6823      	ldr	r3, [r4, #0]
 8007102:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 8007106:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8007108:	611a      	str	r2, [r3, #16]
}
 800710a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      HAL_TIMEx_CommutCallback(htim);
 800710e:	f000 b8b1 	b.w	8007274 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8007112:	f7ff ff7f 	bl	8007014 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007116:	4620      	mov	r0, r4
 8007118:	f7ff ff7e 	bl	8007018 <HAL_TIM_PWM_PulseFinishedCallback>
 800711c:	e791      	b.n	8007042 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800711e:	f7ff ff79 	bl	8007014 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007122:	4620      	mov	r0, r4
 8007124:	f7ff ff78 	bl	8007018 <HAL_TIM_PWM_PulseFinishedCallback>
 8007128:	e79e      	b.n	8007068 <HAL_TIM_IRQHandler+0x4c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800712a:	f7ff ff73 	bl	8007014 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800712e:	4620      	mov	r0, r4
 8007130:	f7ff ff72 	bl	8007018 <HAL_TIM_PWM_PulseFinishedCallback>
 8007134:	e7aa      	b.n	800708c <HAL_TIM_IRQHandler+0x70>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007136:	f7ff ff6d 	bl	8007014 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800713a:	4620      	mov	r0, r4
 800713c:	f7ff ff6c 	bl	8007018 <HAL_TIM_PWM_PulseFinishedCallback>
 8007140:	e7b7      	b.n	80070b2 <HAL_TIM_IRQHandler+0x96>
}
 8007142:	bd70      	pop	{r4, r5, r6, pc}

08007144 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007144:	4a33      	ldr	r2, [pc, #204]	@ (8007214 <TIM_Base_SetConfig+0xd0>)
  tmpcr1 = TIMx->CR1;
 8007146:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007148:	4290      	cmp	r0, r2
 800714a:	d012      	beq.n	8007172 <TIM_Base_SetConfig+0x2e>
 800714c:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8007150:	d00f      	beq.n	8007172 <TIM_Base_SetConfig+0x2e>
 8007152:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 8007156:	4290      	cmp	r0, r2
 8007158:	d00b      	beq.n	8007172 <TIM_Base_SetConfig+0x2e>
 800715a:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800715e:	4290      	cmp	r0, r2
 8007160:	d007      	beq.n	8007172 <TIM_Base_SetConfig+0x2e>
 8007162:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8007166:	4290      	cmp	r0, r2
 8007168:	d003      	beq.n	8007172 <TIM_Base_SetConfig+0x2e>
 800716a:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 800716e:	4290      	cmp	r0, r2
 8007170:	d119      	bne.n	80071a6 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8007172:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8007174:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 8007178:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800717a:	4a26      	ldr	r2, [pc, #152]	@ (8007214 <TIM_Base_SetConfig+0xd0>)
 800717c:	4290      	cmp	r0, r2
 800717e:	d029      	beq.n	80071d4 <TIM_Base_SetConfig+0x90>
 8007180:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8007184:	d026      	beq.n	80071d4 <TIM_Base_SetConfig+0x90>
 8007186:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 800718a:	4290      	cmp	r0, r2
 800718c:	d022      	beq.n	80071d4 <TIM_Base_SetConfig+0x90>
 800718e:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8007192:	4290      	cmp	r0, r2
 8007194:	d01e      	beq.n	80071d4 <TIM_Base_SetConfig+0x90>
 8007196:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800719a:	4290      	cmp	r0, r2
 800719c:	d01a      	beq.n	80071d4 <TIM_Base_SetConfig+0x90>
 800719e:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 80071a2:	4290      	cmp	r0, r2
 80071a4:	d016      	beq.n	80071d4 <TIM_Base_SetConfig+0x90>
 80071a6:	4a1c      	ldr	r2, [pc, #112]	@ (8007218 <TIM_Base_SetConfig+0xd4>)
 80071a8:	4290      	cmp	r0, r2
 80071aa:	d013      	beq.n	80071d4 <TIM_Base_SetConfig+0x90>
 80071ac:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80071b0:	4290      	cmp	r0, r2
 80071b2:	d00f      	beq.n	80071d4 <TIM_Base_SetConfig+0x90>
 80071b4:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80071b8:	4290      	cmp	r0, r2
 80071ba:	d00b      	beq.n	80071d4 <TIM_Base_SetConfig+0x90>
 80071bc:	f5a2 3298 	sub.w	r2, r2, #77824	@ 0x13000
 80071c0:	4290      	cmp	r0, r2
 80071c2:	d007      	beq.n	80071d4 <TIM_Base_SetConfig+0x90>
 80071c4:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80071c8:	4290      	cmp	r0, r2
 80071ca:	d003      	beq.n	80071d4 <TIM_Base_SetConfig+0x90>
 80071cc:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80071d0:	4290      	cmp	r0, r2
 80071d2:	d103      	bne.n	80071dc <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80071d4:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 80071d6:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80071da:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80071dc:	694a      	ldr	r2, [r1, #20]
 80071de:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80071e2:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 80071e4:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80071e6:	688b      	ldr	r3, [r1, #8]
 80071e8:	62c3      	str	r3, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80071ea:	680b      	ldr	r3, [r1, #0]
 80071ec:	6283      	str	r3, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80071ee:	4b09      	ldr	r3, [pc, #36]	@ (8007214 <TIM_Base_SetConfig+0xd0>)
 80071f0:	4298      	cmp	r0, r3
 80071f2:	d003      	beq.n	80071fc <TIM_Base_SetConfig+0xb8>
 80071f4:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80071f8:	4298      	cmp	r0, r3
 80071fa:	d101      	bne.n	8007200 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80071fc:	690b      	ldr	r3, [r1, #16]
 80071fe:	6303      	str	r3, [r0, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8007200:	2301      	movs	r3, #1
 8007202:	6143      	str	r3, [r0, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 8007204:	6903      	ldr	r3, [r0, #16]
 8007206:	07db      	lsls	r3, r3, #31
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 8007208:	bf42      	ittt	mi
 800720a:	6903      	ldrmi	r3, [r0, #16]
 800720c:	f023 0301 	bicmi.w	r3, r3, #1
 8007210:	6103      	strmi	r3, [r0, #16]
  }
}
 8007212:	4770      	bx	lr
 8007214:	40010000 	.word	0x40010000
 8007218:	40014000 	.word	0x40014000

0800721c <HAL_TIM_Base_Init>:
{
 800721c:	b510      	push	{r4, lr}
  if (htim == NULL)
 800721e:	4604      	mov	r4, r0
 8007220:	b330      	cbz	r0, 8007270 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 8007222:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8007226:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800722a:	b91b      	cbnz	r3, 8007234 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800722c:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 8007230:	f7ff feb4 	bl	8006f9c <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8007234:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007236:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8007238:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800723c:	1d21      	adds	r1, r4, #4
 800723e:	f7ff ff81 	bl	8007144 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8007242:	2301      	movs	r3, #1
 8007244:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
  return HAL_OK;
 8007248:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800724a:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 800724e:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 8007252:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8007256:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800725a:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800725e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8007262:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 8007266:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
  htim->State = HAL_TIM_STATE_READY;
 800726a:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 800726e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007270:	2001      	movs	r0, #1
 8007272:	e7fc      	b.n	800726e <HAL_TIM_Base_Init+0x52>

08007274 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 8007274:	4770      	bx	lr

08007276 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 8007276:	4770      	bx	lr

08007278 <UART_SetConfig>:
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8007278:	6802      	ldr	r2, [r0, #0]
 800727a:	68c1      	ldr	r1, [r0, #12]
{
 800727c:	b538      	push	{r3, r4, r5, lr}
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800727e:	6913      	ldr	r3, [r2, #16]
 8007280:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8007284:	430b      	orrs	r3, r1
 8007286:	6113      	str	r3, [r2, #16]
{
 8007288:	4605      	mov	r5, r0
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800728a:	6883      	ldr	r3, [r0, #8]
 800728c:	6900      	ldr	r0, [r0, #16]
  MODIFY_REG(huart->Instance->CR1,
 800728e:	68d1      	ldr	r1, [r2, #12]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8007290:	4303      	orrs	r3, r0
 8007292:	6968      	ldr	r0, [r5, #20]
 8007294:	4303      	orrs	r3, r0
 8007296:	69e8      	ldr	r0, [r5, #28]
  MODIFY_REG(huart->Instance->CR1,
 8007298:	f421 4116 	bic.w	r1, r1, #38400	@ 0x9600
 800729c:	f021 010c 	bic.w	r1, r1, #12
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 80072a0:	4303      	orrs	r3, r0
  MODIFY_REG(huart->Instance->CR1,
 80072a2:	430b      	orrs	r3, r1
 80072a4:	60d3      	str	r3, [r2, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 80072a6:	6953      	ldr	r3, [r2, #20]
 80072a8:	69a9      	ldr	r1, [r5, #24]
 80072aa:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80072ae:	430b      	orrs	r3, r1
 80072b0:	6153      	str	r3, [r2, #20]
    if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) || (huart->Instance == UART10))
    {
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 80072b2:	4b1f      	ldr	r3, [pc, #124]	@ (8007330 <UART_SetConfig+0xb8>)
 80072b4:	429a      	cmp	r2, r3
 80072b6:	d003      	beq.n	80072c0 <UART_SetConfig+0x48>
 80072b8:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80072bc:	429a      	cmp	r2, r3
 80072be:	d124      	bne.n	800730a <UART_SetConfig+0x92>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 80072c0:	f7ff f94a 	bl	8006558 <HAL_RCC_GetPCLK2Freq>
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
    }
  /*-------------------------- USART BRR Configuration ---------------------*/
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80072c4:	69ea      	ldr	r2, [r5, #28]
  {
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 80072c6:	2119      	movs	r1, #25
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80072c8:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 80072cc:	e9d5 4300 	ldrd	r4, r3, [r5]
 80072d0:	fba0 0101 	umull	r0, r1, r0, r1
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80072d4:	d11c      	bne.n	8007310 <UART_SetConfig+0x98>
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 80072d6:	18da      	adds	r2, r3, r3
 80072d8:	f04f 0500 	mov.w	r5, #0
 80072dc:	eb45 0305 	adc.w	r3, r5, r5
 80072e0:	f7f8 ffd6 	bl	8000290 <__aeabi_uldivmod>
 80072e4:	2264      	movs	r2, #100	@ 0x64
 80072e6:	fbb0 f1f2 	udiv	r1, r0, r2
 80072ea:	fb02 0311 	mls	r3, r2, r1, r0
 80072ee:	00db      	lsls	r3, r3, #3
 80072f0:	3332      	adds	r3, #50	@ 0x32
 80072f2:	fbb3 f3f2 	udiv	r3, r3, r2
 80072f6:	f003 0207 	and.w	r2, r3, #7
 80072fa:	005b      	lsls	r3, r3, #1
 80072fc:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 8007300:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8007304:	4413      	add	r3, r2
  }
  else
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8007306:	60a3      	str	r3, [r4, #8]
  }
}
 8007308:	bd38      	pop	{r3, r4, r5, pc}
      pclk = HAL_RCC_GetPCLK1Freq();
 800730a:	f7ff f915 	bl	8006538 <HAL_RCC_GetPCLK1Freq>
 800730e:	e7d9      	b.n	80072c4 <UART_SetConfig+0x4c>
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8007310:	009a      	lsls	r2, r3, #2
 8007312:	0f9b      	lsrs	r3, r3, #30
 8007314:	f7f8 ffbc 	bl	8000290 <__aeabi_uldivmod>
 8007318:	2264      	movs	r2, #100	@ 0x64
 800731a:	fbb0 f1f2 	udiv	r1, r0, r2
 800731e:	fb02 0311 	mls	r3, r2, r1, r0
 8007322:	011b      	lsls	r3, r3, #4
 8007324:	3332      	adds	r3, #50	@ 0x32
 8007326:	fbb3 f3f2 	udiv	r3, r3, r2
 800732a:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 800732e:	e7ea      	b.n	8007306 <UART_SetConfig+0x8e>
 8007330:	40011000 	.word	0x40011000

08007334 <HAL_UART_Init>:
{
 8007334:	b510      	push	{r4, lr}
  if (huart == NULL)
 8007336:	4604      	mov	r4, r0
 8007338:	b348      	cbz	r0, 800738e <HAL_UART_Init+0x5a>
  if (huart->gState == HAL_UART_STATE_RESET)
 800733a:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
 800733e:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8007342:	b91b      	cbnz	r3, 800734c <HAL_UART_Init+0x18>
    huart->Lock = HAL_UNLOCKED;
 8007344:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_UART_MspInit(huart);
 8007348:	f7fa fc2e 	bl	8001ba8 <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 800734c:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 800734e:	2324      	movs	r3, #36	@ 0x24
 8007350:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UART_DISABLE(huart);
 8007354:	68d3      	ldr	r3, [r2, #12]
 8007356:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 800735a:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 800735c:	4620      	mov	r0, r4
 800735e:	f7ff ff8b 	bl	8007278 <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8007362:	6823      	ldr	r3, [r4, #0]
 8007364:	691a      	ldr	r2, [r3, #16]
 8007366:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 800736a:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 800736c:	695a      	ldr	r2, [r3, #20]
 800736e:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8007372:	615a      	str	r2, [r3, #20]
  __HAL_UART_ENABLE(huart);
 8007374:	68da      	ldr	r2, [r3, #12]
 8007376:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800737a:	60da      	str	r2, [r3, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800737c:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 800737e:	2320      	movs	r3, #32
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007380:	6460      	str	r0, [r4, #68]	@ 0x44
  huart->gState = HAL_UART_STATE_READY;
 8007382:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  huart->RxState = HAL_UART_STATE_READY;
 8007386:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 800738a:	6360      	str	r0, [r4, #52]	@ 0x34
}
 800738c:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800738e:	2001      	movs	r0, #1
 8007390:	e7fc      	b.n	800738c <HAL_UART_Init+0x58>

08007392 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8007392:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007396:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 800739a:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 800739e:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 80073a2:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
 80073a6:	f8d1 e024 	ldr.w	lr, [r1, #36]	@ 0x24
  if (Init->SDBank == FMC_SDRAM_BANK1)
 80073aa:	6809      	ldr	r1, [r1, #0]
 80073ac:	ea43 0308 	orr.w	r3, r3, r8
 80073b0:	b991      	cbnz	r1, 80073d8 <FMC_SDRAM_Init+0x46>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80073b2:	ea43 030e 	orr.w	r3, r3, lr
 80073b6:	4313      	orrs	r3, r2
 80073b8:	ea43 030c 	orr.w	r3, r3, ip
 80073bc:	6801      	ldr	r1, [r0, #0]
 80073be:	433b      	orrs	r3, r7
 80073c0:	4333      	orrs	r3, r6
 80073c2:	432b      	orrs	r3, r5
 80073c4:	f421 41ff 	bic.w	r1, r1, #32640	@ 0x7f80
 80073c8:	4323      	orrs	r3, r4
 80073ca:	f021 017f 	bic.w	r1, r1, #127	@ 0x7f
 80073ce:	430b      	orrs	r3, r1
 80073d0:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 80073d2:	2000      	movs	r0, #0
 80073d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80073d8:	6801      	ldr	r1, [r0, #0]
 80073da:	ea43 030e 	orr.w	r3, r3, lr
 80073de:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
 80073e2:	430b      	orrs	r3, r1
 80073e4:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 80073e6:	ea42 030c 	orr.w	r3, r2, ip
 80073ea:	6841      	ldr	r1, [r0, #4]
 80073ec:	433b      	orrs	r3, r7
 80073ee:	4333      	orrs	r3, r6
 80073f0:	432b      	orrs	r3, r5
 80073f2:	f421 42ff 	bic.w	r2, r1, #32640	@ 0x7f80
 80073f6:	4323      	orrs	r3, r4
 80073f8:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 80073fc:	4313      	orrs	r3, r2
 80073fe:	6043      	str	r3, [r0, #4]
 8007400:	e7e7      	b.n	80073d2 <FMC_SDRAM_Init+0x40>

08007402 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007402:	68cb      	ldr	r3, [r1, #12]
 8007404:	f103 3cff 	add.w	ip, r3, #4294967295
 8007408:	694b      	ldr	r3, [r1, #20]
{
 800740a:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800740c:	680f      	ldr	r7, [r1, #0]
 800740e:	684c      	ldr	r4, [r1, #4]
 8007410:	688e      	ldr	r6, [r1, #8]
 8007412:	690d      	ldr	r5, [r1, #16]
 8007414:	6989      	ldr	r1, [r1, #24]
 8007416:	3b01      	subs	r3, #1
 8007418:	051b      	lsls	r3, r3, #20
 800741a:	3c01      	subs	r4, #1
 800741c:	3e01      	subs	r6, #1
 800741e:	3d01      	subs	r5, #1
 8007420:	3901      	subs	r1, #1
 8007422:	3f01      	subs	r7, #1
 8007424:	0124      	lsls	r4, r4, #4
 8007426:	0236      	lsls	r6, r6, #8
 8007428:	042d      	lsls	r5, r5, #16
 800742a:	0609      	lsls	r1, r1, #24
 800742c:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 8007430:	b95a      	cbnz	r2, 800744a <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007432:	433b      	orrs	r3, r7
 8007434:	4323      	orrs	r3, r4
 8007436:	6882      	ldr	r2, [r0, #8]
 8007438:	4333      	orrs	r3, r6
 800743a:	432b      	orrs	r3, r5
 800743c:	430b      	orrs	r3, r1
 800743e:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8007442:	4313      	orrs	r3, r2
 8007444:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 8007446:	2000      	movs	r0, #0
 8007448:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800744a:	6882      	ldr	r2, [r0, #8]
 800744c:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8007450:	f422 4270 	bic.w	r2, r2, #61440	@ 0xf000
 8007454:	431a      	orrs	r2, r3
 8007456:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8007458:	ea44 0306 	orr.w	r3, r4, r6
 800745c:	68c2      	ldr	r2, [r0, #12]
 800745e:	433b      	orrs	r3, r7
 8007460:	432b      	orrs	r3, r5
 8007462:	430b      	orrs	r3, r1
 8007464:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8007468:	4313      	orrs	r3, r2
 800746a:	60c3      	str	r3, [r0, #12]
 800746c:	e7eb      	b.n	8007446 <FMC_SDRAM_Timing_Init+0x44>

0800746e <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800746e:	b570      	push	{r4, r5, r6, lr}
 8007470:	4604      	mov	r4, r0
 8007472:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8007474:	6902      	ldr	r2, [r0, #16]
 8007476:	e9d1 3000 	ldrd	r3, r0, [r1]
 800747a:	4303      	orrs	r3, r0
 800747c:	68c8      	ldr	r0, [r1, #12]
 800747e:	0d92      	lsrs	r2, r2, #22
 8007480:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 8007484:	0592      	lsls	r2, r2, #22
 8007486:	4313      	orrs	r3, r2
 8007488:	688a      	ldr	r2, [r1, #8]
 800748a:	3a01      	subs	r2, #1
 800748c:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8007490:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 8007492:	f7fd f965 	bl	8004760 <HAL_GetTick>
 8007496:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8007498:	69a0      	ldr	r0, [r4, #24]
 800749a:	f010 0020 	ands.w	r0, r0, #32
 800749e:	d003      	beq.n	80074a8 <FMC_SDRAM_SendCommand+0x3a>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80074a0:	1c6b      	adds	r3, r5, #1
 80074a2:	d0f9      	beq.n	8007498 <FMC_SDRAM_SendCommand+0x2a>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 80074a4:	b90d      	cbnz	r5, 80074aa <FMC_SDRAM_SendCommand+0x3c>
      {
        return HAL_TIMEOUT;
 80074a6:	2003      	movs	r0, #3
      }
    }
  }
  return HAL_OK;
}
 80074a8:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 80074aa:	f7fd f959 	bl	8004760 <HAL_GetTick>
 80074ae:	1b80      	subs	r0, r0, r6
 80074b0:	42a8      	cmp	r0, r5
 80074b2:	d9f1      	bls.n	8007498 <FMC_SDRAM_SendCommand+0x2a>
 80074b4:	e7f7      	b.n	80074a6 <FMC_SDRAM_SendCommand+0x38>

080074b6 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 80074b6:	6943      	ldr	r3, [r0, #20]
 80074b8:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 80074bc:	f023 033e 	bic.w	r3, r3, #62	@ 0x3e
 80074c0:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 80074c4:	6143      	str	r3, [r0, #20]

  return HAL_OK;
}
 80074c6:	2000      	movs	r0, #0
 80074c8:	4770      	bx	lr

080074ca <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 80074ca:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 80074cc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80074d0:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 80074d2:	f001 fe3f 	bl	8009154 <xTaskGetSchedulerState>
 80074d6:	2801      	cmp	r0, #1
 80074d8:	d003      	beq.n	80074e2 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 80074da:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 80074de:	f000 bbe9 	b.w	8007cb4 <xPortSysTickHandler>
}
 80074e2:	bd08      	pop	{r3, pc}

080074e4 <osKernelInitialize>:
 */
__STATIC_FORCEINLINE uint32_t __get_IPSR(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80074e4:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 80074e8:	b92b      	cbnz	r3, 80074f6 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 80074ea:	4b06      	ldr	r3, [pc, #24]	@ (8007504 <osKernelInitialize+0x20>)
 80074ec:	6818      	ldr	r0, [r3, #0]
 80074ee:	b928      	cbnz	r0, 80074fc <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 80074f0:	2201      	movs	r2, #1
 80074f2:	601a      	str	r2, [r3, #0]
      stat = osOK;
 80074f4:	4770      	bx	lr
    stat = osErrorISR;
 80074f6:	f06f 0005 	mvn.w	r0, #5
 80074fa:	4770      	bx	lr
    } else {
      stat = osError;
 80074fc:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8007500:	4770      	bx	lr
 8007502:	bf00      	nop
 8007504:	2000135c 	.word	0x2000135c

08007508 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8007508:	b510      	push	{r4, lr}
 800750a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800750e:	b95c      	cbnz	r4, 8007528 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8007510:	4b08      	ldr	r3, [pc, #32]	@ (8007534 <osKernelStart+0x2c>)
 8007512:	681a      	ldr	r2, [r3, #0]
 8007514:	2a01      	cmp	r2, #1
 8007516:	d10a      	bne.n	800752e <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007518:	4a07      	ldr	r2, [pc, #28]	@ (8007538 <osKernelStart+0x30>)
 800751a:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800751c:	2202      	movs	r2, #2
 800751e:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8007520:	f001 fb86 	bl	8008c30 <vTaskStartScheduler>
      stat = osOK;
 8007524:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 8007526:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8007528:	f06f 0005 	mvn.w	r0, #5
 800752c:	e7fb      	b.n	8007526 <osKernelStart+0x1e>
      stat = osError;
 800752e:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8007532:	e7f8      	b.n	8007526 <osKernelStart+0x1e>
 8007534:	2000135c 	.word	0x2000135c
 8007538:	e000ed00 	.word	0xe000ed00

0800753c <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800753c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800753e:	b087      	sub	sp, #28
 8007540:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8007542:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007544:	460b      	mov	r3, r1
  hTask = NULL;
 8007546:	9205      	str	r2, [sp, #20]
 8007548:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800754c:	b9ca      	cbnz	r2, 8007582 <osThreadNew+0x46>
 800754e:	b1c0      	cbz	r0, 8007582 <osThreadNew+0x46>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8007550:	b36c      	cbz	r4, 80075ae <osThreadNew+0x72>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8007552:	69a5      	ldr	r5, [r4, #24]
 8007554:	2d00      	cmp	r5, #0
 8007556:	bf08      	it	eq
 8007558:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800755a:	1e69      	subs	r1, r5, #1
 800755c:	2937      	cmp	r1, #55	@ 0x37
 800755e:	46ac      	mov	ip, r5
 8007560:	d82a      	bhi.n	80075b8 <osThreadNew+0x7c>
 8007562:	6861      	ldr	r1, [r4, #4]
 8007564:	07c9      	lsls	r1, r1, #31
 8007566:	d427      	bmi.n	80075b8 <osThreadNew+0x7c>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8007568:	6966      	ldr	r6, [r4, #20]
 800756a:	b16e      	cbz	r6, 8007588 <osThreadNew+0x4c>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800756c:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800756e:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8007572:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007574:	b157      	cbz	r7, 800758c <osThreadNew+0x50>
 8007576:	f1be 0fab 	cmp.w	lr, #171	@ 0xab
 800757a:	d902      	bls.n	8007582 <osThreadNew+0x46>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800757c:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800757e:	b104      	cbz	r4, 8007582 <osThreadNew+0x46>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8007580:	b9e6      	cbnz	r6, 80075bc <osThreadNew+0x80>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 8007582:	9805      	ldr	r0, [sp, #20]
}
 8007584:	b007      	add	sp, #28
 8007586:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8007588:	2280      	movs	r2, #128	@ 0x80
 800758a:	e7f0      	b.n	800756e <osThreadNew+0x32>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800758c:	f1be 0f00 	cmp.w	lr, #0
 8007590:	d1f7      	bne.n	8007582 <osThreadNew+0x46>
      if (mem == 0) {
 8007592:	6924      	ldr	r4, [r4, #16]
 8007594:	2c00      	cmp	r4, #0
 8007596:	d1f4      	bne.n	8007582 <osThreadNew+0x46>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8007598:	ac05      	add	r4, sp, #20
 800759a:	e9cd c400 	strd	ip, r4, [sp]
 800759e:	b292      	uxth	r2, r2
 80075a0:	f001 fb18 	bl	8008bd4 <xTaskCreate>
 80075a4:	2801      	cmp	r0, #1
            hTask = NULL;
 80075a6:	bf1c      	itt	ne
 80075a8:	2300      	movne	r3, #0
 80075aa:	9305      	strne	r3, [sp, #20]
 80075ac:	e7e9      	b.n	8007582 <osThreadNew+0x46>
    name = NULL;
 80075ae:	4621      	mov	r1, r4
    prio  = (UBaseType_t)osPriorityNormal;
 80075b0:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 80075b4:	2280      	movs	r2, #128	@ 0x80
 80075b6:	e7ef      	b.n	8007598 <osThreadNew+0x5c>
        return (NULL);
 80075b8:	4610      	mov	r0, r2
 80075ba:	e7e3      	b.n	8007584 <osThreadNew+0x48>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 80075bc:	e9cd 4701 	strd	r4, r7, [sp, #4]
 80075c0:	9500      	str	r5, [sp, #0]
 80075c2:	f001 facf 	bl	8008b64 <xTaskCreateStatic>
 80075c6:	9005      	str	r0, [sp, #20]
 80075c8:	e7db      	b.n	8007582 <osThreadNew+0x46>

080075ca <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 80075ca:	b508      	push	{r3, lr}
 80075cc:	f3ef 8205 	mrs	r2, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80075d0:	b922      	cbnz	r2, 80075dc <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 80075d2:	b108      	cbz	r0, 80075d8 <osDelay+0xe>
      vTaskDelay(ticks);
 80075d4:	f001 fc94 	bl	8008f00 <vTaskDelay>
    stat = osOK;
 80075d8:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 80075da:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
 80075dc:	f06f 0005 	mvn.w	r0, #5
  return (stat);
 80075e0:	e7fb      	b.n	80075da <osDelay+0x10>

080075e2 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 80075e2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80075e4:	4604      	mov	r4, r0
 80075e6:	460e      	mov	r6, r1
 80075e8:	4615      	mov	r5, r2
 80075ea:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80075ee:	b942      	cbnz	r2, 8007602 <osSemaphoreNew+0x20>
 80075f0:	b138      	cbz	r0, 8007602 <osSemaphoreNew+0x20>
 80075f2:	4288      	cmp	r0, r1
 80075f4:	d305      	bcc.n	8007602 <osSemaphoreNew+0x20>
    mem = -1;

    if (attr != NULL) {
 80075f6:	b155      	cbz	r5, 800760e <osSemaphoreNew+0x2c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 80075f8:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 80075fc:	b12b      	cbz	r3, 800760a <osSemaphoreNew+0x28>
 80075fe:	2f4f      	cmp	r7, #79	@ 0x4f
 8007600:	d822      	bhi.n	8007648 <osSemaphoreNew+0x66>
  hSemaphore = NULL;
 8007602:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8007604:	4620      	mov	r0, r4
 8007606:	b003      	add	sp, #12
 8007608:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800760a:	2f00      	cmp	r7, #0
 800760c:	d1f9      	bne.n	8007602 <osSemaphoreNew+0x20>
      if (max_count == 1U) {
 800760e:	2c01      	cmp	r4, #1
 8007610:	d00c      	beq.n	800762c <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8007612:	4620      	mov	r0, r4
 8007614:	4631      	mov	r1, r6
 8007616:	f000 fd87 	bl	8008128 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800761a:	4604      	mov	r4, r0
 800761c:	2800      	cmp	r0, #0
 800761e:	d0f0      	beq.n	8007602 <osSemaphoreNew+0x20>
        if (attr != NULL) {
 8007620:	b985      	cbnz	r5, 8007644 <osSemaphoreNew+0x62>
        vQueueAddToRegistry (hSemaphore, name);
 8007622:	4629      	mov	r1, r5
 8007624:	4620      	mov	r0, r4
 8007626:	f001 f8c5 	bl	80087b4 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 800762a:	e7eb      	b.n	8007604 <osSemaphoreNew+0x22>
            hSemaphore = xSemaphoreCreateBinary();
 800762c:	2203      	movs	r2, #3
 800762e:	2100      	movs	r1, #0
 8007630:	2001      	movs	r0, #1
 8007632:	f000 fd30 	bl	8008096 <xQueueGenericCreate>
 8007636:	e00e      	b.n	8007656 <osSemaphoreNew+0x74>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8007638:	461a      	mov	r2, r3
 800763a:	f000 fd53 	bl	80080e4 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 800763e:	4604      	mov	r4, r0
 8007640:	2800      	cmp	r0, #0
 8007642:	d0de      	beq.n	8007602 <osSemaphoreNew+0x20>
          name = attr->name;
 8007644:	682d      	ldr	r5, [r5, #0]
 8007646:	e7ec      	b.n	8007622 <osSemaphoreNew+0x40>
      if (max_count == 1U) {
 8007648:	2801      	cmp	r0, #1
 800764a:	d1f5      	bne.n	8007638 <osSemaphoreNew+0x56>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800764c:	2103      	movs	r1, #3
 800764e:	9100      	str	r1, [sp, #0]
 8007650:	4611      	mov	r1, r2
 8007652:	f000 fcd2 	bl	8007ffa <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8007656:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8007658:	2800      	cmp	r0, #0
 800765a:	d0d2      	beq.n	8007602 <osSemaphoreNew+0x20>
 800765c:	2e00      	cmp	r6, #0
 800765e:	d0df      	beq.n	8007620 <osSemaphoreNew+0x3e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8007660:	2300      	movs	r3, #0
 8007662:	461a      	mov	r2, r3
 8007664:	4619      	mov	r1, r3
 8007666:	f000 fd7d 	bl	8008164 <xQueueGenericSend>
 800766a:	2801      	cmp	r0, #1
 800766c:	d0d8      	beq.n	8007620 <osSemaphoreNew+0x3e>
            vSemaphoreDelete (hSemaphore);
 800766e:	4620      	mov	r0, r4
 8007670:	f001 f8ca 	bl	8008808 <vQueueDelete>
      if (hSemaphore != NULL) {
 8007674:	e7c5      	b.n	8007602 <osSemaphoreNew+0x20>

08007676 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8007676:	b513      	push	{r0, r1, r4, lr}
 8007678:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800767a:	b328      	cbz	r0, 80076c8 <osSemaphoreAcquire+0x52>
 800767c:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8007680:	b1cb      	cbz	r3, 80076b6 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 8007682:	bb09      	cbnz	r1, 80076c8 <osSemaphoreAcquire+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8007684:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007686:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8007688:	f001 f827 	bl	80086da <xQueueReceiveFromISR>
 800768c:	2801      	cmp	r0, #1
 800768e:	d003      	beq.n	8007698 <osSemaphoreAcquire+0x22>
        stat = osErrorResource;
 8007690:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 8007694:	b002      	add	sp, #8
 8007696:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 8007698:	9b01      	ldr	r3, [sp, #4]
 800769a:	b90b      	cbnz	r3, 80076a0 <osSemaphoreAcquire+0x2a>
  stat = osOK;
 800769c:	2000      	movs	r0, #0
 800769e:	e7f9      	b.n	8007694 <osSemaphoreAcquire+0x1e>
        portYIELD_FROM_ISR (yield);
 80076a0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80076a4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80076a8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80076ac:	f3bf 8f4f 	dsb	sy
 80076b0:	f3bf 8f6f 	isb	sy
 80076b4:	e7f2      	b.n	800769c <osSemaphoreAcquire+0x26>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 80076b6:	f000 ff53 	bl	8008560 <xQueueSemaphoreTake>
 80076ba:	2801      	cmp	r0, #1
 80076bc:	d0ee      	beq.n	800769c <osSemaphoreAcquire+0x26>
      if (timeout != 0U) {
 80076be:	2c00      	cmp	r4, #0
 80076c0:	d0e6      	beq.n	8007690 <osSemaphoreAcquire+0x1a>
        stat = osErrorTimeout;
 80076c2:	f06f 0001 	mvn.w	r0, #1
 80076c6:	e7e5      	b.n	8007694 <osSemaphoreAcquire+0x1e>
    stat = osErrorParameter;
 80076c8:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 80076cc:	e7e2      	b.n	8007694 <osSemaphoreAcquire+0x1e>

080076ce <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 80076ce:	b507      	push	{r0, r1, r2, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80076d0:	b318      	cbz	r0, 800771a <osSemaphoreRelease+0x4c>
 80076d2:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80076d6:	b1cb      	cbz	r3, 800770c <osSemaphoreRelease+0x3e>
    yield = pdFALSE;
 80076d8:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80076da:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 80076dc:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80076de:	f000 fe50 	bl	8008382 <xQueueGiveFromISR>
 80076e2:	2801      	cmp	r0, #1
 80076e4:	d004      	beq.n	80076f0 <osSemaphoreRelease+0x22>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 80076e6:	f06f 0002 	mvn.w	r0, #2
    }
  }

  return (stat);
}
 80076ea:	b003      	add	sp, #12
 80076ec:	f85d fb04 	ldr.w	pc, [sp], #4
      portYIELD_FROM_ISR (yield);
 80076f0:	9b01      	ldr	r3, [sp, #4]
 80076f2:	b14b      	cbz	r3, 8007708 <osSemaphoreRelease+0x3a>
 80076f4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80076f8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80076fc:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007700:	f3bf 8f4f 	dsb	sy
 8007704:	f3bf 8f6f 	isb	sy
  stat = osOK;
 8007708:	2000      	movs	r0, #0
 800770a:	e7ee      	b.n	80076ea <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800770c:	461a      	mov	r2, r3
 800770e:	4619      	mov	r1, r3
 8007710:	f000 fd28 	bl	8008164 <xQueueGenericSend>
 8007714:	2801      	cmp	r0, #1
 8007716:	d0f7      	beq.n	8007708 <osSemaphoreRelease+0x3a>
 8007718:	e7e5      	b.n	80076e6 <osSemaphoreRelease+0x18>
    stat = osErrorParameter;
 800771a:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800771e:	e7e4      	b.n	80076ea <osSemaphoreRelease+0x1c>

08007720 <osSemaphoreGetCount>:

uint32_t osSemaphoreGetCount (osSemaphoreId_t semaphore_id) {
  SemaphoreHandle_t hSemaphore = (SemaphoreHandle_t)semaphore_id;
  uint32_t count;

  if (hSemaphore == NULL) {
 8007720:	b130      	cbz	r0, 8007730 <osSemaphoreGetCount+0x10>
 8007722:	f3ef 8305 	mrs	r3, IPSR
    count = 0U;
  }
  else if (IS_IRQ()) {
 8007726:	b10b      	cbz	r3, 800772c <osSemaphoreGetCount+0xc>
    count = uxQueueMessagesWaitingFromISR (hSemaphore);
 8007728:	f001 b837 	b.w	800879a <uxQueueMessagesWaitingFromISR>
  } else {
    count = (uint32_t)uxSemaphoreGetCount (hSemaphore);
 800772c:	f001 b822 	b.w	8008774 <uxQueueMessagesWaiting>
  }

  return (count);
}
 8007730:	4770      	bx	lr

08007732 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8007732:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007734:	4605      	mov	r5, r0
 8007736:	460e      	mov	r6, r1
 8007738:	4614      	mov	r4, r2
 800773a:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800773e:	b11f      	cbz	r7, 8007748 <osMessageQueueNew+0x16>
  hQueue = NULL;
 8007740:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8007742:	4628      	mov	r0, r5
 8007744:	b003      	add	sp, #12
 8007746:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8007748:	2800      	cmp	r0, #0
 800774a:	d0f9      	beq.n	8007740 <osMessageQueueNew+0xe>
 800774c:	2900      	cmp	r1, #0
 800774e:	d0f7      	beq.n	8007740 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8007750:	b1da      	cbz	r2, 800778a <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8007752:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 8007756:	b183      	cbz	r3, 800777a <osMessageQueueNew+0x48>
 8007758:	2a4f      	cmp	r2, #79	@ 0x4f
 800775a:	d9f1      	bls.n	8007740 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800775c:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800775e:	2a00      	cmp	r2, #0
 8007760:	d0ee      	beq.n	8007740 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8007762:	6966      	ldr	r6, [r4, #20]
 8007764:	434d      	muls	r5, r1
 8007766:	42ae      	cmp	r6, r5
 8007768:	d3ea      	bcc.n	8007740 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800776a:	9700      	str	r7, [sp, #0]
 800776c:	f000 fc45 	bl	8007ffa <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8007770:	4605      	mov	r5, r0
 8007772:	2800      	cmp	r0, #0
 8007774:	d0e4      	beq.n	8007740 <osMessageQueueNew+0xe>
        name = attr->name;
 8007776:	6824      	ldr	r4, [r4, #0]
 8007778:	e011      	b.n	800779e <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800777a:	2a00      	cmp	r2, #0
 800777c:	d1e0      	bne.n	8007740 <osMessageQueueNew+0xe>
 800777e:	6923      	ldr	r3, [r4, #16]
 8007780:	2b00      	cmp	r3, #0
 8007782:	d1dd      	bne.n	8007740 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8007784:	6963      	ldr	r3, [r4, #20]
 8007786:	2b00      	cmp	r3, #0
 8007788:	d1da      	bne.n	8007740 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 800778a:	4628      	mov	r0, r5
 800778c:	2200      	movs	r2, #0
 800778e:	4631      	mov	r1, r6
 8007790:	f000 fc81 	bl	8008096 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8007794:	4605      	mov	r5, r0
 8007796:	2800      	cmp	r0, #0
 8007798:	d0d2      	beq.n	8007740 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 800779a:	2c00      	cmp	r4, #0
 800779c:	d1eb      	bne.n	8007776 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 800779e:	4621      	mov	r1, r4
 80077a0:	4628      	mov	r0, r5
 80077a2:	f001 f807 	bl	80087b4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 80077a6:	e7cc      	b.n	8007742 <osMessageQueueNew+0x10>

080077a8 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 80077a8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80077aa:	461c      	mov	r4, r3
 80077ac:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80077b0:	b1de      	cbz	r6, 80077ea <osMessageQueuePut+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80077b2:	b338      	cbz	r0, 8007804 <osMessageQueuePut+0x5c>
 80077b4:	b331      	cbz	r1, 8007804 <osMessageQueuePut+0x5c>
 80077b6:	bb2b      	cbnz	r3, 8007804 <osMessageQueuePut+0x5c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80077b8:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80077ba:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80077bc:	f000 fd84 	bl	80082c8 <xQueueGenericSendFromISR>
 80077c0:	2801      	cmp	r0, #1
 80077c2:	d003      	beq.n	80077cc <osMessageQueuePut+0x24>
        stat = osErrorResource;
 80077c4:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 80077c8:	b002      	add	sp, #8
 80077ca:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 80077cc:	9b01      	ldr	r3, [sp, #4]
 80077ce:	b90b      	cbnz	r3, 80077d4 <osMessageQueuePut+0x2c>
  stat = osOK;
 80077d0:	2000      	movs	r0, #0
 80077d2:	e7f9      	b.n	80077c8 <osMessageQueuePut+0x20>
        portYIELD_FROM_ISR (yield);
 80077d4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80077d8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80077dc:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80077e0:	f3bf 8f4f 	dsb	sy
 80077e4:	f3bf 8f6f 	isb	sy
 80077e8:	e7f2      	b.n	80077d0 <osMessageQueuePut+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80077ea:	b158      	cbz	r0, 8007804 <osMessageQueuePut+0x5c>
 80077ec:	b151      	cbz	r1, 8007804 <osMessageQueuePut+0x5c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80077ee:	4633      	mov	r3, r6
 80077f0:	4622      	mov	r2, r4
 80077f2:	f000 fcb7 	bl	8008164 <xQueueGenericSend>
 80077f6:	2801      	cmp	r0, #1
 80077f8:	d0ea      	beq.n	80077d0 <osMessageQueuePut+0x28>
        if (timeout != 0U) {
 80077fa:	2c00      	cmp	r4, #0
 80077fc:	d0e2      	beq.n	80077c4 <osMessageQueuePut+0x1c>
          stat = osErrorTimeout;
 80077fe:	f06f 0001 	mvn.w	r0, #1
 8007802:	e7e1      	b.n	80077c8 <osMessageQueuePut+0x20>
      stat = osErrorParameter;
 8007804:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007808:	e7de      	b.n	80077c8 <osMessageQueuePut+0x20>

0800780a <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800780a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800780c:	461c      	mov	r4, r3
 800780e:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007812:	b1db      	cbz	r3, 800784c <osMessageQueueGet+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007814:	b330      	cbz	r0, 8007864 <osMessageQueueGet+0x5a>
 8007816:	b329      	cbz	r1, 8007864 <osMessageQueueGet+0x5a>
 8007818:	bb24      	cbnz	r4, 8007864 <osMessageQueueGet+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800781a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800781c:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800781e:	f000 ff5c 	bl	80086da <xQueueReceiveFromISR>
 8007822:	2801      	cmp	r0, #1
 8007824:	d003      	beq.n	800782e <osMessageQueueGet+0x24>
        stat = osErrorResource;
 8007826:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 800782a:	b003      	add	sp, #12
 800782c:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 800782e:	9b01      	ldr	r3, [sp, #4]
 8007830:	b90b      	cbnz	r3, 8007836 <osMessageQueueGet+0x2c>
  stat = osOK;
 8007832:	2000      	movs	r0, #0
 8007834:	e7f9      	b.n	800782a <osMessageQueueGet+0x20>
        portYIELD_FROM_ISR (yield);
 8007836:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800783a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800783e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007842:	f3bf 8f4f 	dsb	sy
 8007846:	f3bf 8f6f 	isb	sy
 800784a:	e7f2      	b.n	8007832 <osMessageQueueGet+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800784c:	b150      	cbz	r0, 8007864 <osMessageQueueGet+0x5a>
 800784e:	b149      	cbz	r1, 8007864 <osMessageQueueGet+0x5a>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8007850:	4622      	mov	r2, r4
 8007852:	f000 fde7 	bl	8008424 <xQueueReceive>
 8007856:	2801      	cmp	r0, #1
 8007858:	d0eb      	beq.n	8007832 <osMessageQueueGet+0x28>
        if (timeout != 0U) {
 800785a:	2c00      	cmp	r4, #0
 800785c:	d0e3      	beq.n	8007826 <osMessageQueueGet+0x1c>
          stat = osErrorTimeout;
 800785e:	f06f 0001 	mvn.w	r0, #1
 8007862:	e7e2      	b.n	800782a <osMessageQueueGet+0x20>
      stat = osErrorParameter;
 8007864:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007868:	e7df      	b.n	800782a <osMessageQueueGet+0x20>

0800786a <osMessageQueueGetCount>:
  }

  return (size);
}

uint32_t osMessageQueueGetCount (osMessageQueueId_t mq_id) {
 800786a:	f7ff bf59 	b.w	8007720 <osSemaphoreGetCount>
	...

08007870 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8007870:	4b03      	ldr	r3, [pc, #12]	@ (8007880 <vApplicationGetIdleTaskMemory+0x10>)
 8007872:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8007874:	4b03      	ldr	r3, [pc, #12]	@ (8007884 <vApplicationGetIdleTaskMemory+0x14>)
 8007876:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8007878:	2380      	movs	r3, #128	@ 0x80
 800787a:	6013      	str	r3, [r2, #0]
}
 800787c:	4770      	bx	lr
 800787e:	bf00      	nop
 8007880:	200012b0 	.word	0x200012b0
 8007884:	200010b0 	.word	0x200010b0

08007888 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8007888:	4b03      	ldr	r3, [pc, #12]	@ (8007898 <vApplicationGetTimerTaskMemory+0x10>)
 800788a:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800788c:	4b03      	ldr	r3, [pc, #12]	@ (800789c <vApplicationGetTimerTaskMemory+0x14>)
 800788e:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8007890:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8007894:	6013      	str	r3, [r2, #0]
}
 8007896:	4770      	bx	lr
 8007898:	20001004 	.word	0x20001004
 800789c:	20000c04 	.word	0x20000c04

080078a0 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 80078a0:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80078a2:	4b10      	ldr	r3, [pc, #64]	@ (80078e4 <prvInsertBlockIntoFreeList+0x44>)
 80078a4:	461a      	mov	r2, r3
 80078a6:	681b      	ldr	r3, [r3, #0]
 80078a8:	4283      	cmp	r3, r0
 80078aa:	d3fb      	bcc.n	80078a4 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 80078ac:	6854      	ldr	r4, [r2, #4]
 80078ae:	1911      	adds	r1, r2, r4
 80078b0:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 80078b2:	bf01      	itttt	eq
 80078b4:	6841      	ldreq	r1, [r0, #4]
 80078b6:	4610      	moveq	r0, r2
 80078b8:	1909      	addeq	r1, r1, r4
 80078ba:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 80078bc:	6844      	ldr	r4, [r0, #4]
 80078be:	1901      	adds	r1, r0, r4
 80078c0:	428b      	cmp	r3, r1
 80078c2:	d10c      	bne.n	80078de <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 80078c4:	4908      	ldr	r1, [pc, #32]	@ (80078e8 <prvInsertBlockIntoFreeList+0x48>)
 80078c6:	6809      	ldr	r1, [r1, #0]
 80078c8:	428b      	cmp	r3, r1
 80078ca:	d003      	beq.n	80078d4 <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80078cc:	6859      	ldr	r1, [r3, #4]
 80078ce:	4421      	add	r1, r4
 80078d0:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 80078d2:	6819      	ldr	r1, [r3, #0]
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 80078d4:	6001      	str	r1, [r0, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 80078d6:	4290      	cmp	r0, r2
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 80078d8:	bf18      	it	ne
 80078da:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 80078dc:	bd10      	pop	{r4, pc}
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80078de:	4619      	mov	r1, r3
 80078e0:	e7f8      	b.n	80078d4 <prvInsertBlockIntoFreeList+0x34>
 80078e2:	bf00      	nop
 80078e4:	20001378 	.word	0x20001378
 80078e8:	20001374 	.word	0x20001374

080078ec <pvPortMalloc>:
{
 80078ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80078f0:	4604      	mov	r4, r0
	vTaskSuspendAll();
 80078f2:	f001 f9ed 	bl	8008cd0 <vTaskSuspendAll>
		if( pxEnd == NULL )
 80078f6:	4942      	ldr	r1, [pc, #264]	@ (8007a00 <pvPortMalloc+0x114>)
 80078f8:	4d42      	ldr	r5, [pc, #264]	@ (8007a04 <pvPortMalloc+0x118>)
 80078fa:	680b      	ldr	r3, [r1, #0]
 80078fc:	bb0b      	cbnz	r3, 8007942 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 80078fe:	4a42      	ldr	r2, [pc, #264]	@ (8007a08 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8007900:	0756      	lsls	r6, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8007902:	bf1f      	itttt	ne
 8007904:	1dd0      	addne	r0, r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007906:	f020 0007 	bicne.w	r0, r0, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800790a:	f502 3280 	addne.w	r2, r2, #65536	@ 0x10000
 800790e:	1a13      	subne	r3, r2, r0
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8007910:	bf0c      	ite	eq
 8007912:	f44f 3380 	moveq.w	r3, #65536	@ 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007916:	4602      	movne	r2, r0
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8007918:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800791a:	4e3c      	ldr	r6, [pc, #240]	@ (8007a0c <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 800791c:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800791e:	f023 0307 	bic.w	r3, r3, #7
	xStart.xBlockSize = ( size_t ) 0;
 8007922:	2000      	movs	r0, #0
 8007924:	6070      	str	r0, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8007926:	6032      	str	r2, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8007928:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800792c:	1a98      	subs	r0, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800792e:	e9c2 3000 	strd	r3, r0, [r2]
	pxEnd = ( void * ) uxAddress;
 8007932:	600b      	str	r3, [r1, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007934:	4b36      	ldr	r3, [pc, #216]	@ (8007a10 <pvPortMalloc+0x124>)
 8007936:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007938:	4b36      	ldr	r3, [pc, #216]	@ (8007a14 <pvPortMalloc+0x128>)
 800793a:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800793c:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 8007940:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8007942:	682e      	ldr	r6, [r5, #0]
 8007944:	4226      	tst	r6, r4
 8007946:	d155      	bne.n	80079f4 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 8007948:	2c00      	cmp	r4, #0
 800794a:	d046      	beq.n	80079da <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 800794c:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8007950:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8007952:	bf1c      	itt	ne
 8007954:	f023 0307 	bicne.w	r3, r3, #7
 8007958:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800795a:	2b00      	cmp	r3, #0
 800795c:	d04a      	beq.n	80079f4 <pvPortMalloc+0x108>
 800795e:	4f2d      	ldr	r7, [pc, #180]	@ (8007a14 <pvPortMalloc+0x128>)
 8007960:	683c      	ldr	r4, [r7, #0]
 8007962:	429c      	cmp	r4, r3
 8007964:	d346      	bcc.n	80079f4 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 8007966:	4a29      	ldr	r2, [pc, #164]	@ (8007a0c <pvPortMalloc+0x120>)
 8007968:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800796a:	6868      	ldr	r0, [r5, #4]
 800796c:	4298      	cmp	r0, r3
 800796e:	d204      	bcs.n	800797a <pvPortMalloc+0x8e>
 8007970:	f8d5 c000 	ldr.w	ip, [r5]
 8007974:	f1bc 0f00 	cmp.w	ip, #0
 8007978:	d115      	bne.n	80079a6 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 800797a:	6809      	ldr	r1, [r1, #0]
 800797c:	42a9      	cmp	r1, r5
 800797e:	d039      	beq.n	80079f4 <pvPortMalloc+0x108>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8007980:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8007982:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8007986:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8007988:	1ac2      	subs	r2, r0, r3
 800798a:	2a10      	cmp	r2, #16
 800798c:	d912      	bls.n	80079b4 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800798e:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8007990:	0741      	lsls	r1, r0, #29
 8007992:	d00b      	beq.n	80079ac <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8007994:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007998:	f383 8811 	msr	BASEPRI, r3
 800799c:	f3bf 8f6f 	isb	sy
 80079a0:	f3bf 8f4f 	dsb	sy
 80079a4:	e7fe      	b.n	80079a4 <pvPortMalloc+0xb8>
 80079a6:	462a      	mov	r2, r5
 80079a8:	4665      	mov	r5, ip
 80079aa:	e7de      	b.n	800796a <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 80079ac:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 80079ae:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 80079b0:	f7ff ff76 	bl	80078a0 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80079b4:	686a      	ldr	r2, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80079b6:	4916      	ldr	r1, [pc, #88]	@ (8007a10 <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80079b8:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80079ba:	4316      	orrs	r6, r2
					xNumberOfSuccessfulAllocations++;
 80079bc:	4a16      	ldr	r2, [pc, #88]	@ (8007a18 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80079be:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80079c0:	603c      	str	r4, [r7, #0]
					pxBlock->pxNextFreeBlock = NULL;
 80079c2:	2300      	movs	r3, #0
 80079c4:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 80079c6:	6813      	ldr	r3, [r2, #0]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80079c8:	606e      	str	r6, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80079ca:	4284      	cmp	r4, r0
					xNumberOfSuccessfulAllocations++;
 80079cc:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 80079d0:	bf38      	it	cc
 80079d2:	600c      	strcc	r4, [r1, #0]
					xNumberOfSuccessfulAllocations++;
 80079d4:	6013      	str	r3, [r2, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80079d6:	f108 0408 	add.w	r4, r8, #8
	( void ) xTaskResumeAll();
 80079da:	f001 fa1d 	bl	8008e18 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 80079de:	0763      	lsls	r3, r4, #29
 80079e0:	d00a      	beq.n	80079f8 <pvPortMalloc+0x10c>
 80079e2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80079e6:	f383 8811 	msr	BASEPRI, r3
 80079ea:	f3bf 8f6f 	isb	sy
 80079ee:	f3bf 8f4f 	dsb	sy
 80079f2:	e7fe      	b.n	80079f2 <pvPortMalloc+0x106>
void *pvReturn = NULL;
 80079f4:	2400      	movs	r4, #0
 80079f6:	e7f0      	b.n	80079da <pvPortMalloc+0xee>
}
 80079f8:	4620      	mov	r0, r4
 80079fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80079fe:	bf00      	nop
 8007a00:	20001374 	.word	0x20001374
 8007a04:	20001360 	.word	0x20001360
 8007a08:	20001380 	.word	0x20001380
 8007a0c:	20001378 	.word	0x20001378
 8007a10:	2000136c 	.word	0x2000136c
 8007a14:	20001370 	.word	0x20001370
 8007a18:	20001368 	.word	0x20001368

08007a1c <vPortFree>:
{
 8007a1c:	b510      	push	{r4, lr}
	if( pv != NULL )
 8007a1e:	4604      	mov	r4, r0
 8007a20:	b390      	cbz	r0, 8007a88 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8007a22:	4a1a      	ldr	r2, [pc, #104]	@ (8007a8c <vPortFree+0x70>)
 8007a24:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8007a28:	6812      	ldr	r2, [r2, #0]
 8007a2a:	4213      	tst	r3, r2
 8007a2c:	d108      	bne.n	8007a40 <vPortFree+0x24>
 8007a2e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007a32:	f383 8811 	msr	BASEPRI, r3
 8007a36:	f3bf 8f6f 	isb	sy
 8007a3a:	f3bf 8f4f 	dsb	sy
 8007a3e:	e7fe      	b.n	8007a3e <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8007a40:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8007a44:	b141      	cbz	r1, 8007a58 <vPortFree+0x3c>
 8007a46:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007a4a:	f383 8811 	msr	BASEPRI, r3
 8007a4e:	f3bf 8f6f 	isb	sy
 8007a52:	f3bf 8f4f 	dsb	sy
 8007a56:	e7fe      	b.n	8007a56 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8007a58:	ea23 0302 	bic.w	r3, r3, r2
 8007a5c:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8007a60:	f001 f936 	bl	8008cd0 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8007a64:	4a0a      	ldr	r2, [pc, #40]	@ (8007a90 <vPortFree+0x74>)
 8007a66:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8007a6a:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8007a6c:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8007a70:	440b      	add	r3, r1
 8007a72:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8007a74:	f7ff ff14 	bl	80078a0 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 8007a78:	4a06      	ldr	r2, [pc, #24]	@ (8007a94 <vPortFree+0x78>)
 8007a7a:	6813      	ldr	r3, [r2, #0]
}
 8007a7c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 8007a80:	3301      	adds	r3, #1
 8007a82:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 8007a84:	f001 b9c8 	b.w	8008e18 <xTaskResumeAll>
}
 8007a88:	bd10      	pop	{r4, pc}
 8007a8a:	bf00      	nop
 8007a8c:	20001360 	.word	0x20001360
 8007a90:	20001370 	.word	0x20001370
 8007a94:	20001364 	.word	0x20001364

08007a98 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007a98:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8007a9c:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007aa0:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007aa4:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007aa6:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8007aa8:	2300      	movs	r3, #0
 8007aaa:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8007aac:	4770      	bx	lr

08007aae <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8007aae:	2300      	movs	r3, #0
 8007ab0:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8007ab2:	4770      	bx	lr

08007ab4 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8007ab4:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8007ab6:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8007ab8:	689a      	ldr	r2, [r3, #8]
 8007aba:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8007abc:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8007abe:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8007ac0:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8007ac2:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8007ac4:	3301      	adds	r3, #1
 8007ac6:	6003      	str	r3, [r0, #0]
}
 8007ac8:	4770      	bx	lr

08007aca <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8007aca:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8007acc:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8007ace:	1c63      	adds	r3, r4, #1
 8007ad0:	d10a      	bne.n	8007ae8 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8007ad2:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8007ad4:	685a      	ldr	r2, [r3, #4]
 8007ad6:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8007ad8:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8007ada:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8007adc:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8007ade:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8007ae0:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8007ae2:	3301      	adds	r3, #1
 8007ae4:	6003      	str	r3, [r0, #0]
}
 8007ae6:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8007ae8:	f100 0208 	add.w	r2, r0, #8
 8007aec:	4613      	mov	r3, r2
 8007aee:	6852      	ldr	r2, [r2, #4]
 8007af0:	6815      	ldr	r5, [r2, #0]
 8007af2:	42a5      	cmp	r5, r4
 8007af4:	d9fa      	bls.n	8007aec <vListInsert+0x22>
 8007af6:	e7ed      	b.n	8007ad4 <vListInsert+0xa>

08007af8 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007af8:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8007afc:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007afe:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8007b00:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8007b02:	6859      	ldr	r1, [r3, #4]
 8007b04:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8007b06:	bf08      	it	eq
 8007b08:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8007b0a:	2200      	movs	r2, #0
 8007b0c:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8007b0e:	681a      	ldr	r2, [r3, #0]
 8007b10:	3a01      	subs	r2, #1
 8007b12:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8007b14:	6818      	ldr	r0, [r3, #0]
}
 8007b16:	4770      	bx	lr

08007b18 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8007b18:	4808      	ldr	r0, [pc, #32]	@ (8007b3c <prvPortStartFirstTask+0x24>)
 8007b1a:	6800      	ldr	r0, [r0, #0]
 8007b1c:	6800      	ldr	r0, [r0, #0]
 8007b1e:	f380 8808 	msr	MSP, r0
 8007b22:	f04f 0000 	mov.w	r0, #0
 8007b26:	f380 8814 	msr	CONTROL, r0
 8007b2a:	b662      	cpsie	i
 8007b2c:	b661      	cpsie	f
 8007b2e:	f3bf 8f4f 	dsb	sy
 8007b32:	f3bf 8f6f 	isb	sy
 8007b36:	df00      	svc	0
 8007b38:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8007b3a:	0000      	.short	0x0000
 8007b3c:	e000ed08 	.word	0xe000ed08

08007b40 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8007b40:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 8007b50 <vPortEnableVFP+0x10>
 8007b44:	6801      	ldr	r1, [r0, #0]
 8007b46:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8007b4a:	6001      	str	r1, [r0, #0]
 8007b4c:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8007b4e:	0000      	.short	0x0000
 8007b50:	e000ed88 	.word	0xe000ed88

08007b54 <prvTaskExitError>:
{
 8007b54:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8007b56:	2300      	movs	r3, #0
 8007b58:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8007b5a:	4b0d      	ldr	r3, [pc, #52]	@ (8007b90 <prvTaskExitError+0x3c>)
 8007b5c:	681b      	ldr	r3, [r3, #0]
 8007b5e:	3301      	adds	r3, #1
 8007b60:	d008      	beq.n	8007b74 <prvTaskExitError+0x20>
 8007b62:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007b66:	f383 8811 	msr	BASEPRI, r3
 8007b6a:	f3bf 8f6f 	isb	sy
 8007b6e:	f3bf 8f4f 	dsb	sy
 8007b72:	e7fe      	b.n	8007b72 <prvTaskExitError+0x1e>
 8007b74:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007b78:	f383 8811 	msr	BASEPRI, r3
 8007b7c:	f3bf 8f6f 	isb	sy
 8007b80:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8007b84:	9b01      	ldr	r3, [sp, #4]
 8007b86:	2b00      	cmp	r3, #0
 8007b88:	d0fc      	beq.n	8007b84 <prvTaskExitError+0x30>
}
 8007b8a:	b002      	add	sp, #8
 8007b8c:	4770      	bx	lr
 8007b8e:	bf00      	nop
 8007b90:	20000080 	.word	0x20000080

08007b94 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8007b94:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8007b98:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8007b9c:	4b07      	ldr	r3, [pc, #28]	@ (8007bbc <pxPortInitialiseStack+0x28>)
 8007b9e:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8007ba2:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8007ba6:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8007baa:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8007bae:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8007bb2:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8007bb6:	3844      	subs	r0, #68	@ 0x44
 8007bb8:	4770      	bx	lr
 8007bba:	bf00      	nop
 8007bbc:	08007b55 	.word	0x08007b55

08007bc0 <SVC_Handler>:
	__asm volatile (
 8007bc0:	4b07      	ldr	r3, [pc, #28]	@ (8007be0 <pxCurrentTCBConst2>)
 8007bc2:	6819      	ldr	r1, [r3, #0]
 8007bc4:	6808      	ldr	r0, [r1, #0]
 8007bc6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007bca:	f380 8809 	msr	PSP, r0
 8007bce:	f3bf 8f6f 	isb	sy
 8007bd2:	f04f 0000 	mov.w	r0, #0
 8007bd6:	f380 8811 	msr	BASEPRI, r0
 8007bda:	4770      	bx	lr
 8007bdc:	f3af 8000 	nop.w

08007be0 <pxCurrentTCBConst2>:
 8007be0:	200118c0 	.word	0x200118c0

08007be4 <vPortEnterCritical>:
 8007be4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007be8:	f383 8811 	msr	BASEPRI, r3
 8007bec:	f3bf 8f6f 	isb	sy
 8007bf0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8007bf4:	4a0a      	ldr	r2, [pc, #40]	@ (8007c20 <vPortEnterCritical+0x3c>)
 8007bf6:	6813      	ldr	r3, [r2, #0]
 8007bf8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8007bfa:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8007bfc:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8007bfe:	d10e      	bne.n	8007c1e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8007c00:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007c04:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 8007c08:	b2db      	uxtb	r3, r3
 8007c0a:	b143      	cbz	r3, 8007c1e <vPortEnterCritical+0x3a>
 8007c0c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007c10:	f383 8811 	msr	BASEPRI, r3
 8007c14:	f3bf 8f6f 	isb	sy
 8007c18:	f3bf 8f4f 	dsb	sy
 8007c1c:	e7fe      	b.n	8007c1c <vPortEnterCritical+0x38>
}
 8007c1e:	4770      	bx	lr
 8007c20:	20000080 	.word	0x20000080

08007c24 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8007c24:	4a08      	ldr	r2, [pc, #32]	@ (8007c48 <vPortExitCritical+0x24>)
 8007c26:	6813      	ldr	r3, [r2, #0]
 8007c28:	b943      	cbnz	r3, 8007c3c <vPortExitCritical+0x18>
 8007c2a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007c2e:	f383 8811 	msr	BASEPRI, r3
 8007c32:	f3bf 8f6f 	isb	sy
 8007c36:	f3bf 8f4f 	dsb	sy
 8007c3a:	e7fe      	b.n	8007c3a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8007c3c:	3b01      	subs	r3, #1
 8007c3e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8007c40:	b90b      	cbnz	r3, 8007c46 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8007c42:	f383 8811 	msr	BASEPRI, r3
}
 8007c46:	4770      	bx	lr
 8007c48:	20000080 	.word	0x20000080
 8007c4c:	00000000 	.word	0x00000000

08007c50 <PendSV_Handler>:
	__asm volatile
 8007c50:	f3ef 8009 	mrs	r0, PSP
 8007c54:	f3bf 8f6f 	isb	sy
 8007c58:	4b15      	ldr	r3, [pc, #84]	@ (8007cb0 <pxCurrentTCBConst>)
 8007c5a:	681a      	ldr	r2, [r3, #0]
 8007c5c:	f01e 0f10 	tst.w	lr, #16
 8007c60:	bf08      	it	eq
 8007c62:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8007c66:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007c6a:	6010      	str	r0, [r2, #0]
 8007c6c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8007c70:	f04f 0050 	mov.w	r0, #80	@ 0x50
 8007c74:	f380 8811 	msr	BASEPRI, r0
 8007c78:	f3bf 8f4f 	dsb	sy
 8007c7c:	f3bf 8f6f 	isb	sy
 8007c80:	f001 f962 	bl	8008f48 <vTaskSwitchContext>
 8007c84:	f04f 0000 	mov.w	r0, #0
 8007c88:	f380 8811 	msr	BASEPRI, r0
 8007c8c:	bc09      	pop	{r0, r3}
 8007c8e:	6819      	ldr	r1, [r3, #0]
 8007c90:	6808      	ldr	r0, [r1, #0]
 8007c92:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007c96:	f01e 0f10 	tst.w	lr, #16
 8007c9a:	bf08      	it	eq
 8007c9c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8007ca0:	f380 8809 	msr	PSP, r0
 8007ca4:	f3bf 8f6f 	isb	sy
 8007ca8:	4770      	bx	lr
 8007caa:	bf00      	nop
 8007cac:	f3af 8000 	nop.w

08007cb0 <pxCurrentTCBConst>:
 8007cb0:	200118c0 	.word	0x200118c0

08007cb4 <xPortSysTickHandler>:
{
 8007cb4:	b508      	push	{r3, lr}
	__asm volatile
 8007cb6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007cba:	f383 8811 	msr	BASEPRI, r3
 8007cbe:	f3bf 8f6f 	isb	sy
 8007cc2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8007cc6:	f001 f811 	bl	8008cec <xTaskIncrementTick>
 8007cca:	b128      	cbz	r0, 8007cd8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8007ccc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007cd0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007cd4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
 8007cd8:	2300      	movs	r3, #0
 8007cda:	f383 8811 	msr	BASEPRI, r3
}
 8007cde:	bd08      	pop	{r3, pc}

08007ce0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007ce0:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8007ce4:	2300      	movs	r3, #0
 8007ce6:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007ce8:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8007cea:	4b05      	ldr	r3, [pc, #20]	@ (8007d00 <vPortSetupTimerInterrupt+0x20>)
 8007cec:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8007cf0:	681b      	ldr	r3, [r3, #0]
 8007cf2:	fbb3 f3f1 	udiv	r3, r3, r1
 8007cf6:	3b01      	subs	r3, #1
 8007cf8:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8007cfa:	2307      	movs	r3, #7
 8007cfc:	6113      	str	r3, [r2, #16]
}
 8007cfe:	4770      	bx	lr
 8007d00:	20000074 	.word	0x20000074

08007d04 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007d04:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
{
 8007d08:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007d0a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
 8007d0e:	4a38      	ldr	r2, [pc, #224]	@ (8007df0 <xPortStartScheduler+0xec>)
 8007d10:	4291      	cmp	r1, r2
 8007d12:	d108      	bne.n	8007d26 <xPortStartScheduler+0x22>
	__asm volatile
 8007d14:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007d18:	f383 8811 	msr	BASEPRI, r3
 8007d1c:	f3bf 8f6f 	isb	sy
 8007d20:	f3bf 8f4f 	dsb	sy
 8007d24:	e7fe      	b.n	8007d24 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8007d26:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
 8007d2a:	4b32      	ldr	r3, [pc, #200]	@ (8007df4 <xPortStartScheduler+0xf0>)
 8007d2c:	429a      	cmp	r2, r3
 8007d2e:	d108      	bne.n	8007d42 <xPortStartScheduler+0x3e>
 8007d30:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007d34:	f383 8811 	msr	BASEPRI, r3
 8007d38:	f3bf 8f6f 	isb	sy
 8007d3c:	f3bf 8f4f 	dsb	sy
 8007d40:	e7fe      	b.n	8007d40 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8007d42:	4b2d      	ldr	r3, [pc, #180]	@ (8007df8 <xPortStartScheduler+0xf4>)
 8007d44:	781a      	ldrb	r2, [r3, #0]
 8007d46:	b2d2      	uxtb	r2, r2
 8007d48:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8007d4a:	22ff      	movs	r2, #255	@ 0xff
 8007d4c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8007d4e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007d50:	4a2a      	ldr	r2, [pc, #168]	@ (8007dfc <xPortStartScheduler+0xf8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8007d52:	b2db      	uxtb	r3, r3
 8007d54:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007d58:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8007d5c:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8007d60:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8007d62:	4a27      	ldr	r2, [pc, #156]	@ (8007e00 <xPortStartScheduler+0xfc>)
 8007d64:	2307      	movs	r3, #7
 8007d66:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8007d68:	f89d 1003 	ldrb.w	r1, [sp, #3]
			ulMaxPRIGROUPValue--;
 8007d6c:	6813      	ldr	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8007d6e:	0609      	lsls	r1, r1, #24
 8007d70:	d40a      	bmi.n	8007d88 <xPortStartScheduler+0x84>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8007d72:	2b03      	cmp	r3, #3
 8007d74:	d011      	beq.n	8007d9a <xPortStartScheduler+0x96>
 8007d76:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007d7a:	f383 8811 	msr	BASEPRI, r3
 8007d7e:	f3bf 8f6f 	isb	sy
 8007d82:	f3bf 8f4f 	dsb	sy
 8007d86:	e7fe      	b.n	8007d86 <xPortStartScheduler+0x82>
			ulMaxPRIGROUPValue--;
 8007d88:	3b01      	subs	r3, #1
 8007d8a:	6013      	str	r3, [r2, #0]
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8007d8c:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8007d90:	005b      	lsls	r3, r3, #1
 8007d92:	b2db      	uxtb	r3, r3
 8007d94:	f88d 3003 	strb.w	r3, [sp, #3]
 8007d98:	e7e6      	b.n	8007d68 <xPortStartScheduler+0x64>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8007d9a:	f44f 7340 	mov.w	r3, #768	@ 0x300
 8007d9e:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007da0:	9b01      	ldr	r3, [sp, #4]
 8007da2:	4a15      	ldr	r2, [pc, #84]	@ (8007df8 <xPortStartScheduler+0xf4>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8007da4:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007da8:	b2db      	uxtb	r3, r3
 8007daa:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8007dac:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 8007db0:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8007db4:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8007db8:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 8007dbc:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 8007dc0:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
 8007dc4:	f7ff ff8c 	bl	8007ce0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8007dc8:	4b0e      	ldr	r3, [pc, #56]	@ (8007e04 <xPortStartScheduler+0x100>)
 8007dca:	2500      	movs	r5, #0
 8007dcc:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8007dce:	f7ff feb7 	bl	8007b40 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8007dd2:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 8007dd6:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 8007dda:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
 8007dde:	f7ff fe9b 	bl	8007b18 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8007de2:	f001 f8b1 	bl	8008f48 <vTaskSwitchContext>
	prvTaskExitError();
 8007de6:	f7ff feb5 	bl	8007b54 <prvTaskExitError>
}
 8007dea:	4628      	mov	r0, r5
 8007dec:	b003      	add	sp, #12
 8007dee:	bd30      	pop	{r4, r5, pc}
 8007df0:	410fc271 	.word	0x410fc271
 8007df4:	410fc270 	.word	0x410fc270
 8007df8:	e000e400 	.word	0xe000e400
 8007dfc:	20011384 	.word	0x20011384
 8007e00:	20011380 	.word	0x20011380
 8007e04:	20000080 	.word	0x20000080

08007e08 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8007e08:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8007e0c:	2b0f      	cmp	r3, #15
 8007e0e:	d90e      	bls.n	8007e2e <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8007e10:	4a11      	ldr	r2, [pc, #68]	@ (8007e58 <vPortValidateInterruptPriority+0x50>)
 8007e12:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8007e14:	4a11      	ldr	r2, [pc, #68]	@ (8007e5c <vPortValidateInterruptPriority+0x54>)
 8007e16:	7812      	ldrb	r2, [r2, #0]
 8007e18:	429a      	cmp	r2, r3
 8007e1a:	d908      	bls.n	8007e2e <vPortValidateInterruptPriority+0x26>
 8007e1c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007e20:	f383 8811 	msr	BASEPRI, r3
 8007e24:	f3bf 8f6f 	isb	sy
 8007e28:	f3bf 8f4f 	dsb	sy
 8007e2c:	e7fe      	b.n	8007e2c <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8007e2e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007e32:	4a0b      	ldr	r2, [pc, #44]	@ (8007e60 <vPortValidateInterruptPriority+0x58>)
 8007e34:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 8007e38:	6812      	ldr	r2, [r2, #0]
 8007e3a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8007e3e:	4293      	cmp	r3, r2
 8007e40:	d908      	bls.n	8007e54 <vPortValidateInterruptPriority+0x4c>
 8007e42:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007e46:	f383 8811 	msr	BASEPRI, r3
 8007e4a:	f3bf 8f6f 	isb	sy
 8007e4e:	f3bf 8f4f 	dsb	sy
 8007e52:	e7fe      	b.n	8007e52 <vPortValidateInterruptPriority+0x4a>
	}
 8007e54:	4770      	bx	lr
 8007e56:	bf00      	nop
 8007e58:	e000e3f0 	.word	0xe000e3f0
 8007e5c:	20011384 	.word	0x20011384
 8007e60:	20011380 	.word	0x20011380

08007e64 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8007e64:	b510      	push	{r4, lr}
 8007e66:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007e68:	f7ff febc 	bl	8007be4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8007e6c:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007e6e:	f7ff fed9 	bl	8007c24 <vPortExitCritical>

	return xReturn;
}
 8007e72:	fab4 f084 	clz	r0, r4
 8007e76:	0940      	lsrs	r0, r0, #5
 8007e78:	bd10      	pop	{r4, pc}

08007e7a <prvCopyDataToQueue>:
{
 8007e7a:	b570      	push	{r4, r5, r6, lr}
 8007e7c:	4616      	mov	r6, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007e7e:	6c02      	ldr	r2, [r0, #64]	@ 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007e80:	6b85      	ldr	r5, [r0, #56]	@ 0x38
{
 8007e82:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007e84:	b942      	cbnz	r2, 8007e98 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007e86:	6806      	ldr	r6, [r0, #0]
 8007e88:	b99e      	cbnz	r6, 8007eb2 <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007e8a:	6880      	ldr	r0, [r0, #8]
 8007e8c:	f001 f9b0 	bl	80091f0 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8007e90:	60a6      	str	r6, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007e92:	3501      	adds	r5, #1
 8007e94:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 8007e96:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8007e98:	b96e      	cbnz	r6, 8007eb6 <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007e9a:	6840      	ldr	r0, [r0, #4]
 8007e9c:	f016 f91f 	bl	801e0de <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007ea0:	6863      	ldr	r3, [r4, #4]
 8007ea2:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8007ea4:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007ea6:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007ea8:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007eaa:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8007eac:	bf24      	itt	cs
 8007eae:	6823      	ldrcs	r3, [r4, #0]
 8007eb0:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 8007eb2:	2000      	movs	r0, #0
 8007eb4:	e7ed      	b.n	8007e92 <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8007eb6:	68c0      	ldr	r0, [r0, #12]
 8007eb8:	f016 f911 	bl	801e0de <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007ebc:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8007ebe:	68e3      	ldr	r3, [r4, #12]
 8007ec0:	4251      	negs	r1, r2
 8007ec2:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007ec4:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007ec6:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007ec8:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8007eca:	bf3e      	ittt	cc
 8007ecc:	68a3      	ldrcc	r3, [r4, #8]
 8007ece:	185b      	addcc	r3, r3, r1
 8007ed0:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8007ed2:	2e02      	cmp	r6, #2
 8007ed4:	d1ed      	bne.n	8007eb2 <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007ed6:	b10d      	cbz	r5, 8007edc <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 8007ed8:	3d01      	subs	r5, #1
 8007eda:	e7ea      	b.n	8007eb2 <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 8007edc:	4628      	mov	r0, r5
 8007ede:	e7d8      	b.n	8007e92 <prvCopyDataToQueue+0x18>

08007ee0 <prvCopyDataFromQueue>:
{
 8007ee0:	4603      	mov	r3, r0
 8007ee2:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007ee4:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 8007ee6:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007ee8:	b16a      	cbz	r2, 8007f06 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007eea:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007eec:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007eee:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007ef0:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007ef2:	bf28      	it	cs
 8007ef4:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007ef6:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007ef8:	bf28      	it	cs
 8007efa:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007efc:	68d9      	ldr	r1, [r3, #12]
}
 8007efe:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007f02:	f016 b8ec 	b.w	801e0de <memcpy>
}
 8007f06:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007f0a:	4770      	bx	lr

08007f0c <prvUnlockQueue>:
{
 8007f0c:	b570      	push	{r4, r5, r6, lr}
 8007f0e:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8007f10:	f7ff fe68 	bl	8007be4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8007f14:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007f18:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8007f1c:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8007f1e:	2d00      	cmp	r5, #0
 8007f20:	dc14      	bgt.n	8007f4c <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 8007f22:	23ff      	movs	r3, #255	@ 0xff
 8007f24:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 8007f28:	f7ff fe7c 	bl	8007c24 <vPortExitCritical>
	taskENTER_CRITICAL();
 8007f2c:	f7ff fe5a 	bl	8007be4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8007f30:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007f34:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8007f38:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8007f3a:	2d00      	cmp	r5, #0
 8007f3c:	dc12      	bgt.n	8007f64 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8007f3e:	23ff      	movs	r3, #255	@ 0xff
 8007f40:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 8007f44:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8007f48:	f7ff be6c 	b.w	8007c24 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007f4c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8007f4e:	2b00      	cmp	r3, #0
 8007f50:	d0e7      	beq.n	8007f22 <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007f52:	4630      	mov	r0, r6
 8007f54:	f001 f870 	bl	8009038 <xTaskRemoveFromEventList>
 8007f58:	b108      	cbz	r0, 8007f5e <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8007f5a:	f001 f8f5 	bl	8009148 <vTaskMissedYield>
			--cTxLock;
 8007f5e:	3d01      	subs	r5, #1
 8007f60:	b26d      	sxtb	r5, r5
 8007f62:	e7dc      	b.n	8007f1e <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007f64:	6923      	ldr	r3, [r4, #16]
 8007f66:	2b00      	cmp	r3, #0
 8007f68:	d0e9      	beq.n	8007f3e <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007f6a:	4630      	mov	r0, r6
 8007f6c:	f001 f864 	bl	8009038 <xTaskRemoveFromEventList>
 8007f70:	b108      	cbz	r0, 8007f76 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 8007f72:	f001 f8e9 	bl	8009148 <vTaskMissedYield>
				--cRxLock;
 8007f76:	3d01      	subs	r5, #1
 8007f78:	b26d      	sxtb	r5, r5
 8007f7a:	e7de      	b.n	8007f3a <prvUnlockQueue+0x2e>

08007f7c <xQueueGenericReset>:
{
 8007f7c:	b538      	push	{r3, r4, r5, lr}
 8007f7e:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8007f80:	4604      	mov	r4, r0
 8007f82:	b940      	cbnz	r0, 8007f96 <xQueueGenericReset+0x1a>
 8007f84:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007f88:	f383 8811 	msr	BASEPRI, r3
 8007f8c:	f3bf 8f6f 	isb	sy
 8007f90:	f3bf 8f4f 	dsb	sy
 8007f94:	e7fe      	b.n	8007f94 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8007f96:	f7ff fe25 	bl	8007be4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007f9a:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
 8007f9e:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8007fa0:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007fa2:	434b      	muls	r3, r1
 8007fa4:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007fa6:	1a5b      	subs	r3, r3, r1
 8007fa8:	441a      	add	r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007faa:	60a0      	str	r0, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 8007fac:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8007fae:	2000      	movs	r0, #0
 8007fb0:	63a0      	str	r0, [r4, #56]	@ 0x38
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007fb2:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
 8007fb4:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8007fb8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
		if( xNewQueue == pdFALSE )
 8007fbc:	b9a5      	cbnz	r5, 8007fe8 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007fbe:	6923      	ldr	r3, [r4, #16]
 8007fc0:	b173      	cbz	r3, 8007fe0 <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007fc2:	f104 0010 	add.w	r0, r4, #16
 8007fc6:	f001 f837 	bl	8009038 <xTaskRemoveFromEventList>
 8007fca:	b148      	cbz	r0, 8007fe0 <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8007fcc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007fd0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007fd4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007fd8:	f3bf 8f4f 	dsb	sy
 8007fdc:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8007fe0:	f7ff fe20 	bl	8007c24 <vPortExitCritical>
}
 8007fe4:	2001      	movs	r0, #1
 8007fe6:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8007fe8:	f104 0010 	add.w	r0, r4, #16
 8007fec:	f7ff fd54 	bl	8007a98 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8007ff0:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8007ff4:	f7ff fd50 	bl	8007a98 <vListInitialise>
 8007ff8:	e7f2      	b.n	8007fe0 <xQueueGenericReset+0x64>

08007ffa <xQueueGenericCreateStatic>:
	{
 8007ffa:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007ffc:	460d      	mov	r5, r1
 8007ffe:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8008000:	b940      	cbnz	r0, 8008014 <xQueueGenericCreateStatic+0x1a>
 8008002:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008006:	f383 8811 	msr	BASEPRI, r3
 800800a:	f3bf 8f6f 	isb	sy
 800800e:	f3bf 8f4f 	dsb	sy
 8008012:	e7fe      	b.n	8008012 <xQueueGenericCreateStatic+0x18>
		configASSERT( pxStaticQueue != NULL );
 8008014:	b943      	cbnz	r3, 8008028 <xQueueGenericCreateStatic+0x2e>
 8008016:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800801a:	f383 8811 	msr	BASEPRI, r3
 800801e:	f3bf 8f6f 	isb	sy
 8008022:	f3bf 8f4f 	dsb	sy
 8008026:	e7fe      	b.n	8008026 <xQueueGenericCreateStatic+0x2c>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8008028:	b14a      	cbz	r2, 800803e <xQueueGenericCreateStatic+0x44>
 800802a:	b991      	cbnz	r1, 8008052 <xQueueGenericCreateStatic+0x58>
 800802c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008030:	f383 8811 	msr	BASEPRI, r3
 8008034:	f3bf 8f6f 	isb	sy
 8008038:	f3bf 8f4f 	dsb	sy
 800803c:	e7fe      	b.n	800803c <xQueueGenericCreateStatic+0x42>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800803e:	b141      	cbz	r1, 8008052 <xQueueGenericCreateStatic+0x58>
 8008040:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008044:	f383 8811 	msr	BASEPRI, r3
 8008048:	f3bf 8f6f 	isb	sy
 800804c:	f3bf 8f4f 	dsb	sy
 8008050:	e7fe      	b.n	8008050 <xQueueGenericCreateStatic+0x56>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8008052:	2350      	movs	r3, #80	@ 0x50
 8008054:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8008056:	9b01      	ldr	r3, [sp, #4]
 8008058:	2b50      	cmp	r3, #80	@ 0x50
 800805a:	d008      	beq.n	800806e <xQueueGenericCreateStatic+0x74>
 800805c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008060:	f383 8811 	msr	BASEPRI, r3
 8008064:	f3bf 8f6f 	isb	sy
 8008068:	f3bf 8f4f 	dsb	sy
 800806c:	e7fe      	b.n	800806c <xQueueGenericCreateStatic+0x72>
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800806e:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8008070:	2d00      	cmp	r5, #0
 8008072:	bf08      	it	eq
 8008074:	4622      	moveq	r2, r4
	pxNewQueue->uxItemSize = uxItemSize;
 8008076:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800807a:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
 800807e:	6022      	str	r2, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8008080:	4620      	mov	r0, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8008082:	9b01      	ldr	r3, [sp, #4]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8008084:	f7ff ff7a 	bl	8007f7c <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008088:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800808c:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
	}
 8008090:	4620      	mov	r0, r4
 8008092:	b003      	add	sp, #12
 8008094:	bd30      	pop	{r4, r5, pc}

08008096 <xQueueGenericCreate>:
	{
 8008096:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008098:	460d      	mov	r5, r1
 800809a:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800809c:	4606      	mov	r6, r0
 800809e:	b940      	cbnz	r0, 80080b2 <xQueueGenericCreate+0x1c>
 80080a0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80080a4:	f383 8811 	msr	BASEPRI, r3
 80080a8:	f3bf 8f6f 	isb	sy
 80080ac:	f3bf 8f4f 	dsb	sy
 80080b0:	e7fe      	b.n	80080b0 <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80080b2:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 80080b4:	3050      	adds	r0, #80	@ 0x50
 80080b6:	f7ff fc19 	bl	80078ec <pvPortMalloc>
		if( pxNewQueue != NULL )
 80080ba:	4604      	mov	r4, r0
 80080bc:	b170      	cbz	r0, 80080dc <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 80080be:	2300      	movs	r3, #0
 80080c0:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 80080c4:	b165      	cbz	r5, 80080e0 <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80080c6:	f100 0350 	add.w	r3, r0, #80	@ 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 80080ca:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
 80080ce:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80080d0:	2101      	movs	r1, #1
 80080d2:	4620      	mov	r0, r4
 80080d4:	f7ff ff52 	bl	8007f7c <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80080d8:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
 80080dc:	4620      	mov	r0, r4
 80080de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 80080e0:	4603      	mov	r3, r0
 80080e2:	e7f2      	b.n	80080ca <xQueueGenericCreate+0x34>

080080e4 <xQueueCreateCountingSemaphoreStatic>:
	{
 80080e4:	b513      	push	{r0, r1, r4, lr}
 80080e6:	4613      	mov	r3, r2
 80080e8:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80080ea:	b940      	cbnz	r0, 80080fe <xQueueCreateCountingSemaphoreStatic+0x1a>
 80080ec:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80080f0:	f383 8811 	msr	BASEPRI, r3
 80080f4:	f3bf 8f6f 	isb	sy
 80080f8:	f3bf 8f4f 	dsb	sy
 80080fc:	e7fe      	b.n	80080fc <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 80080fe:	4288      	cmp	r0, r1
 8008100:	d208      	bcs.n	8008114 <xQueueCreateCountingSemaphoreStatic+0x30>
 8008102:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008106:	f383 8811 	msr	BASEPRI, r3
 800810a:	f3bf 8f6f 	isb	sy
 800810e:	f3bf 8f4f 	dsb	sy
 8008112:	e7fe      	b.n	8008112 <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008114:	2202      	movs	r2, #2
 8008116:	9200      	str	r2, [sp, #0]
 8008118:	2200      	movs	r2, #0
 800811a:	4611      	mov	r1, r2
 800811c:	f7ff ff6d 	bl	8007ffa <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 8008120:	b100      	cbz	r0, 8008124 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8008122:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8008124:	b002      	add	sp, #8
 8008126:	bd10      	pop	{r4, pc}

08008128 <xQueueCreateCountingSemaphore>:
	{
 8008128:	b510      	push	{r4, lr}
 800812a:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800812c:	b940      	cbnz	r0, 8008140 <xQueueCreateCountingSemaphore+0x18>
 800812e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008132:	f383 8811 	msr	BASEPRI, r3
 8008136:	f3bf 8f6f 	isb	sy
 800813a:	f3bf 8f4f 	dsb	sy
 800813e:	e7fe      	b.n	800813e <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 8008140:	4288      	cmp	r0, r1
 8008142:	d208      	bcs.n	8008156 <xQueueCreateCountingSemaphore+0x2e>
 8008144:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008148:	f383 8811 	msr	BASEPRI, r3
 800814c:	f3bf 8f6f 	isb	sy
 8008150:	f3bf 8f4f 	dsb	sy
 8008154:	e7fe      	b.n	8008154 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008156:	2202      	movs	r2, #2
 8008158:	2100      	movs	r1, #0
 800815a:	f7ff ff9c 	bl	8008096 <xQueueGenericCreate>
		if( xHandle != NULL )
 800815e:	b100      	cbz	r0, 8008162 <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8008160:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8008162:	bd10      	pop	{r4, pc}

08008164 <xQueueGenericSend>:
{
 8008164:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8008168:	460f      	mov	r7, r1
 800816a:	9201      	str	r2, [sp, #4]
 800816c:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 800816e:	4604      	mov	r4, r0
 8008170:	b940      	cbnz	r0, 8008184 <xQueueGenericSend+0x20>
 8008172:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008176:	f383 8811 	msr	BASEPRI, r3
 800817a:	f3bf 8f6f 	isb	sy
 800817e:	f3bf 8f4f 	dsb	sy
 8008182:	e7fe      	b.n	8008182 <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008184:	b951      	cbnz	r1, 800819c <xQueueGenericSend+0x38>
 8008186:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008188:	b143      	cbz	r3, 800819c <xQueueGenericSend+0x38>
 800818a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800818e:	f383 8811 	msr	BASEPRI, r3
 8008192:	f3bf 8f6f 	isb	sy
 8008196:	f3bf 8f4f 	dsb	sy
 800819a:	e7fe      	b.n	800819a <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800819c:	2e02      	cmp	r6, #2
 800819e:	d10b      	bne.n	80081b8 <xQueueGenericSend+0x54>
 80081a0:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80081a2:	2b01      	cmp	r3, #1
 80081a4:	d008      	beq.n	80081b8 <xQueueGenericSend+0x54>
 80081a6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80081aa:	f383 8811 	msr	BASEPRI, r3
 80081ae:	f3bf 8f6f 	isb	sy
 80081b2:	f3bf 8f4f 	dsb	sy
 80081b6:	e7fe      	b.n	80081b6 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80081b8:	f000 ffcc 	bl	8009154 <xTaskGetSchedulerState>
 80081bc:	4605      	mov	r5, r0
 80081be:	b330      	cbz	r0, 800820e <xQueueGenericSend+0xaa>
 80081c0:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 80081c2:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 80081c6:	f7ff fd0d 	bl	8007be4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80081ca:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80081cc:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80081ce:	429a      	cmp	r2, r3
 80081d0:	d301      	bcc.n	80081d6 <xQueueGenericSend+0x72>
 80081d2:	2e02      	cmp	r6, #2
 80081d4:	d127      	bne.n	8008226 <xQueueGenericSend+0xc2>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80081d6:	4632      	mov	r2, r6
 80081d8:	4639      	mov	r1, r7
 80081da:	4620      	mov	r0, r4
 80081dc:	f7ff fe4d 	bl	8007e7a <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80081e0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80081e2:	b11b      	cbz	r3, 80081ec <xQueueGenericSend+0x88>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80081e4:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80081e8:	f000 ff26 	bl	8009038 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 80081ec:	b148      	cbz	r0, 8008202 <xQueueGenericSend+0x9e>
						queueYIELD_IF_USING_PREEMPTION();
 80081ee:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80081f2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80081f6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80081fa:	f3bf 8f4f 	dsb	sy
 80081fe:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008202:	f7ff fd0f 	bl	8007c24 <vPortExitCritical>
				return pdPASS;
 8008206:	2001      	movs	r0, #1
}
 8008208:	b004      	add	sp, #16
 800820a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800820e:	9b01      	ldr	r3, [sp, #4]
 8008210:	2b00      	cmp	r3, #0
 8008212:	d0d6      	beq.n	80081c2 <xQueueGenericSend+0x5e>
 8008214:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008218:	f383 8811 	msr	BASEPRI, r3
 800821c:	f3bf 8f6f 	isb	sy
 8008220:	f3bf 8f4f 	dsb	sy
 8008224:	e7fe      	b.n	8008224 <xQueueGenericSend+0xc0>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008226:	9b01      	ldr	r3, [sp, #4]
 8008228:	b91b      	cbnz	r3, 8008232 <xQueueGenericSend+0xce>
					taskEXIT_CRITICAL();
 800822a:	f7ff fcfb 	bl	8007c24 <vPortExitCritical>
					return errQUEUE_FULL;
 800822e:	2000      	movs	r0, #0
 8008230:	e7ea      	b.n	8008208 <xQueueGenericSend+0xa4>
				else if( xEntryTimeSet == pdFALSE )
 8008232:	b915      	cbnz	r5, 800823a <xQueueGenericSend+0xd6>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008234:	a802      	add	r0, sp, #8
 8008236:	f000 ff3f 	bl	80090b8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800823a:	f7ff fcf3 	bl	8007c24 <vPortExitCritical>
		vTaskSuspendAll();
 800823e:	f000 fd47 	bl	8008cd0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008242:	f7ff fccf 	bl	8007be4 <vPortEnterCritical>
 8008246:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800824a:	2bff      	cmp	r3, #255	@ 0xff
 800824c:	bf08      	it	eq
 800824e:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 8008252:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8008256:	2bff      	cmp	r3, #255	@ 0xff
 8008258:	bf08      	it	eq
 800825a:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 800825e:	f7ff fce1 	bl	8007c24 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008262:	a901      	add	r1, sp, #4
 8008264:	a802      	add	r0, sp, #8
 8008266:	f000 ff33 	bl	80090d0 <xTaskCheckForTimeOut>
 800826a:	bb38      	cbnz	r0, 80082bc <xQueueGenericSend+0x158>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800826c:	f7ff fcba 	bl	8007be4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8008270:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8008272:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008274:	429a      	cmp	r2, r3
 8008276:	d10e      	bne.n	8008296 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008278:	f7ff fcd4 	bl	8007c24 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800827c:	9901      	ldr	r1, [sp, #4]
 800827e:	f104 0010 	add.w	r0, r4, #16
 8008282:	f000 fea1 	bl	8008fc8 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008286:	4620      	mov	r0, r4
 8008288:	f7ff fe40 	bl	8007f0c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800828c:	f000 fdc4 	bl	8008e18 <xTaskResumeAll>
 8008290:	b148      	cbz	r0, 80082a6 <xQueueGenericSend+0x142>
 8008292:	2501      	movs	r5, #1
 8008294:	e797      	b.n	80081c6 <xQueueGenericSend+0x62>
	taskEXIT_CRITICAL();
 8008296:	f7ff fcc5 	bl	8007c24 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 800829a:	4620      	mov	r0, r4
 800829c:	f7ff fe36 	bl	8007f0c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80082a0:	f000 fdba 	bl	8008e18 <xTaskResumeAll>
 80082a4:	e7f5      	b.n	8008292 <xQueueGenericSend+0x12e>
					portYIELD_WITHIN_API();
 80082a6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80082aa:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80082ae:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80082b2:	f3bf 8f4f 	dsb	sy
 80082b6:	f3bf 8f6f 	isb	sy
 80082ba:	e7ea      	b.n	8008292 <xQueueGenericSend+0x12e>
			prvUnlockQueue( pxQueue );
 80082bc:	4620      	mov	r0, r4
 80082be:	f7ff fe25 	bl	8007f0c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80082c2:	f000 fda9 	bl	8008e18 <xTaskResumeAll>
			return errQUEUE_FULL;
 80082c6:	e7b2      	b.n	800822e <xQueueGenericSend+0xca>

080082c8 <xQueueGenericSendFromISR>:
{
 80082c8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80082cc:	4689      	mov	r9, r1
 80082ce:	4617      	mov	r7, r2
 80082d0:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 80082d2:	4604      	mov	r4, r0
 80082d4:	b940      	cbnz	r0, 80082e8 <xQueueGenericSendFromISR+0x20>
 80082d6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80082da:	f383 8811 	msr	BASEPRI, r3
 80082de:	f3bf 8f6f 	isb	sy
 80082e2:	f3bf 8f4f 	dsb	sy
 80082e6:	e7fe      	b.n	80082e6 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80082e8:	b951      	cbnz	r1, 8008300 <xQueueGenericSendFromISR+0x38>
 80082ea:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80082ec:	b143      	cbz	r3, 8008300 <xQueueGenericSendFromISR+0x38>
 80082ee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80082f2:	f383 8811 	msr	BASEPRI, r3
 80082f6:	f3bf 8f6f 	isb	sy
 80082fa:	f3bf 8f4f 	dsb	sy
 80082fe:	e7fe      	b.n	80082fe <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8008300:	2e02      	cmp	r6, #2
 8008302:	d10b      	bne.n	800831c <xQueueGenericSendFromISR+0x54>
 8008304:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008306:	2b01      	cmp	r3, #1
 8008308:	d008      	beq.n	800831c <xQueueGenericSendFromISR+0x54>
 800830a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800830e:	f383 8811 	msr	BASEPRI, r3
 8008312:	f3bf 8f6f 	isb	sy
 8008316:	f3bf 8f4f 	dsb	sy
 800831a:	e7fe      	b.n	800831a <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800831c:	f7ff fd74 	bl	8007e08 <vPortValidateInterruptPriority>
	__asm volatile
 8008320:	f3ef 8811 	mrs	r8, BASEPRI
 8008324:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008328:	f383 8811 	msr	BASEPRI, r3
 800832c:	f3bf 8f6f 	isb	sy
 8008330:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008334:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8008336:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008338:	429a      	cmp	r2, r3
 800833a:	d301      	bcc.n	8008340 <xQueueGenericSendFromISR+0x78>
 800833c:	2e02      	cmp	r6, #2
 800833e:	d11e      	bne.n	800837e <xQueueGenericSendFromISR+0xb6>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008340:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008344:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 8008346:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008348:	4632      	mov	r2, r6
 800834a:	4649      	mov	r1, r9
 800834c:	4620      	mov	r0, r4
 800834e:	f7ff fd94 	bl	8007e7a <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8008352:	1c6b      	adds	r3, r5, #1
 8008354:	d10e      	bne.n	8008374 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008356:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008358:	b13b      	cbz	r3, 800836a <xQueueGenericSendFromISR+0xa2>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800835a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800835e:	f000 fe6b 	bl	8009038 <xTaskRemoveFromEventList>
 8008362:	b110      	cbz	r0, 800836a <xQueueGenericSendFromISR+0xa2>
							if( pxHigherPriorityTaskWoken != NULL )
 8008364:	b10f      	cbz	r7, 800836a <xQueueGenericSendFromISR+0xa2>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008366:	2301      	movs	r3, #1
 8008368:	603b      	str	r3, [r7, #0]
			xReturn = pdPASS;
 800836a:	2001      	movs	r0, #1
	__asm volatile
 800836c:	f388 8811 	msr	BASEPRI, r8
}
 8008370:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008374:	3501      	adds	r5, #1
 8008376:	b26d      	sxtb	r5, r5
 8008378:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 800837c:	e7f5      	b.n	800836a <xQueueGenericSendFromISR+0xa2>
			xReturn = errQUEUE_FULL;
 800837e:	2000      	movs	r0, #0
 8008380:	e7f4      	b.n	800836c <xQueueGenericSendFromISR+0xa4>

08008382 <xQueueGiveFromISR>:
{
 8008382:	b570      	push	{r4, r5, r6, lr}
 8008384:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8008386:	4604      	mov	r4, r0
 8008388:	b940      	cbnz	r0, 800839c <xQueueGiveFromISR+0x1a>
	__asm volatile
 800838a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800838e:	f383 8811 	msr	BASEPRI, r3
 8008392:	f3bf 8f6f 	isb	sy
 8008396:	f3bf 8f4f 	dsb	sy
 800839a:	e7fe      	b.n	800839a <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 800839c:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800839e:	b143      	cbz	r3, 80083b2 <xQueueGiveFromISR+0x30>
 80083a0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80083a4:	f383 8811 	msr	BASEPRI, r3
 80083a8:	f3bf 8f6f 	isb	sy
 80083ac:	f3bf 8f4f 	dsb	sy
 80083b0:	e7fe      	b.n	80083b0 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 80083b2:	6803      	ldr	r3, [r0, #0]
 80083b4:	b953      	cbnz	r3, 80083cc <xQueueGiveFromISR+0x4a>
 80083b6:	6883      	ldr	r3, [r0, #8]
 80083b8:	b143      	cbz	r3, 80083cc <xQueueGiveFromISR+0x4a>
 80083ba:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80083be:	f383 8811 	msr	BASEPRI, r3
 80083c2:	f3bf 8f6f 	isb	sy
 80083c6:	f3bf 8f4f 	dsb	sy
 80083ca:	e7fe      	b.n	80083ca <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80083cc:	f7ff fd1c 	bl	8007e08 <vPortValidateInterruptPriority>
	__asm volatile
 80083d0:	f3ef 8611 	mrs	r6, BASEPRI
 80083d4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80083d8:	f383 8811 	msr	BASEPRI, r3
 80083dc:	f3bf 8f6f 	isb	sy
 80083e0:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80083e4:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 80083e6:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80083e8:	4293      	cmp	r3, r2
 80083ea:	d919      	bls.n	8008420 <xQueueGiveFromISR+0x9e>
			const int8_t cTxLock = pxQueue->cTxLock;
 80083ec:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80083f0:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 80083f2:	29ff      	cmp	r1, #255	@ 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 80083f4:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80083f6:	63a2      	str	r2, [r4, #56]	@ 0x38
			if( cTxLock == queueUNLOCKED )
 80083f8:	d10d      	bne.n	8008416 <xQueueGiveFromISR+0x94>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80083fa:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80083fc:	b13b      	cbz	r3, 800840e <xQueueGiveFromISR+0x8c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80083fe:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008402:	f000 fe19 	bl	8009038 <xTaskRemoveFromEventList>
 8008406:	b110      	cbz	r0, 800840e <xQueueGiveFromISR+0x8c>
							if( pxHigherPriorityTaskWoken != NULL )
 8008408:	b10d      	cbz	r5, 800840e <xQueueGiveFromISR+0x8c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800840a:	2301      	movs	r3, #1
 800840c:	602b      	str	r3, [r5, #0]
			xReturn = pdPASS;
 800840e:	2001      	movs	r0, #1
	__asm volatile
 8008410:	f386 8811 	msr	BASEPRI, r6
}
 8008414:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008416:	3301      	adds	r3, #1
 8008418:	b25b      	sxtb	r3, r3
 800841a:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 800841e:	e7f6      	b.n	800840e <xQueueGiveFromISR+0x8c>
			xReturn = errQUEUE_FULL;
 8008420:	2000      	movs	r0, #0
 8008422:	e7f5      	b.n	8008410 <xQueueGiveFromISR+0x8e>

08008424 <xQueueReceive>:
{
 8008424:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8008428:	460e      	mov	r6, r1
 800842a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800842c:	4604      	mov	r4, r0
 800842e:	b940      	cbnz	r0, 8008442 <xQueueReceive+0x1e>
	__asm volatile
 8008430:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008434:	f383 8811 	msr	BASEPRI, r3
 8008438:	f3bf 8f6f 	isb	sy
 800843c:	f3bf 8f4f 	dsb	sy
 8008440:	e7fe      	b.n	8008440 <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008442:	b951      	cbnz	r1, 800845a <xQueueReceive+0x36>
 8008444:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008446:	b143      	cbz	r3, 800845a <xQueueReceive+0x36>
 8008448:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800844c:	f383 8811 	msr	BASEPRI, r3
 8008450:	f3bf 8f6f 	isb	sy
 8008454:	f3bf 8f4f 	dsb	sy
 8008458:	e7fe      	b.n	8008458 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800845a:	f000 fe7b 	bl	8009154 <xTaskGetSchedulerState>
 800845e:	4605      	mov	r5, r0
 8008460:	b318      	cbz	r0, 80084aa <xQueueReceive+0x86>
 8008462:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 8008464:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 8008468:	f7ff fbbc 	bl	8007be4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800846c:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800846e:	b347      	cbz	r7, 80084c2 <xQueueReceive+0x9e>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008470:	4631      	mov	r1, r6
 8008472:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008474:	3f01      	subs	r7, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008476:	f7ff fd33 	bl	8007ee0 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800847a:	63a7      	str	r7, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800847c:	6923      	ldr	r3, [r4, #16]
 800847e:	b173      	cbz	r3, 800849e <xQueueReceive+0x7a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008480:	f104 0010 	add.w	r0, r4, #16
 8008484:	f000 fdd8 	bl	8009038 <xTaskRemoveFromEventList>
 8008488:	b148      	cbz	r0, 800849e <xQueueReceive+0x7a>
						queueYIELD_IF_USING_PREEMPTION();
 800848a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800848e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008492:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008496:	f3bf 8f4f 	dsb	sy
 800849a:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800849e:	f7ff fbc1 	bl	8007c24 <vPortExitCritical>
				return pdPASS;
 80084a2:	2001      	movs	r0, #1
}
 80084a4:	b004      	add	sp, #16
 80084a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80084aa:	9b01      	ldr	r3, [sp, #4]
 80084ac:	2b00      	cmp	r3, #0
 80084ae:	d0d9      	beq.n	8008464 <xQueueReceive+0x40>
 80084b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80084b4:	f383 8811 	msr	BASEPRI, r3
 80084b8:	f3bf 8f6f 	isb	sy
 80084bc:	f3bf 8f4f 	dsb	sy
 80084c0:	e7fe      	b.n	80084c0 <xQueueReceive+0x9c>
				if( xTicksToWait == ( TickType_t ) 0 )
 80084c2:	9b01      	ldr	r3, [sp, #4]
 80084c4:	b91b      	cbnz	r3, 80084ce <xQueueReceive+0xaa>
					taskEXIT_CRITICAL();
 80084c6:	f7ff fbad 	bl	8007c24 <vPortExitCritical>
					return errQUEUE_EMPTY;
 80084ca:	2000      	movs	r0, #0
 80084cc:	e7ea      	b.n	80084a4 <xQueueReceive+0x80>
				else if( xEntryTimeSet == pdFALSE )
 80084ce:	b915      	cbnz	r5, 80084d6 <xQueueReceive+0xb2>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80084d0:	a802      	add	r0, sp, #8
 80084d2:	f000 fdf1 	bl	80090b8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80084d6:	f7ff fba5 	bl	8007c24 <vPortExitCritical>
		vTaskSuspendAll();
 80084da:	f000 fbf9 	bl	8008cd0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80084de:	f7ff fb81 	bl	8007be4 <vPortEnterCritical>
 80084e2:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 80084e6:	2bff      	cmp	r3, #255	@ 0xff
 80084e8:	bf08      	it	eq
 80084ea:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 80084ee:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 80084f2:	2bff      	cmp	r3, #255	@ 0xff
 80084f4:	bf08      	it	eq
 80084f6:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 80084fa:	f7ff fb93 	bl	8007c24 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80084fe:	a901      	add	r1, sp, #4
 8008500:	a802      	add	r0, sp, #8
 8008502:	f000 fde5 	bl	80090d0 <xTaskCheckForTimeOut>
 8008506:	bb00      	cbnz	r0, 800854a <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008508:	4620      	mov	r0, r4
 800850a:	f7ff fcab 	bl	8007e64 <prvIsQueueEmpty>
 800850e:	b1b0      	cbz	r0, 800853e <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8008510:	9901      	ldr	r1, [sp, #4]
 8008512:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008516:	f000 fd57 	bl	8008fc8 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800851a:	4620      	mov	r0, r4
 800851c:	f7ff fcf6 	bl	8007f0c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008520:	f000 fc7a 	bl	8008e18 <xTaskResumeAll>
 8008524:	b948      	cbnz	r0, 800853a <xQueueReceive+0x116>
					portYIELD_WITHIN_API();
 8008526:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800852a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800852e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008532:	f3bf 8f4f 	dsb	sy
 8008536:	f3bf 8f6f 	isb	sy
 800853a:	2501      	movs	r5, #1
 800853c:	e794      	b.n	8008468 <xQueueReceive+0x44>
				prvUnlockQueue( pxQueue );
 800853e:	4620      	mov	r0, r4
 8008540:	f7ff fce4 	bl	8007f0c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008544:	f000 fc68 	bl	8008e18 <xTaskResumeAll>
 8008548:	e7f7      	b.n	800853a <xQueueReceive+0x116>
			prvUnlockQueue( pxQueue );
 800854a:	4620      	mov	r0, r4
 800854c:	f7ff fcde 	bl	8007f0c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008550:	f000 fc62 	bl	8008e18 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008554:	4620      	mov	r0, r4
 8008556:	f7ff fc85 	bl	8007e64 <prvIsQueueEmpty>
 800855a:	2800      	cmp	r0, #0
 800855c:	d0ed      	beq.n	800853a <xQueueReceive+0x116>
 800855e:	e7b4      	b.n	80084ca <xQueueReceive+0xa6>

08008560 <xQueueSemaphoreTake>:
{
 8008560:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008562:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8008564:	4604      	mov	r4, r0
{
 8008566:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008568:	b940      	cbnz	r0, 800857c <xQueueSemaphoreTake+0x1c>
 800856a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800856e:	f383 8811 	msr	BASEPRI, r3
 8008572:	f3bf 8f6f 	isb	sy
 8008576:	f3bf 8f4f 	dsb	sy
 800857a:	e7fe      	b.n	800857a <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800857c:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 800857e:	b145      	cbz	r5, 8008592 <xQueueSemaphoreTake+0x32>
 8008580:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008584:	f383 8811 	msr	BASEPRI, r3
 8008588:	f3bf 8f6f 	isb	sy
 800858c:	f3bf 8f4f 	dsb	sy
 8008590:	e7fe      	b.n	8008590 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008592:	f000 fddf 	bl	8009154 <xTaskGetSchedulerState>
 8008596:	4606      	mov	r6, r0
 8008598:	b320      	cbz	r0, 80085e4 <xQueueSemaphoreTake+0x84>
 800859a:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 800859c:	2700      	movs	r7, #0
		taskENTER_CRITICAL();
 800859e:	f7ff fb21 	bl	8007be4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 80085a2:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 80085a4:	b353      	cbz	r3, 80085fc <xQueueSemaphoreTake+0x9c>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 80085a6:	3b01      	subs	r3, #1
 80085a8:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80085aa:	6823      	ldr	r3, [r4, #0]
 80085ac:	b913      	cbnz	r3, 80085b4 <xQueueSemaphoreTake+0x54>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 80085ae:	f000 feaf 	bl	8009310 <pvTaskIncrementMutexHeldCount>
 80085b2:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80085b4:	6923      	ldr	r3, [r4, #16]
 80085b6:	b173      	cbz	r3, 80085d6 <xQueueSemaphoreTake+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80085b8:	f104 0010 	add.w	r0, r4, #16
 80085bc:	f000 fd3c 	bl	8009038 <xTaskRemoveFromEventList>
 80085c0:	b148      	cbz	r0, 80085d6 <xQueueSemaphoreTake+0x76>
						queueYIELD_IF_USING_PREEMPTION();
 80085c2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80085c6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80085ca:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80085ce:	f3bf 8f4f 	dsb	sy
 80085d2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80085d6:	f7ff fb25 	bl	8007c24 <vPortExitCritical>
				return pdPASS;
 80085da:	2001      	movs	r0, #1
}
 80085dc:	b005      	add	sp, #20
 80085de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80085e0:	4635      	mov	r5, r6
 80085e2:	e7db      	b.n	800859c <xQueueSemaphoreTake+0x3c>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80085e4:	9b01      	ldr	r3, [sp, #4]
 80085e6:	2b00      	cmp	r3, #0
 80085e8:	d0fa      	beq.n	80085e0 <xQueueSemaphoreTake+0x80>
 80085ea:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80085ee:	f383 8811 	msr	BASEPRI, r3
 80085f2:	f3bf 8f6f 	isb	sy
 80085f6:	f3bf 8f4f 	dsb	sy
 80085fa:	e7fe      	b.n	80085fa <xQueueSemaphoreTake+0x9a>
				if( xTicksToWait == ( TickType_t ) 0 )
 80085fc:	9b01      	ldr	r3, [sp, #4]
 80085fe:	b953      	cbnz	r3, 8008616 <xQueueSemaphoreTake+0xb6>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8008600:	2d00      	cmp	r5, #0
 8008602:	d066      	beq.n	80086d2 <xQueueSemaphoreTake+0x172>
 8008604:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008608:	f383 8811 	msr	BASEPRI, r3
 800860c:	f3bf 8f6f 	isb	sy
 8008610:	f3bf 8f4f 	dsb	sy
 8008614:	e7fe      	b.n	8008614 <xQueueSemaphoreTake+0xb4>
				else if( xEntryTimeSet == pdFALSE )
 8008616:	b916      	cbnz	r6, 800861e <xQueueSemaphoreTake+0xbe>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008618:	a802      	add	r0, sp, #8
 800861a:	f000 fd4d 	bl	80090b8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800861e:	f7ff fb01 	bl	8007c24 <vPortExitCritical>
		vTaskSuspendAll();
 8008622:	f000 fb55 	bl	8008cd0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008626:	f7ff fadd 	bl	8007be4 <vPortEnterCritical>
 800862a:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800862e:	2bff      	cmp	r3, #255	@ 0xff
 8008630:	bf08      	it	eq
 8008632:	f884 7044 	strbeq.w	r7, [r4, #68]	@ 0x44
 8008636:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800863a:	2bff      	cmp	r3, #255	@ 0xff
 800863c:	bf08      	it	eq
 800863e:	f884 7045 	strbeq.w	r7, [r4, #69]	@ 0x45
 8008642:	f7ff faef 	bl	8007c24 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008646:	a901      	add	r1, sp, #4
 8008648:	a802      	add	r0, sp, #8
 800864a:	f000 fd41 	bl	80090d0 <xTaskCheckForTimeOut>
 800864e:	bb50      	cbnz	r0, 80086a6 <xQueueSemaphoreTake+0x146>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008650:	4620      	mov	r0, r4
 8008652:	f7ff fc07 	bl	8007e64 <prvIsQueueEmpty>
 8008656:	b300      	cbz	r0, 800869a <xQueueSemaphoreTake+0x13a>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008658:	6823      	ldr	r3, [r4, #0]
 800865a:	b93b      	cbnz	r3, 800866c <xQueueSemaphoreTake+0x10c>
						taskENTER_CRITICAL();
 800865c:	f7ff fac2 	bl	8007be4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008660:	68a0      	ldr	r0, [r4, #8]
 8008662:	f000 fd87 	bl	8009174 <xTaskPriorityInherit>
 8008666:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8008668:	f7ff fadc 	bl	8007c24 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800866c:	9901      	ldr	r1, [sp, #4]
 800866e:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008672:	f000 fca9 	bl	8008fc8 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008676:	4620      	mov	r0, r4
 8008678:	f7ff fc48 	bl	8007f0c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800867c:	f000 fbcc 	bl	8008e18 <xTaskResumeAll>
 8008680:	b948      	cbnz	r0, 8008696 <xQueueSemaphoreTake+0x136>
					portYIELD_WITHIN_API();
 8008682:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008686:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800868a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800868e:	f3bf 8f4f 	dsb	sy
 8008692:	f3bf 8f6f 	isb	sy
 8008696:	2601      	movs	r6, #1
 8008698:	e781      	b.n	800859e <xQueueSemaphoreTake+0x3e>
				prvUnlockQueue( pxQueue );
 800869a:	4620      	mov	r0, r4
 800869c:	f7ff fc36 	bl	8007f0c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80086a0:	f000 fbba 	bl	8008e18 <xTaskResumeAll>
 80086a4:	e7f7      	b.n	8008696 <xQueueSemaphoreTake+0x136>
			prvUnlockQueue( pxQueue );
 80086a6:	4620      	mov	r0, r4
 80086a8:	f7ff fc30 	bl	8007f0c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80086ac:	f000 fbb4 	bl	8008e18 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80086b0:	4620      	mov	r0, r4
 80086b2:	f7ff fbd7 	bl	8007e64 <prvIsQueueEmpty>
 80086b6:	2800      	cmp	r0, #0
 80086b8:	d0ed      	beq.n	8008696 <xQueueSemaphoreTake+0x136>
					if( xInheritanceOccurred != pdFALSE )
 80086ba:	b165      	cbz	r5, 80086d6 <xQueueSemaphoreTake+0x176>
						taskENTER_CRITICAL();
 80086bc:	f7ff fa92 	bl	8007be4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 80086c0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 80086c2:	b119      	cbz	r1, 80086cc <xQueueSemaphoreTake+0x16c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 80086c4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80086c6:	6819      	ldr	r1, [r3, #0]
 80086c8:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 80086cc:	68a0      	ldr	r0, [r4, #8]
 80086ce:	f000 fdd1 	bl	8009274 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 80086d2:	f7ff faa7 	bl	8007c24 <vPortExitCritical>
					return errQUEUE_EMPTY;
 80086d6:	2000      	movs	r0, #0
 80086d8:	e780      	b.n	80085dc <xQueueSemaphoreTake+0x7c>

080086da <xQueueReceiveFromISR>:
{
 80086da:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80086de:	4689      	mov	r9, r1
 80086e0:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 80086e2:	4604      	mov	r4, r0
 80086e4:	b940      	cbnz	r0, 80086f8 <xQueueReceiveFromISR+0x1e>
 80086e6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80086ea:	f383 8811 	msr	BASEPRI, r3
 80086ee:	f3bf 8f6f 	isb	sy
 80086f2:	f3bf 8f4f 	dsb	sy
 80086f6:	e7fe      	b.n	80086f6 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80086f8:	b951      	cbnz	r1, 8008710 <xQueueReceiveFromISR+0x36>
 80086fa:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80086fc:	b143      	cbz	r3, 8008710 <xQueueReceiveFromISR+0x36>
 80086fe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008702:	f383 8811 	msr	BASEPRI, r3
 8008706:	f3bf 8f6f 	isb	sy
 800870a:	f3bf 8f4f 	dsb	sy
 800870e:	e7fe      	b.n	800870e <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008710:	f7ff fb7a 	bl	8007e08 <vPortValidateInterruptPriority>
	__asm volatile
 8008714:	f3ef 8711 	mrs	r7, BASEPRI
 8008718:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800871c:	f383 8811 	msr	BASEPRI, r3
 8008720:	f3bf 8f6f 	isb	sy
 8008724:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008728:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800872a:	b30d      	cbz	r5, 8008770 <xQueueReceiveFromISR+0x96>
			const int8_t cRxLock = pxQueue->cRxLock;
 800872c:	f894 6044 	ldrb.w	r6, [r4, #68]	@ 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008730:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 8008732:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008734:	4620      	mov	r0, r4
 8008736:	f7ff fbd3 	bl	8007ee0 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800873a:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800873c:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800873e:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
 8008740:	d111      	bne.n	8008766 <xQueueReceiveFromISR+0x8c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008742:	6923      	ldr	r3, [r4, #16]
 8008744:	b153      	cbz	r3, 800875c <xQueueReceiveFromISR+0x82>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008746:	f104 0010 	add.w	r0, r4, #16
 800874a:	f000 fc75 	bl	8009038 <xTaskRemoveFromEventList>
 800874e:	b128      	cbz	r0, 800875c <xQueueReceiveFromISR+0x82>
						if( pxHigherPriorityTaskWoken != NULL )
 8008750:	f1b8 0f00 	cmp.w	r8, #0
 8008754:	d002      	beq.n	800875c <xQueueReceiveFromISR+0x82>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8008756:	2301      	movs	r3, #1
 8008758:	f8c8 3000 	str.w	r3, [r8]
			xReturn = pdPASS;
 800875c:	2001      	movs	r0, #1
	__asm volatile
 800875e:	f387 8811 	msr	BASEPRI, r7
}
 8008762:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8008766:	3601      	adds	r6, #1
 8008768:	b276      	sxtb	r6, r6
 800876a:	f884 6044 	strb.w	r6, [r4, #68]	@ 0x44
 800876e:	e7f5      	b.n	800875c <xQueueReceiveFromISR+0x82>
			xReturn = pdFAIL;
 8008770:	4628      	mov	r0, r5
 8008772:	e7f4      	b.n	800875e <xQueueReceiveFromISR+0x84>

08008774 <uxQueueMessagesWaiting>:
{
 8008774:	b510      	push	{r4, lr}
	configASSERT( xQueue );
 8008776:	4604      	mov	r4, r0
 8008778:	b940      	cbnz	r0, 800878c <uxQueueMessagesWaiting+0x18>
	__asm volatile
 800877a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800877e:	f383 8811 	msr	BASEPRI, r3
 8008782:	f3bf 8f6f 	isb	sy
 8008786:	f3bf 8f4f 	dsb	sy
 800878a:	e7fe      	b.n	800878a <uxQueueMessagesWaiting+0x16>
	taskENTER_CRITICAL();
 800878c:	f7ff fa2a 	bl	8007be4 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 8008790:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
	taskEXIT_CRITICAL();
 8008792:	f7ff fa47 	bl	8007c24 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 8008796:	4620      	mov	r0, r4
 8008798:	bd10      	pop	{r4, pc}

0800879a <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800879a:	b940      	cbnz	r0, 80087ae <uxQueueMessagesWaitingFromISR+0x14>
 800879c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80087a0:	f383 8811 	msr	BASEPRI, r3
 80087a4:	f3bf 8f6f 	isb	sy
 80087a8:	f3bf 8f4f 	dsb	sy
 80087ac:	e7fe      	b.n	80087ac <uxQueueMessagesWaitingFromISR+0x12>
	uxReturn = pxQueue->uxMessagesWaiting;
 80087ae:	6b80      	ldr	r0, [r0, #56]	@ 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 80087b0:	4770      	bx	lr
	...

080087b4 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 80087b4:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80087b6:	4a07      	ldr	r2, [pc, #28]	@ (80087d4 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80087b8:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80087ba:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 80087be:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 80087c2:	b91d      	cbnz	r5, 80087cc <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 80087c4:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 80087c8:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 80087ca:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80087cc:	3301      	adds	r3, #1
 80087ce:	2b08      	cmp	r3, #8
 80087d0:	d1f3      	bne.n	80087ba <vQueueAddToRegistry+0x6>
 80087d2:	e7fa      	b.n	80087ca <vQueueAddToRegistry+0x16>
 80087d4:	20011388 	.word	0x20011388

080087d8 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 80087d8:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80087da:	4a09      	ldr	r2, [pc, #36]	@ (8008800 <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80087dc:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80087de:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 80087e2:	4281      	cmp	r1, r0
 80087e4:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 80087e8:	d106      	bne.n	80087f8 <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 80087ea:	4a06      	ldr	r2, [pc, #24]	@ (8008804 <vQueueUnregisterQueue+0x2c>)
 80087ec:	2100      	movs	r1, #0
 80087ee:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 80087f2:	4422      	add	r2, r4
 80087f4:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 80087f6:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80087f8:	3301      	adds	r3, #1
 80087fa:	2b08      	cmp	r3, #8
 80087fc:	d1ef      	bne.n	80087de <vQueueUnregisterQueue+0x6>
 80087fe:	e7fa      	b.n	80087f6 <vQueueUnregisterQueue+0x1e>
 8008800:	2001138c 	.word	0x2001138c
 8008804:	20011388 	.word	0x20011388

08008808 <vQueueDelete>:
{
 8008808:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 800880a:	b940      	cbnz	r0, 800881e <vQueueDelete+0x16>
 800880c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008810:	f383 8811 	msr	BASEPRI, r3
 8008814:	f3bf 8f6f 	isb	sy
 8008818:	f3bf 8f4f 	dsb	sy
 800881c:	e7fe      	b.n	800881c <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 800881e:	f7ff ffdb 	bl	80087d8 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8008822:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
 8008826:	b91b      	cbnz	r3, 8008830 <vQueueDelete+0x28>
}
 8008828:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 800882c:	f7ff b8f6 	b.w	8007a1c <vPortFree>
}
 8008830:	bd10      	pop	{r4, pc}

08008832 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8008832:	b570      	push	{r4, r5, r6, lr}
 8008834:	4604      	mov	r4, r0
 8008836:	460d      	mov	r5, r1
 8008838:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800883a:	f7ff f9d3 	bl	8007be4 <vPortEnterCritical>
 800883e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8008842:	2bff      	cmp	r3, #255	@ 0xff
 8008844:	bf04      	itt	eq
 8008846:	2300      	moveq	r3, #0
 8008848:	f884 3044 	strbeq.w	r3, [r4, #68]	@ 0x44
 800884c:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8008850:	2bff      	cmp	r3, #255	@ 0xff
 8008852:	bf04      	itt	eq
 8008854:	2300      	moveq	r3, #0
 8008856:	f884 3045 	strbeq.w	r3, [r4, #69]	@ 0x45
 800885a:	f7ff f9e3 	bl	8007c24 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800885e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8008860:	b92b      	cbnz	r3, 800886e <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8008862:	4632      	mov	r2, r6
 8008864:	4629      	mov	r1, r5
 8008866:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800886a:	f000 fbc7 	bl	8008ffc <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800886e:	4620      	mov	r0, r4
	}
 8008870:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8008874:	f7ff bb4a 	b.w	8007f0c <prvUnlockQueue>

08008878 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8008878:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800887c:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800887e:	f7ff f9b1 	bl	8007be4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8008882:	4b30      	ldr	r3, [pc, #192]	@ (8008944 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 8008884:	4e30      	ldr	r6, [pc, #192]	@ (8008948 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 8008886:	681a      	ldr	r2, [r3, #0]
 8008888:	4f30      	ldr	r7, [pc, #192]	@ (800894c <prvAddNewTaskToReadyList+0xd4>)
 800888a:	3201      	adds	r2, #1
 800888c:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800888e:	6835      	ldr	r5, [r6, #0]
 8008890:	2d00      	cmp	r5, #0
 8008892:	d14b      	bne.n	800892c <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8008894:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8008896:	681b      	ldr	r3, [r3, #0]
 8008898:	2b01      	cmp	r3, #1
 800889a:	d11f      	bne.n	80088dc <prvAddNewTaskToReadyList+0x64>
 800889c:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800889e:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80088a0:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80088a2:	f7ff f8f9 	bl	8007a98 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80088a6:	2d38      	cmp	r5, #56	@ 0x38
 80088a8:	f108 0814 	add.w	r8, r8, #20
 80088ac:	d1f7      	bne.n	800889e <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 80088ae:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 8008974 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 80088b2:	4d27      	ldr	r5, [pc, #156]	@ (8008950 <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 80088b4:	4640      	mov	r0, r8
 80088b6:	f7ff f8ef 	bl	8007a98 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 80088ba:	4628      	mov	r0, r5
 80088bc:	f7ff f8ec 	bl	8007a98 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 80088c0:	4824      	ldr	r0, [pc, #144]	@ (8008954 <prvAddNewTaskToReadyList+0xdc>)
 80088c2:	f7ff f8e9 	bl	8007a98 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 80088c6:	4824      	ldr	r0, [pc, #144]	@ (8008958 <prvAddNewTaskToReadyList+0xe0>)
 80088c8:	f7ff f8e6 	bl	8007a98 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 80088cc:	4823      	ldr	r0, [pc, #140]	@ (800895c <prvAddNewTaskToReadyList+0xe4>)
 80088ce:	f7ff f8e3 	bl	8007a98 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 80088d2:	4b23      	ldr	r3, [pc, #140]	@ (8008960 <prvAddNewTaskToReadyList+0xe8>)
 80088d4:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 80088d8:	4b22      	ldr	r3, [pc, #136]	@ (8008964 <prvAddNewTaskToReadyList+0xec>)
 80088da:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 80088dc:	4a22      	ldr	r2, [pc, #136]	@ (8008968 <prvAddNewTaskToReadyList+0xf0>)
 80088de:	6813      	ldr	r3, [r2, #0]
 80088e0:	3301      	adds	r3, #1
 80088e2:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 80088e4:	4a21      	ldr	r2, [pc, #132]	@ (800896c <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 80088e6:	6463      	str	r3, [r4, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
 80088e8:	6811      	ldr	r1, [r2, #0]
 80088ea:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80088ec:	2014      	movs	r0, #20
 80088ee:	428b      	cmp	r3, r1
 80088f0:	fb00 7003 	mla	r0, r0, r3, r7
 80088f4:	f104 0104 	add.w	r1, r4, #4
 80088f8:	bf88      	it	hi
 80088fa:	6013      	strhi	r3, [r2, #0]
 80088fc:	f7ff f8da 	bl	8007ab4 <vListInsertEnd>
	taskEXIT_CRITICAL();
 8008900:	f7ff f990 	bl	8007c24 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8008904:	4b1a      	ldr	r3, [pc, #104]	@ (8008970 <prvAddNewTaskToReadyList+0xf8>)
 8008906:	681b      	ldr	r3, [r3, #0]
 8008908:	b173      	cbz	r3, 8008928 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800890a:	6833      	ldr	r3, [r6, #0]
 800890c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800890e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008910:	429a      	cmp	r2, r3
 8008912:	d209      	bcs.n	8008928 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8008914:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008918:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800891c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008920:	f3bf 8f4f 	dsb	sy
 8008924:	f3bf 8f6f 	isb	sy
}
 8008928:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800892c:	4b10      	ldr	r3, [pc, #64]	@ (8008970 <prvAddNewTaskToReadyList+0xf8>)
 800892e:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8008930:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
 8008932:	2a00      	cmp	r2, #0
 8008934:	d1d2      	bne.n	80088dc <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8008936:	6832      	ldr	r2, [r6, #0]
 8008938:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800893a:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 800893c:	bf98      	it	ls
 800893e:	6034      	strls	r4, [r6, #0]
 8008940:	e7cc      	b.n	80088dc <prvAddNewTaskToReadyList+0x64>
 8008942:	bf00      	nop
 8008944:	200113ec 	.word	0x200113ec
 8008948:	200118c0 	.word	0x200118c0
 800894c:	20011460 	.word	0x20011460
 8008950:	20011438 	.word	0x20011438
 8008954:	2001141c 	.word	0x2001141c
 8008958:	20011408 	.word	0x20011408
 800895c:	200113f0 	.word	0x200113f0
 8008960:	20011434 	.word	0x20011434
 8008964:	20011430 	.word	0x20011430
 8008968:	200113d0 	.word	0x200113d0
 800896c:	200113e4 	.word	0x200113e4
 8008970:	200113e0 	.word	0x200113e0
 8008974:	2001144c 	.word	0x2001144c

08008978 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8008978:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800897a:	4b15      	ldr	r3, [pc, #84]	@ (80089d0 <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800897c:	4d15      	ldr	r5, [pc, #84]	@ (80089d4 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800897e:	681c      	ldr	r4, [r3, #0]
{
 8008980:	4606      	mov	r6, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008982:	6828      	ldr	r0, [r5, #0]
 8008984:	3004      	adds	r0, #4
{
 8008986:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008988:	f7ff f8b6 	bl	8007af8 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800898c:	1c73      	adds	r3, r6, #1
 800898e:	d107      	bne.n	80089a0 <prvAddCurrentTaskToDelayedList+0x28>
 8008990:	b137      	cbz	r7, 80089a0 <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008992:	6829      	ldr	r1, [r5, #0]
 8008994:	4810      	ldr	r0, [pc, #64]	@ (80089d8 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8008996:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800899a:	3104      	adds	r1, #4
 800899c:	f7ff b88a 	b.w	8007ab4 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 80089a0:	682b      	ldr	r3, [r5, #0]
 80089a2:	19a4      	adds	r4, r4, r6
 80089a4:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 80089a6:	d307      	bcc.n	80089b8 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80089a8:	4b0c      	ldr	r3, [pc, #48]	@ (80089dc <prvAddCurrentTaskToDelayedList+0x64>)
 80089aa:	6818      	ldr	r0, [r3, #0]
 80089ac:	6829      	ldr	r1, [r5, #0]
}
 80089ae:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80089b2:	3104      	adds	r1, #4
 80089b4:	f7ff b889 	b.w	8007aca <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80089b8:	4b09      	ldr	r3, [pc, #36]	@ (80089e0 <prvAddCurrentTaskToDelayedList+0x68>)
 80089ba:	6818      	ldr	r0, [r3, #0]
 80089bc:	6829      	ldr	r1, [r5, #0]
 80089be:	3104      	adds	r1, #4
 80089c0:	f7ff f883 	bl	8007aca <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 80089c4:	4b07      	ldr	r3, [pc, #28]	@ (80089e4 <prvAddCurrentTaskToDelayedList+0x6c>)
 80089c6:	681a      	ldr	r2, [r3, #0]
 80089c8:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 80089ca:	bf88      	it	hi
 80089cc:	601c      	strhi	r4, [r3, #0]
}
 80089ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80089d0:	200113e8 	.word	0x200113e8
 80089d4:	200118c0 	.word	0x200118c0
 80089d8:	200113f0 	.word	0x200113f0
 80089dc:	20011430 	.word	0x20011430
 80089e0:	20011434 	.word	0x20011434
 80089e4:	200113cc 	.word	0x200113cc

080089e8 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80089e8:	4a06      	ldr	r2, [pc, #24]	@ (8008a04 <prvResetNextTaskUnblockTime+0x1c>)
 80089ea:	6813      	ldr	r3, [r2, #0]
 80089ec:	6819      	ldr	r1, [r3, #0]
 80089ee:	4b06      	ldr	r3, [pc, #24]	@ (8008a08 <prvResetNextTaskUnblockTime+0x20>)
 80089f0:	b919      	cbnz	r1, 80089fa <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 80089f2:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80089f6:	601a      	str	r2, [r3, #0]
}
 80089f8:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80089fa:	6812      	ldr	r2, [r2, #0]
 80089fc:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80089fe:	68d2      	ldr	r2, [r2, #12]
 8008a00:	6852      	ldr	r2, [r2, #4]
 8008a02:	e7f8      	b.n	80089f6 <prvResetNextTaskUnblockTime+0xe>
 8008a04:	20011434 	.word	0x20011434
 8008a08:	200113cc 	.word	0x200113cc

08008a0c <prvDeleteTCB>:
	{
 8008a0c:	b510      	push	{r4, lr}
 8008a0e:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 8008a10:	3058      	adds	r0, #88	@ 0x58
 8008a12:	f015 fa87 	bl	801df24 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8008a16:	f894 30a9 	ldrb.w	r3, [r4, #169]	@ 0xa9
 8008a1a:	b93b      	cbnz	r3, 8008a2c <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 8008a1c:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8008a1e:	f7fe fffd 	bl	8007a1c <vPortFree>
				vPortFree( pxTCB );
 8008a22:	4620      	mov	r0, r4
	}
 8008a24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8008a28:	f7fe bff8 	b.w	8007a1c <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8008a2c:	2b01      	cmp	r3, #1
 8008a2e:	d0f8      	beq.n	8008a22 <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8008a30:	2b02      	cmp	r3, #2
 8008a32:	d008      	beq.n	8008a46 <prvDeleteTCB+0x3a>
 8008a34:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a38:	f383 8811 	msr	BASEPRI, r3
 8008a3c:	f3bf 8f6f 	isb	sy
 8008a40:	f3bf 8f4f 	dsb	sy
 8008a44:	e7fe      	b.n	8008a44 <prvDeleteTCB+0x38>
	}
 8008a46:	bd10      	pop	{r4, pc}

08008a48 <prvIdleTask>:
{
 8008a48:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008a4a:	4c13      	ldr	r4, [pc, #76]	@ (8008a98 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008a4c:	4f13      	ldr	r7, [pc, #76]	@ (8008a9c <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 8008a4e:	4d14      	ldr	r5, [pc, #80]	@ (8008aa0 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008a50:	6823      	ldr	r3, [r4, #0]
 8008a52:	b973      	cbnz	r3, 8008a72 <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8008a54:	4b13      	ldr	r3, [pc, #76]	@ (8008aa4 <prvIdleTask+0x5c>)
 8008a56:	681b      	ldr	r3, [r3, #0]
 8008a58:	2b01      	cmp	r3, #1
 8008a5a:	d9f8      	bls.n	8008a4e <prvIdleTask+0x6>
				taskYIELD();
 8008a5c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008a60:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008a64:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008a68:	f3bf 8f4f 	dsb	sy
 8008a6c:	f3bf 8f6f 	isb	sy
 8008a70:	e7ed      	b.n	8008a4e <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 8008a72:	f7ff f8b7 	bl	8007be4 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008a76:	68fb      	ldr	r3, [r7, #12]
 8008a78:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008a7a:	1d30      	adds	r0, r6, #4
 8008a7c:	f7ff f83c 	bl	8007af8 <uxListRemove>
				--uxCurrentNumberOfTasks;
 8008a80:	682b      	ldr	r3, [r5, #0]
 8008a82:	3b01      	subs	r3, #1
 8008a84:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8008a86:	6823      	ldr	r3, [r4, #0]
 8008a88:	3b01      	subs	r3, #1
 8008a8a:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8008a8c:	f7ff f8ca 	bl	8007c24 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8008a90:	4630      	mov	r0, r6
 8008a92:	f7ff ffbb 	bl	8008a0c <prvDeleteTCB>
 8008a96:	e7db      	b.n	8008a50 <prvIdleTask+0x8>
 8008a98:	20011404 	.word	0x20011404
 8008a9c:	20011408 	.word	0x20011408
 8008aa0:	200113ec 	.word	0x200113ec
 8008aa4:	20011460 	.word	0x20011460

08008aa8 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008aa8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008aac:	e9dd 9409 	ldrd	r9, r4, [sp, #36]	@ 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008ab0:	0096      	lsls	r6, r2, #2
 8008ab2:	4632      	mov	r2, r6
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008ab4:	4607      	mov	r7, r0
 8008ab6:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008ab8:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8008aba:	21a5      	movs	r1, #165	@ 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008abc:	4698      	mov	r8, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008abe:	f015 f9e8 	bl	801de92 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8008ac2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8008ac4:	3e04      	subs	r6, #4
 8008ac6:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8008ac8:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
 8008acc:	2d00      	cmp	r5, #0
 8008ace:	d043      	beq.n	8008b58 <prvInitialiseNewTask.constprop.0+0xb0>
 8008ad0:	1e6b      	subs	r3, r5, #1
 8008ad2:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 8008ad6:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8008ad8:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8008adc:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 8008ae0:	b109      	cbz	r1, 8008ae6 <prvInitialiseNewTask.constprop.0+0x3e>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8008ae2:	42ab      	cmp	r3, r5
 8008ae4:	d1f8      	bne.n	8008ad8 <prvInitialiseNewTask.constprop.0+0x30>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8008ae6:	2300      	movs	r3, #0
 8008ae8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8008aec:	9d08      	ldr	r5, [sp, #32]
 8008aee:	2d37      	cmp	r5, #55	@ 0x37
 8008af0:	bf28      	it	cs
 8008af2:	2537      	movcs	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8008af4:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8008af8:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8008afa:	64e5      	str	r5, [r4, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8008afc:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8008afe:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8008b02:	f7fe ffd4 	bl	8007aae <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008b06:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8008b0a:	f104 0018 	add.w	r0, r4, #24
 8008b0e:	f7fe ffce 	bl	8007aae <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8008b12:	f8c4 a0a4 	str.w	sl, [r4, #164]	@ 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8008b16:	224c      	movs	r2, #76	@ 0x4c
 8008b18:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8008b1a:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008b1c:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8008b1e:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
 8008b20:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8008b24:	f884 a0a8 	strb.w	sl, [r4, #168]	@ 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8008b28:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8008b2c:	f015 f9b1 	bl	801de92 <memset>
 8008b30:	4b0b      	ldr	r3, [pc, #44]	@ (8008b60 <prvInitialiseNewTask.constprop.0+0xb8>)
 8008b32:	65e3      	str	r3, [r4, #92]	@ 0x5c
 8008b34:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8008b38:	33d0      	adds	r3, #208	@ 0xd0
 8008b3a:	6622      	str	r2, [r4, #96]	@ 0x60
 8008b3c:	6663      	str	r3, [r4, #100]	@ 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8008b3e:	4642      	mov	r2, r8
 8008b40:	4639      	mov	r1, r7
 8008b42:	4630      	mov	r0, r6
 8008b44:	f7ff f826 	bl	8007b94 <pxPortInitialiseStack>
 8008b48:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8008b4a:	f1b9 0f00 	cmp.w	r9, #0
 8008b4e:	d001      	beq.n	8008b54 <prvInitialiseNewTask.constprop.0+0xac>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8008b50:	f8c9 4000 	str.w	r4, [r9]
}
 8008b54:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8008b58:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 8008b5c:	e7c6      	b.n	8008aec <prvInitialiseNewTask.constprop.0+0x44>
 8008b5e:	bf00      	nop
 8008b60:	20012350 	.word	0x20012350

08008b64 <xTaskCreateStatic>:
	{
 8008b64:	b570      	push	{r4, r5, r6, lr}
 8008b66:	b086      	sub	sp, #24
 8008b68:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
 8008b6c:	b945      	cbnz	r5, 8008b80 <xTaskCreateStatic+0x1c>
 8008b6e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b72:	f383 8811 	msr	BASEPRI, r3
 8008b76:	f3bf 8f6f 	isb	sy
 8008b7a:	f3bf 8f4f 	dsb	sy
 8008b7e:	e7fe      	b.n	8008b7e <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8008b80:	b944      	cbnz	r4, 8008b94 <xTaskCreateStatic+0x30>
 8008b82:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b86:	f383 8811 	msr	BASEPRI, r3
 8008b8a:	f3bf 8f6f 	isb	sy
 8008b8e:	f3bf 8f4f 	dsb	sy
 8008b92:	e7fe      	b.n	8008b92 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8008b94:	26ac      	movs	r6, #172	@ 0xac
 8008b96:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8008b98:	9e05      	ldr	r6, [sp, #20]
 8008b9a:	2eac      	cmp	r6, #172	@ 0xac
 8008b9c:	d008      	beq.n	8008bb0 <xTaskCreateStatic+0x4c>
 8008b9e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008ba2:	f383 8811 	msr	BASEPRI, r3
 8008ba6:	f3bf 8f6f 	isb	sy
 8008baa:	f3bf 8f4f 	dsb	sy
 8008bae:	e7fe      	b.n	8008bae <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8008bb0:	6325      	str	r5, [r4, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8008bb2:	2502      	movs	r5, #2
 8008bb4:	f884 50a9 	strb.w	r5, [r4, #169]	@ 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8008bb8:	ad04      	add	r5, sp, #16
 8008bba:	9501      	str	r5, [sp, #4]
 8008bbc:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8008bbe:	9402      	str	r4, [sp, #8]
 8008bc0:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8008bc2:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8008bc4:	f7ff ff70 	bl	8008aa8 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008bc8:	4620      	mov	r0, r4
 8008bca:	f7ff fe55 	bl	8008878 <prvAddNewTaskToReadyList>
	}
 8008bce:	9804      	ldr	r0, [sp, #16]
 8008bd0:	b006      	add	sp, #24
 8008bd2:	bd70      	pop	{r4, r5, r6, pc}

08008bd4 <xTaskCreate>:
	{
 8008bd4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008bd8:	4607      	mov	r7, r0
 8008bda:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008bdc:	0090      	lsls	r0, r2, #2
	{
 8008bde:	4688      	mov	r8, r1
 8008be0:	4616      	mov	r6, r2
 8008be2:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008be4:	f7fe fe82 	bl	80078ec <pvPortMalloc>
			if( pxStack != NULL )
 8008be8:	4605      	mov	r5, r0
 8008bea:	b920      	cbnz	r0, 8008bf6 <xTaskCreate+0x22>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8008bec:	f04f 30ff 	mov.w	r0, #4294967295
	}
 8008bf0:	b005      	add	sp, #20
 8008bf2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8008bf6:	20ac      	movs	r0, #172	@ 0xac
 8008bf8:	f7fe fe78 	bl	80078ec <pvPortMalloc>
				if( pxNewTCB != NULL )
 8008bfc:	4604      	mov	r4, r0
 8008bfe:	b198      	cbz	r0, 8008c28 <xTaskCreate+0x54>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8008c00:	2300      	movs	r3, #0
 8008c02:	f880 30a9 	strb.w	r3, [r0, #169]	@ 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8008c06:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
					pxNewTCB->pxStack = pxStack;
 8008c08:	6305      	str	r5, [r0, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8008c0a:	9301      	str	r3, [sp, #4]
 8008c0c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8008c0e:	9002      	str	r0, [sp, #8]
 8008c10:	9300      	str	r3, [sp, #0]
 8008c12:	4632      	mov	r2, r6
 8008c14:	464b      	mov	r3, r9
 8008c16:	4641      	mov	r1, r8
 8008c18:	4638      	mov	r0, r7
 8008c1a:	f7ff ff45 	bl	8008aa8 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008c1e:	4620      	mov	r0, r4
 8008c20:	f7ff fe2a 	bl	8008878 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8008c24:	2001      	movs	r0, #1
 8008c26:	e7e3      	b.n	8008bf0 <xTaskCreate+0x1c>
					vPortFree( pxStack );
 8008c28:	4628      	mov	r0, r5
 8008c2a:	f7fe fef7 	bl	8007a1c <vPortFree>
		if( pxNewTCB != NULL )
 8008c2e:	e7dd      	b.n	8008bec <xTaskCreate+0x18>

08008c30 <vTaskStartScheduler>:
{
 8008c30:	b510      	push	{r4, lr}
 8008c32:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8008c34:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008c36:	aa07      	add	r2, sp, #28
 8008c38:	a906      	add	r1, sp, #24
 8008c3a:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8008c3c:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008c40:	f7fe fe16 	bl	8007870 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8008c44:	9b05      	ldr	r3, [sp, #20]
 8008c46:	9302      	str	r3, [sp, #8]
 8008c48:	9b06      	ldr	r3, [sp, #24]
 8008c4a:	9a07      	ldr	r2, [sp, #28]
 8008c4c:	4919      	ldr	r1, [pc, #100]	@ (8008cb4 <vTaskStartScheduler+0x84>)
 8008c4e:	481a      	ldr	r0, [pc, #104]	@ (8008cb8 <vTaskStartScheduler+0x88>)
 8008c50:	e9cd 4300 	strd	r4, r3, [sp]
 8008c54:	4623      	mov	r3, r4
 8008c56:	f7ff ff85 	bl	8008b64 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8008c5a:	b340      	cbz	r0, 8008cae <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 8008c5c:	f000 fbb6 	bl	80093cc <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8008c60:	2801      	cmp	r0, #1
 8008c62:	d119      	bne.n	8008c98 <vTaskStartScheduler+0x68>
 8008c64:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c68:	f383 8811 	msr	BASEPRI, r3
 8008c6c:	f3bf 8f6f 	isb	sy
 8008c70:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8008c74:	4b11      	ldr	r3, [pc, #68]	@ (8008cbc <vTaskStartScheduler+0x8c>)
 8008c76:	4a12      	ldr	r2, [pc, #72]	@ (8008cc0 <vTaskStartScheduler+0x90>)
 8008c78:	681b      	ldr	r3, [r3, #0]
 8008c7a:	3358      	adds	r3, #88	@ 0x58
 8008c7c:	6013      	str	r3, [r2, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 8008c7e:	4b11      	ldr	r3, [pc, #68]	@ (8008cc4 <vTaskStartScheduler+0x94>)
 8008c80:	f04f 32ff 	mov.w	r2, #4294967295
 8008c84:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8008c86:	4b10      	ldr	r3, [pc, #64]	@ (8008cc8 <vTaskStartScheduler+0x98>)
 8008c88:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8008c8a:	4b10      	ldr	r3, [pc, #64]	@ (8008ccc <vTaskStartScheduler+0x9c>)
 8008c8c:	601c      	str	r4, [r3, #0]
}
 8008c8e:	b008      	add	sp, #32
 8008c90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8008c94:	f7ff b836 	b.w	8007d04 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8008c98:	3001      	adds	r0, #1
 8008c9a:	d108      	bne.n	8008cae <vTaskStartScheduler+0x7e>
 8008c9c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008ca0:	f383 8811 	msr	BASEPRI, r3
 8008ca4:	f3bf 8f6f 	isb	sy
 8008ca8:	f3bf 8f4f 	dsb	sy
 8008cac:	e7fe      	b.n	8008cac <vTaskStartScheduler+0x7c>
}
 8008cae:	b008      	add	sp, #32
 8008cb0:	bd10      	pop	{r4, pc}
 8008cb2:	bf00      	nop
 8008cb4:	08020250 	.word	0x08020250
 8008cb8:	08008a49 	.word	0x08008a49
 8008cbc:	200118c0 	.word	0x200118c0
 8008cc0:	20000110 	.word	0x20000110
 8008cc4:	200113cc 	.word	0x200113cc
 8008cc8:	200113e0 	.word	0x200113e0
 8008ccc:	200113e8 	.word	0x200113e8

08008cd0 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8008cd0:	4a02      	ldr	r2, [pc, #8]	@ (8008cdc <vTaskSuspendAll+0xc>)
 8008cd2:	6813      	ldr	r3, [r2, #0]
 8008cd4:	3301      	adds	r3, #1
 8008cd6:	6013      	str	r3, [r2, #0]
}
 8008cd8:	4770      	bx	lr
 8008cda:	bf00      	nop
 8008cdc:	200113c8 	.word	0x200113c8

08008ce0 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8008ce0:	4b01      	ldr	r3, [pc, #4]	@ (8008ce8 <xTaskGetTickCount+0x8>)
 8008ce2:	6818      	ldr	r0, [r3, #0]
}
 8008ce4:	4770      	bx	lr
 8008ce6:	bf00      	nop
 8008ce8:	200113e8 	.word	0x200113e8

08008cec <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008cec:	4b3f      	ldr	r3, [pc, #252]	@ (8008dec <xTaskIncrementTick+0x100>)
 8008cee:	681b      	ldr	r3, [r3, #0]
{
 8008cf0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008cf4:	2b00      	cmp	r3, #0
 8008cf6:	d172      	bne.n	8008dde <xTaskIncrementTick+0xf2>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8008cf8:	4b3d      	ldr	r3, [pc, #244]	@ (8008df0 <xTaskIncrementTick+0x104>)
 8008cfa:	681c      	ldr	r4, [r3, #0]
 8008cfc:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 8008cfe:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8008d00:	b9bc      	cbnz	r4, 8008d32 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8008d02:	4b3c      	ldr	r3, [pc, #240]	@ (8008df4 <xTaskIncrementTick+0x108>)
 8008d04:	681a      	ldr	r2, [r3, #0]
 8008d06:	6812      	ldr	r2, [r2, #0]
 8008d08:	b142      	cbz	r2, 8008d1c <xTaskIncrementTick+0x30>
 8008d0a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d0e:	f383 8811 	msr	BASEPRI, r3
 8008d12:	f3bf 8f6f 	isb	sy
 8008d16:	f3bf 8f4f 	dsb	sy
 8008d1a:	e7fe      	b.n	8008d1a <xTaskIncrementTick+0x2e>
 8008d1c:	4a36      	ldr	r2, [pc, #216]	@ (8008df8 <xTaskIncrementTick+0x10c>)
 8008d1e:	6819      	ldr	r1, [r3, #0]
 8008d20:	6810      	ldr	r0, [r2, #0]
 8008d22:	6018      	str	r0, [r3, #0]
 8008d24:	6011      	str	r1, [r2, #0]
 8008d26:	4a35      	ldr	r2, [pc, #212]	@ (8008dfc <xTaskIncrementTick+0x110>)
 8008d28:	6813      	ldr	r3, [r2, #0]
 8008d2a:	3301      	adds	r3, #1
 8008d2c:	6013      	str	r3, [r2, #0]
 8008d2e:	f7ff fe5b 	bl	80089e8 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008d32:	4d33      	ldr	r5, [pc, #204]	@ (8008e00 <xTaskIncrementTick+0x114>)
 8008d34:	4e33      	ldr	r6, [pc, #204]	@ (8008e04 <xTaskIncrementTick+0x118>)
 8008d36:	682b      	ldr	r3, [r5, #0]
 8008d38:	4f33      	ldr	r7, [pc, #204]	@ (8008e08 <xTaskIncrementTick+0x11c>)
 8008d3a:	429c      	cmp	r4, r3
BaseType_t xSwitchRequired = pdFALSE;
 8008d3c:	f04f 0b00 	mov.w	fp, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008d40:	d212      	bcs.n	8008d68 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8008d42:	683a      	ldr	r2, [r7, #0]
 8008d44:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8008d46:	2114      	movs	r1, #20
 8008d48:	434a      	muls	r2, r1
 8008d4a:	58b2      	ldr	r2, [r6, r2]
				xSwitchRequired = pdTRUE;
 8008d4c:	2a02      	cmp	r2, #2
			if( xYieldPending != pdFALSE )
 8008d4e:	4a2f      	ldr	r2, [pc, #188]	@ (8008e0c <xTaskIncrementTick+0x120>)
 8008d50:	6812      	ldr	r2, [r2, #0]
				xSwitchRequired = pdTRUE;
 8008d52:	bf28      	it	cs
 8008d54:	f04f 0b01 	movcs.w	fp, #1
				xSwitchRequired = pdTRUE;
 8008d58:	2a00      	cmp	r2, #0
 8008d5a:	bf18      	it	ne
 8008d5c:	f04f 0b01 	movne.w	fp, #1
}
 8008d60:	4658      	mov	r0, fp
 8008d62:	b003      	add	sp, #12
 8008d64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008d68:	f8df 9088 	ldr.w	r9, [pc, #136]	@ 8008df4 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8008d6c:	f8df a0a4 	ldr.w	sl, [pc, #164]	@ 8008e14 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008d70:	f8d9 2000 	ldr.w	r2, [r9]
 8008d74:	6812      	ldr	r2, [r2, #0]
 8008d76:	b91a      	cbnz	r2, 8008d80 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008d78:	f04f 32ff 	mov.w	r2, #4294967295
 8008d7c:	602a      	str	r2, [r5, #0]
					break;
 8008d7e:	e7e0      	b.n	8008d42 <xTaskIncrementTick+0x56>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008d80:	f8d9 2000 	ldr.w	r2, [r9]
 8008d84:	68d2      	ldr	r2, [r2, #12]
 8008d86:	f8d2 800c 	ldr.w	r8, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8008d8a:	f8d8 1004 	ldr.w	r1, [r8, #4]
					if( xConstTickCount < xItemValue )
 8008d8e:	428c      	cmp	r4, r1
 8008d90:	d201      	bcs.n	8008d96 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8008d92:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8008d94:	e7d5      	b.n	8008d42 <xTaskIncrementTick+0x56>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008d96:	f108 0304 	add.w	r3, r8, #4
 8008d9a:	4618      	mov	r0, r3
 8008d9c:	9301      	str	r3, [sp, #4]
 8008d9e:	f7fe feab 	bl	8007af8 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8008da2:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 8008da6:	b119      	cbz	r1, 8008db0 <xTaskIncrementTick+0xc4>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008da8:	f108 0018 	add.w	r0, r8, #24
 8008dac:	f7fe fea4 	bl	8007af8 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008db0:	f8d8 002c 	ldr.w	r0, [r8, #44]	@ 0x2c
 8008db4:	f8da 1000 	ldr.w	r1, [sl]
 8008db8:	2314      	movs	r3, #20
 8008dba:	4288      	cmp	r0, r1
 8008dbc:	bf88      	it	hi
 8008dbe:	f8ca 0000 	strhi.w	r0, [sl]
 8008dc2:	9901      	ldr	r1, [sp, #4]
 8008dc4:	fb03 6000 	mla	r0, r3, r0, r6
 8008dc8:	f7fe fe74 	bl	8007ab4 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008dcc:	6838      	ldr	r0, [r7, #0]
 8008dce:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 8008dd2:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
							xSwitchRequired = pdTRUE;
 8008dd4:	4291      	cmp	r1, r2
 8008dd6:	bf28      	it	cs
 8008dd8:	f04f 0b01 	movcs.w	fp, #1
 8008ddc:	e7c8      	b.n	8008d70 <xTaskIncrementTick+0x84>
		++xPendedTicks;
 8008dde:	4a0c      	ldr	r2, [pc, #48]	@ (8008e10 <xTaskIncrementTick+0x124>)
 8008de0:	6813      	ldr	r3, [r2, #0]
 8008de2:	3301      	adds	r3, #1
 8008de4:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8008de6:	f04f 0b00 	mov.w	fp, #0
 8008dea:	e7b9      	b.n	8008d60 <xTaskIncrementTick+0x74>
 8008dec:	200113c8 	.word	0x200113c8
 8008df0:	200113e8 	.word	0x200113e8
 8008df4:	20011434 	.word	0x20011434
 8008df8:	20011430 	.word	0x20011430
 8008dfc:	200113d4 	.word	0x200113d4
 8008e00:	200113cc 	.word	0x200113cc
 8008e04:	20011460 	.word	0x20011460
 8008e08:	200118c0 	.word	0x200118c0
 8008e0c:	200113d8 	.word	0x200113d8
 8008e10:	200113dc 	.word	0x200113dc
 8008e14:	200113e4 	.word	0x200113e4

08008e18 <xTaskResumeAll>:
{
 8008e18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 8008e1c:	4c30      	ldr	r4, [pc, #192]	@ (8008ee0 <xTaskResumeAll+0xc8>)
 8008e1e:	6823      	ldr	r3, [r4, #0]
 8008e20:	b943      	cbnz	r3, 8008e34 <xTaskResumeAll+0x1c>
 8008e22:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e26:	f383 8811 	msr	BASEPRI, r3
 8008e2a:	f3bf 8f6f 	isb	sy
 8008e2e:	f3bf 8f4f 	dsb	sy
 8008e32:	e7fe      	b.n	8008e32 <xTaskResumeAll+0x1a>
	taskENTER_CRITICAL();
 8008e34:	f7fe fed6 	bl	8007be4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8008e38:	6823      	ldr	r3, [r4, #0]
 8008e3a:	3b01      	subs	r3, #1
 8008e3c:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008e3e:	6824      	ldr	r4, [r4, #0]
 8008e40:	b12c      	cbz	r4, 8008e4e <xTaskResumeAll+0x36>
BaseType_t xAlreadyYielded = pdFALSE;
 8008e42:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008e44:	f7fe feee 	bl	8007c24 <vPortExitCritical>
}
 8008e48:	4620      	mov	r0, r4
 8008e4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8008e4e:	4b25      	ldr	r3, [pc, #148]	@ (8008ee4 <xTaskResumeAll+0xcc>)
 8008e50:	681b      	ldr	r3, [r3, #0]
 8008e52:	2b00      	cmp	r3, #0
 8008e54:	d0f5      	beq.n	8008e42 <xTaskResumeAll+0x2a>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008e56:	4d24      	ldr	r5, [pc, #144]	@ (8008ee8 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8008e58:	4e24      	ldr	r6, [pc, #144]	@ (8008eec <xTaskResumeAll+0xd4>)
 8008e5a:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 8008efc <xTaskResumeAll+0xe4>
 8008e5e:	e01d      	b.n	8008e9c <xTaskResumeAll+0x84>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008e60:	68eb      	ldr	r3, [r5, #12]
 8008e62:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008e64:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008e66:	f104 0018 	add.w	r0, r4, #24
 8008e6a:	f7fe fe45 	bl	8007af8 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008e6e:	4638      	mov	r0, r7
 8008e70:	f7fe fe42 	bl	8007af8 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008e74:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008e76:	6832      	ldr	r2, [r6, #0]
 8008e78:	2014      	movs	r0, #20
 8008e7a:	4293      	cmp	r3, r2
 8008e7c:	fb00 8003 	mla	r0, r0, r3, r8
 8008e80:	4639      	mov	r1, r7
 8008e82:	bf88      	it	hi
 8008e84:	6033      	strhi	r3, [r6, #0]
 8008e86:	f7fe fe15 	bl	8007ab4 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008e8a:	4b19      	ldr	r3, [pc, #100]	@ (8008ef0 <xTaskResumeAll+0xd8>)
 8008e8c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8008e8e:	681b      	ldr	r3, [r3, #0]
 8008e90:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008e92:	429a      	cmp	r2, r3
 8008e94:	d302      	bcc.n	8008e9c <xTaskResumeAll+0x84>
						xYieldPending = pdTRUE;
 8008e96:	4b17      	ldr	r3, [pc, #92]	@ (8008ef4 <xTaskResumeAll+0xdc>)
 8008e98:	2201      	movs	r2, #1
 8008e9a:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008e9c:	682b      	ldr	r3, [r5, #0]
 8008e9e:	2b00      	cmp	r3, #0
 8008ea0:	d1de      	bne.n	8008e60 <xTaskResumeAll+0x48>
				if( pxTCB != NULL )
 8008ea2:	b10c      	cbz	r4, 8008ea8 <xTaskResumeAll+0x90>
					prvResetNextTaskUnblockTime();
 8008ea4:	f7ff fda0 	bl	80089e8 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8008ea8:	4d13      	ldr	r5, [pc, #76]	@ (8008ef8 <xTaskResumeAll+0xe0>)
 8008eaa:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 8008eac:	b144      	cbz	r4, 8008ec0 <xTaskResumeAll+0xa8>
								xYieldPending = pdTRUE;
 8008eae:	4e11      	ldr	r6, [pc, #68]	@ (8008ef4 <xTaskResumeAll+0xdc>)
 8008eb0:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8008eb2:	f7ff ff1b 	bl	8008cec <xTaskIncrementTick>
 8008eb6:	b100      	cbz	r0, 8008eba <xTaskResumeAll+0xa2>
								xYieldPending = pdTRUE;
 8008eb8:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8008eba:	3c01      	subs	r4, #1
 8008ebc:	d1f9      	bne.n	8008eb2 <xTaskResumeAll+0x9a>
						xPendedTicks = 0;
 8008ebe:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8008ec0:	4b0c      	ldr	r3, [pc, #48]	@ (8008ef4 <xTaskResumeAll+0xdc>)
 8008ec2:	681b      	ldr	r3, [r3, #0]
 8008ec4:	2b00      	cmp	r3, #0
 8008ec6:	d0bc      	beq.n	8008e42 <xTaskResumeAll+0x2a>
					taskYIELD_IF_USING_PREEMPTION();
 8008ec8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008ecc:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008ed0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008ed4:	f3bf 8f4f 	dsb	sy
 8008ed8:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8008edc:	2401      	movs	r4, #1
 8008ede:	e7b1      	b.n	8008e44 <xTaskResumeAll+0x2c>
 8008ee0:	200113c8 	.word	0x200113c8
 8008ee4:	200113ec 	.word	0x200113ec
 8008ee8:	2001141c 	.word	0x2001141c
 8008eec:	200113e4 	.word	0x200113e4
 8008ef0:	200118c0 	.word	0x200118c0
 8008ef4:	200113d8 	.word	0x200113d8
 8008ef8:	200113dc 	.word	0x200113dc
 8008efc:	20011460 	.word	0x20011460

08008f00 <vTaskDelay>:
	{
 8008f00:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8008f02:	b950      	cbnz	r0, 8008f1a <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8008f04:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008f08:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008f0c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008f10:	f3bf 8f4f 	dsb	sy
 8008f14:	f3bf 8f6f 	isb	sy
	}
 8008f18:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8008f1a:	4b0a      	ldr	r3, [pc, #40]	@ (8008f44 <vTaskDelay+0x44>)
 8008f1c:	6819      	ldr	r1, [r3, #0]
 8008f1e:	b141      	cbz	r1, 8008f32 <vTaskDelay+0x32>
 8008f20:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008f24:	f383 8811 	msr	BASEPRI, r3
 8008f28:	f3bf 8f6f 	isb	sy
 8008f2c:	f3bf 8f4f 	dsb	sy
 8008f30:	e7fe      	b.n	8008f30 <vTaskDelay+0x30>
			vTaskSuspendAll();
 8008f32:	f7ff fecd 	bl	8008cd0 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8008f36:	f7ff fd1f 	bl	8008978 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8008f3a:	f7ff ff6d 	bl	8008e18 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8008f3e:	2800      	cmp	r0, #0
 8008f40:	d0e0      	beq.n	8008f04 <vTaskDelay+0x4>
 8008f42:	e7e9      	b.n	8008f18 <vTaskDelay+0x18>
 8008f44:	200113c8 	.word	0x200113c8

08008f48 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8008f48:	4b19      	ldr	r3, [pc, #100]	@ (8008fb0 <vTaskSwitchContext+0x68>)
 8008f4a:	681a      	ldr	r2, [r3, #0]
 8008f4c:	4b19      	ldr	r3, [pc, #100]	@ (8008fb4 <vTaskSwitchContext+0x6c>)
{
 8008f4e:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8008f50:	b112      	cbz	r2, 8008f58 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8008f52:	2201      	movs	r2, #1
 8008f54:	601a      	str	r2, [r3, #0]
}
 8008f56:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008f58:	4d17      	ldr	r5, [pc, #92]	@ (8008fb8 <vTaskSwitchContext+0x70>)
		xYieldPending = pdFALSE;
 8008f5a:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008f5c:	682a      	ldr	r2, [r5, #0]
 8008f5e:	4917      	ldr	r1, [pc, #92]	@ (8008fbc <vTaskSwitchContext+0x74>)
 8008f60:	2614      	movs	r6, #20
 8008f62:	fb06 f302 	mul.w	r3, r6, r2
 8008f66:	18c8      	adds	r0, r1, r3
 8008f68:	58cc      	ldr	r4, [r1, r3]
 8008f6a:	b1ac      	cbz	r4, 8008f98 <vTaskSwitchContext+0x50>
 8008f6c:	6844      	ldr	r4, [r0, #4]
 8008f6e:	3308      	adds	r3, #8
 8008f70:	6864      	ldr	r4, [r4, #4]
 8008f72:	6044      	str	r4, [r0, #4]
 8008f74:	440b      	add	r3, r1
 8008f76:	429c      	cmp	r4, r3
 8008f78:	bf04      	itt	eq
 8008f7a:	6863      	ldreq	r3, [r4, #4]
 8008f7c:	6043      	streq	r3, [r0, #4]
 8008f7e:	2314      	movs	r3, #20
 8008f80:	fb03 1102 	mla	r1, r3, r2, r1
 8008f84:	684b      	ldr	r3, [r1, #4]
 8008f86:	68d9      	ldr	r1, [r3, #12]
 8008f88:	4b0d      	ldr	r3, [pc, #52]	@ (8008fc0 <vTaskSwitchContext+0x78>)
 8008f8a:	6019      	str	r1, [r3, #0]
 8008f8c:	602a      	str	r2, [r5, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8008f8e:	681b      	ldr	r3, [r3, #0]
 8008f90:	4a0c      	ldr	r2, [pc, #48]	@ (8008fc4 <vTaskSwitchContext+0x7c>)
 8008f92:	3358      	adds	r3, #88	@ 0x58
 8008f94:	6013      	str	r3, [r2, #0]
}
 8008f96:	e7de      	b.n	8008f56 <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008f98:	b942      	cbnz	r2, 8008fac <vTaskSwitchContext+0x64>
 8008f9a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008f9e:	f383 8811 	msr	BASEPRI, r3
 8008fa2:	f3bf 8f6f 	isb	sy
 8008fa6:	f3bf 8f4f 	dsb	sy
 8008faa:	e7fe      	b.n	8008faa <vTaskSwitchContext+0x62>
 8008fac:	3a01      	subs	r2, #1
 8008fae:	e7d8      	b.n	8008f62 <vTaskSwitchContext+0x1a>
 8008fb0:	200113c8 	.word	0x200113c8
 8008fb4:	200113d8 	.word	0x200113d8
 8008fb8:	200113e4 	.word	0x200113e4
 8008fbc:	20011460 	.word	0x20011460
 8008fc0:	200118c0 	.word	0x200118c0
 8008fc4:	20000110 	.word	0x20000110

08008fc8 <vTaskPlaceOnEventList>:
{
 8008fc8:	b510      	push	{r4, lr}
 8008fca:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8008fcc:	b940      	cbnz	r0, 8008fe0 <vTaskPlaceOnEventList+0x18>
 8008fce:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008fd2:	f383 8811 	msr	BASEPRI, r3
 8008fd6:	f3bf 8f6f 	isb	sy
 8008fda:	f3bf 8f4f 	dsb	sy
 8008fde:	e7fe      	b.n	8008fde <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008fe0:	4b05      	ldr	r3, [pc, #20]	@ (8008ff8 <vTaskPlaceOnEventList+0x30>)
 8008fe2:	6819      	ldr	r1, [r3, #0]
 8008fe4:	3118      	adds	r1, #24
 8008fe6:	f7fe fd70 	bl	8007aca <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008fea:	4620      	mov	r0, r4
 8008fec:	2101      	movs	r1, #1
}
 8008fee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008ff2:	f7ff bcc1 	b.w	8008978 <prvAddCurrentTaskToDelayedList>
 8008ff6:	bf00      	nop
 8008ff8:	200118c0 	.word	0x200118c0

08008ffc <vTaskPlaceOnEventListRestricted>:
	{
 8008ffc:	b538      	push	{r3, r4, r5, lr}
 8008ffe:	460d      	mov	r5, r1
 8009000:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8009002:	b940      	cbnz	r0, 8009016 <vTaskPlaceOnEventListRestricted+0x1a>
 8009004:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009008:	f383 8811 	msr	BASEPRI, r3
 800900c:	f3bf 8f6f 	isb	sy
 8009010:	f3bf 8f4f 	dsb	sy
 8009014:	e7fe      	b.n	8009014 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009016:	4b07      	ldr	r3, [pc, #28]	@ (8009034 <vTaskPlaceOnEventListRestricted+0x38>)
 8009018:	6819      	ldr	r1, [r3, #0]
 800901a:	3118      	adds	r1, #24
 800901c:	f7fe fd4a 	bl	8007ab4 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8009020:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8009022:	4621      	mov	r1, r4
 8009024:	bf0c      	ite	eq
 8009026:	4628      	moveq	r0, r5
 8009028:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800902c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8009030:	f7ff bca2 	b.w	8008978 <prvAddCurrentTaskToDelayedList>
 8009034:	200118c0 	.word	0x200118c0

08009038 <xTaskRemoveFromEventList>:
{
 8009038:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800903a:	68c3      	ldr	r3, [r0, #12]
 800903c:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800903e:	b944      	cbnz	r4, 8009052 <xTaskRemoveFromEventList+0x1a>
 8009040:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009044:	f383 8811 	msr	BASEPRI, r3
 8009048:	f3bf 8f6f 	isb	sy
 800904c:	f3bf 8f4f 	dsb	sy
 8009050:	e7fe      	b.n	8009050 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8009052:	f104 0518 	add.w	r5, r4, #24
 8009056:	4628      	mov	r0, r5
 8009058:	f7fe fd4e 	bl	8007af8 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800905c:	4b10      	ldr	r3, [pc, #64]	@ (80090a0 <xTaskRemoveFromEventList+0x68>)
 800905e:	681b      	ldr	r3, [r3, #0]
 8009060:	b9db      	cbnz	r3, 800909a <xTaskRemoveFromEventList+0x62>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8009062:	1d25      	adds	r5, r4, #4
 8009064:	4628      	mov	r0, r5
 8009066:	f7fe fd47 	bl	8007af8 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800906a:	4a0e      	ldr	r2, [pc, #56]	@ (80090a4 <xTaskRemoveFromEventList+0x6c>)
 800906c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800906e:	6811      	ldr	r1, [r2, #0]
 8009070:	428b      	cmp	r3, r1
 8009072:	bf88      	it	hi
 8009074:	6013      	strhi	r3, [r2, #0]
 8009076:	4a0c      	ldr	r2, [pc, #48]	@ (80090a8 <xTaskRemoveFromEventList+0x70>)
 8009078:	2014      	movs	r0, #20
 800907a:	4629      	mov	r1, r5
 800907c:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8009080:	f7fe fd18 	bl	8007ab4 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8009084:	4b09      	ldr	r3, [pc, #36]	@ (80090ac <xTaskRemoveFromEventList+0x74>)
 8009086:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8009088:	681b      	ldr	r3, [r3, #0]
 800908a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800908c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800908e:	bf83      	ittte	hi
 8009090:	4b07      	ldrhi	r3, [pc, #28]	@ (80090b0 <xTaskRemoveFromEventList+0x78>)
 8009092:	2001      	movhi	r0, #1
 8009094:	6018      	strhi	r0, [r3, #0]
		xReturn = pdFALSE;
 8009096:	2000      	movls	r0, #0
}
 8009098:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800909a:	4806      	ldr	r0, [pc, #24]	@ (80090b4 <xTaskRemoveFromEventList+0x7c>)
 800909c:	4629      	mov	r1, r5
 800909e:	e7ef      	b.n	8009080 <xTaskRemoveFromEventList+0x48>
 80090a0:	200113c8 	.word	0x200113c8
 80090a4:	200113e4 	.word	0x200113e4
 80090a8:	20011460 	.word	0x20011460
 80090ac:	200118c0 	.word	0x200118c0
 80090b0:	200113d8 	.word	0x200113d8
 80090b4:	2001141c 	.word	0x2001141c

080090b8 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 80090b8:	4b03      	ldr	r3, [pc, #12]	@ (80090c8 <vTaskInternalSetTimeOutState+0x10>)
 80090ba:	681b      	ldr	r3, [r3, #0]
 80090bc:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 80090be:	4b03      	ldr	r3, [pc, #12]	@ (80090cc <vTaskInternalSetTimeOutState+0x14>)
 80090c0:	681b      	ldr	r3, [r3, #0]
 80090c2:	6043      	str	r3, [r0, #4]
}
 80090c4:	4770      	bx	lr
 80090c6:	bf00      	nop
 80090c8:	200113d4 	.word	0x200113d4
 80090cc:	200113e8 	.word	0x200113e8

080090d0 <xTaskCheckForTimeOut>:
{
 80090d0:	b570      	push	{r4, r5, r6, lr}
 80090d2:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 80090d4:	4605      	mov	r5, r0
 80090d6:	b940      	cbnz	r0, 80090ea <xTaskCheckForTimeOut+0x1a>
 80090d8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80090dc:	f383 8811 	msr	BASEPRI, r3
 80090e0:	f3bf 8f6f 	isb	sy
 80090e4:	f3bf 8f4f 	dsb	sy
 80090e8:	e7fe      	b.n	80090e8 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 80090ea:	b941      	cbnz	r1, 80090fe <xTaskCheckForTimeOut+0x2e>
 80090ec:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80090f0:	f383 8811 	msr	BASEPRI, r3
 80090f4:	f3bf 8f6f 	isb	sy
 80090f8:	f3bf 8f4f 	dsb	sy
 80090fc:	e7fe      	b.n	80090fc <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 80090fe:	f7fe fd71 	bl	8007be4 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8009102:	4b0f      	ldr	r3, [pc, #60]	@ (8009140 <xTaskCheckForTimeOut+0x70>)
 8009104:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8009106:	6823      	ldr	r3, [r4, #0]
 8009108:	1c5a      	adds	r2, r3, #1
 800910a:	d010      	beq.n	800912e <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800910c:	480d      	ldr	r0, [pc, #52]	@ (8009144 <xTaskCheckForTimeOut+0x74>)
 800910e:	682e      	ldr	r6, [r5, #0]
 8009110:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8009112:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8009114:	4286      	cmp	r6, r0
 8009116:	d001      	beq.n	800911c <xTaskCheckForTimeOut+0x4c>
 8009118:	428a      	cmp	r2, r1
 800911a:	d90f      	bls.n	800913c <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800911c:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800911e:	4283      	cmp	r3, r0
 8009120:	d90a      	bls.n	8009138 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8009122:	1a5b      	subs	r3, r3, r1
 8009124:	4413      	add	r3, r2
 8009126:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8009128:	4628      	mov	r0, r5
 800912a:	f7ff ffc5 	bl	80090b8 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800912e:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009130:	f7fe fd78 	bl	8007c24 <vPortExitCritical>
}
 8009134:	4620      	mov	r0, r4
 8009136:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8009138:	2300      	movs	r3, #0
 800913a:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800913c:	2401      	movs	r4, #1
 800913e:	e7f7      	b.n	8009130 <xTaskCheckForTimeOut+0x60>
 8009140:	200113e8 	.word	0x200113e8
 8009144:	200113d4 	.word	0x200113d4

08009148 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8009148:	4b01      	ldr	r3, [pc, #4]	@ (8009150 <vTaskMissedYield+0x8>)
 800914a:	2201      	movs	r2, #1
 800914c:	601a      	str	r2, [r3, #0]
}
 800914e:	4770      	bx	lr
 8009150:	200113d8 	.word	0x200113d8

08009154 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8009154:	4b05      	ldr	r3, [pc, #20]	@ (800916c <xTaskGetSchedulerState+0x18>)
 8009156:	681b      	ldr	r3, [r3, #0]
 8009158:	b133      	cbz	r3, 8009168 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800915a:	4b05      	ldr	r3, [pc, #20]	@ (8009170 <xTaskGetSchedulerState+0x1c>)
 800915c:	6818      	ldr	r0, [r3, #0]
 800915e:	fab0 f080 	clz	r0, r0
 8009162:	0940      	lsrs	r0, r0, #5
 8009164:	0040      	lsls	r0, r0, #1
 8009166:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8009168:	2001      	movs	r0, #1
	}
 800916a:	4770      	bx	lr
 800916c:	200113e0 	.word	0x200113e0
 8009170:	200113c8 	.word	0x200113c8

08009174 <xTaskPriorityInherit>:
	{
 8009174:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 8009176:	4604      	mov	r4, r0
 8009178:	b338      	cbz	r0, 80091ca <xTaskPriorityInherit+0x56>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800917a:	4d1a      	ldr	r5, [pc, #104]	@ (80091e4 <xTaskPriorityInherit+0x70>)
 800917c:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800917e:	682a      	ldr	r2, [r5, #0]
 8009180:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8009182:	4293      	cmp	r3, r2
 8009184:	d226      	bcs.n	80091d4 <xTaskPriorityInherit+0x60>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009186:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8009188:	4e17      	ldr	r6, [pc, #92]	@ (80091e8 <xTaskPriorityInherit+0x74>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800918a:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800918c:	bfa1      	itttt	ge
 800918e:	682a      	ldrge	r2, [r5, #0]
 8009190:	6ad2      	ldrge	r2, [r2, #44]	@ 0x2c
 8009192:	f1c2 0238 	rsbge	r2, r2, #56	@ 0x38
 8009196:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8009198:	2214      	movs	r2, #20
 800919a:	fb02 6303 	mla	r3, r2, r3, r6
 800919e:	6942      	ldr	r2, [r0, #20]
 80091a0:	429a      	cmp	r2, r3
 80091a2:	d113      	bne.n	80091cc <xTaskPriorityInherit+0x58>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80091a4:	1d07      	adds	r7, r0, #4
 80091a6:	4638      	mov	r0, r7
 80091a8:	f7fe fca6 	bl	8007af8 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80091ac:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80091ae:	4a0f      	ldr	r2, [pc, #60]	@ (80091ec <xTaskPriorityInherit+0x78>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80091b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80091b2:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80091b4:	62e3      	str	r3, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80091b6:	2014      	movs	r0, #20
 80091b8:	428b      	cmp	r3, r1
 80091ba:	fb00 6003 	mla	r0, r0, r3, r6
 80091be:	4639      	mov	r1, r7
 80091c0:	bf88      	it	hi
 80091c2:	6013      	strhi	r3, [r2, #0]
 80091c4:	f7fe fc76 	bl	8007ab4 <vListInsertEnd>
				xReturn = pdTRUE;
 80091c8:	2001      	movs	r0, #1
	}
 80091ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80091cc:	682b      	ldr	r3, [r5, #0]
 80091ce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80091d0:	62c3      	str	r3, [r0, #44]	@ 0x2c
 80091d2:	e7f9      	b.n	80091c8 <xTaskPriorityInherit+0x54>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 80091d4:	682b      	ldr	r3, [r5, #0]
 80091d6:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 80091d8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80091da:	4298      	cmp	r0, r3
 80091dc:	bf2c      	ite	cs
 80091de:	2000      	movcs	r0, #0
 80091e0:	2001      	movcc	r0, #1
 80091e2:	e7f2      	b.n	80091ca <xTaskPriorityInherit+0x56>
 80091e4:	200118c0 	.word	0x200118c0
 80091e8:	20011460 	.word	0x20011460
 80091ec:	200113e4 	.word	0x200113e4

080091f0 <xTaskPriorityDisinherit>:
	{
 80091f0:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 80091f2:	b908      	cbnz	r0, 80091f8 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 80091f4:	2000      	movs	r0, #0
	}
 80091f6:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 80091f8:	4b1b      	ldr	r3, [pc, #108]	@ (8009268 <xTaskPriorityDisinherit+0x78>)
 80091fa:	681c      	ldr	r4, [r3, #0]
 80091fc:	4284      	cmp	r4, r0
 80091fe:	d008      	beq.n	8009212 <xTaskPriorityDisinherit+0x22>
 8009200:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009204:	f383 8811 	msr	BASEPRI, r3
 8009208:	f3bf 8f6f 	isb	sy
 800920c:	f3bf 8f4f 	dsb	sy
 8009210:	e7fe      	b.n	8009210 <xTaskPriorityDisinherit+0x20>
			configASSERT( pxTCB->uxMutexesHeld );
 8009212:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8009214:	b943      	cbnz	r3, 8009228 <xTaskPriorityDisinherit+0x38>
 8009216:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800921a:	f383 8811 	msr	BASEPRI, r3
 800921e:	f3bf 8f6f 	isb	sy
 8009222:	f3bf 8f4f 	dsb	sy
 8009226:	e7fe      	b.n	8009226 <xTaskPriorityDisinherit+0x36>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009228:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800922a:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
 800922c:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800922e:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8009230:	6523      	str	r3, [r4, #80]	@ 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009232:	d0df      	beq.n	80091f4 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8009234:	2b00      	cmp	r3, #0
 8009236:	d1dd      	bne.n	80091f4 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009238:	1d25      	adds	r5, r4, #4
 800923a:	4628      	mov	r0, r5
 800923c:	f7fe fc5c 	bl	8007af8 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8009240:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8009242:	62e3      	str	r3, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009244:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 8009248:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800924a:	4a08      	ldr	r2, [pc, #32]	@ (800926c <xTaskPriorityDisinherit+0x7c>)
 800924c:	6811      	ldr	r1, [r2, #0]
 800924e:	428b      	cmp	r3, r1
 8009250:	bf88      	it	hi
 8009252:	6013      	strhi	r3, [r2, #0]
 8009254:	4a06      	ldr	r2, [pc, #24]	@ (8009270 <xTaskPriorityDisinherit+0x80>)
 8009256:	2014      	movs	r0, #20
 8009258:	fb00 2003 	mla	r0, r0, r3, r2
 800925c:	4629      	mov	r1, r5
 800925e:	f7fe fc29 	bl	8007ab4 <vListInsertEnd>
					xReturn = pdTRUE;
 8009262:	2001      	movs	r0, #1
		return xReturn;
 8009264:	e7c7      	b.n	80091f6 <xTaskPriorityDisinherit+0x6>
 8009266:	bf00      	nop
 8009268:	200118c0 	.word	0x200118c0
 800926c:	200113e4 	.word	0x200113e4
 8009270:	20011460 	.word	0x20011460

08009274 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8009274:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8009276:	4604      	mov	r4, r0
 8009278:	2800      	cmp	r0, #0
 800927a:	d041      	beq.n	8009300 <vTaskPriorityDisinheritAfterTimeout+0x8c>
			configASSERT( pxTCB->uxMutexesHeld );
 800927c:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 800927e:	b942      	cbnz	r2, 8009292 <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8009280:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009284:	f383 8811 	msr	BASEPRI, r3
 8009288:	f3bf 8f6f 	isb	sy
 800928c:	f3bf 8f4f 	dsb	sy
 8009290:	e7fe      	b.n	8009290 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8009292:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 8009294:	4299      	cmp	r1, r3
 8009296:	bf38      	it	cc
 8009298:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800929a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800929c:	428b      	cmp	r3, r1
 800929e:	d02f      	beq.n	8009300 <vTaskPriorityDisinheritAfterTimeout+0x8c>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 80092a0:	2a01      	cmp	r2, #1
 80092a2:	d12d      	bne.n	8009300 <vTaskPriorityDisinheritAfterTimeout+0x8c>
					configASSERT( pxTCB != pxCurrentTCB );
 80092a4:	4a17      	ldr	r2, [pc, #92]	@ (8009304 <vTaskPriorityDisinheritAfterTimeout+0x90>)
 80092a6:	6812      	ldr	r2, [r2, #0]
 80092a8:	4282      	cmp	r2, r0
 80092aa:	d108      	bne.n	80092be <vTaskPriorityDisinheritAfterTimeout+0x4a>
 80092ac:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80092b0:	f383 8811 	msr	BASEPRI, r3
 80092b4:	f3bf 8f6f 	isb	sy
 80092b8:	f3bf 8f4f 	dsb	sy
 80092bc:	e7fe      	b.n	80092bc <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80092be:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80092c0:	4d11      	ldr	r5, [pc, #68]	@ (8009308 <vTaskPriorityDisinheritAfterTimeout+0x94>)
					pxTCB->uxPriority = uxPriorityToUse;
 80092c2:	62c1      	str	r1, [r0, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80092c4:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80092c6:	f04f 0214 	mov.w	r2, #20
 80092ca:	fb02 5303 	mla	r3, r2, r3, r5
 80092ce:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80092d0:	bfa4      	itt	ge
 80092d2:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
 80092d6:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80092d8:	429a      	cmp	r2, r3
 80092da:	d111      	bne.n	8009300 <vTaskPriorityDisinheritAfterTimeout+0x8c>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80092dc:	1d06      	adds	r6, r0, #4
 80092de:	4630      	mov	r0, r6
 80092e0:	f7fe fc0a 	bl	8007af8 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 80092e4:	4a09      	ldr	r2, [pc, #36]	@ (800930c <vTaskPriorityDisinheritAfterTimeout+0x98>)
 80092e6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80092e8:	6811      	ldr	r1, [r2, #0]
 80092ea:	2014      	movs	r0, #20
 80092ec:	428b      	cmp	r3, r1
 80092ee:	fb00 5003 	mla	r0, r0, r3, r5
 80092f2:	4631      	mov	r1, r6
	}
 80092f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 80092f8:	bf88      	it	hi
 80092fa:	6013      	strhi	r3, [r2, #0]
 80092fc:	f7fe bbda 	b.w	8007ab4 <vListInsertEnd>
	}
 8009300:	bd70      	pop	{r4, r5, r6, pc}
 8009302:	bf00      	nop
 8009304:	200118c0 	.word	0x200118c0
 8009308:	20011460 	.word	0x20011460
 800930c:	200113e4 	.word	0x200113e4

08009310 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8009310:	4b04      	ldr	r3, [pc, #16]	@ (8009324 <pvTaskIncrementMutexHeldCount+0x14>)
 8009312:	681a      	ldr	r2, [r3, #0]
 8009314:	b11a      	cbz	r2, 800931e <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8009316:	6819      	ldr	r1, [r3, #0]
 8009318:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 800931a:	3201      	adds	r2, #1
 800931c:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
 800931e:	6818      	ldr	r0, [r3, #0]
	}
 8009320:	4770      	bx	lr
 8009322:	bf00      	nop
 8009324:	200118c0 	.word	0x200118c0

08009328 <prvInsertTimerInActiveList>:
BaseType_t xProcessTimerNow = pdFALSE;

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

	if( xNextExpiryTime <= xTimeNow )
 8009328:	4291      	cmp	r1, r2
{
 800932a:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800932c:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800932e:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8009330:	d80a      	bhi.n	8009348 <prvInsertTimerInActiveList+0x20>
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009332:	1ad2      	subs	r2, r2, r3
 8009334:	6983      	ldr	r3, [r0, #24]
 8009336:	429a      	cmp	r2, r3
 8009338:	d20d      	bcs.n	8009356 <prvInsertTimerInActiveList+0x2e>
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800933a:	4b08      	ldr	r3, [pc, #32]	@ (800935c <prvInsertTimerInActiveList+0x34>)
 800933c:	1d01      	adds	r1, r0, #4
			its expiry time and should be processed immediately. */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800933e:	6818      	ldr	r0, [r3, #0]
 8009340:	f7fe fbc3 	bl	8007aca <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8009344:	2000      	movs	r0, #0
		}
	}

	return xProcessTimerNow;
}
 8009346:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8009348:	429a      	cmp	r2, r3
 800934a:	d201      	bcs.n	8009350 <prvInsertTimerInActiveList+0x28>
 800934c:	4299      	cmp	r1, r3
 800934e:	d202      	bcs.n	8009356 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009350:	4b03      	ldr	r3, [pc, #12]	@ (8009360 <prvInsertTimerInActiveList+0x38>)
 8009352:	1d01      	adds	r1, r0, #4
 8009354:	e7f3      	b.n	800933e <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8009356:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8009358:	e7f5      	b.n	8009346 <prvInsertTimerInActiveList+0x1e>
 800935a:	bf00      	nop
 800935c:	200119c0 	.word	0x200119c0
 8009360:	200119c4 	.word	0x200119c4

08009364 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8009364:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8009366:	4c11      	ldr	r4, [pc, #68]	@ (80093ac <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8009368:	f7fe fc3c 	bl	8007be4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800936c:	6825      	ldr	r5, [r4, #0]
 800936e:	b9bd      	cbnz	r5, 80093a0 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8009370:	4f0f      	ldr	r7, [pc, #60]	@ (80093b0 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8009372:	4e10      	ldr	r6, [pc, #64]	@ (80093b4 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8009374:	4638      	mov	r0, r7
 8009376:	f7fe fb8f 	bl	8007a98 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800937a:	4630      	mov	r0, r6
 800937c:	f7fe fb8c 	bl	8007a98 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8009380:	4b0d      	ldr	r3, [pc, #52]	@ (80093b8 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009382:	4a0e      	ldr	r2, [pc, #56]	@ (80093bc <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8009384:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 8009386:	4b0e      	ldr	r3, [pc, #56]	@ (80093c0 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009388:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800938a:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800938c:	200a      	movs	r0, #10
 800938e:	4b0d      	ldr	r3, [pc, #52]	@ (80093c4 <prvCheckForValidListAndQueue+0x60>)
 8009390:	9500      	str	r5, [sp, #0]
 8009392:	f7fe fe32 	bl	8007ffa <xQueueGenericCreateStatic>
 8009396:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8009398:	b110      	cbz	r0, 80093a0 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800939a:	490b      	ldr	r1, [pc, #44]	@ (80093c8 <prvCheckForValidListAndQueue+0x64>)
 800939c:	f7ff fa0a 	bl	80087b4 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 80093a0:	b003      	add	sp, #12
 80093a2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 80093a6:	f7fe bc3d 	b.w	8007c24 <vPortExitCritical>
 80093aa:	bf00      	nop
 80093ac:	200119bc 	.word	0x200119bc
 80093b0:	200119dc 	.word	0x200119dc
 80093b4:	200119c8 	.word	0x200119c8
 80093b8:	200119c4 	.word	0x200119c4
 80093bc:	20011914 	.word	0x20011914
 80093c0:	200119c0 	.word	0x200119c0
 80093c4:	200118c4 	.word	0x200118c4
 80093c8:	08020255 	.word	0x08020255

080093cc <xTimerCreateTimerTask>:
{
 80093cc:	b510      	push	{r4, lr}
 80093ce:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 80093d0:	f7ff ffc8 	bl	8009364 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 80093d4:	4b12      	ldr	r3, [pc, #72]	@ (8009420 <xTimerCreateTimerTask+0x54>)
 80093d6:	681b      	ldr	r3, [r3, #0]
 80093d8:	b1b3      	cbz	r3, 8009408 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 80093da:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80093dc:	aa07      	add	r2, sp, #28
 80093de:	a906      	add	r1, sp, #24
 80093e0:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 80093e2:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80093e6:	f7fe fa4f 	bl	8007888 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 80093ea:	9b05      	ldr	r3, [sp, #20]
 80093ec:	9302      	str	r3, [sp, #8]
 80093ee:	9b06      	ldr	r3, [sp, #24]
 80093f0:	9301      	str	r3, [sp, #4]
 80093f2:	2302      	movs	r3, #2
 80093f4:	9300      	str	r3, [sp, #0]
 80093f6:	9a07      	ldr	r2, [sp, #28]
 80093f8:	490a      	ldr	r1, [pc, #40]	@ (8009424 <xTimerCreateTimerTask+0x58>)
 80093fa:	480b      	ldr	r0, [pc, #44]	@ (8009428 <xTimerCreateTimerTask+0x5c>)
 80093fc:	4623      	mov	r3, r4
 80093fe:	f7ff fbb1 	bl	8008b64 <xTaskCreateStatic>
 8009402:	4b0a      	ldr	r3, [pc, #40]	@ (800942c <xTimerCreateTimerTask+0x60>)
 8009404:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8009406:	b940      	cbnz	r0, 800941a <xTimerCreateTimerTask+0x4e>
 8009408:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800940c:	f383 8811 	msr	BASEPRI, r3
 8009410:	f3bf 8f6f 	isb	sy
 8009414:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8009418:	e7fe      	b.n	8009418 <xTimerCreateTimerTask+0x4c>
}
 800941a:	2001      	movs	r0, #1
 800941c:	b008      	add	sp, #32
 800941e:	bd10      	pop	{r4, pc}
 8009420:	200119bc 	.word	0x200119bc
 8009424:	0802025a 	.word	0x0802025a
 8009428:	0800952d 	.word	0x0800952d
 800942c:	200119b8 	.word	0x200119b8

08009430 <xTimerGenericCommand>:
{
 8009430:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009432:	4616      	mov	r6, r2
	configASSERT( xTimer );
 8009434:	4604      	mov	r4, r0
{
 8009436:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8009438:	b940      	cbnz	r0, 800944c <xTimerGenericCommand+0x1c>
 800943a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800943e:	f383 8811 	msr	BASEPRI, r3
 8009442:	f3bf 8f6f 	isb	sy
 8009446:	f3bf 8f4f 	dsb	sy
 800944a:	e7fe      	b.n	800944a <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800944c:	4d0d      	ldr	r5, [pc, #52]	@ (8009484 <xTimerGenericCommand+0x54>)
 800944e:	6828      	ldr	r0, [r5, #0]
 8009450:	b180      	cbz	r0, 8009474 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009452:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8009454:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8009458:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800945a:	dc0d      	bgt.n	8009478 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800945c:	f7ff fe7a 	bl	8009154 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009460:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009462:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009464:	bf08      	it	eq
 8009466:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8009468:	6828      	ldr	r0, [r5, #0]
 800946a:	bf18      	it	ne
 800946c:	461a      	movne	r2, r3
 800946e:	4669      	mov	r1, sp
 8009470:	f7fe fe78 	bl	8008164 <xQueueGenericSend>
}
 8009474:	b004      	add	sp, #16
 8009476:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8009478:	2300      	movs	r3, #0
 800947a:	4669      	mov	r1, sp
 800947c:	f7fe ff24 	bl	80082c8 <xQueueGenericSendFromISR>
 8009480:	e7f8      	b.n	8009474 <xTimerGenericCommand+0x44>
 8009482:	bf00      	nop
 8009484:	200119bc 	.word	0x200119bc

08009488 <prvSampleTimeNow>:
{
 8009488:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800948c:	f8df 8098 	ldr.w	r8, [pc, #152]	@ 8009528 <prvSampleTimeNow+0xa0>
{
 8009490:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 8009492:	f7ff fc25 	bl	8008ce0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8009496:	f8d8 3000 	ldr.w	r3, [r8]
 800949a:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800949c:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800949e:	d909      	bls.n	80094b4 <prvSampleTimeNow+0x2c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 80094a0:	4f1f      	ldr	r7, [pc, #124]	@ (8009520 <prvSampleTimeNow+0x98>)
 80094a2:	683b      	ldr	r3, [r7, #0]
 80094a4:	681a      	ldr	r2, [r3, #0]
 80094a6:	b96a      	cbnz	r2, 80094c4 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 80094a8:	4a1e      	ldr	r2, [pc, #120]	@ (8009524 <prvSampleTimeNow+0x9c>)
 80094aa:	6811      	ldr	r1, [r2, #0]
 80094ac:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 80094ae:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 80094b0:	2301      	movs	r3, #1
 80094b2:	e000      	b.n	80094b6 <prvSampleTimeNow+0x2e>
 80094b4:	2300      	movs	r3, #0
}
 80094b6:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 80094b8:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 80094ba:	f8c8 5000 	str.w	r5, [r8]
}
 80094be:	b002      	add	sp, #8
 80094c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80094c4:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80094c6:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80094c8:	f8d3 9000 	ldr.w	r9, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80094cc:	f104 0a04 	add.w	sl, r4, #4
 80094d0:	4650      	mov	r0, sl
 80094d2:	f7fe fb11 	bl	8007af8 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80094d6:	6a23      	ldr	r3, [r4, #32]
 80094d8:	4620      	mov	r0, r4
 80094da:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80094dc:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 80094e0:	075b      	lsls	r3, r3, #29
 80094e2:	d5de      	bpl.n	80094a2 <prvSampleTimeNow+0x1a>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 80094e4:	69a3      	ldr	r3, [r4, #24]
 80094e6:	444b      	add	r3, r9
			if( xReloadTime > xNextExpireTime )
 80094e8:	4599      	cmp	r9, r3
 80094ea:	d206      	bcs.n	80094fa <prvSampleTimeNow+0x72>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80094ec:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 80094ee:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80094f0:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80094f2:	4651      	mov	r1, sl
 80094f4:	f7fe fae9 	bl	8007aca <vListInsert>
 80094f8:	e7d3      	b.n	80094a2 <prvSampleTimeNow+0x1a>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80094fa:	2300      	movs	r3, #0
 80094fc:	9300      	str	r3, [sp, #0]
 80094fe:	464a      	mov	r2, r9
 8009500:	4619      	mov	r1, r3
 8009502:	4620      	mov	r0, r4
 8009504:	f7ff ff94 	bl	8009430 <xTimerGenericCommand>
				configASSERT( xResult );
 8009508:	2800      	cmp	r0, #0
 800950a:	d1ca      	bne.n	80094a2 <prvSampleTimeNow+0x1a>
 800950c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009510:	f383 8811 	msr	BASEPRI, r3
 8009514:	f3bf 8f6f 	isb	sy
 8009518:	f3bf 8f4f 	dsb	sy
 800951c:	e7fe      	b.n	800951c <prvSampleTimeNow+0x94>
 800951e:	bf00      	nop
 8009520:	200119c4 	.word	0x200119c4
 8009524:	200119c0 	.word	0x200119c0
 8009528:	200119b4 	.word	0x200119b4

0800952c <prvTimerTask>:
{
 800952c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009530:	4d6e      	ldr	r5, [pc, #440]	@ (80096ec <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8009532:	4e6f      	ldr	r6, [pc, #444]	@ (80096f0 <prvTimerTask+0x1c4>)
{
 8009534:	b089      	sub	sp, #36	@ 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009536:	682b      	ldr	r3, [r5, #0]
 8009538:	f8d3 8000 	ldr.w	r8, [r3]
 800953c:	f1b8 0f00 	cmp.w	r8, #0
 8009540:	d035      	beq.n	80095ae <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009542:	68db      	ldr	r3, [r3, #12]
 8009544:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009548:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800954a:	f7ff fbc1 	bl	8008cd0 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800954e:	a804      	add	r0, sp, #16
 8009550:	f7ff ff9a 	bl	8009488 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 8009554:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009556:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 8009558:	2b00      	cmp	r3, #0
 800955a:	d169      	bne.n	8009630 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800955c:	2c00      	cmp	r4, #0
 800955e:	d14c      	bne.n	80095fa <prvTimerTask+0xce>
 8009560:	4540      	cmp	r0, r8
 8009562:	d350      	bcc.n	8009606 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 8009564:	f7ff fc58 	bl	8008e18 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009568:	682b      	ldr	r3, [r5, #0]
 800956a:	68db      	ldr	r3, [r3, #12]
 800956c:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800956e:	1d38      	adds	r0, r7, #4
 8009570:	f7fe fac2 	bl	8007af8 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009574:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8009578:	0758      	lsls	r0, r3, #29
 800957a:	d51a      	bpl.n	80095b2 <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800957c:	69b9      	ldr	r1, [r7, #24]
 800957e:	4643      	mov	r3, r8
 8009580:	464a      	mov	r2, r9
 8009582:	4441      	add	r1, r8
 8009584:	4638      	mov	r0, r7
 8009586:	f7ff fecf 	bl	8009328 <prvInsertTimerInActiveList>
 800958a:	b1b0      	cbz	r0, 80095ba <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800958c:	9400      	str	r4, [sp, #0]
 800958e:	4623      	mov	r3, r4
 8009590:	4642      	mov	r2, r8
 8009592:	4621      	mov	r1, r4
 8009594:	4638      	mov	r0, r7
 8009596:	f7ff ff4b 	bl	8009430 <xTimerGenericCommand>
			configASSERT( xResult );
 800959a:	b970      	cbnz	r0, 80095ba <prvTimerTask+0x8e>
 800959c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80095a0:	f383 8811 	msr	BASEPRI, r3
 80095a4:	f3bf 8f6f 	isb	sy
 80095a8:	f3bf 8f4f 	dsb	sy
 80095ac:	e7fe      	b.n	80095ac <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80095ae:	2401      	movs	r4, #1
 80095b0:	e7cb      	b.n	800954a <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80095b2:	f023 0301 	bic.w	r3, r3, #1
 80095b6:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80095ba:	6a3b      	ldr	r3, [r7, #32]
 80095bc:	4638      	mov	r0, r7
 80095be:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 80095c0:	6830      	ldr	r0, [r6, #0]
 80095c2:	2200      	movs	r2, #0
 80095c4:	a904      	add	r1, sp, #16
 80095c6:	f7fe ff2d 	bl	8008424 <xQueueReceive>
 80095ca:	2800      	cmp	r0, #0
 80095cc:	d0b3      	beq.n	8009536 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 80095ce:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 80095d0:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 80095d2:	2b00      	cmp	r3, #0
 80095d4:	db2f      	blt.n	8009636 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 80095d6:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 80095d8:	6963      	ldr	r3, [r4, #20]
 80095da:	2b00      	cmp	r3, #0
 80095dc:	d132      	bne.n	8009644 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 80095de:	a803      	add	r0, sp, #12
 80095e0:	f7ff ff52 	bl	8009488 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 80095e4:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 80095e6:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 80095e8:	2b09      	cmp	r3, #9
 80095ea:	d8e9      	bhi.n	80095c0 <prvTimerTask+0x94>
 80095ec:	e8df f003 	tbb	[pc, r3]
 80095f0:	572e2e2e 	.word	0x572e2e2e
 80095f4:	2e2e765e 	.word	0x2e2e765e
 80095f8:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 80095fa:	4b3e      	ldr	r3, [pc, #248]	@ (80096f4 <prvTimerTask+0x1c8>)
 80095fc:	681b      	ldr	r3, [r3, #0]
 80095fe:	681c      	ldr	r4, [r3, #0]
 8009600:	fab4 f484 	clz	r4, r4
 8009604:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8009606:	6830      	ldr	r0, [r6, #0]
 8009608:	4622      	mov	r2, r4
 800960a:	eba8 0109 	sub.w	r1, r8, r9
 800960e:	f7ff f910 	bl	8008832 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8009612:	f7ff fc01 	bl	8008e18 <xTaskResumeAll>
 8009616:	2800      	cmp	r0, #0
 8009618:	d1d2      	bne.n	80095c0 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800961a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800961e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009622:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009626:	f3bf 8f4f 	dsb	sy
 800962a:	f3bf 8f6f 	isb	sy
 800962e:	e7c7      	b.n	80095c0 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 8009630:	f7ff fbf2 	bl	8008e18 <xTaskResumeAll>
}
 8009634:	e7c4      	b.n	80095c0 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8009636:	9b05      	ldr	r3, [sp, #20]
 8009638:	9907      	ldr	r1, [sp, #28]
 800963a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800963c:	9b04      	ldr	r3, [sp, #16]
 800963e:	2b00      	cmp	r3, #0
 8009640:	dbbe      	blt.n	80095c0 <prvTimerTask+0x94>
 8009642:	e7c8      	b.n	80095d6 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009644:	1d20      	adds	r0, r4, #4
 8009646:	f7fe fa57 	bl	8007af8 <uxListRemove>
 800964a:	e7c8      	b.n	80095de <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800964c:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009650:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009652:	f043 0301 	orr.w	r3, r3, #1
 8009656:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800965a:	9b05      	ldr	r3, [sp, #20]
 800965c:	4620      	mov	r0, r4
 800965e:	4419      	add	r1, r3
 8009660:	f7ff fe62 	bl	8009328 <prvInsertTimerInActiveList>
 8009664:	2800      	cmp	r0, #0
 8009666:	d0ab      	beq.n	80095c0 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009668:	6a23      	ldr	r3, [r4, #32]
 800966a:	4620      	mov	r0, r4
 800966c:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800966e:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8009672:	0759      	lsls	r1, r3, #29
 8009674:	d5a4      	bpl.n	80095c0 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8009676:	69a2      	ldr	r2, [r4, #24]
 8009678:	9905      	ldr	r1, [sp, #20]
 800967a:	2300      	movs	r3, #0
 800967c:	440a      	add	r2, r1
 800967e:	9300      	str	r3, [sp, #0]
 8009680:	4619      	mov	r1, r3
 8009682:	4620      	mov	r0, r4
 8009684:	f7ff fed4 	bl	8009430 <xTimerGenericCommand>
							configASSERT( xResult );
 8009688:	2800      	cmp	r0, #0
 800968a:	d199      	bne.n	80095c0 <prvTimerTask+0x94>
 800968c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009690:	f383 8811 	msr	BASEPRI, r3
 8009694:	f3bf 8f6f 	isb	sy
 8009698:	f3bf 8f4f 	dsb	sy
 800969c:	e7fe      	b.n	800969c <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800969e:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80096a2:	f023 0301 	bic.w	r3, r3, #1
 80096a6:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 80096aa:	e789      	b.n	80095c0 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80096ac:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 80096b0:	f043 0301 	orr.w	r3, r3, #1
 80096b4:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 80096b8:	9905      	ldr	r1, [sp, #20]
 80096ba:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 80096bc:	b941      	cbnz	r1, 80096d0 <prvTimerTask+0x1a4>
 80096be:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80096c2:	f383 8811 	msr	BASEPRI, r3
 80096c6:	f3bf 8f6f 	isb	sy
 80096ca:	f3bf 8f4f 	dsb	sy
 80096ce:	e7fe      	b.n	80096ce <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 80096d0:	4603      	mov	r3, r0
 80096d2:	4401      	add	r1, r0
 80096d4:	4620      	mov	r0, r4
 80096d6:	f7ff fe27 	bl	8009328 <prvInsertTimerInActiveList>
					break;
 80096da:	e771      	b.n	80095c0 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 80096dc:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 80096e0:	079a      	lsls	r2, r3, #30
 80096e2:	d4de      	bmi.n	80096a2 <prvTimerTask+0x176>
							vPortFree( pxTimer );
 80096e4:	4620      	mov	r0, r4
 80096e6:	f7fe f999 	bl	8007a1c <vPortFree>
 80096ea:	e769      	b.n	80095c0 <prvTimerTask+0x94>
 80096ec:	200119c4 	.word	0x200119c4
 80096f0:	200119bc 	.word	0x200119bc
 80096f4:	200119c0 	.word	0x200119c0

080096f8 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 80096f8:	8880      	ldrh	r0, [r0, #4]
 80096fa:	4770      	bx	lr

080096fc <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 80096fc:	b570      	push	{r4, r5, r6, lr}
 80096fe:	6803      	ldr	r3, [r0, #0]
 8009700:	4605      	mov	r5, r0
 8009702:	460c      	mov	r4, r1
 8009704:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8009706:	2100      	movs	r1, #0
 8009708:	4798      	blx	r3
 800970a:	682b      	ldr	r3, [r5, #0]
 800970c:	4606      	mov	r6, r0
 800970e:	6a1b      	ldr	r3, [r3, #32]
 8009710:	4628      	mov	r0, r5
 8009712:	4798      	blx	r3
 8009714:	1ba4      	subs	r4, r4, r6
 8009716:	b2a4      	uxth	r4, r4
 8009718:	fbb4 f0f0 	udiv	r0, r4, r0
 800971c:	bd70      	pop	{r4, r5, r6, pc}

0800971e <_ZN8touchgfx17AbstractPartition5clearEv>:
 800971e:	2300      	movs	r3, #0
 8009720:	8083      	strh	r3, [r0, #4]
 8009722:	4770      	bx	lr

08009724 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8009724:	b510      	push	{r4, lr}
 8009726:	6803      	ldr	r3, [r0, #0]
 8009728:	8881      	ldrh	r1, [r0, #4]
 800972a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800972c:	4604      	mov	r4, r0
 800972e:	4798      	blx	r3
 8009730:	88a3      	ldrh	r3, [r4, #4]
 8009732:	3301      	adds	r3, #1
 8009734:	80a3      	strh	r3, [r4, #4]
 8009736:	bd10      	pop	{r4, pc}

08009738 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8009738:	6803      	ldr	r3, [r0, #0]
 800973a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800973c:	4718      	bx	r3

0800973e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800973e:	4770      	bx	lr

08009740 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8009740:	4a02      	ldr	r2, [pc, #8]	@ (800974c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8009742:	6002      	str	r2, [r0, #0]
 8009744:	2200      	movs	r2, #0
 8009746:	8082      	strh	r2, [r0, #4]
 8009748:	4770      	bx	lr
 800974a:	bf00      	nop
 800974c:	0802026c 	.word	0x0802026c

08009750 <_ZN8touchgfx9Container13getFirstChildEv>:
 8009750:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8009752:	4770      	bx	lr

08009754 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8009754:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8009756:	2000      	movs	r0, #0
 8009758:	b12b      	cbz	r3, 8009766 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800975a:	b920      	cbnz	r0, 8009766 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800975c:	1a5a      	subs	r2, r3, r1
 800975e:	4250      	negs	r0, r2
 8009760:	4150      	adcs	r0, r2
 8009762:	699b      	ldr	r3, [r3, #24]
 8009764:	e7f8      	b.n	8009758 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8009766:	4770      	bx	lr

08009768 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8009768:	2300      	movs	r3, #0
 800976a:	6148      	str	r0, [r1, #20]
 800976c:	618b      	str	r3, [r1, #24]
 800976e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8009770:	b913      	cbnz	r3, 8009778 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 8009772:	6281      	str	r1, [r0, #40]	@ 0x28
 8009774:	4770      	bx	lr
 8009776:	4613      	mov	r3, r2
 8009778:	699a      	ldr	r2, [r3, #24]
 800977a:	2a00      	cmp	r2, #0
 800977c:	d1fb      	bne.n	8009776 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800977e:	6199      	str	r1, [r3, #24]
 8009780:	4770      	bx	lr

08009782 <_ZN8touchgfx9Container9removeAllEv>:
 8009782:	2200      	movs	r2, #0
 8009784:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8009786:	b123      	cbz	r3, 8009792 <_ZN8touchgfx9Container9removeAllEv+0x10>
 8009788:	6999      	ldr	r1, [r3, #24]
 800978a:	6281      	str	r1, [r0, #40]	@ 0x28
 800978c:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8009790:	e7f8      	b.n	8009784 <_ZN8touchgfx9Container9removeAllEv+0x2>
 8009792:	4770      	bx	lr

08009794 <_ZN8touchgfx9Container6unlinkEv>:
 8009794:	2300      	movs	r3, #0
 8009796:	6283      	str	r3, [r0, #40]	@ 0x28
 8009798:	4770      	bx	lr

0800979a <_ZNK8touchgfx9Container12getSolidRectEv>:
 800979a:	2200      	movs	r2, #0
 800979c:	8002      	strh	r2, [r0, #0]
 800979e:	8042      	strh	r2, [r0, #2]
 80097a0:	8082      	strh	r2, [r0, #4]
 80097a2:	80c2      	strh	r2, [r0, #6]
 80097a4:	4770      	bx	lr

080097a6 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 80097a6:	b570      	push	{r4, r5, r6, lr}
 80097a8:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 80097aa:	460d      	mov	r5, r1
 80097ac:	4616      	mov	r6, r2
 80097ae:	b13c      	cbz	r4, 80097c0 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 80097b0:	6823      	ldr	r3, [r4, #0]
 80097b2:	4620      	mov	r0, r4
 80097b4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80097b6:	4632      	mov	r2, r6
 80097b8:	4629      	mov	r1, r5
 80097ba:	4798      	blx	r3
 80097bc:	69a4      	ldr	r4, [r4, #24]
 80097be:	e7f6      	b.n	80097ae <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 80097c0:	bd70      	pop	{r4, r5, r6, pc}

080097c2 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 80097c2:	b538      	push	{r3, r4, r5, lr}
 80097c4:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 80097c6:	460d      	mov	r5, r1
 80097c8:	b134      	cbz	r4, 80097d8 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 80097ca:	682b      	ldr	r3, [r5, #0]
 80097cc:	4621      	mov	r1, r4
 80097ce:	689b      	ldr	r3, [r3, #8]
 80097d0:	4628      	mov	r0, r5
 80097d2:	4798      	blx	r3
 80097d4:	69a4      	ldr	r4, [r4, #24]
 80097d6:	e7f7      	b.n	80097c8 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 80097d8:	bd38      	pop	{r3, r4, r5, pc}

080097da <_ZN8touchgfx9ContainerD1Ev>:
 80097da:	4770      	bx	lr

080097dc <_ZN8touchgfx9ContainerD0Ev>:
 80097dc:	b510      	push	{r4, lr}
 80097de:	212c      	movs	r1, #44	@ 0x2c
 80097e0:	4604      	mov	r4, r0
 80097e2:	f014 f921 	bl	801da28 <_ZdlPvj>
 80097e6:	4620      	mov	r0, r4
 80097e8:	bd10      	pop	{r4, pc}

080097ea <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 80097ea:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80097ec:	b19b      	cbz	r3, 8009816 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80097ee:	428b      	cmp	r3, r1
 80097f0:	d109      	bne.n	8009806 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 80097f2:	699a      	ldr	r2, [r3, #24]
 80097f4:	2100      	movs	r1, #0
 80097f6:	6159      	str	r1, [r3, #20]
 80097f8:	6282      	str	r2, [r0, #40]	@ 0x28
 80097fa:	b902      	cbnz	r2, 80097fe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 80097fc:	4770      	bx	lr
 80097fe:	6199      	str	r1, [r3, #24]
 8009800:	4770      	bx	lr
 8009802:	4613      	mov	r3, r2
 8009804:	b13a      	cbz	r2, 8009816 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8009806:	699a      	ldr	r2, [r3, #24]
 8009808:	428a      	cmp	r2, r1
 800980a:	d1fa      	bne.n	8009802 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800980c:	698a      	ldr	r2, [r1, #24]
 800980e:	619a      	str	r2, [r3, #24]
 8009810:	2300      	movs	r3, #0
 8009812:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8009816:	4770      	bx	lr

08009818 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8009818:	b410      	push	{r4}
 800981a:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800981c:	4604      	mov	r4, r0
 800981e:	b92b      	cbnz	r3, 800982c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8009820:	6803      	ldr	r3, [r0, #0]
 8009822:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009826:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8009828:	4611      	mov	r1, r2
 800982a:	4718      	bx	r3
 800982c:	b941      	cbnz	r1, 8009840 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800982e:	6193      	str	r3, [r2, #24]
 8009830:	6282      	str	r2, [r0, #40]	@ 0x28
 8009832:	6154      	str	r4, [r2, #20]
 8009834:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009838:	4770      	bx	lr
 800983a:	4603      	mov	r3, r0
 800983c:	2800      	cmp	r0, #0
 800983e:	d0f9      	beq.n	8009834 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8009840:	4299      	cmp	r1, r3
 8009842:	6998      	ldr	r0, [r3, #24]
 8009844:	d1f9      	bne.n	800983a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8009846:	6190      	str	r0, [r2, #24]
 8009848:	618a      	str	r2, [r1, #24]
 800984a:	e7f2      	b.n	8009832 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800984c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800984c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009850:	461f      	mov	r7, r3
 8009852:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 8009856:	460d      	mov	r5, r1
 8009858:	4616      	mov	r6, r2
 800985a:	b103      	cbz	r3, 800985e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800985c:	6038      	str	r0, [r7, #0]
 800985e:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8009860:	b314      	cbz	r4, 80098a8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8009862:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8009866:	b1eb      	cbz	r3, 80098a4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009868:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800986c:	428d      	cmp	r5, r1
 800986e:	db19      	blt.n	80098a4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009870:	8923      	ldrh	r3, [r4, #8]
 8009872:	b289      	uxth	r1, r1
 8009874:	440b      	add	r3, r1
 8009876:	b21b      	sxth	r3, r3
 8009878:	429d      	cmp	r5, r3
 800987a:	da13      	bge.n	80098a4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800987c:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8009880:	4296      	cmp	r6, r2
 8009882:	db0f      	blt.n	80098a4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009884:	8963      	ldrh	r3, [r4, #10]
 8009886:	b292      	uxth	r2, r2
 8009888:	4413      	add	r3, r2
 800988a:	b21b      	sxth	r3, r3
 800988c:	429e      	cmp	r6, r3
 800988e:	da09      	bge.n	80098a4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009890:	6823      	ldr	r3, [r4, #0]
 8009892:	1ab2      	subs	r2, r6, r2
 8009894:	1a69      	subs	r1, r5, r1
 8009896:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800989a:	b212      	sxth	r2, r2
 800989c:	463b      	mov	r3, r7
 800989e:	b209      	sxth	r1, r1
 80098a0:	4620      	mov	r0, r4
 80098a2:	47c0      	blx	r8
 80098a4:	69a4      	ldr	r4, [r4, #24]
 80098a6:	e7db      	b.n	8009860 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 80098a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080098ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 80098ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80098b0:	4c6e      	ldr	r4, [pc, #440]	@ (8009a6c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 80098b2:	b0a1      	sub	sp, #132	@ 0x84
 80098b4:	6824      	ldr	r4, [r4, #0]
 80098b6:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 80098b8:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 80098bc:	9303      	str	r3, [sp, #12]
 80098be:	2400      	movs	r4, #0
 80098c0:	802c      	strh	r4, [r5, #0]
 80098c2:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 80098c4:	802c      	strh	r4, [r5, #0]
 80098c6:	601c      	str	r4, [r3, #0]
 80098c8:	4606      	mov	r6, r0
 80098ca:	e9cd 1201 	strd	r1, r2, [sp, #4]
 80098ce:	f7ff ffbd 	bl	800984c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 80098d2:	f1b9 0f03 	cmp.w	r9, #3
 80098d6:	f340 80c2 	ble.w	8009a5e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 80098da:	4631      	mov	r1, r6
 80098dc:	a80c      	add	r0, sp, #48	@ 0x30
 80098de:	f004 fcbf 	bl	800e260 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80098e2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 80098e6:	9306      	str	r3, [sp, #24]
 80098e8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 80098ec:	9307      	str	r3, [sp, #28]
 80098ee:	9b03      	ldr	r3, [sp, #12]
 80098f0:	f8d3 a000 	ldr.w	sl, [r3]
 80098f4:	f1ba 0f00 	cmp.w	sl, #0
 80098f8:	f000 80b4 	beq.w	8009a64 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 80098fc:	4651      	mov	r1, sl
 80098fe:	a810      	add	r0, sp, #64	@ 0x40
 8009900:	f004 fcae 	bl	800e260 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8009904:	9b01      	ldr	r3, [sp, #4]
 8009906:	9a06      	ldr	r2, [sp, #24]
 8009908:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800990c:	189d      	adds	r5, r3, r2
 800990e:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 8009912:	9a07      	ldr	r2, [sp, #28]
 8009914:	2002      	movs	r0, #2
 8009916:	fb91 f1f0 	sdiv	r1, r1, r0
 800991a:	4419      	add	r1, r3
 800991c:	1a6d      	subs	r5, r5, r1
 800991e:	9b02      	ldr	r3, [sp, #8]
 8009920:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 8009924:	4413      	add	r3, r2
 8009926:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800992a:	fb92 f2f0 	sdiv	r2, r2, r0
 800992e:	440a      	add	r2, r1
 8009930:	1a9b      	subs	r3, r3, r2
 8009932:	435b      	muls	r3, r3
 8009934:	fb05 3505 	mla	r5, r5, r5, r3
 8009938:	4f4d      	ldr	r7, [pc, #308]	@ (8009a70 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800993a:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800993c:	ac10      	add	r4, sp, #64	@ 0x40
 800993e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009940:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8009942:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009944:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8009946:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009948:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800994c:	f1b9 0f0c 	cmp.w	r9, #12
 8009950:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8009954:	f04f 0303 	mov.w	r3, #3
 8009958:	bfc8      	it	gt
 800995a:	4698      	movgt	r8, r3
 800995c:	f8cd 9000 	str.w	r9, [sp]
 8009960:	f04f 0400 	mov.w	r4, #0
 8009964:	bfdc      	itt	le
 8009966:	f109 32ff 	addle.w	r2, r9, #4294967295
 800996a:	fb92 f8f3 	sdivle	r8, r2, r3
 800996e:	1c63      	adds	r3, r4, #1
 8009970:	aa10      	add	r2, sp, #64	@ 0x40
 8009972:	f004 0401 	and.w	r4, r4, #1
 8009976:	9308      	str	r3, [sp, #32]
 8009978:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800997c:	9b00      	ldr	r3, [sp, #0]
 800997e:	fb93 f3f8 	sdiv	r3, r3, r8
 8009982:	b29b      	uxth	r3, r3
 8009984:	3404      	adds	r4, #4
 8009986:	f04f 0b00 	mov.w	fp, #0
 800998a:	9304      	str	r3, [sp, #16]
 800998c:	9a04      	ldr	r2, [sp, #16]
 800998e:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8009992:	fb13 f302 	smulbb	r3, r3, r2
 8009996:	9a01      	ldr	r2, [sp, #4]
 8009998:	b29b      	uxth	r3, r3
 800999a:	1899      	adds	r1, r3, r2
 800999c:	9305      	str	r3, [sp, #20]
 800999e:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80099a2:	b209      	sxth	r1, r1
 80099a4:	4299      	cmp	r1, r3
 80099a6:	db4d      	blt.n	8009a44 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80099a8:	8932      	ldrh	r2, [r6, #8]
 80099aa:	4413      	add	r3, r2
 80099ac:	b21b      	sxth	r3, r3
 80099ae:	4299      	cmp	r1, r3
 80099b0:	da48      	bge.n	8009a44 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80099b2:	9b04      	ldr	r3, [sp, #16]
 80099b4:	6827      	ldr	r7, [r4, #0]
 80099b6:	fb17 f703 	smulbb	r7, r7, r3
 80099ba:	9b02      	ldr	r3, [sp, #8]
 80099bc:	b2bf      	uxth	r7, r7
 80099be:	18fa      	adds	r2, r7, r3
 80099c0:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80099c4:	b212      	sxth	r2, r2
 80099c6:	429a      	cmp	r2, r3
 80099c8:	db3c      	blt.n	8009a44 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80099ca:	8970      	ldrh	r0, [r6, #10]
 80099cc:	4403      	add	r3, r0
 80099ce:	b21b      	sxth	r3, r3
 80099d0:	429a      	cmp	r2, r3
 80099d2:	da37      	bge.n	8009a44 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80099d4:	2300      	movs	r3, #0
 80099d6:	930b      	str	r3, [sp, #44]	@ 0x2c
 80099d8:	4630      	mov	r0, r6
 80099da:	ab0b      	add	r3, sp, #44	@ 0x2c
 80099dc:	f7ff ff36 	bl	800984c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 80099e0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80099e2:	b37a      	cbz	r2, 8009a44 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80099e4:	4552      	cmp	r2, sl
 80099e6:	d02d      	beq.n	8009a44 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80099e8:	4611      	mov	r1, r2
 80099ea:	a80e      	add	r0, sp, #56	@ 0x38
 80099ec:	9209      	str	r2, [sp, #36]	@ 0x24
 80099ee:	f004 fc37 	bl	800e260 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80099f2:	9a06      	ldr	r2, [sp, #24]
 80099f4:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 80099f8:	9b01      	ldr	r3, [sp, #4]
 80099fa:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 80099fe:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 8009a02:	4413      	add	r3, r2
 8009a04:	f04f 0e02 	mov.w	lr, #2
 8009a08:	fb91 f1fe 	sdiv	r1, r1, lr
 8009a0c:	4401      	add	r1, r0
 8009a0e:	1a58      	subs	r0, r3, r1
 8009a10:	9a07      	ldr	r2, [sp, #28]
 8009a12:	9b02      	ldr	r3, [sp, #8]
 8009a14:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 8009a18:	fb9c fcfe 	sdiv	ip, ip, lr
 8009a1c:	4413      	add	r3, r2
 8009a1e:	448c      	add	ip, r1
 8009a20:	eba3 030c 	sub.w	r3, r3, ip
 8009a24:	435b      	muls	r3, r3
 8009a26:	fb00 3300 	mla	r3, r0, r0, r3
 8009a2a:	42ab      	cmp	r3, r5
 8009a2c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8009a2e:	d208      	bcs.n	8009a42 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8009a30:	9803      	ldr	r0, [sp, #12]
 8009a32:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8009a34:	6001      	str	r1, [r0, #0]
 8009a36:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8009a38:	9805      	ldr	r0, [sp, #20]
 8009a3a:	8008      	strh	r0, [r1, #0]
 8009a3c:	992b      	ldr	r1, [sp, #172]	@ 0xac
 8009a3e:	461d      	mov	r5, r3
 8009a40:	800f      	strh	r7, [r1, #0]
 8009a42:	4692      	mov	sl, r2
 8009a44:	f10b 0b01 	add.w	fp, fp, #1
 8009a48:	f1bb 0f04 	cmp.w	fp, #4
 8009a4c:	f104 0408 	add.w	r4, r4, #8
 8009a50:	d19c      	bne.n	800998c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8009a52:	9b00      	ldr	r3, [sp, #0]
 8009a54:	9c08      	ldr	r4, [sp, #32]
 8009a56:	444b      	add	r3, r9
 8009a58:	4544      	cmp	r4, r8
 8009a5a:	9300      	str	r3, [sp, #0]
 8009a5c:	d187      	bne.n	800996e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8009a5e:	b021      	add	sp, #132	@ 0x84
 8009a60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009a64:	f04f 35ff 	mov.w	r5, #4294967295
 8009a68:	e766      	b.n	8009938 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8009a6a:	bf00      	nop
 8009a6c:	200119fc 	.word	0x200119fc
 8009a70:	0801eb88 	.word	0x0801eb88

08009a74 <_ZN8touchgfx4RectaNERKS0_>:
 8009a74:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009a78:	f9b1 7000 	ldrsh.w	r7, [r1]
 8009a7c:	888c      	ldrh	r4, [r1, #4]
 8009a7e:	f9b0 9000 	ldrsh.w	r9, [r0]
 8009a82:	443c      	add	r4, r7
 8009a84:	b2a4      	uxth	r4, r4
 8009a86:	fa0f f884 	sxth.w	r8, r4
 8009a8a:	45c1      	cmp	r9, r8
 8009a8c:	da2f      	bge.n	8009aee <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009a8e:	8882      	ldrh	r2, [r0, #4]
 8009a90:	444a      	add	r2, r9
 8009a92:	b292      	uxth	r2, r2
 8009a94:	fa0f fe82 	sxth.w	lr, r2
 8009a98:	4577      	cmp	r7, lr
 8009a9a:	da28      	bge.n	8009aee <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009a9c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8009aa0:	88cb      	ldrh	r3, [r1, #6]
 8009aa2:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8009aa6:	442b      	add	r3, r5
 8009aa8:	b21b      	sxth	r3, r3
 8009aaa:	429e      	cmp	r6, r3
 8009aac:	da1f      	bge.n	8009aee <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009aae:	88c3      	ldrh	r3, [r0, #6]
 8009ab0:	4433      	add	r3, r6
 8009ab2:	b29b      	uxth	r3, r3
 8009ab4:	fa0f fc83 	sxth.w	ip, r3
 8009ab8:	4565      	cmp	r5, ip
 8009aba:	da18      	bge.n	8009aee <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009abc:	454f      	cmp	r7, r9
 8009abe:	bfb8      	it	lt
 8009ac0:	464f      	movlt	r7, r9
 8009ac2:	42b5      	cmp	r5, r6
 8009ac4:	bfb8      	it	lt
 8009ac6:	4635      	movlt	r5, r6
 8009ac8:	45f0      	cmp	r8, lr
 8009aca:	bfd8      	it	le
 8009acc:	4622      	movle	r2, r4
 8009ace:	1bd2      	subs	r2, r2, r7
 8009ad0:	8082      	strh	r2, [r0, #4]
 8009ad2:	884a      	ldrh	r2, [r1, #2]
 8009ad4:	88c9      	ldrh	r1, [r1, #6]
 8009ad6:	8007      	strh	r7, [r0, #0]
 8009ad8:	440a      	add	r2, r1
 8009ada:	b292      	uxth	r2, r2
 8009adc:	b211      	sxth	r1, r2
 8009ade:	458c      	cmp	ip, r1
 8009ae0:	bfa8      	it	ge
 8009ae2:	4613      	movge	r3, r2
 8009ae4:	1b5b      	subs	r3, r3, r5
 8009ae6:	80c3      	strh	r3, [r0, #6]
 8009ae8:	8045      	strh	r5, [r0, #2]
 8009aea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009aee:	2300      	movs	r3, #0
 8009af0:	8003      	strh	r3, [r0, #0]
 8009af2:	8043      	strh	r3, [r0, #2]
 8009af4:	8083      	strh	r3, [r0, #4]
 8009af6:	80c3      	strh	r3, [r0, #6]
 8009af8:	e7f7      	b.n	8009aea <_ZN8touchgfx4RectaNERKS0_+0x76>

08009afa <_ZNK8touchgfx4Rect7isEmptyEv>:
 8009afa:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8009afe:	2b00      	cmp	r3, #0
 8009b00:	dd06      	ble.n	8009b10 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8009b02:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8009b06:	2800      	cmp	r0, #0
 8009b08:	bfcc      	ite	gt
 8009b0a:	2000      	movgt	r0, #0
 8009b0c:	2001      	movle	r0, #1
 8009b0e:	4770      	bx	lr
 8009b10:	2001      	movs	r0, #1
 8009b12:	4770      	bx	lr

08009b14 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8009b14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009b18:	2300      	movs	r3, #0
 8009b1a:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 8009b1c:	8003      	strh	r3, [r0, #0]
 8009b1e:	4604      	mov	r4, r0
 8009b20:	8043      	strh	r3, [r0, #2]
 8009b22:	8083      	strh	r3, [r0, #4]
 8009b24:	80c3      	strh	r3, [r0, #6]
 8009b26:	2d00      	cmp	r5, #0
 8009b28:	d040      	beq.n	8009bac <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8009b2a:	1d28      	adds	r0, r5, #4
 8009b2c:	f7ff ffe5 	bl	8009afa <_ZNK8touchgfx4Rect7isEmptyEv>
 8009b30:	b988      	cbnz	r0, 8009b56 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8009b32:	4620      	mov	r0, r4
 8009b34:	f7ff ffe1 	bl	8009afa <_ZNK8touchgfx4Rect7isEmptyEv>
 8009b38:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8009b3c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8009b40:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8009b44:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8009b48:	b138      	cbz	r0, 8009b5a <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8009b4a:	8022      	strh	r2, [r4, #0]
 8009b4c:	8063      	strh	r3, [r4, #2]
 8009b4e:	f8a4 e004 	strh.w	lr, [r4, #4]
 8009b52:	f8a4 c006 	strh.w	ip, [r4, #6]
 8009b56:	69ad      	ldr	r5, [r5, #24]
 8009b58:	e7e5      	b.n	8009b26 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8009b5a:	f9b4 0000 	ldrsh.w	r0, [r4]
 8009b5e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8009b62:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8009b66:	4290      	cmp	r0, r2
 8009b68:	4607      	mov	r7, r0
 8009b6a:	bfa8      	it	ge
 8009b6c:	4617      	movge	r7, r2
 8009b6e:	4472      	add	r2, lr
 8009b70:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8009b74:	8027      	strh	r7, [r4, #0]
 8009b76:	4299      	cmp	r1, r3
 8009b78:	460e      	mov	r6, r1
 8009b7a:	4440      	add	r0, r8
 8009b7c:	bfa8      	it	ge
 8009b7e:	461e      	movge	r6, r3
 8009b80:	4471      	add	r1, lr
 8009b82:	4463      	add	r3, ip
 8009b84:	b200      	sxth	r0, r0
 8009b86:	b212      	sxth	r2, r2
 8009b88:	b209      	sxth	r1, r1
 8009b8a:	b21b      	sxth	r3, r3
 8009b8c:	4290      	cmp	r0, r2
 8009b8e:	bfac      	ite	ge
 8009b90:	ebc7 0200 	rsbge	r2, r7, r0
 8009b94:	ebc7 0202 	rsblt	r2, r7, r2
 8009b98:	4299      	cmp	r1, r3
 8009b9a:	bfac      	ite	ge
 8009b9c:	ebc6 0301 	rsbge	r3, r6, r1
 8009ba0:	ebc6 0303 	rsblt	r3, r6, r3
 8009ba4:	8066      	strh	r6, [r4, #2]
 8009ba6:	80a2      	strh	r2, [r4, #4]
 8009ba8:	80e3      	strh	r3, [r4, #6]
 8009baa:	e7d4      	b.n	8009b56 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8009bac:	4620      	mov	r0, r4
 8009bae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009bb2 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8009bb2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009bb6:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 8009bba:	b383      	cbz	r3, 8009c1e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8009bbc:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8009bbe:	b374      	cbz	r4, 8009c1e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8009bc0:	f9b1 5000 	ldrsh.w	r5, [r1]
 8009bc4:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8009bc8:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8009bcc:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8009bd0:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8009bd4:	b303      	cbz	r3, 8009c18 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8009bd6:	4668      	mov	r0, sp
 8009bd8:	1d21      	adds	r1, r4, #4
 8009bda:	f8ad 5000 	strh.w	r5, [sp]
 8009bde:	f8ad 6002 	strh.w	r6, [sp, #2]
 8009be2:	f8ad 7004 	strh.w	r7, [sp, #4]
 8009be6:	f8ad 8006 	strh.w	r8, [sp, #6]
 8009bea:	f7ff ff43 	bl	8009a74 <_ZN8touchgfx4RectaNERKS0_>
 8009bee:	4668      	mov	r0, sp
 8009bf0:	f7ff ff83 	bl	8009afa <_ZNK8touchgfx4Rect7isEmptyEv>
 8009bf4:	b980      	cbnz	r0, 8009c18 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8009bf6:	f8bd 3000 	ldrh.w	r3, [sp]
 8009bfa:	88a2      	ldrh	r2, [r4, #4]
 8009bfc:	1a9b      	subs	r3, r3, r2
 8009bfe:	f8ad 3000 	strh.w	r3, [sp]
 8009c02:	88e2      	ldrh	r2, [r4, #6]
 8009c04:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009c08:	1a9b      	subs	r3, r3, r2
 8009c0a:	f8ad 3002 	strh.w	r3, [sp, #2]
 8009c0e:	6823      	ldr	r3, [r4, #0]
 8009c10:	4669      	mov	r1, sp
 8009c12:	689b      	ldr	r3, [r3, #8]
 8009c14:	4620      	mov	r0, r4
 8009c16:	4798      	blx	r3
 8009c18:	69a4      	ldr	r4, [r4, #24]
 8009c1a:	2c00      	cmp	r4, #0
 8009c1c:	d1d8      	bne.n	8009bd0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8009c1e:	b002      	add	sp, #8
 8009c20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009c24 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8009c24:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009c26:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 8009c2a:	460d      	mov	r5, r1
 8009c2c:	4616      	mov	r6, r2
 8009c2e:	b323      	cbz	r3, 8009c7a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009c30:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8009c32:	b314      	cbz	r4, 8009c7a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009c34:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8009c38:	b1eb      	cbz	r3, 8009c76 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8009c3a:	6828      	ldr	r0, [r5, #0]
 8009c3c:	6869      	ldr	r1, [r5, #4]
 8009c3e:	466b      	mov	r3, sp
 8009c40:	c303      	stmia	r3!, {r0, r1}
 8009c42:	4668      	mov	r0, sp
 8009c44:	1d21      	adds	r1, r4, #4
 8009c46:	f7ff ff15 	bl	8009a74 <_ZN8touchgfx4RectaNERKS0_>
 8009c4a:	4668      	mov	r0, sp
 8009c4c:	f7ff ff55 	bl	8009afa <_ZNK8touchgfx4Rect7isEmptyEv>
 8009c50:	b988      	cbnz	r0, 8009c76 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8009c52:	f8bd 3000 	ldrh.w	r3, [sp]
 8009c56:	88a2      	ldrh	r2, [r4, #4]
 8009c58:	1a9b      	subs	r3, r3, r2
 8009c5a:	f8ad 3000 	strh.w	r3, [sp]
 8009c5e:	88e2      	ldrh	r2, [r4, #6]
 8009c60:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009c64:	1a9b      	subs	r3, r3, r2
 8009c66:	f8ad 3002 	strh.w	r3, [sp, #2]
 8009c6a:	6823      	ldr	r3, [r4, #0]
 8009c6c:	4632      	mov	r2, r6
 8009c6e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8009c70:	4669      	mov	r1, sp
 8009c72:	4620      	mov	r0, r4
 8009c74:	4798      	blx	r3
 8009c76:	69a4      	ldr	r4, [r4, #24]
 8009c78:	e7db      	b.n	8009c32 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8009c7a:	b002      	add	sp, #8
 8009c7c:	bd70      	pop	{r4, r5, r6, pc}

08009c7e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8009c7e:	b513      	push	{r0, r1, r4, lr}
 8009c80:	6803      	ldr	r3, [r0, #0]
 8009c82:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
 8009c86:	2300      	movs	r3, #0
 8009c88:	e9cd 3300 	strd	r3, r3, [sp]
 8009c8c:	466b      	mov	r3, sp
 8009c8e:	47a0      	blx	r4
 8009c90:	b002      	add	sp, #8
 8009c92:	bd10      	pop	{r4, pc}

08009c94 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8009c94:	2301      	movs	r3, #1
 8009c96:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 8009c9a:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 8009c9e:	4770      	bx	lr

08009ca0 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8009ca0:	2301      	movs	r3, #1
 8009ca2:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 8009ca6:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 8009caa:	4770      	bx	lr

08009cac <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8009cac:	6843      	ldr	r3, [r0, #4]
 8009cae:	2201      	movs	r2, #1
 8009cb0:	725a      	strb	r2, [r3, #9]
 8009cb2:	6840      	ldr	r0, [r0, #4]
 8009cb4:	6803      	ldr	r3, [r0, #0]
 8009cb6:	691b      	ldr	r3, [r3, #16]
 8009cb8:	4718      	bx	r3

08009cba <_ZN8touchgfx3HAL8flushDMAEv>:
 8009cba:	6840      	ldr	r0, [r0, #4]
 8009cbc:	6803      	ldr	r3, [r0, #0]
 8009cbe:	689b      	ldr	r3, [r3, #8]
 8009cc0:	4718      	bx	r3

08009cc2 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8009cc2:	b530      	push	{r4, r5, lr}
 8009cc4:	b08b      	sub	sp, #44	@ 0x2c
 8009cc6:	6804      	ldr	r4, [r0, #0]
 8009cc8:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 8009ccc:	9509      	str	r5, [sp, #36]	@ 0x24
 8009cce:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 8009cd2:	9508      	str	r5, [sp, #32]
 8009cd4:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8009cd8:	9507      	str	r5, [sp, #28]
 8009cda:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 8009cde:	9506      	str	r5, [sp, #24]
 8009ce0:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 8009ce4:	9505      	str	r5, [sp, #20]
 8009ce6:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8009cea:	9504      	str	r5, [sp, #16]
 8009cec:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 8009cf0:	9503      	str	r5, [sp, #12]
 8009cf2:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 8009cf6:	9502      	str	r5, [sp, #8]
 8009cf8:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8009cfc:	e9cd 3500 	strd	r3, r5, [sp]
 8009d00:	4613      	mov	r3, r2
 8009d02:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
 8009d04:	2200      	movs	r2, #0
 8009d06:	47a0      	blx	r4
 8009d08:	b00b      	add	sp, #44	@ 0x2c
 8009d0a:	bd30      	pop	{r4, r5, pc}

08009d0c <_ZN8touchgfx3HAL10beginFrameEv>:
 8009d0c:	4b04      	ldr	r3, [pc, #16]	@ (8009d20 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8009d0e:	781b      	ldrb	r3, [r3, #0]
 8009d10:	b123      	cbz	r3, 8009d1c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8009d12:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 8009d16:	f080 0001 	eor.w	r0, r0, #1
 8009d1a:	4770      	bx	lr
 8009d1c:	2001      	movs	r0, #1
 8009d1e:	4770      	bx	lr
 8009d20:	200119fa 	.word	0x200119fa

08009d24 <_ZN8touchgfx3HAL8endFrameEv>:
 8009d24:	b510      	push	{r4, lr}
 8009d26:	4604      	mov	r4, r0
 8009d28:	6840      	ldr	r0, [r0, #4]
 8009d2a:	6803      	ldr	r3, [r0, #0]
 8009d2c:	689b      	ldr	r3, [r3, #8]
 8009d2e:	4798      	blx	r3
 8009d30:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 8009d34:	b113      	cbz	r3, 8009d3c <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8009d36:	2301      	movs	r3, #1
 8009d38:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 8009d3c:	bd10      	pop	{r4, pc}

08009d3e <_ZN8touchgfx3HAL10initializeEv>:
 8009d3e:	b510      	push	{r4, lr}
 8009d40:	4604      	mov	r4, r0
 8009d42:	f7f6 fe75 	bl	8000a30 <_ZN8touchgfx10OSWrappers10initializeEv>
 8009d46:	f7f6 fd85 	bl	8000854 <_ZN8touchgfx4GPIO4initEv>
 8009d4a:	6860      	ldr	r0, [r4, #4]
 8009d4c:	6803      	ldr	r3, [r0, #0]
 8009d4e:	68db      	ldr	r3, [r3, #12]
 8009d50:	4798      	blx	r3
 8009d52:	68e0      	ldr	r0, [r4, #12]
 8009d54:	6803      	ldr	r3, [r0, #0]
 8009d56:	689b      	ldr	r3, [r3, #8]
 8009d58:	4798      	blx	r3
 8009d5a:	6823      	ldr	r3, [r4, #0]
 8009d5c:	4620      	mov	r0, r4
 8009d5e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8009d60:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009d64:	4718      	bx	r3
	...

08009d68 <_ZN8touchgfx3HAL4tickEv>:
 8009d68:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009d6a:	6803      	ldr	r3, [r0, #0]
 8009d6c:	4d5b      	ldr	r5, [pc, #364]	@ (8009edc <_ZN8touchgfx3HAL4tickEv+0x174>)
 8009d6e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 8009d72:	4604      	mov	r4, r0
 8009d74:	4798      	blx	r3
 8009d76:	2800      	cmp	r0, #0
 8009d78:	f000 8095 	beq.w	8009ea6 <_ZN8touchgfx3HAL4tickEv+0x13e>
 8009d7c:	2001      	movs	r0, #1
 8009d7e:	f7f6 fce7 	bl	8000750 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8009d82:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 8009d86:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 8009d8a:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 8009d8e:	2600      	movs	r6, #0
 8009d90:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 8009d94:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 8009d98:	b133      	cbz	r3, 8009da8 <_ZN8touchgfx3HAL4tickEv+0x40>
 8009d9a:	6823      	ldr	r3, [r4, #0]
 8009d9c:	4620      	mov	r0, r4
 8009d9e:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 8009da2:	4798      	blx	r3
 8009da4:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 8009da8:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 8009dac:	6862      	ldr	r2, [r4, #4]
 8009dae:	f083 0301 	eor.w	r3, r3, #1
 8009db2:	7253      	strb	r3, [r2, #9]
 8009db4:	2601      	movs	r6, #1
 8009db6:	702e      	strb	r6, [r5, #0]
 8009db8:	f003 f8ce 	bl	800cf58 <_ZN8touchgfx11Application11getInstanceEv>
 8009dbc:	6803      	ldr	r3, [r0, #0]
 8009dbe:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8009dc0:	4798      	blx	r3
 8009dc2:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 8009dc6:	b90b      	cbnz	r3, 8009dcc <_ZN8touchgfx3HAL4tickEv+0x64>
 8009dc8:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 8009dcc:	f003 f8c4 	bl	800cf58 <_ZN8touchgfx11Application11getInstanceEv>
 8009dd0:	6803      	ldr	r3, [r0, #0]
 8009dd2:	695b      	ldr	r3, [r3, #20]
 8009dd4:	4798      	blx	r3
 8009dd6:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8009dd8:	6803      	ldr	r3, [r0, #0]
 8009dda:	691b      	ldr	r3, [r3, #16]
 8009ddc:	4798      	blx	r3
 8009dde:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 8009de2:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 8009de6:	3b01      	subs	r3, #1
 8009de8:	b2db      	uxtb	r3, r3
 8009dea:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 8009dee:	b10a      	cbz	r2, 8009df4 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8009df0:	2b00      	cmp	r3, #0
 8009df2:	d1eb      	bne.n	8009dcc <_ZN8touchgfx3HAL4tickEv+0x64>
 8009df4:	4a3a      	ldr	r2, [pc, #232]	@ (8009ee0 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8009df6:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 8009dfa:	7813      	ldrb	r3, [r2, #0]
 8009dfc:	3301      	adds	r3, #1
 8009dfe:	b25b      	sxtb	r3, r3
 8009e00:	4299      	cmp	r1, r3
 8009e02:	7013      	strb	r3, [r2, #0]
 8009e04:	dc10      	bgt.n	8009e28 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8009e06:	68e0      	ldr	r0, [r4, #12]
 8009e08:	2300      	movs	r3, #0
 8009e0a:	7013      	strb	r3, [r2, #0]
 8009e0c:	6803      	ldr	r3, [r0, #0]
 8009e0e:	aa03      	add	r2, sp, #12
 8009e10:	68db      	ldr	r3, [r3, #12]
 8009e12:	a902      	add	r1, sp, #8
 8009e14:	4798      	blx	r3
 8009e16:	6823      	ldr	r3, [r4, #0]
 8009e18:	2800      	cmp	r0, #0
 8009e1a:	d050      	beq.n	8009ebe <_ZN8touchgfx3HAL4tickEv+0x156>
 8009e1c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 8009e20:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8009e24:	4620      	mov	r0, r4
 8009e26:	4798      	blx	r3
 8009e28:	6960      	ldr	r0, [r4, #20]
 8009e2a:	2300      	movs	r3, #0
 8009e2c:	f88d 3007 	strb.w	r3, [sp, #7]
 8009e30:	b158      	cbz	r0, 8009e4a <_ZN8touchgfx3HAL4tickEv+0xe2>
 8009e32:	6803      	ldr	r3, [r0, #0]
 8009e34:	f10d 0107 	add.w	r1, sp, #7
 8009e38:	68db      	ldr	r3, [r3, #12]
 8009e3a:	4798      	blx	r3
 8009e3c:	b128      	cbz	r0, 8009e4a <_ZN8touchgfx3HAL4tickEv+0xe2>
 8009e3e:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8009e40:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8009e44:	6803      	ldr	r3, [r0, #0]
 8009e46:	68db      	ldr	r3, [r3, #12]
 8009e48:	4798      	blx	r3
 8009e4a:	f104 001c 	add.w	r0, r4, #28
 8009e4e:	f013 fd17 	bl	801d880 <_ZN8touchgfx8Gestures4tickEv>
 8009e52:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 8009e56:	b30b      	cbz	r3, 8009e9c <_ZN8touchgfx3HAL4tickEv+0x134>
 8009e58:	6920      	ldr	r0, [r4, #16]
 8009e5a:	6803      	ldr	r3, [r0, #0]
 8009e5c:	691b      	ldr	r3, [r3, #16]
 8009e5e:	4798      	blx	r3
 8009e60:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8009e62:	4606      	mov	r6, r0
 8009e64:	b903      	cbnz	r3, 8009e68 <_ZN8touchgfx3HAL4tickEv+0x100>
 8009e66:	6760      	str	r0, [r4, #116]	@ 0x74
 8009e68:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8009e6a:	4a1e      	ldr	r2, [pc, #120]	@ (8009ee4 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8009e6c:	1af3      	subs	r3, r6, r3
 8009e6e:	4293      	cmp	r3, r2
 8009e70:	d914      	bls.n	8009e9c <_ZN8touchgfx3HAL4tickEv+0x134>
 8009e72:	6920      	ldr	r0, [r4, #16]
 8009e74:	6803      	ldr	r3, [r0, #0]
 8009e76:	699b      	ldr	r3, [r3, #24]
 8009e78:	4798      	blx	r3
 8009e7a:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8009e7c:	2264      	movs	r2, #100	@ 0x64
 8009e7e:	1af3      	subs	r3, r6, r3
 8009e80:	fbb3 f3f2 	udiv	r3, r3, r2
 8009e84:	fbb0 f0f3 	udiv	r0, r0, r3
 8009e88:	2800      	cmp	r0, #0
 8009e8a:	dc1d      	bgt.n	8009ec8 <_ZN8touchgfx3HAL4tickEv+0x160>
 8009e8c:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 8009e90:	6920      	ldr	r0, [r4, #16]
 8009e92:	6803      	ldr	r3, [r0, #0]
 8009e94:	2100      	movs	r1, #0
 8009e96:	69db      	ldr	r3, [r3, #28]
 8009e98:	4798      	blx	r3
 8009e9a:	6766      	str	r6, [r4, #116]	@ 0x74
 8009e9c:	f003 f85c 	bl	800cf58 <_ZN8touchgfx11Application11getInstanceEv>
 8009ea0:	6803      	ldr	r3, [r0, #0]
 8009ea2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009ea4:	4798      	blx	r3
 8009ea6:	6823      	ldr	r3, [r4, #0]
 8009ea8:	4620      	mov	r0, r4
 8009eaa:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 8009eae:	4798      	blx	r3
 8009eb0:	2001      	movs	r0, #1
 8009eb2:	f7f6 fc77 	bl	80007a4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8009eb6:	2300      	movs	r3, #0
 8009eb8:	702b      	strb	r3, [r5, #0]
 8009eba:	b004      	add	sp, #16
 8009ebc:	bd70      	pop	{r4, r5, r6, pc}
 8009ebe:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 8009ec2:	4620      	mov	r0, r4
 8009ec4:	4798      	blx	r3
 8009ec6:	e7af      	b.n	8009e28 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8009ec8:	2863      	cmp	r0, #99	@ 0x63
 8009eca:	bfcb      	itete	gt
 8009ecc:	2300      	movgt	r3, #0
 8009ece:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 8009ed2:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 8009ed6:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 8009eda:	e7d9      	b.n	8009e90 <_ZN8touchgfx3HAL4tickEv+0x128>
 8009edc:	20011a00 	.word	0x20011a00
 8009ee0:	20011a01 	.word	0x20011a01
 8009ee4:	05f5e100 	.word	0x05f5e100

08009ee8 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8009ee8:	b510      	push	{r4, lr}
 8009eea:	4604      	mov	r4, r0
 8009eec:	f7f6 fdd0 	bl	8000a90 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8009ef0:	6863      	ldr	r3, [r4, #4]
 8009ef2:	2200      	movs	r2, #0
 8009ef4:	729a      	strb	r2, [r3, #10]
 8009ef6:	bd10      	pop	{r4, pc}

08009ef8 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8009ef8:	65c1      	str	r1, [r0, #92]	@ 0x5c
 8009efa:	301c      	adds	r0, #28
 8009efc:	f013 bcbe 	b.w	801d87c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08009f00 <_ZN8touchgfx3HAL5touchEll>:
 8009f00:	b530      	push	{r4, r5, lr}
 8009f02:	b087      	sub	sp, #28
 8009f04:	4604      	mov	r4, r0
 8009f06:	a804      	add	r0, sp, #16
 8009f08:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8009f0c:	f002 fe0c 	bl	800cb28 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8009f10:	9b04      	ldr	r3, [sp, #16]
 8009f12:	f8ad 300c 	strh.w	r3, [sp, #12]
 8009f16:	a906      	add	r1, sp, #24
 8009f18:	9b05      	ldr	r3, [sp, #20]
 8009f1a:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8009f1e:	a803      	add	r0, sp, #12
 8009f20:	f002 fe54 	bl	800cbcc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8009f24:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 8009f28:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8009f2c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8009f30:	f104 001c 	add.w	r0, r4, #28
 8009f34:	b189      	cbz	r1, 8009f5a <_ZN8touchgfx3HAL5touchEll+0x5a>
 8009f36:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 8009f3a:	9300      	str	r3, [sp, #0]
 8009f3c:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 8009f40:	4613      	mov	r3, r2
 8009f42:	462a      	mov	r2, r5
 8009f44:	f013 fcaa 	bl	801d89c <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8009f48:	b128      	cbz	r0, 8009f56 <_ZN8touchgfx3HAL5touchEll+0x56>
 8009f4a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8009f4e:	6623      	str	r3, [r4, #96]	@ 0x60
 8009f50:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8009f54:	6663      	str	r3, [r4, #100]	@ 0x64
 8009f56:	b007      	add	sp, #28
 8009f58:	bd30      	pop	{r4, r5, pc}
 8009f5a:	f013 fcdf 	bl	801d91c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009f5e:	2301      	movs	r3, #1
 8009f60:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 8009f64:	e7f1      	b.n	8009f4a <_ZN8touchgfx3HAL5touchEll+0x4a>

08009f66 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8009f66:	b510      	push	{r4, lr}
 8009f68:	2b00      	cmp	r3, #0
 8009f6a:	d046      	beq.n	8009ffa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009f6c:	ea81 0002 	eor.w	r0, r1, r2
 8009f70:	07c4      	lsls	r4, r0, #31
 8009f72:	d508      	bpl.n	8009f86 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8009f74:	440b      	add	r3, r1
 8009f76:	3a01      	subs	r2, #1
 8009f78:	428b      	cmp	r3, r1
 8009f7a:	d93e      	bls.n	8009ffa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009f7c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009f80:	f801 0b01 	strb.w	r0, [r1], #1
 8009f84:	e7f8      	b.n	8009f78 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8009f86:	07d0      	lsls	r0, r2, #31
 8009f88:	bf42      	ittt	mi
 8009f8a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8009f8e:	f801 0b01 	strbmi.w	r0, [r1], #1
 8009f92:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8009f96:	2b01      	cmp	r3, #1
 8009f98:	d911      	bls.n	8009fbe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009f9a:	ea81 0402 	eor.w	r4, r1, r2
 8009f9e:	07a4      	lsls	r4, r4, #30
 8009fa0:	4610      	mov	r0, r2
 8009fa2:	d022      	beq.n	8009fea <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8009fa4:	f023 0401 	bic.w	r4, r3, #1
 8009fa8:	440c      	add	r4, r1
 8009faa:	428c      	cmp	r4, r1
 8009fac:	4602      	mov	r2, r0
 8009fae:	d904      	bls.n	8009fba <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8009fb0:	8812      	ldrh	r2, [r2, #0]
 8009fb2:	f821 2b02 	strh.w	r2, [r1], #2
 8009fb6:	3002      	adds	r0, #2
 8009fb8:	e7f7      	b.n	8009faa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8009fba:	f003 0301 	and.w	r3, r3, #1
 8009fbe:	f023 0003 	bic.w	r0, r3, #3
 8009fc2:	4408      	add	r0, r1
 8009fc4:	4288      	cmp	r0, r1
 8009fc6:	4614      	mov	r4, r2
 8009fc8:	d904      	bls.n	8009fd4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8009fca:	6824      	ldr	r4, [r4, #0]
 8009fcc:	f841 4b04 	str.w	r4, [r1], #4
 8009fd0:	3204      	adds	r2, #4
 8009fd2:	e7f7      	b.n	8009fc4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8009fd4:	f003 0303 	and.w	r3, r3, #3
 8009fd8:	440b      	add	r3, r1
 8009fda:	3a01      	subs	r2, #1
 8009fdc:	428b      	cmp	r3, r1
 8009fde:	d90c      	bls.n	8009ffa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009fe0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009fe4:	f801 0b01 	strb.w	r0, [r1], #1
 8009fe8:	e7f8      	b.n	8009fdc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8009fea:	0790      	lsls	r0, r2, #30
 8009fec:	d0e7      	beq.n	8009fbe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009fee:	f832 0b02 	ldrh.w	r0, [r2], #2
 8009ff2:	f821 0b02 	strh.w	r0, [r1], #2
 8009ff6:	3b02      	subs	r3, #2
 8009ff8:	e7e1      	b.n	8009fbe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009ffa:	2001      	movs	r0, #1
 8009ffc:	bd10      	pop	{r4, pc}

08009ffe <_ZN8touchgfx3HAL7noTouchEv>:
 8009ffe:	b510      	push	{r4, lr}
 800a000:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800a004:	4604      	mov	r4, r0
 800a006:	b153      	cbz	r3, 800a01e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800a008:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800a00c:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800a010:	2101      	movs	r1, #1
 800a012:	301c      	adds	r0, #28
 800a014:	f013 fc82 	bl	801d91c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800a018:	2300      	movs	r3, #0
 800a01a:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800a01e:	bd10      	pop	{r4, pc}

0800a020 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800a020:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a024:	b085      	sub	sp, #20
 800a026:	ad04      	add	r5, sp, #16
 800a028:	4604      	mov	r4, r0
 800a02a:	2000      	movs	r0, #0
 800a02c:	f845 0d04 	str.w	r0, [r5, #-4]!
 800a030:	69a0      	ldr	r0, [r4, #24]
 800a032:	6806      	ldr	r6, [r0, #0]
 800a034:	9501      	str	r5, [sp, #4]
 800a036:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800a03a:	9500      	str	r5, [sp, #0]
 800a03c:	6835      	ldr	r5, [r6, #0]
 800a03e:	4699      	mov	r9, r3
 800a040:	460f      	mov	r7, r1
 800a042:	4690      	mov	r8, r2
 800a044:	47a8      	blx	r5
 800a046:	4d10      	ldr	r5, [pc, #64]	@ (800a088 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800a048:	4606      	mov	r6, r0
 800a04a:	f8a5 9000 	strh.w	r9, [r5]
 800a04e:	f7f8 fbe3 	bl	8002818 <_ZN8touchgfx3HAL3lcdEv>
 800a052:	6803      	ldr	r3, [r0, #0]
 800a054:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a056:	4798      	blx	r3
 800a058:	b128      	cbz	r0, 800a066 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800a05a:	2801      	cmp	r0, #1
 800a05c:	d00b      	beq.n	800a076 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800a05e:	4630      	mov	r0, r6
 800a060:	b005      	add	sp, #20
 800a062:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a066:	882b      	ldrh	r3, [r5, #0]
 800a068:	fb08 7203 	mla	r2, r8, r3, r7
 800a06c:	9b03      	ldr	r3, [sp, #12]
 800a06e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800a072:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800a074:	e7f3      	b.n	800a05e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800a076:	882a      	ldrh	r2, [r5, #0]
 800a078:	9b03      	ldr	r3, [sp, #12]
 800a07a:	fb08 7202 	mla	r2, r8, r2, r7
 800a07e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800a082:	1a9a      	subs	r2, r3, r2
 800a084:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800a086:	e7ea      	b.n	800a05e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800a088:	200119f6 	.word	0x200119f6

0800a08c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800a08c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a08e:	b08b      	sub	sp, #44	@ 0x2c
 800a090:	4617      	mov	r7, r2
 800a092:	4604      	mov	r4, r0
 800a094:	460e      	mov	r6, r1
 800a096:	461d      	mov	r5, r3
 800a098:	f7f8 fbbe 	bl	8002818 <_ZN8touchgfx3HAL3lcdEv>
 800a09c:	6803      	ldr	r3, [r0, #0]
 800a09e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a0a0:	4798      	blx	r3
 800a0a2:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800a0a6:	9007      	str	r0, [sp, #28]
 800a0a8:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800a0ac:	4b0d      	ldr	r3, [pc, #52]	@ (800a0e4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800a0ae:	6822      	ldr	r2, [r4, #0]
 800a0b0:	881b      	ldrh	r3, [r3, #0]
 800a0b2:	9306      	str	r3, [sp, #24]
 800a0b4:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800a0b8:	9305      	str	r3, [sp, #20]
 800a0ba:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800a0be:	9304      	str	r3, [sp, #16]
 800a0c0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800a0c4:	9303      	str	r3, [sp, #12]
 800a0c6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800a0ca:	9302      	str	r3, [sp, #8]
 800a0cc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800a0d0:	e9cd 5300 	strd	r5, r3, [sp]
 800a0d4:	4631      	mov	r1, r6
 800a0d6:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
 800a0d8:	463b      	mov	r3, r7
 800a0da:	2200      	movs	r2, #0
 800a0dc:	4620      	mov	r0, r4
 800a0de:	47a8      	blx	r5
 800a0e0:	b00b      	add	sp, #44	@ 0x2c
 800a0e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a0e4:	200119f6 	.word	0x200119f6

0800a0e8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800a0e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a0ec:	4698      	mov	r8, r3
 800a0ee:	6803      	ldr	r3, [r0, #0]
 800a0f0:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 800a0f2:	4b15      	ldr	r3, [pc, #84]	@ (800a148 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800a0f4:	b08b      	sub	sp, #44	@ 0x2c
 800a0f6:	4617      	mov	r7, r2
 800a0f8:	f8b3 9000 	ldrh.w	r9, [r3]
 800a0fc:	460e      	mov	r6, r1
 800a0fe:	4604      	mov	r4, r0
 800a100:	f7f8 fb8a 	bl	8002818 <_ZN8touchgfx3HAL3lcdEv>
 800a104:	6803      	ldr	r3, [r0, #0]
 800a106:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a108:	4798      	blx	r3
 800a10a:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800a10e:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800a112:	2302      	movs	r3, #2
 800a114:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800a118:	2301      	movs	r3, #1
 800a11a:	9305      	str	r3, [sp, #20]
 800a11c:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800a120:	9304      	str	r3, [sp, #16]
 800a122:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800a126:	9303      	str	r3, [sp, #12]
 800a128:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800a12c:	9302      	str	r3, [sp, #8]
 800a12e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800a132:	2200      	movs	r2, #0
 800a134:	e9cd 8300 	strd	r8, r3, [sp]
 800a138:	4631      	mov	r1, r6
 800a13a:	463b      	mov	r3, r7
 800a13c:	4620      	mov	r0, r4
 800a13e:	47a8      	blx	r5
 800a140:	b00b      	add	sp, #44	@ 0x2c
 800a142:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a146:	bf00      	nop
 800a148:	200119f6 	.word	0x200119f6

0800a14c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800a14c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a150:	4698      	mov	r8, r3
 800a152:	6803      	ldr	r3, [r0, #0]
 800a154:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
 800a156:	4b11      	ldr	r3, [pc, #68]	@ (800a19c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800a158:	b087      	sub	sp, #28
 800a15a:	f8b3 9000 	ldrh.w	r9, [r3]
 800a15e:	460e      	mov	r6, r1
 800a160:	4617      	mov	r7, r2
 800a162:	4604      	mov	r4, r0
 800a164:	f7f8 fb58 	bl	8002818 <_ZN8touchgfx3HAL3lcdEv>
 800a168:	6803      	ldr	r3, [r0, #0]
 800a16a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a16c:	4798      	blx	r3
 800a16e:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800a172:	f8cd 900c 	str.w	r9, [sp, #12]
 800a176:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800a17a:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800a17e:	9302      	str	r3, [sp, #8]
 800a180:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800a184:	9301      	str	r3, [sp, #4]
 800a186:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800a18a:	9300      	str	r3, [sp, #0]
 800a18c:	463a      	mov	r2, r7
 800a18e:	4643      	mov	r3, r8
 800a190:	4631      	mov	r1, r6
 800a192:	4620      	mov	r0, r4
 800a194:	47a8      	blx	r5
 800a196:	b007      	add	sp, #28
 800a198:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a19c:	200119f6 	.word	0x200119f6

0800a1a0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800a1a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a1a4:	4604      	mov	r4, r0
 800a1a6:	b08f      	sub	sp, #60	@ 0x3c
 800a1a8:	4610      	mov	r0, r2
 800a1aa:	460d      	mov	r5, r1
 800a1ac:	4691      	mov	r9, r2
 800a1ae:	461e      	mov	r6, r3
 800a1b0:	f005 ff26 	bl	8010000 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800a1b4:	2800      	cmp	r0, #0
 800a1b6:	f000 809d 	beq.w	800a2f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800a1ba:	6823      	ldr	r3, [r4, #0]
 800a1bc:	f8df b198 	ldr.w	fp, [pc, #408]	@ 800a358 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800a1c0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a1c2:	f8df a198 	ldr.w	sl, [pc, #408]	@ 800a35c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800a1c6:	4f61      	ldr	r7, [pc, #388]	@ (800a34c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800a1c8:	4620      	mov	r0, r4
 800a1ca:	4798      	blx	r3
 800a1cc:	6823      	ldr	r3, [r4, #0]
 800a1ce:	4620      	mov	r0, r4
 800a1d0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a1d2:	4798      	blx	r3
 800a1d4:	f8bb 3000 	ldrh.w	r3, [fp]
 800a1d8:	9301      	str	r3, [sp, #4]
 800a1da:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800a1de:	f8ba 3000 	ldrh.w	r3, [sl]
 800a1e2:	9302      	str	r3, [sp, #8]
 800a1e4:	883b      	ldrh	r3, [r7, #0]
 800a1e6:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800a1ea:	9303      	str	r3, [sp, #12]
 800a1ec:	4b58      	ldr	r3, [pc, #352]	@ (800a350 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800a1ee:	9305      	str	r3, [sp, #20]
 800a1f0:	881a      	ldrh	r2, [r3, #0]
 800a1f2:	9204      	str	r2, [sp, #16]
 800a1f4:	4640      	mov	r0, r8
 800a1f6:	f005 ff97 	bl	8010128 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a1fa:	8038      	strh	r0, [r7, #0]
 800a1fc:	4640      	mov	r0, r8
 800a1fe:	f005 ffc7 	bl	8010190 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a202:	9b05      	ldr	r3, [sp, #20]
 800a204:	b280      	uxth	r0, r0
 800a206:	8018      	strh	r0, [r3, #0]
 800a208:	4b52      	ldr	r3, [pc, #328]	@ (800a354 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800a20a:	781b      	ldrb	r3, [r3, #0]
 800a20c:	2b00      	cmp	r3, #0
 800a20e:	d174      	bne.n	800a2fa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800a210:	883b      	ldrh	r3, [r7, #0]
 800a212:	f8ab 3000 	strh.w	r3, [fp]
 800a216:	f8aa 0000 	strh.w	r0, [sl]
 800a21a:	4648      	mov	r0, r9
 800a21c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800a220:	f005 feee 	bl	8010000 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800a224:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800a228:	2200      	movs	r2, #0
 800a22a:	4611      	mov	r1, r2
 800a22c:	4628      	mov	r0, r5
 800a22e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800a232:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800a236:	f7f8 fc09 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
 800a23a:	2301      	movs	r3, #1
 800a23c:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800a240:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800a244:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800a248:	2b00      	cmp	r3, #0
 800a24a:	dd5c      	ble.n	800a306 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800a24c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800a250:	2b00      	cmp	r3, #0
 800a252:	dd58      	ble.n	800a306 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800a254:	462a      	mov	r2, r5
 800a256:	ab0a      	add	r3, sp, #40	@ 0x28
 800a258:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800a25c:	6851      	ldr	r1, [r2, #4]
 800a25e:	c303      	stmia	r3!, {r0, r1}
 800a260:	4631      	mov	r1, r6
 800a262:	a80a      	add	r0, sp, #40	@ 0x28
 800a264:	f7ff fc06 	bl	8009a74 <_ZN8touchgfx4RectaNERKS0_>
 800a268:	4b38      	ldr	r3, [pc, #224]	@ (800a34c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800a26a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800a26e:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800a272:	2100      	movs	r1, #0
 800a274:	aa0a      	add	r2, sp, #40	@ 0x28
 800a276:	4b36      	ldr	r3, [pc, #216]	@ (800a350 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800a278:	910c      	str	r1, [sp, #48]	@ 0x30
 800a27a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800a27e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800a282:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800a286:	ab08      	add	r3, sp, #32
 800a288:	e883 0003 	stmia.w	r3, {r0, r1}
 800a28c:	4618      	mov	r0, r3
 800a28e:	a90c      	add	r1, sp, #48	@ 0x30
 800a290:	f7ff fbf0 	bl	8009a74 <_ZN8touchgfx4RectaNERKS0_>
 800a294:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800a296:	2b00      	cmp	r3, #0
 800a298:	d13c      	bne.n	800a314 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800a29a:	2000      	movs	r0, #0
 800a29c:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800a2a0:	2600      	movs	r6, #0
 800a2a2:	682a      	ldr	r2, [r5, #0]
 800a2a4:	696b      	ldr	r3, [r5, #20]
 800a2a6:	616e      	str	r6, [r5, #20]
 800a2a8:	9305      	str	r3, [sp, #20]
 800a2aa:	6892      	ldr	r2, [r2, #8]
 800a2ac:	a908      	add	r1, sp, #32
 800a2ae:	4628      	mov	r0, r5
 800a2b0:	4790      	blx	r2
 800a2b2:	9b05      	ldr	r3, [sp, #20]
 800a2b4:	616b      	str	r3, [r5, #20]
 800a2b6:	4652      	mov	r2, sl
 800a2b8:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800a2bc:	4649      	mov	r1, r9
 800a2be:	4628      	mov	r0, r5
 800a2c0:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800a2c4:	f7f8 fbc2 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
 800a2c8:	4b23      	ldr	r3, [pc, #140]	@ (800a358 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800a2ca:	9a01      	ldr	r2, [sp, #4]
 800a2cc:	801a      	strh	r2, [r3, #0]
 800a2ce:	4b23      	ldr	r3, [pc, #140]	@ (800a35c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800a2d0:	9a02      	ldr	r2, [sp, #8]
 800a2d2:	801a      	strh	r2, [r3, #0]
 800a2d4:	4b1d      	ldr	r3, [pc, #116]	@ (800a34c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800a2d6:	9a03      	ldr	r2, [sp, #12]
 800a2d8:	801a      	strh	r2, [r3, #0]
 800a2da:	4b1d      	ldr	r3, [pc, #116]	@ (800a350 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800a2dc:	9a04      	ldr	r2, [sp, #16]
 800a2de:	801a      	strh	r2, [r3, #0]
 800a2e0:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800a2e4:	6823      	ldr	r3, [r4, #0]
 800a2e6:	4620      	mov	r0, r4
 800a2e8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a2ea:	4798      	blx	r3
 800a2ec:	6823      	ldr	r3, [r4, #0]
 800a2ee:	4620      	mov	r0, r4
 800a2f0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a2f2:	4798      	blx	r3
 800a2f4:	b00f      	add	sp, #60	@ 0x3c
 800a2f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a2fa:	883b      	ldrh	r3, [r7, #0]
 800a2fc:	f8ab 0000 	strh.w	r0, [fp]
 800a300:	f8aa 3000 	strh.w	r3, [sl]
 800a304:	e789      	b.n	800a21a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800a306:	462a      	mov	r2, r5
 800a308:	ab0a      	add	r3, sp, #40	@ 0x28
 800a30a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800a30e:	6851      	ldr	r1, [r2, #4]
 800a310:	c303      	stmia	r3!, {r0, r1}
 800a312:	e7a9      	b.n	800a268 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800a314:	a807      	add	r0, sp, #28
 800a316:	f006 f87d 	bl	8010414 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800a31a:	4606      	mov	r6, r0
 800a31c:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800a31e:	6803      	ldr	r3, [r0, #0]
 800a320:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a322:	4798      	blx	r3
 800a324:	4286      	cmp	r6, r0
 800a326:	d1b8      	bne.n	800a29a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800a328:	f7f8 fa76 	bl	8002818 <_ZN8touchgfx3HAL3lcdEv>
 800a32c:	6803      	ldr	r3, [r0, #0]
 800a32e:	4606      	mov	r6, r0
 800a330:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800a332:	9305      	str	r3, [sp, #20]
 800a334:	a807      	add	r0, sp, #28
 800a336:	f006 f86d 	bl	8010414 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800a33a:	9b05      	ldr	r3, [sp, #20]
 800a33c:	4601      	mov	r1, r0
 800a33e:	4630      	mov	r0, r6
 800a340:	4798      	blx	r3
 800a342:	f080 0001 	eor.w	r0, r0, #1
 800a346:	b2c0      	uxtb	r0, r0
 800a348:	e7a8      	b.n	800a29c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800a34a:	bf00      	nop
 800a34c:	200119f0 	.word	0x200119f0
 800a350:	200119f2 	.word	0x200119f2
 800a354:	200119f4 	.word	0x200119f4
 800a358:	200119f6 	.word	0x200119f6
 800a35c:	200119f8 	.word	0x200119f8

0800a360 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800a360:	b510      	push	{r4, lr}
 800a362:	4b07      	ldr	r3, [pc, #28]	@ (800a380 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800a364:	781b      	ldrb	r3, [r3, #0]
 800a366:	4604      	mov	r4, r0
 800a368:	b13b      	cbz	r3, 800a37a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800a36a:	6803      	ldr	r3, [r0, #0]
 800a36c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a36e:	4798      	blx	r3
 800a370:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800a372:	4283      	cmp	r3, r0
 800a374:	d101      	bne.n	800a37a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800a376:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800a378:	bd10      	pop	{r4, pc}
 800a37a:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800a37c:	e7fc      	b.n	800a378 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800a37e:	bf00      	nop
 800a380:	200119fa 	.word	0x200119fa

0800a384 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800a384:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a388:	b08a      	sub	sp, #40	@ 0x28
 800a38a:	461d      	mov	r5, r3
 800a38c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800a390:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800a394:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800a398:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a39c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800a3a0:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a3a4:	2400      	movs	r4, #0
 800a3a6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800a3aa:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800a3ae:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a3b2:	4690      	mov	r8, r2
 800a3b4:	4607      	mov	r7, r0
 800a3b6:	9404      	str	r4, [sp, #16]
 800a3b8:	f88d 4020 	strb.w	r4, [sp, #32]
 800a3bc:	f7ff ffd0 	bl	800a360 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a3c0:	fb06 8505 	mla	r5, r6, r5, r8
 800a3c4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800a3c8:	6878      	ldr	r0, [r7, #4]
 800a3ca:	9505      	str	r5, [sp, #20]
 800a3cc:	f8ad 601e 	strh.w	r6, [sp, #30]
 800a3d0:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800a3d4:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800a3d8:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800a3dc:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800a3e0:	6803      	ldr	r3, [r0, #0]
 800a3e2:	a901      	add	r1, sp, #4
 800a3e4:	685b      	ldr	r3, [r3, #4]
 800a3e6:	4798      	blx	r3
 800a3e8:	b00a      	add	sp, #40	@ 0x28
 800a3ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a3ee <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800a3ee:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a3f2:	b08b      	sub	sp, #44	@ 0x2c
 800a3f4:	2400      	movs	r4, #0
 800a3f6:	461d      	mov	r5, r3
 800a3f8:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800a3fc:	4688      	mov	r8, r1
 800a3fe:	4691      	mov	r9, r2
 800a400:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800a404:	9404      	str	r4, [sp, #16]
 800a406:	4607      	mov	r7, r0
 800a408:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800a40c:	f7ff ffa8 	bl	800a360 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a410:	fb06 9505 	mla	r5, r6, r5, r9
 800a414:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800a418:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a41c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800a420:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800a424:	6878      	ldr	r0, [r7, #4]
 800a426:	9505      	str	r5, [sp, #20]
 800a428:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a42c:	f8ad 401c 	strh.w	r4, [sp, #28]
 800a430:	f8ad 601e 	strh.w	r6, [sp, #30]
 800a434:	f8cd 8010 	str.w	r8, [sp, #16]
 800a438:	f8ad 4020 	strh.w	r4, [sp, #32]
 800a43c:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800a440:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800a444:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800a448:	6803      	ldr	r3, [r0, #0]
 800a44a:	a901      	add	r1, sp, #4
 800a44c:	685b      	ldr	r3, [r3, #4]
 800a44e:	4798      	blx	r3
 800a450:	b00b      	add	sp, #44	@ 0x2c
 800a452:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800a458 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800a458:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a45c:	b08a      	sub	sp, #40	@ 0x28
 800a45e:	4698      	mov	r8, r3
 800a460:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800a464:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800a468:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800a46c:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800a470:	2300      	movs	r3, #0
 800a472:	2d0b      	cmp	r5, #11
 800a474:	4606      	mov	r6, r0
 800a476:	9304      	str	r3, [sp, #16]
 800a478:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800a47c:	d138      	bne.n	800a4f0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800a47e:	2380      	movs	r3, #128	@ 0x80
 800a480:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800a484:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800a488:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a48c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800a490:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a494:	f88d 0020 	strb.w	r0, [sp, #32]
 800a498:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800a49c:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a4a0:	4630      	mov	r0, r6
 800a4a2:	9203      	str	r2, [sp, #12]
 800a4a4:	f7ff ff5c 	bl	800a360 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a4a8:	2c0b      	cmp	r4, #11
 800a4aa:	bf98      	it	ls
 800a4ac:	4b1b      	ldrls	r3, [pc, #108]	@ (800a51c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800a4ae:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800a4b2:	bf98      	it	ls
 800a4b4:	5d19      	ldrbls	r1, [r3, r4]
 800a4b6:	f8ad 701e 	strh.w	r7, [sp, #30]
 800a4ba:	bf88      	it	hi
 800a4bc:	2100      	movhi	r1, #0
 800a4be:	fb02 8307 	mla	r3, r2, r7, r8
 800a4c2:	10c9      	asrs	r1, r1, #3
 800a4c4:	fb01 0003 	mla	r0, r1, r3, r0
 800a4c8:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800a4cc:	9005      	str	r0, [sp, #20]
 800a4ce:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800a4d2:	6870      	ldr	r0, [r6, #4]
 800a4d4:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800a4d8:	2300      	movs	r3, #0
 800a4da:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800a4de:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800a4e2:	6803      	ldr	r3, [r0, #0]
 800a4e4:	a901      	add	r1, sp, #4
 800a4e6:	685b      	ldr	r3, [r3, #4]
 800a4e8:	4798      	blx	r3
 800a4ea:	b00a      	add	sp, #40	@ 0x28
 800a4ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a4f0:	2d02      	cmp	r5, #2
 800a4f2:	d109      	bne.n	800a508 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800a4f4:	28ff      	cmp	r0, #255	@ 0xff
 800a4f6:	d105      	bne.n	800a504 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800a4f8:	f1bc 0f00 	cmp.w	ip, #0
 800a4fc:	bf14      	ite	ne
 800a4fe:	2340      	movne	r3, #64	@ 0x40
 800a500:	2320      	moveq	r3, #32
 800a502:	e7bd      	b.n	800a480 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a504:	2340      	movs	r3, #64	@ 0x40
 800a506:	e7bb      	b.n	800a480 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a508:	28ff      	cmp	r0, #255	@ 0xff
 800a50a:	d105      	bne.n	800a518 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800a50c:	f1bc 0f00 	cmp.w	ip, #0
 800a510:	bf14      	ite	ne
 800a512:	2304      	movne	r3, #4
 800a514:	2301      	moveq	r3, #1
 800a516:	e7b3      	b.n	800a480 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a518:	2304      	movs	r3, #4
 800a51a:	e7b1      	b.n	800a480 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a51c:	08020328 	.word	0x08020328

0800a520 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800a520:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a524:	b08b      	sub	sp, #44	@ 0x2c
 800a526:	461d      	mov	r5, r3
 800a528:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800a52c:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800a530:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800a534:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800a538:	bf14      	ite	ne
 800a53a:	2308      	movne	r3, #8
 800a53c:	2302      	moveq	r3, #2
 800a53e:	2400      	movs	r4, #0
 800a540:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800a544:	4688      	mov	r8, r1
 800a546:	4693      	mov	fp, r2
 800a548:	9404      	str	r4, [sp, #16]
 800a54a:	4607      	mov	r7, r0
 800a54c:	f7ff ff08 	bl	800a360 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a550:	2e0b      	cmp	r6, #11
 800a552:	bf98      	it	ls
 800a554:	4b15      	ldrls	r3, [pc, #84]	@ (800a5ac <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800a556:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800a55a:	bf98      	it	ls
 800a55c:	5d9c      	ldrbls	r4, [r3, r6]
 800a55e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800a562:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a566:	fb05 b50a 	mla	r5, r5, sl, fp
 800a56a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800a56e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a572:	10e4      	asrs	r4, r4, #3
 800a574:	fb04 0405 	mla	r4, r4, r5, r0
 800a578:	2300      	movs	r3, #0
 800a57a:	6878      	ldr	r0, [r7, #4]
 800a57c:	9405      	str	r4, [sp, #20]
 800a57e:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a582:	f8ad a01e 	strh.w	sl, [sp, #30]
 800a586:	f8cd 8010 	str.w	r8, [sp, #16]
 800a58a:	f88d 9020 	strb.w	r9, [sp, #32]
 800a58e:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800a592:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800a596:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800a59a:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800a59e:	6803      	ldr	r3, [r0, #0]
 800a5a0:	a901      	add	r1, sp, #4
 800a5a2:	685b      	ldr	r3, [r3, #4]
 800a5a4:	4798      	blx	r3
 800a5a6:	b00b      	add	sp, #44	@ 0x2c
 800a5a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a5ac:	08020328 	.word	0x08020328

0800a5b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800a5b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a5b4:	461e      	mov	r6, r3
 800a5b6:	4b0a      	ldr	r3, [pc, #40]	@ (800a5e0 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800a5b8:	460f      	mov	r7, r1
 800a5ba:	881d      	ldrh	r5, [r3, #0]
 800a5bc:	4690      	mov	r8, r2
 800a5be:	f7f8 f92b 	bl	8002818 <_ZN8touchgfx3HAL3lcdEv>
 800a5c2:	6803      	ldr	r3, [r0, #0]
 800a5c4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a5c6:	4798      	blx	r3
 800a5c8:	280b      	cmp	r0, #11
 800a5ca:	bf9a      	itte	ls
 800a5cc:	4b05      	ldrls	r3, [pc, #20]	@ (800a5e4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800a5ce:	5c1c      	ldrbls	r4, [r3, r0]
 800a5d0:	2400      	movhi	r4, #0
 800a5d2:	fb08 7005 	mla	r0, r8, r5, r7
 800a5d6:	10e4      	asrs	r4, r4, #3
 800a5d8:	fb04 6000 	mla	r0, r4, r0, r6
 800a5dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a5e0:	200119f6 	.word	0x200119f6
 800a5e4:	08020328 	.word	0x08020328

0800a5e8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800a5e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a5ea:	b08b      	sub	sp, #44	@ 0x2c
 800a5ec:	461f      	mov	r7, r3
 800a5ee:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800a5f2:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800a5f6:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800a5fa:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a5fe:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800a602:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a606:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800a60a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a60e:	2500      	movs	r5, #0
 800a610:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800a614:	f88d 3020 	strb.w	r3, [sp, #32]
 800a618:	4604      	mov	r4, r0
 800a61a:	4616      	mov	r6, r2
 800a61c:	9504      	str	r5, [sp, #16]
 800a61e:	f7ff fe9f 	bl	800a360 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a622:	463a      	mov	r2, r7
 800a624:	4631      	mov	r1, r6
 800a626:	4603      	mov	r3, r0
 800a628:	4620      	mov	r0, r4
 800a62a:	f7ff ffc1 	bl	800a5b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a62e:	4b0e      	ldr	r3, [pc, #56]	@ (800a668 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800a630:	9005      	str	r0, [sp, #20]
 800a632:	881b      	ldrh	r3, [r3, #0]
 800a634:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a638:	f7f8 f8ee 	bl	8002818 <_ZN8touchgfx3HAL3lcdEv>
 800a63c:	6803      	ldr	r3, [r0, #0]
 800a63e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a640:	4798      	blx	r3
 800a642:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800a644:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800a648:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800a64c:	9304      	str	r3, [sp, #16]
 800a64e:	6860      	ldr	r0, [r4, #4]
 800a650:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800a654:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800a658:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800a65c:	6803      	ldr	r3, [r0, #0]
 800a65e:	a901      	add	r1, sp, #4
 800a660:	685b      	ldr	r3, [r3, #4]
 800a662:	4798      	blx	r3
 800a664:	b00b      	add	sp, #44	@ 0x2c
 800a666:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a668:	200119f6 	.word	0x200119f6

0800a66c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800a66c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a66e:	b08d      	sub	sp, #52	@ 0x34
 800a670:	466b      	mov	r3, sp
 800a672:	e883 0006 	stmia.w	r3, {r1, r2}
 800a676:	2300      	movs	r3, #0
 800a678:	9306      	str	r3, [sp, #24]
 800a67a:	6803      	ldr	r3, [r0, #0]
 800a67c:	f8bd 6000 	ldrh.w	r6, [sp]
 800a680:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a682:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800a686:	2501      	movs	r5, #1
 800a688:	9503      	str	r5, [sp, #12]
 800a68a:	4604      	mov	r4, r0
 800a68c:	4798      	blx	r3
 800a68e:	463a      	mov	r2, r7
 800a690:	4631      	mov	r1, r6
 800a692:	4603      	mov	r3, r0
 800a694:	4620      	mov	r0, r4
 800a696:	f7ff ff8b 	bl	800a5b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a69a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800a69c:	9307      	str	r3, [sp, #28]
 800a69e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a6a2:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a6a6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a6aa:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800a6ae:	4b0f      	ldr	r3, [pc, #60]	@ (800a6ec <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800a6b0:	9004      	str	r0, [sp, #16]
 800a6b2:	881b      	ldrh	r3, [r3, #0]
 800a6b4:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800a6b8:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800a6bc:	f7f8 f8ac 	bl	8002818 <_ZN8touchgfx3HAL3lcdEv>
 800a6c0:	6803      	ldr	r3, [r0, #0]
 800a6c2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a6c4:	4798      	blx	r3
 800a6c6:	23ff      	movs	r3, #255	@ 0xff
 800a6c8:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800a6cc:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800a6d0:	6860      	ldr	r0, [r4, #4]
 800a6d2:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800a6d6:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800a6da:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800a6de:	6803      	ldr	r3, [r0, #0]
 800a6e0:	a903      	add	r1, sp, #12
 800a6e2:	685b      	ldr	r3, [r3, #4]
 800a6e4:	4798      	blx	r3
 800a6e6:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800a6e8:	b00d      	add	sp, #52	@ 0x34
 800a6ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a6ec:	200119f6 	.word	0x200119f6

0800a6f0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800a6f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a6f4:	b08c      	sub	sp, #48	@ 0x30
 800a6f6:	461e      	mov	r6, r3
 800a6f8:	466d      	mov	r5, sp
 800a6fa:	2300      	movs	r3, #0
 800a6fc:	e885 0006 	stmia.w	r5, {r1, r2}
 800a700:	9306      	str	r3, [sp, #24]
 800a702:	6803      	ldr	r3, [r0, #0]
 800a704:	f8bd 7000 	ldrh.w	r7, [sp]
 800a708:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a70a:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800a70e:	2501      	movs	r5, #1
 800a710:	9503      	str	r5, [sp, #12]
 800a712:	4604      	mov	r4, r0
 800a714:	4798      	blx	r3
 800a716:	4642      	mov	r2, r8
 800a718:	4639      	mov	r1, r7
 800a71a:	4603      	mov	r3, r0
 800a71c:	4620      	mov	r0, r4
 800a71e:	f7ff ff47 	bl	800a5b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a722:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a726:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a72a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a72e:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800a732:	4b11      	ldr	r3, [pc, #68]	@ (800a778 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800a734:	9004      	str	r0, [sp, #16]
 800a736:	881b      	ldrh	r3, [r3, #0]
 800a738:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800a73c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800a73e:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800a742:	9607      	str	r6, [sp, #28]
 800a744:	f7f8 f868 	bl	8002818 <_ZN8touchgfx3HAL3lcdEv>
 800a748:	6803      	ldr	r3, [r0, #0]
 800a74a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a74c:	4798      	blx	r3
 800a74e:	23ff      	movs	r3, #255	@ 0xff
 800a750:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800a754:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800a758:	6860      	ldr	r0, [r4, #4]
 800a75a:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800a75e:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800a762:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800a766:	6803      	ldr	r3, [r0, #0]
 800a768:	a903      	add	r1, sp, #12
 800a76a:	685b      	ldr	r3, [r3, #4]
 800a76c:	4798      	blx	r3
 800a76e:	4630      	mov	r0, r6
 800a770:	b00c      	add	sp, #48	@ 0x30
 800a772:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a776:	bf00      	nop
 800a778:	200119f6 	.word	0x200119f6

0800a77c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800a77c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a77e:	b085      	sub	sp, #20
 800a780:	ac02      	add	r4, sp, #8
 800a782:	e884 0006 	stmia.w	r4, {r1, r2}
 800a786:	4605      	mov	r5, r0
 800a788:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800a78c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800a790:	f7ff fde6 	bl	800a360 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a794:	463a      	mov	r2, r7
 800a796:	4603      	mov	r3, r0
 800a798:	4631      	mov	r1, r6
 800a79a:	4628      	mov	r0, r5
 800a79c:	f7ff ff08 	bl	800a5b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a7a0:	4a05      	ldr	r2, [pc, #20]	@ (800a7b8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800a7a2:	682b      	ldr	r3, [r5, #0]
 800a7a4:	8812      	ldrh	r2, [r2, #0]
 800a7a6:	9200      	str	r2, [sp, #0]
 800a7a8:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 800a7aa:	e894 0006 	ldmia.w	r4, {r1, r2}
 800a7ae:	4603      	mov	r3, r0
 800a7b0:	4628      	mov	r0, r5
 800a7b2:	47b0      	blx	r6
 800a7b4:	b005      	add	sp, #20
 800a7b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a7b8:	200119f6 	.word	0x200119f6

0800a7bc <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800a7bc:	b570      	push	{r4, r5, r6, lr}
 800a7be:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800a7c2:	4604      	mov	r4, r0
 800a7c4:	b19b      	cbz	r3, 800a7ee <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800a7c6:	2002      	movs	r0, #2
 800a7c8:	f7f6 f816 	bl	80007f8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800a7cc:	2300      	movs	r3, #0
 800a7ce:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800a7d2:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800a7d6:	6823      	ldr	r3, [r4, #0]
 800a7d8:	4620      	mov	r0, r4
 800a7da:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
 800a7de:	f7ff fdbf 	bl	800a360 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a7e2:	462b      	mov	r3, r5
 800a7e4:	4601      	mov	r1, r0
 800a7e6:	4620      	mov	r0, r4
 800a7e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a7ec:	4718      	bx	r3
 800a7ee:	bd70      	pop	{r4, r5, r6, pc}

0800a7f0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800a7f0:	b538      	push	{r3, r4, r5, lr}
 800a7f2:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800a7f6:	428b      	cmp	r3, r1
 800a7f8:	4604      	mov	r4, r0
 800a7fa:	460d      	mov	r5, r1
 800a7fc:	d006      	beq.n	800a80c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800a7fe:	6803      	ldr	r3, [r0, #0]
 800a800:	b929      	cbnz	r1, 800a80e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800a802:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 800a806:	4798      	blx	r3
 800a808:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800a80c:	bd38      	pop	{r3, r4, r5, pc}
 800a80e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800a812:	e7f8      	b.n	800a806 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800a814 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800a814:	b510      	push	{r4, lr}
 800a816:	4b0d      	ldr	r3, [pc, #52]	@ (800a84c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800a818:	781b      	ldrb	r3, [r3, #0]
 800a81a:	4604      	mov	r4, r0
 800a81c:	b95b      	cbnz	r3, 800a836 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a81e:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800a822:	2b02      	cmp	r3, #2
 800a824:	d007      	beq.n	800a836 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a826:	6840      	ldr	r0, [r0, #4]
 800a828:	f000 f912 	bl	800aa50 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800a82c:	b118      	cbz	r0, 800a836 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a82e:	6862      	ldr	r2, [r4, #4]
 800a830:	7a53      	ldrb	r3, [r2, #9]
 800a832:	2b00      	cmp	r3, #0
 800a834:	d0fc      	beq.n	800a830 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800a836:	f7f6 f923 	bl	8000a80 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a83a:	4620      	mov	r0, r4
 800a83c:	2100      	movs	r1, #0
 800a83e:	f7ff ffd7 	bl	800a7f0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800a842:	4620      	mov	r0, r4
 800a844:	f7ff fd8c 	bl	800a360 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a848:	bd10      	pop	{r4, pc}
 800a84a:	bf00      	nop
 800a84c:	200119fa 	.word	0x200119fa

0800a850 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800a850:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800a854:	1a13      	subs	r3, r2, r0
 800a856:	4258      	negs	r0, r3
 800a858:	4158      	adcs	r0, r3
 800a85a:	4770      	bx	lr

0800a85c <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800a85c:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800a860:	1a9b      	subs	r3, r3, r2
 800a862:	2b00      	cmp	r3, #0
 800a864:	bfdc      	itt	le
 800a866:	6882      	ldrle	r2, [r0, #8]
 800a868:	189b      	addle	r3, r3, r2
 800a86a:	2b01      	cmp	r3, #1
 800a86c:	bfcc      	ite	gt
 800a86e:	2000      	movgt	r0, #0
 800a870:	2001      	movle	r0, #1
 800a872:	4770      	bx	lr

0800a874 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800a874:	6902      	ldr	r2, [r0, #16]
 800a876:	6843      	ldr	r3, [r0, #4]
 800a878:	2024      	movs	r0, #36	@ 0x24
 800a87a:	fb00 3002 	mla	r0, r0, r2, r3
 800a87e:	4770      	bx	lr

0800a880 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800a880:	6803      	ldr	r3, [r0, #0]
 800a882:	691b      	ldr	r3, [r3, #16]
 800a884:	4718      	bx	r3

0800a886 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800a886:	b570      	push	{r4, r5, r6, lr}
 800a888:	2301      	movs	r3, #1
 800a88a:	7203      	strb	r3, [r0, #8]
 800a88c:	4604      	mov	r4, r0
 800a88e:	6840      	ldr	r0, [r0, #4]
 800a890:	6803      	ldr	r3, [r0, #0]
 800a892:	699b      	ldr	r3, [r3, #24]
 800a894:	4798      	blx	r3
 800a896:	6803      	ldr	r3, [r0, #0]
 800a898:	2b40      	cmp	r3, #64	@ 0x40
 800a89a:	4605      	mov	r5, r0
 800a89c:	d00c      	beq.n	800a8b8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a89e:	d810      	bhi.n	800a8c2 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800a8a0:	2b04      	cmp	r3, #4
 800a8a2:	d01d      	beq.n	800a8e0 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800a8a4:	d804      	bhi.n	800a8b0 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800a8a6:	2b01      	cmp	r3, #1
 800a8a8:	d006      	beq.n	800a8b8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a8aa:	2b02      	cmp	r3, #2
 800a8ac:	d02c      	beq.n	800a908 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800a8ae:	bd70      	pop	{r4, r5, r6, pc}
 800a8b0:	2b08      	cmp	r3, #8
 800a8b2:	d01d      	beq.n	800a8f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800a8b4:	2b20      	cmp	r3, #32
 800a8b6:	d1fa      	bne.n	800a8ae <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800a8b8:	6823      	ldr	r3, [r4, #0]
 800a8ba:	4620      	mov	r0, r4
 800a8bc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800a8be:	4798      	blx	r3
 800a8c0:	e013      	b.n	800a8ea <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800a8c2:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800a8c6:	d0f7      	beq.n	800a8b8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a8c8:	d804      	bhi.n	800a8d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800a8ca:	2b80      	cmp	r3, #128	@ 0x80
 800a8cc:	d0f4      	beq.n	800a8b8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a8ce:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800a8d2:	e7f0      	b.n	800a8b6 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800a8d4:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800a8d8:	d0ee      	beq.n	800a8b8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a8da:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800a8de:	e7e5      	b.n	800a8ac <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800a8e0:	6823      	ldr	r3, [r4, #0]
 800a8e2:	7f01      	ldrb	r1, [r0, #28]
 800a8e4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a8e6:	4620      	mov	r0, r4
 800a8e8:	4798      	blx	r3
 800a8ea:	6823      	ldr	r3, [r4, #0]
 800a8ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a8ee:	e006      	b.n	800a8fe <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800a8f0:	6823      	ldr	r3, [r4, #0]
 800a8f2:	7f01      	ldrb	r1, [r0, #28]
 800a8f4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a8f6:	4620      	mov	r0, r4
 800a8f8:	4798      	blx	r3
 800a8fa:	6823      	ldr	r3, [r4, #0]
 800a8fc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800a8fe:	4629      	mov	r1, r5
 800a900:	4620      	mov	r0, r4
 800a902:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a906:	4718      	bx	r3
 800a908:	6823      	ldr	r3, [r4, #0]
 800a90a:	4620      	mov	r0, r4
 800a90c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800a90e:	4798      	blx	r3
 800a910:	e7f3      	b.n	800a8fa <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800a912 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800a912:	4770      	bx	lr

0800a914 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800a914:	4770      	bx	lr

0800a916 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800a916:	4770      	bx	lr

0800a918 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800a918:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800a91c:	1ad2      	subs	r2, r2, r3
 800a91e:	2a00      	cmp	r2, #0
 800a920:	b510      	push	{r4, lr}
 800a922:	bfdc      	itt	le
 800a924:	6884      	ldrle	r4, [r0, #8]
 800a926:	1912      	addle	r2, r2, r4
 800a928:	2a01      	cmp	r2, #1
 800a92a:	dd16      	ble.n	800a95a <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800a92c:	6842      	ldr	r2, [r0, #4]
 800a92e:	2424      	movs	r4, #36	@ 0x24
 800a930:	fb04 2303 	mla	r3, r4, r3, r2
 800a934:	f101 0220 	add.w	r2, r1, #32
 800a938:	f851 4b04 	ldr.w	r4, [r1], #4
 800a93c:	f843 4b04 	str.w	r4, [r3], #4
 800a940:	4291      	cmp	r1, r2
 800a942:	d1f9      	bne.n	800a938 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800a944:	780a      	ldrb	r2, [r1, #0]
 800a946:	701a      	strb	r2, [r3, #0]
 800a948:	68c3      	ldr	r3, [r0, #12]
 800a94a:	6882      	ldr	r2, [r0, #8]
 800a94c:	f3bf 8f5b 	dmb	ish
 800a950:	3301      	adds	r3, #1
 800a952:	429a      	cmp	r2, r3
 800a954:	bfd8      	it	le
 800a956:	1a9b      	suble	r3, r3, r2
 800a958:	60c3      	str	r3, [r0, #12]
 800a95a:	bd10      	pop	{r4, pc}

0800a95c <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800a95c:	6903      	ldr	r3, [r0, #16]
 800a95e:	6882      	ldr	r2, [r0, #8]
 800a960:	f3bf 8f5b 	dmb	ish
 800a964:	3301      	adds	r3, #1
 800a966:	429a      	cmp	r2, r3
 800a968:	bfd8      	it	le
 800a96a:	1a9b      	suble	r3, r3, r2
 800a96c:	6103      	str	r3, [r0, #16]
 800a96e:	4770      	bx	lr

0800a970 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800a970:	b570      	push	{r4, r5, r6, lr}
 800a972:	4604      	mov	r4, r0
 800a974:	460e      	mov	r6, r1
 800a976:	6860      	ldr	r0, [r4, #4]
 800a978:	6803      	ldr	r3, [r0, #0]
 800a97a:	685b      	ldr	r3, [r3, #4]
 800a97c:	4798      	blx	r3
 800a97e:	2800      	cmp	r0, #0
 800a980:	d1f9      	bne.n	800a976 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800a982:	4d0d      	ldr	r5, [pc, #52]	@ (800a9b8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800a984:	6828      	ldr	r0, [r5, #0]
 800a986:	6803      	ldr	r3, [r0, #0]
 800a988:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800a98a:	4798      	blx	r3
 800a98c:	f7f6 f886 	bl	8000a9c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800a990:	6828      	ldr	r0, [r5, #0]
 800a992:	2101      	movs	r1, #1
 800a994:	f7ff ff2c 	bl	800a7f0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800a998:	6860      	ldr	r0, [r4, #4]
 800a99a:	6803      	ldr	r3, [r0, #0]
 800a99c:	4631      	mov	r1, r6
 800a99e:	689b      	ldr	r3, [r3, #8]
 800a9a0:	4798      	blx	r3
 800a9a2:	6823      	ldr	r3, [r4, #0]
 800a9a4:	4620      	mov	r0, r4
 800a9a6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a9a8:	4798      	blx	r3
 800a9aa:	6828      	ldr	r0, [r5, #0]
 800a9ac:	6803      	ldr	r3, [r0, #0]
 800a9ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a9b2:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800a9b4:	4718      	bx	r3
 800a9b6:	bf00      	nop
 800a9b8:	200119fc 	.word	0x200119fc

0800a9bc <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800a9bc:	b508      	push	{r3, lr}
 800a9be:	f7f6 f85f 	bl	8000a80 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a9c2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a9c6:	f7f6 b863 	b.w	8000a90 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800a9ca <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800a9ca:	b510      	push	{r4, lr}
 800a9cc:	2114      	movs	r1, #20
 800a9ce:	4604      	mov	r4, r0
 800a9d0:	f013 f82a 	bl	801da28 <_ZdlPvj>
 800a9d4:	4620      	mov	r0, r4
 800a9d6:	bd10      	pop	{r4, pc}

0800a9d8 <_ZN8touchgfx13DMA_Interface5startEv>:
 800a9d8:	b510      	push	{r4, lr}
 800a9da:	4604      	mov	r4, r0
 800a9dc:	6840      	ldr	r0, [r0, #4]
 800a9de:	6803      	ldr	r3, [r0, #0]
 800a9e0:	681b      	ldr	r3, [r3, #0]
 800a9e2:	4798      	blx	r3
 800a9e4:	b948      	cbnz	r0, 800a9fa <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a9e6:	7a63      	ldrb	r3, [r4, #9]
 800a9e8:	b13b      	cbz	r3, 800a9fa <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a9ea:	7a23      	ldrb	r3, [r4, #8]
 800a9ec:	b92b      	cbnz	r3, 800a9fa <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a9ee:	6823      	ldr	r3, [r4, #0]
 800a9f0:	4620      	mov	r0, r4
 800a9f2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a9f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a9f8:	4718      	bx	r3
 800a9fa:	bd10      	pop	{r4, pc}

0800a9fc <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800a9fc:	b570      	push	{r4, r5, r6, lr}
 800a9fe:	4604      	mov	r4, r0
 800aa00:	6840      	ldr	r0, [r0, #4]
 800aa02:	6803      	ldr	r3, [r0, #0]
 800aa04:	681b      	ldr	r3, [r3, #0]
 800aa06:	4798      	blx	r3
 800aa08:	4605      	mov	r5, r0
 800aa0a:	b930      	cbnz	r0, 800aa1a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800aa0c:	7a23      	ldrb	r3, [r4, #8]
 800aa0e:	b123      	cbz	r3, 800aa1a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800aa10:	6860      	ldr	r0, [r4, #4]
 800aa12:	6803      	ldr	r3, [r0, #0]
 800aa14:	695b      	ldr	r3, [r3, #20]
 800aa16:	4798      	blx	r3
 800aa18:	7225      	strb	r5, [r4, #8]
 800aa1a:	6860      	ldr	r0, [r4, #4]
 800aa1c:	6803      	ldr	r3, [r0, #0]
 800aa1e:	681b      	ldr	r3, [r3, #0]
 800aa20:	4798      	blx	r3
 800aa22:	b928      	cbnz	r0, 800aa30 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800aa24:	6823      	ldr	r3, [r4, #0]
 800aa26:	4620      	mov	r0, r4
 800aa28:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800aa2a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aa2e:	4718      	bx	r3
 800aa30:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aa34:	f7f6 b83a 	b.w	8000aac <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800aa38 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800aa38:	b510      	push	{r4, lr}
 800aa3a:	4c04      	ldr	r4, [pc, #16]	@ (800aa4c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800aa3c:	6082      	str	r2, [r0, #8]
 800aa3e:	2200      	movs	r2, #0
 800aa40:	e9c0 4100 	strd	r4, r1, [r0]
 800aa44:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800aa48:	bd10      	pop	{r4, pc}
 800aa4a:	bf00      	nop
 800aa4c:	0802033c 	.word	0x0802033c

0800aa50 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800aa50:	6840      	ldr	r0, [r0, #4]
 800aa52:	6803      	ldr	r3, [r0, #0]
 800aa54:	681b      	ldr	r3, [r3, #0]
 800aa56:	4718      	bx	r3

0800aa58 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv>:
 800aa58:	b508      	push	{r3, lr}
 800aa5a:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
 800aa5e:	b10b      	cbz	r3, 800aa64 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv+0xc>
 800aa60:	f7f7 fb07 	bl	8002072 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800aa64:	bd08      	pop	{r3, pc}

0800aa66 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
 800aa66:	6803      	ldr	r3, [r0, #0]
 800aa68:	f64f 71fe 	movw	r1, #65534	@ 0xfffe
 800aa6c:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800aa6e:	4718      	bx	r3

0800aa70 <_ZN8touchgfx14SnapshotWidgetD1Ev>:
 800aa70:	4770      	bx	lr

0800aa72 <_ZN8touchgfx14SnapshotWidgetD0Ev>:
 800aa72:	b510      	push	{r4, lr}
 800aa74:	212c      	movs	r1, #44	@ 0x2c
 800aa76:	4604      	mov	r4, r0
 800aa78:	f012 ffd6 	bl	801da28 <_ZdlPvj>
 800aa7c:	4620      	mov	r0, r4
 800aa7e:	bd10      	pop	{r4, pc}

0800aa80 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
 800aa80:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 800aa84:	2bff      	cmp	r3, #255	@ 0xff
 800aa86:	b510      	push	{r4, lr}
 800aa88:	d104      	bne.n	800aa94 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
 800aa8a:	8cca      	ldrh	r2, [r1, #38]	@ 0x26
 800aa8c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800aa90:	429a      	cmp	r2, r3
 800aa92:	d105      	bne.n	800aaa0 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
 800aa94:	2300      	movs	r3, #0
 800aa96:	8003      	strh	r3, [r0, #0]
 800aa98:	8043      	strh	r3, [r0, #2]
 800aa9a:	8083      	strh	r3, [r0, #4]
 800aa9c:	80c3      	strh	r3, [r0, #6]
 800aa9e:	bd10      	pop	{r4, pc}
 800aaa0:	2300      	movs	r3, #0
 800aaa2:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 800aaa6:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
 800aaaa:	8003      	strh	r3, [r0, #0]
 800aaac:	8043      	strh	r3, [r0, #2]
 800aaae:	8084      	strh	r4, [r0, #4]
 800aab0:	80c2      	strh	r2, [r0, #6]
 800aab2:	e7f4      	b.n	800aa9e <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

0800aab4 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
 800aab4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800aab8:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
 800aabc:	b087      	sub	sp, #28
 800aabe:	4604      	mov	r4, r0
 800aac0:	4689      	mov	r9, r1
 800aac2:	b363      	cbz	r3, 800ab1e <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 800aac4:	8cc2      	ldrh	r2, [r0, #38]	@ 0x26
 800aac6:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800aaca:	429a      	cmp	r2, r3
 800aacc:	d027      	beq.n	800ab1e <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 800aace:	ad06      	add	r5, sp, #24
 800aad0:	2700      	movs	r7, #0
 800aad2:	f825 2d0c 	strh.w	r2, [r5, #-12]!
 800aad6:	4628      	mov	r0, r5
 800aad8:	f005 fb26 	bl	8010128 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800aadc:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800aae0:	f8ad 3016 	strh.w	r3, [sp, #22]
 800aae4:	6823      	ldr	r3, [r4, #0]
 800aae6:	f8ad 0014 	strh.w	r0, [sp, #20]
 800aaea:	a904      	add	r1, sp, #16
 800aaec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800aaee:	9704      	str	r7, [sp, #16]
 800aaf0:	4620      	mov	r0, r4
 800aaf2:	4798      	blx	r3
 800aaf4:	f7f7 fe90 	bl	8002818 <_ZN8touchgfx3HAL3lcdEv>
 800aaf8:	6803      	ldr	r3, [r0, #0]
 800aafa:	4606      	mov	r6, r0
 800aafc:	f8d3 800c 	ldr.w	r8, [r3, #12]
 800ab00:	8ce3      	ldrh	r3, [r4, #38]	@ 0x26
 800ab02:	f8ad 300c 	strh.w	r3, [sp, #12]
 800ab06:	4628      	mov	r0, r5
 800ab08:	f005 fc00 	bl	801030c <_ZNK8touchgfx6Bitmap7getDataEv>
 800ab0c:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800ab10:	9300      	str	r3, [sp, #0]
 800ab12:	4601      	mov	r1, r0
 800ab14:	9701      	str	r7, [sp, #4]
 800ab16:	464b      	mov	r3, r9
 800ab18:	aa04      	add	r2, sp, #16
 800ab1a:	4630      	mov	r0, r6
 800ab1c:	47c0      	blx	r8
 800ab1e:	b007      	add	sp, #28
 800ab20:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800ab24 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
 800ab24:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ab26:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800ab2a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ab2e:	6803      	ldr	r3, [r0, #0]
 800ab30:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800ab34:	f8ad 2004 	strh.w	r2, [sp, #4]
 800ab38:	460d      	mov	r5, r1
 800ab3a:	2100      	movs	r1, #0
 800ab3c:	4604      	mov	r4, r0
 800ab3e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ab40:	9100      	str	r1, [sp, #0]
 800ab42:	4669      	mov	r1, sp
 800ab44:	4798      	blx	r3
 800ab46:	4621      	mov	r1, r4
 800ab48:	a802      	add	r0, sp, #8
 800ab4a:	f003 fb89 	bl	800e260 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ab4e:	f7f7 fe63 	bl	8002818 <_ZN8touchgfx3HAL3lcdEv>
 800ab52:	6803      	ldr	r3, [r0, #0]
 800ab54:	aa02      	add	r2, sp, #8
 800ab56:	695e      	ldr	r6, [r3, #20]
 800ab58:	4669      	mov	r1, sp
 800ab5a:	462b      	mov	r3, r5
 800ab5c:	47b0      	blx	r6
 800ab5e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800ab62:	2800      	cmp	r0, #0
 800ab64:	bf08      	it	eq
 800ab66:	461d      	moveq	r5, r3
 800ab68:	84e5      	strh	r5, [r4, #38]	@ 0x26
 800ab6a:	b004      	add	sp, #16
 800ab6c:	bd70      	pop	{r4, r5, r6, pc}
	...

0800ab70 <_ZN8touchgfx14SnapshotWidgetC1Ev>:
 800ab70:	2200      	movs	r2, #0
 800ab72:	8082      	strh	r2, [r0, #4]
 800ab74:	80c2      	strh	r2, [r0, #6]
 800ab76:	8102      	strh	r2, [r0, #8]
 800ab78:	8142      	strh	r2, [r0, #10]
 800ab7a:	8182      	strh	r2, [r0, #12]
 800ab7c:	81c2      	strh	r2, [r0, #14]
 800ab7e:	8202      	strh	r2, [r0, #16]
 800ab80:	8242      	strh	r2, [r0, #18]
 800ab82:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800ab86:	61c2      	str	r2, [r0, #28]
 800ab88:	8402      	strh	r2, [r0, #32]
 800ab8a:	8442      	strh	r2, [r0, #34]	@ 0x22
 800ab8c:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 800ab90:	2201      	movs	r2, #1
 800ab92:	f880 2025 	strb.w	r2, [r0, #37]	@ 0x25
 800ab96:	4a04      	ldr	r2, [pc, #16]	@ (800aba8 <_ZN8touchgfx14SnapshotWidgetC1Ev+0x38>)
 800ab98:	6002      	str	r2, [r0, #0]
 800ab9a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800ab9e:	84c2      	strh	r2, [r0, #38]	@ 0x26
 800aba0:	f880 2028 	strb.w	r2, [r0, #40]	@ 0x28
 800aba4:	4770      	bx	lr
 800aba6:	bf00      	nop
 800aba8:	08020360 	.word	0x08020360

0800abac <_ZN8touchgfx13AnimatedImage12setBitmapEndERKNS_6BitmapE>:
 800abac:	880b      	ldrh	r3, [r1, #0]
 800abae:	8643      	strh	r3, [r0, #50]	@ 0x32
 800abb0:	4770      	bx	lr

0800abb2 <_ZN8touchgfx13AnimatedImageD1Ev>:
 800abb2:	4770      	bx	lr

0800abb4 <_ZN8touchgfx13AnimatedImage9setBitmapERKNS_6BitmapE>:
 800abb4:	880b      	ldrh	r3, [r1, #0]
 800abb6:	8603      	strh	r3, [r0, #48]	@ 0x30
 800abb8:	f000 bb85 	b.w	800b2c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>

0800abbc <_ZN8touchgfx13AnimatedImage13stopAnimationEv>:
 800abbc:	b513      	push	{r0, r1, r4, lr}
 800abbe:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
 800abc2:	4604      	mov	r4, r0
 800abc4:	b143      	cbz	r3, 800abd8 <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x1c>
 800abc6:	f002 f9c7 	bl	800cf58 <_ZN8touchgfx11Application11getInstanceEv>
 800abca:	4621      	mov	r1, r4
 800abcc:	3004      	adds	r0, #4
 800abce:	f002 fa10 	bl	800cff2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800abd2:	2300      	movs	r3, #0
 800abd4:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
 800abd8:	f894 3036 	ldrb.w	r3, [r4, #54]	@ 0x36
 800abdc:	b163      	cbz	r3, 800abf8 <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x3c>
 800abde:	8e63      	ldrh	r3, [r4, #50]	@ 0x32
 800abe0:	f8ad 3004 	strh.w	r3, [sp, #4]
 800abe4:	a901      	add	r1, sp, #4
 800abe6:	4620      	mov	r0, r4
 800abe8:	f000 fb6d 	bl	800b2c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800abec:	6823      	ldr	r3, [r4, #0]
 800abee:	4620      	mov	r0, r4
 800abf0:	695b      	ldr	r3, [r3, #20]
 800abf2:	4798      	blx	r3
 800abf4:	b002      	add	sp, #8
 800abf6:	bd10      	pop	{r4, pc}
 800abf8:	8e23      	ldrh	r3, [r4, #48]	@ 0x30
 800abfa:	e7f1      	b.n	800abe0 <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x24>

0800abfc <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>:
 800abfc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800abfe:	8e05      	ldrh	r5, [r0, #48]	@ 0x30
 800ac00:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 800ac04:	42bd      	cmp	r5, r7
 800ac06:	4604      	mov	r4, r0
 800ac08:	d01a      	beq.n	800ac40 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x44>
 800ac0a:	8e46      	ldrh	r6, [r0, #50]	@ 0x32
 800ac0c:	42be      	cmp	r6, r7
 800ac0e:	d017      	beq.n	800ac40 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x44>
 800ac10:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
 800ac14:	f880 3037 	strb.w	r3, [r0, #55]	@ 0x37
 800ac18:	b1a1      	cbz	r1, 800ac44 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x48>
 800ac1a:	b142      	cbz	r2, 800ac2e <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x32>
 800ac1c:	a902      	add	r1, sp, #8
 800ac1e:	f821 6d04 	strh.w	r6, [r1, #-4]!
 800ac22:	f000 fb50 	bl	800b2c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800ac26:	6823      	ldr	r3, [r4, #0]
 800ac28:	4620      	mov	r0, r4
 800ac2a:	695b      	ldr	r3, [r3, #20]
 800ac2c:	4798      	blx	r3
 800ac2e:	f002 f993 	bl	800cf58 <_ZN8touchgfx11Application11getInstanceEv>
 800ac32:	4621      	mov	r1, r4
 800ac34:	3004      	adds	r0, #4
 800ac36:	f002 fa85 	bl	800d144 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800ac3a:	2301      	movs	r3, #1
 800ac3c:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
 800ac40:	b003      	add	sp, #12
 800ac42:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ac44:	2a00      	cmp	r2, #0
 800ac46:	d0f2      	beq.n	800ac2e <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x32>
 800ac48:	a902      	add	r1, sp, #8
 800ac4a:	f821 5d04 	strh.w	r5, [r1, #-4]!
 800ac4e:	e7e8      	b.n	800ac22 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x26>

0800ac50 <_ZN8touchgfx13AnimatedImageD0Ev>:
 800ac50:	b510      	push	{r4, lr}
 800ac52:	213c      	movs	r1, #60	@ 0x3c
 800ac54:	4604      	mov	r4, r0
 800ac56:	f012 fee7 	bl	801da28 <_ZdlPvj>
 800ac5a:	4620      	mov	r0, r4
 800ac5c:	bd10      	pop	{r4, pc}

0800ac5e <_ZN8touchgfx13AnimatedImage14pauseAnimationEv>:
 800ac5e:	b510      	push	{r4, lr}
 800ac60:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
 800ac64:	4604      	mov	r4, r0
 800ac66:	b14b      	cbz	r3, 800ac7c <_ZN8touchgfx13AnimatedImage14pauseAnimationEv+0x1e>
 800ac68:	f002 f976 	bl	800cf58 <_ZN8touchgfx11Application11getInstanceEv>
 800ac6c:	4621      	mov	r1, r4
 800ac6e:	3004      	adds	r0, #4
 800ac70:	f002 f9bf 	bl	800cff2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800ac74:	2300      	movs	r3, #0
 800ac76:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
 800ac7a:	bd10      	pop	{r4, pc}
 800ac7c:	f002 f96c 	bl	800cf58 <_ZN8touchgfx11Application11getInstanceEv>
 800ac80:	4621      	mov	r1, r4
 800ac82:	3004      	adds	r0, #4
 800ac84:	f002 fa5e 	bl	800d144 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800ac88:	2301      	movs	r3, #1
 800ac8a:	e7f4      	b.n	800ac76 <_ZN8touchgfx13AnimatedImage14pauseAnimationEv+0x18>

0800ac8c <_ZN8touchgfx13AnimatedImage15handleTickEventEv>:
 800ac8c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ac8e:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
 800ac92:	4604      	mov	r4, r0
 800ac94:	2b00      	cmp	r3, #0
 800ac96:	d042      	beq.n	800ad1e <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
 800ac98:	f890 3035 	ldrb.w	r3, [r0, #53]	@ 0x35
 800ac9c:	f890 2034 	ldrb.w	r2, [r0, #52]	@ 0x34
 800aca0:	3301      	adds	r3, #1
 800aca2:	b2db      	uxtb	r3, r3
 800aca4:	429a      	cmp	r2, r3
 800aca6:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
 800acaa:	d138      	bne.n	800ad1e <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
 800acac:	2300      	movs	r3, #0
 800acae:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
 800acb2:	8e41      	ldrh	r1, [r0, #50]	@ 0x32
 800acb4:	8cc3      	ldrh	r3, [r0, #38]	@ 0x26
 800acb6:	f890 2036 	ldrb.w	r2, [r0, #54]	@ 0x36
 800acba:	4299      	cmp	r1, r3
 800acbc:	d100      	bne.n	800acc0 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x34>
 800acbe:	b122      	cbz	r2, 800acca <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x3e>
 800acc0:	8e21      	ldrh	r1, [r4, #48]	@ 0x30
 800acc2:	4299      	cmp	r1, r3
 800acc4:	d12f      	bne.n	800ad26 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x9a>
 800acc6:	2a00      	cmp	r2, #0
 800acc8:	d034      	beq.n	800ad34 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0xa8>
 800acca:	f894 5037 	ldrb.w	r5, [r4, #55]	@ 0x37
 800acce:	b93d      	cbnz	r5, 800ace0 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x54>
 800acd0:	f002 f942 	bl	800cf58 <_ZN8touchgfx11Application11getInstanceEv>
 800acd4:	4621      	mov	r1, r4
 800acd6:	3004      	adds	r0, #4
 800acd8:	f002 f98b 	bl	800cff2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800acdc:	f884 5038 	strb.w	r5, [r4, #56]	@ 0x38
 800ace0:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800ace2:	b140      	cbz	r0, 800acf6 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x6a>
 800ace4:	6803      	ldr	r3, [r0, #0]
 800ace6:	68db      	ldr	r3, [r3, #12]
 800ace8:	4798      	blx	r3
 800acea:	b120      	cbz	r0, 800acf6 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x6a>
 800acec:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800acee:	6803      	ldr	r3, [r0, #0]
 800acf0:	4621      	mov	r1, r4
 800acf2:	689b      	ldr	r3, [r3, #8]
 800acf4:	4798      	blx	r3
 800acf6:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800acfa:	b183      	cbz	r3, 800ad1e <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
 800acfc:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
 800ad00:	b16b      	cbz	r3, 800ad1e <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
 800ad02:	f894 3036 	ldrb.w	r3, [r4, #54]	@ 0x36
 800ad06:	b163      	cbz	r3, 800ad22 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x96>
 800ad08:	8e63      	ldrh	r3, [r4, #50]	@ 0x32
 800ad0a:	f8ad 3004 	strh.w	r3, [sp, #4]
 800ad0e:	a901      	add	r1, sp, #4
 800ad10:	4620      	mov	r0, r4
 800ad12:	f000 fad8 	bl	800b2c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800ad16:	6823      	ldr	r3, [r4, #0]
 800ad18:	4620      	mov	r0, r4
 800ad1a:	695b      	ldr	r3, [r3, #20]
 800ad1c:	4798      	blx	r3
 800ad1e:	b003      	add	sp, #12
 800ad20:	bd30      	pop	{r4, r5, pc}
 800ad22:	8e23      	ldrh	r3, [r4, #48]	@ 0x30
 800ad24:	e7f1      	b.n	800ad0a <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x7e>
 800ad26:	b12a      	cbz	r2, 800ad34 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0xa8>
 800ad28:	3b01      	subs	r3, #1
 800ad2a:	a902      	add	r1, sp, #8
 800ad2c:	b29b      	uxth	r3, r3
 800ad2e:	f821 3d04 	strh.w	r3, [r1, #-4]!
 800ad32:	e7ed      	b.n	800ad10 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x84>
 800ad34:	3301      	adds	r3, #1
 800ad36:	e7f8      	b.n	800ad2a <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x9e>

0800ad38 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800ad38:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
 800ad3c:	b12a      	cbz	r2, 800ad4a <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800ad3e:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800ad42:	b112      	cbz	r2, 800ad4a <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800ad44:	6803      	ldr	r3, [r0, #0]
 800ad46:	695b      	ldr	r3, [r3, #20]
 800ad48:	4718      	bx	r3
 800ad4a:	4770      	bx	lr

0800ad4c <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>:
 800ad4c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ad4e:	ac02      	add	r4, sp, #8
 800ad50:	6803      	ldr	r3, [r0, #0]
 800ad52:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800ad54:	f824 1d04 	strh.w	r1, [r4, #-4]!
 800ad58:	4605      	mov	r5, r0
 800ad5a:	4621      	mov	r1, r4
 800ad5c:	4616      	mov	r6, r2
 800ad5e:	4798      	blx	r3
 800ad60:	682b      	ldr	r3, [r5, #0]
 800ad62:	4621      	mov	r1, r4
 800ad64:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800ad66:	f8ad 6004 	strh.w	r6, [sp, #4]
 800ad6a:	4628      	mov	r0, r5
 800ad6c:	4798      	blx	r3
 800ad6e:	b002      	add	sp, #8
 800ad70:	bd70      	pop	{r4, r5, r6, pc}

0800ad72 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>:
 800ad72:	2300      	movs	r3, #0
 800ad74:	f880 1034 	strb.w	r1, [r0, #52]	@ 0x34
 800ad78:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
 800ad7c:	4770      	bx	lr
	...

0800ad80 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800ad80:	4b07      	ldr	r3, [pc, #28]	@ (800ada0 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800ad82:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800ad84:	881b      	ldrh	r3, [r3, #0]
 800ad86:	4293      	cmp	r3, r2
 800ad88:	bf81      	itttt	hi
 800ad8a:	4b06      	ldrhi	r3, [pc, #24]	@ (800ada4 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800ad8c:	681b      	ldrhi	r3, [r3, #0]
 800ad8e:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800ad92:	7858      	ldrbhi	r0, [r3, #1]
 800ad94:	bf8c      	ite	hi
 800ad96:	f000 0003 	andhi.w	r0, r0, #3
 800ad9a:	2000      	movls	r0, #0
 800ad9c:	4770      	bx	lr
 800ad9e:	bf00      	nop
 800ada0:	20011a50 	.word	0x20011a50
 800ada4:	20011a4c 	.word	0x20011a4c

0800ada8 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800ada8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800adac:	4b10      	ldr	r3, [pc, #64]	@ (800adf0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800adae:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800adb0:	881b      	ldrh	r3, [r3, #0]
 800adb2:	428b      	cmp	r3, r1
 800adb4:	4604      	mov	r4, r0
 800adb6:	d918      	bls.n	800adea <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800adb8:	6803      	ldr	r3, [r0, #0]
 800adba:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
 800adbc:	4b0d      	ldr	r3, [pc, #52]	@ (800adf4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800adbe:	6818      	ldr	r0, [r3, #0]
 800adc0:	f7f8 fe02 	bl	80039c8 <_ZNK8touchgfx5Texts7getTextEt>
 800adc4:	6823      	ldr	r3, [r4, #0]
 800adc6:	4606      	mov	r6, r0
 800adc8:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800adca:	4620      	mov	r0, r4
 800adcc:	4798      	blx	r3
 800adce:	6823      	ldr	r3, [r4, #0]
 800add0:	4607      	mov	r7, r0
 800add2:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800add6:	4620      	mov	r0, r4
 800add8:	4798      	blx	r3
 800adda:	463a      	mov	r2, r7
 800addc:	4603      	mov	r3, r0
 800adde:	4631      	mov	r1, r6
 800ade0:	4620      	mov	r0, r4
 800ade2:	46ac      	mov	ip, r5
 800ade4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800ade8:	4760      	bx	ip
 800adea:	2000      	movs	r0, #0
 800adec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800adf0:	20011a50 	.word	0x20011a50
 800adf4:	20011a58 	.word	0x20011a58

0800adf8 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800adf8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800adfc:	4b17      	ldr	r3, [pc, #92]	@ (800ae5c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800adfe:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800ae00:	881b      	ldrh	r3, [r3, #0]
 800ae02:	428b      	cmp	r3, r1
 800ae04:	4604      	mov	r4, r0
 800ae06:	d926      	bls.n	800ae56 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800ae08:	4b15      	ldr	r3, [pc, #84]	@ (800ae60 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800ae0a:	681b      	ldr	r3, [r3, #0]
 800ae0c:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800ae10:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800ae14:	4b13      	ldr	r3, [pc, #76]	@ (800ae64 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800ae16:	7855      	ldrb	r5, [r2, #1]
 800ae18:	681b      	ldr	r3, [r3, #0]
 800ae1a:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800ae1e:	6833      	ldr	r3, [r6, #0]
 800ae20:	69df      	ldr	r7, [r3, #28]
 800ae22:	4b11      	ldr	r3, [pc, #68]	@ (800ae68 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800ae24:	6818      	ldr	r0, [r3, #0]
 800ae26:	f7f8 fdcf 	bl	80039c8 <_ZNK8touchgfx5Texts7getTextEt>
 800ae2a:	6823      	ldr	r3, [r4, #0]
 800ae2c:	4680      	mov	r8, r0
 800ae2e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800ae30:	4620      	mov	r0, r4
 800ae32:	4798      	blx	r3
 800ae34:	6823      	ldr	r3, [r4, #0]
 800ae36:	4681      	mov	r9, r0
 800ae38:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800ae3c:	4620      	mov	r0, r4
 800ae3e:	4798      	blx	r3
 800ae40:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800ae44:	9000      	str	r0, [sp, #0]
 800ae46:	464b      	mov	r3, r9
 800ae48:	4642      	mov	r2, r8
 800ae4a:	4629      	mov	r1, r5
 800ae4c:	4630      	mov	r0, r6
 800ae4e:	47b8      	blx	r7
 800ae50:	b003      	add	sp, #12
 800ae52:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ae56:	2000      	movs	r0, #0
 800ae58:	e7fa      	b.n	800ae50 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800ae5a:	bf00      	nop
 800ae5c:	20011a50 	.word	0x20011a50
 800ae60:	20011a4c 	.word	0x20011a4c
 800ae64:	20011a54 	.word	0x20011a54
 800ae68:	20011a58 	.word	0x20011a58

0800ae6c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800ae6c:	b40e      	push	{r1, r2, r3}
 800ae6e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ae72:	4b2f      	ldr	r3, [pc, #188]	@ (800af30 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800ae74:	881a      	ldrh	r2, [r3, #0]
 800ae76:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 800ae78:	429a      	cmp	r2, r3
 800ae7a:	b09d      	sub	sp, #116	@ 0x74
 800ae7c:	4604      	mov	r4, r0
 800ae7e:	d954      	bls.n	800af2a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800ae80:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 800af34 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800ae84:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 800af38 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800ae88:	aa26      	add	r2, sp, #152	@ 0x98
 800ae8a:	9202      	str	r2, [sp, #8]
 800ae8c:	f8d9 2000 	ldr.w	r2, [r9]
 800ae90:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800ae94:	f8d8 3000 	ldr.w	r3, [r8]
 800ae98:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800ae9c:	682b      	ldr	r3, [r5, #0]
 800ae9e:	4628      	mov	r0, r5
 800aea0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800aea2:	4798      	blx	r3
 800aea4:	b207      	sxth	r7, r0
 800aea6:	4606      	mov	r6, r0
 800aea8:	a803      	add	r0, sp, #12
 800aeaa:	f003 fdca 	bl	800ea42 <_ZN8touchgfx12TextProviderC1Ev>
 800aeae:	682b      	ldr	r3, [r5, #0]
 800aeb0:	4628      	mov	r0, r5
 800aeb2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800aeb4:	4798      	blx	r3
 800aeb6:	682b      	ldr	r3, [r5, #0]
 800aeb8:	4682      	mov	sl, r0
 800aeba:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800aebc:	4628      	mov	r0, r5
 800aebe:	4798      	blx	r3
 800aec0:	4653      	mov	r3, sl
 800aec2:	9000      	str	r0, [sp, #0]
 800aec4:	9a02      	ldr	r2, [sp, #8]
 800aec6:	9925      	ldr	r1, [sp, #148]	@ 0x94
 800aec8:	a803      	add	r0, sp, #12
 800aeca:	f003 fe0d 	bl	800eae8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800aece:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800aed0:	f8d9 3000 	ldr.w	r3, [r9]
 800aed4:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
 800aed8:	8925      	ldrh	r5, [r4, #8]
 800aeda:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800aede:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800aee2:	eba5 050c 	sub.w	r5, r5, ip
 800aee6:	784a      	ldrb	r2, [r1, #1]
 800aee8:	f8d8 3000 	ldr.w	r3, [r8]
 800aeec:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
 800aef0:	b22d      	sxth	r5, r5
 800aef2:	9500      	str	r5, [sp, #0]
 800aef4:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800aef8:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800aefc:	a803      	add	r0, sp, #12
 800aefe:	f001 fb99 	bl	800c634 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800af02:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
 800af06:	18b9      	adds	r1, r7, r2
 800af08:	2900      	cmp	r1, #0
 800af0a:	b203      	sxth	r3, r0
 800af0c:	dd0b      	ble.n	800af26 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800af0e:	3b01      	subs	r3, #1
 800af10:	fb13 f302 	smulbb	r3, r3, r2
 800af14:	fb16 3300 	smlabb	r3, r6, r0, r3
 800af18:	b21f      	sxth	r7, r3
 800af1a:	4638      	mov	r0, r7
 800af1c:	b01d      	add	sp, #116	@ 0x74
 800af1e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800af22:	b003      	add	sp, #12
 800af24:	4770      	bx	lr
 800af26:	2b00      	cmp	r3, #0
 800af28:	dcf7      	bgt.n	800af1a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800af2a:	2700      	movs	r7, #0
 800af2c:	e7f5      	b.n	800af1a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800af2e:	bf00      	nop
 800af30:	20011a50 	.word	0x20011a50
 800af34:	20011a4c 	.word	0x20011a4c
 800af38:	20011a54 	.word	0x20011a54

0800af3c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800af3c:	b570      	push	{r4, r5, r6, lr}
 800af3e:	6803      	ldr	r3, [r0, #0]
 800af40:	4604      	mov	r4, r0
 800af42:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800af44:	4615      	mov	r5, r2
 800af46:	4798      	blx	r3
 800af48:	6823      	ldr	r3, [r4, #0]
 800af4a:	4629      	mov	r1, r5
 800af4c:	4620      	mov	r0, r4
 800af4e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800af50:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800af54:	4718      	bx	r3
	...

0800af58 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800af58:	b538      	push	{r3, r4, r5, lr}
 800af5a:	4b0e      	ldr	r3, [pc, #56]	@ (800af94 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800af5c:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800af5e:	881b      	ldrh	r3, [r3, #0]
 800af60:	429a      	cmp	r2, r3
 800af62:	4604      	mov	r4, r0
 800af64:	d214      	bcs.n	800af90 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800af66:	6803      	ldr	r3, [r0, #0]
 800af68:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800af6a:	4798      	blx	r3
 800af6c:	6823      	ldr	r3, [r4, #0]
 800af6e:	4605      	mov	r5, r0
 800af70:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800af72:	4620      	mov	r0, r4
 800af74:	4798      	blx	r3
 800af76:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800af7a:	b22d      	sxth	r5, r5
 800af7c:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800af80:	4601      	mov	r1, r0
 800af82:	bf06      	itte	eq
 800af84:	4602      	moveq	r2, r0
 800af86:	4629      	moveq	r1, r5
 800af88:	462a      	movne	r2, r5
 800af8a:	4620      	mov	r0, r4
 800af8c:	f7ff ffd6 	bl	800af3c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800af90:	bd38      	pop	{r3, r4, r5, pc}
 800af92:	bf00      	nop
 800af94:	20011a50 	.word	0x20011a50

0800af98 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800af98:	b530      	push	{r4, r5, lr}
 800af9a:	888b      	ldrh	r3, [r1, #4]
 800af9c:	8583      	strh	r3, [r0, #44]	@ 0x2c
 800af9e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800afa2:	b085      	sub	sp, #20
 800afa4:	4604      	mov	r4, r0
 800afa6:	b923      	cbnz	r3, 800afb2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800afa8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800afac:	b90b      	cbnz	r3, 800afb2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800afae:	f7ff ffd3 	bl	800af58 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800afb2:	6823      	ldr	r3, [r4, #0]
 800afb4:	466d      	mov	r5, sp
 800afb6:	4621      	mov	r1, r4
 800afb8:	4628      	mov	r0, r5
 800afba:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800afbe:	4798      	blx	r3
 800afc0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800afc4:	343c      	adds	r4, #60	@ 0x3c
 800afc6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800afca:	b005      	add	sp, #20
 800afcc:	bd30      	pop	{r4, r5, pc}

0800afce <_ZNK8touchgfx3Box12getSolidRectEv>:
 800afce:	2300      	movs	r3, #0
 800afd0:	8083      	strh	r3, [r0, #4]
 800afd2:	80c3      	strh	r3, [r0, #6]
 800afd4:	8003      	strh	r3, [r0, #0]
 800afd6:	8043      	strh	r3, [r0, #2]
 800afd8:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800afdc:	2bff      	cmp	r3, #255	@ 0xff
 800afde:	bf01      	itttt	eq
 800afe0:	890b      	ldrheq	r3, [r1, #8]
 800afe2:	8083      	strheq	r3, [r0, #4]
 800afe4:	894b      	ldrheq	r3, [r1, #10]
 800afe6:	80c3      	strheq	r3, [r0, #6]
 800afe8:	4770      	bx	lr
	...

0800afec <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800afec:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800afee:	4604      	mov	r4, r0
 800aff0:	6808      	ldr	r0, [r1, #0]
 800aff2:	6849      	ldr	r1, [r1, #4]
 800aff4:	466b      	mov	r3, sp
 800aff6:	c303      	stmia	r3!, {r0, r1}
 800aff8:	6823      	ldr	r3, [r4, #0]
 800affa:	4669      	mov	r1, sp
 800affc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800affe:	4620      	mov	r0, r4
 800b000:	4798      	blx	r3
 800b002:	4b08      	ldr	r3, [pc, #32]	@ (800b024 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800b004:	681b      	ldr	r3, [r3, #0]
 800b006:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800b00a:	b10a      	cbz	r2, 800b010 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800b00c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800b00e:	b900      	cbnz	r0, 800b012 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800b010:	6898      	ldr	r0, [r3, #8]
 800b012:	6803      	ldr	r3, [r0, #0]
 800b014:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800b016:	6a1d      	ldr	r5, [r3, #32]
 800b018:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800b01c:	4669      	mov	r1, sp
 800b01e:	47a8      	blx	r5
 800b020:	b003      	add	sp, #12
 800b022:	bd30      	pop	{r4, r5, pc}
 800b024:	200119fc 	.word	0x200119fc

0800b028 <_ZN8touchgfx3BoxD1Ev>:
 800b028:	4770      	bx	lr

0800b02a <_ZN8touchgfx3BoxD0Ev>:
 800b02a:	b510      	push	{r4, lr}
 800b02c:	212c      	movs	r1, #44	@ 0x2c
 800b02e:	4604      	mov	r4, r0
 800b030:	f012 fcfa 	bl	801da28 <_ZdlPvj>
 800b034:	4620      	mov	r0, r4
 800b036:	bd10      	pop	{r4, pc}

0800b038 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800b038:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800b03c:	b12a      	cbz	r2, 800b04a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800b03e:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800b042:	b112      	cbz	r2, 800b04a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800b044:	6803      	ldr	r3, [r0, #0]
 800b046:	695b      	ldr	r3, [r3, #20]
 800b048:	4718      	bx	r3
 800b04a:	4770      	bx	lr

0800b04c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800b04c:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
 800b050:	4770      	bx	lr

0800b052 <_ZN8touchgfx6ButtonD1Ev>:
 800b052:	4770      	bx	lr

0800b054 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800b054:	b570      	push	{r4, r5, r6, lr}
 800b056:	880b      	ldrh	r3, [r1, #0]
 800b058:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 800b05a:	4605      	mov	r5, r0
 800b05c:	8813      	ldrh	r3, [r2, #0]
 800b05e:	f825 3f30 	strh.w	r3, [r5, #48]!
 800b062:	4604      	mov	r4, r0
 800b064:	4628      	mov	r0, r5
 800b066:	f005 f85f 	bl	8010128 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b06a:	4606      	mov	r6, r0
 800b06c:	4628      	mov	r0, r5
 800b06e:	f005 f88f 	bl	8010190 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b072:	6823      	ldr	r3, [r4, #0]
 800b074:	4605      	mov	r5, r0
 800b076:	4631      	mov	r1, r6
 800b078:	4620      	mov	r0, r4
 800b07a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b07c:	4798      	blx	r3
 800b07e:	6823      	ldr	r3, [r4, #0]
 800b080:	4629      	mov	r1, r5
 800b082:	4620      	mov	r0, r4
 800b084:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800b086:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b08a:	4718      	bx	r3

0800b08c <_ZN8touchgfx6ButtonD0Ev>:
 800b08c:	b510      	push	{r4, lr}
 800b08e:	2134      	movs	r1, #52	@ 0x34
 800b090:	4604      	mov	r4, r0
 800b092:	f012 fcc9 	bl	801da28 <_ZdlPvj>
 800b096:	4620      	mov	r0, r4
 800b098:	bd10      	pop	{r4, pc}

0800b09a <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800b09a:	b510      	push	{r4, lr}
 800b09c:	4604      	mov	r4, r0
 800b09e:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800b0a0:	b150      	cbz	r0, 800b0b8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800b0a2:	6803      	ldr	r3, [r0, #0]
 800b0a4:	68db      	ldr	r3, [r3, #12]
 800b0a6:	4798      	blx	r3
 800b0a8:	b130      	cbz	r0, 800b0b8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800b0aa:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800b0ac:	6803      	ldr	r3, [r0, #0]
 800b0ae:	4621      	mov	r1, r4
 800b0b0:	689b      	ldr	r3, [r3, #8]
 800b0b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b0b6:	4718      	bx	r3
 800b0b8:	bd10      	pop	{r4, pc}

0800b0ba <_ZNK8touchgfx6Button12getSolidRectEv>:
 800b0ba:	b510      	push	{r4, lr}
 800b0bc:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
 800b0c0:	2bff      	cmp	r3, #255	@ 0xff
 800b0c2:	4604      	mov	r4, r0
 800b0c4:	d006      	beq.n	800b0d4 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800b0c6:	2300      	movs	r3, #0
 800b0c8:	8003      	strh	r3, [r0, #0]
 800b0ca:	8043      	strh	r3, [r0, #2]
 800b0cc:	8083      	strh	r3, [r0, #4]
 800b0ce:	80c3      	strh	r3, [r0, #6]
 800b0d0:	4620      	mov	r0, r4
 800b0d2:	bd10      	pop	{r4, pc}
 800b0d4:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
 800b0d8:	b11b      	cbz	r3, 800b0e2 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800b0da:	3130      	adds	r1, #48	@ 0x30
 800b0dc:	f005 f88c 	bl	80101f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800b0e0:	e7f6      	b.n	800b0d0 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800b0e2:	312e      	adds	r1, #46	@ 0x2e
 800b0e4:	e7fa      	b.n	800b0dc <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800b0e8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800b0e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b0ec:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800b0f0:	b08a      	sub	sp, #40	@ 0x28
 800b0f2:	4604      	mov	r4, r0
 800b0f4:	4688      	mov	r8, r1
 800b0f6:	2b00      	cmp	r3, #0
 800b0f8:	d066      	beq.n	800b1c8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800b0fa:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 800b0fc:	f8ad 3014 	strh.w	r3, [sp, #20]
 800b100:	a805      	add	r0, sp, #20
 800b102:	f005 f811 	bl	8010128 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b106:	4607      	mov	r7, r0
 800b108:	a805      	add	r0, sp, #20
 800b10a:	f005 f841 	bl	8010190 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b10e:	f9b8 6000 	ldrsh.w	r6, [r8]
 800b112:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800b116:	4432      	add	r2, r6
 800b118:	b292      	uxth	r2, r2
 800b11a:	2300      	movs	r3, #0
 800b11c:	fa0f fc82 	sxth.w	ip, r2
 800b120:	459c      	cmp	ip, r3
 800b122:	9306      	str	r3, [sp, #24]
 800b124:	dd52      	ble.n	800b1cc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800b126:	42b7      	cmp	r7, r6
 800b128:	dd50      	ble.n	800b1cc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800b12a:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800b12e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800b132:	442b      	add	r3, r5
 800b134:	b29b      	uxth	r3, r3
 800b136:	b219      	sxth	r1, r3
 800b138:	2900      	cmp	r1, #0
 800b13a:	dd47      	ble.n	800b1cc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800b13c:	42a8      	cmp	r0, r5
 800b13e:	dd45      	ble.n	800b1cc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800b140:	4567      	cmp	r7, ip
 800b142:	bfb8      	it	lt
 800b144:	b2ba      	uxthlt	r2, r7
 800b146:	4288      	cmp	r0, r1
 800b148:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800b14c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800b150:	bfb8      	it	lt
 800b152:	b283      	uxthlt	r3, r0
 800b154:	1b92      	subs	r2, r2, r6
 800b156:	1b5b      	subs	r3, r3, r5
 800b158:	f8ad 201c 	strh.w	r2, [sp, #28]
 800b15c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b160:	f8ad 6018 	strh.w	r6, [sp, #24]
 800b164:	f8ad 501a 	strh.w	r5, [sp, #26]
 800b168:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800b16c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800b170:	429a      	cmp	r2, r3
 800b172:	d026      	beq.n	800b1c2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800b174:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800b178:	2b00      	cmp	r3, #0
 800b17a:	dd22      	ble.n	800b1c2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800b17c:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800b180:	2b00      	cmp	r3, #0
 800b182:	dd1e      	ble.n	800b1c2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800b184:	2300      	movs	r3, #0
 800b186:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800b18a:	6823      	ldr	r3, [r4, #0]
 800b18c:	a908      	add	r1, sp, #32
 800b18e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b190:	4620      	mov	r0, r4
 800b192:	4798      	blx	r3
 800b194:	4b0f      	ldr	r3, [pc, #60]	@ (800b1d4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800b196:	681b      	ldr	r3, [r3, #0]
 800b198:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800b19c:	b10a      	cbz	r2, 800b1a2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800b19e:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800b1a0:	b900      	cbnz	r0, 800b1a4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800b1a2:	6898      	ldr	r0, [r3, #8]
 800b1a4:	6801      	ldr	r1, [r0, #0]
 800b1a6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 800b1aa:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800b1ae:	2501      	movs	r5, #1
 800b1b0:	9502      	str	r5, [sp, #8]
 800b1b2:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 800b1b6:	9401      	str	r4, [sp, #4]
 800b1b8:	ac06      	add	r4, sp, #24
 800b1ba:	9400      	str	r4, [sp, #0]
 800b1bc:	688c      	ldr	r4, [r1, #8]
 800b1be:	a905      	add	r1, sp, #20
 800b1c0:	47a0      	blx	r4
 800b1c2:	b00a      	add	sp, #40	@ 0x28
 800b1c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b1c8:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
 800b1ca:	e797      	b.n	800b0fc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800b1cc:	2300      	movs	r3, #0
 800b1ce:	9307      	str	r3, [sp, #28]
 800b1d0:	e7ca      	b.n	800b168 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800b1d2:	bf00      	nop
 800b1d4:	200119fc 	.word	0x200119fc

0800b1d8 <_ZNK8touchgfx6Button17invalidateContentEv>:
 800b1d8:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
 800b1dc:	b12a      	cbz	r2, 800b1ea <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800b1de:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800b1e2:	b112      	cbz	r2, 800b1ea <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800b1e4:	6803      	ldr	r3, [r0, #0]
 800b1e6:	695b      	ldr	r3, [r3, #20]
 800b1e8:	4718      	bx	r3
 800b1ea:	4770      	bx	lr

0800b1ec <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800b1ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b1f0:	4b2f      	ldr	r3, [pc, #188]	@ (800b2b0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800b1f2:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800b1f4:	881b      	ldrh	r3, [r3, #0]
 800b1f6:	4293      	cmp	r3, r2
 800b1f8:	b08d      	sub	sp, #52	@ 0x34
 800b1fa:	4604      	mov	r4, r0
 800b1fc:	460f      	mov	r7, r1
 800b1fe:	d954      	bls.n	800b2aa <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800b200:	4b2c      	ldr	r3, [pc, #176]	@ (800b2b4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800b202:	6819      	ldr	r1, [r3, #0]
 800b204:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800b208:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800b20c:	4a2a      	ldr	r2, [pc, #168]	@ (800b2b8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800b20e:	6812      	ldr	r2, [r2, #0]
 800b210:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800b214:	2900      	cmp	r1, #0
 800b216:	d048      	beq.n	800b2aa <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800b218:	785a      	ldrb	r2, [r3, #1]
 800b21a:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 800b21e:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 800b222:	4b26      	ldr	r3, [pc, #152]	@ (800b2bc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800b224:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
 800b228:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
 800b22c:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
 800b230:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 800b232:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
 800b236:	9107      	str	r1, [sp, #28]
 800b238:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800b23c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800b240:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
 800b244:	681a      	ldr	r2, [r3, #0]
 800b246:	f88d 8020 	strb.w	r8, [sp, #32]
 800b24a:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 800b24e:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
 800b252:	9609      	str	r6, [sp, #36]	@ 0x24
 800b254:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
 800b258:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
 800b25c:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
 800b260:	b10b      	cbz	r3, 800b266 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800b262:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
 800b264:	b905      	cbnz	r5, 800b268 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800b266:	6895      	ldr	r5, [r2, #8]
 800b268:	ae05      	add	r6, sp, #20
 800b26a:	4621      	mov	r1, r4
 800b26c:	4630      	mov	r0, r6
 800b26e:	f002 fff7 	bl	800e260 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800b272:	4b13      	ldr	r3, [pc, #76]	@ (800b2c0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800b274:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800b276:	6818      	ldr	r0, [r3, #0]
 800b278:	f7f8 fba6 	bl	80039c8 <_ZNK8touchgfx5Texts7getTextEt>
 800b27c:	6823      	ldr	r3, [r4, #0]
 800b27e:	4680      	mov	r8, r0
 800b280:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800b282:	4620      	mov	r0, r4
 800b284:	4798      	blx	r3
 800b286:	6823      	ldr	r3, [r4, #0]
 800b288:	4681      	mov	r9, r0
 800b28a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800b28e:	4620      	mov	r0, r4
 800b290:	4798      	blx	r3
 800b292:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800b296:	ab07      	add	r3, sp, #28
 800b298:	9300      	str	r3, [sp, #0]
 800b29a:	f8cd 8004 	str.w	r8, [sp, #4]
 800b29e:	463b      	mov	r3, r7
 800b2a0:	e896 0006 	ldmia.w	r6, {r1, r2}
 800b2a4:	4628      	mov	r0, r5
 800b2a6:	f7f8 fb41 	bl	800392c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800b2aa:	b00d      	add	sp, #52	@ 0x34
 800b2ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b2b0:	20011a50 	.word	0x20011a50
 800b2b4:	20011a4c 	.word	0x20011a4c
 800b2b8:	20011a54 	.word	0x20011a54
 800b2bc:	200119fc 	.word	0x200119fc
 800b2c0:	20011a58 	.word	0x20011a58

0800b2c4 <_ZN8touchgfx5ImageD1Ev>:
 800b2c4:	4770      	bx	lr

0800b2c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800b2c6:	b570      	push	{r4, r5, r6, lr}
 800b2c8:	880b      	ldrh	r3, [r1, #0]
 800b2ca:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800b2cc:	4604      	mov	r4, r0
 800b2ce:	4608      	mov	r0, r1
 800b2d0:	460d      	mov	r5, r1
 800b2d2:	f004 ff29 	bl	8010128 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b2d6:	4606      	mov	r6, r0
 800b2d8:	4628      	mov	r0, r5
 800b2da:	f004 ff59 	bl	8010190 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b2de:	6823      	ldr	r3, [r4, #0]
 800b2e0:	4605      	mov	r5, r0
 800b2e2:	4631      	mov	r1, r6
 800b2e4:	4620      	mov	r0, r4
 800b2e6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b2e8:	4798      	blx	r3
 800b2ea:	6823      	ldr	r3, [r4, #0]
 800b2ec:	4629      	mov	r1, r5
 800b2ee:	4620      	mov	r0, r4
 800b2f0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800b2f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b2f6:	4718      	bx	r3

0800b2f8 <_ZN8touchgfx5ImageD0Ev>:
 800b2f8:	b510      	push	{r4, lr}
 800b2fa:	212c      	movs	r1, #44	@ 0x2c
 800b2fc:	4604      	mov	r4, r0
 800b2fe:	f012 fb93 	bl	801da28 <_ZdlPvj>
 800b302:	4620      	mov	r0, r4
 800b304:	bd10      	pop	{r4, pc}

0800b306 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800b306:	b510      	push	{r4, lr}
 800b308:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 800b30c:	2bff      	cmp	r3, #255	@ 0xff
 800b30e:	4604      	mov	r4, r0
 800b310:	d006      	beq.n	800b320 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800b312:	2300      	movs	r3, #0
 800b314:	8003      	strh	r3, [r0, #0]
 800b316:	8043      	strh	r3, [r0, #2]
 800b318:	8083      	strh	r3, [r0, #4]
 800b31a:	80c3      	strh	r3, [r0, #6]
 800b31c:	4620      	mov	r0, r4
 800b31e:	bd10      	pop	{r4, pc}
 800b320:	3126      	adds	r1, #38	@ 0x26
 800b322:	f004 ff69 	bl	80101f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800b326:	e7f9      	b.n	800b31c <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800b328 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800b328:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b32c:	4604      	mov	r4, r0
 800b32e:	b088      	sub	sp, #32
 800b330:	f854 3b26 	ldr.w	r3, [r4], #38
 800b334:	2500      	movs	r5, #0
 800b336:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b338:	460f      	mov	r7, r1
 800b33a:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800b33e:	a904      	add	r1, sp, #16
 800b340:	4606      	mov	r6, r0
 800b342:	4798      	blx	r3
 800b344:	4620      	mov	r0, r4
 800b346:	f004 feef 	bl	8010128 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b34a:	4680      	mov	r8, r0
 800b34c:	4620      	mov	r0, r4
 800b34e:	f004 ff1f 	bl	8010190 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b352:	9506      	str	r5, [sp, #24]
 800b354:	ad06      	add	r5, sp, #24
 800b356:	f8ad 001e 	strh.w	r0, [sp, #30]
 800b35a:	4639      	mov	r1, r7
 800b35c:	4628      	mov	r0, r5
 800b35e:	f8ad 801c 	strh.w	r8, [sp, #28]
 800b362:	f7fe fb87 	bl	8009a74 <_ZN8touchgfx4RectaNERKS0_>
 800b366:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800b36a:	2b00      	cmp	r3, #0
 800b36c:	dd19      	ble.n	800b3a2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800b36e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800b372:	2b00      	cmp	r3, #0
 800b374:	dd15      	ble.n	800b3a2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800b376:	4b0c      	ldr	r3, [pc, #48]	@ (800b3a8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800b378:	681b      	ldr	r3, [r3, #0]
 800b37a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800b37e:	b10a      	cbz	r2, 800b384 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800b380:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800b382:	b900      	cbnz	r0, 800b386 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800b384:	6898      	ldr	r0, [r3, #8]
 800b386:	6801      	ldr	r1, [r0, #0]
 800b388:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800b38c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800b390:	2701      	movs	r7, #1
 800b392:	9702      	str	r7, [sp, #8]
 800b394:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
 800b398:	e9cd 5600 	strd	r5, r6, [sp]
 800b39c:	688d      	ldr	r5, [r1, #8]
 800b39e:	4621      	mov	r1, r4
 800b3a0:	47a8      	blx	r5
 800b3a2:	b008      	add	sp, #32
 800b3a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b3a8:	200119fc 	.word	0x200119fc

0800b3ac <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800b3ac:	4770      	bx	lr

0800b3ae <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800b3ae:	b510      	push	{r4, lr}
 800b3b0:	2148      	movs	r1, #72	@ 0x48
 800b3b2:	4604      	mov	r4, r0
 800b3b4:	f012 fb38 	bl	801da28 <_ZdlPvj>
 800b3b8:	4620      	mov	r0, r4
 800b3ba:	bd10      	pop	{r4, pc}

0800b3bc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800b3bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b3c0:	b08d      	sub	sp, #52	@ 0x34
 800b3c2:	4604      	mov	r4, r0
 800b3c4:	460f      	mov	r7, r1
 800b3c6:	f7ff fe8f 	bl	800b0e8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800b3ca:	4a55      	ldr	r2, [pc, #340]	@ (800b520 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 800b3cc:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800b3ce:	8812      	ldrh	r2, [r2, #0]
 800b3d0:	429a      	cmp	r2, r3
 800b3d2:	f240 8082 	bls.w	800b4da <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800b3d6:	4d53      	ldr	r5, [pc, #332]	@ (800b524 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 800b3d8:	682a      	ldr	r2, [r5, #0]
 800b3da:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800b3de:	4b52      	ldr	r3, [pc, #328]	@ (800b528 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 800b3e0:	681b      	ldr	r3, [r3, #0]
 800b3e2:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800b3e6:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	@ 0x46
 800b3ea:	2200      	movs	r2, #0
 800b3ec:	e9cd 2203 	strd	r2, r2, [sp, #12]
 800b3f0:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
 800b3f4:	2a03      	cmp	r2, #3
 800b3f6:	d811      	bhi.n	800b41c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800b3f8:	e8df f002 	tbb	[pc, r2]
 800b3fc:	89727902 	.word	0x89727902
 800b400:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800b404:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800b408:	1ad2      	subs	r2, r2, r3
 800b40a:	2002      	movs	r0, #2
 800b40c:	f8ad 1010 	strh.w	r1, [sp, #16]
 800b410:	fb92 f2f0 	sdiv	r2, r2, r0
 800b414:	f8ad 3012 	strh.w	r3, [sp, #18]
 800b418:	f8ad 200e 	strh.w	r2, [sp, #14]
 800b41c:	f10d 080c 	add.w	r8, sp, #12
 800b420:	e898 0003 	ldmia.w	r8, {r0, r1}
 800b424:	f10d 0914 	add.w	r9, sp, #20
 800b428:	e889 0003 	stmia.w	r9, {r0, r1}
 800b42c:	4639      	mov	r1, r7
 800b42e:	4648      	mov	r0, r9
 800b430:	f7fe fb20 	bl	8009a74 <_ZN8touchgfx4RectaNERKS0_>
 800b434:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800b438:	2b00      	cmp	r3, #0
 800b43a:	dd4e      	ble.n	800b4da <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800b43c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800b440:	2b00      	cmp	r3, #0
 800b442:	dd4a      	ble.n	800b4da <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800b444:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800b448:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800b44c:	1a9b      	subs	r3, r3, r2
 800b44e:	f8ad 3014 	strh.w	r3, [sp, #20]
 800b452:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800b456:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800b45a:	1a9b      	subs	r3, r3, r2
 800b45c:	f8ad 3016 	strh.w	r3, [sp, #22]
 800b460:	6823      	ldr	r3, [r4, #0]
 800b462:	4641      	mov	r1, r8
 800b464:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b466:	4620      	mov	r0, r4
 800b468:	4798      	blx	r3
 800b46a:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 800b46e:	2b00      	cmp	r3, #0
 800b470:	d053      	beq.n	800b51a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 800b472:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800b474:	8f21      	ldrh	r1, [r4, #56]	@ 0x38
 800b476:	682b      	ldr	r3, [r5, #0]
 800b478:	f894 0032 	ldrb.w	r0, [r4, #50]	@ 0x32
 800b47c:	f894 4044 	ldrb.w	r4, [r4, #68]	@ 0x44
 800b480:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800b484:	785b      	ldrb	r3, [r3, #1]
 800b486:	9209      	str	r2, [sp, #36]	@ 0x24
 800b488:	f3c3 0501 	ubfx	r5, r3, #0, #2
 800b48c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800b490:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 800b494:	2300      	movs	r3, #0
 800b496:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 800b49a:	f88d 302b 	strb.w	r3, [sp, #43]	@ 0x2b
 800b49e:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 800b4a2:	4b22      	ldr	r3, [pc, #136]	@ (800b52c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 800b4a4:	9607      	str	r6, [sp, #28]
 800b4a6:	681b      	ldr	r3, [r3, #0]
 800b4a8:	f88d 5020 	strb.w	r5, [sp, #32]
 800b4ac:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800b4b0:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b4b4:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800b4b8:	b10a      	cbz	r2, 800b4be <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 800b4ba:	6cdc      	ldr	r4, [r3, #76]	@ 0x4c
 800b4bc:	b904      	cbnz	r4, 800b4c0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 800b4be:	689c      	ldr	r4, [r3, #8]
 800b4c0:	4b1b      	ldr	r3, [pc, #108]	@ (800b530 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 800b4c2:	6818      	ldr	r0, [r3, #0]
 800b4c4:	f7f8 fa80 	bl	80039c8 <_ZNK8touchgfx5Texts7getTextEt>
 800b4c8:	ab07      	add	r3, sp, #28
 800b4ca:	9001      	str	r0, [sp, #4]
 800b4cc:	9300      	str	r3, [sp, #0]
 800b4ce:	e898 0006 	ldmia.w	r8, {r1, r2}
 800b4d2:	464b      	mov	r3, r9
 800b4d4:	4620      	mov	r0, r4
 800b4d6:	f7f8 fa29 	bl	800392c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800b4da:	b00d      	add	sp, #52	@ 0x34
 800b4dc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b4e0:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800b4e4:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800b4e8:	1ad2      	subs	r2, r2, r3
 800b4ea:	3201      	adds	r2, #1
 800b4ec:	e78d      	b.n	800b40a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 800b4ee:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800b4f2:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800b4f6:	1ad2      	subs	r2, r2, r3
 800b4f8:	3201      	adds	r2, #1
 800b4fa:	2002      	movs	r0, #2
 800b4fc:	f8ad 3010 	strh.w	r3, [sp, #16]
 800b500:	fb92 f2f0 	sdiv	r2, r2, r0
 800b504:	f8ad 1012 	strh.w	r1, [sp, #18]
 800b508:	f8ad 200c 	strh.w	r2, [sp, #12]
 800b50c:	e786      	b.n	800b41c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800b50e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800b512:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800b516:	1ad2      	subs	r2, r2, r3
 800b518:	e7ef      	b.n	800b4fa <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 800b51a:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 800b51c:	e7aa      	b.n	800b474 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 800b51e:	bf00      	nop
 800b520:	20011a50 	.word	0x20011a50
 800b524:	20011a4c 	.word	0x20011a4c
 800b528:	20011a54 	.word	0x20011a54
 800b52c:	200119fc 	.word	0x200119fc
 800b530:	20011a58 	.word	0x20011a58

0800b534 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800b534:	b510      	push	{r4, lr}
 800b536:	2101      	movs	r1, #1
 800b538:	4c13      	ldr	r4, [pc, #76]	@ (800b588 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800b53a:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 800b53e:	2200      	movs	r2, #0
 800b540:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
 800b544:	6004      	str	r4, [r0, #0]
 800b546:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800b54a:	4c10      	ldr	r4, [pc, #64]	@ (800b58c <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 800b54c:	8082      	strh	r2, [r0, #4]
 800b54e:	80c2      	strh	r2, [r0, #6]
 800b550:	8102      	strh	r2, [r0, #8]
 800b552:	8142      	strh	r2, [r0, #10]
 800b554:	8182      	strh	r2, [r0, #12]
 800b556:	81c2      	strh	r2, [r0, #14]
 800b558:	8202      	strh	r2, [r0, #16]
 800b55a:	8242      	strh	r2, [r0, #18]
 800b55c:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800b560:	61c2      	str	r2, [r0, #28]
 800b562:	8402      	strh	r2, [r0, #32]
 800b564:	8442      	strh	r2, [r0, #34]	@ 0x22
 800b566:	6282      	str	r2, [r0, #40]	@ 0x28
 800b568:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
 800b56c:	85c1      	strh	r1, [r0, #46]	@ 0x2e
 800b56e:	8601      	strh	r1, [r0, #48]	@ 0x30
 800b570:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
 800b574:	6344      	str	r4, [r0, #52]	@ 0x34
 800b576:	8701      	strh	r1, [r0, #56]	@ 0x38
 800b578:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 800b57c:	f880 2044 	strb.w	r2, [r0, #68]	@ 0x44
 800b580:	f8a0 2046 	strh.w	r2, [r0, #70]	@ 0x46
 800b584:	bd10      	pop	{r4, pc}
 800b586:	bf00      	nop
 800b588:	08020594 	.word	0x08020594
 800b58c:	0801f484 	.word	0x0801f484

0800b590 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800b590:	b510      	push	{r4, lr}
 800b592:	6803      	ldr	r3, [r0, #0]
 800b594:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b596:	460c      	mov	r4, r1
 800b598:	4798      	blx	r3
 800b59a:	1b03      	subs	r3, r0, r4
 800b59c:	4258      	negs	r0, r3
 800b59e:	4158      	adcs	r0, r3
 800b5a0:	bd10      	pop	{r4, pc}
	...

0800b5a4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800b5a4:	4b01      	ldr	r3, [pc, #4]	@ (800b5ac <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800b5a6:	6019      	str	r1, [r3, #0]
 800b5a8:	4770      	bx	lr
 800b5aa:	bf00      	nop
 800b5ac:	20011a04 	.word	0x20011a04

0800b5b0 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800b5b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b5b4:	4696      	mov	lr, r2
 800b5b6:	4605      	mov	r5, r0
 800b5b8:	4614      	mov	r4, r2
 800b5ba:	460e      	mov	r6, r1
 800b5bc:	461f      	mov	r7, r3
 800b5be:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b5c2:	b097      	sub	sp, #92	@ 0x5c
 800b5c4:	f10d 0c1c 	add.w	ip, sp, #28
 800b5c8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b5cc:	f8de 3000 	ldr.w	r3, [lr]
 800b5d0:	f8cc 3000 	str.w	r3, [ip]
 800b5d4:	f104 0e14 	add.w	lr, r4, #20
 800b5d8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b5dc:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800b5e0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b5e4:	f8de 3000 	ldr.w	r3, [lr]
 800b5e8:	f8cc 3000 	str.w	r3, [ip]
 800b5ec:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800b5f0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b5f4:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800b5f8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b5fc:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800b600:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800b604:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800b608:	f8de 3000 	ldr.w	r3, [lr]
 800b60c:	f8cc 3000 	str.w	r3, [ip]
 800b610:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800b612:	682b      	ldr	r3, [r5, #0]
 800b614:	9201      	str	r2, [sp, #4]
 800b616:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800b61a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800b61c:	9200      	str	r2, [sp, #0]
 800b61e:	f8cd 8008 	str.w	r8, [sp, #8]
 800b622:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800b626:	aa07      	add	r2, sp, #28
 800b628:	463b      	mov	r3, r7
 800b62a:	4631      	mov	r1, r6
 800b62c:	4628      	mov	r0, r5
 800b62e:	47d8      	blx	fp
 800b630:	46a6      	mov	lr, r4
 800b632:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b636:	f10d 0c1c 	add.w	ip, sp, #28
 800b63a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b63e:	f8de 3000 	ldr.w	r3, [lr]
 800b642:	f8cc 3000 	str.w	r3, [ip]
 800b646:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800b64a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b64e:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800b652:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b656:	343c      	adds	r4, #60	@ 0x3c
 800b658:	f8de 3000 	ldr.w	r3, [lr]
 800b65c:	f8cc 3000 	str.w	r3, [ip]
 800b660:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b662:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800b666:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b66a:	6823      	ldr	r3, [r4, #0]
 800b66c:	f8cc 3000 	str.w	r3, [ip]
 800b670:	682b      	ldr	r3, [r5, #0]
 800b672:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800b676:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800b678:	9201      	str	r2, [sp, #4]
 800b67a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800b67c:	9200      	str	r2, [sp, #0]
 800b67e:	f8cd 8008 	str.w	r8, [sp, #8]
 800b682:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800b684:	aa07      	add	r2, sp, #28
 800b686:	463b      	mov	r3, r7
 800b688:	4631      	mov	r1, r6
 800b68a:	4628      	mov	r0, r5
 800b68c:	47a0      	blx	r4
 800b68e:	b017      	add	sp, #92	@ 0x5c
 800b690:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b694 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800b694:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b698:	b08d      	sub	sp, #52	@ 0x34
 800b69a:	4688      	mov	r8, r1
 800b69c:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800b69e:	f8d3 c000 	ldr.w	ip, [r3]
 800b6a2:	680f      	ldr	r7, [r1, #0]
 800b6a4:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800b6a8:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800b6ac:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800b6b0:	edd3 6a07 	vldr	s13, [r3, #28]
 800b6b4:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800b6b6:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800b6ba:	f9b1 9000 	ldrsh.w	r9, [r1]
 800b6be:	f9ba 1000 	ldrsh.w	r1, [sl]
 800b6c2:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 800b6c6:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 800b6ca:	eba7 070c 	sub.w	r7, r7, ip
 800b6ce:	42bc      	cmp	r4, r7
 800b6d0:	bfa8      	it	ge
 800b6d2:	463c      	movge	r4, r7
 800b6d4:	ee07 4a90 	vmov	s15, r4
 800b6d8:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800b6dc:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 800b6e0:	ee25 4a04 	vmul.f32	s8, s10, s8
 800b6e4:	ee65 4a24 	vmul.f32	s9, s10, s9
 800b6e8:	ee25 5a27 	vmul.f32	s10, s10, s15
 800b6ec:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800b6f0:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800b6f4:	eb09 0e0c 	add.w	lr, r9, ip
 800b6f8:	4571      	cmp	r1, lr
 800b6fa:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800b6fe:	ee32 1a05 	vadd.f32	s2, s4, s10
 800b702:	ee36 0a84 	vadd.f32	s0, s13, s8
 800b706:	ee61 1a87 	vmul.f32	s3, s3, s14
 800b70a:	ee22 2a07 	vmul.f32	s4, s4, s14
 800b70e:	f340 808d 	ble.w	800b82c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800b712:	eba1 060e 	sub.w	r6, r1, lr
 800b716:	fb96 f5f4 	sdiv	r5, r6, r4
 800b71a:	ee07 5a10 	vmov	s14, r5
 800b71e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800b722:	2d00      	cmp	r5, #0
 800b724:	fb04 6615 	mls	r6, r4, r5, r6
 800b728:	eea7 0a04 	vfma.f32	s0, s14, s8
 800b72c:	eee7 0a24 	vfma.f32	s1, s14, s9
 800b730:	eea7 1a05 	vfma.f32	s2, s14, s10
 800b734:	dd13      	ble.n	800b75e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800b736:	ee70 6a44 	vsub.f32	s13, s0, s8
 800b73a:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800b73e:	eef5 6a40 	vcmp.f32	s13, #0.0
 800b742:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b746:	bf18      	it	ne
 800b748:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800b74c:	ee31 2a45 	vsub.f32	s4, s2, s10
 800b750:	bf08      	it	eq
 800b752:	eeb0 7a67 	vmoveq.f32	s14, s15
 800b756:	ee61 1a87 	vmul.f32	s3, s3, s14
 800b75a:	ee22 2a07 	vmul.f32	s4, s4, s14
 800b75e:	fb05 f204 	mul.w	r2, r5, r4
 800b762:	1abf      	subs	r7, r7, r2
 800b764:	4494      	add	ip, r2
 800b766:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800b76a:	4411      	add	r1, r2
 800b76c:	eb09 020c 	add.w	r2, r9, ip
 800b770:	443a      	add	r2, r7
 800b772:	b209      	sxth	r1, r1
 800b774:	428a      	cmp	r2, r1
 800b776:	bfc4      	itt	gt
 800b778:	eba1 0209 	subgt.w	r2, r1, r9
 800b77c:	eba2 070c 	subgt.w	r7, r2, ip
 800b780:	2f00      	cmp	r7, #0
 800b782:	dd50      	ble.n	800b826 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800b784:	fb97 f1f4 	sdiv	r1, r7, r4
 800b788:	fb04 7211 	mls	r2, r4, r1, r7
 800b78c:	b90a      	cbnz	r2, 800b792 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800b78e:	3901      	subs	r1, #1
 800b790:	4622      	mov	r2, r4
 800b792:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800b796:	6840      	ldr	r0, [r0, #4]
 800b798:	900b      	str	r0, [sp, #44]	@ 0x2c
 800b79a:	f8d0 a000 	ldr.w	sl, [r0]
 800b79e:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800b7a0:	9008      	str	r0, [sp, #32]
 800b7a2:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 800b7a6:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800b7a8:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800b7ac:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800b7b0:	695b      	ldr	r3, [r3, #20]
 800b7b2:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800b7b4:	445b      	add	r3, fp
 800b7b6:	eef0 6a42 	vmov.f32	s13, s4
 800b7ba:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800b7be:	ee21 3a23 	vmul.f32	s6, s2, s7
 800b7c2:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800b7c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800b7ca:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800b7ce:	9307      	str	r3, [sp, #28]
 800b7d0:	ee17 7a90 	vmov	r7, s15
 800b7d4:	ee73 7a42 	vsub.f32	s15, s6, s4
 800b7d8:	eeb0 7a61 	vmov.f32	s14, s3
 800b7dc:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800b7e0:	ee16 3a90 	vmov	r3, s13
 800b7e4:	fb97 f7f4 	sdiv	r7, r7, r4
 800b7e8:	ee17 ca90 	vmov	ip, s15
 800b7ec:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800b7f0:	fb9c fcf4 	sdiv	ip, ip, r4
 800b7f4:	fb0c 3306 	mla	r3, ip, r6, r3
 800b7f8:	9302      	str	r3, [sp, #8]
 800b7fa:	ee17 3a10 	vmov	r3, s14
 800b7fe:	44b6      	add	lr, r6
 800b800:	fb04 e505 	mla	r5, r4, r5, lr
 800b804:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800b808:	fb07 3706 	mla	r7, r7, r6, r3
 800b80c:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800b810:	e9cd 4700 	strd	r4, r7, [sp]
 800b814:	2900      	cmp	r1, #0
 800b816:	bfcc      	ite	gt
 800b818:	46a1      	movgt	r9, r4
 800b81a:	4691      	movle	r9, r2
 800b81c:	eba9 0306 	sub.w	r3, r9, r6
 800b820:	f8da 4008 	ldr.w	r4, [sl, #8]
 800b824:	47a0      	blx	r4
 800b826:	b00d      	add	sp, #52	@ 0x34
 800b828:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b82c:	2500      	movs	r5, #0
 800b82e:	462e      	mov	r6, r5
 800b830:	e799      	b.n	800b766 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800b834 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800b834:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b838:	b0db      	sub	sp, #364	@ 0x16c
 800b83a:	461d      	mov	r5, r3
 800b83c:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 800b840:	930a      	str	r3, [sp, #40]	@ 0x28
 800b842:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 800b846:	930b      	str	r3, [sp, #44]	@ 0x2c
 800b848:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 800b84c:	9310      	str	r3, [sp, #64]	@ 0x40
 800b84e:	6803      	ldr	r3, [r0, #0]
 800b850:	910f      	str	r1, [sp, #60]	@ 0x3c
 800b852:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 800b854:	9009      	str	r0, [sp, #36]	@ 0x24
 800b856:	4614      	mov	r4, r2
 800b858:	4629      	mov	r1, r5
 800b85a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 800b85e:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 800b862:	47b8      	blx	r7
 800b864:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b866:	6058      	str	r0, [r3, #4]
 800b868:	2800      	cmp	r0, #0
 800b86a:	f000 83a1 	beq.w	800bfb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b86e:	682b      	ldr	r3, [r5, #0]
 800b870:	9314      	str	r3, [sp, #80]	@ 0x50
 800b872:	686b      	ldr	r3, [r5, #4]
 800b874:	9315      	str	r3, [sp, #84]	@ 0x54
 800b876:	4bc4      	ldr	r3, [pc, #784]	@ (800bb88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800b878:	ed94 7a02 	vldr	s14, [r4, #8]
 800b87c:	7819      	ldrb	r1, [r3, #0]
 800b87e:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800b882:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 800b886:	2900      	cmp	r1, #0
 800b888:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b88c:	bf16      	itet	ne
 800b88e:	4619      	movne	r1, r3
 800b890:	4611      	moveq	r1, r2
 800b892:	4613      	movne	r3, r2
 800b894:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b898:	9116      	str	r1, [sp, #88]	@ 0x58
 800b89a:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 800b89e:	f240 8387 	bls.w	800bfb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b8a2:	ed94 7a07 	vldr	s14, [r4, #28]
 800b8a6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b8aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b8ae:	f240 837f 	bls.w	800bfb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b8b2:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800b8b6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b8ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b8be:	f240 8377 	bls.w	800bfb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b8c2:	6822      	ldr	r2, [r4, #0]
 800b8c4:	4bb1      	ldr	r3, [pc, #708]	@ (800bb8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800b8c6:	429a      	cmp	r2, r3
 800b8c8:	f2c0 8372 	blt.w	800bfb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b8cc:	49b0      	ldr	r1, [pc, #704]	@ (800bb90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800b8ce:	6963      	ldr	r3, [r4, #20]
 800b8d0:	428a      	cmp	r2, r1
 800b8d2:	f300 836d 	bgt.w	800bfb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b8d6:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800b8da:	48ae      	ldr	r0, [pc, #696]	@ (800bb94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800b8dc:	33ff      	adds	r3, #255	@ 0xff
 800b8de:	4283      	cmp	r3, r0
 800b8e0:	f200 8366 	bhi.w	800bfb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b8e4:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800b8e6:	4dac      	ldr	r5, [pc, #688]	@ (800bb98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800b8e8:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800b8ec:	33ff      	adds	r3, #255	@ 0xff
 800b8ee:	42ab      	cmp	r3, r5
 800b8f0:	f200 835e 	bhi.w	800bfb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b8f4:	6862      	ldr	r2, [r4, #4]
 800b8f6:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 800b8fa:	33ff      	adds	r3, #255	@ 0xff
 800b8fc:	4283      	cmp	r3, r0
 800b8fe:	f200 8357 	bhi.w	800bfb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b902:	69a1      	ldr	r1, [r4, #24]
 800b904:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 800b908:	33ff      	adds	r3, #255	@ 0xff
 800b90a:	4283      	cmp	r3, r0
 800b90c:	f200 8350 	bhi.w	800bfb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b910:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800b912:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 800b916:	30ff      	adds	r0, #255	@ 0xff
 800b918:	42a8      	cmp	r0, r5
 800b91a:	f200 8349 	bhi.w	800bfb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b91e:	428a      	cmp	r2, r1
 800b920:	f280 8110 	bge.w	800bb44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800b924:	429a      	cmp	r2, r3
 800b926:	f300 8119 	bgt.w	800bb5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800b92a:	4299      	cmp	r1, r3
 800b92c:	f280 811d 	bge.w	800bb6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800b930:	2502      	movs	r5, #2
 800b932:	2701      	movs	r7, #1
 800b934:	46a9      	mov	r9, r5
 800b936:	46b8      	mov	r8, r7
 800b938:	f04f 0a00 	mov.w	sl, #0
 800b93c:	4621      	mov	r1, r4
 800b93e:	a849      	add	r0, sp, #292	@ 0x124
 800b940:	f003 fdae 	bl	800f4a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800b944:	4622      	mov	r2, r4
 800b946:	4653      	mov	r3, sl
 800b948:	a949      	add	r1, sp, #292	@ 0x124
 800b94a:	f8cd 9000 	str.w	r9, [sp]
 800b94e:	a819      	add	r0, sp, #100	@ 0x64
 800b950:	f003 fed6 	bl	800f700 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b954:	4622      	mov	r2, r4
 800b956:	4653      	mov	r3, sl
 800b958:	a949      	add	r1, sp, #292	@ 0x124
 800b95a:	f8cd 8000 	str.w	r8, [sp]
 800b95e:	a829      	add	r0, sp, #164	@ 0xa4
 800b960:	f003 fece 	bl	800f700 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b964:	4643      	mov	r3, r8
 800b966:	4622      	mov	r2, r4
 800b968:	a949      	add	r1, sp, #292	@ 0x124
 800b96a:	f8cd 9000 	str.w	r9, [sp]
 800b96e:	a839      	add	r0, sp, #228	@ 0xe4
 800b970:	f003 fec6 	bl	800f700 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b974:	42af      	cmp	r7, r5
 800b976:	bfb5      	itete	lt
 800b978:	2300      	movlt	r3, #0
 800b97a:	2301      	movge	r3, #1
 800b97c:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800b97e:	930e      	strge	r3, [sp, #56]	@ 0x38
 800b980:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800b982:	e893 0003 	ldmia.w	r3, {r0, r1}
 800b986:	af12      	add	r7, sp, #72	@ 0x48
 800b988:	bfb9      	ittee	lt
 800b98a:	ad29      	addlt	r5, sp, #164	@ 0xa4
 800b98c:	ac19      	addlt	r4, sp, #100	@ 0x64
 800b98e:	ad19      	addge	r5, sp, #100	@ 0x64
 800b990:	ac29      	addge	r4, sp, #164	@ 0xa4
 800b992:	e887 0003 	stmia.w	r7, {r0, r1}
 800b996:	b928      	cbnz	r0, 800b9a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800b998:	4b80      	ldr	r3, [pc, #512]	@ (800bb9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800b99a:	6818      	ldr	r0, [r3, #0]
 800b99c:	6803      	ldr	r3, [r0, #0]
 800b99e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b9a0:	4798      	blx	r3
 800b9a2:	6038      	str	r0, [r7, #0]
 800b9a4:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800b9a6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800b9aa:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800b9ae:	930c      	str	r3, [sp, #48]	@ 0x30
 800b9b0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800b9b2:	6963      	ldr	r3, [r4, #20]
 800b9b4:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 800b9b6:	440b      	add	r3, r1
 800b9b8:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800b9bc:	4408      	add	r0, r1
 800b9be:	b200      	sxth	r0, r0
 800b9c0:	4283      	cmp	r3, r0
 800b9c2:	900d      	str	r0, [sp, #52]	@ 0x34
 800b9c4:	f280 80dd 	bge.w	800bb82 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800b9c8:	428b      	cmp	r3, r1
 800b9ca:	da08      	bge.n	800b9de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b9cc:	2a00      	cmp	r2, #0
 800b9ce:	dd06      	ble.n	800b9de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b9d0:	1acb      	subs	r3, r1, r3
 800b9d2:	429a      	cmp	r2, r3
 800b9d4:	f2c0 80e4 	blt.w	800bba0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800b9d8:	2b00      	cmp	r3, #0
 800b9da:	f300 80e2 	bgt.w	800bba2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800b9de:	6967      	ldr	r7, [r4, #20]
 800b9e0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800b9e2:	443b      	add	r3, r7
 800b9e4:	461f      	mov	r7, r3
 800b9e6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800b9e8:	1bdf      	subs	r7, r3, r7
 800b9ea:	4297      	cmp	r7, r2
 800b9ec:	bfa8      	it	ge
 800b9ee:	4617      	movge	r7, r2
 800b9f0:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800b9f4:	2f00      	cmp	r7, #0
 800b9f6:	f340 8166 	ble.w	800bcc6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800b9fa:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800b9fc:	6829      	ldr	r1, [r5, #0]
 800b9fe:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ba02:	f9bb 3000 	ldrsh.w	r3, [fp]
 800ba06:	6820      	ldr	r0, [r4, #0]
 800ba08:	4411      	add	r1, r2
 800ba0a:	4299      	cmp	r1, r3
 800ba0c:	dd1a      	ble.n	800ba44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800ba0e:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800ba12:	440b      	add	r3, r1
 800ba14:	4402      	add	r2, r0
 800ba16:	b21b      	sxth	r3, r3
 800ba18:	429a      	cmp	r2, r3
 800ba1a:	dc13      	bgt.n	800ba44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800ba1c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ba1e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800ba20:	681b      	ldr	r3, [r3, #0]
 800ba22:	9206      	str	r2, [sp, #24]
 800ba24:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800ba26:	9205      	str	r2, [sp, #20]
 800ba28:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800ba2a:	9500      	str	r5, [sp, #0]
 800ba2c:	e9cd b203 	strd	fp, r2, [sp, #12]
 800ba30:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800ba32:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800ba34:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800ba38:	a912      	add	r1, sp, #72	@ 0x48
 800ba3a:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800ba3e:	aa49      	add	r2, sp, #292	@ 0x124
 800ba40:	4623      	mov	r3, r4
 800ba42:	47c8      	blx	r9
 800ba44:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ba48:	441a      	add	r2, r3
 800ba4a:	6963      	ldr	r3, [r4, #20]
 800ba4c:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800ba50:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800ba54:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800ba58:	68a1      	ldr	r1, [r4, #8]
 800ba5a:	ed94 6a08 	vldr	s12, [r4, #32]
 800ba5e:	6022      	str	r2, [r4, #0]
 800ba60:	3301      	adds	r3, #1
 800ba62:	6163      	str	r3, [r4, #20]
 800ba64:	69a3      	ldr	r3, [r4, #24]
 800ba66:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ba6a:	3b01      	subs	r3, #1
 800ba6c:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800ba70:	61a3      	str	r3, [r4, #24]
 800ba72:	6923      	ldr	r3, [r4, #16]
 800ba74:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800ba78:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ba7c:	edd4 6a07 	vldr	s13, [r4, #28]
 800ba80:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800ba84:	440b      	add	r3, r1
 800ba86:	68e1      	ldr	r1, [r4, #12]
 800ba88:	6123      	str	r3, [r4, #16]
 800ba8a:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ba8e:	428b      	cmp	r3, r1
 800ba90:	edc4 6a07 	vstr	s13, [r4, #28]
 800ba94:	db15      	blt.n	800bac2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800ba96:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800ba9a:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ba9e:	3201      	adds	r2, #1
 800baa0:	edc4 6a07 	vstr	s13, [r4, #28]
 800baa4:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800baa8:	6022      	str	r2, [r4, #0]
 800baaa:	ee36 7a87 	vadd.f32	s14, s13, s14
 800baae:	1a5b      	subs	r3, r3, r1
 800bab0:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800bab4:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800bab8:	6123      	str	r3, [r4, #16]
 800baba:	ee77 7a27 	vadd.f32	s15, s14, s15
 800babe:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800bac2:	e9d5 2300 	ldrd	r2, r3, [r5]
 800bac6:	441a      	add	r2, r3
 800bac8:	696b      	ldr	r3, [r5, #20]
 800baca:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800bace:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800bad2:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800bad6:	68a9      	ldr	r1, [r5, #8]
 800bad8:	ed95 6a08 	vldr	s12, [r5, #32]
 800badc:	602a      	str	r2, [r5, #0]
 800bade:	3301      	adds	r3, #1
 800bae0:	616b      	str	r3, [r5, #20]
 800bae2:	69ab      	ldr	r3, [r5, #24]
 800bae4:	ee37 7a27 	vadd.f32	s14, s14, s15
 800bae8:	3b01      	subs	r3, #1
 800baea:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800baee:	61ab      	str	r3, [r5, #24]
 800baf0:	692b      	ldr	r3, [r5, #16]
 800baf2:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800baf6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800bafa:	edd5 6a07 	vldr	s13, [r5, #28]
 800bafe:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800bb02:	440b      	add	r3, r1
 800bb04:	68e9      	ldr	r1, [r5, #12]
 800bb06:	612b      	str	r3, [r5, #16]
 800bb08:	ee76 6a86 	vadd.f32	s13, s13, s12
 800bb0c:	428b      	cmp	r3, r1
 800bb0e:	edc5 6a07 	vstr	s13, [r5, #28]
 800bb12:	db15      	blt.n	800bb40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800bb14:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800bb18:	ee76 6a26 	vadd.f32	s13, s12, s13
 800bb1c:	3201      	adds	r2, #1
 800bb1e:	edc5 6a07 	vstr	s13, [r5, #28]
 800bb22:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800bb26:	602a      	str	r2, [r5, #0]
 800bb28:	ee36 7a87 	vadd.f32	s14, s13, s14
 800bb2c:	1a5b      	subs	r3, r3, r1
 800bb2e:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800bb32:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800bb36:	612b      	str	r3, [r5, #16]
 800bb38:	ee77 7a27 	vadd.f32	s15, s14, s15
 800bb3c:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800bb40:	3f01      	subs	r7, #1
 800bb42:	e757      	b.n	800b9f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800bb44:	4299      	cmp	r1, r3
 800bb46:	dc13      	bgt.n	800bb70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800bb48:	429a      	cmp	r2, r3
 800bb4a:	da14      	bge.n	800bb76 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800bb4c:	2502      	movs	r5, #2
 800bb4e:	2703      	movs	r7, #3
 800bb50:	46a9      	mov	r9, r5
 800bb52:	f04f 0800 	mov.w	r8, #0
 800bb56:	f04f 0a01 	mov.w	sl, #1
 800bb5a:	e6ef      	b.n	800b93c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800bb5c:	2501      	movs	r5, #1
 800bb5e:	2700      	movs	r7, #0
 800bb60:	46a9      	mov	r9, r5
 800bb62:	46b8      	mov	r8, r7
 800bb64:	f04f 0a02 	mov.w	sl, #2
 800bb68:	e6e8      	b.n	800b93c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800bb6a:	2501      	movs	r5, #1
 800bb6c:	2702      	movs	r7, #2
 800bb6e:	e6e1      	b.n	800b934 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800bb70:	2500      	movs	r5, #0
 800bb72:	2701      	movs	r7, #1
 800bb74:	e7f4      	b.n	800bb60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800bb76:	2702      	movs	r7, #2
 800bb78:	2503      	movs	r5, #3
 800bb7a:	f04f 0900 	mov.w	r9, #0
 800bb7e:	46b8      	mov	r8, r7
 800bb80:	e7e9      	b.n	800bb56 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800bb82:	4613      	mov	r3, r2
 800bb84:	e728      	b.n	800b9d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800bb86:	bf00      	nop
 800bb88:	200119f4 	.word	0x200119f4
 800bb8c:	fffd8f01 	.word	0xfffd8f01
 800bb90:	00027100 	.word	0x00027100
 800bb94:	0004e1ff 	.word	0x0004e1ff
 800bb98:	0004e1fe 	.word	0x0004e1fe
 800bb9c:	200119fc 	.word	0x200119fc
 800bba0:	4613      	mov	r3, r2
 800bba2:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800bba4:	9111      	str	r1, [sp, #68]	@ 0x44
 800bba6:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 800bbaa:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 800bbae:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 800bbb0:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 800bbb4:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 800bbb8:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 800bbbc:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 800bbc0:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 800bbc4:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 800bbc8:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 800bbcc:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 800bbd0:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 800bbd4:	469e      	mov	lr, r3
 800bbd6:	469c      	mov	ip, r3
 800bbd8:	f04f 0900 	mov.w	r9, #0
 800bbdc:	f1bc 0f00 	cmp.w	ip, #0
 800bbe0:	d147      	bne.n	800bc72 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800bbe2:	eb03 0c07 	add.w	ip, r3, r7
 800bbe6:	1ad7      	subs	r7, r2, r3
 800bbe8:	f1b9 0f00 	cmp.w	r9, #0
 800bbec:	d009      	beq.n	800bc02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800bbee:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 800bbf2:	9029      	str	r0, [sp, #164]	@ 0xa4
 800bbf4:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 800bbf8:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 800bbfc:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 800bc00:	912d      	str	r1, [sp, #180]	@ 0xb4
 800bc02:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800bc04:	9111      	str	r1, [sp, #68]	@ 0x44
 800bc06:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800bc0a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800bc0e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800bc12:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800bc16:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800bc1a:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800bc1e:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800bc22:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800bc26:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800bc2a:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800bc2e:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800bc32:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800bc36:	f04f 0800 	mov.w	r8, #0
 800bc3a:	f1be 0f00 	cmp.w	lr, #0
 800bc3e:	d031      	beq.n	800bca4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800bc40:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800bc42:	4431      	add	r1, r6
 800bc44:	4549      	cmp	r1, r9
 800bc46:	4450      	add	r0, sl
 800bc48:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800bc4c:	ee37 7a04 	vadd.f32	s14, s14, s8
 800bc50:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800bc54:	db08      	blt.n	800bc68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800bc56:	ee77 7a85 	vadd.f32	s15, s15, s10
 800bc5a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800bc5e:	ee37 7a06 	vadd.f32	s14, s14, s12
 800bc62:	3001      	adds	r0, #1
 800bc64:	eba1 0109 	sub.w	r1, r1, r9
 800bc68:	f10e 3eff 	add.w	lr, lr, #4294967295
 800bc6c:	f04f 0801 	mov.w	r8, #1
 800bc70:	e7e3      	b.n	800bc3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800bc72:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800bc74:	4431      	add	r1, r6
 800bc76:	4541      	cmp	r1, r8
 800bc78:	4450      	add	r0, sl
 800bc7a:	ee37 7a24 	vadd.f32	s14, s14, s9
 800bc7e:	ee77 7a84 	vadd.f32	s15, s15, s8
 800bc82:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800bc86:	db08      	blt.n	800bc9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800bc88:	ee76 6a85 	vadd.f32	s13, s13, s10
 800bc8c:	ee37 7a25 	vadd.f32	s14, s14, s11
 800bc90:	ee77 7a86 	vadd.f32	s15, s15, s12
 800bc94:	3001      	adds	r0, #1
 800bc96:	eba1 0108 	sub.w	r1, r1, r8
 800bc9a:	f10c 3cff 	add.w	ip, ip, #4294967295
 800bc9e:	f04f 0901 	mov.w	r9, #1
 800bca2:	e79b      	b.n	800bbdc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800bca4:	449c      	add	ip, r3
 800bca6:	1aff      	subs	r7, r7, r3
 800bca8:	f1b8 0f00 	cmp.w	r8, #0
 800bcac:	d009      	beq.n	800bcc2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800bcae:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800bcb2:	9019      	str	r0, [sp, #100]	@ 0x64
 800bcb4:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800bcb8:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800bcbc:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800bcc0:	911d      	str	r1, [sp, #116]	@ 0x74
 800bcc2:	1ad2      	subs	r2, r2, r3
 800bcc4:	e68b      	b.n	800b9de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800bcc6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800bcc8:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 800bcca:	2b00      	cmp	r3, #0
 800bccc:	f000 80d1 	beq.w	800be72 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800bcd0:	ad19      	add	r5, sp, #100	@ 0x64
 800bcd2:	ac39      	add	r4, sp, #228	@ 0xe4
 800bcd4:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800bcd6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800bcda:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800bcde:	930c      	str	r3, [sp, #48]	@ 0x30
 800bce0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800bce2:	6963      	ldr	r3, [r4, #20]
 800bce4:	440b      	add	r3, r1
 800bce6:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800bcea:	4408      	add	r0, r1
 800bcec:	b200      	sxth	r0, r0
 800bcee:	4283      	cmp	r3, r0
 800bcf0:	900d      	str	r0, [sp, #52]	@ 0x34
 800bcf2:	f280 80c1 	bge.w	800be78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800bcf6:	428b      	cmp	r3, r1
 800bcf8:	da08      	bge.n	800bd0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800bcfa:	2a00      	cmp	r2, #0
 800bcfc:	dd06      	ble.n	800bd0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800bcfe:	1acb      	subs	r3, r1, r3
 800bd00:	429a      	cmp	r2, r3
 800bd02:	f2c0 80bb 	blt.w	800be7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800bd06:	2b00      	cmp	r3, #0
 800bd08:	f300 80b9 	bgt.w	800be7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800bd0c:	6967      	ldr	r7, [r4, #20]
 800bd0e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800bd10:	443b      	add	r3, r7
 800bd12:	461f      	mov	r7, r3
 800bd14:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800bd16:	1bdf      	subs	r7, r3, r7
 800bd18:	4297      	cmp	r7, r2
 800bd1a:	bfa8      	it	ge
 800bd1c:	4617      	movge	r7, r2
 800bd1e:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800bd22:	2f00      	cmp	r7, #0
 800bd24:	f340 813c 	ble.w	800bfa0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800bd28:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800bd2a:	6829      	ldr	r1, [r5, #0]
 800bd2c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800bd30:	f9bb 3000 	ldrsh.w	r3, [fp]
 800bd34:	6820      	ldr	r0, [r4, #0]
 800bd36:	4411      	add	r1, r2
 800bd38:	4299      	cmp	r1, r3
 800bd3a:	dd1a      	ble.n	800bd72 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800bd3c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800bd40:	440b      	add	r3, r1
 800bd42:	4402      	add	r2, r0
 800bd44:	b21b      	sxth	r3, r3
 800bd46:	429a      	cmp	r2, r3
 800bd48:	dc13      	bgt.n	800bd72 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800bd4a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800bd4c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800bd4e:	681b      	ldr	r3, [r3, #0]
 800bd50:	9206      	str	r2, [sp, #24]
 800bd52:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800bd54:	9205      	str	r2, [sp, #20]
 800bd56:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800bd58:	9500      	str	r5, [sp, #0]
 800bd5a:	e9cd b203 	strd	fp, r2, [sp, #12]
 800bd5e:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800bd60:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800bd62:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800bd66:	a912      	add	r1, sp, #72	@ 0x48
 800bd68:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800bd6c:	aa49      	add	r2, sp, #292	@ 0x124
 800bd6e:	4623      	mov	r3, r4
 800bd70:	47c8      	blx	r9
 800bd72:	e9d4 2300 	ldrd	r2, r3, [r4]
 800bd76:	441a      	add	r2, r3
 800bd78:	6963      	ldr	r3, [r4, #20]
 800bd7a:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800bd7e:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800bd82:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800bd86:	68a1      	ldr	r1, [r4, #8]
 800bd88:	ed94 6a08 	vldr	s12, [r4, #32]
 800bd8c:	6022      	str	r2, [r4, #0]
 800bd8e:	3301      	adds	r3, #1
 800bd90:	6163      	str	r3, [r4, #20]
 800bd92:	69a3      	ldr	r3, [r4, #24]
 800bd94:	ee37 7a27 	vadd.f32	s14, s14, s15
 800bd98:	3b01      	subs	r3, #1
 800bd9a:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800bd9e:	61a3      	str	r3, [r4, #24]
 800bda0:	6923      	ldr	r3, [r4, #16]
 800bda2:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800bda6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800bdaa:	edd4 6a07 	vldr	s13, [r4, #28]
 800bdae:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800bdb2:	440b      	add	r3, r1
 800bdb4:	68e1      	ldr	r1, [r4, #12]
 800bdb6:	6123      	str	r3, [r4, #16]
 800bdb8:	ee76 6a86 	vadd.f32	s13, s13, s12
 800bdbc:	428b      	cmp	r3, r1
 800bdbe:	edc4 6a07 	vstr	s13, [r4, #28]
 800bdc2:	db15      	blt.n	800bdf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800bdc4:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800bdc8:	ee76 6a26 	vadd.f32	s13, s12, s13
 800bdcc:	3201      	adds	r2, #1
 800bdce:	edc4 6a07 	vstr	s13, [r4, #28]
 800bdd2:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800bdd6:	6022      	str	r2, [r4, #0]
 800bdd8:	ee36 7a87 	vadd.f32	s14, s13, s14
 800bddc:	1a5b      	subs	r3, r3, r1
 800bdde:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800bde2:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800bde6:	6123      	str	r3, [r4, #16]
 800bde8:	ee77 7a27 	vadd.f32	s15, s14, s15
 800bdec:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800bdf0:	e9d5 2300 	ldrd	r2, r3, [r5]
 800bdf4:	441a      	add	r2, r3
 800bdf6:	696b      	ldr	r3, [r5, #20]
 800bdf8:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800bdfc:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800be00:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800be04:	68a9      	ldr	r1, [r5, #8]
 800be06:	ed95 6a08 	vldr	s12, [r5, #32]
 800be0a:	602a      	str	r2, [r5, #0]
 800be0c:	3301      	adds	r3, #1
 800be0e:	616b      	str	r3, [r5, #20]
 800be10:	69ab      	ldr	r3, [r5, #24]
 800be12:	ee37 7a27 	vadd.f32	s14, s14, s15
 800be16:	3b01      	subs	r3, #1
 800be18:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800be1c:	61ab      	str	r3, [r5, #24]
 800be1e:	692b      	ldr	r3, [r5, #16]
 800be20:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800be24:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800be28:	edd5 6a07 	vldr	s13, [r5, #28]
 800be2c:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800be30:	440b      	add	r3, r1
 800be32:	68e9      	ldr	r1, [r5, #12]
 800be34:	612b      	str	r3, [r5, #16]
 800be36:	ee76 6a86 	vadd.f32	s13, s13, s12
 800be3a:	428b      	cmp	r3, r1
 800be3c:	edc5 6a07 	vstr	s13, [r5, #28]
 800be40:	db15      	blt.n	800be6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800be42:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800be46:	ee76 6a26 	vadd.f32	s13, s12, s13
 800be4a:	3201      	adds	r2, #1
 800be4c:	edc5 6a07 	vstr	s13, [r5, #28]
 800be50:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800be54:	602a      	str	r2, [r5, #0]
 800be56:	ee36 7a87 	vadd.f32	s14, s13, s14
 800be5a:	1a5b      	subs	r3, r3, r1
 800be5c:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800be60:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800be64:	612b      	str	r3, [r5, #16]
 800be66:	ee77 7a27 	vadd.f32	s15, s14, s15
 800be6a:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800be6e:	3f01      	subs	r7, #1
 800be70:	e757      	b.n	800bd22 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800be72:	ad39      	add	r5, sp, #228	@ 0xe4
 800be74:	ac19      	add	r4, sp, #100	@ 0x64
 800be76:	e72d      	b.n	800bcd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800be78:	4613      	mov	r3, r2
 800be7a:	e744      	b.n	800bd06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800be7c:	4613      	mov	r3, r2
 800be7e:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 800be82:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 800be84:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 800be88:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 800be8c:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 800be90:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 800be94:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 800be98:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 800be9c:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 800bea0:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 800bea2:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 800bea6:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 800beaa:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 800beae:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 800beb2:	960e      	str	r6, [sp, #56]	@ 0x38
 800beb4:	469e      	mov	lr, r3
 800beb6:	461f      	mov	r7, r3
 800beb8:	f04f 0900 	mov.w	r9, #0
 800bebc:	2f00      	cmp	r7, #0
 800bebe:	d146      	bne.n	800bf4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800bec0:	449c      	add	ip, r3
 800bec2:	1ad7      	subs	r7, r2, r3
 800bec4:	f1b9 0f00 	cmp.w	r9, #0
 800bec8:	d009      	beq.n	800bede <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800beca:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 800bece:	9039      	str	r0, [sp, #228]	@ 0xe4
 800bed0:	913d      	str	r1, [sp, #244]	@ 0xf4
 800bed2:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 800bed6:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 800beda:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 800bede:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800bee0:	910e      	str	r1, [sp, #56]	@ 0x38
 800bee2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800bee6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800beea:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800beee:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800bef2:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800bef6:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800befa:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800befe:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800bf02:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800bf06:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800bf0a:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800bf0e:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800bf12:	f04f 0800 	mov.w	r8, #0
 800bf16:	f1be 0f00 	cmp.w	lr, #0
 800bf1a:	d030      	beq.n	800bf7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800bf1c:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800bf1e:	4431      	add	r1, r6
 800bf20:	4549      	cmp	r1, r9
 800bf22:	4450      	add	r0, sl
 800bf24:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800bf28:	ee37 7a04 	vadd.f32	s14, s14, s8
 800bf2c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800bf30:	db08      	blt.n	800bf44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800bf32:	ee77 7a85 	vadd.f32	s15, s15, s10
 800bf36:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800bf3a:	ee37 7a06 	vadd.f32	s14, s14, s12
 800bf3e:	3001      	adds	r0, #1
 800bf40:	eba1 0109 	sub.w	r1, r1, r9
 800bf44:	f10e 3eff 	add.w	lr, lr, #4294967295
 800bf48:	f04f 0801 	mov.w	r8, #1
 800bf4c:	e7e3      	b.n	800bf16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800bf4e:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800bf50:	4431      	add	r1, r6
 800bf52:	4541      	cmp	r1, r8
 800bf54:	4450      	add	r0, sl
 800bf56:	ee37 7a24 	vadd.f32	s14, s14, s9
 800bf5a:	ee77 7a84 	vadd.f32	s15, s15, s8
 800bf5e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800bf62:	db08      	blt.n	800bf76 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800bf64:	ee76 6a85 	vadd.f32	s13, s13, s10
 800bf68:	ee37 7a25 	vadd.f32	s14, s14, s11
 800bf6c:	ee77 7a86 	vadd.f32	s15, s15, s12
 800bf70:	3001      	adds	r0, #1
 800bf72:	eba1 0108 	sub.w	r1, r1, r8
 800bf76:	3f01      	subs	r7, #1
 800bf78:	f04f 0901 	mov.w	r9, #1
 800bf7c:	e79e      	b.n	800bebc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800bf7e:	449c      	add	ip, r3
 800bf80:	1aff      	subs	r7, r7, r3
 800bf82:	f1b8 0f00 	cmp.w	r8, #0
 800bf86:	d009      	beq.n	800bf9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800bf88:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800bf8c:	9019      	str	r0, [sp, #100]	@ 0x64
 800bf8e:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800bf92:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800bf96:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800bf9a:	911d      	str	r1, [sp, #116]	@ 0x74
 800bf9c:	1ad2      	subs	r2, r2, r3
 800bf9e:	e6b5      	b.n	800bd0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800bfa0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800bfa2:	681b      	ldr	r3, [r3, #0]
 800bfa4:	b923      	cbnz	r3, 800bfb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800bfa6:	4b04      	ldr	r3, [pc, #16]	@ (800bfb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800bfa8:	6818      	ldr	r0, [r3, #0]
 800bfaa:	6803      	ldr	r3, [r0, #0]
 800bfac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bfae:	4798      	blx	r3
 800bfb0:	b05b      	add	sp, #364	@ 0x16c
 800bfb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bfb6:	bf00      	nop
 800bfb8:	200119fc 	.word	0x200119fc

0800bfbc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 800bfbc:	b570      	push	{r4, r5, r6, lr}
 800bfbe:	4604      	mov	r4, r0
 800bfc0:	f89d 601c 	ldrb.w	r6, [sp, #28]
 800bfc4:	9805      	ldr	r0, [sp, #20]
 800bfc6:	6061      	str	r1, [r4, #4]
 800bfc8:	2500      	movs	r5, #0
 800bfca:	f89d 1010 	ldrb.w	r1, [sp, #16]
 800bfce:	8263      	strh	r3, [r4, #18]
 800bfd0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800bfd4:	8025      	strh	r5, [r4, #0]
 800bfd6:	7221      	strb	r1, [r4, #8]
 800bfd8:	7266      	strb	r6, [r4, #9]
 800bfda:	60e0      	str	r0, [r4, #12]
 800bfdc:	8222      	strh	r2, [r4, #16]
 800bfde:	82a3      	strh	r3, [r4, #20]
 800bfe0:	82e5      	strh	r5, [r4, #22]
 800bfe2:	8325      	strh	r5, [r4, #24]
 800bfe4:	8365      	strh	r5, [r4, #26]
 800bfe6:	83a5      	strh	r5, [r4, #28]
 800bfe8:	83e5      	strh	r5, [r4, #30]
 800bfea:	8425      	strh	r5, [r4, #32]
 800bfec:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
 800bff0:	b32e      	cbz	r6, 800c03e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800bff2:	6803      	ldr	r3, [r0, #0]
 800bff4:	695b      	ldr	r3, [r3, #20]
 800bff6:	4798      	blx	r3
 800bff8:	4606      	mov	r6, r0
 800bffa:	b300      	cbz	r0, 800c03e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800bffc:	68e0      	ldr	r0, [r4, #12]
 800bffe:	6803      	ldr	r3, [r0, #0]
 800c000:	4631      	mov	r1, r6
 800c002:	68db      	ldr	r3, [r3, #12]
 800c004:	4798      	blx	r3
 800c006:	4605      	mov	r5, r0
 800c008:	b1c8      	cbz	r0, 800c03e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800c00a:	7b43      	ldrb	r3, [r0, #13]
 800c00c:	7a82      	ldrb	r2, [r0, #10]
 800c00e:	005b      	lsls	r3, r3, #1
 800c010:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800c014:	4313      	orrs	r3, r2
 800c016:	8423      	strh	r3, [r4, #32]
 800c018:	7a63      	ldrb	r3, [r4, #9]
 800c01a:	2b06      	cmp	r3, #6
 800c01c:	d10f      	bne.n	800c03e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800c01e:	68e0      	ldr	r0, [r4, #12]
 800c020:	6803      	ldr	r3, [r0, #0]
 800c022:	462a      	mov	r2, r5
 800c024:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800c026:	4631      	mov	r1, r6
 800c028:	4798      	blx	r3
 800c02a:	7b6b      	ldrb	r3, [r5, #13]
 800c02c:	005b      	lsls	r3, r3, #1
 800c02e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800c032:	7aab      	ldrb	r3, [r5, #10]
 800c034:	4313      	orrs	r3, r2
 800c036:	4418      	add	r0, r3
 800c038:	8c23      	ldrh	r3, [r4, #32]
 800c03a:	4418      	add	r0, r3
 800c03c:	8420      	strh	r0, [r4, #32]
 800c03e:	4620      	mov	r0, r4
 800c040:	bd70      	pop	{r4, r5, r6, pc}

0800c042 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800c042:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c046:	2400      	movs	r4, #0
 800c048:	b085      	sub	sp, #20
 800c04a:	4681      	mov	r9, r0
 800c04c:	4688      	mov	r8, r1
 800c04e:	4692      	mov	sl, r2
 800c050:	469b      	mov	fp, r3
 800c052:	4627      	mov	r7, r4
 800c054:	4625      	mov	r5, r4
 800c056:	4626      	mov	r6, r4
 800c058:	4554      	cmp	r4, sl
 800c05a:	da2a      	bge.n	800c0b2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800c05c:	2300      	movs	r3, #0
 800c05e:	9303      	str	r3, [sp, #12]
 800c060:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800c064:	429d      	cmp	r5, r3
 800c066:	d004      	beq.n	800c072 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800c068:	f242 030b 	movw	r3, #8203	@ 0x200b
 800c06c:	429d      	cmp	r5, r3
 800c06e:	bf18      	it	ne
 800c070:	462f      	movne	r7, r5
 800c072:	ab03      	add	r3, sp, #12
 800c074:	4642      	mov	r2, r8
 800c076:	4659      	mov	r1, fp
 800c078:	4648      	mov	r0, r9
 800c07a:	f003 f827 	bl	800f0cc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c07e:	4605      	mov	r5, r0
 800c080:	b1b8      	cbz	r0, 800c0b2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800c082:	280a      	cmp	r0, #10
 800c084:	d015      	beq.n	800c0b2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800c086:	9a03      	ldr	r2, [sp, #12]
 800c088:	b18a      	cbz	r2, 800c0ae <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800c08a:	7b50      	ldrb	r0, [r2, #13]
 800c08c:	7a93      	ldrb	r3, [r2, #10]
 800c08e:	8895      	ldrh	r5, [r2, #4]
 800c090:	0040      	lsls	r0, r0, #1
 800c092:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 800c096:	4303      	orrs	r3, r0
 800c098:	9301      	str	r3, [sp, #4]
 800c09a:	f8d8 3000 	ldr.w	r3, [r8]
 800c09e:	4639      	mov	r1, r7
 800c0a0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800c0a2:	4640      	mov	r0, r8
 800c0a4:	4798      	blx	r3
 800c0a6:	9b01      	ldr	r3, [sp, #4]
 800c0a8:	4418      	add	r0, r3
 800c0aa:	4406      	add	r6, r0
 800c0ac:	b2b6      	uxth	r6, r6
 800c0ae:	3401      	adds	r4, #1
 800c0b0:	e7d2      	b.n	800c058 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800c0b2:	4630      	mov	r0, r6
 800c0b4:	b005      	add	sp, #20
 800c0b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c0ba <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800c0ba:	2a02      	cmp	r2, #2
 800c0bc:	b530      	push	{r4, r5, lr}
 800c0be:	d011      	beq.n	800c0e4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800c0c0:	2a03      	cmp	r2, #3
 800c0c2:	d01c      	beq.n	800c0fe <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800c0c4:	2a01      	cmp	r2, #1
 800c0c6:	d10c      	bne.n	800c0e2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800c0c8:	888b      	ldrh	r3, [r1, #4]
 800c0ca:	8801      	ldrh	r1, [r0, #0]
 800c0cc:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800c0d0:	8844      	ldrh	r4, [r0, #2]
 800c0d2:	8004      	strh	r4, [r0, #0]
 800c0d4:	1a5b      	subs	r3, r3, r1
 800c0d6:	1a9b      	subs	r3, r3, r2
 800c0d8:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800c0dc:	8043      	strh	r3, [r0, #2]
 800c0de:	8081      	strh	r1, [r0, #4]
 800c0e0:	80c2      	strh	r2, [r0, #6]
 800c0e2:	bd30      	pop	{r4, r5, pc}
 800c0e4:	88cb      	ldrh	r3, [r1, #6]
 800c0e6:	8842      	ldrh	r2, [r0, #2]
 800c0e8:	1a9b      	subs	r3, r3, r2
 800c0ea:	88c2      	ldrh	r2, [r0, #6]
 800c0ec:	1a9b      	subs	r3, r3, r2
 800c0ee:	888a      	ldrh	r2, [r1, #4]
 800c0f0:	8801      	ldrh	r1, [r0, #0]
 800c0f2:	8043      	strh	r3, [r0, #2]
 800c0f4:	1a52      	subs	r2, r2, r1
 800c0f6:	8881      	ldrh	r1, [r0, #4]
 800c0f8:	1a52      	subs	r2, r2, r1
 800c0fa:	8002      	strh	r2, [r0, #0]
 800c0fc:	e7f1      	b.n	800c0e2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800c0fe:	88cb      	ldrh	r3, [r1, #6]
 800c100:	8841      	ldrh	r1, [r0, #2]
 800c102:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800c106:	f9b0 5000 	ldrsh.w	r5, [r0]
 800c10a:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800c10e:	8045      	strh	r5, [r0, #2]
 800c110:	1a5b      	subs	r3, r3, r1
 800c112:	1a9b      	subs	r3, r3, r2
 800c114:	8003      	strh	r3, [r0, #0]
 800c116:	8082      	strh	r2, [r0, #4]
 800c118:	80c4      	strh	r4, [r0, #6]
 800c11a:	e7e2      	b.n	800c0e2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800c11c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800c11c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c120:	b09f      	sub	sp, #124	@ 0x7c
 800c122:	920f      	str	r2, [sp, #60]	@ 0x3c
 800c124:	9312      	str	r3, [sp, #72]	@ 0x48
 800c126:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800c128:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800c12a:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800c12c:	8812      	ldrh	r2, [r2, #0]
 800c12e:	889b      	ldrh	r3, [r3, #4]
 800c130:	900e      	str	r0, [sp, #56]	@ 0x38
 800c132:	4413      	add	r3, r2
 800c134:	6828      	ldr	r0, [r5, #0]
 800c136:	9117      	str	r1, [sp, #92]	@ 0x5c
 800c138:	b21b      	sxth	r3, r3
 800c13a:	9311      	str	r3, [sp, #68]	@ 0x44
 800c13c:	6803      	ldr	r3, [r0, #0]
 800c13e:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
 800c142:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800c144:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
 800c148:	4798      	blx	r3
 800c14a:	682b      	ldr	r3, [r5, #0]
 800c14c:	9013      	str	r0, [sp, #76]	@ 0x4c
 800c14e:	7b1a      	ldrb	r2, [r3, #12]
 800c150:	7adb      	ldrb	r3, [r3, #11]
 800c152:	9215      	str	r2, [sp, #84]	@ 0x54
 800c154:	9316      	str	r3, [sp, #88]	@ 0x58
 800c156:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
 800c15a:	2c00      	cmp	r4, #0
 800c15c:	d067      	beq.n	800c22e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800c15e:	7c2b      	ldrb	r3, [r5, #16]
 800c160:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 800c162:	2b06      	cmp	r3, #6
 800c164:	bf14      	ite	ne
 800c166:	2301      	movne	r3, #1
 800c168:	2302      	moveq	r3, #2
 800c16a:	4413      	add	r3, r2
 800c16c:	f04f 0900 	mov.w	r9, #0
 800c170:	9310      	str	r3, [sp, #64]	@ 0x40
 800c172:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 800c176:	464c      	mov	r4, r9
 800c178:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
 800c17c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800c17e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800c180:	4293      	cmp	r3, r2
 800c182:	f280 808b 	bge.w	800c29c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800c186:	2300      	movs	r3, #0
 800c188:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
 800c18c:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
 800c190:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800c194:	429c      	cmp	r4, r3
 800c196:	d006      	beq.n	800c1a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
 800c198:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800c19a:	f242 020b 	movw	r2, #8203	@ 0x200b
 800c19e:	4294      	cmp	r4, r2
 800c1a0:	bf18      	it	ne
 800c1a2:	4623      	movne	r3, r4
 800c1a4:	930c      	str	r3, [sp, #48]	@ 0x30
 800c1a6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800c1a8:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 800c1aa:	682a      	ldr	r2, [r5, #0]
 800c1ac:	428b      	cmp	r3, r1
 800c1ae:	db40      	blt.n	800c232 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 800c1b0:	6813      	ldr	r3, [r2, #0]
 800c1b2:	4610      	mov	r0, r2
 800c1b4:	695b      	ldr	r3, [r3, #20]
 800c1b6:	4798      	blx	r3
 800c1b8:	4604      	mov	r4, r0
 800c1ba:	6828      	ldr	r0, [r5, #0]
 800c1bc:	6803      	ldr	r3, [r0, #0]
 800c1be:	aa1d      	add	r2, sp, #116	@ 0x74
 800c1c0:	689f      	ldr	r7, [r3, #8]
 800c1c2:	4621      	mov	r1, r4
 800c1c4:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 800c1c8:	47b8      	blx	r7
 800c1ca:	901c      	str	r0, [sp, #112]	@ 0x70
 800c1cc:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800c1d0:	429c      	cmp	r4, r3
 800c1d2:	f000 80ea 	beq.w	800c3aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800c1d6:	f242 030b 	movw	r3, #8203	@ 0x200b
 800c1da:	429c      	cmp	r4, r3
 800c1dc:	f000 80e5 	beq.w	800c3aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800c1e0:	2c00      	cmp	r4, #0
 800c1e2:	f000 810c 	beq.w	800c3fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 800c1e6:	2c0a      	cmp	r4, #10
 800c1e8:	d05e      	beq.n	800c2a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800c1ea:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800c1ec:	b36a      	cbz	r2, 800c24a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 800c1ee:	8894      	ldrh	r4, [r2, #4]
 800c1f0:	f1bb 0f00 	cmp.w	fp, #0
 800c1f4:	d03a      	beq.n	800c26c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800c1f6:	f892 900d 	ldrb.w	r9, [r2, #13]
 800c1fa:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800c1fe:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 800c202:	f892 900a 	ldrb.w	r9, [r2, #10]
 800c206:	f1bb 0f01 	cmp.w	fp, #1
 800c20a:	ea49 0903 	orr.w	r9, r9, r3
 800c20e:	d133      	bne.n	800c278 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
 800c210:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800c212:	eba6 0609 	sub.w	r6, r6, r9
 800c216:	2b00      	cmp	r3, #0
 800c218:	d14d      	bne.n	800c2b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800c21a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 800c21c:	eb09 0306 	add.w	r3, r9, r6
 800c220:	4413      	add	r3, r2
 800c222:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800c224:	f9b2 2000 	ldrsh.w	r2, [r2]
 800c228:	4293      	cmp	r3, r2
 800c22a:	da4e      	bge.n	800c2ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800c22c:	e036      	b.n	800c29c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800c22e:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 800c230:	e79c      	b.n	800c16c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
 800c232:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 800c236:	9301      	str	r3, [sp, #4]
 800c238:	ab1d      	add	r3, sp, #116	@ 0x74
 800c23a:	9300      	str	r3, [sp, #0]
 800c23c:	4659      	mov	r1, fp
 800c23e:	ab1c      	add	r3, sp, #112	@ 0x70
 800c240:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800c242:	f002 ff8c 	bl	800f15e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800c246:	4604      	mov	r4, r0
 800c248:	e7c0      	b.n	800c1cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 800c24a:	6828      	ldr	r0, [r5, #0]
 800c24c:	6803      	ldr	r3, [r0, #0]
 800c24e:	691b      	ldr	r3, [r3, #16]
 800c250:	4798      	blx	r3
 800c252:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800c256:	4298      	cmp	r0, r3
 800c258:	f000 80a7 	beq.w	800c3aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800c25c:	f242 030b 	movw	r3, #8203	@ 0x200b
 800c260:	4298      	cmp	r0, r3
 800c262:	f000 80a2 	beq.w	800c3aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800c266:	f1bb 0f00 	cmp.w	fp, #0
 800c26a:	d100      	bne.n	800c26e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 800c26c:	444e      	add	r6, r9
 800c26e:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800c270:	2a00      	cmp	r2, #0
 800c272:	d1c0      	bne.n	800c1f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800c274:	4691      	mov	r9, r2
 800c276:	e098      	b.n	800c3aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800c278:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800c27a:	2b00      	cmp	r3, #0
 800c27c:	f000 80c1 	beq.w	800c402 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e6>
 800c280:	f1bb 0f00 	cmp.w	fp, #0
 800c284:	d117      	bne.n	800c2b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800c286:	6828      	ldr	r0, [r5, #0]
 800c288:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800c28a:	6803      	ldr	r3, [r0, #0]
 800c28c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800c28e:	4798      	blx	r3
 800c290:	4406      	add	r6, r0
 800c292:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 800c294:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 800c296:	1af3      	subs	r3, r6, r3
 800c298:	4293      	cmp	r3, r2
 800c29a:	dd16      	ble.n	800c2ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800c29c:	2c00      	cmp	r4, #0
 800c29e:	f000 80ae 	beq.w	800c3fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 800c2a2:	2c0a      	cmp	r4, #10
 800c2a4:	f040 809c 	bne.w	800c3e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c4>
 800c2a8:	240a      	movs	r4, #10
 800c2aa:	fab4 f084 	clz	r0, r4
 800c2ae:	0940      	lsrs	r0, r0, #5
 800c2b0:	b01f      	add	sp, #124	@ 0x7c
 800c2b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c2b6:	6828      	ldr	r0, [r5, #0]
 800c2b8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800c2ba:	6803      	ldr	r3, [r0, #0]
 800c2bc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800c2be:	4798      	blx	r3
 800c2c0:	f1bb 0f01 	cmp.w	fp, #1
 800c2c4:	eba6 0600 	sub.w	r6, r6, r0
 800c2c8:	d0a7      	beq.n	800c21a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 800c2ca:	981c      	ldr	r0, [sp, #112]	@ 0x70
 800c2cc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800c2ce:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800c2d2:	f9b3 8000 	ldrsh.w	r8, [r3]
 800c2d6:	7b43      	ldrb	r3, [r0, #13]
 800c2d8:	015b      	lsls	r3, r3, #5
 800c2da:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800c2de:	7983      	ldrb	r3, [r0, #6]
 800c2e0:	4431      	add	r1, r6
 800c2e2:	4313      	orrs	r3, r2
 800c2e4:	440b      	add	r3, r1
 800c2e6:	4543      	cmp	r3, r8
 800c2e8:	db5f      	blt.n	800c3aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800c2ea:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800c2ec:	4299      	cmp	r1, r3
 800c2ee:	da5c      	bge.n	800c3aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800c2f0:	6828      	ldr	r0, [r5, #0]
 800c2f2:	6803      	ldr	r3, [r0, #0]
 800c2f4:	45b0      	cmp	r8, r6
 800c2f6:	bfc8      	it	gt
 800c2f8:	eba8 0806 	subgt.w	r8, r8, r6
 800c2fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800c2fe:	bfcc      	ite	gt
 800c300:	fa1f f888 	uxthgt.w	r8, r8
 800c304:	f04f 0800 	movle.w	r8, #0
 800c308:	4798      	blx	r3
 800c30a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800c30c:	7b53      	ldrb	r3, [r2, #13]
 800c30e:	00d9      	lsls	r1, r3, #3
 800c310:	f401 7780 	and.w	r7, r1, #256	@ 0x100
 800c314:	7a11      	ldrb	r1, [r2, #8]
 800c316:	4339      	orrs	r1, r7
 800c318:	065f      	lsls	r7, r3, #25
 800c31a:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 800c31c:	bf44      	itt	mi
 800c31e:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
 800c322:	b209      	sxthmi	r1, r1
 800c324:	19c7      	adds	r7, r0, r7
 800c326:	1a7f      	subs	r7, r7, r1
 800c328:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 800c32a:	b2bf      	uxth	r7, r7
 800c32c:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800c330:	fa0f fa87 	sxth.w	sl, r7
 800c334:	4551      	cmp	r1, sl
 800c336:	dd3c      	ble.n	800c3b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 800c338:	011b      	lsls	r3, r3, #4
 800c33a:	79d0      	ldrb	r0, [r2, #7]
 800c33c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800c340:	4303      	orrs	r3, r0
 800c342:	449a      	add	sl, r3
 800c344:	4551      	cmp	r1, sl
 800c346:	dc30      	bgt.n	800c3aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800c348:	1bcf      	subs	r7, r1, r7
 800c34a:	b23f      	sxth	r7, r7
 800c34c:	468a      	mov	sl, r1
 800c34e:	9219      	str	r2, [sp, #100]	@ 0x64
 800c350:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 800c352:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800c354:	6828      	ldr	r0, [r5, #0]
 800c356:	2a00      	cmp	r2, #0
 800c358:	d12d      	bne.n	800c3b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 800c35a:	9318      	str	r3, [sp, #96]	@ 0x60
 800c35c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800c35e:	6819      	ldr	r1, [r3, #0]
 800c360:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
 800c362:	6801      	ldr	r1, [r0, #0]
 800c364:	9314      	str	r3, [sp, #80]	@ 0x50
 800c366:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 800c368:	4788      	blx	r1
 800c36a:	79a9      	ldrb	r1, [r5, #6]
 800c36c:	910b      	str	r1, [sp, #44]	@ 0x2c
 800c36e:	7ba9      	ldrb	r1, [r5, #14]
 800c370:	910a      	str	r1, [sp, #40]	@ 0x28
 800c372:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
 800c376:	9109      	str	r1, [sp, #36]	@ 0x24
 800c378:	68a9      	ldr	r1, [r5, #8]
 800c37a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 800c37c:	9306      	str	r3, [sp, #24]
 800c37e:	b2bf      	uxth	r7, r7
 800c380:	e9cd 8702 	strd	r8, r7, [sp, #8]
 800c384:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800c386:	9304      	str	r3, [sp, #16]
 800c388:	44b0      	add	r8, r6
 800c38a:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800c38e:	fa0f f388 	sxth.w	r3, r8
 800c392:	9300      	str	r3, [sp, #0]
 800c394:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800c396:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800c398:	9205      	str	r2, [sp, #20]
 800c39a:	f8cd a004 	str.w	sl, [sp, #4]
 800c39e:	681a      	ldr	r2, [r3, #0]
 800c3a0:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 800c3a2:	685b      	ldr	r3, [r3, #4]
 800c3a4:	980e      	ldr	r0, [sp, #56]	@ 0x38
 800c3a6:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 800c3a8:	47b8      	blx	r7
 800c3aa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800c3ac:	3301      	adds	r3, #1
 800c3ae:	930d      	str	r3, [sp, #52]	@ 0x34
 800c3b0:	e6e4      	b.n	800c17c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
 800c3b2:	2700      	movs	r7, #0
 800c3b4:	e7cb      	b.n	800c34e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x232>
 800c3b6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800c3b8:	f8d2 c008 	ldr.w	ip, [r2, #8]
 800c3bc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800c3be:	f8dc 1000 	ldr.w	r1, [ip]
 800c3c2:	e9cd 6204 	strd	r6, r2, [sp, #16]
 800c3c6:	79aa      	ldrb	r2, [r5, #6]
 800c3c8:	9203      	str	r2, [sp, #12]
 800c3ca:	7baa      	ldrb	r2, [r5, #14]
 800c3cc:	9202      	str	r2, [sp, #8]
 800c3ce:	68aa      	ldr	r2, [r5, #8]
 800c3d0:	e9cd 0200 	strd	r0, r2, [sp]
 800c3d4:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800c3d6:	688f      	ldr	r7, [r1, #8]
 800c3d8:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 800c3da:	4660      	mov	r0, ip
 800c3dc:	47b8      	blx	r7
 800c3de:	e7e4      	b.n	800c3aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800c3e0:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 800c3e2:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 800c3e4:	3501      	adds	r5, #1
 800c3e6:	429d      	cmp	r5, r3
 800c3e8:	f6bf af5f 	bge.w	800c2aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800c3ec:	4659      	mov	r1, fp
 800c3ee:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800c3f0:	f7f7 fa58 	bl	80038a4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800c3f4:	4604      	mov	r4, r0
 800c3f6:	b110      	cbz	r0, 800c3fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 800c3f8:	280a      	cmp	r0, #10
 800c3fa:	d1f2      	bne.n	800c3e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
 800c3fc:	e754      	b.n	800c2a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800c3fe:	2400      	movs	r4, #0
 800c400:	e753      	b.n	800c2aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800c402:	f1bb 0f00 	cmp.w	fp, #0
 800c406:	f43f af44 	beq.w	800c292 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800c40a:	e75e      	b.n	800c2ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

0800c40c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800c40c:	b530      	push	{r4, r5, lr}
 800c40e:	8ac4      	ldrh	r4, [r0, #22]
 800c410:	8b45      	ldrh	r5, [r0, #26]
 800c412:	8343      	strh	r3, [r0, #26]
 800c414:	442c      	add	r4, r5
 800c416:	1ae4      	subs	r4, r4, r3
 800c418:	82c4      	strh	r4, [r0, #22]
 800c41a:	8b83      	ldrh	r3, [r0, #28]
 800c41c:	8b04      	ldrh	r4, [r0, #24]
 800c41e:	4422      	add	r2, r4
 800c420:	440c      	add	r4, r1
 800c422:	1a59      	subs	r1, r3, r1
 800c424:	83c2      	strh	r2, [r0, #30]
 800c426:	8304      	strh	r4, [r0, #24]
 800c428:	8381      	strh	r1, [r0, #28]
 800c42a:	bd30      	pop	{r4, r5, pc}

0800c42c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 800c42c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c430:	4604      	mov	r4, r0
 800c432:	8a47      	ldrh	r7, [r0, #18]
 800c434:	68c0      	ldr	r0, [r0, #12]
 800c436:	6803      	ldr	r3, [r0, #0]
 800c438:	b085      	sub	sp, #20
 800c43a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c43c:	4798      	blx	r3
 800c43e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 800c442:	7a63      	ldrb	r3, [r4, #9]
 800c444:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 800c448:	42b7      	cmp	r7, r6
 800c44a:	f103 33ff 	add.w	r3, r3, #4294967295
 800c44e:	bfac      	ite	ge
 800c450:	f04f 0900 	movge.w	r9, #0
 800c454:	f04f 0901 	movlt.w	r9, #1
 800c458:	2b05      	cmp	r3, #5
 800c45a:	d804      	bhi.n	800c466 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 800c45c:	e8df f003 	tbb	[pc, r3]
 800c460:	470e0854 	.word	0x470e0854
 800c464:	4c4c      	.short	0x4c4c
 800c466:	2500      	movs	r5, #0
 800c468:	46a9      	mov	r9, r5
 800c46a:	462e      	mov	r6, r5
 800c46c:	462f      	mov	r7, r5
 800c46e:	e00d      	b.n	800c48c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800c470:	42b7      	cmp	r7, r6
 800c472:	bfb4      	ite	lt
 800c474:	2600      	movlt	r6, #0
 800c476:	2601      	movge	r6, #1
 800c478:	2500      	movs	r5, #0
 800c47a:	e7f7      	b.n	800c46c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 800c47c:	42b7      	cmp	r7, r6
 800c47e:	464d      	mov	r5, r9
 800c480:	f04f 0900 	mov.w	r9, #0
 800c484:	bfb4      	ite	lt
 800c486:	2600      	movlt	r6, #0
 800c488:	2601      	movge	r6, #1
 800c48a:	464f      	mov	r7, r9
 800c48c:	f04f 0800 	mov.w	r8, #0
 800c490:	f8a4 8016 	strh.w	r8, [r4, #22]
 800c494:	f8a4 8018 	strh.w	r8, [r4, #24]
 800c498:	f8cd 8004 	str.w	r8, [sp, #4]
 800c49c:	2300      	movs	r3, #0
 800c49e:	9303      	str	r3, [sp, #12]
 800c4a0:	8823      	ldrh	r3, [r4, #0]
 800c4a2:	2b20      	cmp	r3, #32
 800c4a4:	d034      	beq.n	800c510 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 800c4a6:	f242 010b 	movw	r1, #8203	@ 0x200b
 800c4aa:	1a5a      	subs	r2, r3, r1
 800c4ac:	f1d2 0a00 	rsbs	sl, r2, #0
 800c4b0:	eb4a 0a02 	adc.w	sl, sl, r2
 800c4b4:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 800c4b8:	4293      	cmp	r3, r2
 800c4ba:	d009      	beq.n	800c4d0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 800c4bc:	428b      	cmp	r3, r1
 800c4be:	9a01      	ldr	r2, [sp, #4]
 800c4c0:	bf18      	it	ne
 800c4c2:	461a      	movne	r2, r3
 800c4c4:	9201      	str	r2, [sp, #4]
 800c4c6:	bf0c      	ite	eq
 800c4c8:	f04f 0a01 	moveq.w	sl, #1
 800c4cc:	f04f 0a00 	movne.w	sl, #0
 800c4d0:	ab03      	add	r3, sp, #12
 800c4d2:	68e2      	ldr	r2, [r4, #12]
 800c4d4:	7a21      	ldrb	r1, [r4, #8]
 800c4d6:	6860      	ldr	r0, [r4, #4]
 800c4d8:	f002 fdf8 	bl	800f0cc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c4dc:	8020      	strh	r0, [r4, #0]
 800c4de:	b9d8      	cbnz	r0, 800c518 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 800c4e0:	8ba2      	ldrh	r2, [r4, #28]
 800c4e2:	2300      	movs	r3, #0
 800c4e4:	4611      	mov	r1, r2
 800c4e6:	4620      	mov	r0, r4
 800c4e8:	f7ff ff90 	bl	800c40c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800c4ec:	e06e      	b.n	800c5cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 800c4ee:	2500      	movs	r5, #0
 800c4f0:	46a9      	mov	r9, r5
 800c4f2:	462e      	mov	r6, r5
 800c4f4:	2701      	movs	r7, #1
 800c4f6:	e7c9      	b.n	800c48c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800c4f8:	42b7      	cmp	r7, r6
 800c4fa:	f04f 0500 	mov.w	r5, #0
 800c4fe:	bfb4      	ite	lt
 800c500:	2700      	movlt	r7, #0
 800c502:	2701      	movge	r7, #1
 800c504:	462e      	mov	r6, r5
 800c506:	e7c1      	b.n	800c48c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800c508:	2500      	movs	r5, #0
 800c50a:	46a9      	mov	r9, r5
 800c50c:	2601      	movs	r6, #1
 800c50e:	e7ad      	b.n	800c46c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 800c510:	9301      	str	r3, [sp, #4]
 800c512:	f04f 0a01 	mov.w	sl, #1
 800c516:	e7db      	b.n	800c4d0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 800c518:	8b63      	ldrh	r3, [r4, #26]
 800c51a:	280a      	cmp	r0, #10
 800c51c:	f103 0301 	add.w	r3, r3, #1
 800c520:	8363      	strh	r3, [r4, #26]
 800c522:	d0dd      	beq.n	800c4e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 800c524:	9a03      	ldr	r2, [sp, #12]
 800c526:	bb62      	cbnz	r2, 800c582 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 800c528:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800c52c:	4298      	cmp	r0, r3
 800c52e:	d003      	beq.n	800c538 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 800c530:	f242 030b 	movw	r3, #8203	@ 0x200b
 800c534:	4298      	cmp	r0, r3
 800c536:	d1b1      	bne.n	800c49c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c538:	8823      	ldrh	r3, [r4, #0]
 800c53a:	8ba1      	ldrh	r1, [r4, #28]
 800c53c:	2b20      	cmp	r3, #32
 800c53e:	d003      	beq.n	800c548 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 800c540:	f242 000b 	movw	r0, #8203	@ 0x200b
 800c544:	4283      	cmp	r3, r0
 800c546:	d131      	bne.n	800c5ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 800c548:	f1ba 0f00 	cmp.w	sl, #0
 800c54c:	bf0a      	itet	eq
 800c54e:	4688      	moveq	r8, r1
 800c550:	4650      	movne	r0, sl
 800c552:	2001      	moveq	r0, #1
 800c554:	440a      	add	r2, r1
 800c556:	8b23      	ldrh	r3, [r4, #24]
 800c558:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800c55c:	b292      	uxth	r2, r2
 800c55e:	83a2      	strh	r2, [r4, #28]
 800c560:	4413      	add	r3, r2
 800c562:	f1b9 0f00 	cmp.w	r9, #0
 800c566:	d102      	bne.n	800c56e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 800c568:	2d00      	cmp	r5, #0
 800c56a:	d042      	beq.n	800c5f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 800c56c:	b300      	cbz	r0, 800c5b0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 800c56e:	8c21      	ldrh	r1, [r4, #32]
 800c570:	4419      	add	r1, r3
 800c572:	458c      	cmp	ip, r1
 800c574:	da37      	bge.n	800c5e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 800c576:	8ae1      	ldrh	r1, [r4, #22]
 800c578:	2900      	cmp	r1, #0
 800c57a:	d034      	beq.n	800c5e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 800c57c:	4563      	cmp	r3, ip
 800c57e:	dd8d      	ble.n	800c49c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c580:	e01d      	b.n	800c5be <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 800c582:	8893      	ldrh	r3, [r2, #4]
 800c584:	8023      	strh	r3, [r4, #0]
 800c586:	f892 b00d 	ldrb.w	fp, [r2, #13]
 800c58a:	9901      	ldr	r1, [sp, #4]
 800c58c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 800c590:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
 800c594:	f892 b00a 	ldrb.w	fp, [r2, #10]
 800c598:	ea4b 0b00 	orr.w	fp, fp, r0
 800c59c:	68e0      	ldr	r0, [r4, #12]
 800c59e:	6803      	ldr	r3, [r0, #0]
 800c5a0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800c5a2:	4798      	blx	r3
 800c5a4:	eb0b 0200 	add.w	r2, fp, r0
 800c5a8:	b292      	uxth	r2, r2
 800c5aa:	e7c5      	b.n	800c538 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 800c5ac:	2000      	movs	r0, #0
 800c5ae:	e7d1      	b.n	800c554 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 800c5b0:	4563      	cmp	r3, ip
 800c5b2:	f77f af73 	ble.w	800c49c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c5b6:	8ae3      	ldrh	r3, [r4, #22]
 800c5b8:	2b00      	cmp	r3, #0
 800c5ba:	f43f af6f 	beq.w	800c49c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c5be:	2301      	movs	r3, #1
 800c5c0:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 800c5c4:	8c22      	ldrh	r2, [r4, #32]
 800c5c6:	8be3      	ldrh	r3, [r4, #30]
 800c5c8:	4413      	add	r3, r2
 800c5ca:	83e3      	strh	r3, [r4, #30]
 800c5cc:	68e0      	ldr	r0, [r4, #12]
 800c5ce:	6803      	ldr	r3, [r0, #0]
 800c5d0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c5d2:	4798      	blx	r3
 800c5d4:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 800c5d8:	4418      	add	r0, r3
 800c5da:	8a63      	ldrh	r3, [r4, #18]
 800c5dc:	1a18      	subs	r0, r3, r0
 800c5de:	8260      	strh	r0, [r4, #18]
 800c5e0:	b005      	add	sp, #20
 800c5e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c5e6:	2300      	movs	r3, #0
 800c5e8:	4611      	mov	r1, r2
 800c5ea:	4620      	mov	r0, r4
 800c5ec:	f7ff ff0e 	bl	800c40c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800c5f0:	e754      	b.n	800c49c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c5f2:	4563      	cmp	r3, ip
 800c5f4:	dd14      	ble.n	800c620 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 800c5f6:	b117      	cbz	r7, 800c5fe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 800c5f8:	2301      	movs	r3, #1
 800c5fa:	460a      	mov	r2, r1
 800c5fc:	e772      	b.n	800c4e4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 800c5fe:	2e00      	cmp	r6, #0
 800c600:	f43f af4c 	beq.w	800c49c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c604:	2800      	cmp	r0, #0
 800c606:	f47f af49 	bne.w	800c49c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c60a:	f1ba 0f00 	cmp.w	sl, #0
 800c60e:	d002      	beq.n	800c616 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 800c610:	2301      	movs	r3, #1
 800c612:	4642      	mov	r2, r8
 800c614:	e767      	b.n	800c4e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 800c616:	8ae3      	ldrh	r3, [r4, #22]
 800c618:	2b00      	cmp	r3, #0
 800c61a:	f43f af3f 	beq.w	800c49c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c61e:	e7d5      	b.n	800c5cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 800c620:	2800      	cmp	r0, #0
 800c622:	f47f af3b 	bne.w	800c49c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c626:	f1ba 0f00 	cmp.w	sl, #0
 800c62a:	f43f af37 	beq.w	800c49c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c62e:	2301      	movs	r3, #1
 800c630:	4642      	mov	r2, r8
 800c632:	e7da      	b.n	800c5ea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

0800c634 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800c634:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c636:	4605      	mov	r5, r0
 800c638:	b08f      	sub	sp, #60	@ 0x3c
 800c63a:	4617      	mov	r7, r2
 800c63c:	461c      	mov	r4, r3
 800c63e:	460e      	mov	r6, r1
 800c640:	b1d1      	cbz	r1, 800c678 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800c642:	681b      	ldr	r3, [r3, #0]
 800c644:	4620      	mov	r0, r4
 800c646:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c648:	4798      	blx	r3
 800c64a:	4240      	negs	r0, r0
 800c64c:	b200      	sxth	r0, r0
 800c64e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 800c652:	9603      	str	r6, [sp, #12]
 800c654:	9700      	str	r7, [sp, #0]
 800c656:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800c65a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 800c65e:	4629      	mov	r1, r5
 800c660:	a805      	add	r0, sp, #20
 800c662:	f7ff fcab 	bl	800bfbc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800c666:	2401      	movs	r4, #1
 800c668:	a805      	add	r0, sp, #20
 800c66a:	f7ff fedf 	bl	800c42c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800c66e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800c672:	b163      	cbz	r3, 800c68e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 800c674:	3401      	adds	r4, #1
 800c676:	e7f7      	b.n	800c668 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800c678:	f002 fdf6 	bl	800f268 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c67c:	2401      	movs	r4, #1
 800c67e:	280a      	cmp	r0, #10
 800c680:	4628      	mov	r0, r5
 800c682:	bf08      	it	eq
 800c684:	3401      	addeq	r4, #1
 800c686:	f002 fdef 	bl	800f268 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c68a:	2800      	cmp	r0, #0
 800c68c:	d1f7      	bne.n	800c67e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 800c68e:	b2a0      	uxth	r0, r4
 800c690:	b00f      	add	sp, #60	@ 0x3c
 800c692:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c694 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800c694:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c698:	b0e3      	sub	sp, #396	@ 0x18c
 800c69a:	461c      	mov	r4, r3
 800c69c:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
 800c69e:	4683      	mov	fp, r0
 800c6a0:	4688      	mov	r8, r1
 800c6a2:	2b00      	cmp	r3, #0
 800c6a4:	f000 8112 	beq.w	800c8cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800c6a8:	6823      	ldr	r3, [r4, #0]
 800c6aa:	2b00      	cmp	r3, #0
 800c6ac:	f000 810e 	beq.w	800c8cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800c6b0:	7ba3      	ldrb	r3, [r4, #14]
 800c6b2:	2b00      	cmp	r3, #0
 800c6b4:	f000 810a 	beq.w	800c8cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800c6b8:	6810      	ldr	r0, [r2, #0]
 800c6ba:	6851      	ldr	r1, [r2, #4]
 800c6bc:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 800c6c0:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800c6c4:	ad0a      	add	r5, sp, #40	@ 0x28
 800c6c6:	462b      	mov	r3, r5
 800c6c8:	c303      	stmia	r3!, {r0, r1}
 800c6ca:	2100      	movs	r1, #0
 800c6cc:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800c6d0:	910c      	str	r1, [sp, #48]	@ 0x30
 800c6d2:	79a2      	ldrb	r2, [r4, #6]
 800c6d4:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800c6d8:	a90c      	add	r1, sp, #48	@ 0x30
 800c6da:	4628      	mov	r0, r5
 800c6dc:	f7ff fced 	bl	800c0ba <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800c6e0:	a90c      	add	r1, sp, #48	@ 0x30
 800c6e2:	4608      	mov	r0, r1
 800c6e4:	79a2      	ldrb	r2, [r4, #6]
 800c6e6:	f7ff fce8 	bl	800c0ba <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800c6ea:	a817      	add	r0, sp, #92	@ 0x5c
 800c6ec:	f002 f9a9 	bl	800ea42 <_ZN8touchgfx12TextProviderC1Ev>
 800c6f0:	6820      	ldr	r0, [r4, #0]
 800c6f2:	6803      	ldr	r3, [r0, #0]
 800c6f4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800c6f6:	4798      	blx	r3
 800c6f8:	4606      	mov	r6, r0
 800c6fa:	6820      	ldr	r0, [r4, #0]
 800c6fc:	6803      	ldr	r3, [r0, #0]
 800c6fe:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800c700:	4798      	blx	r3
 800c702:	4633      	mov	r3, r6
 800c704:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 800c706:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 800c708:	9000      	str	r0, [sp, #0]
 800c70a:	a817      	add	r0, sp, #92	@ 0x5c
 800c70c:	f002 f9ec 	bl	800eae8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c710:	6820      	ldr	r0, [r4, #0]
 800c712:	f894 a004 	ldrb.w	sl, [r4, #4]
 800c716:	6803      	ldr	r3, [r0, #0]
 800c718:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c71a:	4798      	blx	r3
 800c71c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 800c720:	6823      	ldr	r3, [r4, #0]
 800c722:	4607      	mov	r7, r0
 800c724:	4406      	add	r6, r0
 800c726:	a830      	add	r0, sp, #192	@ 0xc0
 800c728:	f893 9009 	ldrb.w	r9, [r3, #9]
 800c72c:	f002 f989 	bl	800ea42 <_ZN8touchgfx12TextProviderC1Ev>
 800c730:	7c23      	ldrb	r3, [r4, #16]
 800c732:	b17b      	cbz	r3, 800c754 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 800c734:	6820      	ldr	r0, [r4, #0]
 800c736:	6803      	ldr	r3, [r0, #0]
 800c738:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800c73a:	4798      	blx	r3
 800c73c:	9009      	str	r0, [sp, #36]	@ 0x24
 800c73e:	6820      	ldr	r0, [r4, #0]
 800c740:	6802      	ldr	r2, [r0, #0]
 800c742:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 800c744:	4790      	blx	r2
 800c746:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c748:	9000      	str	r0, [sp, #0]
 800c74a:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 800c74c:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 800c74e:	a830      	add	r0, sp, #192	@ 0xc0
 800c750:	f002 f9ca 	bl	800eae8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c754:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 800c758:	7be2      	ldrb	r2, [r4, #15]
 800c75a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 800c75e:	1a8a      	subs	r2, r1, r2
 800c760:	7c21      	ldrb	r1, [r4, #16]
 800c762:	9103      	str	r1, [sp, #12]
 800c764:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 800c768:	9102      	str	r1, [sp, #8]
 800c76a:	6821      	ldr	r1, [r4, #0]
 800c76c:	9101      	str	r1, [sp, #4]
 800c76e:	7961      	ldrb	r1, [r4, #5]
 800c770:	9100      	str	r1, [sp, #0]
 800c772:	b292      	uxth	r2, r2
 800c774:	a930      	add	r1, sp, #192	@ 0xc0
 800c776:	a80e      	add	r0, sp, #56	@ 0x38
 800c778:	f7ff fc20 	bl	800bfbc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800c77c:	2e00      	cmp	r6, #0
 800c77e:	dc5b      	bgt.n	800c838 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 800c780:	af17      	add	r7, sp, #92	@ 0x5c
 800c782:	f04f 0900 	mov.w	r9, #0
 800c786:	7c23      	ldrb	r3, [r4, #16]
 800c788:	2b00      	cmp	r3, #0
 800c78a:	f000 80b1 	beq.w	800c8f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 800c78e:	a80e      	add	r0, sp, #56	@ 0x38
 800c790:	f7ff fe4c 	bl	800c42c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800c794:	f1ba 0f00 	cmp.w	sl, #0
 800c798:	f000 80a5 	beq.w	800c8e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800c79c:	7c23      	ldrb	r3, [r4, #16]
 800c79e:	9309      	str	r3, [sp, #36]	@ 0x24
 800c7a0:	2264      	movs	r2, #100	@ 0x64
 800c7a2:	4639      	mov	r1, r7
 800c7a4:	a849      	add	r0, sp, #292	@ 0x124
 800c7a6:	f011 fc9a 	bl	801e0de <memcpy>
 800c7aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c7ac:	2b00      	cmp	r3, #0
 800c7ae:	f000 80a7 	beq.w	800c900 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 800c7b2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
 800c7b6:	7922      	ldrb	r2, [r4, #4]
 800c7b8:	2a01      	cmp	r2, #1
 800c7ba:	f040 808a 	bne.w	800c8d2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800c7be:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 800c7c2:	1ac0      	subs	r0, r0, r3
 800c7c4:	2302      	movs	r3, #2
 800c7c6:	fb90 f0f3 	sdiv	r0, r0, r3
 800c7ca:	b200      	sxth	r0, r0
 800c7cc:	7c23      	ldrb	r3, [r4, #16]
 800c7ce:	2b00      	cmp	r3, #0
 800c7d0:	f000 808b 	beq.w	800c8ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800c7d4:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
 800c7d8:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
 800c7dc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800c7e0:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800c7e4:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 800c7e8:	4410      	add	r0, r2
 800c7ea:	b200      	sxth	r0, r0
 800c7ec:	9000      	str	r0, [sp, #0]
 800c7ee:	e9cd 9703 	strd	r9, r7, [sp, #12]
 800c7f2:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800c7f6:	4642      	mov	r2, r8
 800c7f8:	2100      	movs	r1, #0
 800c7fa:	4658      	mov	r0, fp
 800c7fc:	f7ff fc8e 	bl	800c11c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800c800:	2800      	cmp	r0, #0
 800c802:	d163      	bne.n	800c8cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800c804:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 800c808:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 800c80c:	b2b2      	uxth	r2, r6
 800c80e:	4413      	add	r3, r2
 800c810:	1a8a      	subs	r2, r1, r2
 800c812:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 800c816:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
 800c81a:	b21b      	sxth	r3, r3
 800c81c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800c820:	2a00      	cmp	r2, #0
 800c822:	d153      	bne.n	800c8cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800c824:	6822      	ldr	r2, [r4, #0]
 800c826:	8869      	ldrh	r1, [r5, #2]
 800c828:	7a12      	ldrb	r2, [r2, #8]
 800c82a:	1a9b      	subs	r3, r3, r2
 800c82c:	88ea      	ldrh	r2, [r5, #6]
 800c82e:	440a      	add	r2, r1
 800c830:	b212      	sxth	r2, r2
 800c832:	4293      	cmp	r3, r2
 800c834:	dda7      	ble.n	800c786 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 800c836:	e049      	b.n	800c8cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800c838:	7c23      	ldrb	r3, [r4, #16]
 800c83a:	444f      	add	r7, r9
 800c83c:	b1c3      	cbz	r3, 800c870 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 800c83e:	f64f 79ff 	movw	r9, #65535	@ 0xffff
 800c842:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800c846:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800c84a:	443b      	add	r3, r7
 800c84c:	4293      	cmp	r3, r2
 800c84e:	da97      	bge.n	800c780 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800c850:	a80e      	add	r0, sp, #56	@ 0x38
 800c852:	f7ff fdeb 	bl	800c42c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800c856:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
 800c85a:	3b01      	subs	r3, #1
 800c85c:	b29b      	uxth	r3, r3
 800c85e:	454b      	cmp	r3, r9
 800c860:	9309      	str	r3, [sp, #36]	@ 0x24
 800c862:	d021      	beq.n	800c8a8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 800c864:	7961      	ldrb	r1, [r4, #5]
 800c866:	a817      	add	r0, sp, #92	@ 0x5c
 800c868:	f7f7 f81c 	bl	80038a4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800c86c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c86e:	e7f4      	b.n	800c85a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 800c870:	fa1f f986 	uxth.w	r9, r6
 800c874:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800c878:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800c87c:	443b      	add	r3, r7
 800c87e:	4293      	cmp	r3, r2
 800c880:	f6bf af7e 	bge.w	800c780 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800c884:	a817      	add	r0, sp, #92	@ 0x5c
 800c886:	f002 fcef 	bl	800f268 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c88a:	b1f8      	cbz	r0, 800c8cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800c88c:	280a      	cmp	r0, #10
 800c88e:	d1f1      	bne.n	800c874 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800c890:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 800c894:	444b      	add	r3, r9
 800c896:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800c89a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 800c89e:	eba3 0309 	sub.w	r3, r3, r9
 800c8a2:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800c8a6:	e7e5      	b.n	800c874 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800c8a8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 800c8ac:	b2b3      	uxth	r3, r6
 800c8ae:	441a      	add	r2, r3
 800c8b0:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 800c8b4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 800c8b8:	1ad3      	subs	r3, r2, r3
 800c8ba:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800c8be:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800c8c2:	b11b      	cbz	r3, 800c8cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800c8c4:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
 800c8c8:	2b00      	cmp	r3, #0
 800c8ca:	d0ba      	beq.n	800c842 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 800c8cc:	b063      	add	sp, #396	@ 0x18c
 800c8ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c8d2:	2a02      	cmp	r2, #2
 800c8d4:	d105      	bne.n	800c8e2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 800c8d6:	7be2      	ldrb	r2, [r4, #15]
 800c8d8:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 800c8dc:	1a80      	subs	r0, r0, r2
 800c8de:	1ac0      	subs	r0, r0, r3
 800c8e0:	e773      	b.n	800c7ca <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 800c8e2:	2000      	movs	r0, #0
 800c8e4:	e772      	b.n	800c7cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800c8e6:	7be0      	ldrb	r0, [r4, #15]
 800c8e8:	e770      	b.n	800c7cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800c8ea:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800c8ee:	e773      	b.n	800c7d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 800c8f0:	f1ba 0f00 	cmp.w	sl, #0
 800c8f4:	d0f7      	beq.n	800c8e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800c8f6:	2264      	movs	r2, #100	@ 0x64
 800c8f8:	4639      	mov	r1, r7
 800c8fa:	a849      	add	r0, sp, #292	@ 0x124
 800c8fc:	f011 fbef 	bl	801e0de <memcpy>
 800c900:	2300      	movs	r3, #0
 800c902:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800c906:	6821      	ldr	r1, [r4, #0]
 800c908:	a849      	add	r0, sp, #292	@ 0x124
 800c90a:	f7ff fb9a 	bl	800c042 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800c90e:	b203      	sxth	r3, r0
 800c910:	e751      	b.n	800c7b6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

0800c912 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800c912:	2b03      	cmp	r3, #3
 800c914:	d818      	bhi.n	800c948 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800c916:	e8df f003 	tbb	[pc, r3]
 800c91a:	0602      	.short	0x0602
 800c91c:	130d      	.short	0x130d
 800c91e:	f9b0 2000 	ldrsh.w	r2, [r0]
 800c922:	1850      	adds	r0, r2, r1
 800c924:	4770      	bx	lr
 800c926:	8803      	ldrh	r3, [r0, #0]
 800c928:	8880      	ldrh	r0, [r0, #4]
 800c92a:	4418      	add	r0, r3
 800c92c:	b200      	sxth	r0, r0
 800c92e:	1a80      	subs	r0, r0, r2
 800c930:	3801      	subs	r0, #1
 800c932:	4770      	bx	lr
 800c934:	8803      	ldrh	r3, [r0, #0]
 800c936:	8880      	ldrh	r0, [r0, #4]
 800c938:	4418      	add	r0, r3
 800c93a:	b200      	sxth	r0, r0
 800c93c:	1a40      	subs	r0, r0, r1
 800c93e:	e7f7      	b.n	800c930 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800c940:	f9b0 0000 	ldrsh.w	r0, [r0]
 800c944:	4410      	add	r0, r2
 800c946:	4770      	bx	lr
 800c948:	2000      	movs	r0, #0
 800c94a:	4770      	bx	lr

0800c94c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800c94c:	2b03      	cmp	r3, #3
 800c94e:	d817      	bhi.n	800c980 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800c950:	e8df f003 	tbb	[pc, r3]
 800c954:	10090602 	.word	0x10090602
 800c958:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800c95c:	1850      	adds	r0, r2, r1
 800c95e:	4770      	bx	lr
 800c960:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800c964:	e7fa      	b.n	800c95c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800c966:	8843      	ldrh	r3, [r0, #2]
 800c968:	88c0      	ldrh	r0, [r0, #6]
 800c96a:	4418      	add	r0, r3
 800c96c:	b200      	sxth	r0, r0
 800c96e:	1a80      	subs	r0, r0, r2
 800c970:	3801      	subs	r0, #1
 800c972:	4770      	bx	lr
 800c974:	8843      	ldrh	r3, [r0, #2]
 800c976:	88c0      	ldrh	r0, [r0, #6]
 800c978:	4418      	add	r0, r3
 800c97a:	b200      	sxth	r0, r0
 800c97c:	1a40      	subs	r0, r0, r1
 800c97e:	e7f7      	b.n	800c970 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800c980:	2000      	movs	r0, #0
 800c982:	4770      	bx	lr

0800c984 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800c984:	4b01      	ldr	r3, [pc, #4]	@ (800c98c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800c986:	2200      	movs	r2, #0
 800c988:	601a      	str	r2, [r3, #0]
 800c98a:	4770      	bx	lr
 800c98c:	20011a04 	.word	0x20011a04

0800c990 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800c990:	4603      	mov	r3, r0
 800c992:	b1c8      	cbz	r0, 800c9c8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800c994:	0c02      	lsrs	r2, r0, #16
 800c996:	0412      	lsls	r2, r2, #16
 800c998:	b9a2      	cbnz	r2, 800c9c4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800c99a:	0403      	lsls	r3, r0, #16
 800c99c:	2010      	movs	r0, #16
 800c99e:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 800c9a2:	bf04      	itt	eq
 800c9a4:	021b      	lsleq	r3, r3, #8
 800c9a6:	3008      	addeq	r0, #8
 800c9a8:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 800c9ac:	bf04      	itt	eq
 800c9ae:	011b      	lsleq	r3, r3, #4
 800c9b0:	3004      	addeq	r0, #4
 800c9b2:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 800c9b6:	bf04      	itt	eq
 800c9b8:	009b      	lsleq	r3, r3, #2
 800c9ba:	3002      	addeq	r0, #2
 800c9bc:	2b00      	cmp	r3, #0
 800c9be:	db04      	blt.n	800c9ca <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800c9c0:	3001      	adds	r0, #1
 800c9c2:	4770      	bx	lr
 800c9c4:	2000      	movs	r0, #0
 800c9c6:	e7ea      	b.n	800c99e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800c9c8:	2020      	movs	r0, #32
 800c9ca:	4770      	bx	lr

0800c9cc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800c9cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c9d0:	b087      	sub	sp, #28
 800c9d2:	460d      	mov	r5, r1
 800c9d4:	4616      	mov	r6, r2
 800c9d6:	4698      	mov	r8, r3
 800c9d8:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 800c9dc:	4601      	mov	r1, r0
 800c9de:	b120      	cbz	r0, 800c9ea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800c9e0:	b11a      	cbz	r2, 800c9ea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800c9e2:	2d1f      	cmp	r5, #31
 800c9e4:	d801      	bhi.n	800c9ea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800c9e6:	2b1f      	cmp	r3, #31
 800c9e8:	d904      	bls.n	800c9f4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 800c9ea:	2000      	movs	r0, #0
 800c9ec:	6038      	str	r0, [r7, #0]
 800c9ee:	b007      	add	sp, #28
 800c9f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c9f4:	b97d      	cbnz	r5, 800ca16 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 800c9f6:	b143      	cbz	r3, 800ca0a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 800c9f8:	4602      	mov	r2, r0
 800c9fa:	e9cd 4700 	strd	r4, r7, [sp]
 800c9fe:	462b      	mov	r3, r5
 800ca00:	4641      	mov	r1, r8
 800ca02:	4630      	mov	r0, r6
 800ca04:	f7ff ffe2 	bl	800c9cc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800ca08:	e7f1      	b.n	800c9ee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800ca0a:	f04f 33ff 	mov.w	r3, #4294967295
 800ca0e:	603b      	str	r3, [r7, #0]
 800ca10:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 800ca14:	e7eb      	b.n	800c9ee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800ca16:	fa32 fa05 	lsrs.w	sl, r2, r5
 800ca1a:	d106      	bne.n	800ca2a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 800ca1c:	4346      	muls	r6, r0
 800ca1e:	fbb6 f0f4 	udiv	r0, r6, r4
 800ca22:	fb04 6610 	mls	r6, r4, r0, r6
 800ca26:	603e      	str	r6, [r7, #0]
 800ca28:	e7e1      	b.n	800c9ee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800ca2a:	2201      	movs	r2, #1
 800ca2c:	40aa      	lsls	r2, r5
 800ca2e:	3a01      	subs	r2, #1
 800ca30:	4016      	ands	r6, r2
 800ca32:	fa00 fb05 	lsl.w	fp, r0, r5
 800ca36:	4630      	mov	r0, r6
 800ca38:	fbbb f9f4 	udiv	r9, fp, r4
 800ca3c:	fb0a f309 	mul.w	r3, sl, r9
 800ca40:	9303      	str	r3, [sp, #12]
 800ca42:	f7ff ffa5 	bl	800c990 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800ca46:	462b      	mov	r3, r5
 800ca48:	460a      	mov	r2, r1
 800ca4a:	e9cd 4700 	strd	r4, r7, [sp]
 800ca4e:	4601      	mov	r1, r0
 800ca50:	4630      	mov	r0, r6
 800ca52:	f7ff ffbb 	bl	800c9cc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800ca56:	fb04 b919 	mls	r9, r4, r9, fp
 800ca5a:	4606      	mov	r6, r0
 800ca5c:	4648      	mov	r0, r9
 800ca5e:	eb05 0108 	add.w	r1, r5, r8
 800ca62:	f7ff ff95 	bl	800c990 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800ca66:	ab05      	add	r3, sp, #20
 800ca68:	e9cd 4300 	strd	r4, r3, [sp]
 800ca6c:	464a      	mov	r2, r9
 800ca6e:	4603      	mov	r3, r0
 800ca70:	4650      	mov	r0, sl
 800ca72:	f7ff ffab 	bl	800c9cc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800ca76:	6839      	ldr	r1, [r7, #0]
 800ca78:	9a05      	ldr	r2, [sp, #20]
 800ca7a:	9b03      	ldr	r3, [sp, #12]
 800ca7c:	4411      	add	r1, r2
 800ca7e:	fbb1 f2f4 	udiv	r2, r1, r4
 800ca82:	18d3      	adds	r3, r2, r3
 800ca84:	441e      	add	r6, r3
 800ca86:	fb04 1412 	mls	r4, r4, r2, r1
 800ca8a:	4430      	add	r0, r6
 800ca8c:	603c      	str	r4, [r7, #0]
 800ca8e:	e7ae      	b.n	800c9ee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0800ca90 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800ca90:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ca94:	b085      	sub	sp, #20
 800ca96:	f1b0 0900 	subs.w	r9, r0, #0
 800ca9a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 800ca9c:	461d      	mov	r5, r3
 800ca9e:	bfbf      	itttt	lt
 800caa0:	6823      	ldrlt	r3, [r4, #0]
 800caa2:	425b      	neglt	r3, r3
 800caa4:	f1c9 0900 	rsblt	r9, r9, #0
 800caa8:	6023      	strlt	r3, [r4, #0]
 800caaa:	bfb4      	ite	lt
 800caac:	f04f 36ff 	movlt.w	r6, #4294967295
 800cab0:	2601      	movge	r6, #1
 800cab2:	2a00      	cmp	r2, #0
 800cab4:	4617      	mov	r7, r2
 800cab6:	da04      	bge.n	800cac2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800cab8:	6823      	ldr	r3, [r4, #0]
 800caba:	425b      	negs	r3, r3
 800cabc:	4257      	negs	r7, r2
 800cabe:	4276      	negs	r6, r6
 800cac0:	6023      	str	r3, [r4, #0]
 800cac2:	2d00      	cmp	r5, #0
 800cac4:	4638      	mov	r0, r7
 800cac6:	bfba      	itte	lt
 800cac8:	426d      	neglt	r5, r5
 800caca:	f04f 38ff 	movlt.w	r8, #4294967295
 800cace:	f04f 0801 	movge.w	r8, #1
 800cad2:	f7ff ff5d 	bl	800c990 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800cad6:	ab03      	add	r3, sp, #12
 800cad8:	e9cd 5300 	strd	r5, r3, [sp]
 800cadc:	463a      	mov	r2, r7
 800cade:	4603      	mov	r3, r0
 800cae0:	4648      	mov	r0, r9
 800cae2:	f7ff ff73 	bl	800c9cc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800cae6:	6823      	ldr	r3, [r4, #0]
 800cae8:	9a03      	ldr	r2, [sp, #12]
 800caea:	4546      	cmp	r6, r8
 800caec:	441a      	add	r2, r3
 800caee:	fb92 f3f5 	sdiv	r3, r2, r5
 800caf2:	4418      	add	r0, r3
 800caf4:	bf18      	it	ne
 800caf6:	4240      	negne	r0, r0
 800caf8:	fb05 2313 	mls	r3, r5, r3, r2
 800cafc:	1c72      	adds	r2, r6, #1
 800cafe:	6023      	str	r3, [r4, #0]
 800cb00:	d105      	bne.n	800cb0e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800cb02:	2b00      	cmp	r3, #0
 800cb04:	f1c3 0200 	rsb	r2, r3, #0
 800cb08:	db0b      	blt.n	800cb22 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800cb0a:	6022      	str	r2, [r4, #0]
 800cb0c:	e006      	b.n	800cb1c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800cb0e:	2e01      	cmp	r6, #1
 800cb10:	d104      	bne.n	800cb1c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800cb12:	2b00      	cmp	r3, #0
 800cb14:	da02      	bge.n	800cb1c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800cb16:	442b      	add	r3, r5
 800cb18:	3801      	subs	r0, #1
 800cb1a:	6023      	str	r3, [r4, #0]
 800cb1c:	b005      	add	sp, #20
 800cb1e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cb22:	3801      	subs	r0, #1
 800cb24:	1b52      	subs	r2, r2, r5
 800cb26:	e7f0      	b.n	800cb0a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0800cb28 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800cb28:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800cb2c:	4c1c      	ldr	r4, [pc, #112]	@ (800cba0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800cb2e:	6807      	ldr	r7, [r0, #0]
 800cb30:	69a3      	ldr	r3, [r4, #24]
 800cb32:	4605      	mov	r5, r0
 800cb34:	b92b      	cbnz	r3, 800cb42 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800cb36:	6840      	ldr	r0, [r0, #4]
 800cb38:	e9c5 7000 	strd	r7, r0, [r5]
 800cb3c:	b004      	add	sp, #16
 800cb3e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cb42:	68a2      	ldr	r2, [r4, #8]
 800cb44:	6820      	ldr	r0, [r4, #0]
 800cb46:	ae04      	add	r6, sp, #16
 800cb48:	f04f 0802 	mov.w	r8, #2
 800cb4c:	fb93 f1f8 	sdiv	r1, r3, r8
 800cb50:	440a      	add	r2, r1
 800cb52:	f846 2d04 	str.w	r2, [r6, #-4]!
 800cb56:	69e1      	ldr	r1, [r4, #28]
 800cb58:	9600      	str	r6, [sp, #0]
 800cb5a:	463a      	mov	r2, r7
 800cb5c:	f7ff ff98 	bl	800ca90 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800cb60:	69a3      	ldr	r3, [r4, #24]
 800cb62:	686a      	ldr	r2, [r5, #4]
 800cb64:	6a21      	ldr	r1, [r4, #32]
 800cb66:	9600      	str	r6, [sp, #0]
 800cb68:	4607      	mov	r7, r0
 800cb6a:	6860      	ldr	r0, [r4, #4]
 800cb6c:	f7ff ff90 	bl	800ca90 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800cb70:	6962      	ldr	r2, [r4, #20]
 800cb72:	69a3      	ldr	r3, [r4, #24]
 800cb74:	fb93 f8f8 	sdiv	r8, r3, r8
 800cb78:	4442      	add	r2, r8
 800cb7a:	9203      	str	r2, [sp, #12]
 800cb7c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800cb7e:	682a      	ldr	r2, [r5, #0]
 800cb80:	9600      	str	r6, [sp, #0]
 800cb82:	4407      	add	r7, r0
 800cb84:	68e0      	ldr	r0, [r4, #12]
 800cb86:	f7ff ff83 	bl	800ca90 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800cb8a:	9600      	str	r6, [sp, #0]
 800cb8c:	4680      	mov	r8, r0
 800cb8e:	69a3      	ldr	r3, [r4, #24]
 800cb90:	686a      	ldr	r2, [r5, #4]
 800cb92:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800cb94:	6920      	ldr	r0, [r4, #16]
 800cb96:	f7ff ff7b 	bl	800ca90 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800cb9a:	4440      	add	r0, r8
 800cb9c:	e7cc      	b.n	800cb38 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800cb9e:	bf00      	nop
 800cba0:	20011a08 	.word	0x20011a08

0800cba4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800cba4:	4b07      	ldr	r3, [pc, #28]	@ (800cbc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800cba6:	781b      	ldrb	r3, [r3, #0]
 800cba8:	2b01      	cmp	r3, #1
 800cbaa:	d109      	bne.n	800cbc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800cbac:	f9b1 3000 	ldrsh.w	r3, [r1]
 800cbb0:	f9b0 2000 	ldrsh.w	r2, [r0]
 800cbb4:	8003      	strh	r3, [r0, #0]
 800cbb6:	4b04      	ldr	r3, [pc, #16]	@ (800cbc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800cbb8:	881b      	ldrh	r3, [r3, #0]
 800cbba:	3b01      	subs	r3, #1
 800cbbc:	1a9b      	subs	r3, r3, r2
 800cbbe:	800b      	strh	r3, [r1, #0]
 800cbc0:	4770      	bx	lr
 800cbc2:	bf00      	nop
 800cbc4:	200119f4 	.word	0x200119f4
 800cbc8:	200119f0 	.word	0x200119f0

0800cbcc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800cbcc:	b510      	push	{r4, lr}
 800cbce:	4b07      	ldr	r3, [pc, #28]	@ (800cbec <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800cbd0:	781b      	ldrb	r3, [r3, #0]
 800cbd2:	2b01      	cmp	r3, #1
 800cbd4:	d108      	bne.n	800cbe8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800cbd6:	4b06      	ldr	r3, [pc, #24]	@ (800cbf0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800cbd8:	880c      	ldrh	r4, [r1, #0]
 800cbda:	881b      	ldrh	r3, [r3, #0]
 800cbdc:	f9b0 2000 	ldrsh.w	r2, [r0]
 800cbe0:	3b01      	subs	r3, #1
 800cbe2:	1b1b      	subs	r3, r3, r4
 800cbe4:	8003      	strh	r3, [r0, #0]
 800cbe6:	800a      	strh	r2, [r1, #0]
 800cbe8:	bd10      	pop	{r4, pc}
 800cbea:	bf00      	nop
 800cbec:	200119f4 	.word	0x200119f4
 800cbf0:	200119f0 	.word	0x200119f0

0800cbf4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800cbf4:	b510      	push	{r4, lr}
 800cbf6:	4b0a      	ldr	r3, [pc, #40]	@ (800cc20 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800cbf8:	781b      	ldrb	r3, [r3, #0]
 800cbfa:	2b01      	cmp	r3, #1
 800cbfc:	d10e      	bne.n	800cc1c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800cbfe:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800cc02:	8843      	ldrh	r3, [r0, #2]
 800cc04:	f9b0 4000 	ldrsh.w	r4, [r0]
 800cc08:	8044      	strh	r4, [r0, #2]
 800cc0a:	18ca      	adds	r2, r1, r3
 800cc0c:	4b05      	ldr	r3, [pc, #20]	@ (800cc24 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800cc0e:	881b      	ldrh	r3, [r3, #0]
 800cc10:	1a9b      	subs	r3, r3, r2
 800cc12:	8003      	strh	r3, [r0, #0]
 800cc14:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800cc18:	80c3      	strh	r3, [r0, #6]
 800cc1a:	8081      	strh	r1, [r0, #4]
 800cc1c:	bd10      	pop	{r4, pc}
 800cc1e:	bf00      	nop
 800cc20:	200119f4 	.word	0x200119f4
 800cc24:	200119f0 	.word	0x200119f0

0800cc28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800cc28:	4b08      	ldr	r3, [pc, #32]	@ (800cc4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800cc2a:	781b      	ldrb	r3, [r3, #0]
 800cc2c:	2b01      	cmp	r3, #1
 800cc2e:	d10c      	bne.n	800cc4a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800cc30:	8803      	ldrh	r3, [r0, #0]
 800cc32:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800cc36:	8842      	ldrh	r2, [r0, #2]
 800cc38:	8002      	strh	r2, [r0, #0]
 800cc3a:	185a      	adds	r2, r3, r1
 800cc3c:	4b04      	ldr	r3, [pc, #16]	@ (800cc50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800cc3e:	881b      	ldrh	r3, [r3, #0]
 800cc40:	1a9b      	subs	r3, r3, r2
 800cc42:	8043      	strh	r3, [r0, #2]
 800cc44:	88c3      	ldrh	r3, [r0, #6]
 800cc46:	8083      	strh	r3, [r0, #4]
 800cc48:	80c1      	strh	r1, [r0, #6]
 800cc4a:	4770      	bx	lr
 800cc4c:	200119f4 	.word	0x200119f4
 800cc50:	200119f0 	.word	0x200119f0

0800cc54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800cc54:	b510      	push	{r4, lr}
 800cc56:	4b07      	ldr	r3, [pc, #28]	@ (800cc74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800cc58:	781b      	ldrb	r3, [r3, #0]
 800cc5a:	2b01      	cmp	r3, #1
 800cc5c:	d108      	bne.n	800cc70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800cc5e:	f9b1 3000 	ldrsh.w	r3, [r1]
 800cc62:	f9b0 4000 	ldrsh.w	r4, [r0]
 800cc66:	8003      	strh	r3, [r0, #0]
 800cc68:	8893      	ldrh	r3, [r2, #4]
 800cc6a:	3b01      	subs	r3, #1
 800cc6c:	1b1b      	subs	r3, r3, r4
 800cc6e:	800b      	strh	r3, [r1, #0]
 800cc70:	bd10      	pop	{r4, pc}
 800cc72:	bf00      	nop
 800cc74:	200119f4 	.word	0x200119f4

0800cc78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800cc78:	b510      	push	{r4, lr}
 800cc7a:	4b0a      	ldr	r3, [pc, #40]	@ (800cca4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800cc7c:	781b      	ldrb	r3, [r3, #0]
 800cc7e:	2b01      	cmp	r3, #1
 800cc80:	460a      	mov	r2, r1
 800cc82:	d10d      	bne.n	800cca0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800cc84:	8881      	ldrh	r1, [r0, #4]
 800cc86:	8803      	ldrh	r3, [r0, #0]
 800cc88:	440b      	add	r3, r1
 800cc8a:	4601      	mov	r1, r0
 800cc8c:	3b01      	subs	r3, #1
 800cc8e:	f821 3b02 	strh.w	r3, [r1], #2
 800cc92:	f7ff ffdf 	bl	800cc54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800cc96:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800cc9a:	88c2      	ldrh	r2, [r0, #6]
 800cc9c:	8082      	strh	r2, [r0, #4]
 800cc9e:	80c3      	strh	r3, [r0, #6]
 800cca0:	bd10      	pop	{r4, pc}
 800cca2:	bf00      	nop
 800cca4:	200119f4 	.word	0x200119f4

0800cca8 <_ZN8touchgfx11Application13requestRedrawEv>:
 800cca8:	4b06      	ldr	r3, [pc, #24]	@ (800ccc4 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800ccaa:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ccae:	4b06      	ldr	r3, [pc, #24]	@ (800ccc8 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800ccb0:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 800ccb4:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ccb8:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 800ccbc:	2100      	movs	r1, #0
 800ccbe:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 800ccc2:	4770      	bx	lr
 800ccc4:	200119f0 	.word	0x200119f0
 800ccc8:	200119f2 	.word	0x200119f2

0800cccc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800cccc:	4b03      	ldr	r3, [pc, #12]	@ (800ccdc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800ccce:	6818      	ldr	r0, [r3, #0]
 800ccd0:	b110      	cbz	r0, 800ccd8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800ccd2:	6803      	ldr	r3, [r0, #0]
 800ccd4:	699b      	ldr	r3, [r3, #24]
 800ccd6:	4718      	bx	r3
 800ccd8:	4770      	bx	lr
 800ccda:	bf00      	nop
 800ccdc:	20011a38 	.word	0x20011a38

0800cce0 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800cce0:	4770      	bx	lr
	...

0800cce4 <_ZN8touchgfx11Application4drawEv>:
 800cce4:	b507      	push	{r0, r1, r2, lr}
 800cce6:	4b09      	ldr	r3, [pc, #36]	@ (800cd0c <_ZN8touchgfx11Application4drawEv+0x28>)
 800cce8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ccec:	4b08      	ldr	r3, [pc, #32]	@ (800cd10 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800ccee:	f8ad 2004 	strh.w	r2, [sp, #4]
 800ccf2:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ccf6:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ccfa:	6803      	ldr	r3, [r0, #0]
 800ccfc:	2100      	movs	r1, #0
 800ccfe:	9100      	str	r1, [sp, #0]
 800cd00:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800cd02:	4669      	mov	r1, sp
 800cd04:	4798      	blx	r3
 800cd06:	b003      	add	sp, #12
 800cd08:	f85d fb04 	ldr.w	pc, [sp], #4
 800cd0c:	200119f0 	.word	0x200119f0
 800cd10:	200119f2 	.word	0x200119f2

0800cd14 <_ZN8touchgfx11Application10invalidateEv>:
 800cd14:	4b09      	ldr	r3, [pc, #36]	@ (800cd3c <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800cd16:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cd1a:	4b09      	ldr	r3, [pc, #36]	@ (800cd40 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800cd1c:	b082      	sub	sp, #8
 800cd1e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cd22:	f8ad 2004 	strh.w	r2, [sp, #4]
 800cd26:	2100      	movs	r1, #0
 800cd28:	f8ad 3006 	strh.w	r3, [sp, #6]
 800cd2c:	9100      	str	r1, [sp, #0]
 800cd2e:	6803      	ldr	r3, [r0, #0]
 800cd30:	aa02      	add	r2, sp, #8
 800cd32:	e912 0006 	ldmdb	r2, {r1, r2}
 800cd36:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800cd38:	b002      	add	sp, #8
 800cd3a:	4718      	bx	r3
 800cd3c:	200119f0 	.word	0x200119f0
 800cd40:	200119f2 	.word	0x200119f2

0800cd44 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800cd44:	4b03      	ldr	r3, [pc, #12]	@ (800cd54 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800cd46:	6818      	ldr	r0, [r3, #0]
 800cd48:	b110      	cbz	r0, 800cd50 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800cd4a:	6803      	ldr	r3, [r0, #0]
 800cd4c:	69db      	ldr	r3, [r3, #28]
 800cd4e:	4718      	bx	r3
 800cd50:	4770      	bx	lr
 800cd52:	bf00      	nop
 800cd54:	20011a38 	.word	0x20011a38

0800cd58 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800cd58:	4b03      	ldr	r3, [pc, #12]	@ (800cd68 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800cd5a:	6818      	ldr	r0, [r3, #0]
 800cd5c:	b110      	cbz	r0, 800cd64 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800cd5e:	6803      	ldr	r3, [r0, #0]
 800cd60:	6a1b      	ldr	r3, [r3, #32]
 800cd62:	4718      	bx	r3
 800cd64:	4770      	bx	lr
 800cd66:	bf00      	nop
 800cd68:	20011a38 	.word	0x20011a38

0800cd6c <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800cd6c:	2300      	movs	r3, #0
 800cd6e:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 800cd72:	4770      	bx	lr

0800cd74 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800cd74:	4b03      	ldr	r3, [pc, #12]	@ (800cd84 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800cd76:	6818      	ldr	r0, [r3, #0]
 800cd78:	b110      	cbz	r0, 800cd80 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800cd7a:	6803      	ldr	r3, [r0, #0]
 800cd7c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800cd7e:	4718      	bx	r3
 800cd80:	4770      	bx	lr
 800cd82:	bf00      	nop
 800cd84:	20011a38 	.word	0x20011a38

0800cd88 <_ZN8touchgfx11ApplicationD1Ev>:
 800cd88:	4770      	bx	lr

0800cd8a <_ZN8touchgfx11ApplicationD0Ev>:
 800cd8a:	b510      	push	{r4, lr}
 800cd8c:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 800cd90:	4604      	mov	r4, r0
 800cd92:	f010 fe49 	bl	801da28 <_ZdlPvj>
 800cd96:	4620      	mov	r0, r4
 800cd98:	bd10      	pop	{r4, pc}

0800cd9a <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800cd9a:	b510      	push	{r4, lr}
 800cd9c:	f9b1 4000 	ldrsh.w	r4, [r1]
 800cda0:	888a      	ldrh	r2, [r1, #4]
 800cda2:	f9b0 3000 	ldrsh.w	r3, [r0]
 800cda6:	4422      	add	r2, r4
 800cda8:	b212      	sxth	r2, r2
 800cdaa:	4293      	cmp	r3, r2
 800cdac:	da15      	bge.n	800cdda <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800cdae:	8882      	ldrh	r2, [r0, #4]
 800cdb0:	4413      	add	r3, r2
 800cdb2:	b21b      	sxth	r3, r3
 800cdb4:	429c      	cmp	r4, r3
 800cdb6:	da10      	bge.n	800cdda <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800cdb8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800cdbc:	88c9      	ldrh	r1, [r1, #6]
 800cdbe:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800cdc2:	4419      	add	r1, r3
 800cdc4:	b209      	sxth	r1, r1
 800cdc6:	428a      	cmp	r2, r1
 800cdc8:	da07      	bge.n	800cdda <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800cdca:	88c0      	ldrh	r0, [r0, #6]
 800cdcc:	4410      	add	r0, r2
 800cdce:	b200      	sxth	r0, r0
 800cdd0:	4283      	cmp	r3, r0
 800cdd2:	bfac      	ite	ge
 800cdd4:	2000      	movge	r0, #0
 800cdd6:	2001      	movlt	r0, #1
 800cdd8:	bd10      	pop	{r4, pc}
 800cdda:	2000      	movs	r0, #0
 800cddc:	e7fc      	b.n	800cdd8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800cdde <_ZN8touchgfx4Rect10restrictToEss>:
 800cdde:	f9b0 3000 	ldrsh.w	r3, [r0]
 800cde2:	2b00      	cmp	r3, #0
 800cde4:	b510      	push	{r4, lr}
 800cde6:	da04      	bge.n	800cdf2 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800cde8:	8884      	ldrh	r4, [r0, #4]
 800cdea:	4423      	add	r3, r4
 800cdec:	8083      	strh	r3, [r0, #4]
 800cdee:	2300      	movs	r3, #0
 800cdf0:	8003      	strh	r3, [r0, #0]
 800cdf2:	f9b0 4000 	ldrsh.w	r4, [r0]
 800cdf6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800cdfa:	1b09      	subs	r1, r1, r4
 800cdfc:	428b      	cmp	r3, r1
 800cdfe:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800ce02:	bfc8      	it	gt
 800ce04:	8081      	strhgt	r1, [r0, #4]
 800ce06:	2b00      	cmp	r3, #0
 800ce08:	da04      	bge.n	800ce14 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800ce0a:	88c1      	ldrh	r1, [r0, #6]
 800ce0c:	440b      	add	r3, r1
 800ce0e:	80c3      	strh	r3, [r0, #6]
 800ce10:	2300      	movs	r3, #0
 800ce12:	8043      	strh	r3, [r0, #2]
 800ce14:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800ce18:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800ce1c:	1a52      	subs	r2, r2, r1
 800ce1e:	4293      	cmp	r3, r2
 800ce20:	bfc8      	it	gt
 800ce22:	80c2      	strhgt	r2, [r0, #6]
 800ce24:	bd10      	pop	{r4, pc}
	...

0800ce28 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800ce28:	b510      	push	{r4, lr}
 800ce2a:	4b10      	ldr	r3, [pc, #64]	@ (800ce6c <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800ce2c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ce30:	4b0f      	ldr	r3, [pc, #60]	@ (800ce70 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800ce32:	460c      	mov	r4, r1
 800ce34:	4620      	mov	r0, r4
 800ce36:	f9b3 1000 	ldrsh.w	r1, [r3]
 800ce3a:	f7ff ffd0 	bl	800cdde <_ZN8touchgfx4Rect10restrictToEss>
 800ce3e:	4b0d      	ldr	r3, [pc, #52]	@ (800ce74 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800ce40:	6818      	ldr	r0, [r3, #0]
 800ce42:	b190      	cbz	r0, 800ce6a <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800ce44:	6803      	ldr	r3, [r0, #0]
 800ce46:	4621      	mov	r1, r4
 800ce48:	689b      	ldr	r3, [r3, #8]
 800ce4a:	4798      	blx	r3
 800ce4c:	4b0a      	ldr	r3, [pc, #40]	@ (800ce78 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800ce4e:	6818      	ldr	r0, [r3, #0]
 800ce50:	b118      	cbz	r0, 800ce5a <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800ce52:	6803      	ldr	r3, [r0, #0]
 800ce54:	4621      	mov	r1, r4
 800ce56:	689b      	ldr	r3, [r3, #8]
 800ce58:	4798      	blx	r3
 800ce5a:	4b08      	ldr	r3, [pc, #32]	@ (800ce7c <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800ce5c:	6818      	ldr	r0, [r3, #0]
 800ce5e:	6803      	ldr	r3, [r0, #0]
 800ce60:	4621      	mov	r1, r4
 800ce62:	69db      	ldr	r3, [r3, #28]
 800ce64:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ce68:	4718      	bx	r3
 800ce6a:	bd10      	pop	{r4, pc}
 800ce6c:	200119f2 	.word	0x200119f2
 800ce70:	200119f0 	.word	0x200119f0
 800ce74:	20011a38 	.word	0x20011a38
 800ce78:	20011a34 	.word	0x20011a34
 800ce7c:	200119fc 	.word	0x200119fc

0800ce80 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800ce80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ce82:	4606      	mov	r6, r0
 800ce84:	4608      	mov	r0, r1
 800ce86:	460f      	mov	r7, r1
 800ce88:	f7fc fe37 	bl	8009afa <_ZNK8touchgfx4Rect7isEmptyEv>
 800ce8c:	b9e8      	cbnz	r0, 800ceca <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800ce8e:	f9b7 5000 	ldrsh.w	r5, [r7]
 800ce92:	f9b6 4000 	ldrsh.w	r4, [r6]
 800ce96:	42a5      	cmp	r5, r4
 800ce98:	db17      	blt.n	800ceca <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800ce9a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800ce9e:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800cea2:	429a      	cmp	r2, r3
 800cea4:	db11      	blt.n	800ceca <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cea6:	88b9      	ldrh	r1, [r7, #4]
 800cea8:	440d      	add	r5, r1
 800ceaa:	88b1      	ldrh	r1, [r6, #4]
 800ceac:	440c      	add	r4, r1
 800ceae:	b22d      	sxth	r5, r5
 800ceb0:	b224      	sxth	r4, r4
 800ceb2:	42a5      	cmp	r5, r4
 800ceb4:	dc09      	bgt.n	800ceca <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800ceb6:	88f8      	ldrh	r0, [r7, #6]
 800ceb8:	4410      	add	r0, r2
 800ceba:	88f2      	ldrh	r2, [r6, #6]
 800cebc:	4413      	add	r3, r2
 800cebe:	b200      	sxth	r0, r0
 800cec0:	b21b      	sxth	r3, r3
 800cec2:	4298      	cmp	r0, r3
 800cec4:	bfcc      	ite	gt
 800cec6:	2000      	movgt	r0, #0
 800cec8:	2001      	movle	r0, #1
 800ceca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800cecc <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800cecc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cece:	4604      	mov	r4, r0
 800ced0:	4608      	mov	r0, r1
 800ced2:	460d      	mov	r5, r1
 800ced4:	f7fc fe11 	bl	8009afa <_ZNK8touchgfx4Rect7isEmptyEv>
 800ced8:	b978      	cbnz	r0, 800cefa <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800ceda:	4620      	mov	r0, r4
 800cedc:	f7fc fe0d 	bl	8009afa <_ZNK8touchgfx4Rect7isEmptyEv>
 800cee0:	f9b5 6000 	ldrsh.w	r6, [r5]
 800cee4:	b150      	cbz	r0, 800cefc <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800cee6:	8026      	strh	r6, [r4, #0]
 800cee8:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800ceec:	8063      	strh	r3, [r4, #2]
 800ceee:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800cef2:	80a3      	strh	r3, [r4, #4]
 800cef4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800cef8:	80e3      	strh	r3, [r4, #6]
 800cefa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cefc:	f9b4 1000 	ldrsh.w	r1, [r4]
 800cf00:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800cf04:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800cf08:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800cf0c:	88ed      	ldrh	r5, [r5, #6]
 800cf0e:	42b1      	cmp	r1, r6
 800cf10:	460f      	mov	r7, r1
 800cf12:	bfa8      	it	ge
 800cf14:	4637      	movge	r7, r6
 800cf16:	4293      	cmp	r3, r2
 800cf18:	4618      	mov	r0, r3
 800cf1a:	4466      	add	r6, ip
 800cf1c:	bfa8      	it	ge
 800cf1e:	4610      	movge	r0, r2
 800cf20:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800cf24:	8027      	strh	r7, [r4, #0]
 800cf26:	442a      	add	r2, r5
 800cf28:	88e5      	ldrh	r5, [r4, #6]
 800cf2a:	8060      	strh	r0, [r4, #2]
 800cf2c:	4461      	add	r1, ip
 800cf2e:	442b      	add	r3, r5
 800cf30:	b236      	sxth	r6, r6
 800cf32:	b209      	sxth	r1, r1
 800cf34:	b212      	sxth	r2, r2
 800cf36:	b21b      	sxth	r3, r3
 800cf38:	428e      	cmp	r6, r1
 800cf3a:	bfac      	ite	ge
 800cf3c:	ebc7 0106 	rsbge	r1, r7, r6
 800cf40:	ebc7 0101 	rsblt	r1, r7, r1
 800cf44:	429a      	cmp	r2, r3
 800cf46:	bfac      	ite	ge
 800cf48:	ebc0 0202 	rsbge	r2, r0, r2
 800cf4c:	ebc0 0203 	rsblt	r2, r0, r3
 800cf50:	80a1      	strh	r1, [r4, #4]
 800cf52:	80e2      	strh	r2, [r4, #6]
 800cf54:	e7d1      	b.n	800cefa <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800cf58 <_ZN8touchgfx11Application11getInstanceEv>:
 800cf58:	4b01      	ldr	r3, [pc, #4]	@ (800cf60 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800cf5a:	6818      	ldr	r0, [r3, #0]
 800cf5c:	4770      	bx	lr
 800cf5e:	bf00      	nop
 800cf60:	20011a48 	.word	0x20011a48

0800cf64 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 800cf64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cf66:	4b10      	ldr	r3, [pc, #64]	@ (800cfa8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 800cf68:	781b      	ldrb	r3, [r3, #0]
 800cf6a:	4605      	mov	r5, r0
 800cf6c:	b1d3      	cbz	r3, 800cfa4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 800cf6e:	4b0f      	ldr	r3, [pc, #60]	@ (800cfac <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 800cf70:	4f0f      	ldr	r7, [pc, #60]	@ (800cfb0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 800cf72:	881c      	ldrh	r4, [r3, #0]
 800cf74:	f100 06ee 	add.w	r6, r0, #238	@ 0xee
 800cf78:	f8b5 312e 	ldrh.w	r3, [r5, #302]	@ 0x12e
 800cf7c:	42a3      	cmp	r3, r4
 800cf7e:	d90e      	bls.n	800cf9e <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 800cf80:	683b      	ldr	r3, [r7, #0]
 800cf82:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800cf86:	b10a      	cbz	r2, 800cf8c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 800cf88:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800cf8a:	b900      	cbnz	r0, 800cf8e <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 800cf8c:	6898      	ldr	r0, [r3, #8]
 800cf8e:	6803      	ldr	r3, [r0, #0]
 800cf90:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 800cf94:	69db      	ldr	r3, [r3, #28]
 800cf96:	3401      	adds	r4, #1
 800cf98:	4798      	blx	r3
 800cf9a:	b2a4      	uxth	r4, r4
 800cf9c:	e7ec      	b.n	800cf78 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 800cf9e:	2300      	movs	r3, #0
 800cfa0:	f8a5 312e 	strh.w	r3, [r5, #302]	@ 0x12e
 800cfa4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cfa6:	bf00      	nop
 800cfa8:	200119fa 	.word	0x200119fa
 800cfac:	20000084 	.word	0x20000084
 800cfb0:	200119fc 	.word	0x200119fc

0800cfb4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800cfb4:	b510      	push	{r4, lr}
 800cfb6:	2300      	movs	r3, #0
 800cfb8:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 800cfbc:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800cfc0:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800cfc4:	4604      	mov	r4, r0
 800cfc6:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800cfca:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 800cfce:	429a      	cmp	r2, r3
 800cfd0:	d90e      	bls.n	800cff0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800cfd2:	18e2      	adds	r2, r4, r3
 800cfd4:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 800cfd8:	b122      	cbz	r2, 800cfe4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 800cfda:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800cfde:	6803      	ldr	r3, [r0, #0]
 800cfe0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800cfe2:	4798      	blx	r3
 800cfe4:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800cfe8:	3301      	adds	r3, #1
 800cfea:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800cfee:	e7ea      	b.n	800cfc6 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 800cff0:	bd10      	pop	{r4, pc}

0800cff2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 800cff2:	b530      	push	{r4, r5, lr}
 800cff4:	f8b0 5080 	ldrh.w	r5, [r0, #128]	@ 0x80
 800cff8:	2200      	movs	r2, #0
 800cffa:	b293      	uxth	r3, r2
 800cffc:	429d      	cmp	r5, r3
 800cffe:	d90e      	bls.n	800d01e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 800d000:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 800d004:	428b      	cmp	r3, r1
 800d006:	d10b      	bne.n	800d020 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 800d008:	1884      	adds	r4, r0, r2
 800d00a:	f894 3084 	ldrb.w	r3, [r4, #132]	@ 0x84
 800d00e:	b13b      	cbz	r3, 800d020 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 800d010:	3b01      	subs	r3, #1
 800d012:	b2db      	uxtb	r3, r3
 800d014:	f884 3084 	strb.w	r3, [r4, #132]	@ 0x84
 800d018:	b90b      	cbnz	r3, 800d01e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 800d01a:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 800d01e:	bd30      	pop	{r4, r5, pc}
 800d020:	3201      	adds	r2, #1
 800d022:	e7ea      	b.n	800cffa <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

0800d024 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800d024:	2300      	movs	r3, #0
 800d026:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800d02a:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 800d02e:	30a4      	adds	r0, #164	@ 0xa4
 800d030:	f802 3b01 	strb.w	r3, [r2], #1
 800d034:	4282      	cmp	r2, r0
 800d036:	d1fb      	bne.n	800d030 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800d038:	4770      	bx	lr
	...

0800d03c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800d03c:	b570      	push	{r4, r5, r6, lr}
 800d03e:	4c0b      	ldr	r4, [pc, #44]	@ (800d06c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800d040:	4605      	mov	r5, r0
 800d042:	6820      	ldr	r0, [r4, #0]
 800d044:	460e      	mov	r6, r1
 800d046:	b110      	cbz	r0, 800d04e <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 800d048:	6803      	ldr	r3, [r0, #0]
 800d04a:	695b      	ldr	r3, [r3, #20]
 800d04c:	4798      	blx	r3
 800d04e:	1d28      	adds	r0, r5, #4
 800d050:	f7ff ffe8 	bl	800d024 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800d054:	6026      	str	r6, [r4, #0]
 800d056:	6833      	ldr	r3, [r6, #0]
 800d058:	4630      	mov	r0, r6
 800d05a:	68db      	ldr	r3, [r3, #12]
 800d05c:	4798      	blx	r3
 800d05e:	682b      	ldr	r3, [r5, #0]
 800d060:	4628      	mov	r0, r5
 800d062:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800d064:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d068:	4718      	bx	r3
 800d06a:	bf00      	nop
 800d06c:	20011a38 	.word	0x20011a38

0800d070 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800d070:	2300      	movs	r3, #0
 800d072:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 800d076:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 800d07a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d07c:	461a      	mov	r2, r3
 800d07e:	461c      	mov	r4, r3
 800d080:	461d      	mov	r5, r3
 800d082:	459c      	cmp	ip, r3
 800d084:	dd1a      	ble.n	800d0bc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800d086:	18c6      	adds	r6, r0, r3
 800d088:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 800d08c:	b16e      	cbz	r6, 800d0aa <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 800d08e:	429a      	cmp	r2, r3
 800d090:	d008      	beq.n	800d0a4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 800d092:	fa1f fe82 	uxth.w	lr, r2
 800d096:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 800d09a:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 800d09e:	1887      	adds	r7, r0, r2
 800d0a0:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 800d0a4:	3201      	adds	r2, #1
 800d0a6:	3301      	adds	r3, #1
 800d0a8:	e7eb      	b.n	800d082 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 800d0aa:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 800d0ae:	4299      	cmp	r1, r3
 800d0b0:	bfa8      	it	ge
 800d0b2:	3501      	addge	r5, #1
 800d0b4:	429e      	cmp	r6, r3
 800d0b6:	bfc8      	it	gt
 800d0b8:	3401      	addgt	r4, #1
 800d0ba:	e7f4      	b.n	800d0a6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 800d0bc:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 800d0c0:	1b49      	subs	r1, r1, r5
 800d0c2:	1b1b      	subs	r3, r3, r4
 800d0c4:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 800d0c8:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800d0cc:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800d0d0:	4293      	cmp	r3, r2
 800d0d2:	dd03      	ble.n	800d0dc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 800d0d4:	3b01      	subs	r3, #1
 800d0d6:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800d0da:	e7f7      	b.n	800d0cc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 800d0dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800d0e0 <_ZN8touchgfx11Application15handleTickEventEv>:
 800d0e0:	b570      	push	{r4, r5, r6, lr}
 800d0e2:	4d16      	ldr	r5, [pc, #88]	@ (800d13c <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 800d0e4:	4604      	mov	r4, r0
 800d0e6:	6828      	ldr	r0, [r5, #0]
 800d0e8:	b140      	cbz	r0, 800d0fc <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800d0ea:	7a03      	ldrb	r3, [r0, #8]
 800d0ec:	b933      	cbnz	r3, 800d0fc <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800d0ee:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800d0f2:	6803      	ldr	r3, [r0, #0]
 800d0f4:	689b      	ldr	r3, [r3, #8]
 800d0f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d0fa:	4718      	bx	r3
 800d0fc:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 800d100:	4e0f      	ldr	r6, [pc, #60]	@ (800d140 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 800d102:	b973      	cbnz	r3, 800d122 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800d104:	b168      	cbz	r0, 800d122 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800d106:	7a03      	ldrb	r3, [r0, #8]
 800d108:	b15b      	cbz	r3, 800d122 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800d10a:	6830      	ldr	r0, [r6, #0]
 800d10c:	b110      	cbz	r0, 800d114 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800d10e:	6803      	ldr	r3, [r0, #0]
 800d110:	691b      	ldr	r3, [r3, #16]
 800d112:	4798      	blx	r3
 800d114:	6828      	ldr	r0, [r5, #0]
 800d116:	6803      	ldr	r3, [r0, #0]
 800d118:	68db      	ldr	r3, [r3, #12]
 800d11a:	4798      	blx	r3
 800d11c:	2301      	movs	r3, #1
 800d11e:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800d122:	3404      	adds	r4, #4
 800d124:	4620      	mov	r0, r4
 800d126:	f7ff ff45 	bl	800cfb4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 800d12a:	4620      	mov	r0, r4
 800d12c:	f7ff ffa0 	bl	800d070 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800d130:	6830      	ldr	r0, [r6, #0]
 800d132:	b110      	cbz	r0, 800d13a <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 800d134:	6803      	ldr	r3, [r0, #0]
 800d136:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d138:	e7dd      	b.n	800d0f6 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800d13a:	bd70      	pop	{r4, r5, r6, pc}
 800d13c:	20011a3c 	.word	0x20011a3c
 800d140:	20011a38 	.word	0x20011a38

0800d144 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 800d144:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d146:	2300      	movs	r3, #0
 800d148:	4604      	mov	r4, r0
 800d14a:	460d      	mov	r5, r1
 800d14c:	f8b0 1080 	ldrh.w	r1, [r0, #128]	@ 0x80
 800d150:	4618      	mov	r0, r3
 800d152:	b29a      	uxth	r2, r3
 800d154:	4291      	cmp	r1, r2
 800d156:	d911      	bls.n	800d17c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 800d158:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 800d15c:	18e6      	adds	r6, r4, r3
 800d15e:	42af      	cmp	r7, r5
 800d160:	f896 2084 	ldrb.w	r2, [r6, #132]	@ 0x84
 800d164:	d105      	bne.n	800d172 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 800d166:	2aff      	cmp	r2, #255	@ 0xff
 800d168:	d002      	beq.n	800d170 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 800d16a:	3201      	adds	r2, #1
 800d16c:	f886 2084 	strb.w	r2, [r6, #132]	@ 0x84
 800d170:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d172:	2a00      	cmp	r2, #0
 800d174:	bf08      	it	eq
 800d176:	2001      	moveq	r0, #1
 800d178:	3301      	adds	r3, #1
 800d17a:	e7ea      	b.n	800d152 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 800d17c:	b120      	cbz	r0, 800d188 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 800d17e:	2920      	cmp	r1, #32
 800d180:	d102      	bne.n	800d188 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 800d182:	4620      	mov	r0, r4
 800d184:	f7ff ff74 	bl	800d070 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800d188:	f8b4 3080 	ldrh.w	r3, [r4, #128]	@ 0x80
 800d18c:	2b1f      	cmp	r3, #31
 800d18e:	d8ef      	bhi.n	800d170 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 800d190:	18e2      	adds	r2, r4, r3
 800d192:	2101      	movs	r1, #1
 800d194:	f882 1084 	strb.w	r1, [r2, #132]	@ 0x84
 800d198:	185a      	adds	r2, r3, r1
 800d19a:	f8a4 2080 	strh.w	r2, [r4, #128]	@ 0x80
 800d19e:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 800d1a2:	e7e5      	b.n	800d170 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

0800d1a4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800d1a4:	4603      	mov	r3, r0
 800d1a6:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 800d1aa:	2200      	movs	r2, #0
 800d1ac:	801a      	strh	r2, [r3, #0]
 800d1ae:	805a      	strh	r2, [r3, #2]
 800d1b0:	809a      	strh	r2, [r3, #4]
 800d1b2:	80da      	strh	r2, [r3, #6]
 800d1b4:	3308      	adds	r3, #8
 800d1b6:	428b      	cmp	r3, r1
 800d1b8:	d1f8      	bne.n	800d1ac <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800d1ba:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 800d1be:	4770      	bx	lr

0800d1c0 <_ZN8touchgfx11ApplicationC1Ev>:
 800d1c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d1c2:	4606      	mov	r6, r0
 800d1c4:	4b1c      	ldr	r3, [pc, #112]	@ (800d238 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800d1c6:	f846 3b04 	str.w	r3, [r6], #4
 800d1ca:	4604      	mov	r4, r0
 800d1cc:	2500      	movs	r5, #0
 800d1ce:	22a8      	movs	r2, #168	@ 0xa8
 800d1d0:	2100      	movs	r1, #0
 800d1d2:	4630      	mov	r0, r6
 800d1d4:	f010 fe5d 	bl	801de92 <memset>
 800d1d8:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 800d1dc:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800d1e0:	f7ff ffe0 	bl	800d1a4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d1e4:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800d1e8:	f7ff ffdc 	bl	800d1a4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d1ec:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 800d1f0:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 800d1f4:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 800d1f8:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 800d1fc:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 800d200:	490e      	ldr	r1, [pc, #56]	@ (800d23c <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800d202:	480f      	ldr	r0, [pc, #60]	@ (800d240 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800d204:	4f0f      	ldr	r7, [pc, #60]	@ (800d244 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800d206:	f010 fac7 	bl	801d798 <CRC_Lock>
 800d20a:	4b0f      	ldr	r3, [pc, #60]	@ (800d248 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 800d20c:	b158      	cbz	r0, 800d226 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 800d20e:	801d      	strh	r5, [r3, #0]
 800d210:	4a0e      	ldr	r2, [pc, #56]	@ (800d24c <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 800d212:	2300      	movs	r3, #0
 800d214:	6013      	str	r3, [r2, #0]
 800d216:	4a0e      	ldr	r2, [pc, #56]	@ (800d250 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 800d218:	603b      	str	r3, [r7, #0]
 800d21a:	4630      	mov	r0, r6
 800d21c:	6013      	str	r3, [r2, #0]
 800d21e:	f7ff ff01 	bl	800d024 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800d222:	4620      	mov	r0, r4
 800d224:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d226:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800d22a:	2002      	movs	r0, #2
 800d22c:	801a      	strh	r2, [r3, #0]
 800d22e:	6038      	str	r0, [r7, #0]
 800d230:	f001 fa5a 	bl	800e6e8 <_ZN8touchgfx6Screen4drawEv>
 800d234:	e7ec      	b.n	800d210 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 800d236:	bf00      	nop
 800d238:	08020608 	.word	0x08020608
 800d23c:	b5e8b5cd 	.word	0xb5e8b5cd
 800d240:	f407a5c2 	.word	0xf407a5c2
 800d244:	20011a38 	.word	0x20011a38
 800d248:	20000084 	.word	0x20000084
 800d24c:	20011a48 	.word	0x20011a48
 800d250:	20011a3c 	.word	0x20011a3c

0800d254 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800d254:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 800d258:	3b01      	subs	r3, #1
 800d25a:	b29b      	uxth	r3, r3
 800d25c:	428b      	cmp	r3, r1
 800d25e:	b510      	push	{r4, lr}
 800d260:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 800d264:	d908      	bls.n	800d278 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800d266:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800d26a:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800d26e:	681a      	ldr	r2, [r3, #0]
 800d270:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800d274:	685a      	ldr	r2, [r3, #4]
 800d276:	6062      	str	r2, [r4, #4]
 800d278:	bd10      	pop	{r4, pc}
	...

0800d27c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800d27c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d280:	4b8f      	ldr	r3, [pc, #572]	@ (800d4c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 800d282:	b08f      	sub	sp, #60	@ 0x3c
 800d284:	ac0a      	add	r4, sp, #40	@ 0x28
 800d286:	e884 0006 	stmia.w	r4, {r1, r2}
 800d28a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d28e:	4b8d      	ldr	r3, [pc, #564]	@ (800d4c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 800d290:	4683      	mov	fp, r0
 800d292:	f9b3 1000 	ldrsh.w	r1, [r3]
 800d296:	4620      	mov	r0, r4
 800d298:	f7ff fda1 	bl	800cdde <_ZN8touchgfx4Rect10restrictToEss>
 800d29c:	4620      	mov	r0, r4
 800d29e:	f7fc fc2c 	bl	8009afa <_ZNK8touchgfx4Rect7isEmptyEv>
 800d2a2:	2800      	cmp	r0, #0
 800d2a4:	d16a      	bne.n	800d37c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d2a6:	9403      	str	r4, [sp, #12]
 800d2a8:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800d2ac:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800d2b0:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 800d2b4:	35a4      	adds	r5, #164	@ 0xa4
 800d2b6:	9301      	str	r3, [sp, #4]
 800d2b8:	b15c      	cbz	r4, 800d2d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800d2ba:	4629      	mov	r1, r5
 800d2bc:	9803      	ldr	r0, [sp, #12]
 800d2be:	f7ff fddf 	bl	800ce80 <_ZNK8touchgfx4Rect8includesERKS0_>
 800d2c2:	3c01      	subs	r4, #1
 800d2c4:	b118      	cbz	r0, 800d2ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 800d2c6:	b2a1      	uxth	r1, r4
 800d2c8:	9801      	ldr	r0, [sp, #4]
 800d2ca:	f7ff ffc3 	bl	800d254 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d2ce:	3d08      	subs	r5, #8
 800d2d0:	e7f2      	b.n	800d2b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 800d2d2:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 800d2d6:	f8cd a010 	str.w	sl, [sp, #16]
 800d2da:	f10a 33ff 	add.w	r3, sl, #4294967295
 800d2de:	9302      	str	r3, [sp, #8]
 800d2e0:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 800d2e4:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 800d2e8:	9306      	str	r3, [sp, #24]
 800d2ea:	445c      	add	r4, fp
 800d2ec:	2500      	movs	r5, #0
 800d2ee:	4626      	mov	r6, r4
 800d2f0:	f8cd a014 	str.w	sl, [sp, #20]
 800d2f4:	462f      	mov	r7, r5
 800d2f6:	9b05      	ldr	r3, [sp, #20]
 800d2f8:	2b00      	cmp	r3, #0
 800d2fa:	d073      	beq.n	800d3e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800d2fc:	9903      	ldr	r1, [sp, #12]
 800d2fe:	4630      	mov	r0, r6
 800d300:	f7ff fd4b 	bl	800cd9a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d304:	b350      	cbz	r0, 800d35c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800d306:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 800d30a:	f9b6 c000 	ldrsh.w	ip, [r6]
 800d30e:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 800d312:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 800d316:	45e6      	cmp	lr, ip
 800d318:	db33      	blt.n	800d382 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800d31a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800d31e:	88b3      	ldrh	r3, [r6, #4]
 800d320:	4472      	add	r2, lr
 800d322:	4463      	add	r3, ip
 800d324:	b212      	sxth	r2, r2
 800d326:	b21b      	sxth	r3, r3
 800d328:	429a      	cmp	r2, r3
 800d32a:	dc2a      	bgt.n	800d382 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800d32c:	88f3      	ldrh	r3, [r6, #6]
 800d32e:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800d332:	fa1f f289 	uxth.w	r2, r9
 800d336:	4413      	add	r3, r2
 800d338:	b29b      	uxth	r3, r3
 800d33a:	45c8      	cmp	r8, r9
 800d33c:	fa1f fc88 	uxth.w	ip, r8
 800d340:	fa0f fe83 	sxth.w	lr, r3
 800d344:	db0f      	blt.n	800d366 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800d346:	eba3 030c 	sub.w	r3, r3, ip
 800d34a:	1ac9      	subs	r1, r1, r3
 800d34c:	b209      	sxth	r1, r1
 800d34e:	2900      	cmp	r1, #0
 800d350:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800d354:	dd12      	ble.n	800d37c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d356:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 800d35a:	4605      	mov	r5, r0
 800d35c:	9b05      	ldr	r3, [sp, #20]
 800d35e:	3b01      	subs	r3, #1
 800d360:	9305      	str	r3, [sp, #20]
 800d362:	3e08      	subs	r6, #8
 800d364:	e7c7      	b.n	800d2f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800d366:	4461      	add	r1, ip
 800d368:	b209      	sxth	r1, r1
 800d36a:	4571      	cmp	r1, lr
 800d36c:	dc38      	bgt.n	800d3e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d36e:	eba2 020c 	sub.w	r2, r2, ip
 800d372:	b212      	sxth	r2, r2
 800d374:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 800d378:	2a00      	cmp	r2, #0
 800d37a:	dcee      	bgt.n	800d35a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800d37c:	b00f      	add	sp, #60	@ 0x3c
 800d37e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d382:	45c8      	cmp	r8, r9
 800d384:	db2c      	blt.n	800d3e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d386:	88f3      	ldrh	r3, [r6, #6]
 800d388:	4499      	add	r9, r3
 800d38a:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 800d38e:	4498      	add	r8, r3
 800d390:	fa0f f989 	sxth.w	r9, r9
 800d394:	fa0f f888 	sxth.w	r8, r8
 800d398:	45c1      	cmp	r9, r8
 800d39a:	db21      	blt.n	800d3e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d39c:	88b3      	ldrh	r3, [r6, #4]
 800d39e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 800d3a2:	fa1f f28c 	uxth.w	r2, ip
 800d3a6:	4413      	add	r3, r2
 800d3a8:	b29b      	uxth	r3, r3
 800d3aa:	45e6      	cmp	lr, ip
 800d3ac:	fa1f f88e 	uxth.w	r8, lr
 800d3b0:	fa0f f983 	sxth.w	r9, r3
 800d3b4:	db0a      	blt.n	800d3cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 800d3b6:	eba3 0308 	sub.w	r3, r3, r8
 800d3ba:	1ac9      	subs	r1, r1, r3
 800d3bc:	b209      	sxth	r1, r1
 800d3be:	2900      	cmp	r1, #0
 800d3c0:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 800d3c4:	ddda      	ble.n	800d37c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d3c6:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800d3ca:	e7c6      	b.n	800d35a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800d3cc:	4441      	add	r1, r8
 800d3ce:	b209      	sxth	r1, r1
 800d3d0:	4549      	cmp	r1, r9
 800d3d2:	dc05      	bgt.n	800d3e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d3d4:	eba2 0208 	sub.w	r2, r2, r8
 800d3d8:	b212      	sxth	r2, r2
 800d3da:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800d3de:	e7cb      	b.n	800d378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 800d3e0:	4607      	mov	r7, r0
 800d3e2:	e7bb      	b.n	800d35c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800d3e4:	2d00      	cmp	r5, #0
 800d3e6:	d181      	bne.n	800d2ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 800d3e8:	2f00      	cmp	r7, #0
 800d3ea:	f000 81dd 	beq.w	800d7a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800d3ee:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 800d3f2:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 800d3f6:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 800d3fa:	b2b3      	uxth	r3, r6
 800d3fc:	9305      	str	r3, [sp, #20]
 800d3fe:	9a05      	ldr	r2, [sp, #20]
 800d400:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800d404:	4413      	add	r3, r2
 800d406:	b2ba      	uxth	r2, r7
 800d408:	4492      	add	sl, r2
 800d40a:	b29b      	uxth	r3, r3
 800d40c:	fa1f fa8a 	uxth.w	sl, sl
 800d410:	fa0f f883 	sxth.w	r8, r3
 800d414:	fa0f f98a 	sxth.w	r9, sl
 800d418:	e9cd 2307 	strd	r2, r3, [sp, #28]
 800d41c:	9b04      	ldr	r3, [sp, #16]
 800d41e:	2b00      	cmp	r3, #0
 800d420:	d052      	beq.n	800d4c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800d422:	9903      	ldr	r1, [sp, #12]
 800d424:	4620      	mov	r0, r4
 800d426:	f7ff fcb8 	bl	800cd9a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d42a:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800d42e:	b1c0      	cbz	r0, 800d462 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d430:	f9b4 e000 	ldrsh.w	lr, [r4]
 800d434:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800d438:	4576      	cmp	r6, lr
 800d43a:	dc22      	bgt.n	800d482 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800d43c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800d440:	44f4      	add	ip, lr
 800d442:	fa0f fc8c 	sxth.w	ip, ip
 800d446:	45e0      	cmp	r8, ip
 800d448:	db1b      	blt.n	800d482 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800d44a:	428f      	cmp	r7, r1
 800d44c:	fa1f fc81 	uxth.w	ip, r1
 800d450:	88e1      	ldrh	r1, [r4, #6]
 800d452:	dc0d      	bgt.n	800d470 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800d454:	ebaa 0c0c 	sub.w	ip, sl, ip
 800d458:	eba1 010c 	sub.w	r1, r1, ip
 800d45c:	f8a4 9002 	strh.w	r9, [r4, #2]
 800d460:	80e1      	strh	r1, [r4, #6]
 800d462:	4628      	mov	r0, r5
 800d464:	9904      	ldr	r1, [sp, #16]
 800d466:	3901      	subs	r1, #1
 800d468:	9104      	str	r1, [sp, #16]
 800d46a:	3c08      	subs	r4, #8
 800d46c:	4605      	mov	r5, r0
 800d46e:	e7d3      	b.n	800d418 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 800d470:	4461      	add	r1, ip
 800d472:	b209      	sxth	r1, r1
 800d474:	4549      	cmp	r1, r9
 800d476:	dcf5      	bgt.n	800d464 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800d478:	eba2 0c0c 	sub.w	ip, r2, ip
 800d47c:	f8a4 c006 	strh.w	ip, [r4, #6]
 800d480:	e7ef      	b.n	800d462 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d482:	428f      	cmp	r7, r1
 800d484:	dcee      	bgt.n	800d464 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800d486:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 800d48a:	4461      	add	r1, ip
 800d48c:	b209      	sxth	r1, r1
 800d48e:	4589      	cmp	r9, r1
 800d490:	dbe8      	blt.n	800d464 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800d492:	4576      	cmp	r6, lr
 800d494:	fa1f fc8e 	uxth.w	ip, lr
 800d498:	88a1      	ldrh	r1, [r4, #4]
 800d49a:	dc07      	bgt.n	800d4ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 800d49c:	eba3 0c0c 	sub.w	ip, r3, ip
 800d4a0:	eba1 010c 	sub.w	r1, r1, ip
 800d4a4:	f8a4 8000 	strh.w	r8, [r4]
 800d4a8:	80a1      	strh	r1, [r4, #4]
 800d4aa:	e7da      	b.n	800d462 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d4ac:	4461      	add	r1, ip
 800d4ae:	b209      	sxth	r1, r1
 800d4b0:	4588      	cmp	r8, r1
 800d4b2:	dbd7      	blt.n	800d464 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800d4b4:	9905      	ldr	r1, [sp, #20]
 800d4b6:	eba1 0c0c 	sub.w	ip, r1, ip
 800d4ba:	f8a4 c004 	strh.w	ip, [r4, #4]
 800d4be:	e7d0      	b.n	800d462 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d4c0:	200119f2 	.word	0x200119f2
 800d4c4:	200119f0 	.word	0x200119f0
 800d4c8:	2d00      	cmp	r5, #0
 800d4ca:	f000 816d 	beq.w	800d7a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800d4ce:	9b06      	ldr	r3, [sp, #24]
 800d4d0:	445b      	add	r3, fp
 800d4d2:	461c      	mov	r4, r3
 800d4d4:	9b02      	ldr	r3, [sp, #8]
 800d4d6:	3301      	adds	r3, #1
 800d4d8:	f000 8166 	beq.w	800d7a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800d4dc:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 800d4e0:	4629      	mov	r1, r5
 800d4e2:	9803      	ldr	r0, [sp, #12]
 800d4e4:	f7ff fccc 	bl	800ce80 <_ZNK8touchgfx4Rect8includesERKS0_>
 800d4e8:	b120      	cbz	r0, 800d4f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 800d4ea:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800d4ee:	9801      	ldr	r0, [sp, #4]
 800d4f0:	f7ff feb0 	bl	800d254 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d4f4:	9903      	ldr	r1, [sp, #12]
 800d4f6:	4628      	mov	r0, r5
 800d4f8:	f7ff fc4f 	bl	800cd9a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d4fc:	2800      	cmp	r0, #0
 800d4fe:	f000 809c 	beq.w	800d63a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800d502:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 800d506:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800d50a:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800d50e:	9309      	str	r3, [sp, #36]	@ 0x24
 800d510:	fa1f f189 	uxth.w	r1, r9
 800d514:	eb01 0c03 	add.w	ip, r1, r3
 800d518:	fa1f fa8c 	uxth.w	sl, ip
 800d51c:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 800d520:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 800d524:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 800d528:	b283      	uxth	r3, r0
 800d52a:	eb03 050c 	add.w	r5, r3, ip
 800d52e:	b2ad      	uxth	r5, r5
 800d530:	9505      	str	r5, [sp, #20]
 800d532:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 800d536:	9504      	str	r5, [sp, #16]
 800d538:	4548      	cmp	r0, r9
 800d53a:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 800d53e:	f340 8099 	ble.w	800d674 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 800d542:	1a5b      	subs	r3, r3, r1
 800d544:	b29b      	uxth	r3, r3
 800d546:	4596      	cmp	lr, r2
 800d548:	fa0f f08a 	sxth.w	r0, sl
 800d54c:	b21e      	sxth	r6, r3
 800d54e:	dd2e      	ble.n	800d5ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 800d550:	9f02      	ldr	r7, [sp, #8]
 800d552:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 800d556:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 800d55a:	9f04      	ldr	r7, [sp, #16]
 800d55c:	1a3f      	subs	r7, r7, r0
 800d55e:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 800d562:	fa1f fe8e 	uxth.w	lr, lr
 800d566:	b292      	uxth	r2, r2
 800d568:	ebae 0102 	sub.w	r1, lr, r2
 800d56c:	44a6      	add	lr, r4
 800d56e:	4402      	add	r2, r0
 800d570:	b289      	uxth	r1, r1
 800d572:	fa0f fe8e 	sxth.w	lr, lr
 800d576:	b212      	sxth	r2, r2
 800d578:	b20d      	sxth	r5, r1
 800d57a:	ebae 0202 	sub.w	r2, lr, r2
 800d57e:	436f      	muls	r7, r5
 800d580:	4372      	muls	r2, r6
 800d582:	4297      	cmp	r7, r2
 800d584:	db09      	blt.n	800d59a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 800d586:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 800d58a:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 800d58e:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800d592:	449c      	add	ip, r3
 800d594:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800d598:	e686      	b.n	800d2a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d59a:	4421      	add	r1, r4
 800d59c:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 800d5a0:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 800d5a4:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800d5a8:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800d5ac:	e67c      	b.n	800d2a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d5ae:	9f04      	ldr	r7, [sp, #16]
 800d5b0:	42b8      	cmp	r0, r7
 800d5b2:	da27      	bge.n	800d604 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 800d5b4:	9902      	ldr	r1, [sp, #8]
 800d5b6:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 800d5ba:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 800d5be:	eb05 010e 	add.w	r1, r5, lr
 800d5c2:	fa1f f881 	uxth.w	r8, r1
 800d5c6:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 800d5ca:	4411      	add	r1, r2
 800d5cc:	eba1 0108 	sub.w	r1, r1, r8
 800d5d0:	b289      	uxth	r1, r1
 800d5d2:	fa0f f988 	sxth.w	r9, r8
 800d5d6:	eba2 020e 	sub.w	r2, r2, lr
 800d5da:	fa0f f881 	sxth.w	r8, r1
 800d5de:	1a3f      	subs	r7, r7, r0
 800d5e0:	4372      	muls	r2, r6
 800d5e2:	fb08 f707 	mul.w	r7, r8, r7
 800d5e6:	42ba      	cmp	r2, r7
 800d5e8:	dc06      	bgt.n	800d5f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 800d5ea:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 800d5ee:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 800d5f2:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 800d5f6:	e7ca      	b.n	800d58e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 800d5f8:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 800d5fc:	4429      	add	r1, r5
 800d5fe:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800d602:	e651      	b.n	800d2a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d604:	9805      	ldr	r0, [sp, #20]
 800d606:	ebaa 0000 	sub.w	r0, sl, r0
 800d60a:	b280      	uxth	r0, r0
 800d60c:	2d06      	cmp	r5, #6
 800d60e:	fa0f fe80 	sxth.w	lr, r0
 800d612:	d817      	bhi.n	800d644 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 800d614:	9b04      	ldr	r3, [sp, #16]
 800d616:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800d61a:	1c6b      	adds	r3, r5, #1
 800d61c:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 800d620:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 800d624:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800d628:	9b01      	ldr	r3, [sp, #4]
 800d62a:	9801      	ldr	r0, [sp, #4]
 800d62c:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d630:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800d634:	805a      	strh	r2, [r3, #2]
 800d636:	809e      	strh	r6, [r3, #4]
 800d638:	80d9      	strh	r1, [r3, #6]
 800d63a:	9b02      	ldr	r3, [sp, #8]
 800d63c:	3b01      	subs	r3, #1
 800d63e:	9302      	str	r3, [sp, #8]
 800d640:	3c08      	subs	r4, #8
 800d642:	e747      	b.n	800d4d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 800d644:	9a02      	ldr	r2, [sp, #8]
 800d646:	45b6      	cmp	lr, r6
 800d648:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800d64c:	db0d      	blt.n	800d66a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 800d64e:	449c      	add	ip, r3
 800d650:	fa1f fc8c 	uxth.w	ip, ip
 800d654:	445a      	add	r2, fp
 800d656:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800d65a:	448c      	add	ip, r1
 800d65c:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800d660:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 800d664:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 800d668:	e61e      	b.n	800d2a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d66a:	445a      	add	r2, fp
 800d66c:	4484      	add	ip, r0
 800d66e:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 800d672:	e78f      	b.n	800d594 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800d674:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 800d678:	fa1f f18e 	uxth.w	r1, lr
 800d67c:	eb01 0806 	add.w	r8, r1, r6
 800d680:	b293      	uxth	r3, r2
 800d682:	fa1f f888 	uxth.w	r8, r8
 800d686:	9306      	str	r3, [sp, #24]
 800d688:	fa0f f388 	sxth.w	r3, r8
 800d68c:	9307      	str	r3, [sp, #28]
 800d68e:	9f06      	ldr	r7, [sp, #24]
 800d690:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800d694:	443b      	add	r3, r7
 800d696:	b29b      	uxth	r3, r3
 800d698:	4596      	cmp	lr, r2
 800d69a:	9308      	str	r3, [sp, #32]
 800d69c:	da24      	bge.n	800d6e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 800d69e:	9905      	ldr	r1, [sp, #20]
 800d6a0:	eba3 0308 	sub.w	r3, r3, r8
 800d6a4:	ebaa 0401 	sub.w	r4, sl, r1
 800d6a8:	b2a4      	uxth	r4, r4
 800d6aa:	b29b      	uxth	r3, r3
 800d6ac:	b225      	sxth	r5, r4
 800d6ae:	b219      	sxth	r1, r3
 800d6b0:	eba2 020e 	sub.w	r2, r2, lr
 800d6b4:	eba9 0000 	sub.w	r0, r9, r0
 800d6b8:	436a      	muls	r2, r5
 800d6ba:	4348      	muls	r0, r1
 800d6bc:	4282      	cmp	r2, r0
 800d6be:	9a02      	ldr	r2, [sp, #8]
 800d6c0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800d6c4:	445a      	add	r2, fp
 800d6c6:	dc06      	bgt.n	800d6d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 800d6c8:	9b07      	ldr	r3, [sp, #28]
 800d6ca:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 800d6ce:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 800d6d2:	44a4      	add	ip, r4
 800d6d4:	e75e      	b.n	800d594 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800d6d6:	9904      	ldr	r1, [sp, #16]
 800d6d8:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 800d6dc:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 800d6e0:	4433      	add	r3, r6
 800d6e2:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800d6e6:	e5df      	b.n	800d2a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d6e8:	9f06      	ldr	r7, [sp, #24]
 800d6ea:	9b04      	ldr	r3, [sp, #16]
 800d6ec:	1bc9      	subs	r1, r1, r7
 800d6ee:	fa0f f78a 	sxth.w	r7, sl
 800d6f2:	b289      	uxth	r1, r1
 800d6f4:	429f      	cmp	r7, r3
 800d6f6:	fa0f fe81 	sxth.w	lr, r1
 800d6fa:	dd23      	ble.n	800d744 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 800d6fc:	9a05      	ldr	r2, [sp, #20]
 800d6fe:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d702:	9d07      	ldr	r5, [sp, #28]
 800d704:	ebaa 0202 	sub.w	r2, sl, r2
 800d708:	b292      	uxth	r2, r2
 800d70a:	eba5 0a03 	sub.w	sl, r5, r3
 800d70e:	b214      	sxth	r4, r2
 800d710:	eba9 0000 	sub.w	r0, r9, r0
 800d714:	9b02      	ldr	r3, [sp, #8]
 800d716:	fb0e f000 	mul.w	r0, lr, r0
 800d71a:	fb04 fa0a 	mul.w	sl, r4, sl
 800d71e:	00db      	lsls	r3, r3, #3
 800d720:	4550      	cmp	r0, sl
 800d722:	445b      	add	r3, fp
 800d724:	db03      	blt.n	800d72e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 800d726:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 800d72a:	4494      	add	ip, r2
 800d72c:	e732      	b.n	800d594 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800d72e:	9a04      	ldr	r2, [sp, #16]
 800d730:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 800d734:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 800d738:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 800d73c:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800d740:	4431      	add	r1, r6
 800d742:	e75c      	b.n	800d5fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 800d744:	9b08      	ldr	r3, [sp, #32]
 800d746:	eba3 0308 	sub.w	r3, r3, r8
 800d74a:	b29b      	uxth	r3, r3
 800d74c:	2d06      	cmp	r5, #6
 800d74e:	b218      	sxth	r0, r3
 800d750:	d813      	bhi.n	800d77a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 800d752:	9b07      	ldr	r3, [sp, #28]
 800d754:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 800d758:	1c6b      	adds	r3, r5, #1
 800d75a:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 800d75e:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800d762:	9b01      	ldr	r3, [sp, #4]
 800d764:	9901      	ldr	r1, [sp, #4]
 800d766:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d76a:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 800d76e:	805a      	strh	r2, [r3, #2]
 800d770:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800d772:	809a      	strh	r2, [r3, #4]
 800d774:	f8a3 e006 	strh.w	lr, [r3, #6]
 800d778:	e75f      	b.n	800d63a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800d77a:	9c02      	ldr	r4, [sp, #8]
 800d77c:	4570      	cmp	r0, lr
 800d77e:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800d782:	db0d      	blt.n	800d7a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 800d784:	4431      	add	r1, r6
 800d786:	9b06      	ldr	r3, [sp, #24]
 800d788:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 800d78c:	b289      	uxth	r1, r1
 800d78e:	445c      	add	r4, fp
 800d790:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800d794:	4419      	add	r1, r3
 800d796:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 800d79a:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 800d79e:	e583      	b.n	800d2a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d7a0:	445c      	add	r4, fp
 800d7a2:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 800d7a6:	e79b      	b.n	800d6e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 800d7a8:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800d7ac:	1e65      	subs	r5, r4, #1
 800d7ae:	b2ad      	uxth	r5, r5
 800d7b0:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 800d7b4:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 800d7b8:	42b5      	cmp	r5, r6
 800d7ba:	d044      	beq.n	800d846 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 800d7bc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 800d7c0:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 800d7c4:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 800d7c8:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 800d7cc:	4282      	cmp	r2, r0
 800d7ce:	d11f      	bne.n	800d810 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 800d7d0:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 800d7d4:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800d7d8:	459c      	cmp	ip, r3
 800d7da:	d119      	bne.n	800d810 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 800d7dc:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 800d7e0:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800d7e4:	19d8      	adds	r0, r3, r7
 800d7e6:	b200      	sxth	r0, r0
 800d7e8:	4288      	cmp	r0, r1
 800d7ea:	d109      	bne.n	800d800 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 800d7ec:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 800d7f0:	4413      	add	r3, r2
 800d7f2:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 800d7f6:	4629      	mov	r1, r5
 800d7f8:	9801      	ldr	r0, [sp, #4]
 800d7fa:	f7ff fd2b 	bl	800d254 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d7fe:	e003      	b.n	800d808 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800d800:	4411      	add	r1, r2
 800d802:	b209      	sxth	r1, r1
 800d804:	42b9      	cmp	r1, r7
 800d806:	d0f3      	beq.n	800d7f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 800d808:	3d01      	subs	r5, #1
 800d80a:	b2ad      	uxth	r5, r5
 800d80c:	3c08      	subs	r4, #8
 800d80e:	e7d3      	b.n	800d7b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 800d810:	42b9      	cmp	r1, r7
 800d812:	d1f9      	bne.n	800d808 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800d814:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 800d818:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800d81c:	4299      	cmp	r1, r3
 800d81e:	d1f3      	bne.n	800d808 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800d820:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800d824:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800d828:	181f      	adds	r7, r3, r0
 800d82a:	b23f      	sxth	r7, r7
 800d82c:	42ba      	cmp	r2, r7
 800d82e:	d105      	bne.n	800d83c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 800d830:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 800d834:	440b      	add	r3, r1
 800d836:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800d83a:	e7dc      	b.n	800d7f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 800d83c:	440a      	add	r2, r1
 800d83e:	b212      	sxth	r2, r2
 800d840:	4290      	cmp	r0, r2
 800d842:	d1e1      	bne.n	800d808 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800d844:	e7f6      	b.n	800d834 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 800d846:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 800d84a:	2e07      	cmp	r6, #7
 800d84c:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 800d850:	d812      	bhi.n	800d878 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 800d852:	1c75      	adds	r5, r6, #1
 800d854:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 800d858:	9d01      	ldr	r5, [sp, #4]
 800d85a:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800d85e:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 800d862:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 800d866:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 800d86a:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 800d86e:	442c      	add	r4, r5
 800d870:	8061      	strh	r1, [r4, #2]
 800d872:	80a2      	strh	r2, [r4, #4]
 800d874:	80e3      	strh	r3, [r4, #6]
 800d876:	e581      	b.n	800d37c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d878:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800d87c:	3e01      	subs	r6, #1
 800d87e:	445c      	add	r4, fp
 800d880:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 800d884:	f04f 37ff 	mov.w	r7, #4294967295
 800d888:	2500      	movs	r5, #0
 800d88a:	9305      	str	r3, [sp, #20]
 800d88c:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800d890:	9302      	str	r3, [sp, #8]
 800d892:	1e72      	subs	r2, r6, #1
 800d894:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800d898:	9304      	str	r3, [sp, #16]
 800d89a:	4691      	mov	r9, r2
 800d89c:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 800d8a0:	f1b9 3fff 	cmp.w	r9, #4294967295
 800d8a4:	bf14      	ite	ne
 800d8a6:	9905      	ldrne	r1, [sp, #20]
 800d8a8:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 800d8ac:	6818      	ldr	r0, [r3, #0]
 800d8ae:	9207      	str	r2, [sp, #28]
 800d8b0:	bf18      	it	ne
 800d8b2:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 800d8b6:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800d8ba:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800d8be:	f8be 8004 	ldrh.w	r8, [lr, #4]
 800d8c2:	9306      	str	r3, [sp, #24]
 800d8c4:	fb18 f801 	smulbb	r8, r8, r1
 800d8c8:	6859      	ldr	r1, [r3, #4]
 800d8ca:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800d8ce:	4671      	mov	r1, lr
 800d8d0:	a80c      	add	r0, sp, #48	@ 0x30
 800d8d2:	f7ff fafb 	bl	800cecc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d8d6:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 800d8da:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 800d8de:	9b04      	ldr	r3, [sp, #16]
 800d8e0:	9a02      	ldr	r2, [sp, #8]
 800d8e2:	fb10 f001 	smulbb	r0, r0, r1
 800d8e6:	fb02 8803 	mla	r8, r2, r3, r8
 800d8ea:	eba0 0108 	sub.w	r1, r0, r8
 800d8ee:	f04f 0c08 	mov.w	ip, #8
 800d8f2:	fb90 f0fc 	sdiv	r0, r0, ip
 800d8f6:	4288      	cmp	r0, r1
 800d8f8:	dc20      	bgt.n	800d93c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 800d8fa:	4551      	cmp	r1, sl
 800d8fc:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800d900:	da03      	bge.n	800d90a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 800d902:	b1d9      	cbz	r1, 800d93c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 800d904:	468a      	mov	sl, r1
 800d906:	464f      	mov	r7, r9
 800d908:	4635      	mov	r5, r6
 800d90a:	f109 39ff 	add.w	r9, r9, #4294967295
 800d90e:	f119 0f02 	cmn.w	r9, #2
 800d912:	d1c5      	bne.n	800d8a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 800d914:	4616      	mov	r6, r2
 800d916:	3201      	adds	r2, #1
 800d918:	f1a4 0408 	sub.w	r4, r4, #8
 800d91c:	d1b6      	bne.n	800d88c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 800d91e:	9b01      	ldr	r3, [sp, #4]
 800d920:	b2ac      	uxth	r4, r5
 800d922:	00ed      	lsls	r5, r5, #3
 800d924:	1958      	adds	r0, r3, r5
 800d926:	1c7b      	adds	r3, r7, #1
 800d928:	d10b      	bne.n	800d942 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 800d92a:	4601      	mov	r1, r0
 800d92c:	9803      	ldr	r0, [sp, #12]
 800d92e:	f7ff facd 	bl	800cecc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d932:	4621      	mov	r1, r4
 800d934:	9801      	ldr	r0, [sp, #4]
 800d936:	f7ff fc8d 	bl	800d254 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d93a:	e4b5      	b.n	800d2a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d93c:	464f      	mov	r7, r9
 800d93e:	4635      	mov	r5, r6
 800d940:	e7ed      	b.n	800d91e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 800d942:	9b01      	ldr	r3, [sp, #4]
 800d944:	00ff      	lsls	r7, r7, #3
 800d946:	19d9      	adds	r1, r3, r7
 800d948:	f7ff fac0 	bl	800cecc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d94c:	9b03      	ldr	r3, [sp, #12]
 800d94e:	cb03      	ldmia	r3!, {r0, r1}
 800d950:	445f      	add	r7, fp
 800d952:	445d      	add	r5, fp
 800d954:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 800d958:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 800d95c:	f855 0fac 	ldr.w	r0, [r5, #172]!
 800d960:	9b03      	ldr	r3, [sp, #12]
 800d962:	6869      	ldr	r1, [r5, #4]
 800d964:	c303      	stmia	r3!, {r0, r1}
 800d966:	e7e4      	b.n	800d932 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

0800d968 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 800d968:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d96c:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 800d970:	b09b      	sub	sp, #108	@ 0x6c
 800d972:	4604      	mov	r4, r0
 800d974:	4630      	mov	r0, r6
 800d976:	f7fc f8c0 	bl	8009afa <_ZNK8touchgfx4Rect7isEmptyEv>
 800d97a:	4605      	mov	r5, r0
 800d97c:	b948      	cbnz	r0, 800d992 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 800d97e:	6823      	ldr	r3, [r4, #0]
 800d980:	e896 0006 	ldmia.w	r6, {r1, r2}
 800d984:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d986:	4620      	mov	r0, r4
 800d988:	4798      	blx	r3
 800d98a:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 800d98e:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 800d992:	4bc6      	ldr	r3, [pc, #792]	@ (800dcac <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 800d994:	681b      	ldr	r3, [r3, #0]
 800d996:	2b00      	cmp	r3, #0
 800d998:	d03f      	beq.n	800da1a <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 800d99a:	4dc5      	ldr	r5, [pc, #788]	@ (800dcb0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 800d99c:	4628      	mov	r0, r5
 800d99e:	f7fc f8ac 	bl	8009afa <_ZNK8touchgfx4Rect7isEmptyEv>
 800d9a2:	4606      	mov	r6, r0
 800d9a4:	2800      	cmp	r0, #0
 800d9a6:	d138      	bne.n	800da1a <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 800d9a8:	4628      	mov	r0, r5
 800d9aa:	f7ff f923 	bl	800cbf4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d9ae:	6823      	ldr	r3, [r4, #0]
 800d9b0:	6829      	ldr	r1, [r5, #0]
 800d9b2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d9b4:	686a      	ldr	r2, [r5, #4]
 800d9b6:	4620      	mov	r0, r4
 800d9b8:	4798      	blx	r3
 800d9ba:	802e      	strh	r6, [r5, #0]
 800d9bc:	806e      	strh	r6, [r5, #2]
 800d9be:	80ae      	strh	r6, [r5, #4]
 800d9c0:	80ee      	strh	r6, [r5, #6]
 800d9c2:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 800d9c6:	4dbb      	ldr	r5, [pc, #748]	@ (800dcb4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 800d9c8:	4640      	mov	r0, r8
 800d9ca:	f7ff fbeb 	bl	800d1a4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d9ce:	882e      	ldrh	r6, [r5, #0]
 800d9d0:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 800d9d4:	4633      	mov	r3, r6
 800d9d6:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800d9da:	42bb      	cmp	r3, r7
 800d9dc:	d224      	bcs.n	800da28 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800d9de:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 800d9e2:	2907      	cmp	r1, #7
 800d9e4:	d816      	bhi.n	800da14 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 800d9e6:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 800d9ea:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 800d9ee:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 800d9f2:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 800d9f6:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 800d9fa:	1c4a      	adds	r2, r1, #1
 800d9fc:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
 800da00:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 800da04:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 800da08:	f8a2 a002 	strh.w	sl, [r2, #2]
 800da0c:	f8a2 e004 	strh.w	lr, [r2, #4]
 800da10:	f8a2 c006 	strh.w	ip, [r2, #6]
 800da14:	3301      	adds	r3, #1
 800da16:	b29b      	uxth	r3, r3
 800da18:	e7df      	b.n	800d9da <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 800da1a:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800da1e:	2b00      	cmp	r3, #0
 800da20:	d1cf      	bne.n	800d9c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 800da22:	b01b      	add	sp, #108	@ 0x6c
 800da24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800da28:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 800da2c:	42b3      	cmp	r3, r6
 800da2e:	d90c      	bls.n	800da4a <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 800da30:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800da34:	6822      	ldr	r2, [r4, #0]
 800da36:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 800da3a:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 800da3c:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 800da40:	4620      	mov	r0, r4
 800da42:	3601      	adds	r6, #1
 800da44:	47b8      	blx	r7
 800da46:	b2b6      	uxth	r6, r6
 800da48:	e7ee      	b.n	800da28 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800da4a:	4a9b      	ldr	r2, [pc, #620]	@ (800dcb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800da4c:	6813      	ldr	r3, [r2, #0]
 800da4e:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 800da52:	2b01      	cmp	r3, #1
 800da54:	4691      	mov	r9, r2
 800da56:	f040 80e2 	bne.w	800dc1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 800da5a:	8829      	ldrh	r1, [r5, #0]
 800da5c:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 800da60:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 800da64:	33ae      	adds	r3, #174	@ 0xae
 800da66:	2600      	movs	r6, #0
 800da68:	428f      	cmp	r7, r1
 800da6a:	f103 0308 	add.w	r3, r3, #8
 800da6e:	dd0a      	ble.n	800da86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 800da70:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 800da74:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 800da78:	4402      	add	r2, r0
 800da7a:	b212      	sxth	r2, r2
 800da7c:	4296      	cmp	r6, r2
 800da7e:	bfb8      	it	lt
 800da80:	4616      	movlt	r6, r2
 800da82:	3101      	adds	r1, #1
 800da84:	e7f0      	b.n	800da68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 800da86:	4b8d      	ldr	r3, [pc, #564]	@ (800dcbc <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 800da88:	f8df 922c 	ldr.w	r9, [pc, #556]	@ 800dcb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 800da8c:	881b      	ldrh	r3, [r3, #0]
 800da8e:	2b0f      	cmp	r3, #15
 800da90:	bf88      	it	hi
 800da92:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 800da96:	f04f 0300 	mov.w	r3, #0
 800da9a:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800da9e:	bf98      	it	ls
 800daa0:	f04f 0b01 	movls.w	fp, #1
 800daa4:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 800daa8:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 800daac:	4b82      	ldr	r3, [pc, #520]	@ (800dcb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800daae:	4438      	add	r0, r7
 800dab0:	b207      	sxth	r7, r0
 800dab2:	6818      	ldr	r0, [r3, #0]
 800dab4:	42b7      	cmp	r7, r6
 800dab6:	6803      	ldr	r3, [r0, #0]
 800dab8:	f280 8083 	bge.w	800dbc2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 800dabc:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 800dac0:	4798      	blx	r3
 800dac2:	eb07 030b 	add.w	r3, r7, fp
 800dac6:	4298      	cmp	r0, r3
 800dac8:	da07      	bge.n	800dada <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 800daca:	42b0      	cmp	r0, r6
 800dacc:	da05      	bge.n	800dada <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 800dace:	4287      	cmp	r7, r0
 800dad0:	dd6c      	ble.n	800dbac <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 800dad2:	2f00      	cmp	r7, #0
 800dad4:	dd6a      	ble.n	800dbac <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 800dad6:	4630      	mov	r0, r6
 800dad8:	e004      	b.n	800dae4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 800dada:	4287      	cmp	r7, r0
 800dadc:	dcfb      	bgt.n	800dad6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 800dade:	42b0      	cmp	r0, r6
 800dae0:	bfa8      	it	ge
 800dae2:	4630      	movge	r0, r6
 800dae4:	4b76      	ldr	r3, [pc, #472]	@ (800dcc0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 800dae6:	f8ad 7016 	strh.w	r7, [sp, #22]
 800daea:	1bc0      	subs	r0, r0, r7
 800daec:	f9b3 3000 	ldrsh.w	r3, [r3]
 800daf0:	882f      	ldrh	r7, [r5, #0]
 800daf2:	f8ad 3018 	strh.w	r3, [sp, #24]
 800daf6:	2200      	movs	r2, #0
 800daf8:	f8ad 2014 	strh.w	r2, [sp, #20]
 800dafc:	f8ad 001a 	strh.w	r0, [sp, #26]
 800db00:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800db04:	42bb      	cmp	r3, r7
 800db06:	d9cd      	bls.n	800daa4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 800db08:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 800db0c:	ab07      	add	r3, sp, #28
 800db0e:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800db12:	6851      	ldr	r1, [r2, #4]
 800db14:	c303      	stmia	r3!, {r0, r1}
 800db16:	a905      	add	r1, sp, #20
 800db18:	a807      	add	r0, sp, #28
 800db1a:	f7ff f93e 	bl	800cd9a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800db1e:	2800      	cmp	r0, #0
 800db20:	d04c      	beq.n	800dbbc <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 800db22:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 800db26:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 800db2a:	f8bd a020 	ldrh.w	sl, [sp, #32]
 800db2e:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 800db32:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800db36:	9302      	str	r3, [sp, #8]
 800db38:	4686      	mov	lr, r0
 800db3a:	4290      	cmp	r0, r2
 800db3c:	4450      	add	r0, sl
 800db3e:	f8bd a018 	ldrh.w	sl, [sp, #24]
 800db42:	bfb8      	it	lt
 800db44:	4696      	movlt	lr, r2
 800db46:	4452      	add	r2, sl
 800db48:	4299      	cmp	r1, r3
 800db4a:	b280      	uxth	r0, r0
 800db4c:	b292      	uxth	r2, r2
 800db4e:	468c      	mov	ip, r1
 800db50:	fa0f fa82 	sxth.w	sl, r2
 800db54:	bfb8      	it	lt
 800db56:	469c      	movlt	ip, r3
 800db58:	b203      	sxth	r3, r0
 800db5a:	4553      	cmp	r3, sl
 800db5c:	bfb8      	it	lt
 800db5e:	4602      	movlt	r2, r0
 800db60:	eba2 020e 	sub.w	r2, r2, lr
 800db64:	f8ad 2020 	strh.w	r2, [sp, #32]
 800db68:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 800db6c:	9b02      	ldr	r3, [sp, #8]
 800db6e:	f8ad e01c 	strh.w	lr, [sp, #28]
 800db72:	4411      	add	r1, r2
 800db74:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800db78:	f8ad c01e 	strh.w	ip, [sp, #30]
 800db7c:	4413      	add	r3, r2
 800db7e:	b289      	uxth	r1, r1
 800db80:	b29b      	uxth	r3, r3
 800db82:	b208      	sxth	r0, r1
 800db84:	b21a      	sxth	r2, r3
 800db86:	4290      	cmp	r0, r2
 800db88:	bfb8      	it	lt
 800db8a:	460b      	movlt	r3, r1
 800db8c:	eba3 030c 	sub.w	r3, r3, ip
 800db90:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800db94:	a807      	add	r0, sp, #28
 800db96:	f7fb ffb0 	bl	8009afa <_ZNK8touchgfx4Rect7isEmptyEv>
 800db9a:	b920      	cbnz	r0, 800dba6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 800db9c:	6823      	ldr	r3, [r4, #0]
 800db9e:	a907      	add	r1, sp, #28
 800dba0:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800dba2:	4620      	mov	r0, r4
 800dba4:	4798      	blx	r3
 800dba6:	3701      	adds	r7, #1
 800dba8:	b2bf      	uxth	r7, r7
 800dbaa:	e7a9      	b.n	800db00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 800dbac:	f8d9 0000 	ldr.w	r0, [r9]
 800dbb0:	6803      	ldr	r3, [r0, #0]
 800dbb2:	2101      	movs	r1, #1
 800dbb4:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800dbb8:	4798      	blx	r3
 800dbba:	e773      	b.n	800daa4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 800dbbc:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800dbc0:	e7e8      	b.n	800db94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 800dbc2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800dbc4:	4798      	blx	r3
 800dbc6:	4b3f      	ldr	r3, [pc, #252]	@ (800dcc4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 800dbc8:	781b      	ldrb	r3, [r3, #0]
 800dbca:	2b00      	cmp	r3, #0
 800dbcc:	f43f af29 	beq.w	800da22 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 800dbd0:	2300      	movs	r3, #0
 800dbd2:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 800dbd6:	882b      	ldrh	r3, [r5, #0]
 800dbd8:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 800dbdc:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800dbe0:	42ab      	cmp	r3, r5
 800dbe2:	f4bf af1e 	bcs.w	800da22 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 800dbe6:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 800dbea:	2907      	cmp	r1, #7
 800dbec:	d814      	bhi.n	800dc18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 800dbee:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 800dbf2:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 800dbf6:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 800dbfa:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 800dbfe:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 800dc02:	1c4a      	adds	r2, r1, #1
 800dc04:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 800dc08:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 800dc0c:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 800dc10:	f8a2 c002 	strh.w	ip, [r2, #2]
 800dc14:	8097      	strh	r7, [r2, #4]
 800dc16:	80d6      	strh	r6, [r2, #6]
 800dc18:	3301      	adds	r3, #1
 800dc1a:	b29b      	uxth	r3, r3
 800dc1c:	e7e0      	b.n	800dbe0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 800dc1e:	2b02      	cmp	r3, #2
 800dc20:	f040 8133 	bne.w	800de8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 800dc24:	4b28      	ldr	r3, [pc, #160]	@ (800dcc8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 800dc26:	781b      	ldrb	r3, [r3, #0]
 800dc28:	2b01      	cmp	r3, #1
 800dc2a:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 800dc2e:	f000 8098 	beq.w	800dd62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800dc32:	882a      	ldrh	r2, [r5, #0]
 800dc34:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 800dc38:	3201      	adds	r2, #1
 800dc3a:	b292      	uxth	r2, r2
 800dc3c:	2900      	cmp	r1, #0
 800dc3e:	d0c2      	beq.n	800dbc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800dc40:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
 800dc44:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
 800dc48:	441e      	add	r6, r3
 800dc4a:	b236      	sxth	r6, r6
 800dc4c:	4694      	mov	ip, r2
 800dc4e:	f04f 0900 	mov.w	r9, #0
 800dc52:	fa1f f38c 	uxth.w	r3, ip
 800dc56:	4299      	cmp	r1, r3
 800dc58:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 800dc5c:	f240 80bf 	bls.w	800ddde <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 800dc60:	4427      	add	r7, r4
 800dc62:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 800dc66:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 800dc6a:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 800dc6e:	4283      	cmp	r3, r0
 800dc70:	f340 80a1 	ble.w	800ddb6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 800dc74:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
 800dc78:	4406      	add	r6, r0
 800dc7a:	b236      	sxth	r6, r6
 800dc7c:	429e      	cmp	r6, r3
 800dc7e:	bfa8      	it	ge
 800dc80:	461e      	movge	r6, r3
 800dc82:	46e1      	mov	r9, ip
 800dc84:	f10c 0c01 	add.w	ip, ip, #1
 800dc88:	e7e3      	b.n	800dc52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 800dc8a:	d10a      	bne.n	800dca2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 800dc8c:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
 800dc90:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 800dc94:	4562      	cmp	r2, ip
 800dc96:	bfb8      	it	lt
 800dc98:	4662      	movlt	r2, ip
 800dc9a:	4288      	cmp	r0, r1
 800dc9c:	bfb8      	it	lt
 800dc9e:	461f      	movlt	r7, r3
 800dca0:	e087      	b.n	800ddb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 800dca2:	428a      	cmp	r2, r1
 800dca4:	bfb8      	it	lt
 800dca6:	460a      	movlt	r2, r1
 800dca8:	e083      	b.n	800ddb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 800dcaa:	bf00      	nop
 800dcac:	20011a34 	.word	0x20011a34
 800dcb0:	20011a40 	.word	0x20011a40
 800dcb4:	20000084 	.word	0x20000084
 800dcb8:	200119fc 	.word	0x200119fc
 800dcbc:	200119f2 	.word	0x200119f2
 800dcc0:	200119f0 	.word	0x200119f0
 800dcc4:	200119fa 	.word	0x200119fa
 800dcc8:	200119f4 	.word	0x200119f4
 800dccc:	19a1      	adds	r1, r4, r6
 800dcce:	ab07      	add	r3, sp, #28
 800dcd0:	f851 0fac 	ldr.w	r0, [r1, #172]!
 800dcd4:	6849      	ldr	r1, [r1, #4]
 800dcd6:	c303      	stmia	r3!, {r0, r1}
 800dcd8:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800dcdc:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800dce0:	2b13      	cmp	r3, #19
 800dce2:	bfd8      	it	le
 800dce4:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800dce8:	f8ad 201c 	strh.w	r2, [sp, #28]
 800dcec:	440b      	add	r3, r1
 800dcee:	1a9b      	subs	r3, r3, r2
 800dcf0:	a807      	add	r0, sp, #28
 800dcf2:	f8ad 3020 	strh.w	r3, [sp, #32]
 800dcf6:	f7fe ff97 	bl	800cc28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800dcfa:	a807      	add	r0, sp, #28
 800dcfc:	f7fb fefd 	bl	8009afa <_ZNK8touchgfx4Rect7isEmptyEv>
 800dd00:	bb78      	cbnz	r0, 800dd62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800dd02:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
 800dd06:	f8d9 0000 	ldr.w	r0, [r9]
 800dd0a:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800dd0e:	f8d0 e000 	ldr.w	lr, [r0]
 800dd12:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800dd16:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800dd1a:	f1bc 0f14 	cmp.w	ip, #20
 800dd1e:	bfa8      	it	ge
 800dd20:	f04f 0c14 	movge.w	ip, #20
 800dd24:	fa1f fc8c 	uxth.w	ip, ip
 800dd28:	f8cd c000 	str.w	ip, [sp]
 800dd2c:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
 800dd30:	47d8      	blx	fp
 800dd32:	4683      	mov	fp, r0
 800dd34:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800dd38:	a807      	add	r0, sp, #28
 800dd3a:	f7fe ff5b 	bl	800cbf4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800dd3e:	6823      	ldr	r3, [r4, #0]
 800dd40:	4426      	add	r6, r4
 800dd42:	4620      	mov	r0, r4
 800dd44:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800dd46:	a907      	add	r1, sp, #28
 800dd48:	4798      	blx	r3
 800dd4a:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 800dd4e:	eba0 000b 	sub.w	r0, r0, fp
 800dd52:	b200      	sxth	r0, r0
 800dd54:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
 800dd58:	b918      	cbnz	r0, 800dd62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800dd5a:	b2b9      	uxth	r1, r7
 800dd5c:	4650      	mov	r0, sl
 800dd5e:	f7ff fa79 	bl	800d254 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800dd62:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 800dd66:	f1bb 0f00 	cmp.w	fp, #0
 800dd6a:	f43f af2c 	beq.w	800dbc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800dd6e:	882b      	ldrh	r3, [r5, #0]
 800dd70:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 800dd74:	3301      	adds	r3, #1
 800dd76:	b29b      	uxth	r3, r3
 800dd78:	2700      	movs	r7, #0
 800dd7a:	b299      	uxth	r1, r3
 800dd7c:	458b      	cmp	fp, r1
 800dd7e:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 800dd82:	d9a3      	bls.n	800dccc <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 800dd84:	4426      	add	r6, r4
 800dd86:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 800dd8a:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
 800dd8e:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 800dd92:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 800dd96:	4408      	add	r0, r1
 800dd98:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 800dd9c:	4461      	add	r1, ip
 800dd9e:	b200      	sxth	r0, r0
 800dda0:	b209      	sxth	r1, r1
 800dda2:	4288      	cmp	r0, r1
 800dda4:	f6bf af71 	bge.w	800dc8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 800dda8:	4584      	cmp	ip, r0
 800ddaa:	4662      	mov	r2, ip
 800ddac:	461f      	mov	r7, r3
 800ddae:	bfb8      	it	lt
 800ddb0:	4602      	movlt	r2, r0
 800ddb2:	3301      	adds	r3, #1
 800ddb4:	e7e1      	b.n	800dd7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 800ddb6:	d10e      	bne.n	800ddd6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 800ddb8:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 800ddbc:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 800ddc0:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 800ddc4:	4473      	add	r3, lr
 800ddc6:	b21b      	sxth	r3, r3
 800ddc8:	429e      	cmp	r6, r3
 800ddca:	bfa8      	it	ge
 800ddcc:	461e      	movge	r6, r3
 800ddce:	4287      	cmp	r7, r0
 800ddd0:	bfb8      	it	lt
 800ddd2:	46e1      	movlt	r9, ip
 800ddd4:	e756      	b.n	800dc84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 800ddd6:	4286      	cmp	r6, r0
 800ddd8:	bfa8      	it	ge
 800ddda:	4606      	movge	r6, r0
 800dddc:	e752      	b.n	800dc84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 800ddde:	eb0a 0007 	add.w	r0, sl, r7
 800dde2:	4427      	add	r7, r4
 800dde4:	e9cd 2102 	strd	r2, r1, [sp, #8]
 800dde8:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 800ddec:	f1bb 0f13 	cmp.w	fp, #19
 800ddf0:	bfde      	ittt	le
 800ddf2:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
 800ddf6:	445e      	addle	r6, fp
 800ddf8:	b236      	sxthle	r6, r6
 800ddfa:	f7fb fe7e 	bl	8009afa <_ZNK8touchgfx4Rect7isEmptyEv>
 800ddfe:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 800de02:	2800      	cmp	r0, #0
 800de04:	f47f af1a 	bne.w	800dc3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 800de08:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 800de0c:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800de10:	482a      	ldr	r0, [pc, #168]	@ (800debc <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 800de12:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 800de16:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 800de1a:	6800      	ldr	r0, [r0, #0]
 800de1c:	f8ad 101c 	strh.w	r1, [sp, #28]
 800de20:	1ab6      	subs	r6, r6, r2
 800de22:	2e14      	cmp	r6, #20
 800de24:	f8ad 201e 	strh.w	r2, [sp, #30]
 800de28:	f8ad 3020 	strh.w	r3, [sp, #32]
 800de2c:	bfa8      	it	ge
 800de2e:	2614      	movge	r6, #20
 800de30:	f8d0 c000 	ldr.w	ip, [r0]
 800de34:	b2b6      	uxth	r6, r6
 800de36:	fa1f fb8b 	uxth.w	fp, fp
 800de3a:	455e      	cmp	r6, fp
 800de3c:	bf94      	ite	ls
 800de3e:	9600      	strls	r6, [sp, #0]
 800de40:	f8cd b000 	strhi.w	fp, [sp]
 800de44:	b292      	uxth	r2, r2
 800de46:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
 800de4a:	b29b      	uxth	r3, r3
 800de4c:	b289      	uxth	r1, r1
 800de4e:	47b0      	blx	r6
 800de50:	6823      	ldr	r3, [r4, #0]
 800de52:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800de56:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800de58:	a907      	add	r1, sp, #28
 800de5a:	4620      	mov	r0, r4
 800de5c:	4798      	blx	r3
 800de5e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 800de62:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 800de66:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 800de6a:	1a5b      	subs	r3, r3, r1
 800de6c:	440a      	add	r2, r1
 800de6e:	b21b      	sxth	r3, r3
 800de70:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 800de74:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 800de78:	2b00      	cmp	r3, #0
 800de7a:	f47f aeda 	bne.w	800dc32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 800de7e:	fa1f f189 	uxth.w	r1, r9
 800de82:	4650      	mov	r0, sl
 800de84:	f7ff f9e6 	bl	800d254 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800de88:	e6d3      	b.n	800dc32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 800de8a:	882e      	ldrh	r6, [r5, #0]
 800de8c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800de90:	42b3      	cmp	r3, r6
 800de92:	f67f ae98 	bls.w	800dbc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800de96:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 800de9a:	ab07      	add	r3, sp, #28
 800de9c:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800dea0:	6851      	ldr	r1, [r2, #4]
 800dea2:	c303      	stmia	r3!, {r0, r1}
 800dea4:	a807      	add	r0, sp, #28
 800dea6:	f7fb fe28 	bl	8009afa <_ZNK8touchgfx4Rect7isEmptyEv>
 800deaa:	b920      	cbnz	r0, 800deb6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 800deac:	6823      	ldr	r3, [r4, #0]
 800deae:	a907      	add	r1, sp, #28
 800deb0:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800deb2:	4620      	mov	r0, r4
 800deb4:	4798      	blx	r3
 800deb6:	3601      	adds	r6, #1
 800deb8:	b2b6      	uxth	r6, r6
 800deba:	e7e7      	b.n	800de8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 800debc:	200119fc 	.word	0x200119fc

0800dec0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800dec0:	4b03      	ldr	r3, [pc, #12]	@ (800ded0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800dec2:	2200      	movs	r2, #0
 800dec4:	801a      	strh	r2, [r3, #0]
 800dec6:	805a      	strh	r2, [r3, #2]
 800dec8:	809a      	strh	r2, [r3, #4]
 800deca:	80da      	strh	r2, [r3, #6]
 800decc:	4770      	bx	lr
 800dece:	bf00      	nop
 800ded0:	20011a40 	.word	0x20011a40

0800ded4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800ded4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ded8:	4606      	mov	r6, r0
 800deda:	b09d      	sub	sp, #116	@ 0x74
 800dedc:	a803      	add	r0, sp, #12
 800dede:	4614      	mov	r4, r2
 800dee0:	468a      	mov	sl, r1
 800dee2:	461d      	mov	r5, r3
 800dee4:	f000 fdad 	bl	800ea42 <_ZN8touchgfx12TextProviderC1Ev>
 800dee8:	6833      	ldr	r3, [r6, #0]
 800deea:	4630      	mov	r0, r6
 800deec:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800deee:	4798      	blx	r3
 800def0:	6833      	ldr	r3, [r6, #0]
 800def2:	4607      	mov	r7, r0
 800def4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800def6:	4630      	mov	r0, r6
 800def8:	4798      	blx	r3
 800defa:	462a      	mov	r2, r5
 800defc:	9000      	str	r0, [sp, #0]
 800defe:	4621      	mov	r1, r4
 800df00:	463b      	mov	r3, r7
 800df02:	a803      	add	r0, sp, #12
 800df04:	f000 fdf0 	bl	800eae8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800df08:	2500      	movs	r5, #0
 800df0a:	462c      	mov	r4, r5
 800df0c:	46a9      	mov	r9, r5
 800df0e:	46a8      	mov	r8, r5
 800df10:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 800df14:	2300      	movs	r3, #0
 800df16:	9302      	str	r3, [sp, #8]
 800df18:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800df1c:	429c      	cmp	r4, r3
 800df1e:	d002      	beq.n	800df26 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800df20:	455c      	cmp	r4, fp
 800df22:	bf18      	it	ne
 800df24:	4625      	movne	r5, r4
 800df26:	ab02      	add	r3, sp, #8
 800df28:	4632      	mov	r2, r6
 800df2a:	4651      	mov	r1, sl
 800df2c:	a803      	add	r0, sp, #12
 800df2e:	f001 f8cd 	bl	800f0cc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800df32:	4604      	mov	r4, r0
 800df34:	b108      	cbz	r0, 800df3a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800df36:	280a      	cmp	r0, #10
 800df38:	d10a      	bne.n	800df50 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800df3a:	45c1      	cmp	r9, r8
 800df3c:	bf38      	it	cc
 800df3e:	46c1      	movcc	r9, r8
 800df40:	f04f 0800 	mov.w	r8, #0
 800df44:	2c00      	cmp	r4, #0
 800df46:	d1e5      	bne.n	800df14 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800df48:	4648      	mov	r0, r9
 800df4a:	b01d      	add	sp, #116	@ 0x74
 800df4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800df50:	9a02      	ldr	r2, [sp, #8]
 800df52:	2a00      	cmp	r2, #0
 800df54:	d0de      	beq.n	800df14 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800df56:	7b57      	ldrb	r7, [r2, #13]
 800df58:	6833      	ldr	r3, [r6, #0]
 800df5a:	8894      	ldrh	r4, [r2, #4]
 800df5c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800df5e:	007f      	lsls	r7, r7, #1
 800df60:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 800df64:	7a97      	ldrb	r7, [r2, #10]
 800df66:	4629      	mov	r1, r5
 800df68:	4307      	orrs	r7, r0
 800df6a:	4630      	mov	r0, r6
 800df6c:	4798      	blx	r3
 800df6e:	4438      	add	r0, r7
 800df70:	4480      	add	r8, r0
 800df72:	fa1f f888 	uxth.w	r8, r8
 800df76:	e7e5      	b.n	800df44 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800df78 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800df78:	b508      	push	{r3, lr}
 800df7a:	6803      	ldr	r3, [r0, #0]
 800df7c:	68db      	ldr	r3, [r3, #12]
 800df7e:	4798      	blx	r3
 800df80:	b128      	cbz	r0, 800df8e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800df82:	7b43      	ldrb	r3, [r0, #13]
 800df84:	7a80      	ldrb	r0, [r0, #10]
 800df86:	005b      	lsls	r3, r3, #1
 800df88:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800df8c:	4318      	orrs	r0, r3
 800df8e:	bd08      	pop	{r3, pc}

0800df90 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800df90:	b40e      	push	{r1, r2, r3}
 800df92:	b5f0      	push	{r4, r5, r6, r7, lr}
 800df94:	b09e      	sub	sp, #120	@ 0x78
 800df96:	ab23      	add	r3, sp, #140	@ 0x8c
 800df98:	4605      	mov	r5, r0
 800df9a:	f853 4b04 	ldr.w	r4, [r3], #4
 800df9e:	9303      	str	r3, [sp, #12]
 800dfa0:	a805      	add	r0, sp, #20
 800dfa2:	f000 fd4e 	bl	800ea42 <_ZN8touchgfx12TextProviderC1Ev>
 800dfa6:	682b      	ldr	r3, [r5, #0]
 800dfa8:	4628      	mov	r0, r5
 800dfaa:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800dfac:	4798      	blx	r3
 800dfae:	682b      	ldr	r3, [r5, #0]
 800dfb0:	4606      	mov	r6, r0
 800dfb2:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800dfb4:	4628      	mov	r0, r5
 800dfb6:	4798      	blx	r3
 800dfb8:	4633      	mov	r3, r6
 800dfba:	ae1e      	add	r6, sp, #120	@ 0x78
 800dfbc:	4621      	mov	r1, r4
 800dfbe:	9000      	str	r0, [sp, #0]
 800dfc0:	9a03      	ldr	r2, [sp, #12]
 800dfc2:	2400      	movs	r4, #0
 800dfc4:	a805      	add	r0, sp, #20
 800dfc6:	f000 fd8f 	bl	800eae8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800dfca:	f846 4d68 	str.w	r4, [r6, #-104]!
 800dfce:	462a      	mov	r2, r5
 800dfd0:	4633      	mov	r3, r6
 800dfd2:	4621      	mov	r1, r4
 800dfd4:	a805      	add	r0, sp, #20
 800dfd6:	f001 f879 	bl	800f0cc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800dfda:	b1f0      	cbz	r0, 800e01a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 800dfdc:	280a      	cmp	r0, #10
 800dfde:	d018      	beq.n	800e012 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800dfe0:	9f04      	ldr	r7, [sp, #16]
 800dfe2:	b1b7      	cbz	r7, 800e012 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800dfe4:	7b78      	ldrb	r0, [r7, #13]
 800dfe6:	7a3b      	ldrb	r3, [r7, #8]
 800dfe8:	88ea      	ldrh	r2, [r5, #6]
 800dfea:	00c1      	lsls	r1, r0, #3
 800dfec:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 800dff0:	4319      	orrs	r1, r3
 800dff2:	0643      	lsls	r3, r0, #25
 800dff4:	bf44      	itt	mi
 800dff6:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 800dffa:	b219      	sxthmi	r1, r3
 800dffc:	0100      	lsls	r0, r0, #4
 800dffe:	79fb      	ldrb	r3, [r7, #7]
 800e000:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 800e004:	4303      	orrs	r3, r0
 800e006:	4413      	add	r3, r2
 800e008:	1a5b      	subs	r3, r3, r1
 800e00a:	b21b      	sxth	r3, r3
 800e00c:	429c      	cmp	r4, r3
 800e00e:	bfb8      	it	lt
 800e010:	461c      	movlt	r4, r3
 800e012:	4633      	mov	r3, r6
 800e014:	462a      	mov	r2, r5
 800e016:	2100      	movs	r1, #0
 800e018:	e7dc      	b.n	800dfd4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800e01a:	b2a0      	uxth	r0, r4
 800e01c:	b01e      	add	sp, #120	@ 0x78
 800e01e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800e022:	b003      	add	sp, #12
 800e024:	4770      	bx	lr

0800e026 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 800e026:	7a43      	ldrb	r3, [r0, #9]
 800e028:	8880      	ldrh	r0, [r0, #4]
 800e02a:	4418      	add	r0, r3
 800e02c:	b280      	uxth	r0, r0
 800e02e:	4770      	bx	lr

0800e030 <_ZNK8touchgfx4Font13getFontHeightEv>:
 800e030:	6803      	ldr	r3, [r0, #0]
 800e032:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e034:	4718      	bx	r3

0800e036 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800e036:	b40e      	push	{r1, r2, r3}
 800e038:	b570      	push	{r4, r5, r6, lr}
 800e03a:	b09d      	sub	sp, #116	@ 0x74
 800e03c:	ab21      	add	r3, sp, #132	@ 0x84
 800e03e:	4604      	mov	r4, r0
 800e040:	f853 5b04 	ldr.w	r5, [r3], #4
 800e044:	9302      	str	r3, [sp, #8]
 800e046:	a803      	add	r0, sp, #12
 800e048:	f000 fcfb 	bl	800ea42 <_ZN8touchgfx12TextProviderC1Ev>
 800e04c:	6823      	ldr	r3, [r4, #0]
 800e04e:	4620      	mov	r0, r4
 800e050:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e052:	4798      	blx	r3
 800e054:	6823      	ldr	r3, [r4, #0]
 800e056:	4606      	mov	r6, r0
 800e058:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e05a:	4620      	mov	r0, r4
 800e05c:	4798      	blx	r3
 800e05e:	4633      	mov	r3, r6
 800e060:	9000      	str	r0, [sp, #0]
 800e062:	9a02      	ldr	r2, [sp, #8]
 800e064:	4629      	mov	r1, r5
 800e066:	a803      	add	r0, sp, #12
 800e068:	f000 fd3e 	bl	800eae8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e06c:	a803      	add	r0, sp, #12
 800e06e:	f001 f8fb 	bl	800f268 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e072:	2401      	movs	r4, #1
 800e074:	b2a3      	uxth	r3, r4
 800e076:	b140      	cbz	r0, 800e08a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 800e078:	280a      	cmp	r0, #10
 800e07a:	bf08      	it	eq
 800e07c:	3301      	addeq	r3, #1
 800e07e:	a803      	add	r0, sp, #12
 800e080:	bf08      	it	eq
 800e082:	b21c      	sxtheq	r4, r3
 800e084:	f001 f8f0 	bl	800f268 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e088:	e7f4      	b.n	800e074 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800e08a:	4618      	mov	r0, r3
 800e08c:	b01d      	add	sp, #116	@ 0x74
 800e08e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e092:	b003      	add	sp, #12
 800e094:	4770      	bx	lr

0800e096 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800e096:	b40e      	push	{r1, r2, r3}
 800e098:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e09a:	b09e      	sub	sp, #120	@ 0x78
 800e09c:	ab23      	add	r3, sp, #140	@ 0x8c
 800e09e:	4604      	mov	r4, r0
 800e0a0:	f853 5b04 	ldr.w	r5, [r3], #4
 800e0a4:	9303      	str	r3, [sp, #12]
 800e0a6:	a805      	add	r0, sp, #20
 800e0a8:	f000 fccb 	bl	800ea42 <_ZN8touchgfx12TextProviderC1Ev>
 800e0ac:	6823      	ldr	r3, [r4, #0]
 800e0ae:	4620      	mov	r0, r4
 800e0b0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e0b2:	4798      	blx	r3
 800e0b4:	6823      	ldr	r3, [r4, #0]
 800e0b6:	4606      	mov	r6, r0
 800e0b8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e0ba:	4620      	mov	r0, r4
 800e0bc:	4798      	blx	r3
 800e0be:	4633      	mov	r3, r6
 800e0c0:	4629      	mov	r1, r5
 800e0c2:	9000      	str	r0, [sp, #0]
 800e0c4:	9a03      	ldr	r2, [sp, #12]
 800e0c6:	a805      	add	r0, sp, #20
 800e0c8:	ad1e      	add	r5, sp, #120	@ 0x78
 800e0ca:	f000 fd0d 	bl	800eae8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e0ce:	2100      	movs	r1, #0
 800e0d0:	f845 1d68 	str.w	r1, [r5, #-104]!
 800e0d4:	4622      	mov	r2, r4
 800e0d6:	462b      	mov	r3, r5
 800e0d8:	a805      	add	r0, sp, #20
 800e0da:	f000 fff7 	bl	800f0cc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e0de:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 800e0e2:	b1d8      	cbz	r0, 800e11c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 800e0e4:	280a      	cmp	r0, #10
 800e0e6:	d012      	beq.n	800e10e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800e0e8:	9804      	ldr	r0, [sp, #16]
 800e0ea:	b180      	cbz	r0, 800e10e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800e0ec:	7b47      	ldrb	r7, [r0, #13]
 800e0ee:	88e2      	ldrh	r2, [r4, #6]
 800e0f0:	00fb      	lsls	r3, r7, #3
 800e0f2:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800e0f6:	7a03      	ldrb	r3, [r0, #8]
 800e0f8:	430b      	orrs	r3, r1
 800e0fa:	0679      	lsls	r1, r7, #25
 800e0fc:	bf44      	itt	mi
 800e0fe:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800e102:	b21b      	sxthmi	r3, r3
 800e104:	1ad3      	subs	r3, r2, r3
 800e106:	b21b      	sxth	r3, r3
 800e108:	429e      	cmp	r6, r3
 800e10a:	bfa8      	it	ge
 800e10c:	461e      	movge	r6, r3
 800e10e:	462b      	mov	r3, r5
 800e110:	4622      	mov	r2, r4
 800e112:	2100      	movs	r1, #0
 800e114:	a805      	add	r0, sp, #20
 800e116:	f000 ffd9 	bl	800f0cc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e11a:	e7e2      	b.n	800e0e2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 800e11c:	4630      	mov	r0, r6
 800e11e:	b01e      	add	sp, #120	@ 0x78
 800e120:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800e124:	b003      	add	sp, #12
 800e126:	4770      	bx	lr

0800e128 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800e128:	b513      	push	{r0, r1, r4, lr}
 800e12a:	6803      	ldr	r3, [r0, #0]
 800e12c:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800e130:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800e134:	f8ad 1004 	strh.w	r1, [sp, #4]
 800e138:	2400      	movs	r4, #0
 800e13a:	9400      	str	r4, [sp, #0]
 800e13c:	f8ad 2006 	strh.w	r2, [sp, #6]
 800e140:	691b      	ldr	r3, [r3, #16]
 800e142:	4669      	mov	r1, sp
 800e144:	4798      	blx	r3
 800e146:	b002      	add	sp, #8
 800e148:	bd10      	pop	{r4, pc}

0800e14a <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800e14a:	b538      	push	{r3, r4, r5, lr}
 800e14c:	680b      	ldr	r3, [r1, #0]
 800e14e:	460c      	mov	r4, r1
 800e150:	68db      	ldr	r3, [r3, #12]
 800e152:	4605      	mov	r5, r0
 800e154:	4798      	blx	r3
 800e156:	6823      	ldr	r3, [r4, #0]
 800e158:	4620      	mov	r0, r4
 800e15a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e15c:	4629      	mov	r1, r5
 800e15e:	4798      	blx	r3
 800e160:	4628      	mov	r0, r5
 800e162:	bd38      	pop	{r3, r4, r5, pc}

0800e164 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800e164:	b410      	push	{r4}
 800e166:	880a      	ldrh	r2, [r1, #0]
 800e168:	8884      	ldrh	r4, [r0, #4]
 800e16a:	4422      	add	r2, r4
 800e16c:	800a      	strh	r2, [r1, #0]
 800e16e:	88c4      	ldrh	r4, [r0, #6]
 800e170:	884a      	ldrh	r2, [r1, #2]
 800e172:	4422      	add	r2, r4
 800e174:	804a      	strh	r2, [r1, #2]
 800e176:	6940      	ldr	r0, [r0, #20]
 800e178:	b120      	cbz	r0, 800e184 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800e17a:	6803      	ldr	r3, [r0, #0]
 800e17c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e180:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e182:	4718      	bx	r3
 800e184:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e188:	4770      	bx	lr

0800e18a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800e18a:	b570      	push	{r4, r5, r6, lr}
 800e18c:	8882      	ldrh	r2, [r0, #4]
 800e18e:	880b      	ldrh	r3, [r1, #0]
 800e190:	4413      	add	r3, r2
 800e192:	800b      	strh	r3, [r1, #0]
 800e194:	88c2      	ldrh	r2, [r0, #6]
 800e196:	884b      	ldrh	r3, [r1, #2]
 800e198:	460c      	mov	r4, r1
 800e19a:	4413      	add	r3, r2
 800e19c:	804b      	strh	r3, [r1, #2]
 800e19e:	4605      	mov	r5, r0
 800e1a0:	1d01      	adds	r1, r0, #4
 800e1a2:	4620      	mov	r0, r4
 800e1a4:	f7fb fc66 	bl	8009a74 <_ZN8touchgfx4RectaNERKS0_>
 800e1a8:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800e1ac:	2b00      	cmp	r3, #0
 800e1ae:	dd0b      	ble.n	800e1c8 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800e1b0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800e1b4:	2b00      	cmp	r3, #0
 800e1b6:	dd07      	ble.n	800e1c8 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800e1b8:	6968      	ldr	r0, [r5, #20]
 800e1ba:	b128      	cbz	r0, 800e1c8 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800e1bc:	6803      	ldr	r3, [r0, #0]
 800e1be:	4621      	mov	r1, r4
 800e1c0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e1c2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e1c6:	4718      	bx	r3
 800e1c8:	bd70      	pop	{r4, r5, r6, pc}
	...

0800e1cc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800e1cc:	b570      	push	{r4, r5, r6, lr}
 800e1ce:	8882      	ldrh	r2, [r0, #4]
 800e1d0:	880b      	ldrh	r3, [r1, #0]
 800e1d2:	4413      	add	r3, r2
 800e1d4:	800b      	strh	r3, [r1, #0]
 800e1d6:	88c2      	ldrh	r2, [r0, #6]
 800e1d8:	884b      	ldrh	r3, [r1, #2]
 800e1da:	460c      	mov	r4, r1
 800e1dc:	4413      	add	r3, r2
 800e1de:	804b      	strh	r3, [r1, #2]
 800e1e0:	4605      	mov	r5, r0
 800e1e2:	1d01      	adds	r1, r0, #4
 800e1e4:	4620      	mov	r0, r4
 800e1e6:	f7fb fc45 	bl	8009a74 <_ZN8touchgfx4RectaNERKS0_>
 800e1ea:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800e1ee:	2b00      	cmp	r3, #0
 800e1f0:	dd19      	ble.n	800e226 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800e1f2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800e1f6:	2b00      	cmp	r3, #0
 800e1f8:	dd15      	ble.n	800e226 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800e1fa:	6968      	ldr	r0, [r5, #20]
 800e1fc:	b128      	cbz	r0, 800e20a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 800e1fe:	6803      	ldr	r3, [r0, #0]
 800e200:	4621      	mov	r1, r4
 800e202:	691b      	ldr	r3, [r3, #16]
 800e204:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e208:	4718      	bx	r3
 800e20a:	4b07      	ldr	r3, [pc, #28]	@ (800e228 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 800e20c:	681b      	ldr	r3, [r3, #0]
 800e20e:	3304      	adds	r3, #4
 800e210:	429d      	cmp	r5, r3
 800e212:	d108      	bne.n	800e226 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800e214:	f7fe fea0 	bl	800cf58 <_ZN8touchgfx11Application11getInstanceEv>
 800e218:	6803      	ldr	r3, [r0, #0]
 800e21a:	6821      	ldr	r1, [r4, #0]
 800e21c:	6862      	ldr	r2, [r4, #4]
 800e21e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e220:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e224:	4718      	bx	r3
 800e226:	bd70      	pop	{r4, r5, r6, pc}
 800e228:	20011a38 	.word	0x20011a38

0800e22c <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800e22c:	b570      	push	{r4, r5, r6, lr}
 800e22e:	4604      	mov	r4, r0
 800e230:	4616      	mov	r6, r2
 800e232:	460d      	mov	r5, r1
 800e234:	b901      	cbnz	r1, 800e238 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800e236:	b192      	cbz	r2, 800e25e <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 800e238:	6823      	ldr	r3, [r4, #0]
 800e23a:	4620      	mov	r0, r4
 800e23c:	699b      	ldr	r3, [r3, #24]
 800e23e:	4798      	blx	r3
 800e240:	88e2      	ldrh	r2, [r4, #6]
 800e242:	88a1      	ldrh	r1, [r4, #4]
 800e244:	4432      	add	r2, r6
 800e246:	4429      	add	r1, r5
 800e248:	4620      	mov	r0, r4
 800e24a:	b212      	sxth	r2, r2
 800e24c:	b209      	sxth	r1, r1
 800e24e:	f7f4 fbfd 	bl	8002a4c <_ZN8touchgfx8Drawable5setXYEss>
 800e252:	6823      	ldr	r3, [r4, #0]
 800e254:	4620      	mov	r0, r4
 800e256:	699b      	ldr	r3, [r3, #24]
 800e258:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e25c:	4718      	bx	r3
 800e25e:	bd70      	pop	{r4, r5, r6, pc}

0800e260 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800e260:	b510      	push	{r4, lr}
 800e262:	4604      	mov	r4, r0
 800e264:	4608      	mov	r0, r1
 800e266:	2300      	movs	r3, #0
 800e268:	8023      	strh	r3, [r4, #0]
 800e26a:	8063      	strh	r3, [r4, #2]
 800e26c:	6803      	ldr	r3, [r0, #0]
 800e26e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800e272:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800e276:	80a1      	strh	r1, [r4, #4]
 800e278:	80e2      	strh	r2, [r4, #6]
 800e27a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e27c:	4621      	mov	r1, r4
 800e27e:	4798      	blx	r3
 800e280:	4620      	mov	r0, r4
 800e282:	bd10      	pop	{r4, pc}

0800e284 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 800e284:	b530      	push	{r4, r5, lr}
 800e286:	8083      	strh	r3, [r0, #4]
 800e288:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800e28c:	80c3      	strh	r3, [r0, #6]
 800e28e:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800e292:	7203      	strb	r3, [r0, #8]
 800e294:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800e298:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800e29c:	7243      	strb	r3, [r0, #9]
 800e29e:	7a83      	ldrb	r3, [r0, #10]
 800e2a0:	6141      	str	r1, [r0, #20]
 800e2a2:	f365 0306 	bfi	r3, r5, #0, #7
 800e2a6:	f89d 501c 	ldrb.w	r5, [sp, #28]
 800e2aa:	8302      	strh	r2, [r0, #24]
 800e2ac:	f365 13c7 	bfi	r3, r5, #7, #1
 800e2b0:	7283      	strb	r3, [r0, #10]
 800e2b2:	f89d 3020 	ldrb.w	r3, [sp, #32]
 800e2b6:	72c3      	strb	r3, [r0, #11]
 800e2b8:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 800e2bc:	7303      	strb	r3, [r0, #12]
 800e2be:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 800e2c2:	81c3      	strh	r3, [r0, #14]
 800e2c4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800e2c8:	8203      	strh	r3, [r0, #16]
 800e2ca:	4b01      	ldr	r3, [pc, #4]	@ (800e2d0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 800e2cc:	6003      	str	r3, [r0, #0]
 800e2ce:	bd30      	pop	{r4, r5, pc}
 800e2d0:	0802065c 	.word	0x0802065c

0800e2d4 <_ZNK8touchgfx9ConstFont4findEt>:
 800e2d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e2d6:	6944      	ldr	r4, [r0, #20]
 800e2d8:	b3bc      	cbz	r4, 800e34a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e2da:	88a3      	ldrh	r3, [r4, #4]
 800e2dc:	8b02      	ldrh	r2, [r0, #24]
 800e2de:	1acb      	subs	r3, r1, r3
 800e2e0:	f102 32ff 	add.w	r2, r2, #4294967295
 800e2e4:	d431      	bmi.n	800e34a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e2e6:	4293      	cmp	r3, r2
 800e2e8:	dd0c      	ble.n	800e304 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800e2ea:	230e      	movs	r3, #14
 800e2ec:	fb03 4302 	mla	r3, r3, r2, r4
 800e2f0:	889b      	ldrh	r3, [r3, #4]
 800e2f2:	1a5b      	subs	r3, r3, r1
 800e2f4:	1ad3      	subs	r3, r2, r3
 800e2f6:	429a      	cmp	r2, r3
 800e2f8:	db27      	blt.n	800e34a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e2fa:	2b00      	cmp	r3, #0
 800e2fc:	bfbc      	itt	lt
 800e2fe:	2302      	movlt	r3, #2
 800e300:	fb92 f3f3 	sdivlt	r3, r2, r3
 800e304:	2500      	movs	r5, #0
 800e306:	260e      	movs	r6, #14
 800e308:	4295      	cmp	r5, r2
 800e30a:	dc1e      	bgt.n	800e34a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e30c:	fb06 4003 	mla	r0, r6, r3, r4
 800e310:	8887      	ldrh	r7, [r0, #4]
 800e312:	42b9      	cmp	r1, r7
 800e314:	d01a      	beq.n	800e34c <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800e316:	d20d      	bcs.n	800e334 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800e318:	1e5a      	subs	r2, r3, #1
 800e31a:	4295      	cmp	r5, r2
 800e31c:	dc15      	bgt.n	800e34a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e31e:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800e322:	1a5b      	subs	r3, r3, r1
 800e324:	1ad3      	subs	r3, r2, r3
 800e326:	429a      	cmp	r2, r3
 800e328:	db0f      	blt.n	800e34a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e32a:	429d      	cmp	r5, r3
 800e32c:	ddec      	ble.n	800e308 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800e32e:	1953      	adds	r3, r2, r5
 800e330:	105b      	asrs	r3, r3, #1
 800e332:	e7e9      	b.n	800e308 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800e334:	1c5d      	adds	r5, r3, #1
 800e336:	42aa      	cmp	r2, r5
 800e338:	db07      	blt.n	800e34a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e33a:	8a43      	ldrh	r3, [r0, #18]
 800e33c:	1acb      	subs	r3, r1, r3
 800e33e:	442b      	add	r3, r5
 800e340:	429d      	cmp	r5, r3
 800e342:	dc02      	bgt.n	800e34a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e344:	429a      	cmp	r2, r3
 800e346:	dadf      	bge.n	800e308 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800e348:	e7f1      	b.n	800e32e <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800e34a:	2000      	movs	r0, #0
 800e34c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e34e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800e34e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e350:	4604      	mov	r4, r0
 800e352:	4617      	mov	r7, r2
 800e354:	461e      	mov	r6, r3
 800e356:	b911      	cbnz	r1, 800e35e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800e358:	2500      	movs	r5, #0
 800e35a:	4628      	mov	r0, r5
 800e35c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e35e:	290a      	cmp	r1, #10
 800e360:	d0fa      	beq.n	800e358 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e362:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 800e366:	4291      	cmp	r1, r2
 800e368:	d0f6      	beq.n	800e358 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e36a:	f242 020b 	movw	r2, #8203	@ 0x200b
 800e36e:	4291      	cmp	r1, r2
 800e370:	d0f2      	beq.n	800e358 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e372:	f7ff ffaf 	bl	800e2d4 <_ZNK8touchgfx9ConstFont4findEt>
 800e376:	4605      	mov	r5, r0
 800e378:	b950      	cbnz	r0, 800e390 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800e37a:	6823      	ldr	r3, [r4, #0]
 800e37c:	4620      	mov	r0, r4
 800e37e:	691b      	ldr	r3, [r3, #16]
 800e380:	4798      	blx	r3
 800e382:	4601      	mov	r1, r0
 800e384:	4620      	mov	r0, r4
 800e386:	f7ff ffa5 	bl	800e2d4 <_ZNK8touchgfx9ConstFont4findEt>
 800e38a:	4605      	mov	r5, r0
 800e38c:	2800      	cmp	r0, #0
 800e38e:	d0e3      	beq.n	800e358 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e390:	6823      	ldr	r3, [r4, #0]
 800e392:	4629      	mov	r1, r5
 800e394:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800e396:	4620      	mov	r0, r4
 800e398:	4798      	blx	r3
 800e39a:	6038      	str	r0, [r7, #0]
 800e39c:	6823      	ldr	r3, [r4, #0]
 800e39e:	4620      	mov	r0, r4
 800e3a0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800e3a2:	4798      	blx	r3
 800e3a4:	7030      	strb	r0, [r6, #0]
 800e3a6:	e7d8      	b.n	800e35a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800e3a8 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 800e3a8:	2000      	movs	r0, #0
 800e3aa:	4770      	bx	lr

0800e3ac <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 800e3ac:	2001      	movs	r0, #1
 800e3ae:	4770      	bx	lr

0800e3b0 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 800e3b0:	2002      	movs	r0, #2
 800e3b2:	4770      	bx	lr

0800e3b4 <_ZN8touchgfx6ScreenD1Ev>:
 800e3b4:	4770      	bx	lr

0800e3b6 <_ZN8touchgfx12GestureEventD1Ev>:
 800e3b6:	4770      	bx	lr

0800e3b8 <_ZN8touchgfx9DragEventD1Ev>:
 800e3b8:	4770      	bx	lr

0800e3ba <_ZN8touchgfx10ClickEventD1Ev>:
 800e3ba:	4770      	bx	lr

0800e3bc <_ZN8touchgfx10ClickEventD0Ev>:
 800e3bc:	b510      	push	{r4, lr}
 800e3be:	210c      	movs	r1, #12
 800e3c0:	4604      	mov	r4, r0
 800e3c2:	f00f fb31 	bl	801da28 <_ZdlPvj>
 800e3c6:	4620      	mov	r0, r4
 800e3c8:	bd10      	pop	{r4, pc}

0800e3ca <_ZN8touchgfx9DragEventD0Ev>:
 800e3ca:	b510      	push	{r4, lr}
 800e3cc:	2110      	movs	r1, #16
 800e3ce:	4604      	mov	r4, r0
 800e3d0:	f00f fb2a 	bl	801da28 <_ZdlPvj>
 800e3d4:	4620      	mov	r0, r4
 800e3d6:	bd10      	pop	{r4, pc}

0800e3d8 <_ZN8touchgfx12GestureEventD0Ev>:
 800e3d8:	b510      	push	{r4, lr}
 800e3da:	210c      	movs	r1, #12
 800e3dc:	4604      	mov	r4, r0
 800e3de:	f00f fb23 	bl	801da28 <_ZdlPvj>
 800e3e2:	4620      	mov	r0, r4
 800e3e4:	bd10      	pop	{r4, pc}

0800e3e6 <_ZN8touchgfx6ScreenD0Ev>:
 800e3e6:	b510      	push	{r4, lr}
 800e3e8:	213c      	movs	r1, #60	@ 0x3c
 800e3ea:	4604      	mov	r4, r0
 800e3ec:	f00f fb1c 	bl	801da28 <_ZdlPvj>
 800e3f0:	4620      	mov	r0, r4
 800e3f2:	bd10      	pop	{r4, pc}

0800e3f4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800e3f4:	b530      	push	{r4, r5, lr}
 800e3f6:	460d      	mov	r5, r1
 800e3f8:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 800e3fa:	b087      	sub	sp, #28
 800e3fc:	4604      	mov	r4, r0
 800e3fe:	b301      	cbz	r1, 800e442 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800e400:	a801      	add	r0, sp, #4
 800e402:	f7ff ff2d 	bl	800e260 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e406:	892a      	ldrh	r2, [r5, #8]
 800e408:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800e40c:	7928      	ldrb	r0, [r5, #4]
 800e40e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800e412:	f88d 0010 	strb.w	r0, [sp, #16]
 800e416:	1ad2      	subs	r2, r2, r3
 800e418:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 800e41a:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800e41c:	f8ad 1012 	strh.w	r1, [sp, #18]
 800e420:	441a      	add	r2, r3
 800e422:	896b      	ldrh	r3, [r5, #10]
 800e424:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800e428:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e42c:	1b5b      	subs	r3, r3, r5
 800e42e:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 800e430:	442b      	add	r3, r5
 800e432:	4d05      	ldr	r5, [pc, #20]	@ (800e448 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800e434:	9503      	str	r5, [sp, #12]
 800e436:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e43a:	6803      	ldr	r3, [r0, #0]
 800e43c:	a903      	add	r1, sp, #12
 800e43e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800e440:	4798      	blx	r3
 800e442:	b007      	add	sp, #28
 800e444:	bd30      	pop	{r4, r5, pc}
 800e446:	bf00      	nop
 800e448:	080206ec 	.word	0x080206ec

0800e44c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800e44c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e450:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 800e452:	b08a      	sub	sp, #40	@ 0x28
 800e454:	4604      	mov	r4, r0
 800e456:	460d      	mov	r5, r1
 800e458:	b113      	cbz	r3, 800e460 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 800e45a:	790b      	ldrb	r3, [r1, #4]
 800e45c:	2b00      	cmp	r3, #0
 800e45e:	d044      	beq.n	800e4ea <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800e460:	f104 0804 	add.w	r8, r4, #4
 800e464:	4641      	mov	r1, r8
 800e466:	a803      	add	r0, sp, #12
 800e468:	f7ff fefa 	bl	800e260 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e46c:	792b      	ldrb	r3, [r5, #4]
 800e46e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 800e472:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800e476:	b983      	cbnz	r3, 800e49a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 800e478:	892a      	ldrh	r2, [r5, #8]
 800e47a:	88e9      	ldrh	r1, [r5, #6]
 800e47c:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 800e480:	1b92      	subs	r2, r2, r6
 800e482:	1bc9      	subs	r1, r1, r7
 800e484:	9301      	str	r3, [sp, #4]
 800e486:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 800e48a:	9300      	str	r3, [sp, #0]
 800e48c:	b212      	sxth	r2, r2
 800e48e:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 800e492:	b209      	sxth	r1, r1
 800e494:	4640      	mov	r0, r8
 800e496:	f7fb fa09 	bl	80098ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 800e49a:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800e49c:	b329      	cbz	r1, 800e4ea <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800e49e:	a805      	add	r0, sp, #20
 800e4a0:	f7ff fede 	bl	800e260 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e4a4:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800e4a8:	792b      	ldrb	r3, [r5, #4]
 800e4aa:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800e4ac:	f88d 3020 	strb.w	r3, [sp, #32]
 800e4b0:	1abf      	subs	r7, r7, r2
 800e4b2:	88ea      	ldrh	r2, [r5, #6]
 800e4b4:	4417      	add	r7, r2
 800e4b6:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 800e4b8:	4417      	add	r7, r2
 800e4ba:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800e4be:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 800e4c2:	1ab6      	subs	r6, r6, r2
 800e4c4:	892a      	ldrh	r2, [r5, #8]
 800e4c6:	4416      	add	r6, r2
 800e4c8:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800e4ca:	4416      	add	r6, r2
 800e4cc:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 800e4d0:	4a07      	ldr	r2, [pc, #28]	@ (800e4f0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 800e4d2:	9207      	str	r2, [sp, #28]
 800e4d4:	2600      	movs	r6, #0
 800e4d6:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 800e4da:	6803      	ldr	r3, [r0, #0]
 800e4dc:	a907      	add	r1, sp, #28
 800e4de:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e4e0:	4798      	blx	r3
 800e4e2:	792b      	ldrb	r3, [r5, #4]
 800e4e4:	b10b      	cbz	r3, 800e4ea <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800e4e6:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 800e4ea:	b00a      	add	sp, #40	@ 0x28
 800e4ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e4f0:	080206c4 	.word	0x080206c4

0800e4f4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800e4f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e4f8:	460c      	mov	r4, r1
 800e4fa:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 800e4fc:	b088      	sub	sp, #32
 800e4fe:	4605      	mov	r5, r0
 800e500:	2900      	cmp	r1, #0
 800e502:	d06d      	beq.n	800e5e0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 800e504:	4668      	mov	r0, sp
 800e506:	f7ff feab 	bl	800e260 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e50a:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 800e50c:	88e3      	ldrh	r3, [r4, #6]
 800e50e:	f9bd 8000 	ldrsh.w	r8, [sp]
 800e512:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 800e516:	440b      	add	r3, r1
 800e518:	b21b      	sxth	r3, r3
 800e51a:	4543      	cmp	r3, r8
 800e51c:	db31      	blt.n	800e582 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800e51e:	f8bd c004 	ldrh.w	ip, [sp, #4]
 800e522:	44c4      	add	ip, r8
 800e524:	fa0f fc8c 	sxth.w	ip, ip
 800e528:	4563      	cmp	r3, ip
 800e52a:	da2a      	bge.n	800e582 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800e52c:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 800e52e:	8926      	ldrh	r6, [r4, #8]
 800e530:	4416      	add	r6, r2
 800e532:	b236      	sxth	r6, r6
 800e534:	42be      	cmp	r6, r7
 800e536:	db24      	blt.n	800e582 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800e538:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800e53c:	4438      	add	r0, r7
 800e53e:	b200      	sxth	r0, r0
 800e540:	4286      	cmp	r6, r0
 800e542:	da1e      	bge.n	800e582 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800e544:	8963      	ldrh	r3, [r4, #10]
 800e546:	4419      	add	r1, r3
 800e548:	b209      	sxth	r1, r1
 800e54a:	4541      	cmp	r1, r8
 800e54c:	db08      	blt.n	800e560 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800e54e:	4561      	cmp	r1, ip
 800e550:	da06      	bge.n	800e560 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800e552:	89a3      	ldrh	r3, [r4, #12]
 800e554:	441a      	add	r2, r3
 800e556:	b212      	sxth	r2, r2
 800e558:	42ba      	cmp	r2, r7
 800e55a:	db01      	blt.n	800e560 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800e55c:	4282      	cmp	r2, r0
 800e55e:	db10      	blt.n	800e582 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800e560:	4b21      	ldr	r3, [pc, #132]	@ (800e5e8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 800e562:	9304      	str	r3, [sp, #16]
 800e564:	2302      	movs	r3, #2
 800e566:	f88d 3014 	strb.w	r3, [sp, #20]
 800e56a:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 800e56c:	2300      	movs	r3, #0
 800e56e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e572:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e576:	f8ad 301a 	strh.w	r3, [sp, #26]
 800e57a:	6803      	ldr	r3, [r0, #0]
 800e57c:	a904      	add	r1, sp, #16
 800e57e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e580:	4798      	blx	r3
 800e582:	1d29      	adds	r1, r5, #4
 800e584:	a802      	add	r0, sp, #8
 800e586:	f7ff fe6b 	bl	800e260 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e58a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800e58e:	88e0      	ldrh	r0, [r4, #6]
 800e590:	7921      	ldrb	r1, [r4, #4]
 800e592:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 800e596:	8922      	ldrh	r2, [r4, #8]
 800e598:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 800e59a:	f88d 1014 	strb.w	r1, [sp, #20]
 800e59e:	eba3 0808 	sub.w	r8, r3, r8
 800e5a2:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800e5a6:	1bdf      	subs	r7, r3, r7
 800e5a8:	b2bb      	uxth	r3, r7
 800e5aa:	fa1f f888 	uxth.w	r8, r8
 800e5ae:	8967      	ldrh	r7, [r4, #10]
 800e5b0:	89a4      	ldrh	r4, [r4, #12]
 800e5b2:	4440      	add	r0, r8
 800e5b4:	4460      	add	r0, ip
 800e5b6:	441a      	add	r2, r3
 800e5b8:	44b8      	add	r8, r7
 800e5ba:	4423      	add	r3, r4
 800e5bc:	f8ad 0016 	strh.w	r0, [sp, #22]
 800e5c0:	4433      	add	r3, r6
 800e5c2:	4432      	add	r2, r6
 800e5c4:	44e0      	add	r8, ip
 800e5c6:	4c09      	ldr	r4, [pc, #36]	@ (800e5ec <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 800e5c8:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 800e5ca:	9404      	str	r4, [sp, #16]
 800e5cc:	f8ad 2018 	strh.w	r2, [sp, #24]
 800e5d0:	f8ad 801a 	strh.w	r8, [sp, #26]
 800e5d4:	f8ad 301c 	strh.w	r3, [sp, #28]
 800e5d8:	6803      	ldr	r3, [r0, #0]
 800e5da:	a904      	add	r1, sp, #16
 800e5dc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e5de:	4798      	blx	r3
 800e5e0:	b008      	add	sp, #32
 800e5e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e5e6:	bf00      	nop
 800e5e8:	080206c4 	.word	0x080206c4
 800e5ec:	080206d8 	.word	0x080206d8

0800e5f0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800e5f0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e5f2:	4604      	mov	r4, r0
 800e5f4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800e5f8:	3201      	adds	r2, #1
 800e5fa:	d112      	bne.n	800e622 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800e5fc:	6803      	ldr	r3, [r0, #0]
 800e5fe:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800e602:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800e606:	f8ad 1004 	strh.w	r1, [sp, #4]
 800e60a:	2500      	movs	r5, #0
 800e60c:	9500      	str	r5, [sp, #0]
 800e60e:	466d      	mov	r5, sp
 800e610:	4629      	mov	r1, r5
 800e612:	f8ad 2006 	strh.w	r2, [sp, #6]
 800e616:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e618:	4798      	blx	r3
 800e61a:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e61e:	e884 0003 	stmia.w	r4, {r0, r1}
 800e622:	4620      	mov	r0, r4
 800e624:	b003      	add	sp, #12
 800e626:	bd30      	pop	{r4, r5, pc}

0800e628 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800e628:	b513      	push	{r0, r1, r4, lr}
 800e62a:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800e62e:	3301      	adds	r3, #1
 800e630:	4604      	mov	r4, r0
 800e632:	d109      	bne.n	800e648 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800e634:	4601      	mov	r1, r0
 800e636:	4668      	mov	r0, sp
 800e638:	f7ff fe12 	bl	800e260 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e63c:	f8bd 3000 	ldrh.w	r3, [sp]
 800e640:	8423      	strh	r3, [r4, #32]
 800e642:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e646:	8463      	strh	r3, [r4, #34]	@ 0x22
 800e648:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800e64c:	b002      	add	sp, #8
 800e64e:	bd10      	pop	{r4, pc}

0800e650 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800e650:	b513      	push	{r0, r1, r4, lr}
 800e652:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 800e656:	3301      	adds	r3, #1
 800e658:	4604      	mov	r4, r0
 800e65a:	d109      	bne.n	800e670 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800e65c:	4601      	mov	r1, r0
 800e65e:	4668      	mov	r0, sp
 800e660:	f7ff fdfe 	bl	800e260 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e664:	f8bd 3000 	ldrh.w	r3, [sp]
 800e668:	8423      	strh	r3, [r4, #32]
 800e66a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e66e:	8463      	strh	r3, [r4, #34]	@ 0x22
 800e670:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 800e674:	b002      	add	sp, #8
 800e676:	bd10      	pop	{r4, pc}

0800e678 <_ZN8touchgfx6ScreenC1Ev>:
 800e678:	b570      	push	{r4, r5, r6, lr}
 800e67a:	4605      	mov	r5, r0
 800e67c:	4b16      	ldr	r3, [pc, #88]	@ (800e6d8 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800e67e:	f845 3b04 	str.w	r3, [r5], #4
 800e682:	2300      	movs	r3, #0
 800e684:	8103      	strh	r3, [r0, #8]
 800e686:	8143      	strh	r3, [r0, #10]
 800e688:	8183      	strh	r3, [r0, #12]
 800e68a:	81c3      	strh	r3, [r0, #14]
 800e68c:	8203      	strh	r3, [r0, #16]
 800e68e:	8243      	strh	r3, [r0, #18]
 800e690:	8283      	strh	r3, [r0, #20]
 800e692:	82c3      	strh	r3, [r0, #22]
 800e694:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800e698:	6203      	str	r3, [r0, #32]
 800e69a:	8483      	strh	r3, [r0, #36]	@ 0x24
 800e69c:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800e69e:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 800e6a2:	4a0e      	ldr	r2, [pc, #56]	@ (800e6dc <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800e6a4:	6343      	str	r3, [r0, #52]	@ 0x34
 800e6a6:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 800e6aa:	4b0d      	ldr	r3, [pc, #52]	@ (800e6e0 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800e6ac:	6042      	str	r2, [r0, #4]
 800e6ae:	f9b3 6000 	ldrsh.w	r6, [r3]
 800e6b2:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 800e6b4:	4a0b      	ldr	r2, [pc, #44]	@ (800e6e4 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800e6b6:	4604      	mov	r4, r0
 800e6b8:	2101      	movs	r1, #1
 800e6ba:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 800e6be:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 800e6c2:	f9b2 1000 	ldrsh.w	r1, [r2]
 800e6c6:	4628      	mov	r0, r5
 800e6c8:	4798      	blx	r3
 800e6ca:	6863      	ldr	r3, [r4, #4]
 800e6cc:	4628      	mov	r0, r5
 800e6ce:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800e6d0:	4631      	mov	r1, r6
 800e6d2:	4798      	blx	r3
 800e6d4:	4620      	mov	r0, r4
 800e6d6:	bd70      	pop	{r4, r5, r6, pc}
 800e6d8:	08020700 	.word	0x08020700
 800e6dc:	080202a0 	.word	0x080202a0
 800e6e0:	200119f2 	.word	0x200119f2
 800e6e4:	200119f0 	.word	0x200119f0

0800e6e8 <_ZN8touchgfx6Screen4drawEv>:
 800e6e8:	b507      	push	{r0, r1, r2, lr}
 800e6ea:	4b09      	ldr	r3, [pc, #36]	@ (800e710 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800e6ec:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e6f0:	4b08      	ldr	r3, [pc, #32]	@ (800e714 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800e6f2:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e6f6:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e6fa:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e6fe:	6803      	ldr	r3, [r0, #0]
 800e700:	2100      	movs	r1, #0
 800e702:	9100      	str	r1, [sp, #0]
 800e704:	689b      	ldr	r3, [r3, #8]
 800e706:	4669      	mov	r1, sp
 800e708:	4798      	blx	r3
 800e70a:	b003      	add	sp, #12
 800e70c:	f85d fb04 	ldr.w	pc, [sp], #4
 800e710:	200119f0 	.word	0x200119f0
 800e714:	200119f2 	.word	0x200119f2

0800e718 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800e718:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e71c:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800e720:	2b00      	cmp	r3, #0
 800e722:	b089      	sub	sp, #36	@ 0x24
 800e724:	4680      	mov	r8, r0
 800e726:	460c      	mov	r4, r1
 800e728:	4615      	mov	r5, r2
 800e72a:	dd0e      	ble.n	800e74a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e72c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800e730:	2b00      	cmp	r3, #0
 800e732:	dd0a      	ble.n	800e74a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e734:	4628      	mov	r0, r5
 800e736:	f7ff ff5b 	bl	800e5f0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e73a:	4621      	mov	r1, r4
 800e73c:	f7fe fb2d 	bl	800cd9a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e740:	69eb      	ldr	r3, [r5, #28]
 800e742:	b928      	cbnz	r0, 800e750 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800e744:	461d      	mov	r5, r3
 800e746:	2b00      	cmp	r3, #0
 800e748:	d1f4      	bne.n	800e734 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800e74a:	b009      	add	sp, #36	@ 0x24
 800e74c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e750:	ae04      	add	r6, sp, #16
 800e752:	2b00      	cmp	r3, #0
 800e754:	f000 80b5 	beq.w	800e8c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800e758:	682b      	ldr	r3, [r5, #0]
 800e75a:	4629      	mov	r1, r5
 800e75c:	68db      	ldr	r3, [r3, #12]
 800e75e:	a802      	add	r0, sp, #8
 800e760:	4798      	blx	r3
 800e762:	4628      	mov	r0, r5
 800e764:	f7ff ff60 	bl	800e628 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800e768:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800e76c:	4407      	add	r7, r0
 800e76e:	4628      	mov	r0, r5
 800e770:	f7ff ff6e 	bl	800e650 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800e774:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800e778:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800e77c:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e780:	4418      	add	r0, r3
 800e782:	4621      	mov	r1, r4
 800e784:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800e788:	f8ad 0012 	strh.w	r0, [sp, #18]
 800e78c:	b23f      	sxth	r7, r7
 800e78e:	4630      	mov	r0, r6
 800e790:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e794:	f8ad 7010 	strh.w	r7, [sp, #16]
 800e798:	f7fb f96c 	bl	8009a74 <_ZN8touchgfx4RectaNERKS0_>
 800e79c:	4628      	mov	r0, r5
 800e79e:	f7ff ff27 	bl	800e5f0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e7a2:	4602      	mov	r2, r0
 800e7a4:	e896 0003 	ldmia.w	r6, {r0, r1}
 800e7a8:	ab06      	add	r3, sp, #24
 800e7aa:	e883 0003 	stmia.w	r3, {r0, r1}
 800e7ae:	4611      	mov	r1, r2
 800e7b0:	4618      	mov	r0, r3
 800e7b2:	f7fb f95f 	bl	8009a74 <_ZN8touchgfx4RectaNERKS0_>
 800e7b6:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e7ba:	f9b4 1000 	ldrsh.w	r1, [r4]
 800e7be:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800e7c2:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800e7c6:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800e7ca:	4299      	cmp	r1, r3
 800e7cc:	d10b      	bne.n	800e7e6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800e7ce:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800e7d2:	4552      	cmp	r2, sl
 800e7d4:	d107      	bne.n	800e7e6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800e7d6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800e7da:	455a      	cmp	r2, fp
 800e7dc:	d103      	bne.n	800e7e6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800e7de:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800e7e2:	454a      	cmp	r2, r9
 800e7e4:	d06d      	beq.n	800e8c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800e7e6:	f1bb 0f00 	cmp.w	fp, #0
 800e7ea:	dd65      	ble.n	800e8b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800e7ec:	f1b9 0f00 	cmp.w	r9, #0
 800e7f0:	dd62      	ble.n	800e8b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800e7f2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800e7f6:	fa1f f08a 	uxth.w	r0, sl
 800e7fa:	4552      	cmp	r2, sl
 800e7fc:	9000      	str	r0, [sp, #0]
 800e7fe:	da12      	bge.n	800e826 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800e800:	9301      	str	r3, [sp, #4]
 800e802:	9b00      	ldr	r3, [sp, #0]
 800e804:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800e808:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e80c:	1a9a      	subs	r2, r3, r2
 800e80e:	f8ad 1010 	strh.w	r1, [sp, #16]
 800e812:	f8ad 0014 	strh.w	r0, [sp, #20]
 800e816:	f8ad 2016 	strh.w	r2, [sp, #22]
 800e81a:	69ea      	ldr	r2, [r5, #28]
 800e81c:	4631      	mov	r1, r6
 800e81e:	4640      	mov	r0, r8
 800e820:	f7ff ff7a 	bl	800e718 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e824:	9b01      	ldr	r3, [sp, #4]
 800e826:	f9b4 2000 	ldrsh.w	r2, [r4]
 800e82a:	429a      	cmp	r2, r3
 800e82c:	b29f      	uxth	r7, r3
 800e82e:	da0d      	bge.n	800e84c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800e830:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e834:	1aba      	subs	r2, r7, r2
 800e836:	f8ad a012 	strh.w	sl, [sp, #18]
 800e83a:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e83e:	f8ad 9016 	strh.w	r9, [sp, #22]
 800e842:	69ea      	ldr	r2, [r5, #28]
 800e844:	4631      	mov	r1, r6
 800e846:	4640      	mov	r0, r8
 800e848:	f7ff ff66 	bl	800e718 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e84c:	8822      	ldrh	r2, [r4, #0]
 800e84e:	88a3      	ldrh	r3, [r4, #4]
 800e850:	445f      	add	r7, fp
 800e852:	4413      	add	r3, r2
 800e854:	b29b      	uxth	r3, r3
 800e856:	b2bf      	uxth	r7, r7
 800e858:	b23a      	sxth	r2, r7
 800e85a:	b219      	sxth	r1, r3
 800e85c:	4291      	cmp	r1, r2
 800e85e:	dd0d      	ble.n	800e87c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800e860:	1bdb      	subs	r3, r3, r7
 800e862:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e866:	f8ad a012 	strh.w	sl, [sp, #18]
 800e86a:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e86e:	f8ad 9016 	strh.w	r9, [sp, #22]
 800e872:	69ea      	ldr	r2, [r5, #28]
 800e874:	4631      	mov	r1, r6
 800e876:	4640      	mov	r0, r8
 800e878:	f7ff ff4e 	bl	800e718 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e87c:	88e2      	ldrh	r2, [r4, #6]
 800e87e:	8863      	ldrh	r3, [r4, #2]
 800e880:	4413      	add	r3, r2
 800e882:	9a00      	ldr	r2, [sp, #0]
 800e884:	444a      	add	r2, r9
 800e886:	b29b      	uxth	r3, r3
 800e888:	fa1f f982 	uxth.w	r9, r2
 800e88c:	fa0f f289 	sxth.w	r2, r9
 800e890:	b219      	sxth	r1, r3
 800e892:	428a      	cmp	r2, r1
 800e894:	da15      	bge.n	800e8c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800e896:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800e89a:	f9b4 0000 	ldrsh.w	r0, [r4]
 800e89e:	f8ad 1014 	strh.w	r1, [sp, #20]
 800e8a2:	eba3 0309 	sub.w	r3, r3, r9
 800e8a6:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e8aa:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e8ae:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e8b2:	69ea      	ldr	r2, [r5, #28]
 800e8b4:	4631      	mov	r1, r6
 800e8b6:	e001      	b.n	800e8bc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800e8b8:	69ea      	ldr	r2, [r5, #28]
 800e8ba:	4621      	mov	r1, r4
 800e8bc:	4640      	mov	r0, r8
 800e8be:	f7ff ff2b 	bl	800e718 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e8c2:	4628      	mov	r0, r5
 800e8c4:	f7ff fe94 	bl	800e5f0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e8c8:	6861      	ldr	r1, [r4, #4]
 800e8ca:	4602      	mov	r2, r0
 800e8cc:	6820      	ldr	r0, [r4, #0]
 800e8ce:	4633      	mov	r3, r6
 800e8d0:	c303      	stmia	r3!, {r0, r1}
 800e8d2:	4611      	mov	r1, r2
 800e8d4:	4630      	mov	r0, r6
 800e8d6:	f7fb f8cd 	bl	8009a74 <_ZN8touchgfx4RectaNERKS0_>
 800e8da:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800e8de:	2b00      	cmp	r3, #0
 800e8e0:	f77f af33 	ble.w	800e74a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e8e4:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800e8e8:	2b00      	cmp	r3, #0
 800e8ea:	f77f af2e 	ble.w	800e74a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e8ee:	4628      	mov	r0, r5
 800e8f0:	f7ff fe9a 	bl	800e628 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800e8f4:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800e8f8:	1a18      	subs	r0, r3, r0
 800e8fa:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e8fe:	4628      	mov	r0, r5
 800e900:	f7ff fea6 	bl	800e650 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800e904:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e908:	1a18      	subs	r0, r3, r0
 800e90a:	f8ad 0012 	strh.w	r0, [sp, #18]
 800e90e:	682b      	ldr	r3, [r5, #0]
 800e910:	4631      	mov	r1, r6
 800e912:	689b      	ldr	r3, [r3, #8]
 800e914:	4628      	mov	r0, r5
 800e916:	4798      	blx	r3
 800e918:	e717      	b.n	800e74a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800e91a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800e91a:	b570      	push	{r4, r5, r6, lr}
 800e91c:	460c      	mov	r4, r1
 800e91e:	b086      	sub	sp, #24
 800e920:	1d06      	adds	r6, r0, #4
 800e922:	2300      	movs	r3, #0
 800e924:	4631      	mov	r1, r6
 800e926:	4605      	mov	r5, r0
 800e928:	a802      	add	r0, sp, #8
 800e92a:	9301      	str	r3, [sp, #4]
 800e92c:	f7ff fc98 	bl	800e260 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e930:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800e934:	8822      	ldrh	r2, [r4, #0]
 800e936:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800e93a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800e93e:	f8ad 0014 	strh.w	r0, [sp, #20]
 800e942:	1ad2      	subs	r2, r2, r3
 800e944:	8863      	ldrh	r3, [r4, #2]
 800e946:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e94a:	1a5b      	subs	r3, r3, r1
 800e94c:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800e950:	f8ad 1016 	strh.w	r1, [sp, #22]
 800e954:	aa01      	add	r2, sp, #4
 800e956:	a904      	add	r1, sp, #16
 800e958:	4630      	mov	r0, r6
 800e95a:	f8ad 3012 	strh.w	r3, [sp, #18]
 800e95e:	f7fb f961 	bl	8009c24 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800e962:	9a01      	ldr	r2, [sp, #4]
 800e964:	b11a      	cbz	r2, 800e96e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 800e966:	4621      	mov	r1, r4
 800e968:	4628      	mov	r0, r5
 800e96a:	f7ff fed5 	bl	800e718 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e96e:	b006      	add	sp, #24
 800e970:	bd70      	pop	{r4, r5, r6, pc}

0800e972 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800e972:	b530      	push	{r4, r5, lr}
 800e974:	4602      	mov	r2, r0
 800e976:	4604      	mov	r4, r0
 800e978:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800e97c:	b085      	sub	sp, #20
 800e97e:	460d      	mov	r5, r1
 800e980:	6851      	ldr	r1, [r2, #4]
 800e982:	466b      	mov	r3, sp
 800e984:	c303      	stmia	r3!, {r0, r1}
 800e986:	4629      	mov	r1, r5
 800e988:	4668      	mov	r0, sp
 800e98a:	f7fb f873 	bl	8009a74 <_ZN8touchgfx4RectaNERKS0_>
 800e98e:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800e992:	b12b      	cbz	r3, 800e9a0 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 800e994:	4669      	mov	r1, sp
 800e996:	4620      	mov	r0, r4
 800e998:	f7ff ffbf 	bl	800e91a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800e99c:	b005      	add	sp, #20
 800e99e:	bd30      	pop	{r4, r5, pc}
 800e9a0:	3404      	adds	r4, #4
 800e9a2:	4621      	mov	r1, r4
 800e9a4:	a802      	add	r0, sp, #8
 800e9a6:	f7ff fc5b 	bl	800e260 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e9aa:	f8bd 3000 	ldrh.w	r3, [sp]
 800e9ae:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800e9b2:	1a9b      	subs	r3, r3, r2
 800e9b4:	f8ad 3000 	strh.w	r3, [sp]
 800e9b8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800e9bc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e9c0:	4669      	mov	r1, sp
 800e9c2:	1a9b      	subs	r3, r3, r2
 800e9c4:	4620      	mov	r0, r4
 800e9c6:	f8ad 3002 	strh.w	r3, [sp, #2]
 800e9ca:	f7fb f8f2 	bl	8009bb2 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800e9ce:	e7e5      	b.n	800e99c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0800e9d0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800e9d0:	680a      	ldr	r2, [r1, #0]
 800e9d2:	460b      	mov	r3, r1
 800e9d4:	6992      	ldr	r2, [r2, #24]
 800e9d6:	1d01      	adds	r1, r0, #4
 800e9d8:	4618      	mov	r0, r3
 800e9da:	4710      	bx	r2

0800e9dc <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 800e9dc:	4298      	cmp	r0, r3
 800e9de:	d200      	bcs.n	800e9e2 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 800e9e0:	b913      	cbnz	r3, 800e9e8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 800e9e2:	440a      	add	r2, r1
 800e9e4:	b210      	sxth	r0, r2
 800e9e6:	4770      	bx	lr
 800e9e8:	ee07 0a90 	vmov	s15, r0
 800e9ec:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800e9f0:	ee07 3a90 	vmov	s15, r3
 800e9f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e9f8:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800e9fc:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800ea00:	ee37 7a66 	vsub.f32	s14, s14, s13
 800ea04:	ee07 2a90 	vmov	s15, r2
 800ea08:	ee67 5a07 	vmul.f32	s11, s14, s14
 800ea0c:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 800ea10:	eee5 6a87 	vfma.f32	s13, s11, s14
 800ea14:	ee07 1a90 	vmov	s15, r1
 800ea18:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ea1c:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800ea20:	eee6 7a26 	vfma.f32	s15, s12, s13
 800ea24:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800ea28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ea2c:	bfcc      	ite	gt
 800ea2e:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 800ea32:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 800ea36:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ea3a:	ee17 3a90 	vmov	r3, s15
 800ea3e:	b218      	sxth	r0, r3
 800ea40:	4770      	bx	lr

0800ea42 <_ZN8touchgfx12TextProviderC1Ev>:
 800ea42:	b538      	push	{r3, r4, r5, lr}
 800ea44:	2500      	movs	r5, #0
 800ea46:	2302      	movs	r3, #2
 800ea48:	4604      	mov	r4, r0
 800ea4a:	e9c0 5500 	strd	r5, r5, [r0]
 800ea4e:	7403      	strb	r3, [r0, #16]
 800ea50:	6145      	str	r5, [r0, #20]
 800ea52:	7605      	strb	r5, [r0, #24]
 800ea54:	83c5      	strh	r5, [r0, #30]
 800ea56:	8405      	strh	r5, [r0, #32]
 800ea58:	86c5      	strh	r5, [r0, #54]	@ 0x36
 800ea5a:	8705      	strh	r5, [r0, #56]	@ 0x38
 800ea5c:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 800ea5e:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 800ea62:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 800ea66:	220e      	movs	r2, #14
 800ea68:	4629      	mov	r1, r5
 800ea6a:	304c      	adds	r0, #76	@ 0x4c
 800ea6c:	f00f fa11 	bl	801de92 <memset>
 800ea70:	2301      	movs	r3, #1
 800ea72:	4620      	mov	r0, r4
 800ea74:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 800ea78:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800ea7c:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 800ea80:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 800ea84:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 800ea88:	f7f4 ff4e 	bl	8003928 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800ea8c:	4620      	mov	r0, r4
 800ea8e:	bd38      	pop	{r3, r4, r5, pc}

0800ea90 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800ea90:	b530      	push	{r4, r5, lr}
 800ea92:	2500      	movs	r5, #0
 800ea94:	2401      	movs	r4, #1
 800ea96:	6843      	ldr	r3, [r0, #4]
 800ea98:	b913      	cbnz	r3, 800eaa0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800ea9a:	6803      	ldr	r3, [r0, #0]
 800ea9c:	b313      	cbz	r3, 800eae4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800ea9e:	6043      	str	r3, [r0, #4]
 800eaa0:	7e03      	ldrb	r3, [r0, #24]
 800eaa2:	b143      	cbz	r3, 800eab6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800eaa4:	6943      	ldr	r3, [r0, #20]
 800eaa6:	b12b      	cbz	r3, 800eab4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800eaa8:	881a      	ldrh	r2, [r3, #0]
 800eaaa:	b11a      	cbz	r2, 800eab4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800eaac:	1c9a      	adds	r2, r3, #2
 800eaae:	6142      	str	r2, [r0, #20]
 800eab0:	8818      	ldrh	r0, [r3, #0]
 800eab2:	bd30      	pop	{r4, r5, pc}
 800eab4:	7605      	strb	r5, [r0, #24]
 800eab6:	6843      	ldr	r3, [r0, #4]
 800eab8:	8819      	ldrh	r1, [r3, #0]
 800eaba:	b199      	cbz	r1, 800eae4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800eabc:	1c9a      	adds	r2, r3, #2
 800eabe:	2902      	cmp	r1, #2
 800eac0:	6042      	str	r2, [r0, #4]
 800eac2:	d1f5      	bne.n	800eab0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800eac4:	7c03      	ldrb	r3, [r0, #16]
 800eac6:	2b01      	cmp	r3, #1
 800eac8:	d8e5      	bhi.n	800ea96 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800eaca:	1c5a      	adds	r2, r3, #1
 800eacc:	3302      	adds	r3, #2
 800eace:	7402      	strb	r2, [r0, #16]
 800ead0:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800ead4:	6143      	str	r3, [r0, #20]
 800ead6:	2b00      	cmp	r3, #0
 800ead8:	d0dd      	beq.n	800ea96 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800eada:	881b      	ldrh	r3, [r3, #0]
 800eadc:	2b00      	cmp	r3, #0
 800eade:	d0da      	beq.n	800ea96 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800eae0:	7604      	strb	r4, [r0, #24]
 800eae2:	e7d8      	b.n	800ea96 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800eae4:	2000      	movs	r0, #0
 800eae6:	e7e4      	b.n	800eab2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800eae8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 800eae8:	b430      	push	{r4, r5}
 800eaea:	6001      	str	r1, [r0, #0]
 800eaec:	2100      	movs	r1, #0
 800eaee:	6041      	str	r1, [r0, #4]
 800eaf0:	6815      	ldr	r5, [r2, #0]
 800eaf2:	6085      	str	r5, [r0, #8]
 800eaf4:	6852      	ldr	r2, [r2, #4]
 800eaf6:	6443      	str	r3, [r0, #68]	@ 0x44
 800eaf8:	9b02      	ldr	r3, [sp, #8]
 800eafa:	60c2      	str	r2, [r0, #12]
 800eafc:	7401      	strb	r1, [r0, #16]
 800eafe:	6141      	str	r1, [r0, #20]
 800eb00:	7601      	strb	r1, [r0, #24]
 800eb02:	8701      	strh	r1, [r0, #56]	@ 0x38
 800eb04:	8401      	strh	r1, [r0, #32]
 800eb06:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 800eb0a:	6483      	str	r3, [r0, #72]	@ 0x48
 800eb0c:	bc30      	pop	{r4, r5}
 800eb0e:	f7f4 bf0b 	b.w	8003928 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800eb12 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800eb12:	b5f0      	push	{r4, r5, r6, r7, lr}
 800eb14:	4605      	mov	r5, r0
 800eb16:	4608      	mov	r0, r1
 800eb18:	b1e9      	cbz	r1, 800eb56 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800eb1a:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 800eb1e:	460b      	mov	r3, r1
 800eb20:	f101 0708 	add.w	r7, r1, #8
 800eb24:	4622      	mov	r2, r4
 800eb26:	6818      	ldr	r0, [r3, #0]
 800eb28:	6859      	ldr	r1, [r3, #4]
 800eb2a:	4626      	mov	r6, r4
 800eb2c:	c603      	stmia	r6!, {r0, r1}
 800eb2e:	3308      	adds	r3, #8
 800eb30:	42bb      	cmp	r3, r7
 800eb32:	4634      	mov	r4, r6
 800eb34:	d1f7      	bne.n	800eb26 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800eb36:	6818      	ldr	r0, [r3, #0]
 800eb38:	6030      	str	r0, [r6, #0]
 800eb3a:	889b      	ldrh	r3, [r3, #4]
 800eb3c:	80b3      	strh	r3, [r6, #4]
 800eb3e:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 800eb42:	015b      	lsls	r3, r3, #5
 800eb44:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800eb48:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 800eb4c:	430b      	orrs	r3, r1
 800eb4e:	425b      	negs	r3, r3
 800eb50:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 800eb54:	4610      	mov	r0, r2
 800eb56:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800eb58 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800eb58:	b538      	push	{r3, r4, r5, lr}
 800eb5a:	460c      	mov	r4, r1
 800eb5c:	6811      	ldr	r1, [r2, #0]
 800eb5e:	4610      	mov	r0, r2
 800eb60:	68cd      	ldr	r5, [r1, #12]
 800eb62:	4619      	mov	r1, r3
 800eb64:	47a8      	blx	r5
 800eb66:	2800      	cmp	r0, #0
 800eb68:	bf08      	it	eq
 800eb6a:	4620      	moveq	r0, r4
 800eb6c:	bd38      	pop	{r3, r4, r5, pc}
	...

0800eb70 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800eb70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800eb72:	4604      	mov	r4, r0
 800eb74:	4615      	mov	r5, r2
 800eb76:	4608      	mov	r0, r1
 800eb78:	b93a      	cbnz	r2, 800eb8a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800eb7a:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 800eb7e:	f8a4 205c 	strh.w	r2, [r4, #92]	@ 0x5c
 800eb82:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
 800eb86:	4628      	mov	r0, r5
 800eb88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800eb8a:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800eb8e:	8893      	ldrh	r3, [r2, #4]
 800eb90:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800eb94:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 800eb98:	79ee      	ldrb	r6, [r5, #7]
 800eb9a:	f46f 6763 	mvn.w	r7, #3632	@ 0xe30
 800eb9e:	4316      	orrs	r6, r2
 800eba0:	19da      	adds	r2, r3, r7
 800eba2:	b291      	uxth	r1, r2
 800eba4:	291d      	cmp	r1, #29
 800eba6:	b2b7      	uxth	r7, r6
 800eba8:	d87a      	bhi.n	800eca0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 800ebaa:	2201      	movs	r2, #1
 800ebac:	408a      	lsls	r2, r1
 800ebae:	4975      	ldr	r1, [pc, #468]	@ (800ed84 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 800ebb0:	420a      	tst	r2, r1
 800ebb2:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800ebb6:	d12d      	bne.n	800ec14 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 800ebb8:	f412 7f60 	tst.w	r2, #896	@ 0x380
 800ebbc:	d070      	beq.n	800eca0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 800ebbe:	f104 024c 	add.w	r2, r4, #76	@ 0x4c
 800ebc2:	462b      	mov	r3, r5
 800ebc4:	f105 0e08 	add.w	lr, r5, #8
 800ebc8:	4615      	mov	r5, r2
 800ebca:	6818      	ldr	r0, [r3, #0]
 800ebcc:	6859      	ldr	r1, [r3, #4]
 800ebce:	4694      	mov	ip, r2
 800ebd0:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800ebd4:	3308      	adds	r3, #8
 800ebd6:	4573      	cmp	r3, lr
 800ebd8:	4662      	mov	r2, ip
 800ebda:	d1f6      	bne.n	800ebca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 800ebdc:	6818      	ldr	r0, [r3, #0]
 800ebde:	f8cc 0000 	str.w	r0, [ip]
 800ebe2:	889b      	ldrh	r3, [r3, #4]
 800ebe4:	f8ac 3004 	strh.w	r3, [ip, #4]
 800ebe8:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
 800ebec:	f894 0059 	ldrb.w	r0, [r4, #89]	@ 0x59
 800ebf0:	b2b3      	uxth	r3, r6
 800ebf2:	1aca      	subs	r2, r1, r3
 800ebf4:	b292      	uxth	r2, r2
 800ebf6:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
 800ebfa:	10d2      	asrs	r2, r2, #3
 800ebfc:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 800ec00:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 800ec04:	4302      	orrs	r2, r0
 800ec06:	1bcf      	subs	r7, r1, r7
 800ec08:	f884 2059 	strb.w	r2, [r4, #89]	@ 0x59
 800ec0c:	1afb      	subs	r3, r7, r3
 800ec0e:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 800ec12:	e7b8      	b.n	800eb86 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800ec14:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800ec16:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800ec1a:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 800ec1c:	f640 6333 	movw	r3, #3635	@ 0xe33
 800ec20:	4299      	cmp	r1, r3
 800ec22:	d110      	bne.n	800ec46 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 800ec24:	6803      	ldr	r3, [r0, #0]
 800ec26:	68db      	ldr	r3, [r3, #12]
 800ec28:	4798      	blx	r3
 800ec2a:	7b41      	ldrb	r1, [r0, #13]
 800ec2c:	00cb      	lsls	r3, r1, #3
 800ec2e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800ec32:	7a03      	ldrb	r3, [r0, #8]
 800ec34:	0648      	lsls	r0, r1, #25
 800ec36:	ea43 0302 	orr.w	r3, r3, r2
 800ec3a:	bf44      	itt	mi
 800ec3c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800ec40:	b21b      	sxthmi	r3, r3
 800ec42:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800ec46:	f8b4 305a 	ldrh.w	r3, [r4, #90]	@ 0x5a
 800ec4a:	443b      	add	r3, r7
 800ec4c:	4433      	add	r3, r6
 800ec4e:	b29b      	uxth	r3, r3
 800ec50:	f104 064c 	add.w	r6, r4, #76	@ 0x4c
 800ec54:	462a      	mov	r2, r5
 800ec56:	f105 0c08 	add.w	ip, r5, #8
 800ec5a:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800ec5e:	4635      	mov	r5, r6
 800ec60:	6810      	ldr	r0, [r2, #0]
 800ec62:	6851      	ldr	r1, [r2, #4]
 800ec64:	4637      	mov	r7, r6
 800ec66:	c703      	stmia	r7!, {r0, r1}
 800ec68:	3208      	adds	r2, #8
 800ec6a:	4562      	cmp	r2, ip
 800ec6c:	463e      	mov	r6, r7
 800ec6e:	d1f7      	bne.n	800ec60 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 800ec70:	6810      	ldr	r0, [r2, #0]
 800ec72:	6038      	str	r0, [r7, #0]
 800ec74:	8892      	ldrh	r2, [r2, #4]
 800ec76:	80ba      	strh	r2, [r7, #4]
 800ec78:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 800ec7c:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800ec80:	10db      	asrs	r3, r3, #3
 800ec82:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800ec86:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800ec8a:	4313      	orrs	r3, r2
 800ec8c:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 800ec90:	f894 205e 	ldrb.w	r2, [r4, #94]	@ 0x5e
 800ec94:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
 800ec98:	1a9b      	subs	r3, r3, r2
 800ec9a:	f884 3055 	strb.w	r3, [r4, #85]	@ 0x55
 800ec9e:	e772      	b.n	800eb86 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800eca0:	f023 0204 	bic.w	r2, r3, #4
 800eca4:	f640 611b 	movw	r1, #3611	@ 0xe1b
 800eca8:	428a      	cmp	r2, r1
 800ecaa:	d003      	beq.n	800ecb4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 800ecac:	f640 621d 	movw	r2, #3613	@ 0xe1d
 800ecb0:	4293      	cmp	r3, r2
 800ecb2:	d120      	bne.n	800ecf6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 800ecb4:	3b01      	subs	r3, #1
 800ecb6:	4602      	mov	r2, r0
 800ecb8:	b29b      	uxth	r3, r3
 800ecba:	4629      	mov	r1, r5
 800ecbc:	4620      	mov	r0, r4
 800ecbe:	f7ff ff4b 	bl	800eb58 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800ecc2:	7b41      	ldrb	r1, [r0, #13]
 800ecc4:	00cb      	lsls	r3, r1, #3
 800ecc6:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800ecca:	7a03      	ldrb	r3, [r0, #8]
 800eccc:	0649      	lsls	r1, r1, #25
 800ecce:	ea43 0302 	orr.w	r3, r3, r2
 800ecd2:	bf44      	itt	mi
 800ecd4:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800ecd8:	b21b      	sxthmi	r3, r3
 800ecda:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800ecde:	7b6b      	ldrb	r3, [r5, #13]
 800ece0:	7aaa      	ldrb	r2, [r5, #10]
 800ece2:	005b      	lsls	r3, r3, #1
 800ece4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800ece8:	4313      	orrs	r3, r2
 800ecea:	115a      	asrs	r2, r3, #5
 800ecec:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800ecf0:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 800ecf4:	e036      	b.n	800ed64 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 800ecf6:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800ecfa:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 800ecfe:	7a2a      	ldrb	r2, [r5, #8]
 800ed00:	f01c 0f40 	tst.w	ip, #64	@ 0x40
 800ed04:	ea42 0201 	orr.w	r2, r2, r1
 800ed08:	bf1c      	itt	ne
 800ed0a:	f5a2 7200 	subne.w	r2, r2, #512	@ 0x200
 800ed0e:	b212      	sxthne	r2, r2
 800ed10:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 800ed14:	f640 6109 	movw	r1, #3593	@ 0xe09
 800ed18:	f023 0210 	bic.w	r2, r3, #16
 800ed1c:	428a      	cmp	r2, r1
 800ed1e:	d003      	beq.n	800ed28 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 800ed20:	f640 6213 	movw	r2, #3603	@ 0xe13
 800ed24:	4293      	cmp	r3, r2
 800ed26:	d12a      	bne.n	800ed7e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 800ed28:	7b6e      	ldrb	r6, [r5, #13]
 800ed2a:	0076      	lsls	r6, r6, #1
 800ed2c:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 800ed30:	7aae      	ldrb	r6, [r5, #10]
 800ed32:	4316      	orrs	r6, r2
 800ed34:	f640 6213 	movw	r2, #3603	@ 0xe13
 800ed38:	4293      	cmp	r3, r2
 800ed3a:	bf18      	it	ne
 800ed3c:	f103 33ff 	addne.w	r3, r3, #4294967295
 800ed40:	4602      	mov	r2, r0
 800ed42:	bf14      	ite	ne
 800ed44:	b29b      	uxthne	r3, r3
 800ed46:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 800ed4a:	4629      	mov	r1, r5
 800ed4c:	4620      	mov	r0, r4
 800ed4e:	f7ff ff03 	bl	800eb58 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800ed52:	7b43      	ldrb	r3, [r0, #13]
 800ed54:	7a82      	ldrb	r2, [r0, #10]
 800ed56:	005b      	lsls	r3, r3, #1
 800ed58:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800ed5c:	4313      	orrs	r3, r2
 800ed5e:	1af6      	subs	r6, r6, r3
 800ed60:	f8a4 605e 	strh.w	r6, [r4, #94]	@ 0x5e
 800ed64:	7b69      	ldrb	r1, [r5, #13]
 800ed66:	00cb      	lsls	r3, r1, #3
 800ed68:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800ed6c:	7a2b      	ldrb	r3, [r5, #8]
 800ed6e:	4313      	orrs	r3, r2
 800ed70:	064a      	lsls	r2, r1, #25
 800ed72:	bf44      	itt	mi
 800ed74:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800ed78:	b21b      	sxthmi	r3, r3
 800ed7a:	1bdb      	subs	r3, r3, r7
 800ed7c:	e747      	b.n	800ec0e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 800ed7e:	2300      	movs	r3, #0
 800ed80:	e7b6      	b.n	800ecf0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 800ed82:	bf00      	nop
 800ed84:	3fc00079 	.word	0x3fc00079

0800ed88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800ed88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ed8c:	4604      	mov	r4, r0
 800ed8e:	b942      	cbnz	r2, 800eda2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800ed90:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800ed94:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 800ed98:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 800ed9c:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 800eda0:	e047      	b.n	800ee32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 800eda2:	7b51      	ldrb	r1, [r2, #13]
 800eda4:	8893      	ldrh	r3, [r2, #4]
 800eda6:	010d      	lsls	r5, r1, #4
 800eda8:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 800edac:	79d5      	ldrb	r5, [r2, #7]
 800edae:	4305      	orrs	r5, r0
 800edb0:	2d04      	cmp	r5, #4
 800edb2:	bfcc      	ite	gt
 800edb4:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 800edb8:	f04f 0e01 	movle.w	lr, #1
 800edbc:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 800edc0:	f200 80ab 	bhi.w	800ef1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 800edc4:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 800edc8:	4283      	cmp	r3, r0
 800edca:	d216      	bcs.n	800edfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800edcc:	f240 605b 	movw	r0, #1627	@ 0x65b
 800edd0:	4283      	cmp	r3, r0
 800edd2:	d859      	bhi.n	800ee88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 800edd4:	f240 6057 	movw	r0, #1623	@ 0x657
 800edd8:	4283      	cmp	r3, r0
 800edda:	d20e      	bcs.n	800edfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800eddc:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 800ede0:	d24a      	bcs.n	800ee78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 800ede2:	f240 604e 	movw	r0, #1614	@ 0x64e
 800ede6:	4283      	cmp	r3, r0
 800ede8:	d207      	bcs.n	800edfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800edea:	f240 601a 	movw	r0, #1562	@ 0x61a
 800edee:	4283      	cmp	r3, r0
 800edf0:	d02a      	beq.n	800ee48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800edf2:	d821      	bhi.n	800ee38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 800edf4:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 800edf8:	d35b      	bcc.n	800eeb2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800edfa:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 800edfe:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800ee02:	f040 80d0 	bne.w	800efa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 800ee06:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 800ee0a:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800ee0e:	f040 80ca 	bne.w	800efa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 800ee12:	00cb      	lsls	r3, r1, #3
 800ee14:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800ee18:	7a13      	ldrb	r3, [r2, #8]
 800ee1a:	0649      	lsls	r1, r1, #25
 800ee1c:	ea43 0300 	orr.w	r3, r3, r0
 800ee20:	bf44      	itt	mi
 800ee22:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800ee26:	b21b      	sxthmi	r3, r3
 800ee28:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800ee2c:	1b5d      	subs	r5, r3, r5
 800ee2e:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800ee32:	4610      	mov	r0, r2
 800ee34:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ee38:	f240 604b 	movw	r0, #1611	@ 0x64b
 800ee3c:	4283      	cmp	r3, r0
 800ee3e:	d338      	bcc.n	800eeb2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800ee40:	f240 604c 	movw	r0, #1612	@ 0x64c
 800ee44:	4283      	cmp	r3, r0
 800ee46:	d9d8      	bls.n	800edfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ee48:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 800ee4c:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 800ee50:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800ee54:	f040 80f2 	bne.w	800f03c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 800ee58:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800ee5c:	f040 80ee 	bne.w	800f03c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 800ee60:	00cb      	lsls	r3, r1, #3
 800ee62:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800ee66:	7a13      	ldrb	r3, [r2, #8]
 800ee68:	064e      	lsls	r6, r1, #25
 800ee6a:	ea43 0300 	orr.w	r3, r3, r0
 800ee6e:	bf44      	itt	mi
 800ee70:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800ee74:	b21b      	sxthmi	r3, r3
 800ee76:	e7d9      	b.n	800ee2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 800ee78:	f240 6054 	movw	r0, #1620	@ 0x654
 800ee7c:	4283      	cmp	r3, r0
 800ee7e:	d8e3      	bhi.n	800ee48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ee80:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 800ee84:	d9e0      	bls.n	800ee48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ee86:	e7b8      	b.n	800edfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ee88:	f240 6074 	movw	r0, #1652	@ 0x674
 800ee8c:	4283      	cmp	r3, r0
 800ee8e:	d0b4      	beq.n	800edfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ee90:	d82d      	bhi.n	800eeee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 800ee92:	f240 605e 	movw	r0, #1630	@ 0x65e
 800ee96:	4283      	cmp	r3, r0
 800ee98:	d804      	bhi.n	800eea4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 800ee9a:	f240 605d 	movw	r0, #1629	@ 0x65d
 800ee9e:	4283      	cmp	r3, r0
 800eea0:	d3d2      	bcc.n	800ee48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800eea2:	e7aa      	b.n	800edfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800eea4:	f240 605f 	movw	r0, #1631	@ 0x65f
 800eea8:	4283      	cmp	r3, r0
 800eeaa:	d0cd      	beq.n	800ee48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800eeac:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 800eeb0:	d0a3      	beq.n	800edfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800eeb2:	00cb      	lsls	r3, r1, #3
 800eeb4:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800eeb8:	7a13      	ldrb	r3, [r2, #8]
 800eeba:	0649      	lsls	r1, r1, #25
 800eebc:	ea43 0300 	orr.w	r3, r3, r0
 800eec0:	bf44      	itt	mi
 800eec2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800eec6:	b21b      	sxthmi	r3, r3
 800eec8:	1b5d      	subs	r5, r3, r5
 800eeca:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800eece:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800eed2:	7b53      	ldrb	r3, [r2, #13]
 800eed4:	015b      	lsls	r3, r3, #5
 800eed6:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800eeda:	7993      	ldrb	r3, [r2, #6]
 800eedc:	430b      	orrs	r3, r1
 800eede:	005b      	lsls	r3, r3, #1
 800eee0:	2105      	movs	r1, #5
 800eee2:	fb93 f3f1 	sdiv	r3, r3, r1
 800eee6:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800eeea:	440b      	add	r3, r1
 800eeec:	e756      	b.n	800ed9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800eeee:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 800eef2:	4283      	cmp	r3, r0
 800eef4:	d809      	bhi.n	800ef0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 800eef6:	f240 60df 	movw	r0, #1759	@ 0x6df
 800eefa:	4283      	cmp	r3, r0
 800eefc:	f4bf af7d 	bcs.w	800edfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ef00:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 800ef04:	2b05      	cmp	r3, #5
 800ef06:	d8d4      	bhi.n	800eeb2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800ef08:	e777      	b.n	800edfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ef0a:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 800ef0e:	4283      	cmp	r3, r0
 800ef10:	d09a      	beq.n	800ee48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ef12:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 800ef16:	4283      	cmp	r3, r0
 800ef18:	e7ca      	b.n	800eeb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800ef1a:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 800ef1e:	d22b      	bcs.n	800ef78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 800ef20:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 800ef24:	4283      	cmp	r3, r0
 800ef26:	d28f      	bcs.n	800ee48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ef28:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 800ef2c:	4283      	cmp	r3, r0
 800ef2e:	d816      	bhi.n	800ef5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 800ef30:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 800ef34:	4283      	cmp	r3, r0
 800ef36:	f4bf af60 	bcs.w	800edfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ef3a:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 800ef3e:	4283      	cmp	r3, r0
 800ef40:	d80a      	bhi.n	800ef58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 800ef42:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 800ef46:	4283      	cmp	r3, r0
 800ef48:	f4bf af57 	bcs.w	800edfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ef4c:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 800ef50:	4283      	cmp	r3, r0
 800ef52:	f43f af79 	beq.w	800ee48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ef56:	e7ac      	b.n	800eeb2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800ef58:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 800ef5c:	e7f8      	b.n	800ef50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 800ef5e:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 800ef62:	4283      	cmp	r3, r0
 800ef64:	d802      	bhi.n	800ef6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 800ef66:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 800ef6a:	e798      	b.n	800ee9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 800ef6c:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 800ef70:	4283      	cmp	r3, r0
 800ef72:	f47f af42 	bne.w	800edfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ef76:	e767      	b.n	800ee48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ef78:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 800ef7c:	4283      	cmp	r3, r0
 800ef7e:	f43f af63 	beq.w	800ee48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ef82:	d802      	bhi.n	800ef8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 800ef84:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 800ef88:	e7f2      	b.n	800ef70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 800ef8a:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 800ef8e:	4283      	cmp	r3, r0
 800ef90:	d805      	bhi.n	800ef9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 800ef92:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 800ef96:	4283      	cmp	r3, r0
 800ef98:	f4ff af2f 	bcc.w	800edfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ef9c:	e754      	b.n	800ee48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ef9e:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 800efa2:	4283      	cmp	r3, r0
 800efa4:	e7af      	b.n	800ef06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 800efa6:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 800efaa:	4617      	mov	r7, r2
 800efac:	f102 0808 	add.w	r8, r2, #8
 800efb0:	4666      	mov	r6, ip
 800efb2:	6838      	ldr	r0, [r7, #0]
 800efb4:	6879      	ldr	r1, [r7, #4]
 800efb6:	46e6      	mov	lr, ip
 800efb8:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800efbc:	3708      	adds	r7, #8
 800efbe:	4547      	cmp	r7, r8
 800efc0:	46f4      	mov	ip, lr
 800efc2:	d1f6      	bne.n	800efb2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 800efc4:	6838      	ldr	r0, [r7, #0]
 800efc6:	f8ce 0000 	str.w	r0, [lr]
 800efca:	88b9      	ldrh	r1, [r7, #4]
 800efcc:	f8ae 1004 	strh.w	r1, [lr, #4]
 800efd0:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 800efd4:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800efd8:	d009      	beq.n	800efee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 800efda:	7b51      	ldrb	r1, [r2, #13]
 800efdc:	7992      	ldrb	r2, [r2, #6]
 800efde:	0149      	lsls	r1, r1, #5
 800efe0:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 800efe4:	4311      	orrs	r1, r2
 800efe6:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800efea:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 800efee:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800eff2:	b2ad      	uxth	r5, r5
 800eff4:	d00d      	beq.n	800f012 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 800eff6:	442b      	add	r3, r5
 800eff8:	b29b      	uxth	r3, r3
 800effa:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 800effe:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800f002:	10db      	asrs	r3, r3, #3
 800f004:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800f008:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800f00c:	4313      	orrs	r3, r2
 800f00e:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 800f012:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 800f016:	00cb      	lsls	r3, r1, #3
 800f018:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f01c:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 800f020:	064f      	lsls	r7, r1, #25
 800f022:	ea43 0302 	orr.w	r3, r3, r2
 800f026:	bf44      	itt	mi
 800f028:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f02c:	b21b      	sxthmi	r3, r3
 800f02e:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f032:	1b5b      	subs	r3, r3, r5
 800f034:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 800f038:	4632      	mov	r2, r6
 800f03a:	e6fa      	b.n	800ee32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 800f03c:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 800f040:	4617      	mov	r7, r2
 800f042:	f102 0908 	add.w	r9, r2, #8
 800f046:	4666      	mov	r6, ip
 800f048:	6838      	ldr	r0, [r7, #0]
 800f04a:	6879      	ldr	r1, [r7, #4]
 800f04c:	46e0      	mov	r8, ip
 800f04e:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800f052:	3708      	adds	r7, #8
 800f054:	454f      	cmp	r7, r9
 800f056:	46c4      	mov	ip, r8
 800f058:	d1f6      	bne.n	800f048 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 800f05a:	6838      	ldr	r0, [r7, #0]
 800f05c:	f8c8 0000 	str.w	r0, [r8]
 800f060:	88b9      	ldrh	r1, [r7, #4]
 800f062:	f8a8 1004 	strh.w	r1, [r8, #4]
 800f066:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 800f06a:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800f06e:	d009      	beq.n	800f084 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 800f070:	7b51      	ldrb	r1, [r2, #13]
 800f072:	7992      	ldrb	r2, [r2, #6]
 800f074:	0149      	lsls	r1, r1, #5
 800f076:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 800f07a:	4311      	orrs	r1, r2
 800f07c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800f080:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 800f084:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800f088:	d00e      	beq.n	800f0a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 800f08a:	eba3 030e 	sub.w	r3, r3, lr
 800f08e:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 800f092:	b29b      	uxth	r3, r3
 800f094:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800f098:	10db      	asrs	r3, r3, #3
 800f09a:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800f09e:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800f0a2:	4313      	orrs	r3, r2
 800f0a4:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 800f0a8:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 800f0ac:	00cb      	lsls	r3, r1, #3
 800f0ae:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f0b2:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 800f0b6:	0648      	lsls	r0, r1, #25
 800f0b8:	ea43 0302 	orr.w	r3, r3, r2
 800f0bc:	bf44      	itt	mi
 800f0be:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f0c2:	b21b      	sxthmi	r3, r3
 800f0c4:	1b5d      	subs	r5, r3, r5
 800f0c6:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800f0ca:	e7b5      	b.n	800f038 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0800f0cc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800f0cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f0d0:	461e      	mov	r6, r3
 800f0d2:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800f0d4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800f0d8:	4604      	mov	r4, r0
 800f0da:	4617      	mov	r7, r2
 800f0dc:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 800f0e0:	f7f4 fbe0 	bl	80038a4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800f0e4:	4605      	mov	r5, r0
 800f0e6:	b918      	cbnz	r0, 800f0f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 800f0e8:	6030      	str	r0, [r6, #0]
 800f0ea:	4628      	mov	r0, r5
 800f0ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f0f0:	683b      	ldr	r3, [r7, #0]
 800f0f2:	4601      	mov	r1, r0
 800f0f4:	68db      	ldr	r3, [r3, #12]
 800f0f6:	4638      	mov	r0, r7
 800f0f8:	4798      	blx	r3
 800f0fa:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 800f0fe:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800f102:	4602      	mov	r2, r0
 800f104:	6030      	str	r0, [r6, #0]
 800f106:	d213      	bcs.n	800f130 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 800f108:	4643      	mov	r3, r8
 800f10a:	4639      	mov	r1, r7
 800f10c:	4620      	mov	r0, r4
 800f10e:	f7ff fe3b 	bl	800ed88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800f112:	6030      	str	r0, [r6, #0]
 800f114:	6833      	ldr	r3, [r6, #0]
 800f116:	b143      	cbz	r3, 800f12a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 800f118:	7b5a      	ldrb	r2, [r3, #13]
 800f11a:	7a9b      	ldrb	r3, [r3, #10]
 800f11c:	0052      	lsls	r2, r2, #1
 800f11e:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 800f122:	4313      	orrs	r3, r2
 800f124:	bf0c      	ite	eq
 800f126:	2301      	moveq	r3, #1
 800f128:	2300      	movne	r3, #0
 800f12a:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 800f12e:	e7dc      	b.n	800f0ea <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 800f130:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 800f134:	b29b      	uxth	r3, r3
 800f136:	2b7f      	cmp	r3, #127	@ 0x7f
 800f138:	d804      	bhi.n	800f144 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 800f13a:	4639      	mov	r1, r7
 800f13c:	4620      	mov	r0, r4
 800f13e:	f7ff fd17 	bl	800eb70 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800f142:	e7e6      	b.n	800f112 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 800f144:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 800f148:	2b00      	cmp	r3, #0
 800f14a:	d0e3      	beq.n	800f114 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 800f14c:	f640 1302 	movw	r3, #2306	@ 0x902
 800f150:	429d      	cmp	r5, r3
 800f152:	d1df      	bne.n	800f114 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 800f154:	4601      	mov	r1, r0
 800f156:	4620      	mov	r0, r4
 800f158:	f7ff fcdb 	bl	800eb12 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800f15c:	e7d9      	b.n	800f112 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0800f15e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800f15e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f162:	461e      	mov	r6, r3
 800f164:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800f166:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800f16a:	4604      	mov	r4, r0
 800f16c:	4617      	mov	r7, r2
 800f16e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 800f172:	f7f4 fb97 	bl	80038a4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800f176:	4605      	mov	r5, r0
 800f178:	b918      	cbnz	r0, 800f182 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 800f17a:	6030      	str	r0, [r6, #0]
 800f17c:	4628      	mov	r0, r5
 800f17e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800f182:	683b      	ldr	r3, [r7, #0]
 800f184:	4601      	mov	r1, r0
 800f186:	f8d3 9008 	ldr.w	r9, [r3, #8]
 800f18a:	4638      	mov	r0, r7
 800f18c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800f190:	47c8      	blx	r9
 800f192:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 800f196:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800f19a:	4602      	mov	r2, r0
 800f19c:	6030      	str	r0, [r6, #0]
 800f19e:	d213      	bcs.n	800f1c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 800f1a0:	4643      	mov	r3, r8
 800f1a2:	4639      	mov	r1, r7
 800f1a4:	4620      	mov	r0, r4
 800f1a6:	f7ff fdef 	bl	800ed88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800f1aa:	6030      	str	r0, [r6, #0]
 800f1ac:	6833      	ldr	r3, [r6, #0]
 800f1ae:	b143      	cbz	r3, 800f1c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 800f1b0:	7b5a      	ldrb	r2, [r3, #13]
 800f1b2:	7a9b      	ldrb	r3, [r3, #10]
 800f1b4:	0052      	lsls	r2, r2, #1
 800f1b6:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 800f1ba:	4313      	orrs	r3, r2
 800f1bc:	bf0c      	ite	eq
 800f1be:	2301      	moveq	r3, #1
 800f1c0:	2300      	movne	r3, #0
 800f1c2:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 800f1c6:	e7d9      	b.n	800f17c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 800f1c8:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 800f1cc:	b29b      	uxth	r3, r3
 800f1ce:	2b7f      	cmp	r3, #127	@ 0x7f
 800f1d0:	d804      	bhi.n	800f1dc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 800f1d2:	4639      	mov	r1, r7
 800f1d4:	4620      	mov	r0, r4
 800f1d6:	f7ff fccb 	bl	800eb70 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800f1da:	e7e6      	b.n	800f1aa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 800f1dc:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 800f1e0:	2b00      	cmp	r3, #0
 800f1e2:	d0e3      	beq.n	800f1ac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 800f1e4:	f640 1302 	movw	r3, #2306	@ 0x902
 800f1e8:	429d      	cmp	r5, r3
 800f1ea:	d1df      	bne.n	800f1ac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 800f1ec:	4601      	mov	r1, r0
 800f1ee:	4620      	mov	r0, r4
 800f1f0:	f7ff fc8f 	bl	800eb12 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800f1f4:	e7d9      	b.n	800f1aa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0800f1f6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800f1f6:	b510      	push	{r4, lr}
 800f1f8:	4604      	mov	r4, r0
 800f1fa:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 800f1fe:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800f200:	b1f1      	cbz	r1, 800f240 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 800f202:	2b0a      	cmp	r3, #10
 800f204:	d02f      	beq.n	800f266 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 800f206:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 800f208:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800f20c:	3901      	subs	r1, #1
 800f20e:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 800f210:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 800f214:	1c51      	adds	r1, r2, #1
 800f216:	b289      	uxth	r1, r1
 800f218:	2901      	cmp	r1, #1
 800f21a:	bf84      	itt	hi
 800f21c:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800f220:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 800f222:	f103 0201 	add.w	r2, r3, #1
 800f226:	8722      	strh	r2, [r4, #56]	@ 0x38
 800f228:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800f22a:	bf98      	it	ls
 800f22c:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 800f22e:	4413      	add	r3, r2
 800f230:	b29b      	uxth	r3, r3
 800f232:	2b09      	cmp	r3, #9
 800f234:	bf88      	it	hi
 800f236:	3b0a      	subhi	r3, #10
 800f238:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f23c:	8458      	strh	r0, [r3, #34]	@ 0x22
 800f23e:	e7dc      	b.n	800f1fa <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800f240:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800f242:	2b0a      	cmp	r3, #10
 800f244:	d00f      	beq.n	800f266 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 800f246:	4620      	mov	r0, r4
 800f248:	f7ff fc22 	bl	800ea90 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800f24c:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800f24e:	1c5a      	adds	r2, r3, #1
 800f250:	8722      	strh	r2, [r4, #56]	@ 0x38
 800f252:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800f254:	4413      	add	r3, r2
 800f256:	b29b      	uxth	r3, r3
 800f258:	2b09      	cmp	r3, #9
 800f25a:	bf88      	it	hi
 800f25c:	3b0a      	subhi	r3, #10
 800f25e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f262:	8458      	strh	r0, [r3, #34]	@ 0x22
 800f264:	e7ec      	b.n	800f240 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 800f266:	bd10      	pop	{r4, pc}

0800f268 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800f268:	b538      	push	{r3, r4, r5, lr}
 800f26a:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800f26c:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 800f270:	4604      	mov	r4, r0
 800f272:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 800f274:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 800f276:	3a01      	subs	r2, #1
 800f278:	8702      	strh	r2, [r0, #56]	@ 0x38
 800f27a:	1c5a      	adds	r2, r3, #1
 800f27c:	b292      	uxth	r2, r2
 800f27e:	2a09      	cmp	r2, #9
 800f280:	bf86      	itte	hi
 800f282:	3b09      	subhi	r3, #9
 800f284:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 800f286:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 800f288:	f7ff ffb5 	bl	800f1f6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800f28c:	8c23      	ldrh	r3, [r4, #32]
 800f28e:	2b01      	cmp	r3, #1
 800f290:	bf9c      	itt	ls
 800f292:	3301      	addls	r3, #1
 800f294:	8423      	strhls	r3, [r4, #32]
 800f296:	8be3      	ldrh	r3, [r4, #30]
 800f298:	b90b      	cbnz	r3, 800f29e <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 800f29a:	2302      	movs	r3, #2
 800f29c:	83e3      	strh	r3, [r4, #30]
 800f29e:	8be3      	ldrh	r3, [r4, #30]
 800f2a0:	3b01      	subs	r3, #1
 800f2a2:	b29b      	uxth	r3, r3
 800f2a4:	83e3      	strh	r3, [r4, #30]
 800f2a6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f2aa:	4628      	mov	r0, r5
 800f2ac:	8365      	strh	r5, [r4, #26]
 800f2ae:	bd38      	pop	{r3, r4, r5, pc}

0800f2b0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800f2b0:	428a      	cmp	r2, r1
 800f2b2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f2b6:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 800f2b8:	d931      	bls.n	800f31e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 800f2ba:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 800f2bc:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 800f2c0:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 800f2c4:	19ee      	adds	r6, r5, r7
 800f2c6:	1a54      	subs	r4, r2, r1
 800f2c8:	3e01      	subs	r6, #1
 800f2ca:	fa1f fe84 	uxth.w	lr, r4
 800f2ce:	b2b4      	uxth	r4, r6
 800f2d0:	eba4 090e 	sub.w	r9, r4, lr
 800f2d4:	fa1f f989 	uxth.w	r9, r9
 800f2d8:	2c09      	cmp	r4, #9
 800f2da:	4626      	mov	r6, r4
 800f2dc:	bf88      	it	hi
 800f2de:	f1a4 060a 	subhi.w	r6, r4, #10
 800f2e2:	f1bc 0f00 	cmp.w	ip, #0
 800f2e6:	bf08      	it	eq
 800f2e8:	f04f 0c02 	moveq.w	ip, #2
 800f2ec:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 800f2f0:	f10c 3cff 	add.w	ip, ip, #4294967295
 800f2f4:	fa1f fc8c 	uxth.w	ip, ip
 800f2f8:	3c01      	subs	r4, #1
 800f2fa:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 800f2fe:	b2a4      	uxth	r4, r4
 800f300:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 800f304:	454c      	cmp	r4, r9
 800f306:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 800f30a:	d1e5      	bne.n	800f2d8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 800f30c:	eba5 050e 	sub.w	r5, r5, lr
 800f310:	eb0e 0408 	add.w	r4, lr, r8
 800f314:	8705      	strh	r5, [r0, #56]	@ 0x38
 800f316:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 800f31a:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 800f31e:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 800f320:	1a64      	subs	r4, r4, r1
 800f322:	4439      	add	r1, r7
 800f324:	b289      	uxth	r1, r1
 800f326:	2909      	cmp	r1, #9
 800f328:	bf88      	it	hi
 800f32a:	390a      	subhi	r1, #10
 800f32c:	8704      	strh	r4, [r0, #56]	@ 0x38
 800f32e:	86c1      	strh	r1, [r0, #54]	@ 0x36
 800f330:	250a      	movs	r5, #10
 800f332:	b18a      	cbz	r2, 800f358 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 800f334:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 800f336:	3a01      	subs	r2, #1
 800f338:	b292      	uxth	r2, r2
 800f33a:	3101      	adds	r1, #1
 800f33c:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800f340:	8701      	strh	r1, [r0, #56]	@ 0x38
 800f342:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 800f344:	b901      	cbnz	r1, 800f348 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 800f346:	86c5      	strh	r5, [r0, #54]	@ 0x36
 800f348:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 800f34a:	3901      	subs	r1, #1
 800f34c:	b289      	uxth	r1, r1
 800f34e:	86c1      	strh	r1, [r0, #54]	@ 0x36
 800f350:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800f354:	844c      	strh	r4, [r1, #34]	@ 0x22
 800f356:	e7ec      	b.n	800f332 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 800f358:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f35c:	f7ff bf4b 	b.w	800f1f6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800f360 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800f360:	b570      	push	{r4, r5, r6, lr}
 800f362:	2500      	movs	r5, #0
 800f364:	4295      	cmp	r5, r2
 800f366:	d011      	beq.n	800f38c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 800f368:	8bc4      	ldrh	r4, [r0, #30]
 800f36a:	f831 6b02 	ldrh.w	r6, [r1], #2
 800f36e:	4414      	add	r4, r2
 800f370:	3c01      	subs	r4, #1
 800f372:	1b64      	subs	r4, r4, r5
 800f374:	b2a4      	uxth	r4, r4
 800f376:	2c01      	cmp	r4, #1
 800f378:	bf88      	it	hi
 800f37a:	3c02      	subhi	r4, #2
 800f37c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800f380:	8b64      	ldrh	r4, [r4, #26]
 800f382:	42b4      	cmp	r4, r6
 800f384:	d117      	bne.n	800f3b6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 800f386:	3501      	adds	r5, #1
 800f388:	b2ad      	uxth	r5, r5
 800f38a:	e7eb      	b.n	800f364 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 800f38c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800f390:	2400      	movs	r4, #0
 800f392:	4413      	add	r3, r2
 800f394:	b2a2      	uxth	r2, r4
 800f396:	429a      	cmp	r2, r3
 800f398:	da0f      	bge.n	800f3ba <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 800f39a:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 800f39c:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800f3a0:	4432      	add	r2, r6
 800f3a2:	b292      	uxth	r2, r2
 800f3a4:	2a09      	cmp	r2, #9
 800f3a6:	bf88      	it	hi
 800f3a8:	3a0a      	subhi	r2, #10
 800f3aa:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800f3ae:	3401      	adds	r4, #1
 800f3b0:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 800f3b2:	42aa      	cmp	r2, r5
 800f3b4:	d0ee      	beq.n	800f394 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 800f3b6:	2000      	movs	r0, #0
 800f3b8:	bd70      	pop	{r4, r5, r6, pc}
 800f3ba:	2001      	movs	r0, #1
 800f3bc:	e7fc      	b.n	800f3b8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0800f3be <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800f3be:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f3c2:	4605      	mov	r5, r0
 800f3c4:	4616      	mov	r6, r2
 800f3c6:	1c8c      	adds	r4, r1, #2
 800f3c8:	8809      	ldrh	r1, [r1, #0]
 800f3ca:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800f3ce:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800f3d2:	42b3      	cmp	r3, r6
 800f3d4:	d124      	bne.n	800f420 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800f3d6:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800f3da:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800f3de:	f001 070f 	and.w	r7, r1, #15
 800f3e2:	f8cd 8000 	str.w	r8, [sp]
 800f3e6:	464b      	mov	r3, r9
 800f3e8:	4652      	mov	r2, sl
 800f3ea:	4621      	mov	r1, r4
 800f3ec:	4628      	mov	r0, r5
 800f3ee:	f7ff ffb7 	bl	800f360 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800f3f2:	4683      	mov	fp, r0
 800f3f4:	b168      	cbz	r0, 800f412 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800f3f6:	eb0a 0109 	add.w	r1, sl, r9
 800f3fa:	4441      	add	r1, r8
 800f3fc:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800f400:	463a      	mov	r2, r7
 800f402:	4649      	mov	r1, r9
 800f404:	4628      	mov	r0, r5
 800f406:	f7ff ff53 	bl	800f2b0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800f40a:	4658      	mov	r0, fp
 800f40c:	b003      	add	sp, #12
 800f40e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f412:	eb07 010a 	add.w	r1, r7, sl
 800f416:	4449      	add	r1, r9
 800f418:	4441      	add	r1, r8
 800f41a:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800f41e:	e7d2      	b.n	800f3c6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800f420:	f04f 0b00 	mov.w	fp, #0
 800f424:	e7f1      	b.n	800f40a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800f426 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800f426:	b570      	push	{r4, r5, r6, lr}
 800f428:	8810      	ldrh	r0, [r2, #0]
 800f42a:	4298      	cmp	r0, r3
 800f42c:	d817      	bhi.n	800f45e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f42e:	1e48      	subs	r0, r1, #1
 800f430:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800f434:	4298      	cmp	r0, r3
 800f436:	d312      	bcc.n	800f45e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f438:	2400      	movs	r4, #0
 800f43a:	428c      	cmp	r4, r1
 800f43c:	d20f      	bcs.n	800f45e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f43e:	1860      	adds	r0, r4, r1
 800f440:	1040      	asrs	r0, r0, #1
 800f442:	0085      	lsls	r5, r0, #2
 800f444:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800f448:	42b3      	cmp	r3, r6
 800f44a:	d902      	bls.n	800f452 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800f44c:	3001      	adds	r0, #1
 800f44e:	b284      	uxth	r4, r0
 800f450:	e7f3      	b.n	800f43a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800f452:	d201      	bcs.n	800f458 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800f454:	b281      	uxth	r1, r0
 800f456:	e7f0      	b.n	800f43a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800f458:	442a      	add	r2, r5
 800f45a:	8850      	ldrh	r0, [r2, #2]
 800f45c:	bd70      	pop	{r4, r5, r6, pc}
 800f45e:	2000      	movs	r0, #0
 800f460:	e7fc      	b.n	800f45c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800f462 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800f462:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f466:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 800f468:	886f      	ldrh	r7, [r5, #2]
 800f46a:	4604      	mov	r4, r0
 800f46c:	087f      	lsrs	r7, r7, #1
 800f46e:	260b      	movs	r6, #11
 800f470:	3e01      	subs	r6, #1
 800f472:	d013      	beq.n	800f49c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 800f474:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800f476:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f47a:	462a      	mov	r2, r5
 800f47c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 800f480:	4639      	mov	r1, r7
 800f482:	4643      	mov	r3, r8
 800f484:	4620      	mov	r0, r4
 800f486:	f7ff ffce 	bl	800f426 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800f48a:	b138      	cbz	r0, 800f49c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 800f48c:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800f490:	4642      	mov	r2, r8
 800f492:	4620      	mov	r0, r4
 800f494:	f7ff ff93 	bl	800f3be <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800f498:	2800      	cmp	r0, #0
 800f49a:	d1e9      	bne.n	800f470 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800f49c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f4a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 800f4a0:	b570      	push	{r4, r5, r6, lr}
 800f4a2:	694a      	ldr	r2, [r1, #20]
 800f4a4:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800f4a6:	684b      	ldr	r3, [r1, #4]
 800f4a8:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 800f4aa:	1b54      	subs	r4, r2, r5
 800f4ac:	f000 8106 	beq.w	800f6bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 800f4b0:	1b9b      	subs	r3, r3, r6
 800f4b2:	d003      	beq.n	800f4bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800f4b4:	4363      	muls	r3, r4
 800f4b6:	2210      	movs	r2, #16
 800f4b8:	fb93 f3f2 	sdiv	r3, r3, r2
 800f4bc:	680c      	ldr	r4, [r1, #0]
 800f4be:	698a      	ldr	r2, [r1, #24]
 800f4c0:	1b65      	subs	r5, r4, r5
 800f4c2:	f000 80fd 	beq.w	800f6c0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 800f4c6:	1b92      	subs	r2, r2, r6
 800f4c8:	d003      	beq.n	800f4d2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800f4ca:	436a      	muls	r2, r5
 800f4cc:	2410      	movs	r4, #16
 800f4ce:	fb92 f2f4 	sdiv	r2, r2, r4
 800f4d2:	1a9b      	subs	r3, r3, r2
 800f4d4:	ee07 3a90 	vmov	s15, r3
 800f4d8:	ed9f 4a88 	vldr	s8, [pc, #544]	@ 800f6fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 800f4dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f4e0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800f4e4:	ee67 7a84 	vmul.f32	s15, s15, s8
 800f4e8:	460a      	mov	r2, r1
 800f4ea:	ee87 3a27 	vdiv.f32	s6, s14, s15
 800f4ee:	4603      	mov	r3, r0
 800f4f0:	f100 040c 	add.w	r4, r0, #12
 800f4f4:	eeb1 6a43 	vneg.f32	s12, s6
 800f4f8:	edd2 7a02 	vldr	s15, [r2, #8]
 800f4fc:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800f500:	3214      	adds	r2, #20
 800f502:	ece3 6a01 	vstmia	r3!, {s13}
 800f506:	ed52 7a02 	vldr	s15, [r2, #-8]
 800f50a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800f50e:	429c      	cmp	r4, r3
 800f510:	edc3 7a02 	vstr	s15, [r3, #8]
 800f514:	ed52 7a01 	vldr	s15, [r2, #-4]
 800f518:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800f51c:	edc3 7a05 	vstr	s15, [r3, #20]
 800f520:	d1ea      	bne.n	800f4f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 800f522:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800f524:	698b      	ldr	r3, [r1, #24]
 800f526:	edd0 4a02 	vldr	s9, [r0, #8]
 800f52a:	edd0 3a00 	vldr	s7, [r0]
 800f52e:	edd0 6a01 	vldr	s13, [r0, #4]
 800f532:	ed90 5a05 	vldr	s10, [r0, #20]
 800f536:	ed90 2a03 	vldr	s4, [r0, #12]
 800f53a:	edd0 5a04 	vldr	s11, [r0, #16]
 800f53e:	ed90 1a07 	vldr	s2, [r0, #28]
 800f542:	edd0 2a06 	vldr	s5, [r0, #24]
 800f546:	1a9b      	subs	r3, r3, r2
 800f548:	ee07 3a90 	vmov	s15, r3
 800f54c:	684b      	ldr	r3, [r1, #4]
 800f54e:	1a9b      	subs	r3, r3, r2
 800f550:	ee07 3a10 	vmov	s14, r3
 800f554:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f558:	ee76 6ae4 	vsub.f32	s13, s13, s9
 800f55c:	ee67 7a84 	vmul.f32	s15, s15, s8
 800f560:	ee73 4ae4 	vsub.f32	s9, s7, s9
 800f564:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f568:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 800f56c:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f570:	ee75 5ac5 	vsub.f32	s11, s11, s10
 800f574:	eee6 7a87 	vfma.f32	s15, s13, s14
 800f578:	ee32 5a45 	vsub.f32	s10, s4, s10
 800f57c:	ee67 7a83 	vmul.f32	s15, s15, s6
 800f580:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 800f584:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 800f586:	694a      	ldr	r2, [r1, #20]
 800f588:	1b13      	subs	r3, r2, r4
 800f58a:	ee07 3a10 	vmov	s14, r3
 800f58e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f592:	680b      	ldr	r3, [r1, #0]
 800f594:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f598:	1b1b      	subs	r3, r3, r4
 800f59a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 800f59e:	ee07 3a10 	vmov	s14, r3
 800f5a2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f5a6:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f5aa:	eee6 4a87 	vfma.f32	s9, s13, s14
 800f5ae:	ee64 4a86 	vmul.f32	s9, s9, s12
 800f5b2:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 800f5b6:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800f5b8:	698b      	ldr	r3, [r1, #24]
 800f5ba:	1a9b      	subs	r3, r3, r2
 800f5bc:	ee06 3a90 	vmov	s13, r3
 800f5c0:	684b      	ldr	r3, [r1, #4]
 800f5c2:	1a9b      	subs	r3, r3, r2
 800f5c4:	ee07 3a10 	vmov	s14, r3
 800f5c8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800f5cc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f5d0:	ee66 6a84 	vmul.f32	s13, s13, s8
 800f5d4:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f5d8:	ee65 6a66 	vnmul.f32	s13, s10, s13
 800f5dc:	eee5 6a87 	vfma.f32	s13, s11, s14
 800f5e0:	ee66 6a83 	vmul.f32	s13, s13, s6
 800f5e4:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 800f5e8:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 800f5ea:	694a      	ldr	r2, [r1, #20]
 800f5ec:	1b13      	subs	r3, r2, r4
 800f5ee:	ee07 3a10 	vmov	s14, r3
 800f5f2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f5f6:	680b      	ldr	r3, [r1, #0]
 800f5f8:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f5fc:	1b1b      	subs	r3, r3, r4
 800f5fe:	ee25 5a47 	vnmul.f32	s10, s10, s14
 800f602:	ee07 3a10 	vmov	s14, r3
 800f606:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f60a:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f60e:	eea5 5a87 	vfma.f32	s10, s11, s14
 800f612:	edd0 5a08 	vldr	s11, [r0, #32]
 800f616:	ee25 5a06 	vmul.f32	s10, s10, s12
 800f61a:	ee31 1a65 	vsub.f32	s2, s2, s11
 800f61e:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 800f622:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800f624:	698b      	ldr	r3, [r1, #24]
 800f626:	1a9b      	subs	r3, r3, r2
 800f628:	ee07 3a10 	vmov	s14, r3
 800f62c:	684b      	ldr	r3, [r1, #4]
 800f62e:	1a9b      	subs	r3, r3, r2
 800f630:	ee01 3a90 	vmov	s3, r3
 800f634:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f638:	ee72 5ae5 	vsub.f32	s11, s5, s11
 800f63c:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f640:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 800f644:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 800f648:	ee61 1a84 	vmul.f32	s3, s3, s8
 800f64c:	eea1 7a21 	vfma.f32	s14, s2, s3
 800f650:	ee27 7a03 	vmul.f32	s14, s14, s6
 800f654:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 800f658:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 800f65a:	694a      	ldr	r2, [r1, #20]
 800f65c:	1b13      	subs	r3, r2, r4
 800f65e:	ee03 3a10 	vmov	s6, r3
 800f662:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800f666:	680b      	ldr	r3, [r1, #0]
 800f668:	ee23 3a04 	vmul.f32	s6, s6, s8
 800f66c:	1b1b      	subs	r3, r3, r4
 800f66e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 800f672:	ee03 3a10 	vmov	s6, r3
 800f676:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800f67a:	ee23 4a04 	vmul.f32	s8, s6, s8
 800f67e:	eee1 5a04 	vfma.f32	s11, s2, s8
 800f682:	ee25 6a86 	vmul.f32	s12, s11, s12
 800f686:	ee62 5a67 	vnmul.f32	s11, s4, s15
 800f68a:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 800f68e:	eee3 5aa6 	vfma.f32	s11, s7, s13
 800f692:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 800f696:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f69a:	dd13      	ble.n	800f6c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 800f69c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800f6a0:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 800f6a4:	63c3      	str	r3, [r0, #60]	@ 0x3c
 800f6a6:	eee3 7a87 	vfma.f32	s15, s7, s14
 800f6aa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800f6ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f6b2:	dd15      	ble.n	800f6e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 800f6b4:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800f6b8:	6403      	str	r3, [r0, #64]	@ 0x40
 800f6ba:	bd70      	pop	{r4, r5, r6, pc}
 800f6bc:	4623      	mov	r3, r4
 800f6be:	e6fd      	b.n	800f4bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800f6c0:	462a      	mov	r2, r5
 800f6c2:	e706      	b.n	800f4d2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800f6c4:	d502      	bpl.n	800f6cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 800f6c6:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 800f6ca:	e7e9      	b.n	800f6a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 800f6cc:	ee22 2a64 	vnmul.f32	s4, s4, s9
 800f6d0:	eea3 2a85 	vfma.f32	s4, s7, s10
 800f6d4:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 800f6d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f6dc:	dade      	bge.n	800f69c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 800f6de:	e7f2      	b.n	800f6c6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 800f6e0:	d502      	bpl.n	800f6e8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 800f6e2:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 800f6e6:	e7e7      	b.n	800f6b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 800f6e8:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 800f6ec:	eee3 4a86 	vfma.f32	s9, s7, s12
 800f6f0:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 800f6f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f6f8:	dadc      	bge.n	800f6b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 800f6fa:	e7f2      	b.n	800f6e2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 800f6fc:	3d800000 	.word	0x3d800000

0800f700 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 800f700:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f704:	2714      	movs	r7, #20
 800f706:	435f      	muls	r7, r3
 800f708:	eb02 0c07 	add.w	ip, r2, r7
 800f70c:	f8dc 5004 	ldr.w	r5, [ip, #4]
 800f710:	f115 0e0f 	adds.w	lr, r5, #15
 800f714:	f100 80a2 	bmi.w	800f85c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 800f718:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 800f71c:	9c08      	ldr	r4, [sp, #32]
 800f71e:	f8c0 e014 	str.w	lr, [r0, #20]
 800f722:	2614      	movs	r6, #20
 800f724:	4366      	muls	r6, r4
 800f726:	eb02 0806 	add.w	r8, r2, r6
 800f72a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800f72e:	f115 040f 	adds.w	r4, r5, #15
 800f732:	f100 809f 	bmi.w	800f874 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 800f736:	1124      	asrs	r4, r4, #4
 800f738:	eba4 040e 	sub.w	r4, r4, lr
 800f73c:	6184      	str	r4, [r0, #24]
 800f73e:	2c00      	cmp	r4, #0
 800f740:	f000 808a 	beq.w	800f858 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 800f744:	f8dc 9004 	ldr.w	r9, [ip, #4]
 800f748:	f8d8 4004 	ldr.w	r4, [r8, #4]
 800f74c:	5995      	ldr	r5, [r2, r6]
 800f74e:	eba4 0809 	sub.w	r8, r4, r9
 800f752:	59d4      	ldr	r4, [r2, r7]
 800f754:	eba5 0a04 	sub.w	sl, r5, r4
 800f758:	ea4f 150a 	mov.w	r5, sl, lsl #4
 800f75c:	fb0e fe05 	mul.w	lr, lr, r5
 800f760:	fb0a ee19 	mls	lr, sl, r9, lr
 800f764:	fb08 e404 	mla	r4, r8, r4, lr
 800f768:	ea4f 1608 	mov.w	r6, r8, lsl #4
 800f76c:	3c01      	subs	r4, #1
 800f76e:	19a4      	adds	r4, r4, r6
 800f770:	f100 808c 	bmi.w	800f88c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 800f774:	fb94 fef6 	sdiv	lr, r4, r6
 800f778:	f8c0 e000 	str.w	lr, [r0]
 800f77c:	fb06 441e 	mls	r4, r6, lr, r4
 800f780:	6104      	str	r4, [r0, #16]
 800f782:	2d00      	cmp	r5, #0
 800f784:	f2c0 8095 	blt.w	800f8b2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 800f788:	fb95 f4f6 	sdiv	r4, r5, r6
 800f78c:	6044      	str	r4, [r0, #4]
 800f78e:	fb06 5514 	mls	r5, r6, r4, r5
 800f792:	6085      	str	r5, [r0, #8]
 800f794:	60c6      	str	r6, [r0, #12]
 800f796:	f8dc 4004 	ldr.w	r4, [ip, #4]
 800f79a:	6945      	ldr	r5, [r0, #20]
 800f79c:	59d2      	ldr	r2, [r2, r7]
 800f79e:	eddf 6a4d 	vldr	s13, [pc, #308]	@ 800f8d4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 800f7a2:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 800f7a6:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 800f7aa:	ee07 4a10 	vmov	s14, r4
 800f7ae:	6804      	ldr	r4, [r0, #0]
 800f7b0:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 800f7b4:	ee07 2a90 	vmov	s15, r2
 800f7b8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f7bc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f7c0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 800f7c4:	ee27 7a26 	vmul.f32	s14, s14, s13
 800f7c8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800f7cc:	edd3 6a00 	vldr	s13, [r3]
 800f7d0:	eee6 6a07 	vfma.f32	s13, s12, s14
 800f7d4:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 800f7d8:	eee6 6a27 	vfma.f32	s13, s12, s15
 800f7dc:	edc0 6a07 	vstr	s13, [r0, #28]
 800f7e0:	edd0 6a01 	vldr	s13, [r0, #4]
 800f7e4:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 800f7e8:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 800f7ec:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800f7f0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800f7f4:	ed80 6a08 	vstr	s12, [r0, #32]
 800f7f8:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 800f7fa:	6242      	str	r2, [r0, #36]	@ 0x24
 800f7fc:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 800f800:	ed93 6a03 	vldr	s12, [r3, #12]
 800f804:	eea5 6a87 	vfma.f32	s12, s11, s14
 800f808:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 800f80c:	eea5 6aa7 	vfma.f32	s12, s11, s15
 800f810:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 800f814:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 800f818:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 800f81c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800f820:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 800f824:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800f826:	6302      	str	r2, [r0, #48]	@ 0x30
 800f828:	ed93 6a06 	vldr	s12, [r3, #24]
 800f82c:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 800f830:	eea5 6a87 	vfma.f32	s12, s11, s14
 800f834:	eeb0 7a46 	vmov.f32	s14, s12
 800f838:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 800f83c:	eea6 7a27 	vfma.f32	s14, s12, s15
 800f840:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 800f844:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 800f848:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 800f84c:	eee6 7a87 	vfma.f32	s15, s13, s14
 800f850:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 800f854:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 800f856:	63c3      	str	r3, [r0, #60]	@ 0x3c
 800f858:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f85c:	f1c5 0501 	rsb	r5, r5, #1
 800f860:	f015 050f 	ands.w	r5, r5, #15
 800f864:	bf18      	it	ne
 800f866:	2501      	movne	r5, #1
 800f868:	2410      	movs	r4, #16
 800f86a:	fb9e fef4 	sdiv	lr, lr, r4
 800f86e:	ebae 0e05 	sub.w	lr, lr, r5
 800f872:	e753      	b.n	800f71c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 800f874:	f1c5 0501 	rsb	r5, r5, #1
 800f878:	f015 050f 	ands.w	r5, r5, #15
 800f87c:	bf18      	it	ne
 800f87e:	2501      	movne	r5, #1
 800f880:	f04f 0910 	mov.w	r9, #16
 800f884:	fb94 f4f9 	sdiv	r4, r4, r9
 800f888:	1b64      	subs	r4, r4, r5
 800f88a:	e755      	b.n	800f738 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 800f88c:	4264      	negs	r4, r4
 800f88e:	fb94 fef6 	sdiv	lr, r4, r6
 800f892:	f1ce 0800 	rsb	r8, lr, #0
 800f896:	fb06 441e 	mls	r4, r6, lr, r4
 800f89a:	f8c0 8000 	str.w	r8, [r0]
 800f89e:	6104      	str	r4, [r0, #16]
 800f8a0:	2c00      	cmp	r4, #0
 800f8a2:	f43f af6e 	beq.w	800f782 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 800f8a6:	ea6f 0e0e 	mvn.w	lr, lr
 800f8aa:	f8c0 e000 	str.w	lr, [r0]
 800f8ae:	1b34      	subs	r4, r6, r4
 800f8b0:	e766      	b.n	800f780 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 800f8b2:	426d      	negs	r5, r5
 800f8b4:	fb95 f4f6 	sdiv	r4, r5, r6
 800f8b8:	f1c4 0e00 	rsb	lr, r4, #0
 800f8bc:	fb06 5514 	mls	r5, r6, r4, r5
 800f8c0:	f8c0 e004 	str.w	lr, [r0, #4]
 800f8c4:	6085      	str	r5, [r0, #8]
 800f8c6:	2d00      	cmp	r5, #0
 800f8c8:	f43f af64 	beq.w	800f794 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 800f8cc:	43e4      	mvns	r4, r4
 800f8ce:	6044      	str	r4, [r0, #4]
 800f8d0:	1b75      	subs	r5, r6, r5
 800f8d2:	e75e      	b.n	800f792 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 800f8d4:	3d800000 	.word	0x3d800000

0800f8d8 <_ZN8touchgfx7Unicode6strlenEPKt>:
 800f8d8:	4602      	mov	r2, r0
 800f8da:	b148      	cbz	r0, 800f8f0 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 800f8dc:	2300      	movs	r3, #0
 800f8de:	b298      	uxth	r0, r3
 800f8e0:	3301      	adds	r3, #1
 800f8e2:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800f8e6:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 800f8ea:	2900      	cmp	r1, #0
 800f8ec:	d1f7      	bne.n	800f8de <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 800f8ee:	4770      	bx	lr
 800f8f0:	4770      	bx	lr

0800f8f2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 800f8f2:	b530      	push	{r4, r5, lr}
 800f8f4:	4604      	mov	r4, r0
 800f8f6:	b159      	cbz	r1, 800f910 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 800f8f8:	b148      	cbz	r0, 800f90e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 800f8fa:	2300      	movs	r3, #0
 800f8fc:	b298      	uxth	r0, r3
 800f8fe:	4282      	cmp	r2, r0
 800f900:	d905      	bls.n	800f90e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 800f902:	5ccd      	ldrb	r5, [r1, r3]
 800f904:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 800f908:	3301      	adds	r3, #1
 800f90a:	2d00      	cmp	r5, #0
 800f90c:	d1f6      	bne.n	800f8fc <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 800f90e:	bd30      	pop	{r4, r5, pc}
 800f910:	4608      	mov	r0, r1
 800f912:	e7fc      	b.n	800f90e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0800f914 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 800f914:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f916:	b08b      	sub	sp, #44	@ 0x2c
 800f918:	468c      	mov	ip, r1
 800f91a:	2100      	movs	r1, #0
 800f91c:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 800f920:	4604      	mov	r4, r0
 800f922:	261f      	movs	r6, #31
 800f924:	af01      	add	r7, sp, #4
 800f926:	fb94 fef3 	sdiv	lr, r4, r3
 800f92a:	fb03 441e 	mls	r4, r3, lr, r4
 800f92e:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 800f932:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 800f936:	b2ec      	uxtb	r4, r5
 800f938:	2d09      	cmp	r5, #9
 800f93a:	bfd4      	ite	le
 800f93c:	3430      	addle	r4, #48	@ 0x30
 800f93e:	3457      	addgt	r4, #87	@ 0x57
 800f940:	b2e4      	uxtb	r4, r4
 800f942:	55bc      	strb	r4, [r7, r6]
 800f944:	4674      	mov	r4, lr
 800f946:	1e71      	subs	r1, r6, #1
 800f948:	b974      	cbnz	r4, 800f968 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 800f94a:	2800      	cmp	r0, #0
 800f94c:	da05      	bge.n	800f95a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 800f94e:	ab0a      	add	r3, sp, #40	@ 0x28
 800f950:	4419      	add	r1, r3
 800f952:	232d      	movs	r3, #45	@ 0x2d
 800f954:	f801 3c24 	strb.w	r3, [r1, #-36]
 800f958:	1eb1      	subs	r1, r6, #2
 800f95a:	3101      	adds	r1, #1
 800f95c:	4439      	add	r1, r7
 800f95e:	4660      	mov	r0, ip
 800f960:	f7ff ffc7 	bl	800f8f2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800f964:	b00b      	add	sp, #44	@ 0x2c
 800f966:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f968:	460e      	mov	r6, r1
 800f96a:	e7dc      	b.n	800f926 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

0800f96c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 800f96c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f96e:	b08b      	sub	sp, #44	@ 0x2c
 800f970:	468c      	mov	ip, r1
 800f972:	2100      	movs	r1, #0
 800f974:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 800f978:	ae01      	add	r6, sp, #4
 800f97a:	211f      	movs	r1, #31
 800f97c:	fbb0 f7f3 	udiv	r7, r0, r3
 800f980:	fb03 0517 	mls	r5, r3, r7, r0
 800f984:	b2ec      	uxtb	r4, r5
 800f986:	2d09      	cmp	r5, #9
 800f988:	bfd4      	ite	le
 800f98a:	3430      	addle	r4, #48	@ 0x30
 800f98c:	3457      	addgt	r4, #87	@ 0x57
 800f98e:	b2e4      	uxtb	r4, r4
 800f990:	558c      	strb	r4, [r1, r6]
 800f992:	4638      	mov	r0, r7
 800f994:	1e4c      	subs	r4, r1, #1
 800f996:	b92f      	cbnz	r7, 800f9a4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 800f998:	4431      	add	r1, r6
 800f99a:	4660      	mov	r0, ip
 800f99c:	f7ff ffa9 	bl	800f8f2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800f9a0:	b00b      	add	sp, #44	@ 0x2c
 800f9a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f9a4:	4621      	mov	r1, r4
 800f9a6:	e7e9      	b.n	800f97c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

0800f9a8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 800f9a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f9ac:	4691      	mov	r9, r2
 800f9ae:	b085      	sub	sp, #20
 800f9b0:	6802      	ldr	r2, [r0, #0]
 800f9b2:	9201      	str	r2, [sp, #4]
 800f9b4:	4688      	mov	r8, r1
 800f9b6:	4683      	mov	fp, r0
 800f9b8:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
 800f9bc:	9103      	str	r1, [sp, #12]
 800f9be:	4610      	mov	r0, r2
 800f9c0:	461c      	mov	r4, r3
 800f9c2:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
 800f9c6:	9302      	str	r3, [sp, #8]
 800f9c8:	f7ff ff86 	bl	800f8d8 <_ZN8touchgfx7Unicode6strlenEPKt>
 800f9cc:	f1b8 0f00 	cmp.w	r8, #0
 800f9d0:	bf0c      	ite	eq
 800f9d2:	4684      	moveq	ip, r0
 800f9d4:	f100 0c01 	addne.w	ip, r0, #1
 800f9d8:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
 800f9dc:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 800f9e0:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 800f9e2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 800f9e4:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 800f9e8:	9903      	ldr	r1, [sp, #12]
 800f9ea:	fa1f fc8c 	uxth.w	ip, ip
 800f9ee:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800f9f2:	d041      	beq.n	800fa78 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 800f9f4:	d834      	bhi.n	800fa60 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 800f9f6:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
 800f9fa:	d059      	beq.n	800fab0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 800f9fc:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
 800fa00:	d03a      	beq.n	800fa78 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 800fa02:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
 800fa06:	d034      	beq.n	800fa72 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 800fa08:	2400      	movs	r4, #0
 800fa0a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 800fa0e:	3a01      	subs	r2, #1
 800fa10:	b169      	cbz	r1, 800fa2e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800fa12:	9911      	ldr	r1, [sp, #68]	@ 0x44
 800fa14:	458c      	cmp	ip, r1
 800fa16:	da09      	bge.n	800fa2c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 800fa18:	eba1 010c 	sub.w	r1, r1, ip
 800fa1c:	b289      	uxth	r1, r1
 800fa1e:	b933      	cbnz	r3, 800fa2e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800fa20:	2e00      	cmp	r6, #0
 800fa22:	d051      	beq.n	800fac8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 800fa24:	2800      	cmp	r0, #0
 800fa26:	d04f      	beq.n	800fac8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 800fa28:	440c      	add	r4, r1
 800fa2a:	b2a4      	uxth	r4, r4
 800fa2c:	2100      	movs	r1, #0
 800fa2e:	682b      	ldr	r3, [r5, #0]
 800fa30:	4293      	cmp	r3, r2
 800fa32:	da07      	bge.n	800fa44 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 800fa34:	f1b8 0f00 	cmp.w	r8, #0
 800fa38:	d004      	beq.n	800fa44 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 800fa3a:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 800fa3e:	682b      	ldr	r3, [r5, #0]
 800fa40:	3301      	adds	r3, #1
 800fa42:	602b      	str	r3, [r5, #0]
 800fa44:	2730      	movs	r7, #48	@ 0x30
 800fa46:	2c00      	cmp	r4, #0
 800fa48:	d04e      	beq.n	800fae8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800fa4a:	682e      	ldr	r6, [r5, #0]
 800fa4c:	3c01      	subs	r4, #1
 800fa4e:	42b2      	cmp	r2, r6
 800fa50:	b2a4      	uxth	r4, r4
 800fa52:	dd49      	ble.n	800fae8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800fa54:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 800fa58:	682b      	ldr	r3, [r5, #0]
 800fa5a:	3301      	adds	r3, #1
 800fa5c:	602b      	str	r3, [r5, #0]
 800fa5e:	e7f2      	b.n	800fa46 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 800fa60:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
 800fa64:	d01d      	beq.n	800faa2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 800fa66:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
 800fa6a:	d002      	beq.n	800fa72 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 800fa6c:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
 800fa70:	e7c9      	b.n	800fa06 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 800fa72:	4684      	mov	ip, r0
 800fa74:	f04f 0800 	mov.w	r8, #0
 800fa78:	2c00      	cmp	r4, #0
 800fa7a:	d0c6      	beq.n	800fa0a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800fa7c:	b947      	cbnz	r7, 800fa90 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 800fa7e:	2801      	cmp	r0, #1
 800fa80:	d106      	bne.n	800fa90 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 800fa82:	8814      	ldrh	r4, [r2, #0]
 800fa84:	2c30      	cmp	r4, #48	@ 0x30
 800fa86:	bf02      	ittt	eq
 800fa88:	3202      	addeq	r2, #2
 800fa8a:	f8cb 2000 	streq.w	r2, [fp]
 800fa8e:	4638      	moveq	r0, r7
 800fa90:	45bc      	cmp	ip, r7
 800fa92:	da14      	bge.n	800fabe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 800fa94:	b2bf      	uxth	r7, r7
 800fa96:	eba7 040c 	sub.w	r4, r7, ip
 800fa9a:	b2a4      	uxth	r4, r4
 800fa9c:	46bc      	mov	ip, r7
 800fa9e:	2600      	movs	r6, #0
 800faa0:	e7b3      	b.n	800fa0a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800faa2:	4684      	mov	ip, r0
 800faa4:	b16c      	cbz	r4, 800fac2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 800faa6:	42b8      	cmp	r0, r7
 800faa8:	dd00      	ble.n	800faac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 800faaa:	b2b8      	uxth	r0, r7
 800faac:	2400      	movs	r4, #0
 800faae:	e003      	b.n	800fab8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 800fab0:	f04f 0c01 	mov.w	ip, #1
 800fab4:	2400      	movs	r4, #0
 800fab6:	4660      	mov	r0, ip
 800fab8:	4626      	mov	r6, r4
 800faba:	46a0      	mov	r8, r4
 800fabc:	e7a5      	b.n	800fa0a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800fabe:	2400      	movs	r4, #0
 800fac0:	e7ed      	b.n	800fa9e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 800fac2:	4626      	mov	r6, r4
 800fac4:	46a0      	mov	r8, r4
 800fac6:	e7a0      	b.n	800fa0a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800fac8:	2900      	cmp	r1, #0
 800faca:	d0b0      	beq.n	800fa2e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800facc:	2720      	movs	r7, #32
 800face:	682e      	ldr	r6, [r5, #0]
 800fad0:	2900      	cmp	r1, #0
 800fad2:	d0ac      	beq.n	800fa2e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800fad4:	3901      	subs	r1, #1
 800fad6:	4296      	cmp	r6, r2
 800fad8:	b289      	uxth	r1, r1
 800fada:	daa7      	bge.n	800fa2c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 800fadc:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 800fae0:	682b      	ldr	r3, [r5, #0]
 800fae2:	3301      	adds	r3, #1
 800fae4:	602b      	str	r3, [r5, #0]
 800fae6:	e7f2      	b.n	800face <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 800fae8:	b188      	cbz	r0, 800fb0e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 800faea:	682b      	ldr	r3, [r5, #0]
 800faec:	3801      	subs	r0, #1
 800faee:	429a      	cmp	r2, r3
 800faf0:	b280      	uxth	r0, r0
 800faf2:	dd0c      	ble.n	800fb0e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 800faf4:	f8db 3000 	ldr.w	r3, [fp]
 800faf8:	1c9c      	adds	r4, r3, #2
 800fafa:	f8cb 4000 	str.w	r4, [fp]
 800fafe:	881c      	ldrh	r4, [r3, #0]
 800fb00:	682b      	ldr	r3, [r5, #0]
 800fb02:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 800fb06:	682b      	ldr	r3, [r5, #0]
 800fb08:	3301      	adds	r3, #1
 800fb0a:	602b      	str	r3, [r5, #0]
 800fb0c:	e7ec      	b.n	800fae8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800fb0e:	2620      	movs	r6, #32
 800fb10:	b151      	cbz	r1, 800fb28 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 800fb12:	6828      	ldr	r0, [r5, #0]
 800fb14:	3901      	subs	r1, #1
 800fb16:	4282      	cmp	r2, r0
 800fb18:	b289      	uxth	r1, r1
 800fb1a:	dd05      	ble.n	800fb28 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 800fb1c:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 800fb20:	682b      	ldr	r3, [r5, #0]
 800fb22:	3301      	adds	r3, #1
 800fb24:	602b      	str	r3, [r5, #0]
 800fb26:	e7f3      	b.n	800fb10 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 800fb28:	b005      	add	sp, #20
 800fb2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800fb2e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 800fb2e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fb32:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 800fb36:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
 800fb3a:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
 800fb3e:	2400      	movs	r4, #0
 800fb40:	8014      	strh	r4, [r2, #0]
 800fb42:	701c      	strb	r4, [r3, #0]
 800fb44:	f888 4000 	strb.w	r4, [r8]
 800fb48:	f88c 4000 	strb.w	r4, [ip]
 800fb4c:	f88e 4000 	strb.w	r4, [lr]
 800fb50:	703c      	strb	r4, [r7, #0]
 800fb52:	6804      	ldr	r4, [r0, #0]
 800fb54:	b1a4      	cbz	r4, 800fb80 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 800fb56:	8824      	ldrh	r4, [r4, #0]
 800fb58:	f04f 0901 	mov.w	r9, #1
 800fb5c:	b314      	cbz	r4, 800fba4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800fb5e:	2c2b      	cmp	r4, #43	@ 0x2b
 800fb60:	d001      	beq.n	800fb66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 800fb62:	2c20      	cmp	r4, #32
 800fb64:	d110      	bne.n	800fb88 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 800fb66:	8014      	strh	r4, [r2, #0]
 800fb68:	6804      	ldr	r4, [r0, #0]
 800fb6a:	b10c      	cbz	r4, 800fb70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 800fb6c:	3402      	adds	r4, #2
 800fb6e:	6004      	str	r4, [r0, #0]
 800fb70:	680c      	ldr	r4, [r1, #0]
 800fb72:	b10c      	cbz	r4, 800fb78 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 800fb74:	3401      	adds	r4, #1
 800fb76:	600c      	str	r4, [r1, #0]
 800fb78:	6804      	ldr	r4, [r0, #0]
 800fb7a:	b17c      	cbz	r4, 800fb9c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 800fb7c:	8824      	ldrh	r4, [r4, #0]
 800fb7e:	e7ed      	b.n	800fb5c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 800fb80:	680c      	ldr	r4, [r1, #0]
 800fb82:	b17c      	cbz	r4, 800fba4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800fb84:	7824      	ldrb	r4, [r4, #0]
 800fb86:	e7e7      	b.n	800fb58 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 800fb88:	2c2d      	cmp	r4, #45	@ 0x2d
 800fb8a:	d102      	bne.n	800fb92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 800fb8c:	f883 9000 	strb.w	r9, [r3]
 800fb90:	e7ea      	b.n	800fb68 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 800fb92:	2c23      	cmp	r4, #35	@ 0x23
 800fb94:	d107      	bne.n	800fba6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 800fb96:	f888 9000 	strb.w	r9, [r8]
 800fb9a:	e7e5      	b.n	800fb68 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 800fb9c:	680c      	ldr	r4, [r1, #0]
 800fb9e:	b10c      	cbz	r4, 800fba4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800fba0:	7824      	ldrb	r4, [r4, #0]
 800fba2:	e7db      	b.n	800fb5c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 800fba4:	2400      	movs	r4, #0
 800fba6:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 800fbaa:	2b09      	cmp	r3, #9
 800fbac:	d901      	bls.n	800fbb2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 800fbae:	2c2a      	cmp	r4, #42	@ 0x2a
 800fbb0:	d122      	bne.n	800fbf8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800fbb2:	2301      	movs	r3, #1
 800fbb4:	2c30      	cmp	r4, #48	@ 0x30
 800fbb6:	f88e 3000 	strb.w	r3, [lr]
 800fbba:	d10d      	bne.n	800fbd8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 800fbbc:	f88c 3000 	strb.w	r3, [ip]
 800fbc0:	6803      	ldr	r3, [r0, #0]
 800fbc2:	b10b      	cbz	r3, 800fbc8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 800fbc4:	3302      	adds	r3, #2
 800fbc6:	6003      	str	r3, [r0, #0]
 800fbc8:	680b      	ldr	r3, [r1, #0]
 800fbca:	b10b      	cbz	r3, 800fbd0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 800fbcc:	3301      	adds	r3, #1
 800fbce:	600b      	str	r3, [r1, #0]
 800fbd0:	6803      	ldr	r3, [r0, #0]
 800fbd2:	2b00      	cmp	r3, #0
 800fbd4:	d02f      	beq.n	800fc36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 800fbd6:	881c      	ldrh	r4, [r3, #0]
 800fbd8:	2c2a      	cmp	r4, #42	@ 0x2a
 800fbda:	d135      	bne.n	800fc48 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 800fbdc:	f04f 33ff 	mov.w	r3, #4294967295
 800fbe0:	6033      	str	r3, [r6, #0]
 800fbe2:	6803      	ldr	r3, [r0, #0]
 800fbe4:	b10b      	cbz	r3, 800fbea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 800fbe6:	3302      	adds	r3, #2
 800fbe8:	6003      	str	r3, [r0, #0]
 800fbea:	680b      	ldr	r3, [r1, #0]
 800fbec:	b10b      	cbz	r3, 800fbf2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 800fbee:	3301      	adds	r3, #1
 800fbf0:	600b      	str	r3, [r1, #0]
 800fbf2:	6803      	ldr	r3, [r0, #0]
 800fbf4:	b31b      	cbz	r3, 800fc3e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 800fbf6:	881c      	ldrh	r4, [r3, #0]
 800fbf8:	2c2e      	cmp	r4, #46	@ 0x2e
 800fbfa:	d11a      	bne.n	800fc32 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800fbfc:	2301      	movs	r3, #1
 800fbfe:	703b      	strb	r3, [r7, #0]
 800fc00:	6803      	ldr	r3, [r0, #0]
 800fc02:	b10b      	cbz	r3, 800fc08 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 800fc04:	3302      	adds	r3, #2
 800fc06:	6003      	str	r3, [r0, #0]
 800fc08:	680b      	ldr	r3, [r1, #0]
 800fc0a:	b10b      	cbz	r3, 800fc10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 800fc0c:	3301      	adds	r3, #1
 800fc0e:	600b      	str	r3, [r1, #0]
 800fc10:	6803      	ldr	r3, [r0, #0]
 800fc12:	2b00      	cmp	r3, #0
 800fc14:	d036      	beq.n	800fc84 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 800fc16:	881b      	ldrh	r3, [r3, #0]
 800fc18:	2b2a      	cmp	r3, #42	@ 0x2a
 800fc1a:	d137      	bne.n	800fc8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 800fc1c:	f04f 33ff 	mov.w	r3, #4294967295
 800fc20:	602b      	str	r3, [r5, #0]
 800fc22:	6803      	ldr	r3, [r0, #0]
 800fc24:	b10b      	cbz	r3, 800fc2a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 800fc26:	3302      	adds	r3, #2
 800fc28:	6003      	str	r3, [r0, #0]
 800fc2a:	680b      	ldr	r3, [r1, #0]
 800fc2c:	b10b      	cbz	r3, 800fc32 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800fc2e:	3301      	adds	r3, #1
 800fc30:	600b      	str	r3, [r1, #0]
 800fc32:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fc36:	680c      	ldr	r4, [r1, #0]
 800fc38:	b134      	cbz	r4, 800fc48 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 800fc3a:	7824      	ldrb	r4, [r4, #0]
 800fc3c:	e7cc      	b.n	800fbd8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 800fc3e:	680b      	ldr	r3, [r1, #0]
 800fc40:	2b00      	cmp	r3, #0
 800fc42:	d0f6      	beq.n	800fc32 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800fc44:	781c      	ldrb	r4, [r3, #0]
 800fc46:	e7d7      	b.n	800fbf8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800fc48:	2300      	movs	r3, #0
 800fc4a:	6033      	str	r3, [r6, #0]
 800fc4c:	220a      	movs	r2, #10
 800fc4e:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 800fc52:	fa1f f38c 	uxth.w	r3, ip
 800fc56:	2b09      	cmp	r3, #9
 800fc58:	d8ce      	bhi.n	800fbf8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800fc5a:	6833      	ldr	r3, [r6, #0]
 800fc5c:	fb02 c303 	mla	r3, r2, r3, ip
 800fc60:	6033      	str	r3, [r6, #0]
 800fc62:	6803      	ldr	r3, [r0, #0]
 800fc64:	b10b      	cbz	r3, 800fc6a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 800fc66:	3302      	adds	r3, #2
 800fc68:	6003      	str	r3, [r0, #0]
 800fc6a:	680b      	ldr	r3, [r1, #0]
 800fc6c:	b10b      	cbz	r3, 800fc72 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 800fc6e:	3301      	adds	r3, #1
 800fc70:	600b      	str	r3, [r1, #0]
 800fc72:	6803      	ldr	r3, [r0, #0]
 800fc74:	b10b      	cbz	r3, 800fc7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 800fc76:	881c      	ldrh	r4, [r3, #0]
 800fc78:	e7e9      	b.n	800fc4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800fc7a:	680c      	ldr	r4, [r1, #0]
 800fc7c:	2c00      	cmp	r4, #0
 800fc7e:	d0e6      	beq.n	800fc4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800fc80:	7824      	ldrb	r4, [r4, #0]
 800fc82:	e7e4      	b.n	800fc4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800fc84:	680b      	ldr	r3, [r1, #0]
 800fc86:	b10b      	cbz	r3, 800fc8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 800fc88:	781b      	ldrb	r3, [r3, #0]
 800fc8a:	e7c5      	b.n	800fc18 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 800fc8c:	2200      	movs	r2, #0
 800fc8e:	602a      	str	r2, [r5, #0]
 800fc90:	240a      	movs	r4, #10
 800fc92:	3b30      	subs	r3, #48	@ 0x30
 800fc94:	b29e      	uxth	r6, r3
 800fc96:	2e09      	cmp	r6, #9
 800fc98:	682a      	ldr	r2, [r5, #0]
 800fc9a:	d813      	bhi.n	800fcc4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 800fc9c:	fb04 3302 	mla	r3, r4, r2, r3
 800fca0:	602b      	str	r3, [r5, #0]
 800fca2:	6803      	ldr	r3, [r0, #0]
 800fca4:	b10b      	cbz	r3, 800fcaa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 800fca6:	3302      	adds	r3, #2
 800fca8:	6003      	str	r3, [r0, #0]
 800fcaa:	680b      	ldr	r3, [r1, #0]
 800fcac:	b10b      	cbz	r3, 800fcb2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 800fcae:	3301      	adds	r3, #1
 800fcb0:	600b      	str	r3, [r1, #0]
 800fcb2:	6803      	ldr	r3, [r0, #0]
 800fcb4:	b10b      	cbz	r3, 800fcba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 800fcb6:	881b      	ldrh	r3, [r3, #0]
 800fcb8:	e7eb      	b.n	800fc92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800fcba:	680b      	ldr	r3, [r1, #0]
 800fcbc:	2b00      	cmp	r3, #0
 800fcbe:	d0e8      	beq.n	800fc92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800fcc0:	781b      	ldrb	r3, [r3, #0]
 800fcc2:	e7e6      	b.n	800fc92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800fcc4:	2a06      	cmp	r2, #6
 800fcc6:	bfa8      	it	ge
 800fcc8:	2206      	movge	r2, #6
 800fcca:	602a      	str	r2, [r5, #0]
 800fccc:	e7b1      	b.n	800fc32 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0800fcce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 800fcce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fcd2:	b0a3      	sub	sp, #140	@ 0x8c
 800fcd4:	2600      	movs	r6, #0
 800fcd6:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
 800fcda:	4607      	mov	r7, r0
 800fcdc:	4688      	mov	r8, r1
 800fcde:	e9cd 3208 	strd	r3, r2, [sp, #32]
 800fce2:	4631      	mov	r1, r6
 800fce4:	2242      	movs	r2, #66	@ 0x42
 800fce6:	4648      	mov	r0, r9
 800fce8:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
 800fcea:	960d      	str	r6, [sp, #52]	@ 0x34
 800fcec:	f00e f8d1 	bl	801de92 <memset>
 800fcf0:	b15f      	cbz	r7, 800fd0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 800fcf2:	f108 3aff 	add.w	sl, r8, #4294967295
 800fcf6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800fcf8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800fcfa:	b152      	cbz	r2, 800fd12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 800fcfc:	8812      	ldrh	r2, [r2, #0]
 800fcfe:	b10a      	cbz	r2, 800fd04 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 800fd00:	459a      	cmp	sl, r3
 800fd02:	dc2e      	bgt.n	800fd62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 800fd04:	2200      	movs	r2, #0
 800fd06:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 800fd0a:	4638      	mov	r0, r7
 800fd0c:	b023      	add	sp, #140	@ 0x8c
 800fd0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fd12:	9a08      	ldr	r2, [sp, #32]
 800fd14:	2a00      	cmp	r2, #0
 800fd16:	d0f5      	beq.n	800fd04 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 800fd18:	7812      	ldrb	r2, [r2, #0]
 800fd1a:	e7f0      	b.n	800fcfe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 800fd1c:	2d00      	cmp	r5, #0
 800fd1e:	d0ea      	beq.n	800fcf6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800fd20:	782a      	ldrb	r2, [r5, #0]
 800fd22:	b142      	cbz	r2, 800fd36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 800fd24:	2a25      	cmp	r2, #37	@ 0x25
 800fd26:	d001      	beq.n	800fd2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 800fd28:	459a      	cmp	sl, r3
 800fd2a:	dc08      	bgt.n	800fd3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 800fd2c:	f1bb 0f00 	cmp.w	fp, #0
 800fd30:	d121      	bne.n	800fd76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 800fd32:	2d00      	cmp	r5, #0
 800fd34:	d0df      	beq.n	800fcf6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800fd36:	782a      	ldrb	r2, [r5, #0]
 800fd38:	f04f 0b00 	mov.w	fp, #0
 800fd3c:	e01d      	b.n	800fd7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 800fd3e:	f1bb 0f00 	cmp.w	fp, #0
 800fd42:	d078      	beq.n	800fe36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 800fd44:	f8bb 2000 	ldrh.w	r2, [fp]
 800fd48:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 800fd4c:	f1bb 0f00 	cmp.w	fp, #0
 800fd50:	d002      	beq.n	800fd58 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 800fd52:	f10b 0202 	add.w	r2, fp, #2
 800fd56:	9209      	str	r2, [sp, #36]	@ 0x24
 800fd58:	b10d      	cbz	r5, 800fd5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 800fd5a:	3501      	adds	r5, #1
 800fd5c:	9508      	str	r5, [sp, #32]
 800fd5e:	3301      	adds	r3, #1
 800fd60:	930d      	str	r3, [sp, #52]	@ 0x34
 800fd62:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 800fd66:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800fd68:	f1bb 0f00 	cmp.w	fp, #0
 800fd6c:	d0d6      	beq.n	800fd1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 800fd6e:	f8bb 2000 	ldrh.w	r2, [fp]
 800fd72:	2a00      	cmp	r2, #0
 800fd74:	d1d6      	bne.n	800fd24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 800fd76:	f8bb 2000 	ldrh.w	r2, [fp]
 800fd7a:	2a00      	cmp	r2, #0
 800fd7c:	d0bb      	beq.n	800fcf6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800fd7e:	459a      	cmp	sl, r3
 800fd80:	ddb9      	ble.n	800fcf6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800fd82:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
 800fd86:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
 800fd8a:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
 800fd8e:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
 800fd92:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
 800fd96:	960e      	str	r6, [sp, #56]	@ 0x38
 800fd98:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
 800fd9c:	960f      	str	r6, [sp, #60]	@ 0x3c
 800fd9e:	f1bb 0f00 	cmp.w	fp, #0
 800fda2:	d002      	beq.n	800fdaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 800fda4:	f10b 0302 	add.w	r3, fp, #2
 800fda8:	9309      	str	r3, [sp, #36]	@ 0x24
 800fdaa:	b10d      	cbz	r5, 800fdb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 800fdac:	1c6b      	adds	r3, r5, #1
 800fdae:	9308      	str	r3, [sp, #32]
 800fdb0:	ab0f      	add	r3, sp, #60	@ 0x3c
 800fdb2:	9305      	str	r3, [sp, #20]
 800fdb4:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 800fdb8:	9304      	str	r3, [sp, #16]
 800fdba:	ab0e      	add	r3, sp, #56	@ 0x38
 800fdbc:	9303      	str	r3, [sp, #12]
 800fdbe:	ab0c      	add	r3, sp, #48	@ 0x30
 800fdc0:	9302      	str	r3, [sp, #8]
 800fdc2:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 800fdc6:	9301      	str	r3, [sp, #4]
 800fdc8:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 800fdcc:	9300      	str	r3, [sp, #0]
 800fdce:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 800fdd2:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 800fdd6:	a908      	add	r1, sp, #32
 800fdd8:	a809      	add	r0, sp, #36	@ 0x24
 800fdda:	f7ff fea8 	bl	800fb2e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 800fdde:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800fde0:	2b00      	cmp	r3, #0
 800fde2:	bfbe      	ittt	lt
 800fde4:	6823      	ldrlt	r3, [r4, #0]
 800fde6:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 800fdea:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800fdec:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800fdee:	bfb8      	it	lt
 800fdf0:	3404      	addlt	r4, #4
 800fdf2:	2b00      	cmp	r3, #0
 800fdf4:	bfb8      	it	lt
 800fdf6:	6823      	ldrlt	r3, [r4, #0]
 800fdf8:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 800fdfc:	bfbe      	ittt	lt
 800fdfe:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 800fe02:	930f      	strlt	r3, [sp, #60]	@ 0x3c
 800fe04:	3404      	addlt	r4, #4
 800fe06:	b1d9      	cbz	r1, 800fe40 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 800fe08:	880b      	ldrh	r3, [r1, #0]
 800fe0a:	2b69      	cmp	r3, #105	@ 0x69
 800fe0c:	d01f      	beq.n	800fe4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800fe0e:	d82f      	bhi.n	800fe70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 800fe10:	2b58      	cmp	r3, #88	@ 0x58
 800fe12:	d01c      	beq.n	800fe4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800fe14:	d818      	bhi.n	800fe48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 800fe16:	2b25      	cmp	r3, #37	@ 0x25
 800fe18:	d034      	beq.n	800fe84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 800fe1a:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 800fe1e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800fe20:	f1bb 0f00 	cmp.w	fp, #0
 800fe24:	f000 80b8 	beq.w	800ff98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 800fe28:	f8bb 5000 	ldrh.w	r5, [fp]
 800fe2c:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 800fe30:	3301      	adds	r3, #1
 800fe32:	930d      	str	r3, [sp, #52]	@ 0x34
 800fe34:	e029      	b.n	800fe8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 800fe36:	b10d      	cbz	r5, 800fe3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 800fe38:	782a      	ldrb	r2, [r5, #0]
 800fe3a:	e785      	b.n	800fd48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 800fe3c:	462a      	mov	r2, r5
 800fe3e:	e783      	b.n	800fd48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 800fe40:	2a00      	cmp	r2, #0
 800fe42:	d0ea      	beq.n	800fe1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800fe44:	7813      	ldrb	r3, [r2, #0]
 800fe46:	e7e0      	b.n	800fe0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 800fe48:	3b63      	subs	r3, #99	@ 0x63
 800fe4a:	2b01      	cmp	r3, #1
 800fe4c:	d8e5      	bhi.n	800fe1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800fe4e:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
 800fe52:	b329      	cbz	r1, 800fea0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 800fe54:	880b      	ldrh	r3, [r1, #0]
 800fe56:	2b69      	cmp	r3, #105	@ 0x69
 800fe58:	d063      	beq.n	800ff22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 800fe5a:	d825      	bhi.n	800fea8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 800fe5c:	2b63      	cmp	r3, #99	@ 0x63
 800fe5e:	d038      	beq.n	800fed2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 800fe60:	2b64      	cmp	r3, #100	@ 0x64
 800fe62:	d05e      	beq.n	800ff22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 800fe64:	2b58      	cmp	r3, #88	@ 0x58
 800fe66:	d07b      	beq.n	800ff60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 800fe68:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
 800fe6c:	4625      	mov	r5, r4
 800fe6e:	e036      	b.n	800fede <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800fe70:	2b73      	cmp	r3, #115	@ 0x73
 800fe72:	d0ec      	beq.n	800fe4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800fe74:	d802      	bhi.n	800fe7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 800fe76:	2b6f      	cmp	r3, #111	@ 0x6f
 800fe78:	d1cf      	bne.n	800fe1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800fe7a:	e7e8      	b.n	800fe4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800fe7c:	2b75      	cmp	r3, #117	@ 0x75
 800fe7e:	d0e6      	beq.n	800fe4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800fe80:	2b78      	cmp	r3, #120	@ 0x78
 800fe82:	e7f9      	b.n	800fe78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 800fe84:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800fe86:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 800fe8a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800fe8c:	b10b      	cbz	r3, 800fe92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 800fe8e:	3302      	adds	r3, #2
 800fe90:	9309      	str	r3, [sp, #36]	@ 0x24
 800fe92:	9b08      	ldr	r3, [sp, #32]
 800fe94:	2b00      	cmp	r3, #0
 800fe96:	f43f af2e 	beq.w	800fcf6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800fe9a:	3301      	adds	r3, #1
 800fe9c:	9308      	str	r3, [sp, #32]
 800fe9e:	e72a      	b.n	800fcf6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800fea0:	2a00      	cmp	r2, #0
 800fea2:	d0e1      	beq.n	800fe68 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800fea4:	7813      	ldrb	r3, [r2, #0]
 800fea6:	e7d6      	b.n	800fe56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 800fea8:	2b73      	cmp	r3, #115	@ 0x73
 800feaa:	d036      	beq.n	800ff1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 800feac:	d807      	bhi.n	800febe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 800feae:	2b6f      	cmp	r3, #111	@ 0x6f
 800feb0:	d1da      	bne.n	800fe68 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800feb2:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800feb4:	1d25      	adds	r5, r4, #4
 800feb6:	eba8 0202 	sub.w	r2, r8, r2
 800feba:	2308      	movs	r3, #8
 800febc:	e04a      	b.n	800ff54 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 800febe:	2b75      	cmp	r3, #117	@ 0x75
 800fec0:	d043      	beq.n	800ff4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 800fec2:	2b78      	cmp	r3, #120	@ 0x78
 800fec4:	d1d0      	bne.n	800fe68 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800fec6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800fec8:	1d25      	adds	r5, r4, #4
 800feca:	eba8 0202 	sub.w	r2, r8, r2
 800fece:	2310      	movs	r3, #16
 800fed0:	e040      	b.n	800ff54 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 800fed2:	6823      	ldr	r3, [r4, #0]
 800fed4:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 800fed8:	1d25      	adds	r5, r4, #4
 800feda:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
 800fede:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800fee0:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 800fee4:	2b00      	cmp	r3, #0
 800fee6:	d052      	beq.n	800ff8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 800fee8:	881a      	ldrh	r2, [r3, #0]
 800feea:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 800feee:	a80d      	add	r0, sp, #52	@ 0x34
 800fef0:	9005      	str	r0, [sp, #20]
 800fef2:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 800fef6:	9004      	str	r0, [sp, #16]
 800fef8:	980e      	ldr	r0, [sp, #56]	@ 0x38
 800fefa:	9003      	str	r0, [sp, #12]
 800fefc:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 800ff00:	9002      	str	r0, [sp, #8]
 800ff02:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 800ff04:	9001      	str	r0, [sp, #4]
 800ff06:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 800ff0a:	9000      	str	r0, [sp, #0]
 800ff0c:	e9cd 8706 	strd	r8, r7, [sp, #24]
 800ff10:	a810      	add	r0, sp, #64	@ 0x40
 800ff12:	f7ff fd49 	bl	800f9a8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 800ff16:	462c      	mov	r4, r5
 800ff18:	e7b7      	b.n	800fe8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 800ff1a:	6823      	ldr	r3, [r4, #0]
 800ff1c:	1d25      	adds	r5, r4, #4
 800ff1e:	9310      	str	r3, [sp, #64]	@ 0x40
 800ff20:	e7dd      	b.n	800fede <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800ff22:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800ff24:	6820      	ldr	r0, [r4, #0]
 800ff26:	eba8 0202 	sub.w	r2, r8, r2
 800ff2a:	230a      	movs	r3, #10
 800ff2c:	b292      	uxth	r2, r2
 800ff2e:	4649      	mov	r1, r9
 800ff30:	f7ff fcf0 	bl	800f914 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 800ff34:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800ff38:	2b2d      	cmp	r3, #45	@ 0x2d
 800ff3a:	f104 0504 	add.w	r5, r4, #4
 800ff3e:	d1ce      	bne.n	800fede <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800ff40:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800ff44:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800ff46:	3302      	adds	r3, #2
 800ff48:	e7e9      	b.n	800ff1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 800ff4a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800ff4c:	1d25      	adds	r5, r4, #4
 800ff4e:	eba8 0202 	sub.w	r2, r8, r2
 800ff52:	230a      	movs	r3, #10
 800ff54:	b292      	uxth	r2, r2
 800ff56:	4649      	mov	r1, r9
 800ff58:	6820      	ldr	r0, [r4, #0]
 800ff5a:	f7ff fd07 	bl	800f96c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 800ff5e:	e7be      	b.n	800fede <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800ff60:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800ff62:	6820      	ldr	r0, [r4, #0]
 800ff64:	eba8 0202 	sub.w	r2, r8, r2
 800ff68:	b292      	uxth	r2, r2
 800ff6a:	2310      	movs	r3, #16
 800ff6c:	4649      	mov	r1, r9
 800ff6e:	f7ff fcfd 	bl	800f96c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 800ff72:	1d25      	adds	r5, r4, #4
 800ff74:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
 800ff78:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 800ff7c:	2b00      	cmp	r3, #0
 800ff7e:	d0ae      	beq.n	800fede <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800ff80:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
 800ff84:	2919      	cmp	r1, #25
 800ff86:	d8f7      	bhi.n	800ff78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 800ff88:	3b20      	subs	r3, #32
 800ff8a:	8013      	strh	r3, [r2, #0]
 800ff8c:	e7f4      	b.n	800ff78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 800ff8e:	9a08      	ldr	r2, [sp, #32]
 800ff90:	2a00      	cmp	r2, #0
 800ff92:	d0aa      	beq.n	800feea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800ff94:	7812      	ldrb	r2, [r2, #0]
 800ff96:	e7a8      	b.n	800feea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800ff98:	2d00      	cmp	r5, #0
 800ff9a:	f43f af47 	beq.w	800fe2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 800ff9e:	782d      	ldrb	r5, [r5, #0]
 800ffa0:	e744      	b.n	800fe2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0800ffa2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 800ffa2:	b507      	push	{r0, r1, r2, lr}
 800ffa4:	9300      	str	r3, [sp, #0]
 800ffa6:	4613      	mov	r3, r2
 800ffa8:	2200      	movs	r2, #0
 800ffaa:	f7ff fe90 	bl	800fcce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 800ffae:	b003      	add	sp, #12
 800ffb0:	f85d fb04 	ldr.w	pc, [sp], #4

0800ffb4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 800ffb4:	b40c      	push	{r2, r3}
 800ffb6:	b507      	push	{r0, r1, r2, lr}
 800ffb8:	ab04      	add	r3, sp, #16
 800ffba:	f853 2b04 	ldr.w	r2, [r3], #4
 800ffbe:	9301      	str	r3, [sp, #4]
 800ffc0:	f7ff ffef 	bl	800ffa2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 800ffc4:	b003      	add	sp, #12
 800ffc6:	f85d eb04 	ldr.w	lr, [sp], #4
 800ffca:	b002      	add	sp, #8
 800ffcc:	4770      	bx	lr
	...

0800ffd0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800ffd0:	4b01      	ldr	r3, [pc, #4]	@ (800ffd8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800ffd2:	6018      	str	r0, [r3, #0]
 800ffd4:	4770      	bx	lr
 800ffd6:	bf00      	nop
 800ffd8:	20011a5c 	.word	0x20011a5c

0800ffdc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 800ffdc:	4b06      	ldr	r3, [pc, #24]	@ (800fff8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 800ffde:	881a      	ldrh	r2, [r3, #0]
 800ffe0:	4282      	cmp	r2, r0
 800ffe2:	d807      	bhi.n	800fff4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 800ffe4:	4b05      	ldr	r3, [pc, #20]	@ (800fffc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 800ffe6:	881b      	ldrh	r3, [r3, #0]
 800ffe8:	4413      	add	r3, r2
 800ffea:	4298      	cmp	r0, r3
 800ffec:	bfac      	ite	ge
 800ffee:	2000      	movge	r0, #0
 800fff0:	2001      	movlt	r0, #1
 800fff2:	4770      	bx	lr
 800fff4:	2000      	movs	r0, #0
 800fff6:	4770      	bx	lr
 800fff8:	20011a7c 	.word	0x20011a7c
 800fffc:	20011a80 	.word	0x20011a80

08010000 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8010000:	b508      	push	{r3, lr}
 8010002:	4601      	mov	r1, r0
 8010004:	f7ff ffea 	bl	800ffdc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8010008:	b118      	cbz	r0, 8010012 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801000a:	4b02      	ldr	r3, [pc, #8]	@ (8010014 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801000c:	681b      	ldr	r3, [r3, #0]
 801000e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8010012:	bd08      	pop	{r3, pc}
 8010014:	20011a60 	.word	0x20011a60

08010018 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8010018:	b5f0      	push	{r4, r5, r6, r7, lr}
 801001a:	4c24      	ldr	r4, [pc, #144]	@ (80100ac <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801001c:	6823      	ldr	r3, [r4, #0]
 801001e:	2b00      	cmp	r3, #0
 8010020:	d042      	beq.n	80100a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8010022:	4a23      	ldr	r2, [pc, #140]	@ (80100b0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8010024:	4d23      	ldr	r5, [pc, #140]	@ (80100b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8010026:	8811      	ldrh	r1, [r2, #0]
 8010028:	f8b5 c000 	ldrh.w	ip, [r5]
 801002c:	4822      	ldr	r0, [pc, #136]	@ (80100b8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801002e:	4461      	add	r1, ip
 8010030:	1c4a      	adds	r2, r1, #1
 8010032:	f022 0201 	bic.w	r2, r2, #1
 8010036:	008f      	lsls	r7, r1, #2
 8010038:	0412      	lsls	r2, r2, #16
 801003a:	19de      	adds	r6, r3, r7
 801003c:	0c12      	lsrs	r2, r2, #16
 801003e:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8010042:	6006      	str	r6, [r0, #0]
 8010044:	4e1d      	ldr	r6, [pc, #116]	@ (80100bc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8010046:	19da      	adds	r2, r3, r7
 8010048:	6032      	str	r2, [r6, #0]
 801004a:	220e      	movs	r2, #14
 801004c:	fb02 f20c 	mul.w	r2, r2, ip
 8010050:	3203      	adds	r2, #3
 8010052:	f022 0203 	bic.w	r2, r2, #3
 8010056:	443a      	add	r2, r7
 8010058:	4f19      	ldr	r7, [pc, #100]	@ (80100c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801005a:	4413      	add	r3, r2
 801005c:	603b      	str	r3, [r7, #0]
 801005e:	4f19      	ldr	r7, [pc, #100]	@ (80100c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8010060:	2300      	movs	r3, #0
 8010062:	803b      	strh	r3, [r7, #0]
 8010064:	4f18      	ldr	r7, [pc, #96]	@ (80100c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8010066:	683f      	ldr	r7, [r7, #0]
 8010068:	1aba      	subs	r2, r7, r2
 801006a:	4f18      	ldr	r7, [pc, #96]	@ (80100cc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801006c:	603a      	str	r2, [r7, #0]
 801006e:	4a18      	ldr	r2, [pc, #96]	@ (80100d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8010070:	469c      	mov	ip, r3
 8010072:	8013      	strh	r3, [r2, #0]
 8010074:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8010078:	428b      	cmp	r3, r1
 801007a:	d10d      	bne.n	8010098 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 801007c:	882d      	ldrh	r5, [r5, #0]
 801007e:	6830      	ldr	r0, [r6, #0]
 8010080:	2300      	movs	r3, #0
 8010082:	240e      	movs	r4, #14
 8010084:	429d      	cmp	r5, r3
 8010086:	d90f      	bls.n	80100a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8010088:	fb04 0203 	mla	r2, r4, r3, r0
 801008c:	3301      	adds	r3, #1
 801008e:	7b11      	ldrb	r1, [r2, #12]
 8010090:	f36f 1145 	bfc	r1, #5, #1
 8010094:	7311      	strb	r1, [r2, #12]
 8010096:	e7f5      	b.n	8010084 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8010098:	6822      	ldr	r2, [r4, #0]
 801009a:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801009e:	6802      	ldr	r2, [r0, #0]
 80100a0:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 80100a4:	3301      	adds	r3, #1
 80100a6:	e7e7      	b.n	8010078 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 80100a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80100aa:	bf00      	nop
 80100ac:	20011a60 	.word	0x20011a60
 80100b0:	20011a7c 	.word	0x20011a7c
 80100b4:	20011a80 	.word	0x20011a80
 80100b8:	20011a74 	.word	0x20011a74
 80100bc:	20011a64 	.word	0x20011a64
 80100c0:	20011a6c 	.word	0x20011a6c
 80100c4:	20011a7e 	.word	0x20011a7e
 80100c8:	20011a68 	.word	0x20011a68
 80100cc:	20011a78 	.word	0x20011a78
 80100d0:	20011a70 	.word	0x20011a70

080100d4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 80100d4:	4b06      	ldr	r3, [pc, #24]	@ (80100f0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 80100d6:	681b      	ldr	r3, [r3, #0]
 80100d8:	b943      	cbnz	r3, 80100ec <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80100da:	b139      	cbz	r1, 80100ec <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80100dc:	4b05      	ldr	r3, [pc, #20]	@ (80100f4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 80100de:	801a      	strh	r2, [r3, #0]
 80100e0:	4b05      	ldr	r3, [pc, #20]	@ (80100f8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 80100e2:	6019      	str	r1, [r3, #0]
 80100e4:	4b05      	ldr	r3, [pc, #20]	@ (80100fc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 80100e6:	6018      	str	r0, [r3, #0]
 80100e8:	f7ff bf96 	b.w	8010018 <_ZN8touchgfx6Bitmap10clearCacheEv>
 80100ec:	4770      	bx	lr
 80100ee:	bf00      	nop
 80100f0:	20011a6c 	.word	0x20011a6c
 80100f4:	20011a80 	.word	0x20011a80
 80100f8:	20011a68 	.word	0x20011a68
 80100fc:	20011a60 	.word	0x20011a60

08010100 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8010100:	b470      	push	{r4, r5, r6}
 8010102:	4c07      	ldr	r4, [pc, #28]	@ (8010120 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8010104:	6826      	ldr	r6, [r4, #0]
 8010106:	4605      	mov	r5, r0
 8010108:	4610      	mov	r0, r2
 801010a:	9a03      	ldr	r2, [sp, #12]
 801010c:	b936      	cbnz	r6, 801011c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801010e:	6025      	str	r5, [r4, #0]
 8010110:	4c04      	ldr	r4, [pc, #16]	@ (8010124 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8010112:	8021      	strh	r1, [r4, #0]
 8010114:	bc70      	pop	{r4, r5, r6}
 8010116:	4619      	mov	r1, r3
 8010118:	f7ff bfdc 	b.w	80100d4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801011c:	bc70      	pop	{r4, r5, r6}
 801011e:	4770      	bx	lr
 8010120:	20011a84 	.word	0x20011a84
 8010124:	20011a7c 	.word	0x20011a7c

08010128 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8010128:	4a12      	ldr	r2, [pc, #72]	@ (8010174 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801012a:	8803      	ldrh	r3, [r0, #0]
 801012c:	8812      	ldrh	r2, [r2, #0]
 801012e:	4293      	cmp	r3, r2
 8010130:	d207      	bcs.n	8010142 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8010132:	4a11      	ldr	r2, [pc, #68]	@ (8010178 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8010134:	6812      	ldr	r2, [r2, #0]
 8010136:	2114      	movs	r1, #20
 8010138:	fb01 2303 	mla	r3, r1, r3, r2
 801013c:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8010140:	4770      	bx	lr
 8010142:	490e      	ldr	r1, [pc, #56]	@ (801017c <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8010144:	8809      	ldrh	r1, [r1, #0]
 8010146:	4411      	add	r1, r2
 8010148:	428b      	cmp	r3, r1
 801014a:	da04      	bge.n	8010156 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801014c:	1a9b      	subs	r3, r3, r2
 801014e:	4a0c      	ldr	r2, [pc, #48]	@ (8010180 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8010150:	210e      	movs	r1, #14
 8010152:	6812      	ldr	r2, [r2, #0]
 8010154:	e7f0      	b.n	8010138 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8010156:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801015a:	4293      	cmp	r3, r2
 801015c:	d108      	bne.n	8010170 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801015e:	4b09      	ldr	r3, [pc, #36]	@ (8010184 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8010160:	781b      	ldrb	r3, [r3, #0]
 8010162:	b91b      	cbnz	r3, 801016c <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8010164:	4b08      	ldr	r3, [pc, #32]	@ (8010188 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8010166:	f9b3 0000 	ldrsh.w	r0, [r3]
 801016a:	4770      	bx	lr
 801016c:	4b07      	ldr	r3, [pc, #28]	@ (801018c <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801016e:	e7fa      	b.n	8010166 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8010170:	2000      	movs	r0, #0
 8010172:	4770      	bx	lr
 8010174:	20011a7c 	.word	0x20011a7c
 8010178:	20011a84 	.word	0x20011a84
 801017c:	20011a80 	.word	0x20011a80
 8010180:	20011a64 	.word	0x20011a64
 8010184:	200119f4 	.word	0x200119f4
 8010188:	200119f6 	.word	0x200119f6
 801018c:	200119f8 	.word	0x200119f8

08010190 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8010190:	4a12      	ldr	r2, [pc, #72]	@ (80101dc <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8010192:	8803      	ldrh	r3, [r0, #0]
 8010194:	8812      	ldrh	r2, [r2, #0]
 8010196:	4293      	cmp	r3, r2
 8010198:	d207      	bcs.n	80101aa <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801019a:	4a11      	ldr	r2, [pc, #68]	@ (80101e0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801019c:	6812      	ldr	r2, [r2, #0]
 801019e:	2114      	movs	r1, #20
 80101a0:	fb01 2303 	mla	r3, r1, r3, r2
 80101a4:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 80101a8:	4770      	bx	lr
 80101aa:	490e      	ldr	r1, [pc, #56]	@ (80101e4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 80101ac:	8809      	ldrh	r1, [r1, #0]
 80101ae:	4411      	add	r1, r2
 80101b0:	428b      	cmp	r3, r1
 80101b2:	da04      	bge.n	80101be <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 80101b4:	1a9b      	subs	r3, r3, r2
 80101b6:	4a0c      	ldr	r2, [pc, #48]	@ (80101e8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 80101b8:	210e      	movs	r1, #14
 80101ba:	6812      	ldr	r2, [r2, #0]
 80101bc:	e7f0      	b.n	80101a0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 80101be:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80101c2:	4293      	cmp	r3, r2
 80101c4:	d108      	bne.n	80101d8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 80101c6:	4b09      	ldr	r3, [pc, #36]	@ (80101ec <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 80101c8:	781b      	ldrb	r3, [r3, #0]
 80101ca:	b91b      	cbnz	r3, 80101d4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 80101cc:	4b08      	ldr	r3, [pc, #32]	@ (80101f0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 80101ce:	f9b3 0000 	ldrsh.w	r0, [r3]
 80101d2:	4770      	bx	lr
 80101d4:	4b07      	ldr	r3, [pc, #28]	@ (80101f4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 80101d6:	e7fa      	b.n	80101ce <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 80101d8:	2000      	movs	r0, #0
 80101da:	4770      	bx	lr
 80101dc:	20011a7c 	.word	0x20011a7c
 80101e0:	20011a84 	.word	0x20011a84
 80101e4:	20011a80 	.word	0x20011a80
 80101e8:	20011a64 	.word	0x20011a64
 80101ec:	200119f4 	.word	0x200119f4
 80101f0:	200119f8 	.word	0x200119f8
 80101f4:	200119f6 	.word	0x200119f6

080101f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 80101f8:	b530      	push	{r4, r5, lr}
 80101fa:	4a22      	ldr	r2, [pc, #136]	@ (8010284 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 80101fc:	880b      	ldrh	r3, [r1, #0]
 80101fe:	8812      	ldrh	r2, [r2, #0]
 8010200:	4293      	cmp	r3, r2
 8010202:	d213      	bcs.n	801022c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8010204:	4a20      	ldr	r2, [pc, #128]	@ (8010288 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8010206:	6812      	ldr	r2, [r2, #0]
 8010208:	2114      	movs	r1, #20
 801020a:	fb01 2303 	mla	r3, r1, r3, r2
 801020e:	8a1a      	ldrh	r2, [r3, #16]
 8010210:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8010214:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8010218:	8a5b      	ldrh	r3, [r3, #18]
 801021a:	8004      	strh	r4, [r0, #0]
 801021c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8010220:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8010224:	8041      	strh	r1, [r0, #2]
 8010226:	8082      	strh	r2, [r0, #4]
 8010228:	80c3      	strh	r3, [r0, #6]
 801022a:	e024      	b.n	8010276 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 801022c:	4917      	ldr	r1, [pc, #92]	@ (801028c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801022e:	8809      	ldrh	r1, [r1, #0]
 8010230:	4411      	add	r1, r2
 8010232:	428b      	cmp	r3, r1
 8010234:	da10      	bge.n	8010258 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 8010236:	1a9b      	subs	r3, r3, r2
 8010238:	220e      	movs	r2, #14
 801023a:	4353      	muls	r3, r2
 801023c:	4a14      	ldr	r2, [pc, #80]	@ (8010290 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 801023e:	6811      	ldr	r1, [r2, #0]
 8010240:	18ca      	adds	r2, r1, r3
 8010242:	5ecd      	ldrsh	r5, [r1, r3]
 8010244:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 8010248:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 801024c:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 8010250:	8005      	strh	r5, [r0, #0]
 8010252:	8044      	strh	r4, [r0, #2]
 8010254:	8081      	strh	r1, [r0, #4]
 8010256:	e7e7      	b.n	8010228 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8010258:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801025c:	4293      	cmp	r3, r2
 801025e:	d10b      	bne.n	8010278 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 8010260:	4b0c      	ldr	r3, [pc, #48]	@ (8010294 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 8010262:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010266:	4b0c      	ldr	r3, [pc, #48]	@ (8010298 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 8010268:	8081      	strh	r1, [r0, #4]
 801026a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801026e:	80c2      	strh	r2, [r0, #6]
 8010270:	2300      	movs	r3, #0
 8010272:	8003      	strh	r3, [r0, #0]
 8010274:	8043      	strh	r3, [r0, #2]
 8010276:	bd30      	pop	{r4, r5, pc}
 8010278:	2300      	movs	r3, #0
 801027a:	8003      	strh	r3, [r0, #0]
 801027c:	8043      	strh	r3, [r0, #2]
 801027e:	8083      	strh	r3, [r0, #4]
 8010280:	e7d2      	b.n	8010228 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8010282:	bf00      	nop
 8010284:	20011a7c 	.word	0x20011a7c
 8010288:	20011a84 	.word	0x20011a84
 801028c:	20011a80 	.word	0x20011a80
 8010290:	20011a64 	.word	0x20011a64
 8010294:	200119f0 	.word	0x200119f0
 8010298:	200119f2 	.word	0x200119f2

0801029c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801029c:	4a17      	ldr	r2, [pc, #92]	@ (80102fc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801029e:	8803      	ldrh	r3, [r0, #0]
 80102a0:	8812      	ldrh	r2, [r2, #0]
 80102a2:	4293      	cmp	r3, r2
 80102a4:	d213      	bcs.n	80102ce <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 80102a6:	4a16      	ldr	r2, [pc, #88]	@ (8010300 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 80102a8:	6812      	ldr	r2, [r2, #0]
 80102aa:	2114      	movs	r1, #20
 80102ac:	fb01 2303 	mla	r3, r1, r3, r2
 80102b0:	8a1a      	ldrh	r2, [r3, #16]
 80102b2:	8919      	ldrh	r1, [r3, #8]
 80102b4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80102b8:	428a      	cmp	r2, r1
 80102ba:	db1d      	blt.n	80102f8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80102bc:	8a58      	ldrh	r0, [r3, #18]
 80102be:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80102c2:	895b      	ldrh	r3, [r3, #10]
 80102c4:	4298      	cmp	r0, r3
 80102c6:	bfac      	ite	ge
 80102c8:	2000      	movge	r0, #0
 80102ca:	2001      	movlt	r0, #1
 80102cc:	4770      	bx	lr
 80102ce:	490d      	ldr	r1, [pc, #52]	@ (8010304 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 80102d0:	8809      	ldrh	r1, [r1, #0]
 80102d2:	4411      	add	r1, r2
 80102d4:	428b      	cmp	r3, r1
 80102d6:	da0d      	bge.n	80102f4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 80102d8:	1a9b      	subs	r3, r3, r2
 80102da:	4a0b      	ldr	r2, [pc, #44]	@ (8010308 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80102dc:	6812      	ldr	r2, [r2, #0]
 80102de:	210e      	movs	r1, #14
 80102e0:	fb01 2303 	mla	r3, r1, r3, r2
 80102e4:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 80102e8:	891a      	ldrh	r2, [r3, #8]
 80102ea:	4291      	cmp	r1, r2
 80102ec:	db04      	blt.n	80102f8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80102ee:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 80102f2:	e7e6      	b.n	80102c2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 80102f4:	2000      	movs	r0, #0
 80102f6:	4770      	bx	lr
 80102f8:	2001      	movs	r0, #1
 80102fa:	4770      	bx	lr
 80102fc:	20011a7c 	.word	0x20011a7c
 8010300:	20011a84 	.word	0x20011a84
 8010304:	20011a80 	.word	0x20011a80
 8010308:	20011a64 	.word	0x20011a64

0801030c <_ZNK8touchgfx6Bitmap7getDataEv>:
 801030c:	4a12      	ldr	r2, [pc, #72]	@ (8010358 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801030e:	8803      	ldrh	r3, [r0, #0]
 8010310:	8811      	ldrh	r1, [r2, #0]
 8010312:	428b      	cmp	r3, r1
 8010314:	d20b      	bcs.n	801032e <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8010316:	4a11      	ldr	r2, [pc, #68]	@ (801035c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8010318:	6812      	ldr	r2, [r2, #0]
 801031a:	b112      	cbz	r2, 8010322 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801031c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8010320:	b9c0      	cbnz	r0, 8010354 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8010322:	4a0f      	ldr	r2, [pc, #60]	@ (8010360 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8010324:	6811      	ldr	r1, [r2, #0]
 8010326:	2214      	movs	r2, #20
 8010328:	4353      	muls	r3, r2
 801032a:	58c8      	ldr	r0, [r1, r3]
 801032c:	4770      	bx	lr
 801032e:	4a0d      	ldr	r2, [pc, #52]	@ (8010364 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8010330:	8812      	ldrh	r2, [r2, #0]
 8010332:	440a      	add	r2, r1
 8010334:	4293      	cmp	r3, r2
 8010336:	da04      	bge.n	8010342 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8010338:	4a08      	ldr	r2, [pc, #32]	@ (801035c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801033a:	6812      	ldr	r2, [r2, #0]
 801033c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8010340:	4770      	bx	lr
 8010342:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8010346:	4293      	cmp	r3, r2
 8010348:	d103      	bne.n	8010352 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801034a:	4b07      	ldr	r3, [pc, #28]	@ (8010368 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801034c:	681b      	ldr	r3, [r3, #0]
 801034e:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 8010350:	4770      	bx	lr
 8010352:	2000      	movs	r0, #0
 8010354:	4770      	bx	lr
 8010356:	bf00      	nop
 8010358:	20011a7c 	.word	0x20011a7c
 801035c:	20011a60 	.word	0x20011a60
 8010360:	20011a84 	.word	0x20011a84
 8010364:	20011a80 	.word	0x20011a80
 8010368:	200119fc 	.word	0x200119fc

0801036c <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801036c:	4b24      	ldr	r3, [pc, #144]	@ (8010400 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801036e:	8802      	ldrh	r2, [r0, #0]
 8010370:	8818      	ldrh	r0, [r3, #0]
 8010372:	4282      	cmp	r2, r0
 8010374:	d221      	bcs.n	80103ba <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8010376:	4b23      	ldr	r3, [pc, #140]	@ (8010404 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8010378:	6819      	ldr	r1, [r3, #0]
 801037a:	2314      	movs	r3, #20
 801037c:	fb03 1302 	mla	r3, r3, r2, r1
 8010380:	6858      	ldr	r0, [r3, #4]
 8010382:	2800      	cmp	r0, #0
 8010384:	d03a      	beq.n	80103fc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8010386:	4920      	ldr	r1, [pc, #128]	@ (8010408 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8010388:	6809      	ldr	r1, [r1, #0]
 801038a:	2900      	cmp	r1, #0
 801038c:	d036      	beq.n	80103fc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801038e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8010392:	2900      	cmp	r1, #0
 8010394:	d032      	beq.n	80103fc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8010396:	891a      	ldrh	r2, [r3, #8]
 8010398:	8958      	ldrh	r0, [r3, #10]
 801039a:	4350      	muls	r0, r2
 801039c:	7c5a      	ldrb	r2, [r3, #17]
 801039e:	7cdb      	ldrb	r3, [r3, #19]
 80103a0:	0952      	lsrs	r2, r2, #5
 80103a2:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80103a6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80103aa:	2b0b      	cmp	r3, #11
 80103ac:	bf18      	it	ne
 80103ae:	0040      	lslne	r0, r0, #1
 80103b0:	3003      	adds	r0, #3
 80103b2:	f020 0003 	bic.w	r0, r0, #3
 80103b6:	4408      	add	r0, r1
 80103b8:	4770      	bx	lr
 80103ba:	4b14      	ldr	r3, [pc, #80]	@ (801040c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 80103bc:	881b      	ldrh	r3, [r3, #0]
 80103be:	4403      	add	r3, r0
 80103c0:	429a      	cmp	r2, r3
 80103c2:	da1a      	bge.n	80103fa <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80103c4:	4b12      	ldr	r3, [pc, #72]	@ (8010410 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 80103c6:	681b      	ldr	r3, [r3, #0]
 80103c8:	1a10      	subs	r0, r2, r0
 80103ca:	210e      	movs	r1, #14
 80103cc:	fb01 3000 	mla	r0, r1, r0, r3
 80103d0:	7b03      	ldrb	r3, [r0, #12]
 80103d2:	f003 031f 	and.w	r3, r3, #31
 80103d6:	2b0b      	cmp	r3, #11
 80103d8:	d10b      	bne.n	80103f2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 80103da:	8903      	ldrh	r3, [r0, #8]
 80103dc:	8940      	ldrh	r0, [r0, #10]
 80103de:	4358      	muls	r0, r3
 80103e0:	4b09      	ldr	r3, [pc, #36]	@ (8010408 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80103e2:	6819      	ldr	r1, [r3, #0]
 80103e4:	3003      	adds	r0, #3
 80103e6:	f020 0303 	bic.w	r3, r0, #3
 80103ea:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80103ee:	4418      	add	r0, r3
 80103f0:	4770      	bx	lr
 80103f2:	2b0d      	cmp	r3, #13
 80103f4:	d101      	bne.n	80103fa <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80103f6:	300d      	adds	r0, #13
 80103f8:	4770      	bx	lr
 80103fa:	2000      	movs	r0, #0
 80103fc:	4770      	bx	lr
 80103fe:	bf00      	nop
 8010400:	20011a7c 	.word	0x20011a7c
 8010404:	20011a84 	.word	0x20011a84
 8010408:	20011a60 	.word	0x20011a60
 801040c:	20011a80 	.word	0x20011a80
 8010410:	20011a64 	.word	0x20011a64

08010414 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8010414:	b510      	push	{r4, lr}
 8010416:	4a17      	ldr	r2, [pc, #92]	@ (8010474 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8010418:	8803      	ldrh	r3, [r0, #0]
 801041a:	8812      	ldrh	r2, [r2, #0]
 801041c:	4293      	cmp	r3, r2
 801041e:	d20c      	bcs.n	801043a <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8010420:	4a15      	ldr	r2, [pc, #84]	@ (8010478 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8010422:	6812      	ldr	r2, [r2, #0]
 8010424:	2114      	movs	r1, #20
 8010426:	fb01 2303 	mla	r3, r1, r3, r2
 801042a:	7c58      	ldrb	r0, [r3, #17]
 801042c:	0942      	lsrs	r2, r0, #5
 801042e:	7cd8      	ldrb	r0, [r3, #19]
 8010430:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8010434:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8010438:	bd10      	pop	{r4, pc}
 801043a:	4910      	ldr	r1, [pc, #64]	@ (801047c <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801043c:	8809      	ldrh	r1, [r1, #0]
 801043e:	4411      	add	r1, r2
 8010440:	428b      	cmp	r3, r1
 8010442:	da09      	bge.n	8010458 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8010444:	1a9b      	subs	r3, r3, r2
 8010446:	4a0e      	ldr	r2, [pc, #56]	@ (8010480 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8010448:	6812      	ldr	r2, [r2, #0]
 801044a:	210e      	movs	r1, #14
 801044c:	fb01 2303 	mla	r3, r1, r3, r2
 8010450:	7b18      	ldrb	r0, [r3, #12]
 8010452:	f000 001f 	and.w	r0, r0, #31
 8010456:	e7ef      	b.n	8010438 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8010458:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801045c:	4293      	cmp	r3, r2
 801045e:	d106      	bne.n	801046e <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8010460:	f7f2 f9da 	bl	8002818 <_ZN8touchgfx3HAL3lcdEv>
 8010464:	6803      	ldr	r3, [r0, #0]
 8010466:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801046a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801046c:	4718      	bx	r3
 801046e:	2000      	movs	r0, #0
 8010470:	e7e2      	b.n	8010438 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8010472:	bf00      	nop
 8010474:	20011a7c 	.word	0x20011a7c
 8010478:	20011a84 	.word	0x20011a84
 801047c:	20011a80 	.word	0x20011a80
 8010480:	20011a64 	.word	0x20011a64

08010484 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8010484:	2010      	movs	r0, #16
 8010486:	4770      	bx	lr

08010488 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8010488:	2000      	movs	r0, #0
 801048a:	4770      	bx	lr

0801048c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801048c:	4b02      	ldr	r3, [pc, #8]	@ (8010498 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801048e:	8818      	ldrh	r0, [r3, #0]
 8010490:	0040      	lsls	r0, r0, #1
 8010492:	b280      	uxth	r0, r0
 8010494:	4770      	bx	lr
 8010496:	bf00      	nop
 8010498:	200119f6 	.word	0x200119f6

0801049c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801049c:	2bff      	cmp	r3, #255	@ 0xff
 801049e:	d050      	beq.n	8010542 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 80104a0:	2a0b      	cmp	r2, #11
 80104a2:	d04a      	beq.n	801053a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80104a4:	d80e      	bhi.n	80104c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 80104a6:	2a03      	cmp	r2, #3
 80104a8:	d03f      	beq.n	801052a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 80104aa:	d804      	bhi.n	80104b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 80104ac:	2a01      	cmp	r2, #1
 80104ae:	d03e      	beq.n	801052e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 80104b0:	d93f      	bls.n	8010532 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 80104b2:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 80104b4:	4770      	bx	lr
 80104b6:	2a09      	cmp	r2, #9
 80104b8:	d03f      	beq.n	801053a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80104ba:	d83c      	bhi.n	8010536 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80104bc:	2a08      	cmp	r2, #8
 80104be:	d03a      	beq.n	8010536 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80104c0:	2000      	movs	r0, #0
 80104c2:	4770      	bx	lr
 80104c4:	2a2f      	cmp	r2, #47	@ 0x2f
 80104c6:	d024      	beq.n	8010512 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 80104c8:	d80d      	bhi.n	80104e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 80104ca:	2a2d      	cmp	r2, #45	@ 0x2d
 80104cc:	d014      	beq.n	80104f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 80104ce:	d826      	bhi.n	801051e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 80104d0:	2a2c      	cmp	r2, #44	@ 0x2c
 80104d2:	d1f5      	bne.n	80104c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80104d4:	684b      	ldr	r3, [r1, #4]
 80104d6:	781b      	ldrb	r3, [r3, #0]
 80104d8:	2b01      	cmp	r3, #1
 80104da:	d018      	beq.n	801050e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 80104dc:	d323      	bcc.n	8010526 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 80104de:	2b02      	cmp	r3, #2
 80104e0:	d1ee      	bne.n	80104c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80104e2:	68c0      	ldr	r0, [r0, #12]
 80104e4:	4770      	bx	lr
 80104e6:	2a31      	cmp	r2, #49	@ 0x31
 80104e8:	d004      	beq.n	80104f4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 80104ea:	d328      	bcc.n	801053e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80104ec:	2a32      	cmp	r2, #50	@ 0x32
 80104ee:	d026      	beq.n	801053e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80104f0:	2a33      	cmp	r2, #51	@ 0x33
 80104f2:	d1e5      	bne.n	80104c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80104f4:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 80104f6:	4770      	bx	lr
 80104f8:	684b      	ldr	r3, [r1, #4]
 80104fa:	781b      	ldrb	r3, [r3, #0]
 80104fc:	2b01      	cmp	r3, #1
 80104fe:	d004      	beq.n	801050a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8010500:	d30b      	bcc.n	801051a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8010502:	2b02      	cmp	r3, #2
 8010504:	d1dc      	bne.n	80104c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010506:	6940      	ldr	r0, [r0, #20]
 8010508:	4770      	bx	lr
 801050a:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 801050c:	4770      	bx	lr
 801050e:	69c0      	ldr	r0, [r0, #28]
 8010510:	4770      	bx	lr
 8010512:	684b      	ldr	r3, [r1, #4]
 8010514:	781b      	ldrb	r3, [r3, #0]
 8010516:	2b00      	cmp	r3, #0
 8010518:	d1d2      	bne.n	80104c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801051a:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 801051c:	4770      	bx	lr
 801051e:	684b      	ldr	r3, [r1, #4]
 8010520:	781b      	ldrb	r3, [r3, #0]
 8010522:	2b00      	cmp	r3, #0
 8010524:	d1cc      	bne.n	80104c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010526:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 8010528:	4770      	bx	lr
 801052a:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 801052c:	4770      	bx	lr
 801052e:	6d40      	ldr	r0, [r0, #84]	@ 0x54
 8010530:	4770      	bx	lr
 8010532:	6c40      	ldr	r0, [r0, #68]	@ 0x44
 8010534:	4770      	bx	lr
 8010536:	6dc0      	ldr	r0, [r0, #92]	@ 0x5c
 8010538:	4770      	bx	lr
 801053a:	6e40      	ldr	r0, [r0, #100]	@ 0x64
 801053c:	4770      	bx	lr
 801053e:	6ec0      	ldr	r0, [r0, #108]	@ 0x6c
 8010540:	4770      	bx	lr
 8010542:	2a0b      	cmp	r2, #11
 8010544:	d049      	beq.n	80105da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8010546:	d80e      	bhi.n	8010566 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8010548:	2a03      	cmp	r2, #3
 801054a:	d040      	beq.n	80105ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801054c:	d804      	bhi.n	8010558 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801054e:	2a01      	cmp	r2, #1
 8010550:	d03f      	beq.n	80105d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8010552:	d940      	bls.n	80105d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8010554:	6c00      	ldr	r0, [r0, #64]	@ 0x40
 8010556:	4770      	bx	lr
 8010558:	2a09      	cmp	r2, #9
 801055a:	d03e      	beq.n	80105da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801055c:	d801      	bhi.n	8010562 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801055e:	2a08      	cmp	r2, #8
 8010560:	d1ae      	bne.n	80104c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010562:	6e00      	ldr	r0, [r0, #96]	@ 0x60
 8010564:	4770      	bx	lr
 8010566:	2a2f      	cmp	r2, #47	@ 0x2f
 8010568:	d024      	beq.n	80105b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801056a:	d80d      	bhi.n	8010588 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801056c:	2a2d      	cmp	r2, #45	@ 0x2d
 801056e:	d014      	beq.n	801059a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8010570:	d826      	bhi.n	80105c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8010572:	2a2c      	cmp	r2, #44	@ 0x2c
 8010574:	d1a4      	bne.n	80104c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010576:	684b      	ldr	r3, [r1, #4]
 8010578:	781b      	ldrb	r3, [r3, #0]
 801057a:	2b01      	cmp	r3, #1
 801057c:	d018      	beq.n	80105b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801057e:	d324      	bcc.n	80105ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8010580:	2b02      	cmp	r3, #2
 8010582:	d19d      	bne.n	80104c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010584:	6900      	ldr	r0, [r0, #16]
 8010586:	4770      	bx	lr
 8010588:	2a31      	cmp	r2, #49	@ 0x31
 801058a:	d004      	beq.n	8010596 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801058c:	d327      	bcc.n	80105de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801058e:	2a32      	cmp	r2, #50	@ 0x32
 8010590:	d025      	beq.n	80105de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8010592:	2a33      	cmp	r2, #51	@ 0x33
 8010594:	d194      	bne.n	80104c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010596:	6f80      	ldr	r0, [r0, #120]	@ 0x78
 8010598:	4770      	bx	lr
 801059a:	684b      	ldr	r3, [r1, #4]
 801059c:	781b      	ldrb	r3, [r3, #0]
 801059e:	2b01      	cmp	r3, #1
 80105a0:	d004      	beq.n	80105ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 80105a2:	d30b      	bcc.n	80105bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 80105a4:	2b02      	cmp	r3, #2
 80105a6:	d18b      	bne.n	80104c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80105a8:	6980      	ldr	r0, [r0, #24]
 80105aa:	4770      	bx	lr
 80105ac:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 80105ae:	4770      	bx	lr
 80105b0:	6a00      	ldr	r0, [r0, #32]
 80105b2:	4770      	bx	lr
 80105b4:	684b      	ldr	r3, [r1, #4]
 80105b6:	781b      	ldrb	r3, [r3, #0]
 80105b8:	2b00      	cmp	r3, #0
 80105ba:	d181      	bne.n	80104c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80105bc:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 80105be:	4770      	bx	lr
 80105c0:	684b      	ldr	r3, [r1, #4]
 80105c2:	781b      	ldrb	r3, [r3, #0]
 80105c4:	2b00      	cmp	r3, #0
 80105c6:	f47f af7b 	bne.w	80104c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80105ca:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 80105cc:	4770      	bx	lr
 80105ce:	6d00      	ldr	r0, [r0, #80]	@ 0x50
 80105d0:	4770      	bx	lr
 80105d2:	6d80      	ldr	r0, [r0, #88]	@ 0x58
 80105d4:	4770      	bx	lr
 80105d6:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 80105d8:	4770      	bx	lr
 80105da:	6e80      	ldr	r0, [r0, #104]	@ 0x68
 80105dc:	4770      	bx	lr
 80105de:	6f00      	ldr	r0, [r0, #112]	@ 0x70
 80105e0:	4770      	bx	lr

080105e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80105e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80105e6:	b087      	sub	sp, #28
 80105e8:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80105ea:	9205      	str	r2, [sp, #20]
 80105ec:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80105f0:	9202      	str	r2, [sp, #8]
 80105f2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 80105f6:	9101      	str	r1, [sp, #4]
 80105f8:	6841      	ldr	r1, [r0, #4]
 80105fa:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 80105fe:	fb01 2404 	mla	r4, r1, r4, r2
 8010602:	6802      	ldr	r2, [r0, #0]
 8010604:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010608:	f8de 2000 	ldr.w	r2, [lr]
 801060c:	9203      	str	r2, [sp, #12]
 801060e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8010612:	3204      	adds	r2, #4
 8010614:	9204      	str	r2, [sp, #16]
 8010616:	9a02      	ldr	r2, [sp, #8]
 8010618:	43d6      	mvns	r6, r2
 801061a:	b2f6      	uxtb	r6, r6
 801061c:	9a01      	ldr	r2, [sp, #4]
 801061e:	2a00      	cmp	r2, #0
 8010620:	dc03      	bgt.n	801062a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8010622:	9a05      	ldr	r2, [sp, #20]
 8010624:	2a00      	cmp	r2, #0
 8010626:	f340 8129 	ble.w	801087c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801062a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801062c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8010630:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8010634:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8010638:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801063a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801063e:	2b00      	cmp	r3, #0
 8010640:	dd0e      	ble.n	8010660 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010642:	1408      	asrs	r0, r1, #16
 8010644:	d405      	bmi.n	8010652 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8010646:	4560      	cmp	r0, ip
 8010648:	da03      	bge.n	8010652 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801064a:	1410      	asrs	r0, r2, #16
 801064c:	d401      	bmi.n	8010652 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801064e:	42b8      	cmp	r0, r7
 8010650:	db07      	blt.n	8010662 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8010652:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8010654:	4401      	add	r1, r0
 8010656:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8010658:	3b01      	subs	r3, #1
 801065a:	4402      	add	r2, r0
 801065c:	3402      	adds	r4, #2
 801065e:	e7ee      	b.n	801063e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8010660:	d071      	beq.n	8010746 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8010662:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8010664:	1e58      	subs	r0, r3, #1
 8010666:	fb05 1500 	mla	r5, r5, r0, r1
 801066a:	142d      	asrs	r5, r5, #16
 801066c:	d45f      	bmi.n	801072e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801066e:	4565      	cmp	r5, ip
 8010670:	da5d      	bge.n	801072e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8010672:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8010674:	fb05 2000 	mla	r0, r5, r0, r2
 8010678:	1400      	asrs	r0, r0, #16
 801067a:	d458      	bmi.n	801072e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801067c:	42b8      	cmp	r0, r7
 801067e:	da56      	bge.n	801072e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8010680:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8010684:	4699      	mov	r9, r3
 8010686:	46a2      	mov	sl, r4
 8010688:	f1b9 0f00 	cmp.w	r9, #0
 801068c:	dd57      	ble.n	801073e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801068e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8010692:	9803      	ldr	r0, [sp, #12]
 8010694:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8010698:	140d      	asrs	r5, r1, #16
 801069a:	fb07 000c 	mla	r0, r7, ip, r0
 801069e:	f109 39ff 	add.w	r9, r9, #4294967295
 80106a2:	5d40      	ldrb	r0, [r0, r5]
 80106a4:	9d04      	ldr	r5, [sp, #16]
 80106a6:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80106aa:	f8ba 5000 	ldrh.w	r5, [sl]
 80106ae:	122f      	asrs	r7, r5, #8
 80106b0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80106b4:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80106b8:	fb17 f706 	smulbb	r7, r7, r6
 80106bc:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80106c0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80106c4:	00ed      	lsls	r5, r5, #3
 80106c6:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80106ca:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 80106ce:	10c7      	asrs	r7, r0, #3
 80106d0:	b2ed      	uxtb	r5, r5
 80106d2:	00c0      	lsls	r0, r0, #3
 80106d4:	fb18 f806 	smulbb	r8, r8, r6
 80106d8:	fb15 f506 	smulbb	r5, r5, r6
 80106dc:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80106e0:	b2c0      	uxtb	r0, r0
 80106e2:	fa1f fc8c 	uxth.w	ip, ip
 80106e6:	fb07 870b 	mla	r7, r7, fp, r8
 80106ea:	fb00 500b 	mla	r0, r0, fp, r5
 80106ee:	b280      	uxth	r0, r0
 80106f0:	b2bf      	uxth	r7, r7
 80106f2:	f10c 0501 	add.w	r5, ip, #1
 80106f6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80106fa:	f107 0801 	add.w	r8, r7, #1
 80106fe:	1c45      	adds	r5, r0, #1
 8010700:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8010704:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8010708:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801070a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801070e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8010712:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8010716:	ea45 0c0c 	orr.w	ip, r5, ip
 801071a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801071e:	4401      	add	r1, r0
 8010720:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8010722:	ea4c 0c08 	orr.w	ip, ip, r8
 8010726:	f82a cb02 	strh.w	ip, [sl], #2
 801072a:	4402      	add	r2, r0
 801072c:	e7ac      	b.n	8010688 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801072e:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8010732:	f04f 0800 	mov.w	r8, #0
 8010736:	eb03 0008 	add.w	r0, r3, r8
 801073a:	2800      	cmp	r0, #0
 801073c:	dc41      	bgt.n	80107c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801073e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010742:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010746:	9b01      	ldr	r3, [sp, #4]
 8010748:	2b00      	cmp	r3, #0
 801074a:	f340 8097 	ble.w	801087c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801074e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010752:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8010756:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801075a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801075c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010760:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010764:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010768:	eef0 6a62 	vmov.f32	s13, s5
 801076c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010770:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010774:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010778:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 801077c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010780:	eef0 6a43 	vmov.f32	s13, s6
 8010784:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010788:	ee12 2a90 	vmov	r2, s5
 801078c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010790:	fb92 f3f3 	sdiv	r3, r2, r3
 8010794:	ee13 2a10 	vmov	r2, s6
 8010798:	9313      	str	r3, [sp, #76]	@ 0x4c
 801079a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801079c:	fb92 f3f3 	sdiv	r3, r2, r3
 80107a0:	9314      	str	r3, [sp, #80]	@ 0x50
 80107a2:	9b01      	ldr	r3, [sp, #4]
 80107a4:	9a05      	ldr	r2, [sp, #20]
 80107a6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80107aa:	3b01      	subs	r3, #1
 80107ac:	9301      	str	r3, [sp, #4]
 80107ae:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 80107b2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80107b4:	eeb0 3a67 	vmov.f32	s6, s15
 80107b8:	bf08      	it	eq
 80107ba:	4613      	moveq	r3, r2
 80107bc:	eef0 2a47 	vmov.f32	s5, s14
 80107c0:	e72c      	b.n	801061c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80107c2:	140f      	asrs	r7, r1, #16
 80107c4:	d453      	bmi.n	801086e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80107c6:	f8de 5008 	ldr.w	r5, [lr, #8]
 80107ca:	42bd      	cmp	r5, r7
 80107cc:	dd4f      	ble.n	801086e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80107ce:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80107d2:	d44c      	bmi.n	801086e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80107d4:	f8de 000c 	ldr.w	r0, [lr, #12]
 80107d8:	4560      	cmp	r0, ip
 80107da:	dd48      	ble.n	801086e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80107dc:	9803      	ldr	r0, [sp, #12]
 80107de:	b22d      	sxth	r5, r5
 80107e0:	fb0c 0505 	mla	r5, ip, r5, r0
 80107e4:	5de8      	ldrb	r0, [r5, r7]
 80107e6:	9d04      	ldr	r5, [sp, #16]
 80107e8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80107ec:	f06f 0501 	mvn.w	r5, #1
 80107f0:	fb05 fb08 	mul.w	fp, r5, r8
 80107f4:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80107f8:	f834 500b 	ldrh.w	r5, [r4, fp]
 80107fc:	122f      	asrs	r7, r5, #8
 80107fe:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8010802:	fb17 f706 	smulbb	r7, r7, r6
 8010806:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801080a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801080e:	00ed      	lsls	r5, r5, #3
 8010810:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8010814:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8010818:	10c7      	asrs	r7, r0, #3
 801081a:	b2ed      	uxtb	r5, r5
 801081c:	00c0      	lsls	r0, r0, #3
 801081e:	fb19 f906 	smulbb	r9, r9, r6
 8010822:	fb15 f506 	smulbb	r5, r5, r6
 8010826:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801082a:	b2c0      	uxtb	r0, r0
 801082c:	fa1f fc8c 	uxth.w	ip, ip
 8010830:	fb07 970a 	mla	r7, r7, sl, r9
 8010834:	fb00 500a 	mla	r0, r0, sl, r5
 8010838:	b2bf      	uxth	r7, r7
 801083a:	b280      	uxth	r0, r0
 801083c:	f10c 0501 	add.w	r5, ip, #1
 8010840:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8010844:	f107 0901 	add.w	r9, r7, #1
 8010848:	1c45      	adds	r5, r0, #1
 801084a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801084e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8010852:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8010856:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801085a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801085e:	ea45 0c0c 	orr.w	ip, r5, ip
 8010862:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8010866:	ea4c 0c09 	orr.w	ip, ip, r9
 801086a:	f824 c00b 	strh.w	ip, [r4, fp]
 801086e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8010870:	4401      	add	r1, r0
 8010872:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8010874:	f108 38ff 	add.w	r8, r8, #4294967295
 8010878:	4402      	add	r2, r0
 801087a:	e75c      	b.n	8010736 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801087c:	b007      	add	sp, #28
 801087e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010882 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010882:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010886:	b085      	sub	sp, #20
 8010888:	4693      	mov	fp, r2
 801088a:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801088c:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801088e:	6870      	ldr	r0, [r6, #4]
 8010890:	9100      	str	r1, [sp, #0]
 8010892:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8010896:	fb00 2404 	mla	r4, r0, r4, r2
 801089a:	6832      	ldr	r2, [r6, #0]
 801089c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80108a0:	682a      	ldr	r2, [r5, #0]
 80108a2:	9201      	str	r2, [sp, #4]
 80108a4:	686a      	ldr	r2, [r5, #4]
 80108a6:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 80108aa:	3204      	adds	r2, #4
 80108ac:	9202      	str	r2, [sp, #8]
 80108ae:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80108b2:	9a00      	ldr	r2, [sp, #0]
 80108b4:	2a00      	cmp	r2, #0
 80108b6:	dc03      	bgt.n	80108c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80108b8:	f1bb 0f00 	cmp.w	fp, #0
 80108bc:	f340 80a0 	ble.w	8010a00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80108c0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80108c2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80108c6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80108ca:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80108ce:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80108d0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80108d4:	2b00      	cmp	r3, #0
 80108d6:	dd0c      	ble.n	80108f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80108d8:	1406      	asrs	r6, r0, #16
 80108da:	d405      	bmi.n	80108e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80108dc:	454e      	cmp	r6, r9
 80108de:	da03      	bge.n	80108e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80108e0:	1416      	asrs	r6, r2, #16
 80108e2:	d401      	bmi.n	80108e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80108e4:	4546      	cmp	r6, r8
 80108e6:	db05      	blt.n	80108f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80108e8:	4470      	add	r0, lr
 80108ea:	4462      	add	r2, ip
 80108ec:	3b01      	subs	r3, #1
 80108ee:	3402      	adds	r4, #2
 80108f0:	e7f0      	b.n	80108d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80108f2:	d00f      	beq.n	8010914 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80108f4:	1e5e      	subs	r6, r3, #1
 80108f6:	fb0e 0706 	mla	r7, lr, r6, r0
 80108fa:	143f      	asrs	r7, r7, #16
 80108fc:	d541      	bpl.n	8010982 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 80108fe:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8010902:	4698      	mov	r8, r3
 8010904:	9603      	str	r6, [sp, #12]
 8010906:	f1b8 0f00 	cmp.w	r8, #0
 801090a:	dc59      	bgt.n	80109c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801090c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010910:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010914:	9b00      	ldr	r3, [sp, #0]
 8010916:	2b00      	cmp	r3, #0
 8010918:	dd72      	ble.n	8010a00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801091a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801091e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010922:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010926:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8010928:	ee31 1a05 	vadd.f32	s2, s2, s10
 801092c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010930:	eeb0 6a62 	vmov.f32	s12, s5
 8010934:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010938:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801093c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010940:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8010944:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010948:	eeb0 6a43 	vmov.f32	s12, s6
 801094c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010950:	ee12 2a90 	vmov	r2, s5
 8010954:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010958:	fb92 fef3 	sdiv	lr, r2, r3
 801095c:	ee13 2a10 	vmov	r2, s6
 8010960:	fb92 fcf3 	sdiv	ip, r2, r3
 8010964:	9b00      	ldr	r3, [sp, #0]
 8010966:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801096a:	3b01      	subs	r3, #1
 801096c:	9300      	str	r3, [sp, #0]
 801096e:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8010972:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8010974:	eeb0 3a67 	vmov.f32	s6, s15
 8010978:	bf08      	it	eq
 801097a:	465b      	moveq	r3, fp
 801097c:	eef0 2a47 	vmov.f32	s5, s14
 8010980:	e797      	b.n	80108b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8010982:	454f      	cmp	r7, r9
 8010984:	dabb      	bge.n	80108fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8010986:	fb0c 2606 	mla	r6, ip, r6, r2
 801098a:	1436      	asrs	r6, r6, #16
 801098c:	d4b7      	bmi.n	80108fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801098e:	4546      	cmp	r6, r8
 8010990:	dab5      	bge.n	80108fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8010992:	461e      	mov	r6, r3
 8010994:	46a0      	mov	r8, r4
 8010996:	2e00      	cmp	r6, #0
 8010998:	ddb8      	ble.n	801090c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801099a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801099e:	9901      	ldr	r1, [sp, #4]
 80109a0:	1417      	asrs	r7, r2, #16
 80109a2:	ea4f 4920 	mov.w	r9, r0, asr #16
 80109a6:	fb0a 1707 	mla	r7, sl, r7, r1
 80109aa:	9902      	ldr	r1, [sp, #8]
 80109ac:	f817 7009 	ldrb.w	r7, [r7, r9]
 80109b0:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80109b4:	f828 7b02 	strh.w	r7, [r8], #2
 80109b8:	4470      	add	r0, lr
 80109ba:	4462      	add	r2, ip
 80109bc:	3e01      	subs	r6, #1
 80109be:	e7ea      	b.n	8010996 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 80109c0:	ea5f 4920 	movs.w	r9, r0, asr #16
 80109c4:	d417      	bmi.n	80109f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80109c6:	68ae      	ldr	r6, [r5, #8]
 80109c8:	454e      	cmp	r6, r9
 80109ca:	dd14      	ble.n	80109f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80109cc:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80109d0:	d411      	bmi.n	80109f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80109d2:	68ef      	ldr	r7, [r5, #12]
 80109d4:	4557      	cmp	r7, sl
 80109d6:	dd0e      	ble.n	80109f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80109d8:	9f01      	ldr	r7, [sp, #4]
 80109da:	b236      	sxth	r6, r6
 80109dc:	fb0a 7606 	mla	r6, sl, r6, r7
 80109e0:	9f02      	ldr	r7, [sp, #8]
 80109e2:	f816 6009 	ldrb.w	r6, [r6, r9]
 80109e6:	f06f 0101 	mvn.w	r1, #1
 80109ea:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80109ee:	fb01 f608 	mul.w	r6, r1, r8
 80109f2:	9903      	ldr	r1, [sp, #12]
 80109f4:	538f      	strh	r7, [r1, r6]
 80109f6:	4470      	add	r0, lr
 80109f8:	4462      	add	r2, ip
 80109fa:	f108 38ff 	add.w	r8, r8, #4294967295
 80109fe:	e782      	b.n	8010906 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8010a00:	b005      	add	sp, #20
 8010a02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010a06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010a06:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010a0a:	b087      	sub	sp, #28
 8010a0c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8010a0e:	9205      	str	r2, [sp, #20]
 8010a10:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8010a14:	9203      	str	r2, [sp, #12]
 8010a16:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8010a1a:	9102      	str	r1, [sp, #8]
 8010a1c:	6861      	ldr	r1, [r4, #4]
 8010a1e:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8010a22:	fb01 2000 	mla	r0, r1, r0, r2
 8010a26:	6822      	ldr	r2, [r4, #0]
 8010a28:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8010a2c:	9200      	str	r2, [sp, #0]
 8010a2e:	f8dc 2000 	ldr.w	r2, [ip]
 8010a32:	9204      	str	r2, [sp, #16]
 8010a34:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8010a38:	3204      	adds	r2, #4
 8010a3a:	9201      	str	r2, [sp, #4]
 8010a3c:	9a03      	ldr	r2, [sp, #12]
 8010a3e:	43d5      	mvns	r5, r2
 8010a40:	b2ed      	uxtb	r5, r5
 8010a42:	9a02      	ldr	r2, [sp, #8]
 8010a44:	2a00      	cmp	r2, #0
 8010a46:	dc03      	bgt.n	8010a50 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8010a48:	9a05      	ldr	r2, [sp, #20]
 8010a4a:	2a00      	cmp	r2, #0
 8010a4c:	f340 812c 	ble.w	8010ca8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8010a50:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8010a52:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8010a56:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8010a5a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8010a5e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8010a60:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8010a64:	2b00      	cmp	r3, #0
 8010a66:	dd10      	ble.n	8010a8a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8010a68:	140c      	asrs	r4, r1, #16
 8010a6a:	d405      	bmi.n	8010a78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010a6c:	4574      	cmp	r4, lr
 8010a6e:	da03      	bge.n	8010a78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010a70:	1414      	asrs	r4, r2, #16
 8010a72:	d401      	bmi.n	8010a78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010a74:	42bc      	cmp	r4, r7
 8010a76:	db09      	blt.n	8010a8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8010a78:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8010a7a:	9800      	ldr	r0, [sp, #0]
 8010a7c:	4421      	add	r1, r4
 8010a7e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8010a80:	3002      	adds	r0, #2
 8010a82:	4422      	add	r2, r4
 8010a84:	3b01      	subs	r3, #1
 8010a86:	9000      	str	r0, [sp, #0]
 8010a88:	e7ec      	b.n	8010a64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8010a8a:	d071      	beq.n	8010b70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8010a8c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8010a8e:	1e5c      	subs	r4, r3, #1
 8010a90:	fb06 1604 	mla	r6, r6, r4, r1
 8010a94:	1436      	asrs	r6, r6, #16
 8010a96:	d45d      	bmi.n	8010b54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8010a98:	4576      	cmp	r6, lr
 8010a9a:	da5b      	bge.n	8010b54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8010a9c:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 8010a9e:	fb06 2404 	mla	r4, r6, r4, r2
 8010aa2:	1424      	asrs	r4, r4, #16
 8010aa4:	d456      	bmi.n	8010b54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8010aa6:	42bc      	cmp	r4, r7
 8010aa8:	da54      	bge.n	8010b54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8010aaa:	f8dd 9000 	ldr.w	r9, [sp]
 8010aae:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8010ab2:	4698      	mov	r8, r3
 8010ab4:	f1b8 0f00 	cmp.w	r8, #0
 8010ab8:	dd54      	ble.n	8010b64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8010aba:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8010abe:	9804      	ldr	r0, [sp, #16]
 8010ac0:	1414      	asrs	r4, r2, #16
 8010ac2:	fb07 0404 	mla	r4, r7, r4, r0
 8010ac6:	140e      	asrs	r6, r1, #16
 8010ac8:	9801      	ldr	r0, [sp, #4]
 8010aca:	f814 e006 	ldrb.w	lr, [r4, r6]
 8010ace:	f8b9 4000 	ldrh.w	r4, [r9]
 8010ad2:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8010ad6:	eb00 0b0e 	add.w	fp, r0, lr
 8010ada:	1227      	asrs	r7, r4, #8
 8010adc:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8010ae0:	f89b b001 	ldrb.w	fp, [fp, #1]
 8010ae4:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8010ae8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8010aea:	fb16 f60a 	smulbb	r6, r6, sl
 8010aee:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8010af2:	fb07 6705 	mla	r7, r7, r5, r6
 8010af6:	10e6      	asrs	r6, r4, #3
 8010af8:	00e4      	lsls	r4, r4, #3
 8010afa:	b2e4      	uxtb	r4, r4
 8010afc:	fb1b fb0a 	smulbb	fp, fp, sl
 8010b00:	fb14 f405 	smulbb	r4, r4, r5
 8010b04:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8010b08:	b2bf      	uxth	r7, r7
 8010b0a:	fb06 b605 	mla	r6, r6, r5, fp
 8010b0e:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8010b12:	b2b6      	uxth	r6, r6
 8010b14:	fa1f fe8e 	uxth.w	lr, lr
 8010b18:	1c7c      	adds	r4, r7, #1
 8010b1a:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8010b1e:	f106 0b01 	add.w	fp, r6, #1
 8010b22:	f10e 0401 	add.w	r4, lr, #1
 8010b26:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8010b2a:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8010b2e:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8010b32:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8010b36:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8010b3a:	4327      	orrs	r7, r4
 8010b3c:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8010b40:	4401      	add	r1, r0
 8010b42:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8010b44:	ea47 070b 	orr.w	r7, r7, fp
 8010b48:	f829 7b02 	strh.w	r7, [r9], #2
 8010b4c:	4402      	add	r2, r0
 8010b4e:	f108 38ff 	add.w	r8, r8, #4294967295
 8010b52:	e7af      	b.n	8010ab4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8010b54:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8010b58:	f04f 0e00 	mov.w	lr, #0
 8010b5c:	eb03 040e 	add.w	r4, r3, lr
 8010b60:	2c00      	cmp	r4, #0
 8010b62:	dc43      	bgt.n	8010bec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8010b64:	9a00      	ldr	r2, [sp, #0]
 8010b66:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010b6a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8010b6e:	9300      	str	r3, [sp, #0]
 8010b70:	9b02      	ldr	r3, [sp, #8]
 8010b72:	2b00      	cmp	r3, #0
 8010b74:	f340 8098 	ble.w	8010ca8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8010b78:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010b7c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8010b80:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8010b84:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8010b86:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010b8a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010b8e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010b92:	eef0 6a62 	vmov.f32	s13, s5
 8010b96:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010b9a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010b9e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010ba2:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8010ba6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010baa:	eef0 6a43 	vmov.f32	s13, s6
 8010bae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010bb2:	ee12 2a90 	vmov	r2, s5
 8010bb6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010bba:	fb92 f3f3 	sdiv	r3, r2, r3
 8010bbe:	ee13 2a10 	vmov	r2, s6
 8010bc2:	9313      	str	r3, [sp, #76]	@ 0x4c
 8010bc4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8010bc6:	fb92 f3f3 	sdiv	r3, r2, r3
 8010bca:	9314      	str	r3, [sp, #80]	@ 0x50
 8010bcc:	9b02      	ldr	r3, [sp, #8]
 8010bce:	9a05      	ldr	r2, [sp, #20]
 8010bd0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010bd4:	3b01      	subs	r3, #1
 8010bd6:	9302      	str	r3, [sp, #8]
 8010bd8:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8010bdc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8010bde:	eeb0 3a67 	vmov.f32	s6, s15
 8010be2:	bf08      	it	eq
 8010be4:	4613      	moveq	r3, r2
 8010be6:	eef0 2a47 	vmov.f32	s5, s14
 8010bea:	e72a      	b.n	8010a42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8010bec:	140f      	asrs	r7, r1, #16
 8010bee:	d454      	bmi.n	8010c9a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8010bf0:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8010bf4:	42be      	cmp	r6, r7
 8010bf6:	dd50      	ble.n	8010c9a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8010bf8:	ea5f 4822 	movs.w	r8, r2, asr #16
 8010bfc:	d44d      	bmi.n	8010c9a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8010bfe:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8010c02:	4544      	cmp	r4, r8
 8010c04:	dd49      	ble.n	8010c9a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8010c06:	9c04      	ldr	r4, [sp, #16]
 8010c08:	b236      	sxth	r6, r6
 8010c0a:	fb08 4606 	mla	r6, r8, r6, r4
 8010c0e:	f06f 0001 	mvn.w	r0, #1
 8010c12:	f816 8007 	ldrb.w	r8, [r6, r7]
 8010c16:	9c01      	ldr	r4, [sp, #4]
 8010c18:	fb00 fa0e 	mul.w	sl, r0, lr
 8010c1c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8010c20:	9800      	ldr	r0, [sp, #0]
 8010c22:	eb04 0b08 	add.w	fp, r4, r8
 8010c26:	f830 400a 	ldrh.w	r4, [r0, sl]
 8010c2a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8010c2e:	9801      	ldr	r0, [sp, #4]
 8010c30:	f89b b001 	ldrb.w	fp, [fp, #1]
 8010c34:	f810 8008 	ldrb.w	r8, [r0, r8]
 8010c38:	9800      	ldr	r0, [sp, #0]
 8010c3a:	1227      	asrs	r7, r4, #8
 8010c3c:	fb16 f609 	smulbb	r6, r6, r9
 8010c40:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8010c44:	fb07 6705 	mla	r7, r7, r5, r6
 8010c48:	10e6      	asrs	r6, r4, #3
 8010c4a:	00e4      	lsls	r4, r4, #3
 8010c4c:	b2e4      	uxtb	r4, r4
 8010c4e:	fb1b fb09 	smulbb	fp, fp, r9
 8010c52:	fb14 f405 	smulbb	r4, r4, r5
 8010c56:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8010c5a:	b2bf      	uxth	r7, r7
 8010c5c:	fb06 b605 	mla	r6, r6, r5, fp
 8010c60:	fb08 4809 	mla	r8, r8, r9, r4
 8010c64:	b2b6      	uxth	r6, r6
 8010c66:	fa1f f888 	uxth.w	r8, r8
 8010c6a:	1c7c      	adds	r4, r7, #1
 8010c6c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8010c70:	f106 0b01 	add.w	fp, r6, #1
 8010c74:	f108 0401 	add.w	r4, r8, #1
 8010c78:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8010c7c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8010c80:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8010c84:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8010c88:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8010c8c:	4327      	orrs	r7, r4
 8010c8e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8010c92:	ea47 070b 	orr.w	r7, r7, fp
 8010c96:	f820 700a 	strh.w	r7, [r0, sl]
 8010c9a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8010c9c:	4401      	add	r1, r0
 8010c9e:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8010ca0:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010ca4:	4402      	add	r2, r0
 8010ca6:	e759      	b.n	8010b5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8010ca8:	b007      	add	sp, #28
 8010caa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08010cb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010cb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010cb4:	b085      	sub	sp, #20
 8010cb6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8010cba:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8010cbc:	9203      	str	r2, [sp, #12]
 8010cbe:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8010cc2:	6870      	ldr	r0, [r6, #4]
 8010cc4:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8010cc6:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 8010cca:	686f      	ldr	r7, [r5, #4]
 8010ccc:	9101      	str	r1, [sp, #4]
 8010cce:	fb00 2404 	mla	r4, r0, r4, r2
 8010cd2:	6832      	ldr	r2, [r6, #0]
 8010cd4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010cd8:	682a      	ldr	r2, [r5, #0]
 8010cda:	9202      	str	r2, [sp, #8]
 8010cdc:	3704      	adds	r7, #4
 8010cde:	9a01      	ldr	r2, [sp, #4]
 8010ce0:	2a00      	cmp	r2, #0
 8010ce2:	dc03      	bgt.n	8010cec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8010ce4:	9a03      	ldr	r2, [sp, #12]
 8010ce6:	2a00      	cmp	r2, #0
 8010ce8:	f340 80cc 	ble.w	8010e84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8010cec:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8010cee:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8010cf2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8010cf6:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8010cfa:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8010cfc:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8010d00:	2b00      	cmp	r3, #0
 8010d02:	dd0d      	ble.n	8010d20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8010d04:	1406      	asrs	r6, r0, #16
 8010d06:	d405      	bmi.n	8010d14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8010d08:	454e      	cmp	r6, r9
 8010d0a:	da03      	bge.n	8010d14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8010d0c:	1416      	asrs	r6, r2, #16
 8010d0e:	d401      	bmi.n	8010d14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8010d10:	4546      	cmp	r6, r8
 8010d12:	db06      	blt.n	8010d22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010d14:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 8010d16:	4460      	add	r0, ip
 8010d18:	4432      	add	r2, r6
 8010d1a:	3b01      	subs	r3, #1
 8010d1c:	3402      	adds	r4, #2
 8010d1e:	e7ef      	b.n	8010d00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8010d20:	d00f      	beq.n	8010d42 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8010d22:	1e5e      	subs	r6, r3, #1
 8010d24:	fb0c 0e06 	mla	lr, ip, r6, r0
 8010d28:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8010d2c:	d543      	bpl.n	8010db6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8010d2e:	4698      	mov	r8, r3
 8010d30:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8010d34:	f1b8 0f00 	cmp.w	r8, #0
 8010d38:	dc71      	bgt.n	8010e1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8010d3a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010d3e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010d42:	9b01      	ldr	r3, [sp, #4]
 8010d44:	2b00      	cmp	r3, #0
 8010d46:	f340 809d 	ble.w	8010e84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8010d4a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010d4e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010d52:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010d56:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8010d58:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010d5c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010d60:	eeb0 6a62 	vmov.f32	s12, s5
 8010d64:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010d68:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010d6c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010d70:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8010d74:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010d78:	eeb0 6a43 	vmov.f32	s12, s6
 8010d7c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010d80:	ee12 2a90 	vmov	r2, s5
 8010d84:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010d88:	fb92 fcf3 	sdiv	ip, r2, r3
 8010d8c:	ee13 2a10 	vmov	r2, s6
 8010d90:	fb92 f3f3 	sdiv	r3, r2, r3
 8010d94:	9312      	str	r3, [sp, #72]	@ 0x48
 8010d96:	9b01      	ldr	r3, [sp, #4]
 8010d98:	9a03      	ldr	r2, [sp, #12]
 8010d9a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010d9e:	3b01      	subs	r3, #1
 8010da0:	9301      	str	r3, [sp, #4]
 8010da2:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8010da6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8010da8:	eeb0 3a67 	vmov.f32	s6, s15
 8010dac:	bf08      	it	eq
 8010dae:	4613      	moveq	r3, r2
 8010db0:	eef0 2a47 	vmov.f32	s5, s14
 8010db4:	e793      	b.n	8010cde <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8010db6:	45ce      	cmp	lr, r9
 8010db8:	dab9      	bge.n	8010d2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010dba:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8010dbc:	fb01 2606 	mla	r6, r1, r6, r2
 8010dc0:	1436      	asrs	r6, r6, #16
 8010dc2:	d4b4      	bmi.n	8010d2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010dc4:	4546      	cmp	r6, r8
 8010dc6:	dab2      	bge.n	8010d2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010dc8:	4698      	mov	r8, r3
 8010dca:	46a2      	mov	sl, r4
 8010dcc:	f1b8 0f00 	cmp.w	r8, #0
 8010dd0:	ddb3      	ble.n	8010d3a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8010dd2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8010dd6:	9902      	ldr	r1, [sp, #8]
 8010dd8:	1416      	asrs	r6, r2, #16
 8010dda:	fb09 1606 	mla	r6, r9, r6, r1
 8010dde:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8010de2:	492a      	ldr	r1, [pc, #168]	@ (8010e8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8010de4:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8010de8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8010dec:	eb07 0b0e 	add.w	fp, r7, lr
 8010df0:	4460      	add	r0, ip
 8010df2:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8010df6:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8010dfa:	00f6      	lsls	r6, r6, #3
 8010dfc:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8010e00:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8010e04:	ea49 0606 	orr.w	r6, r9, r6
 8010e08:	f817 900e 	ldrb.w	r9, [r7, lr]
 8010e0c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8010e0e:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8010e12:	f82a 6b02 	strh.w	r6, [sl], #2
 8010e16:	440a      	add	r2, r1
 8010e18:	f108 38ff 	add.w	r8, r8, #4294967295
 8010e1c:	e7d6      	b.n	8010dcc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8010e1e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8010e22:	d429      	bmi.n	8010e78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010e24:	68ae      	ldr	r6, [r5, #8]
 8010e26:	454e      	cmp	r6, r9
 8010e28:	dd26      	ble.n	8010e78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010e2a:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8010e2e:	d423      	bmi.n	8010e78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010e30:	68e9      	ldr	r1, [r5, #12]
 8010e32:	4559      	cmp	r1, fp
 8010e34:	dd20      	ble.n	8010e78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010e36:	9902      	ldr	r1, [sp, #8]
 8010e38:	fa0f fe86 	sxth.w	lr, r6
 8010e3c:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8010e40:	f06f 0101 	mvn.w	r1, #1
 8010e44:	f81e e009 	ldrb.w	lr, [lr, r9]
 8010e48:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8010e4c:	eb07 060e 	add.w	r6, r7, lr
 8010e50:	fb01 f908 	mul.w	r9, r1, r8
 8010e54:	f896 b002 	ldrb.w	fp, [r6, #2]
 8010e58:	7876      	ldrb	r6, [r6, #1]
 8010e5a:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 8010e5e:	00f6      	lsls	r6, r6, #3
 8010e60:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8010e64:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8010e68:	ea4b 0606 	orr.w	r6, fp, r6
 8010e6c:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8010e70:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8010e74:	f82a 6009 	strh.w	r6, [sl, r9]
 8010e78:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8010e7a:	4460      	add	r0, ip
 8010e7c:	440a      	add	r2, r1
 8010e7e:	f108 38ff 	add.w	r8, r8, #4294967295
 8010e82:	e757      	b.n	8010d34 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8010e84:	b005      	add	sp, #20
 8010e86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010e8a:	bf00      	nop
 8010e8c:	fffff800 	.word	0xfffff800

08010e90 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010e90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010e94:	b087      	sub	sp, #28
 8010e96:	468b      	mov	fp, r1
 8010e98:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8010e9a:	9204      	str	r2, [sp, #16]
 8010e9c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8010ea0:	9205      	str	r2, [sp, #20]
 8010ea2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8010ea6:	6841      	ldr	r1, [r0, #4]
 8010ea8:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8010eac:	fb01 2404 	mla	r4, r1, r4, r2
 8010eb0:	6802      	ldr	r2, [r0, #0]
 8010eb2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010eb6:	f8dc 2000 	ldr.w	r2, [ip]
 8010eba:	9201      	str	r2, [sp, #4]
 8010ebc:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8010ec0:	3204      	adds	r2, #4
 8010ec2:	9202      	str	r2, [sp, #8]
 8010ec4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8010ec8:	f1bb 0f00 	cmp.w	fp, #0
 8010ecc:	dc03      	bgt.n	8010ed6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8010ece:	9a04      	ldr	r2, [sp, #16]
 8010ed0:	2a00      	cmp	r2, #0
 8010ed2:	f340 8138 	ble.w	8011146 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8010ed6:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8010ed8:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8010edc:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8010ee0:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8010ee4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8010ee6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8010eea:	2b00      	cmp	r3, #0
 8010eec:	dd0e      	ble.n	8010f0c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8010eee:	1402      	asrs	r2, r0, #16
 8010ef0:	d405      	bmi.n	8010efe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8010ef2:	42ba      	cmp	r2, r7
 8010ef4:	da03      	bge.n	8010efe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8010ef6:	140a      	asrs	r2, r1, #16
 8010ef8:	d401      	bmi.n	8010efe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8010efa:	42b2      	cmp	r2, r6
 8010efc:	db07      	blt.n	8010f0e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010efe:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8010f00:	4410      	add	r0, r2
 8010f02:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8010f04:	3b01      	subs	r3, #1
 8010f06:	4411      	add	r1, r2
 8010f08:	3402      	adds	r4, #2
 8010f0a:	e7ee      	b.n	8010eea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8010f0c:	d019      	beq.n	8010f42 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8010f0e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8010f10:	1e5a      	subs	r2, r3, #1
 8010f12:	fb05 0502 	mla	r5, r5, r2, r0
 8010f16:	142d      	asrs	r5, r5, #16
 8010f18:	d409      	bmi.n	8010f2e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010f1a:	42bd      	cmp	r5, r7
 8010f1c:	da07      	bge.n	8010f2e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010f1e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8010f20:	fb05 1202 	mla	r2, r5, r2, r1
 8010f24:	1412      	asrs	r2, r2, #16
 8010f26:	d402      	bmi.n	8010f2e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010f28:	42b2      	cmp	r2, r6
 8010f2a:	f2c0 80ac 	blt.w	8011086 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8010f2e:	f04f 0e00 	mov.w	lr, #0
 8010f32:	eb03 020e 	add.w	r2, r3, lr
 8010f36:	2a00      	cmp	r2, #0
 8010f38:	dc3e      	bgt.n	8010fb8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8010f3a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010f3e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010f42:	f1bb 0f00 	cmp.w	fp, #0
 8010f46:	f340 80fe 	ble.w	8011146 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8010f4a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010f4e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010f52:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010f56:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8010f58:	f1bb 0b01 	subs.w	fp, fp, #1
 8010f5c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010f60:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010f64:	eeb0 6a62 	vmov.f32	s12, s5
 8010f68:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010f6c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010f70:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010f74:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8010f78:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010f7c:	eeb0 6a43 	vmov.f32	s12, s6
 8010f80:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010f84:	ee12 2a90 	vmov	r2, s5
 8010f88:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010f8c:	fb92 f3f3 	sdiv	r3, r2, r3
 8010f90:	ee13 2a10 	vmov	r2, s6
 8010f94:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010f98:	9313      	str	r3, [sp, #76]	@ 0x4c
 8010f9a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8010f9c:	fb92 f3f3 	sdiv	r3, r2, r3
 8010fa0:	9a04      	ldr	r2, [sp, #16]
 8010fa2:	9314      	str	r3, [sp, #80]	@ 0x50
 8010fa4:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8010fa8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8010faa:	eeb0 3a67 	vmov.f32	s6, s15
 8010fae:	bf08      	it	eq
 8010fb0:	4613      	moveq	r3, r2
 8010fb2:	eef0 2a47 	vmov.f32	s5, s14
 8010fb6:	e787      	b.n	8010ec8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8010fb8:	1406      	asrs	r6, r0, #16
 8010fba:	d45d      	bmi.n	8011078 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010fbc:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8010fc0:	42b5      	cmp	r5, r6
 8010fc2:	dd59      	ble.n	8011078 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010fc4:	140f      	asrs	r7, r1, #16
 8010fc6:	d457      	bmi.n	8011078 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010fc8:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8010fcc:	42ba      	cmp	r2, r7
 8010fce:	dd53      	ble.n	8011078 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010fd0:	9a01      	ldr	r2, [sp, #4]
 8010fd2:	b22d      	sxth	r5, r5
 8010fd4:	fb07 2505 	mla	r5, r7, r5, r2
 8010fd8:	5daa      	ldrb	r2, [r5, r6]
 8010fda:	9d02      	ldr	r5, [sp, #8]
 8010fdc:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8010fe0:	0e2e      	lsrs	r6, r5, #24
 8010fe2:	d049      	beq.n	8011078 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010fe4:	f06f 0201 	mvn.w	r2, #1
 8010fe8:	fb02 f20e 	mul.w	r2, r2, lr
 8010fec:	9203      	str	r2, [sp, #12]
 8010fee:	f834 8002 	ldrh.w	r8, [r4, r2]
 8010ff2:	9a05      	ldr	r2, [sp, #20]
 8010ff4:	4356      	muls	r6, r2
 8010ff6:	1c72      	adds	r2, r6, #1
 8010ff8:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010ffc:	1212      	asrs	r2, r2, #8
 8010ffe:	fa1f f982 	uxth.w	r9, r2
 8011002:	ea4f 2728 	mov.w	r7, r8, asr #8
 8011006:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801100a:	43d2      	mvns	r2, r2
 801100c:	b2d2      	uxtb	r2, r2
 801100e:	fb16 f609 	smulbb	r6, r6, r9
 8011012:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8011016:	fb07 6702 	mla	r7, r7, r2, r6
 801101a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801101e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8011022:	b2ed      	uxtb	r5, r5
 8011024:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011028:	fa5f f888 	uxtb.w	r8, r8
 801102c:	fb15 f509 	smulbb	r5, r5, r9
 8011030:	fb08 5502 	mla	r5, r8, r2, r5
 8011034:	b2bf      	uxth	r7, r7
 8011036:	fb1a fa09 	smulbb	sl, sl, r9
 801103a:	b2ad      	uxth	r5, r5
 801103c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8011040:	fb06 a602 	mla	r6, r6, r2, sl
 8011044:	1c7a      	adds	r2, r7, #1
 8011046:	f105 0a01 	add.w	sl, r5, #1
 801104a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801104e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011052:	b2b6      	uxth	r6, r6
 8011054:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011058:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801105c:	ea4a 0707 	orr.w	r7, sl, r7
 8011060:	f106 0a01 	add.w	sl, r6, #1
 8011064:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011068:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801106c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8011070:	9a03      	ldr	r2, [sp, #12]
 8011072:	ea47 070a 	orr.w	r7, r7, sl
 8011076:	52a7      	strh	r7, [r4, r2]
 8011078:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801107a:	4410      	add	r0, r2
 801107c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801107e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8011082:	4411      	add	r1, r2
 8011084:	e755      	b.n	8010f32 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011086:	f04f 0800 	mov.w	r8, #0
 801108a:	eba3 0208 	sub.w	r2, r3, r8
 801108e:	2a00      	cmp	r2, #0
 8011090:	f77f af53 	ble.w	8010f3a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8011094:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8011098:	9f01      	ldr	r7, [sp, #4]
 801109a:	140a      	asrs	r2, r1, #16
 801109c:	1405      	asrs	r5, r0, #16
 801109e:	fb06 7202 	mla	r2, r6, r2, r7
 80110a2:	5d52      	ldrb	r2, [r2, r5]
 80110a4:	9d02      	ldr	r5, [sp, #8]
 80110a6:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80110aa:	0e2e      	lsrs	r6, r5, #24
 80110ac:	d044      	beq.n	8011138 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80110ae:	9a05      	ldr	r2, [sp, #20]
 80110b0:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80110b4:	4356      	muls	r6, r2
 80110b6:	1c72      	adds	r2, r6, #1
 80110b8:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80110bc:	1212      	asrs	r2, r2, #8
 80110be:	fa1f f982 	uxth.w	r9, r2
 80110c2:	ea4f 272e 	mov.w	r7, lr, asr #8
 80110c6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80110ca:	43d2      	mvns	r2, r2
 80110cc:	b2d2      	uxtb	r2, r2
 80110ce:	fb16 f609 	smulbb	r6, r6, r9
 80110d2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80110d6:	fb07 6702 	mla	r7, r7, r2, r6
 80110da:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80110de:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80110e2:	b2ed      	uxtb	r5, r5
 80110e4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80110e8:	fa5f fe8e 	uxtb.w	lr, lr
 80110ec:	fb15 f509 	smulbb	r5, r5, r9
 80110f0:	fb0e 5502 	mla	r5, lr, r2, r5
 80110f4:	b2bf      	uxth	r7, r7
 80110f6:	fb1a fa09 	smulbb	sl, sl, r9
 80110fa:	b2ad      	uxth	r5, r5
 80110fc:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8011100:	fb06 a602 	mla	r6, r6, r2, sl
 8011104:	1c7a      	adds	r2, r7, #1
 8011106:	f105 0a01 	add.w	sl, r5, #1
 801110a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801110e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011112:	b2b6      	uxth	r6, r6
 8011114:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011118:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801111c:	ea4a 0707 	orr.w	r7, sl, r7
 8011120:	f106 0a01 	add.w	sl, r6, #1
 8011124:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011128:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801112c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8011130:	ea47 070a 	orr.w	r7, r7, sl
 8011134:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8011138:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801113a:	4410      	add	r0, r2
 801113c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801113e:	f108 0801 	add.w	r8, r8, #1
 8011142:	4411      	add	r1, r2
 8011144:	e7a1      	b.n	801108a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8011146:	b007      	add	sp, #28
 8011148:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801114c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801114c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011150:	b085      	sub	sp, #20
 8011152:	468b      	mov	fp, r1
 8011154:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8011156:	9203      	str	r2, [sp, #12]
 8011158:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801115c:	6841      	ldr	r1, [r0, #4]
 801115e:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8011162:	fb01 2404 	mla	r4, r1, r4, r2
 8011166:	6802      	ldr	r2, [r0, #0]
 8011168:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801116c:	f8de 2000 	ldr.w	r2, [lr]
 8011170:	9200      	str	r2, [sp, #0]
 8011172:	f8de 2004 	ldr.w	r2, [lr, #4]
 8011176:	3204      	adds	r2, #4
 8011178:	9201      	str	r2, [sp, #4]
 801117a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801117e:	f1bb 0f00 	cmp.w	fp, #0
 8011182:	dc03      	bgt.n	801118c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8011184:	9a03      	ldr	r2, [sp, #12]
 8011186:	2a00      	cmp	r2, #0
 8011188:	f340 8153 	ble.w	8011432 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801118c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801118e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8011192:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8011196:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801119a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801119c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80111a0:	2b00      	cmp	r3, #0
 80111a2:	dd0e      	ble.n	80111c2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80111a4:	1408      	asrs	r0, r1, #16
 80111a6:	d405      	bmi.n	80111b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80111a8:	42b8      	cmp	r0, r7
 80111aa:	da03      	bge.n	80111b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80111ac:	1410      	asrs	r0, r2, #16
 80111ae:	d401      	bmi.n	80111b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80111b0:	42b0      	cmp	r0, r6
 80111b2:	db07      	blt.n	80111c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80111b4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80111b6:	4401      	add	r1, r0
 80111b8:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80111ba:	3b01      	subs	r3, #1
 80111bc:	4402      	add	r2, r0
 80111be:	3402      	adds	r4, #2
 80111c0:	e7ee      	b.n	80111a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80111c2:	d017      	beq.n	80111f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80111c4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80111c6:	1e58      	subs	r0, r3, #1
 80111c8:	fb05 1500 	mla	r5, r5, r0, r1
 80111cc:	142d      	asrs	r5, r5, #16
 80111ce:	d409      	bmi.n	80111e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80111d0:	42bd      	cmp	r5, r7
 80111d2:	da07      	bge.n	80111e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80111d4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80111d6:	fb05 2000 	mla	r0, r5, r0, r2
 80111da:	1400      	asrs	r0, r0, #16
 80111dc:	d402      	bmi.n	80111e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80111de:	42b0      	cmp	r0, r6
 80111e0:	f2c0 80bc 	blt.w	801135c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 80111e4:	2600      	movs	r6, #0
 80111e6:	1998      	adds	r0, r3, r6
 80111e8:	2800      	cmp	r0, #0
 80111ea:	dc3e      	bgt.n	801126a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 80111ec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80111f0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80111f4:	f1bb 0f00 	cmp.w	fp, #0
 80111f8:	f340 811b 	ble.w	8011432 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80111fc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011200:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011204:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011208:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801120a:	f1bb 0b01 	subs.w	fp, fp, #1
 801120e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011212:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011216:	eeb0 6a62 	vmov.f32	s12, s5
 801121a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801121e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011222:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011226:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801122a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801122e:	eeb0 6a43 	vmov.f32	s12, s6
 8011232:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011236:	ee12 2a90 	vmov	r2, s5
 801123a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801123e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011242:	ee13 2a10 	vmov	r2, s6
 8011246:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801124a:	9311      	str	r3, [sp, #68]	@ 0x44
 801124c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801124e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011252:	9a03      	ldr	r2, [sp, #12]
 8011254:	9312      	str	r3, [sp, #72]	@ 0x48
 8011256:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801125a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801125c:	eeb0 3a67 	vmov.f32	s6, s15
 8011260:	bf08      	it	eq
 8011262:	4613      	moveq	r3, r2
 8011264:	eef0 2a47 	vmov.f32	s5, s14
 8011268:	e789      	b.n	801117e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801126a:	140f      	asrs	r7, r1, #16
 801126c:	d426      	bmi.n	80112bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801126e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8011272:	42bd      	cmp	r5, r7
 8011274:	dd22      	ble.n	80112bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8011276:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801127a:	d41f      	bmi.n	80112bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801127c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8011280:	4560      	cmp	r0, ip
 8011282:	dd1b      	ble.n	80112bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8011284:	9800      	ldr	r0, [sp, #0]
 8011286:	b22d      	sxth	r5, r5
 8011288:	fb0c 0505 	mla	r5, ip, r5, r0
 801128c:	5de8      	ldrb	r0, [r5, r7]
 801128e:	9d01      	ldr	r5, [sp, #4]
 8011290:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8011294:	0e07      	lsrs	r7, r0, #24
 8011296:	2fff      	cmp	r7, #255	@ 0xff
 8011298:	d116      	bne.n	80112c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801129a:	f06f 0501 	mvn.w	r5, #1
 801129e:	fb05 f706 	mul.w	r7, r5, r6
 80112a2:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 80112a6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80112aa:	0945      	lsrs	r5, r0, #5
 80112ac:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80112b0:	ea4c 0505 	orr.w	r5, ip, r5
 80112b4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80112b8:	4305      	orrs	r5, r0
 80112ba:	53e5      	strh	r5, [r4, r7]
 80112bc:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80112be:	4401      	add	r1, r0
 80112c0:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80112c2:	3e01      	subs	r6, #1
 80112c4:	4402      	add	r2, r0
 80112c6:	e78e      	b.n	80111e6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80112c8:	b2fd      	uxtb	r5, r7
 80112ca:	2f00      	cmp	r7, #0
 80112cc:	d0f6      	beq.n	80112bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80112ce:	f06f 0701 	mvn.w	r7, #1
 80112d2:	4377      	muls	r7, r6
 80112d4:	fa1f f985 	uxth.w	r9, r5
 80112d8:	f834 8007 	ldrh.w	r8, [r4, r7]
 80112dc:	9702      	str	r7, [sp, #8]
 80112de:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80112e2:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80112e6:	43ed      	mvns	r5, r5
 80112e8:	b2ed      	uxtb	r5, r5
 80112ea:	fb17 f709 	smulbb	r7, r7, r9
 80112ee:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80112f2:	fb0c 7c05 	mla	ip, ip, r5, r7
 80112f6:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80112fa:	ea4f 07e8 	mov.w	r7, r8, asr #3
 80112fe:	b2c0      	uxtb	r0, r0
 8011300:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011304:	fa5f f888 	uxtb.w	r8, r8
 8011308:	fb10 f009 	smulbb	r0, r0, r9
 801130c:	fb08 0005 	mla	r0, r8, r5, r0
 8011310:	b280      	uxth	r0, r0
 8011312:	fa1f fc8c 	uxth.w	ip, ip
 8011316:	fb1a fa09 	smulbb	sl, sl, r9
 801131a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801131e:	fb07 a705 	mla	r7, r7, r5, sl
 8011322:	f100 0a01 	add.w	sl, r0, #1
 8011326:	f10c 0501 	add.w	r5, ip, #1
 801132a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801132e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011332:	b2bf      	uxth	r7, r7
 8011334:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011338:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801133c:	ea4a 0c0c 	orr.w	ip, sl, ip
 8011340:	f107 0a01 	add.w	sl, r7, #1
 8011344:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8011348:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801134c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8011350:	9802      	ldr	r0, [sp, #8]
 8011352:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011356:	f824 c000 	strh.w	ip, [r4, r0]
 801135a:	e7af      	b.n	80112bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801135c:	f04f 0800 	mov.w	r8, #0
 8011360:	eba3 0008 	sub.w	r0, r3, r8
 8011364:	2800      	cmp	r0, #0
 8011366:	f77f af41 	ble.w	80111ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801136a:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801136e:	9f00      	ldr	r7, [sp, #0]
 8011370:	1410      	asrs	r0, r2, #16
 8011372:	140d      	asrs	r5, r1, #16
 8011374:	fb06 7000 	mla	r0, r6, r0, r7
 8011378:	5d40      	ldrb	r0, [r0, r5]
 801137a:	9d01      	ldr	r5, [sp, #4]
 801137c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8011380:	0e2e      	lsrs	r6, r5, #24
 8011382:	2eff      	cmp	r6, #255	@ 0xff
 8011384:	d112      	bne.n	80113ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8011386:	482c      	ldr	r0, [pc, #176]	@ (8011438 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8011388:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801138c:	0968      	lsrs	r0, r5, #5
 801138e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8011392:	4330      	orrs	r0, r6
 8011394:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8011398:	4328      	orrs	r0, r5
 801139a:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801139e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80113a0:	4401      	add	r1, r0
 80113a2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80113a4:	f108 0801 	add.w	r8, r8, #1
 80113a8:	4402      	add	r2, r0
 80113aa:	e7d9      	b.n	8011360 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80113ac:	b2f0      	uxtb	r0, r6
 80113ae:	2e00      	cmp	r6, #0
 80113b0:	d0f5      	beq.n	801139e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80113b2:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 80113b6:	fa1f f980 	uxth.w	r9, r0
 80113ba:	ea4f 272c 	mov.w	r7, ip, asr #8
 80113be:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80113c2:	43c0      	mvns	r0, r0
 80113c4:	b2c0      	uxtb	r0, r0
 80113c6:	fb16 f609 	smulbb	r6, r6, r9
 80113ca:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80113ce:	fb07 6700 	mla	r7, r7, r0, r6
 80113d2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80113d6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80113da:	b2ed      	uxtb	r5, r5
 80113dc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80113e0:	fa5f fc8c 	uxtb.w	ip, ip
 80113e4:	fb15 f509 	smulbb	r5, r5, r9
 80113e8:	fb0c 5500 	mla	r5, ip, r0, r5
 80113ec:	b2bf      	uxth	r7, r7
 80113ee:	fb1a fa09 	smulbb	sl, sl, r9
 80113f2:	b2ad      	uxth	r5, r5
 80113f4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80113f8:	fb06 a600 	mla	r6, r6, r0, sl
 80113fc:	1c78      	adds	r0, r7, #1
 80113fe:	f105 0a01 	add.w	sl, r5, #1
 8011402:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8011406:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801140a:	b2b6      	uxth	r6, r6
 801140c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011410:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8011414:	ea4a 0707 	orr.w	r7, sl, r7
 8011418:	f106 0a01 	add.w	sl, r6, #1
 801141c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011420:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011424:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8011428:	ea47 070a 	orr.w	r7, r7, sl
 801142c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8011430:	e7b5      	b.n	801139e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8011432:	b005      	add	sp, #20
 8011434:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011438:	fffff800 	.word	0xfffff800

0801143c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801143c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011440:	b087      	sub	sp, #28
 8011442:	468b      	mov	fp, r1
 8011444:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8011446:	9204      	str	r2, [sp, #16]
 8011448:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801144c:	9205      	str	r2, [sp, #20]
 801144e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8011452:	6861      	ldr	r1, [r4, #4]
 8011454:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8011458:	fb01 2000 	mla	r0, r1, r0, r2
 801145c:	6822      	ldr	r2, [r4, #0]
 801145e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8011462:	f8de 2000 	ldr.w	r2, [lr]
 8011466:	9201      	str	r2, [sp, #4]
 8011468:	f8de 2004 	ldr.w	r2, [lr, #4]
 801146c:	9202      	str	r2, [sp, #8]
 801146e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8011472:	f1bb 0f00 	cmp.w	fp, #0
 8011476:	dc03      	bgt.n	8011480 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8011478:	9a04      	ldr	r2, [sp, #16]
 801147a:	2a00      	cmp	r2, #0
 801147c:	f340 8142 	ble.w	8011704 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8011480:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8011482:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8011486:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801148a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801148e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8011490:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8011494:	2b00      	cmp	r3, #0
 8011496:	dd0e      	ble.n	80114b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8011498:	140c      	asrs	r4, r1, #16
 801149a:	d405      	bmi.n	80114a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801149c:	42bc      	cmp	r4, r7
 801149e:	da03      	bge.n	80114a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80114a0:	1414      	asrs	r4, r2, #16
 80114a2:	d401      	bmi.n	80114a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80114a4:	42b4      	cmp	r4, r6
 80114a6:	db07      	blt.n	80114b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80114a8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80114aa:	4421      	add	r1, r4
 80114ac:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80114ae:	3b01      	subs	r3, #1
 80114b0:	4422      	add	r2, r4
 80114b2:	3002      	adds	r0, #2
 80114b4:	e7ee      	b.n	8011494 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80114b6:	d019      	beq.n	80114ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80114b8:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80114ba:	1e5c      	subs	r4, r3, #1
 80114bc:	fb05 1504 	mla	r5, r5, r4, r1
 80114c0:	142d      	asrs	r5, r5, #16
 80114c2:	d409      	bmi.n	80114d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80114c4:	42bd      	cmp	r5, r7
 80114c6:	da07      	bge.n	80114d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80114c8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80114ca:	fb05 2404 	mla	r4, r5, r4, r2
 80114ce:	1424      	asrs	r4, r4, #16
 80114d0:	d402      	bmi.n	80114d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80114d2:	42b4      	cmp	r4, r6
 80114d4:	f2c0 80b1 	blt.w	801163a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80114d8:	f04f 0800 	mov.w	r8, #0
 80114dc:	eb03 0408 	add.w	r4, r3, r8
 80114e0:	2c00      	cmp	r4, #0
 80114e2:	dc3e      	bgt.n	8011562 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80114e4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80114e8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80114ec:	f1bb 0f00 	cmp.w	fp, #0
 80114f0:	f340 8108 	ble.w	8011704 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80114f4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80114f8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80114fc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011500:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011502:	f1bb 0b01 	subs.w	fp, fp, #1
 8011506:	ee31 1a05 	vadd.f32	s2, s2, s10
 801150a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801150e:	eeb0 6a62 	vmov.f32	s12, s5
 8011512:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011516:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801151a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801151e:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8011522:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011526:	eeb0 6a43 	vmov.f32	s12, s6
 801152a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801152e:	ee12 2a90 	vmov	r2, s5
 8011532:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011536:	fb92 f3f3 	sdiv	r3, r2, r3
 801153a:	ee13 2a10 	vmov	r2, s6
 801153e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011542:	9313      	str	r3, [sp, #76]	@ 0x4c
 8011544:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011546:	fb92 f3f3 	sdiv	r3, r2, r3
 801154a:	9a04      	ldr	r2, [sp, #16]
 801154c:	9314      	str	r3, [sp, #80]	@ 0x50
 801154e:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8011552:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011554:	eeb0 3a67 	vmov.f32	s6, s15
 8011558:	bf08      	it	eq
 801155a:	4613      	moveq	r3, r2
 801155c:	eef0 2a47 	vmov.f32	s5, s14
 8011560:	e787      	b.n	8011472 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8011562:	140e      	asrs	r6, r1, #16
 8011564:	d462      	bmi.n	801162c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8011566:	f8de 5008 	ldr.w	r5, [lr, #8]
 801156a:	42b5      	cmp	r5, r6
 801156c:	dd5e      	ble.n	801162c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801156e:	1417      	asrs	r7, r2, #16
 8011570:	d45c      	bmi.n	801162c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8011572:	f8de 400c 	ldr.w	r4, [lr, #12]
 8011576:	42bc      	cmp	r4, r7
 8011578:	dd58      	ble.n	801162c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801157a:	b22d      	sxth	r5, r5
 801157c:	fb07 6505 	mla	r5, r7, r5, r6
 8011580:	9c02      	ldr	r4, [sp, #8]
 8011582:	5d66      	ldrb	r6, [r4, r5]
 8011584:	2e00      	cmp	r6, #0
 8011586:	d051      	beq.n	801162c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8011588:	9c01      	ldr	r4, [sp, #4]
 801158a:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801158e:	f06f 0401 	mvn.w	r4, #1
 8011592:	fb04 f408 	mul.w	r4, r4, r8
 8011596:	9403      	str	r4, [sp, #12]
 8011598:	5b05      	ldrh	r5, [r0, r4]
 801159a:	9c05      	ldr	r4, [sp, #20]
 801159c:	4366      	muls	r6, r4
 801159e:	1c74      	adds	r4, r6, #1
 80115a0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80115a4:	1224      	asrs	r4, r4, #8
 80115a6:	b2a7      	uxth	r7, r4
 80115a8:	122e      	asrs	r6, r5, #8
 80115aa:	43e4      	mvns	r4, r4
 80115ac:	b2e4      	uxtb	r4, r4
 80115ae:	ea4f 2c29 	mov.w	ip, r9, asr #8
 80115b2:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80115b6:	fb16 f604 	smulbb	r6, r6, r4
 80115ba:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80115be:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80115c2:	00ed      	lsls	r5, r5, #3
 80115c4:	fb0c 6c07 	mla	ip, ip, r7, r6
 80115c8:	b2ed      	uxtb	r5, r5
 80115ca:	ea4f 06e9 	mov.w	r6, r9, asr #3
 80115ce:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80115d2:	fb15 f504 	smulbb	r5, r5, r4
 80115d6:	fa5f f989 	uxtb.w	r9, r9
 80115da:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80115de:	fb09 5507 	mla	r5, r9, r7, r5
 80115e2:	fb1a fa04 	smulbb	sl, sl, r4
 80115e6:	fa1f fc8c 	uxth.w	ip, ip
 80115ea:	b2ad      	uxth	r5, r5
 80115ec:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80115f0:	fb06 a607 	mla	r6, r6, r7, sl
 80115f4:	f10c 0401 	add.w	r4, ip, #1
 80115f8:	f105 0a01 	add.w	sl, r5, #1
 80115fc:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8011600:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011604:	b2b6      	uxth	r6, r6
 8011606:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801160a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801160e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8011612:	f106 0a01 	add.w	sl, r6, #1
 8011616:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801161a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801161e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8011622:	9c03      	ldr	r4, [sp, #12]
 8011624:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011628:	f820 c004 	strh.w	ip, [r0, r4]
 801162c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801162e:	4421      	add	r1, r4
 8011630:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8011632:	f108 38ff 	add.w	r8, r8, #4294967295
 8011636:	4422      	add	r2, r4
 8011638:	e750      	b.n	80114dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801163a:	f04f 0900 	mov.w	r9, #0
 801163e:	eba3 0409 	sub.w	r4, r3, r9
 8011642:	2c00      	cmp	r4, #0
 8011644:	f77f af4e 	ble.w	80114e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8011648:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801164c:	140d      	asrs	r5, r1, #16
 801164e:	1414      	asrs	r4, r2, #16
 8011650:	fb06 5404 	mla	r4, r6, r4, r5
 8011654:	9d02      	ldr	r5, [sp, #8]
 8011656:	5d2e      	ldrb	r6, [r5, r4]
 8011658:	2e00      	cmp	r6, #0
 801165a:	d04c      	beq.n	80116f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801165c:	9d01      	ldr	r5, [sp, #4]
 801165e:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8011662:	9c05      	ldr	r4, [sp, #20]
 8011664:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8011668:	4366      	muls	r6, r4
 801166a:	1c74      	adds	r4, r6, #1
 801166c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8011670:	1224      	asrs	r4, r4, #8
 8011672:	b2a7      	uxth	r7, r4
 8011674:	122e      	asrs	r6, r5, #8
 8011676:	43e4      	mvns	r4, r4
 8011678:	b2e4      	uxtb	r4, r4
 801167a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801167e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8011682:	fb16 f604 	smulbb	r6, r6, r4
 8011686:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801168a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801168e:	00ed      	lsls	r5, r5, #3
 8011690:	fb0c 6c07 	mla	ip, ip, r7, r6
 8011694:	b2ed      	uxtb	r5, r5
 8011696:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801169a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801169e:	fb15 f504 	smulbb	r5, r5, r4
 80116a2:	fa5f f888 	uxtb.w	r8, r8
 80116a6:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80116aa:	fb08 5507 	mla	r5, r8, r7, r5
 80116ae:	fb1a fa04 	smulbb	sl, sl, r4
 80116b2:	fa1f fc8c 	uxth.w	ip, ip
 80116b6:	b2ad      	uxth	r5, r5
 80116b8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80116bc:	fb06 a607 	mla	r6, r6, r7, sl
 80116c0:	f10c 0401 	add.w	r4, ip, #1
 80116c4:	f105 0a01 	add.w	sl, r5, #1
 80116c8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80116cc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80116d0:	b2b6      	uxth	r6, r6
 80116d2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80116d6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80116da:	ea4a 0c0c 	orr.w	ip, sl, ip
 80116de:	f106 0a01 	add.w	sl, r6, #1
 80116e2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80116e6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80116ea:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80116ee:	ea4c 0c0a 	orr.w	ip, ip, sl
 80116f2:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80116f6:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80116f8:	4421      	add	r1, r4
 80116fa:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80116fc:	f109 0901 	add.w	r9, r9, #1
 8011700:	4422      	add	r2, r4
 8011702:	e79c      	b.n	801163e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8011704:	b007      	add	sp, #28
 8011706:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801170a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801170a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801170e:	b085      	sub	sp, #20
 8011710:	468b      	mov	fp, r1
 8011712:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8011714:	9203      	str	r2, [sp, #12]
 8011716:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 801171a:	6861      	ldr	r1, [r4, #4]
 801171c:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8011720:	fb01 2000 	mla	r0, r1, r0, r2
 8011724:	6822      	ldr	r2, [r4, #0]
 8011726:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801172a:	f8d8 2000 	ldr.w	r2, [r8]
 801172e:	9200      	str	r2, [sp, #0]
 8011730:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8011734:	9201      	str	r2, [sp, #4]
 8011736:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801173a:	f1bb 0f00 	cmp.w	fp, #0
 801173e:	dc03      	bgt.n	8011748 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8011740:	9a03      	ldr	r2, [sp, #12]
 8011742:	2a00      	cmp	r2, #0
 8011744:	f340 8146 	ble.w	80119d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8011748:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801174a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801174e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8011752:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8011756:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8011758:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801175c:	2b00      	cmp	r3, #0
 801175e:	dd0e      	ble.n	801177e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8011760:	140c      	asrs	r4, r1, #16
 8011762:	d405      	bmi.n	8011770 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011764:	42bc      	cmp	r4, r7
 8011766:	da03      	bge.n	8011770 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011768:	1414      	asrs	r4, r2, #16
 801176a:	d401      	bmi.n	8011770 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801176c:	42b4      	cmp	r4, r6
 801176e:	db07      	blt.n	8011780 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011770:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8011772:	4421      	add	r1, r4
 8011774:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8011776:	3b01      	subs	r3, #1
 8011778:	4422      	add	r2, r4
 801177a:	3002      	adds	r0, #2
 801177c:	e7ee      	b.n	801175c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801177e:	d017      	beq.n	80117b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8011780:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8011782:	1e5c      	subs	r4, r3, #1
 8011784:	fb05 1504 	mla	r5, r5, r4, r1
 8011788:	142d      	asrs	r5, r5, #16
 801178a:	d409      	bmi.n	80117a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801178c:	42bd      	cmp	r5, r7
 801178e:	da07      	bge.n	80117a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011790:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8011792:	fb05 2404 	mla	r4, r5, r4, r2
 8011796:	1424      	asrs	r4, r4, #16
 8011798:	d402      	bmi.n	80117a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801179a:	42b4      	cmp	r4, r6
 801179c:	f2c0 80b3 	blt.w	8011906 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80117a0:	2600      	movs	r6, #0
 80117a2:	199c      	adds	r4, r3, r6
 80117a4:	2c00      	cmp	r4, #0
 80117a6:	dc3e      	bgt.n	8011826 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80117a8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80117ac:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80117b0:	f1bb 0f00 	cmp.w	fp, #0
 80117b4:	f340 810e 	ble.w	80119d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80117b8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80117bc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80117c0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80117c4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80117c6:	f1bb 0b01 	subs.w	fp, fp, #1
 80117ca:	ee31 1a05 	vadd.f32	s2, s2, s10
 80117ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80117d2:	eeb0 6a62 	vmov.f32	s12, s5
 80117d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80117da:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80117de:	ee77 2a62 	vsub.f32	s5, s14, s5
 80117e2:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80117e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80117ea:	eeb0 6a43 	vmov.f32	s12, s6
 80117ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80117f2:	ee12 2a90 	vmov	r2, s5
 80117f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80117fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80117fe:	ee13 2a10 	vmov	r2, s6
 8011802:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011806:	9311      	str	r3, [sp, #68]	@ 0x44
 8011808:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801180a:	fb92 f3f3 	sdiv	r3, r2, r3
 801180e:	9a03      	ldr	r2, [sp, #12]
 8011810:	9312      	str	r3, [sp, #72]	@ 0x48
 8011812:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8011816:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011818:	eeb0 3a67 	vmov.f32	s6, s15
 801181c:	bf08      	it	eq
 801181e:	4613      	moveq	r3, r2
 8011820:	eef0 2a47 	vmov.f32	s5, s14
 8011824:	e789      	b.n	801173a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8011826:	140f      	asrs	r7, r1, #16
 8011828:	d418      	bmi.n	801185c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801182a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801182e:	42bd      	cmp	r5, r7
 8011830:	dd14      	ble.n	801185c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8011832:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011836:	d411      	bmi.n	801185c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8011838:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801183c:	4564      	cmp	r4, ip
 801183e:	dd0d      	ble.n	801185c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8011840:	b22d      	sxth	r5, r5
 8011842:	fb0c 7505 	mla	r5, ip, r5, r7
 8011846:	9c01      	ldr	r4, [sp, #4]
 8011848:	5d64      	ldrb	r4, [r4, r5]
 801184a:	2cff      	cmp	r4, #255	@ 0xff
 801184c:	d10c      	bne.n	8011868 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801184e:	9c00      	ldr	r4, [sp, #0]
 8011850:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8011854:	f06f 0401 	mvn.w	r4, #1
 8011858:	4374      	muls	r4, r6
 801185a:	5305      	strh	r5, [r0, r4]
 801185c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801185e:	4421      	add	r1, r4
 8011860:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8011862:	3e01      	subs	r6, #1
 8011864:	4422      	add	r2, r4
 8011866:	e79c      	b.n	80117a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8011868:	2c00      	cmp	r4, #0
 801186a:	d0f7      	beq.n	801185c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801186c:	9f00      	ldr	r7, [sp, #0]
 801186e:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8011872:	f06f 0501 	mvn.w	r5, #1
 8011876:	4375      	muls	r5, r6
 8011878:	9502      	str	r5, [sp, #8]
 801187a:	5b45      	ldrh	r5, [r0, r5]
 801187c:	fa1f fc84 	uxth.w	ip, r4
 8011880:	122f      	asrs	r7, r5, #8
 8011882:	43e4      	mvns	r4, r4
 8011884:	b2e4      	uxtb	r4, r4
 8011886:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801188a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801188e:	fb17 f704 	smulbb	r7, r7, r4
 8011892:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8011896:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801189a:	00ed      	lsls	r5, r5, #3
 801189c:	fb0e 7e0c 	mla	lr, lr, ip, r7
 80118a0:	b2ed      	uxtb	r5, r5
 80118a2:	ea4f 07e9 	mov.w	r7, r9, asr #3
 80118a6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80118aa:	fb15 f504 	smulbb	r5, r5, r4
 80118ae:	fa5f f989 	uxtb.w	r9, r9
 80118b2:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80118b6:	fb09 550c 	mla	r5, r9, ip, r5
 80118ba:	fb1a fa04 	smulbb	sl, sl, r4
 80118be:	fa1f fe8e 	uxth.w	lr, lr
 80118c2:	b2ad      	uxth	r5, r5
 80118c4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80118c8:	fb07 a70c 	mla	r7, r7, ip, sl
 80118cc:	f10e 0401 	add.w	r4, lr, #1
 80118d0:	f105 0a01 	add.w	sl, r5, #1
 80118d4:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 80118d8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80118dc:	b2bf      	uxth	r7, r7
 80118de:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80118e2:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 80118e6:	ea4a 0e0e 	orr.w	lr, sl, lr
 80118ea:	f107 0a01 	add.w	sl, r7, #1
 80118ee:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80118f2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80118f6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80118fa:	9c02      	ldr	r4, [sp, #8]
 80118fc:	ea4e 0e0a 	orr.w	lr, lr, sl
 8011900:	f820 e004 	strh.w	lr, [r0, r4]
 8011904:	e7aa      	b.n	801185c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8011906:	f04f 0900 	mov.w	r9, #0
 801190a:	eba3 0409 	sub.w	r4, r3, r9
 801190e:	2c00      	cmp	r4, #0
 8011910:	f77f af4a 	ble.w	80117a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011914:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8011918:	1414      	asrs	r4, r2, #16
 801191a:	140d      	asrs	r5, r1, #16
 801191c:	fb06 5504 	mla	r5, r6, r4, r5
 8011920:	9c01      	ldr	r4, [sp, #4]
 8011922:	5d64      	ldrb	r4, [r4, r5]
 8011924:	2cff      	cmp	r4, #255	@ 0xff
 8011926:	d10b      	bne.n	8011940 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8011928:	9c00      	ldr	r4, [sp, #0]
 801192a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801192e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8011932:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8011934:	4421      	add	r1, r4
 8011936:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8011938:	f109 0901 	add.w	r9, r9, #1
 801193c:	4422      	add	r2, r4
 801193e:	e7e4      	b.n	801190a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8011940:	2c00      	cmp	r4, #0
 8011942:	d0f6      	beq.n	8011932 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8011944:	9e00      	ldr	r6, [sp, #0]
 8011946:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801194a:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801194e:	b2a7      	uxth	r7, r4
 8011950:	122e      	asrs	r6, r5, #8
 8011952:	43e4      	mvns	r4, r4
 8011954:	b2e4      	uxtb	r4, r4
 8011956:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801195a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801195e:	fb16 f604 	smulbb	r6, r6, r4
 8011962:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8011966:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801196a:	00ed      	lsls	r5, r5, #3
 801196c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8011970:	b2ed      	uxtb	r5, r5
 8011972:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8011976:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801197a:	fb15 f504 	smulbb	r5, r5, r4
 801197e:	fa5f fe8e 	uxtb.w	lr, lr
 8011982:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8011986:	fb0e 5507 	mla	r5, lr, r7, r5
 801198a:	fb1a fa04 	smulbb	sl, sl, r4
 801198e:	fa1f fc8c 	uxth.w	ip, ip
 8011992:	b2ad      	uxth	r5, r5
 8011994:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8011998:	fb06 a607 	mla	r6, r6, r7, sl
 801199c:	f10c 0401 	add.w	r4, ip, #1
 80119a0:	f105 0a01 	add.w	sl, r5, #1
 80119a4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80119a8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80119ac:	b2b6      	uxth	r6, r6
 80119ae:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80119b2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80119b6:	ea4a 0c0c 	orr.w	ip, sl, ip
 80119ba:	f106 0a01 	add.w	sl, r6, #1
 80119be:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80119c2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80119c6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80119ca:	ea4c 0c0a 	orr.w	ip, ip, sl
 80119ce:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80119d2:	e7ae      	b.n	8011932 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80119d4:	b005      	add	sp, #20
 80119d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080119da <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80119da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80119de:	b085      	sub	sp, #20
 80119e0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80119e2:	9203      	str	r2, [sp, #12]
 80119e4:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 80119e8:	9201      	str	r2, [sp, #4]
 80119ea:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80119ee:	9100      	str	r1, [sp, #0]
 80119f0:	6841      	ldr	r1, [r0, #4]
 80119f2:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 80119f6:	fb01 2404 	mla	r4, r1, r4, r2
 80119fa:	6802      	ldr	r2, [r0, #0]
 80119fc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011a00:	f8de 2000 	ldr.w	r2, [lr]
 8011a04:	9202      	str	r2, [sp, #8]
 8011a06:	9a01      	ldr	r2, [sp, #4]
 8011a08:	43d6      	mvns	r6, r2
 8011a0a:	b2f6      	uxtb	r6, r6
 8011a0c:	9a00      	ldr	r2, [sp, #0]
 8011a0e:	2a00      	cmp	r2, #0
 8011a10:	dc03      	bgt.n	8011a1a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8011a12:	9a03      	ldr	r2, [sp, #12]
 8011a14:	2a00      	cmp	r2, #0
 8011a16:	f340 8124 	ble.w	8011c62 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8011a1a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8011a1c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8011a20:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8011a24:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8011a28:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8011a2a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8011a2e:	2b00      	cmp	r3, #0
 8011a30:	dd0e      	ble.n	8011a50 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011a32:	1408      	asrs	r0, r1, #16
 8011a34:	d405      	bmi.n	8011a42 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8011a36:	4560      	cmp	r0, ip
 8011a38:	da03      	bge.n	8011a42 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8011a3a:	1410      	asrs	r0, r2, #16
 8011a3c:	d401      	bmi.n	8011a42 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8011a3e:	42b8      	cmp	r0, r7
 8011a40:	db07      	blt.n	8011a52 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8011a42:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8011a44:	4401      	add	r1, r0
 8011a46:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8011a48:	3b01      	subs	r3, #1
 8011a4a:	4402      	add	r2, r0
 8011a4c:	3402      	adds	r4, #2
 8011a4e:	e7ee      	b.n	8011a2e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8011a50:	d06e      	beq.n	8011b30 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8011a52:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8011a54:	1e58      	subs	r0, r3, #1
 8011a56:	fb05 1500 	mla	r5, r5, r0, r1
 8011a5a:	142d      	asrs	r5, r5, #16
 8011a5c:	d45c      	bmi.n	8011b18 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8011a5e:	4565      	cmp	r5, ip
 8011a60:	da5a      	bge.n	8011b18 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8011a62:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8011a64:	fb05 2000 	mla	r0, r5, r0, r2
 8011a68:	1400      	asrs	r0, r0, #16
 8011a6a:	d455      	bmi.n	8011b18 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8011a6c:	42b8      	cmp	r0, r7
 8011a6e:	da53      	bge.n	8011b18 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8011a70:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8011a74:	4699      	mov	r9, r3
 8011a76:	46a2      	mov	sl, r4
 8011a78:	f1b9 0f00 	cmp.w	r9, #0
 8011a7c:	dd54      	ble.n	8011b28 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8011a7e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8011a82:	140d      	asrs	r5, r1, #16
 8011a84:	1410      	asrs	r0, r2, #16
 8011a86:	fb07 5000 	mla	r0, r7, r0, r5
 8011a8a:	9d02      	ldr	r5, [sp, #8]
 8011a8c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8011a90:	f8ba 5000 	ldrh.w	r5, [sl]
 8011a94:	122f      	asrs	r7, r5, #8
 8011a96:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8011a9a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8011a9e:	fb17 f706 	smulbb	r7, r7, r6
 8011aa2:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8011aa6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8011aaa:	00ed      	lsls	r5, r5, #3
 8011aac:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8011ab0:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8011ab4:	10c7      	asrs	r7, r0, #3
 8011ab6:	b2ed      	uxtb	r5, r5
 8011ab8:	00c0      	lsls	r0, r0, #3
 8011aba:	fb18 f806 	smulbb	r8, r8, r6
 8011abe:	fb15 f506 	smulbb	r5, r5, r6
 8011ac2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8011ac6:	b2c0      	uxtb	r0, r0
 8011ac8:	fa1f fc8c 	uxth.w	ip, ip
 8011acc:	fb07 870b 	mla	r7, r7, fp, r8
 8011ad0:	fb00 500b 	mla	r0, r0, fp, r5
 8011ad4:	b280      	uxth	r0, r0
 8011ad6:	b2bf      	uxth	r7, r7
 8011ad8:	f10c 0501 	add.w	r5, ip, #1
 8011adc:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011ae0:	f107 0801 	add.w	r8, r7, #1
 8011ae4:	1c45      	adds	r5, r0, #1
 8011ae6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8011aea:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8011aee:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8011af0:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8011af4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011af8:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8011afc:	ea45 0c0c 	orr.w	ip, r5, ip
 8011b00:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8011b04:	4401      	add	r1, r0
 8011b06:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8011b08:	ea4c 0c08 	orr.w	ip, ip, r8
 8011b0c:	f82a cb02 	strh.w	ip, [sl], #2
 8011b10:	4402      	add	r2, r0
 8011b12:	f109 39ff 	add.w	r9, r9, #4294967295
 8011b16:	e7af      	b.n	8011a78 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011b18:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8011b1c:	f04f 0800 	mov.w	r8, #0
 8011b20:	eb03 0008 	add.w	r0, r3, r8
 8011b24:	2800      	cmp	r0, #0
 8011b26:	dc41      	bgt.n	8011bac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8011b28:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011b2c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011b30:	9b00      	ldr	r3, [sp, #0]
 8011b32:	2b00      	cmp	r3, #0
 8011b34:	f340 8095 	ble.w	8011c62 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8011b38:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011b3c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8011b40:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8011b44:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011b46:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011b4a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011b4e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011b52:	eef0 6a62 	vmov.f32	s13, s5
 8011b56:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011b5a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011b5e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011b62:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 8011b66:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011b6a:	eef0 6a43 	vmov.f32	s13, s6
 8011b6e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011b72:	ee12 2a90 	vmov	r2, s5
 8011b76:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011b7a:	fb92 f3f3 	sdiv	r3, r2, r3
 8011b7e:	ee13 2a10 	vmov	r2, s6
 8011b82:	9311      	str	r3, [sp, #68]	@ 0x44
 8011b84:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011b86:	fb92 f3f3 	sdiv	r3, r2, r3
 8011b8a:	9312      	str	r3, [sp, #72]	@ 0x48
 8011b8c:	9b00      	ldr	r3, [sp, #0]
 8011b8e:	9a03      	ldr	r2, [sp, #12]
 8011b90:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011b94:	3b01      	subs	r3, #1
 8011b96:	9300      	str	r3, [sp, #0]
 8011b98:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8011b9c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011b9e:	eeb0 3a67 	vmov.f32	s6, s15
 8011ba2:	bf08      	it	eq
 8011ba4:	4613      	moveq	r3, r2
 8011ba6:	eef0 2a47 	vmov.f32	s5, s14
 8011baa:	e72f      	b.n	8011a0c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8011bac:	140f      	asrs	r7, r1, #16
 8011bae:	d451      	bmi.n	8011c54 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8011bb0:	f8de 5008 	ldr.w	r5, [lr, #8]
 8011bb4:	42bd      	cmp	r5, r7
 8011bb6:	dd4d      	ble.n	8011c54 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8011bb8:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011bbc:	d44a      	bmi.n	8011c54 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8011bbe:	f8de 000c 	ldr.w	r0, [lr, #12]
 8011bc2:	4560      	cmp	r0, ip
 8011bc4:	dd46      	ble.n	8011c54 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8011bc6:	b22d      	sxth	r5, r5
 8011bc8:	fb0c 7505 	mla	r5, ip, r5, r7
 8011bcc:	9802      	ldr	r0, [sp, #8]
 8011bce:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8011bd2:	f06f 0501 	mvn.w	r5, #1
 8011bd6:	fb05 fb08 	mul.w	fp, r5, r8
 8011bda:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8011bde:	f834 500b 	ldrh.w	r5, [r4, fp]
 8011be2:	122f      	asrs	r7, r5, #8
 8011be4:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8011be8:	fb17 f706 	smulbb	r7, r7, r6
 8011bec:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8011bf0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8011bf4:	00ed      	lsls	r5, r5, #3
 8011bf6:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8011bfa:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8011bfe:	10c7      	asrs	r7, r0, #3
 8011c00:	b2ed      	uxtb	r5, r5
 8011c02:	00c0      	lsls	r0, r0, #3
 8011c04:	fb19 f906 	smulbb	r9, r9, r6
 8011c08:	fb15 f506 	smulbb	r5, r5, r6
 8011c0c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8011c10:	b2c0      	uxtb	r0, r0
 8011c12:	fa1f fc8c 	uxth.w	ip, ip
 8011c16:	fb07 970a 	mla	r7, r7, sl, r9
 8011c1a:	fb00 500a 	mla	r0, r0, sl, r5
 8011c1e:	b2bf      	uxth	r7, r7
 8011c20:	b280      	uxth	r0, r0
 8011c22:	f10c 0501 	add.w	r5, ip, #1
 8011c26:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011c2a:	f107 0901 	add.w	r9, r7, #1
 8011c2e:	1c45      	adds	r5, r0, #1
 8011c30:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8011c34:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8011c38:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8011c3c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011c40:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8011c44:	ea45 0c0c 	orr.w	ip, r5, ip
 8011c48:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8011c4c:	ea4c 0c09 	orr.w	ip, ip, r9
 8011c50:	f824 c00b 	strh.w	ip, [r4, fp]
 8011c54:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8011c56:	4401      	add	r1, r0
 8011c58:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8011c5a:	f108 38ff 	add.w	r8, r8, #4294967295
 8011c5e:	4402      	add	r2, r0
 8011c60:	e75e      	b.n	8011b20 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8011c62:	b005      	add	sp, #20
 8011c64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011c68 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011c68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011c6c:	b085      	sub	sp, #20
 8011c6e:	4693      	mov	fp, r2
 8011c70:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8011c72:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8011c74:	6870      	ldr	r0, [r6, #4]
 8011c76:	9101      	str	r1, [sp, #4]
 8011c78:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8011c7c:	fb00 2404 	mla	r4, r0, r4, r2
 8011c80:	6832      	ldr	r2, [r6, #0]
 8011c82:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8011c86:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011c8a:	682a      	ldr	r2, [r5, #0]
 8011c8c:	9202      	str	r2, [sp, #8]
 8011c8e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8011c92:	9a01      	ldr	r2, [sp, #4]
 8011c94:	2a00      	cmp	r2, #0
 8011c96:	dc03      	bgt.n	8011ca0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8011c98:	f1bb 0f00 	cmp.w	fp, #0
 8011c9c:	f340 809a 	ble.w	8011dd4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8011ca0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8011ca2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8011ca6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8011caa:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8011cae:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8011cb0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8011cb4:	2b00      	cmp	r3, #0
 8011cb6:	dd0c      	ble.n	8011cd2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8011cb8:	1406      	asrs	r6, r0, #16
 8011cba:	d405      	bmi.n	8011cc8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011cbc:	454e      	cmp	r6, r9
 8011cbe:	da03      	bge.n	8011cc8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011cc0:	1416      	asrs	r6, r2, #16
 8011cc2:	d401      	bmi.n	8011cc8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011cc4:	4546      	cmp	r6, r8
 8011cc6:	db05      	blt.n	8011cd4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011cc8:	4470      	add	r0, lr
 8011cca:	4462      	add	r2, ip
 8011ccc:	3b01      	subs	r3, #1
 8011cce:	3402      	adds	r4, #2
 8011cd0:	e7f0      	b.n	8011cb4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8011cd2:	d00f      	beq.n	8011cf4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8011cd4:	1e5e      	subs	r6, r3, #1
 8011cd6:	fb0e 0706 	mla	r7, lr, r6, r0
 8011cda:	143f      	asrs	r7, r7, #16
 8011cdc:	d541      	bpl.n	8011d62 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8011cde:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8011ce2:	4698      	mov	r8, r3
 8011ce4:	9603      	str	r6, [sp, #12]
 8011ce6:	f1b8 0f00 	cmp.w	r8, #0
 8011cea:	dc56      	bgt.n	8011d9a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8011cec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011cf0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011cf4:	9b01      	ldr	r3, [sp, #4]
 8011cf6:	2b00      	cmp	r3, #0
 8011cf8:	dd6c      	ble.n	8011dd4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8011cfa:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011cfe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011d02:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011d06:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011d08:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011d0c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011d10:	eeb0 6a62 	vmov.f32	s12, s5
 8011d14:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011d18:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011d1c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011d20:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8011d24:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011d28:	eeb0 6a43 	vmov.f32	s12, s6
 8011d2c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011d30:	ee12 2a90 	vmov	r2, s5
 8011d34:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011d38:	fb92 fef3 	sdiv	lr, r2, r3
 8011d3c:	ee13 2a10 	vmov	r2, s6
 8011d40:	fb92 fcf3 	sdiv	ip, r2, r3
 8011d44:	9b01      	ldr	r3, [sp, #4]
 8011d46:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011d4a:	3b01      	subs	r3, #1
 8011d4c:	9301      	str	r3, [sp, #4]
 8011d4e:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8011d52:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011d54:	eeb0 3a67 	vmov.f32	s6, s15
 8011d58:	bf08      	it	eq
 8011d5a:	465b      	moveq	r3, fp
 8011d5c:	eef0 2a47 	vmov.f32	s5, s14
 8011d60:	e797      	b.n	8011c92 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8011d62:	454f      	cmp	r7, r9
 8011d64:	dabb      	bge.n	8011cde <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011d66:	fb0c 2606 	mla	r6, ip, r6, r2
 8011d6a:	1436      	asrs	r6, r6, #16
 8011d6c:	d4b7      	bmi.n	8011cde <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011d6e:	4546      	cmp	r6, r8
 8011d70:	dab5      	bge.n	8011cde <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011d72:	461e      	mov	r6, r3
 8011d74:	46a0      	mov	r8, r4
 8011d76:	2e00      	cmp	r6, #0
 8011d78:	ddb8      	ble.n	8011cec <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8011d7a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8011d7e:	9902      	ldr	r1, [sp, #8]
 8011d80:	1417      	asrs	r7, r2, #16
 8011d82:	ea4f 4920 	mov.w	r9, r0, asr #16
 8011d86:	fb0a 9707 	mla	r7, sl, r7, r9
 8011d8a:	4470      	add	r0, lr
 8011d8c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8011d90:	f828 7b02 	strh.w	r7, [r8], #2
 8011d94:	4462      	add	r2, ip
 8011d96:	3e01      	subs	r6, #1
 8011d98:	e7ed      	b.n	8011d76 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8011d9a:	ea5f 4920 	movs.w	r9, r0, asr #16
 8011d9e:	d414      	bmi.n	8011dca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8011da0:	68ae      	ldr	r6, [r5, #8]
 8011da2:	454e      	cmp	r6, r9
 8011da4:	dd11      	ble.n	8011dca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8011da6:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8011daa:	d40e      	bmi.n	8011dca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8011dac:	68ef      	ldr	r7, [r5, #12]
 8011dae:	4557      	cmp	r7, sl
 8011db0:	dd0b      	ble.n	8011dca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8011db2:	b236      	sxth	r6, r6
 8011db4:	fb0a 9606 	mla	r6, sl, r6, r9
 8011db8:	9f02      	ldr	r7, [sp, #8]
 8011dba:	f06f 0101 	mvn.w	r1, #1
 8011dbe:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8011dc2:	fb01 f608 	mul.w	r6, r1, r8
 8011dc6:	9903      	ldr	r1, [sp, #12]
 8011dc8:	538f      	strh	r7, [r1, r6]
 8011dca:	4470      	add	r0, lr
 8011dcc:	4462      	add	r2, ip
 8011dce:	f108 38ff 	add.w	r8, r8, #4294967295
 8011dd2:	e788      	b.n	8011ce6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011dd4:	b005      	add	sp, #20
 8011dd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011dda <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011dda:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011dde:	b087      	sub	sp, #28
 8011de0:	468b      	mov	fp, r1
 8011de2:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8011de4:	9203      	str	r2, [sp, #12]
 8011de6:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8011dea:	9204      	str	r2, [sp, #16]
 8011dec:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 8011df0:	6841      	ldr	r1, [r0, #4]
 8011df2:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8011df6:	fb01 2505 	mla	r5, r1, r5, r2
 8011dfa:	6802      	ldr	r2, [r0, #0]
 8011dfc:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8011e00:	f8d9 2000 	ldr.w	r2, [r9]
 8011e04:	9201      	str	r2, [sp, #4]
 8011e06:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8011e0a:	f1bb 0f00 	cmp.w	fp, #0
 8011e0e:	dc03      	bgt.n	8011e18 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8011e10:	9a03      	ldr	r2, [sp, #12]
 8011e12:	2a00      	cmp	r2, #0
 8011e14:	f340 8159 	ble.w	80120ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8011e18:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8011e1a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8011e1e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8011e22:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8011e26:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8011e28:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8011e2c:	2b00      	cmp	r3, #0
 8011e2e:	dd0e      	ble.n	8011e4e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8011e30:	1402      	asrs	r2, r0, #16
 8011e32:	d405      	bmi.n	8011e40 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011e34:	42ba      	cmp	r2, r7
 8011e36:	da03      	bge.n	8011e40 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011e38:	140a      	asrs	r2, r1, #16
 8011e3a:	d401      	bmi.n	8011e40 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011e3c:	42b2      	cmp	r2, r6
 8011e3e:	db07      	blt.n	8011e50 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011e40:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8011e42:	4410      	add	r0, r2
 8011e44:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8011e46:	3b01      	subs	r3, #1
 8011e48:	4411      	add	r1, r2
 8011e4a:	3502      	adds	r5, #2
 8011e4c:	e7ee      	b.n	8011e2c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8011e4e:	d017      	beq.n	8011e80 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8011e50:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8011e52:	1e5a      	subs	r2, r3, #1
 8011e54:	fb04 0402 	mla	r4, r4, r2, r0
 8011e58:	1424      	asrs	r4, r4, #16
 8011e5a:	d409      	bmi.n	8011e70 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011e5c:	42bc      	cmp	r4, r7
 8011e5e:	da07      	bge.n	8011e70 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011e60:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8011e62:	fb04 1202 	mla	r2, r4, r2, r1
 8011e66:	1412      	asrs	r2, r2, #16
 8011e68:	d402      	bmi.n	8011e70 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011e6a:	42b2      	cmp	r2, r6
 8011e6c:	f2c0 80bf 	blt.w	8011fee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8011e70:	2700      	movs	r7, #0
 8011e72:	19da      	adds	r2, r3, r7
 8011e74:	2a00      	cmp	r2, #0
 8011e76:	dc3e      	bgt.n	8011ef6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8011e78:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011e7c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8011e80:	f1bb 0f00 	cmp.w	fp, #0
 8011e84:	f340 8121 	ble.w	80120ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8011e88:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011e8c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011e90:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011e94:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011e96:	f1bb 0b01 	subs.w	fp, fp, #1
 8011e9a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011e9e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011ea2:	eeb0 6a62 	vmov.f32	s12, s5
 8011ea6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011eaa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011eae:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011eb2:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8011eb6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011eba:	eeb0 6a43 	vmov.f32	s12, s6
 8011ebe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011ec2:	ee12 2a90 	vmov	r2, s5
 8011ec6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011eca:	fb92 f3f3 	sdiv	r3, r2, r3
 8011ece:	ee13 2a10 	vmov	r2, s6
 8011ed2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011ed6:	9313      	str	r3, [sp, #76]	@ 0x4c
 8011ed8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011eda:	fb92 f3f3 	sdiv	r3, r2, r3
 8011ede:	9a03      	ldr	r2, [sp, #12]
 8011ee0:	9314      	str	r3, [sp, #80]	@ 0x50
 8011ee2:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8011ee6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011ee8:	eeb0 3a67 	vmov.f32	s6, s15
 8011eec:	bf08      	it	eq
 8011eee:	4613      	moveq	r3, r2
 8011ef0:	eef0 2a47 	vmov.f32	s5, s14
 8011ef4:	e789      	b.n	8011e0a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8011ef6:	1406      	asrs	r6, r0, #16
 8011ef8:	d42d      	bmi.n	8011f56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011efa:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8011efe:	42b4      	cmp	r4, r6
 8011f00:	dd29      	ble.n	8011f56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011f02:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8011f06:	d426      	bmi.n	8011f56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011f08:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8011f0c:	4562      	cmp	r2, ip
 8011f0e:	dd22      	ble.n	8011f56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011f10:	b224      	sxth	r4, r4
 8011f12:	9a01      	ldr	r2, [sp, #4]
 8011f14:	fb0c 6404 	mla	r4, ip, r4, r6
 8011f18:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8011f1c:	0e22      	lsrs	r2, r4, #24
 8011f1e:	d01a      	beq.n	8011f56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011f20:	9e04      	ldr	r6, [sp, #16]
 8011f22:	4372      	muls	r2, r6
 8011f24:	1c56      	adds	r6, r2, #1
 8011f26:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8011f2a:	1212      	asrs	r2, r2, #8
 8011f2c:	0a26      	lsrs	r6, r4, #8
 8011f2e:	2aff      	cmp	r2, #255	@ 0xff
 8011f30:	9605      	str	r6, [sp, #20]
 8011f32:	d116      	bne.n	8011f62 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8011f34:	f06f 0201 	mvn.w	r2, #1
 8011f38:	fb02 fc07 	mul.w	ip, r2, r7
 8011f3c:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8011f40:	0962      	lsrs	r2, r4, #5
 8011f42:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8011f46:	f026 0607 	bic.w	r6, r6, #7
 8011f4a:	4316      	orrs	r6, r2
 8011f4c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8011f50:	4326      	orrs	r6, r4
 8011f52:	f825 600c 	strh.w	r6, [r5, ip]
 8011f56:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8011f58:	4410      	add	r0, r2
 8011f5a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8011f5c:	3f01      	subs	r7, #1
 8011f5e:	4411      	add	r1, r2
 8011f60:	e787      	b.n	8011e72 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8011f62:	f06f 0601 	mvn.w	r6, #1
 8011f66:	437e      	muls	r6, r7
 8011f68:	fa1f fa82 	uxth.w	sl, r2
 8011f6c:	f835 8006 	ldrh.w	r8, [r5, r6]
 8011f70:	9602      	str	r6, [sp, #8]
 8011f72:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8011f76:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8011f7a:	43d2      	mvns	r2, r2
 8011f7c:	b2d2      	uxtb	r2, r2
 8011f7e:	fb1c fc0a 	smulbb	ip, ip, sl
 8011f82:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8011f86:	fb0e ce02 	mla	lr, lr, r2, ip
 8011f8a:	b2e4      	uxtb	r4, r4
 8011f8c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8011f90:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011f94:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8011f98:	fa5f f888 	uxtb.w	r8, r8
 8011f9c:	fb14 f40a 	smulbb	r4, r4, sl
 8011fa0:	fb08 4402 	mla	r4, r8, r2, r4
 8011fa4:	fa1f fe8e 	uxth.w	lr, lr
 8011fa8:	fb16 f60a 	smulbb	r6, r6, sl
 8011fac:	b2a4      	uxth	r4, r4
 8011fae:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8011fb2:	fb0c 6c02 	mla	ip, ip, r2, r6
 8011fb6:	f10e 0201 	add.w	r2, lr, #1
 8011fba:	1c66      	adds	r6, r4, #1
 8011fbc:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8011fc0:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8011fc4:	fa1f fc8c 	uxth.w	ip, ip
 8011fc8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011fcc:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8011fd0:	ea46 0e0e 	orr.w	lr, r6, lr
 8011fd4:	f10c 0601 	add.w	r6, ip, #1
 8011fd8:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8011fdc:	0976      	lsrs	r6, r6, #5
 8011fde:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8011fe2:	9a02      	ldr	r2, [sp, #8]
 8011fe4:	ea4e 0e06 	orr.w	lr, lr, r6
 8011fe8:	f825 e002 	strh.w	lr, [r5, r2]
 8011fec:	e7b3      	b.n	8011f56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011fee:	f04f 0800 	mov.w	r8, #0
 8011ff2:	eba3 0208 	sub.w	r2, r3, r8
 8011ff6:	2a00      	cmp	r2, #0
 8011ff8:	f77f af3e 	ble.w	8011e78 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011ffc:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8012000:	1404      	asrs	r4, r0, #16
 8012002:	140a      	asrs	r2, r1, #16
 8012004:	fb06 4202 	mla	r2, r6, r2, r4
 8012008:	9c01      	ldr	r4, [sp, #4]
 801200a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801200e:	0e22      	lsrs	r2, r4, #24
 8012010:	d016      	beq.n	8012040 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8012012:	9e04      	ldr	r6, [sp, #16]
 8012014:	4372      	muls	r2, r6
 8012016:	1c56      	adds	r6, r2, #1
 8012018:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801201c:	1212      	asrs	r2, r2, #8
 801201e:	2aff      	cmp	r2, #255	@ 0xff
 8012020:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8012024:	d113      	bne.n	801204e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8012026:	0962      	lsrs	r2, r4, #5
 8012028:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801202c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8012030:	f026 0607 	bic.w	r6, r6, #7
 8012034:	4316      	orrs	r6, r2
 8012036:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801203a:	4326      	orrs	r6, r4
 801203c:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8012040:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8012042:	4410      	add	r0, r2
 8012044:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8012046:	f108 0801 	add.w	r8, r8, #1
 801204a:	4411      	add	r1, r2
 801204c:	e7d1      	b.n	8011ff2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801204e:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8012052:	fa1f fa82 	uxth.w	sl, r2
 8012056:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801205a:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801205e:	43d2      	mvns	r2, r2
 8012060:	b2d2      	uxtb	r2, r2
 8012062:	fb17 f70a 	smulbb	r7, r7, sl
 8012066:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801206a:	fb0c 7c02 	mla	ip, ip, r2, r7
 801206e:	b2e4      	uxtb	r4, r4
 8012070:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8012074:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012078:	fa5f fe8e 	uxtb.w	lr, lr
 801207c:	fb14 f40a 	smulbb	r4, r4, sl
 8012080:	fb0e 4402 	mla	r4, lr, r2, r4
 8012084:	b2f6      	uxtb	r6, r6
 8012086:	fa1f fc8c 	uxth.w	ip, ip
 801208a:	fb16 f60a 	smulbb	r6, r6, sl
 801208e:	b2a4      	uxth	r4, r4
 8012090:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8012094:	fb07 6702 	mla	r7, r7, r2, r6
 8012098:	f10c 0201 	add.w	r2, ip, #1
 801209c:	1c66      	adds	r6, r4, #1
 801209e:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80120a2:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80120a6:	b2bf      	uxth	r7, r7
 80120a8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80120ac:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80120b0:	ea46 0c0c 	orr.w	ip, r6, ip
 80120b4:	1c7e      	adds	r6, r7, #1
 80120b6:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80120ba:	0976      	lsrs	r6, r6, #5
 80120bc:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80120c0:	ea4c 0c06 	orr.w	ip, ip, r6
 80120c4:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 80120c8:	e7ba      	b.n	8012040 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80120ca:	b007      	add	sp, #28
 80120cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080120d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80120d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80120d4:	b085      	sub	sp, #20
 80120d6:	468b      	mov	fp, r1
 80120d8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80120da:	9203      	str	r2, [sp, #12]
 80120dc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80120e0:	6841      	ldr	r1, [r0, #4]
 80120e2:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 80120e6:	fb01 2404 	mla	r4, r1, r4, r2
 80120ea:	6802      	ldr	r2, [r0, #0]
 80120ec:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80120f0:	f8d8 2000 	ldr.w	r2, [r8]
 80120f4:	9201      	str	r2, [sp, #4]
 80120f6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80120fa:	f1bb 0f00 	cmp.w	fp, #0
 80120fe:	dc03      	bgt.n	8012108 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8012100:	9a03      	ldr	r2, [sp, #12]
 8012102:	2a00      	cmp	r2, #0
 8012104:	f340 814f 	ble.w	80123a6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8012108:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801210a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801210e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8012112:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8012116:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8012118:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801211c:	2b00      	cmp	r3, #0
 801211e:	dd0e      	ble.n	801213e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8012120:	1408      	asrs	r0, r1, #16
 8012122:	d405      	bmi.n	8012130 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012124:	42b8      	cmp	r0, r7
 8012126:	da03      	bge.n	8012130 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012128:	1410      	asrs	r0, r2, #16
 801212a:	d401      	bmi.n	8012130 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801212c:	42b0      	cmp	r0, r6
 801212e:	db07      	blt.n	8012140 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012130:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8012132:	4401      	add	r1, r0
 8012134:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8012136:	3b01      	subs	r3, #1
 8012138:	4402      	add	r2, r0
 801213a:	3402      	adds	r4, #2
 801213c:	e7ee      	b.n	801211c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801213e:	d017      	beq.n	8012170 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8012140:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8012142:	1e58      	subs	r0, r3, #1
 8012144:	fb05 1500 	mla	r5, r5, r0, r1
 8012148:	142d      	asrs	r5, r5, #16
 801214a:	d409      	bmi.n	8012160 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801214c:	42bd      	cmp	r5, r7
 801214e:	da07      	bge.n	8012160 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8012150:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8012152:	fb05 2000 	mla	r0, r5, r0, r2
 8012156:	1400      	asrs	r0, r0, #16
 8012158:	d402      	bmi.n	8012160 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801215a:	42b0      	cmp	r0, r6
 801215c:	f2c0 80ba 	blt.w	80122d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8012160:	2600      	movs	r6, #0
 8012162:	1998      	adds	r0, r3, r6
 8012164:	2800      	cmp	r0, #0
 8012166:	dc3e      	bgt.n	80121e6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8012168:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801216c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012170:	f1bb 0f00 	cmp.w	fp, #0
 8012174:	f340 8117 	ble.w	80123a6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8012178:	ee30 0a04 	vadd.f32	s0, s0, s8
 801217c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012180:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012184:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012186:	f1bb 0b01 	subs.w	fp, fp, #1
 801218a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801218e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012192:	eeb0 6a62 	vmov.f32	s12, s5
 8012196:	ee61 7a27 	vmul.f32	s15, s2, s15
 801219a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801219e:	ee77 2a62 	vsub.f32	s5, s14, s5
 80121a2:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80121a6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80121aa:	eeb0 6a43 	vmov.f32	s12, s6
 80121ae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80121b2:	ee12 2a90 	vmov	r2, s5
 80121b6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80121ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80121be:	ee13 2a10 	vmov	r2, s6
 80121c2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80121c6:	9311      	str	r3, [sp, #68]	@ 0x44
 80121c8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80121ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80121ce:	9a03      	ldr	r2, [sp, #12]
 80121d0:	9312      	str	r3, [sp, #72]	@ 0x48
 80121d2:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80121d6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80121d8:	eeb0 3a67 	vmov.f32	s6, s15
 80121dc:	bf08      	it	eq
 80121de:	4613      	moveq	r3, r2
 80121e0:	eef0 2a47 	vmov.f32	s5, s14
 80121e4:	e789      	b.n	80120fa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80121e6:	140f      	asrs	r7, r1, #16
 80121e8:	d424      	bmi.n	8012234 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80121ea:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80121ee:	42bd      	cmp	r5, r7
 80121f0:	dd20      	ble.n	8012234 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80121f2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80121f6:	d41d      	bmi.n	8012234 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80121f8:	f8d8 000c 	ldr.w	r0, [r8, #12]
 80121fc:	4560      	cmp	r0, ip
 80121fe:	dd19      	ble.n	8012234 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8012200:	b22d      	sxth	r5, r5
 8012202:	fb0c 7505 	mla	r5, ip, r5, r7
 8012206:	9801      	ldr	r0, [sp, #4]
 8012208:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801220c:	0e07      	lsrs	r7, r0, #24
 801220e:	2fff      	cmp	r7, #255	@ 0xff
 8012210:	d116      	bne.n	8012240 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8012212:	f06f 0501 	mvn.w	r5, #1
 8012216:	fb05 f706 	mul.w	r7, r5, r6
 801221a:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 801221e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8012222:	0945      	lsrs	r5, r0, #5
 8012224:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8012228:	ea4c 0505 	orr.w	r5, ip, r5
 801222c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8012230:	4305      	orrs	r5, r0
 8012232:	53e5      	strh	r5, [r4, r7]
 8012234:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8012236:	4401      	add	r1, r0
 8012238:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801223a:	3e01      	subs	r6, #1
 801223c:	4402      	add	r2, r0
 801223e:	e790      	b.n	8012162 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8012240:	b2fd      	uxtb	r5, r7
 8012242:	2f00      	cmp	r7, #0
 8012244:	d0f6      	beq.n	8012234 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8012246:	f06f 0701 	mvn.w	r7, #1
 801224a:	4377      	muls	r7, r6
 801224c:	fa1f f985 	uxth.w	r9, r5
 8012250:	f834 e007 	ldrh.w	lr, [r4, r7]
 8012254:	9702      	str	r7, [sp, #8]
 8012256:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801225a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801225e:	43ed      	mvns	r5, r5
 8012260:	b2ed      	uxtb	r5, r5
 8012262:	fb17 f709 	smulbb	r7, r7, r9
 8012266:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801226a:	fb0c 7c05 	mla	ip, ip, r5, r7
 801226e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8012272:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8012276:	b2c0      	uxtb	r0, r0
 8012278:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801227c:	fa5f fe8e 	uxtb.w	lr, lr
 8012280:	fb10 f009 	smulbb	r0, r0, r9
 8012284:	fb0e 0005 	mla	r0, lr, r5, r0
 8012288:	b280      	uxth	r0, r0
 801228a:	fa1f fc8c 	uxth.w	ip, ip
 801228e:	fb1a fa09 	smulbb	sl, sl, r9
 8012292:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8012296:	fb07 a705 	mla	r7, r7, r5, sl
 801229a:	f100 0a01 	add.w	sl, r0, #1
 801229e:	f10c 0501 	add.w	r5, ip, #1
 80122a2:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80122a6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80122aa:	b2bf      	uxth	r7, r7
 80122ac:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80122b0:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80122b4:	ea4a 0c0c 	orr.w	ip, sl, ip
 80122b8:	f107 0a01 	add.w	sl, r7, #1
 80122bc:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80122c0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80122c4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80122c8:	9802      	ldr	r0, [sp, #8]
 80122ca:	ea4c 0c0a 	orr.w	ip, ip, sl
 80122ce:	f824 c000 	strh.w	ip, [r4, r0]
 80122d2:	e7af      	b.n	8012234 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80122d4:	f04f 0e00 	mov.w	lr, #0
 80122d8:	eba3 000e 	sub.w	r0, r3, lr
 80122dc:	2800      	cmp	r0, #0
 80122de:	f77f af43 	ble.w	8012168 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80122e2:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80122e6:	140d      	asrs	r5, r1, #16
 80122e8:	1410      	asrs	r0, r2, #16
 80122ea:	fb06 5000 	mla	r0, r6, r0, r5
 80122ee:	9d01      	ldr	r5, [sp, #4]
 80122f0:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80122f4:	0e2e      	lsrs	r6, r5, #24
 80122f6:	2eff      	cmp	r6, #255	@ 0xff
 80122f8:	d112      	bne.n	8012320 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 80122fa:	482c      	ldr	r0, [pc, #176]	@ (80123ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 80122fc:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8012300:	0968      	lsrs	r0, r5, #5
 8012302:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8012306:	4330      	orrs	r0, r6
 8012308:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801230c:	4328      	orrs	r0, r5
 801230e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8012312:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8012314:	4401      	add	r1, r0
 8012316:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8012318:	f10e 0e01 	add.w	lr, lr, #1
 801231c:	4402      	add	r2, r0
 801231e:	e7db      	b.n	80122d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8012320:	b2f0      	uxtb	r0, r6
 8012322:	2e00      	cmp	r6, #0
 8012324:	d0f5      	beq.n	8012312 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8012326:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801232a:	fa1f f980 	uxth.w	r9, r0
 801232e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8012332:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8012336:	43c0      	mvns	r0, r0
 8012338:	b2c0      	uxtb	r0, r0
 801233a:	fb16 f609 	smulbb	r6, r6, r9
 801233e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8012342:	fb07 6700 	mla	r7, r7, r0, r6
 8012346:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801234a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801234e:	b2ed      	uxtb	r5, r5
 8012350:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8012354:	fa5f fc8c 	uxtb.w	ip, ip
 8012358:	fb15 f509 	smulbb	r5, r5, r9
 801235c:	fb0c 5500 	mla	r5, ip, r0, r5
 8012360:	b2bf      	uxth	r7, r7
 8012362:	fb1a fa09 	smulbb	sl, sl, r9
 8012366:	b2ad      	uxth	r5, r5
 8012368:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801236c:	fb06 a600 	mla	r6, r6, r0, sl
 8012370:	1c78      	adds	r0, r7, #1
 8012372:	f105 0a01 	add.w	sl, r5, #1
 8012376:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801237a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801237e:	b2b6      	uxth	r6, r6
 8012380:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012384:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8012388:	ea4a 0707 	orr.w	r7, sl, r7
 801238c:	f106 0a01 	add.w	sl, r6, #1
 8012390:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012394:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012398:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801239c:	ea47 070a 	orr.w	r7, r7, sl
 80123a0:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 80123a4:	e7b5      	b.n	8012312 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80123a6:	b005      	add	sp, #20
 80123a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80123ac:	fffff800 	.word	0xfffff800

080123b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80123b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80123b4:	b087      	sub	sp, #28
 80123b6:	468b      	mov	fp, r1
 80123b8:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80123ba:	9203      	str	r2, [sp, #12]
 80123bc:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80123c0:	9204      	str	r2, [sp, #16]
 80123c2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 80123c6:	6841      	ldr	r1, [r0, #4]
 80123c8:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 80123cc:	fb01 2404 	mla	r4, r1, r4, r2
 80123d0:	6802      	ldr	r2, [r0, #0]
 80123d2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80123d6:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80123da:	3201      	adds	r2, #1
 80123dc:	f022 0201 	bic.w	r2, r2, #1
 80123e0:	9200      	str	r2, [sp, #0]
 80123e2:	f8d9 2000 	ldr.w	r2, [r9]
 80123e6:	9201      	str	r2, [sp, #4]
 80123e8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80123ec:	f1bb 0f00 	cmp.w	fp, #0
 80123f0:	dc03      	bgt.n	80123fa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80123f2:	9a03      	ldr	r2, [sp, #12]
 80123f4:	2a00      	cmp	r2, #0
 80123f6:	f340 8169 	ble.w	80126cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80123fa:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80123fc:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8012400:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8012404:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8012408:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801240a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801240e:	2b00      	cmp	r3, #0
 8012410:	dd0e      	ble.n	8012430 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8012412:	1402      	asrs	r2, r0, #16
 8012414:	d405      	bmi.n	8012422 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8012416:	42ba      	cmp	r2, r7
 8012418:	da03      	bge.n	8012422 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801241a:	140a      	asrs	r2, r1, #16
 801241c:	d401      	bmi.n	8012422 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801241e:	42b2      	cmp	r2, r6
 8012420:	db07      	blt.n	8012432 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8012422:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8012424:	4410      	add	r0, r2
 8012426:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8012428:	3b01      	subs	r3, #1
 801242a:	4411      	add	r1, r2
 801242c:	3402      	adds	r4, #2
 801242e:	e7ee      	b.n	801240e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8012430:	d017      	beq.n	8012462 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8012432:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8012434:	1e5a      	subs	r2, r3, #1
 8012436:	fb05 0502 	mla	r5, r5, r2, r0
 801243a:	142d      	asrs	r5, r5, #16
 801243c:	d409      	bmi.n	8012452 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801243e:	42bd      	cmp	r5, r7
 8012440:	da07      	bge.n	8012452 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8012442:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8012444:	fb05 1202 	mla	r2, r5, r2, r1
 8012448:	1412      	asrs	r2, r2, #16
 801244a:	d402      	bmi.n	8012452 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801244c:	42b2      	cmp	r2, r6
 801244e:	f2c0 80c7 	blt.w	80125e0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8012452:	2700      	movs	r7, #0
 8012454:	19da      	adds	r2, r3, r7
 8012456:	2a00      	cmp	r2, #0
 8012458:	dc3e      	bgt.n	80124d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801245a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801245e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012462:	f1bb 0f00 	cmp.w	fp, #0
 8012466:	f340 8131 	ble.w	80126cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801246a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801246e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012472:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012476:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012478:	f1bb 0b01 	subs.w	fp, fp, #1
 801247c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012480:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012484:	eeb0 6a62 	vmov.f32	s12, s5
 8012488:	ee61 7a27 	vmul.f32	s15, s2, s15
 801248c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012490:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012494:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8012498:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801249c:	eeb0 6a43 	vmov.f32	s12, s6
 80124a0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80124a4:	ee12 2a90 	vmov	r2, s5
 80124a8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80124ac:	fb92 f3f3 	sdiv	r3, r2, r3
 80124b0:	ee13 2a10 	vmov	r2, s6
 80124b4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80124b8:	9313      	str	r3, [sp, #76]	@ 0x4c
 80124ba:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80124bc:	fb92 f3f3 	sdiv	r3, r2, r3
 80124c0:	9a03      	ldr	r2, [sp, #12]
 80124c2:	9314      	str	r3, [sp, #80]	@ 0x50
 80124c4:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80124c8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80124ca:	eeb0 3a67 	vmov.f32	s6, s15
 80124ce:	bf08      	it	eq
 80124d0:	4613      	moveq	r3, r2
 80124d2:	eef0 2a47 	vmov.f32	s5, s14
 80124d6:	e789      	b.n	80123ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80124d8:	1405      	asrs	r5, r0, #16
 80124da:	d435      	bmi.n	8012548 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80124dc:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80124e0:	42aa      	cmp	r2, r5
 80124e2:	dd31      	ble.n	8012548 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80124e4:	140e      	asrs	r6, r1, #16
 80124e6:	d42f      	bmi.n	8012548 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80124e8:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80124ec:	42b2      	cmp	r2, r6
 80124ee:	dd2b      	ble.n	8012548 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80124f0:	9a00      	ldr	r2, [sp, #0]
 80124f2:	fb06 5502 	mla	r5, r6, r2, r5
 80124f6:	086a      	lsrs	r2, r5, #1
 80124f8:	9e01      	ldr	r6, [sp, #4]
 80124fa:	5cb2      	ldrb	r2, [r6, r2]
 80124fc:	07ee      	lsls	r6, r5, #31
 80124fe:	bf54      	ite	pl
 8012500:	f002 020f 	andpl.w	r2, r2, #15
 8012504:	1112      	asrmi	r2, r2, #4
 8012506:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801250a:	b2d2      	uxtb	r2, r2
 801250c:	b1e2      	cbz	r2, 8012548 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801250e:	9d04      	ldr	r5, [sp, #16]
 8012510:	436a      	muls	r2, r5
 8012512:	1c55      	adds	r5, r2, #1
 8012514:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8012518:	4d6e      	ldr	r5, [pc, #440]	@ (80126d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801251a:	682d      	ldr	r5, [r5, #0]
 801251c:	1212      	asrs	r2, r2, #8
 801251e:	0a2e      	lsrs	r6, r5, #8
 8012520:	2aff      	cmp	r2, #255	@ 0xff
 8012522:	9605      	str	r6, [sp, #20]
 8012524:	d116      	bne.n	8012554 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8012526:	f06f 0201 	mvn.w	r2, #1
 801252a:	fb02 fc07 	mul.w	ip, r2, r7
 801252e:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8012532:	096a      	lsrs	r2, r5, #5
 8012534:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8012538:	f026 0607 	bic.w	r6, r6, #7
 801253c:	4316      	orrs	r6, r2
 801253e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8012542:	432e      	orrs	r6, r5
 8012544:	f824 600c 	strh.w	r6, [r4, ip]
 8012548:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801254a:	4410      	add	r0, r2
 801254c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801254e:	3f01      	subs	r7, #1
 8012550:	4411      	add	r1, r2
 8012552:	e77f      	b.n	8012454 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8012554:	f06f 0601 	mvn.w	r6, #1
 8012558:	437e      	muls	r6, r7
 801255a:	fa1f fa82 	uxth.w	sl, r2
 801255e:	f834 8006 	ldrh.w	r8, [r4, r6]
 8012562:	9602      	str	r6, [sp, #8]
 8012564:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8012568:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801256c:	43d2      	mvns	r2, r2
 801256e:	b2d2      	uxtb	r2, r2
 8012570:	fb1c fc0a 	smulbb	ip, ip, sl
 8012574:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8012578:	fb0e ce02 	mla	lr, lr, r2, ip
 801257c:	b2ed      	uxtb	r5, r5
 801257e:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8012582:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8012586:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801258a:	fa5f f888 	uxtb.w	r8, r8
 801258e:	fb15 f50a 	smulbb	r5, r5, sl
 8012592:	fb08 5502 	mla	r5, r8, r2, r5
 8012596:	fa1f fe8e 	uxth.w	lr, lr
 801259a:	fb16 f60a 	smulbb	r6, r6, sl
 801259e:	b2ad      	uxth	r5, r5
 80125a0:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 80125a4:	fb0c 6c02 	mla	ip, ip, r2, r6
 80125a8:	f10e 0201 	add.w	r2, lr, #1
 80125ac:	1c6e      	adds	r6, r5, #1
 80125ae:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80125b2:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 80125b6:	fa1f fc8c 	uxth.w	ip, ip
 80125ba:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80125be:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 80125c2:	ea46 0e0e 	orr.w	lr, r6, lr
 80125c6:	f10c 0601 	add.w	r6, ip, #1
 80125ca:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80125ce:	0976      	lsrs	r6, r6, #5
 80125d0:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80125d4:	9a02      	ldr	r2, [sp, #8]
 80125d6:	ea4e 0e06 	orr.w	lr, lr, r6
 80125da:	f824 e002 	strh.w	lr, [r4, r2]
 80125de:	e7b3      	b.n	8012548 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80125e0:	f04f 0800 	mov.w	r8, #0
 80125e4:	eba3 0208 	sub.w	r2, r3, r8
 80125e8:	2a00      	cmp	r2, #0
 80125ea:	f77f af36 	ble.w	801245a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80125ee:	9e00      	ldr	r6, [sp, #0]
 80125f0:	1402      	asrs	r2, r0, #16
 80125f2:	140d      	asrs	r5, r1, #16
 80125f4:	fb06 2505 	mla	r5, r6, r5, r2
 80125f8:	086a      	lsrs	r2, r5, #1
 80125fa:	9e01      	ldr	r6, [sp, #4]
 80125fc:	5cb2      	ldrb	r2, [r6, r2]
 80125fe:	07ed      	lsls	r5, r5, #31
 8012600:	bf54      	ite	pl
 8012602:	f002 020f 	andpl.w	r2, r2, #15
 8012606:	1112      	asrmi	r2, r2, #4
 8012608:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801260c:	b2d2      	uxtb	r2, r2
 801260e:	b1c2      	cbz	r2, 8012642 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8012610:	9d04      	ldr	r5, [sp, #16]
 8012612:	436a      	muls	r2, r5
 8012614:	1c55      	adds	r5, r2, #1
 8012616:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801261a:	4d2e      	ldr	r5, [pc, #184]	@ (80126d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801261c:	1212      	asrs	r2, r2, #8
 801261e:	682e      	ldr	r6, [r5, #0]
 8012620:	2aff      	cmp	r2, #255	@ 0xff
 8012622:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8012626:	d113      	bne.n	8012650 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8012628:	0972      	lsrs	r2, r6, #5
 801262a:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 801262e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8012632:	f025 0507 	bic.w	r5, r5, #7
 8012636:	4315      	orrs	r5, r2
 8012638:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801263c:	4335      	orrs	r5, r6
 801263e:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8012642:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8012644:	4410      	add	r0, r2
 8012646:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8012648:	f108 0801 	add.w	r8, r8, #1
 801264c:	4411      	add	r1, r2
 801264e:	e7c9      	b.n	80125e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8012650:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8012654:	fa1f fa82 	uxth.w	sl, r2
 8012658:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801265c:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8012660:	43d2      	mvns	r2, r2
 8012662:	b2d2      	uxtb	r2, r2
 8012664:	fb17 f70a 	smulbb	r7, r7, sl
 8012668:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801266c:	fb0c 7c02 	mla	ip, ip, r2, r7
 8012670:	b2f6      	uxtb	r6, r6
 8012672:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8012676:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801267a:	fa5f fe8e 	uxtb.w	lr, lr
 801267e:	fb16 f60a 	smulbb	r6, r6, sl
 8012682:	fb0e 6602 	mla	r6, lr, r2, r6
 8012686:	b2ed      	uxtb	r5, r5
 8012688:	fa1f fc8c 	uxth.w	ip, ip
 801268c:	fb15 f50a 	smulbb	r5, r5, sl
 8012690:	b2b6      	uxth	r6, r6
 8012692:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8012696:	fb07 5702 	mla	r7, r7, r2, r5
 801269a:	f10c 0201 	add.w	r2, ip, #1
 801269e:	1c75      	adds	r5, r6, #1
 80126a0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80126a4:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 80126a8:	b2bf      	uxth	r7, r7
 80126aa:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80126ae:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80126b2:	ea45 0c0c 	orr.w	ip, r5, ip
 80126b6:	1c7d      	adds	r5, r7, #1
 80126b8:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 80126bc:	096d      	lsrs	r5, r5, #5
 80126be:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80126c2:	ea4c 0c05 	orr.w	ip, ip, r5
 80126c6:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 80126ca:	e7ba      	b.n	8012642 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 80126cc:	b007      	add	sp, #28
 80126ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80126d2:	bf00      	nop
 80126d4:	20011a04 	.word	0x20011a04

080126d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80126d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80126dc:	b087      	sub	sp, #28
 80126de:	f8df 830c 	ldr.w	r8, [pc, #780]	@ 80129ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 80126e2:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80126e4:	9205      	str	r2, [sp, #20]
 80126e6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 80126ea:	9101      	str	r1, [sp, #4]
 80126ec:	6841      	ldr	r1, [r0, #4]
 80126ee:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 80126f2:	fb01 2404 	mla	r4, r1, r4, r2
 80126f6:	6802      	ldr	r2, [r0, #0]
 80126f8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80126fc:	f8db 2008 	ldr.w	r2, [fp, #8]
 8012700:	3201      	adds	r2, #1
 8012702:	f022 0201 	bic.w	r2, r2, #1
 8012706:	9202      	str	r2, [sp, #8]
 8012708:	f8db 2000 	ldr.w	r2, [fp]
 801270c:	9203      	str	r2, [sp, #12]
 801270e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8012712:	9a01      	ldr	r2, [sp, #4]
 8012714:	2a00      	cmp	r2, #0
 8012716:	dc03      	bgt.n	8012720 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8012718:	9a05      	ldr	r2, [sp, #20]
 801271a:	2a00      	cmp	r2, #0
 801271c:	f340 8162 	ble.w	80129e4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8012720:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8012722:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8012726:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801272a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801272e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8012730:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8012734:	2b00      	cmp	r3, #0
 8012736:	dd0e      	ble.n	8012756 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012738:	1402      	asrs	r2, r0, #16
 801273a:	d405      	bmi.n	8012748 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801273c:	42ba      	cmp	r2, r7
 801273e:	da03      	bge.n	8012748 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012740:	140a      	asrs	r2, r1, #16
 8012742:	d401      	bmi.n	8012748 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012744:	42b2      	cmp	r2, r6
 8012746:	db07      	blt.n	8012758 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8012748:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801274a:	4410      	add	r0, r2
 801274c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801274e:	3b01      	subs	r3, #1
 8012750:	4411      	add	r1, r2
 8012752:	3402      	adds	r4, #2
 8012754:	e7ee      	b.n	8012734 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8012756:	d017      	beq.n	8012788 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8012758:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801275a:	1e5a      	subs	r2, r3, #1
 801275c:	fb05 0502 	mla	r5, r5, r2, r0
 8012760:	142d      	asrs	r5, r5, #16
 8012762:	d409      	bmi.n	8012778 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8012764:	42bd      	cmp	r5, r7
 8012766:	da07      	bge.n	8012778 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8012768:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801276a:	fb05 1202 	mla	r2, r5, r2, r1
 801276e:	1412      	asrs	r2, r2, #16
 8012770:	d402      	bmi.n	8012778 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8012772:	42b2      	cmp	r2, r6
 8012774:	f2c0 80c3 	blt.w	80128fe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8012778:	2500      	movs	r5, #0
 801277a:	195a      	adds	r2, r3, r5
 801277c:	2a00      	cmp	r2, #0
 801277e:	dc3f      	bgt.n	8012800 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8012780:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012784:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012788:	9b01      	ldr	r3, [sp, #4]
 801278a:	2b00      	cmp	r3, #0
 801278c:	f340 812a 	ble.w	80129e4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8012790:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012794:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012798:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801279c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801279e:	ee31 1a05 	vadd.f32	s2, s2, s10
 80127a2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80127a6:	eeb0 6a62 	vmov.f32	s12, s5
 80127aa:	ee61 7a27 	vmul.f32	s15, s2, s15
 80127ae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80127b2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80127b6:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80127ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80127be:	eeb0 6a43 	vmov.f32	s12, s6
 80127c2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80127c6:	ee12 2a90 	vmov	r2, s5
 80127ca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80127ce:	fb92 f3f3 	sdiv	r3, r2, r3
 80127d2:	ee13 2a10 	vmov	r2, s6
 80127d6:	9313      	str	r3, [sp, #76]	@ 0x4c
 80127d8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80127da:	fb92 f3f3 	sdiv	r3, r2, r3
 80127de:	9314      	str	r3, [sp, #80]	@ 0x50
 80127e0:	9b01      	ldr	r3, [sp, #4]
 80127e2:	9a05      	ldr	r2, [sp, #20]
 80127e4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80127e8:	3b01      	subs	r3, #1
 80127ea:	9301      	str	r3, [sp, #4]
 80127ec:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80127f0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80127f2:	eeb0 3a67 	vmov.f32	s6, s15
 80127f6:	bf08      	it	eq
 80127f8:	4613      	moveq	r3, r2
 80127fa:	eef0 2a47 	vmov.f32	s5, s14
 80127fe:	e788      	b.n	8012712 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8012800:	1406      	asrs	r6, r0, #16
 8012802:	d42c      	bmi.n	801285e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012804:	f8db 2008 	ldr.w	r2, [fp, #8]
 8012808:	42b2      	cmp	r2, r6
 801280a:	dd28      	ble.n	801285e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801280c:	140f      	asrs	r7, r1, #16
 801280e:	d426      	bmi.n	801285e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012810:	f8db 200c 	ldr.w	r2, [fp, #12]
 8012814:	42ba      	cmp	r2, r7
 8012816:	dd22      	ble.n	801285e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012818:	9a02      	ldr	r2, [sp, #8]
 801281a:	fb07 6602 	mla	r6, r7, r2, r6
 801281e:	0872      	lsrs	r2, r6, #1
 8012820:	9f03      	ldr	r7, [sp, #12]
 8012822:	5cba      	ldrb	r2, [r7, r2]
 8012824:	07f6      	lsls	r6, r6, #31
 8012826:	bf54      	ite	pl
 8012828:	f002 020f 	andpl.w	r2, r2, #15
 801282c:	1112      	asrmi	r2, r2, #4
 801282e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8012832:	b2d2      	uxtb	r2, r2
 8012834:	2aff      	cmp	r2, #255	@ 0xff
 8012836:	d118      	bne.n	801286a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8012838:	f8d8 2000 	ldr.w	r2, [r8]
 801283c:	f06f 0601 	mvn.w	r6, #1
 8012840:	fb06 f705 	mul.w	r7, r6, r5
 8012844:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 8012848:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801284c:	0956      	lsrs	r6, r2, #5
 801284e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8012852:	ea4c 0606 	orr.w	r6, ip, r6
 8012856:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801285a:	4316      	orrs	r6, r2
 801285c:	53e6      	strh	r6, [r4, r7]
 801285e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8012860:	4410      	add	r0, r2
 8012862:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8012864:	3d01      	subs	r5, #1
 8012866:	4411      	add	r1, r2
 8012868:	e787      	b.n	801277a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801286a:	2a00      	cmp	r2, #0
 801286c:	d0f7      	beq.n	801285e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801286e:	f06f 0601 	mvn.w	r6, #1
 8012872:	436e      	muls	r6, r5
 8012874:	f8d8 c000 	ldr.w	ip, [r8]
 8012878:	f834 e006 	ldrh.w	lr, [r4, r6]
 801287c:	9604      	str	r6, [sp, #16]
 801287e:	fa1f f982 	uxth.w	r9, r2
 8012882:	ea4f 272e 	mov.w	r7, lr, asr #8
 8012886:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801288a:	43d2      	mvns	r2, r2
 801288c:	b2d2      	uxtb	r2, r2
 801288e:	fb16 f609 	smulbb	r6, r6, r9
 8012892:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8012896:	fb07 6702 	mla	r7, r7, r2, r6
 801289a:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801289e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80128a2:	fa5f fc8c 	uxtb.w	ip, ip
 80128a6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80128aa:	fa5f fe8e 	uxtb.w	lr, lr
 80128ae:	fb1c fc09 	smulbb	ip, ip, r9
 80128b2:	fb0e cc02 	mla	ip, lr, r2, ip
 80128b6:	b2bf      	uxth	r7, r7
 80128b8:	fb1a fa09 	smulbb	sl, sl, r9
 80128bc:	fa1f fc8c 	uxth.w	ip, ip
 80128c0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80128c4:	fb06 a602 	mla	r6, r6, r2, sl
 80128c8:	1c7a      	adds	r2, r7, #1
 80128ca:	f10c 0a01 	add.w	sl, ip, #1
 80128ce:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80128d2:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 80128d6:	b2b6      	uxth	r6, r6
 80128d8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80128dc:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80128e0:	ea4a 0707 	orr.w	r7, sl, r7
 80128e4:	f106 0a01 	add.w	sl, r6, #1
 80128e8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80128ec:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80128f0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80128f4:	9a04      	ldr	r2, [sp, #16]
 80128f6:	ea47 070a 	orr.w	r7, r7, sl
 80128fa:	52a7      	strh	r7, [r4, r2]
 80128fc:	e7af      	b.n	801285e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80128fe:	f04f 0e00 	mov.w	lr, #0
 8012902:	eba3 020e 	sub.w	r2, r3, lr
 8012906:	2a00      	cmp	r2, #0
 8012908:	f77f af3a 	ble.w	8012780 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801290c:	9e02      	ldr	r6, [sp, #8]
 801290e:	1402      	asrs	r2, r0, #16
 8012910:	140d      	asrs	r5, r1, #16
 8012912:	fb06 2505 	mla	r5, r6, r5, r2
 8012916:	086a      	lsrs	r2, r5, #1
 8012918:	9e03      	ldr	r6, [sp, #12]
 801291a:	5cb2      	ldrb	r2, [r6, r2]
 801291c:	07ed      	lsls	r5, r5, #31
 801291e:	bf54      	ite	pl
 8012920:	f002 020f 	andpl.w	r2, r2, #15
 8012924:	1112      	asrmi	r2, r2, #4
 8012926:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801292a:	b2d2      	uxtb	r2, r2
 801292c:	2aff      	cmp	r2, #255	@ 0xff
 801292e:	d115      	bne.n	801295c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8012930:	f8d8 5000 	ldr.w	r5, [r8]
 8012934:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 8012938:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801293c:	096a      	lsrs	r2, r5, #5
 801293e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8012942:	4332      	orrs	r2, r6
 8012944:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8012948:	432a      	orrs	r2, r5
 801294a:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801294e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8012950:	4410      	add	r0, r2
 8012952:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8012954:	f10e 0e01 	add.w	lr, lr, #1
 8012958:	4411      	add	r1, r2
 801295a:	e7d2      	b.n	8012902 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801295c:	2a00      	cmp	r2, #0
 801295e:	d0f6      	beq.n	801294e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8012960:	f8d8 7000 	ldr.w	r7, [r8]
 8012964:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8012968:	fa1f f982 	uxth.w	r9, r2
 801296c:	ea4f 262c 	mov.w	r6, ip, asr #8
 8012970:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8012974:	43d2      	mvns	r2, r2
 8012976:	b2d2      	uxtb	r2, r2
 8012978:	fb15 f509 	smulbb	r5, r5, r9
 801297c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8012980:	fb06 5602 	mla	r6, r6, r2, r5
 8012984:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8012988:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801298c:	b2ff      	uxtb	r7, r7
 801298e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8012992:	fa5f fc8c 	uxtb.w	ip, ip
 8012996:	fb17 f709 	smulbb	r7, r7, r9
 801299a:	fb0c 7702 	mla	r7, ip, r2, r7
 801299e:	b2b6      	uxth	r6, r6
 80129a0:	fb1a fa09 	smulbb	sl, sl, r9
 80129a4:	b2bf      	uxth	r7, r7
 80129a6:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80129aa:	fb05 a502 	mla	r5, r5, r2, sl
 80129ae:	1c72      	adds	r2, r6, #1
 80129b0:	f107 0a01 	add.w	sl, r7, #1
 80129b4:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80129b8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80129bc:	b2ad      	uxth	r5, r5
 80129be:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80129c2:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 80129c6:	ea4a 0606 	orr.w	r6, sl, r6
 80129ca:	f105 0a01 	add.w	sl, r5, #1
 80129ce:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80129d2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80129d6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80129da:	ea46 060a 	orr.w	r6, r6, sl
 80129de:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 80129e2:	e7b4      	b.n	801294e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80129e4:	b007      	add	sp, #28
 80129e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80129ea:	bf00      	nop
 80129ec:	20011a04 	.word	0x20011a04

080129f0 <_ZN8touchgfx8LCD16bppD1Ev>:
 80129f0:	4770      	bx	lr

080129f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 80129f2:	4770      	bx	lr

080129f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 80129f4:	4770      	bx	lr

080129f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 80129f6:	4770      	bx	lr

080129f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 80129f8:	4770      	bx	lr

080129fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 80129fa:	4770      	bx	lr

080129fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 80129fc:	4770      	bx	lr

080129fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 80129fe:	4770      	bx	lr

08012a00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8012a00:	4770      	bx	lr

08012a02 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8012a02:	4770      	bx	lr

08012a04 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8012a04:	4770      	bx	lr

08012a06 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8012a06:	4770      	bx	lr

08012a08 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8012a08:	4770      	bx	lr

08012a0a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8012a0a:	4770      	bx	lr

08012a0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8012a0c:	4770      	bx	lr

08012a0e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8012a0e:	4770      	bx	lr

08012a10 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8012a10:	4770      	bx	lr

08012a12 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8012a12:	4770      	bx	lr

08012a14 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8012a14:	4770      	bx	lr

08012a16 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8012a16:	4770      	bx	lr

08012a18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8012a18:	4770      	bx	lr

08012a1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8012a1a:	4770      	bx	lr

08012a1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8012a1c:	4770      	bx	lr

08012a1e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8012a1e:	4770      	bx	lr

08012a20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8012a20:	4770      	bx	lr

08012a22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8012a22:	4770      	bx	lr

08012a24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8012a24:	4770      	bx	lr

08012a26 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8012a26:	4770      	bx	lr

08012a28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8012a28:	4770      	bx	lr

08012a2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8012a2a:	4770      	bx	lr

08012a2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8012a2c:	4770      	bx	lr

08012a2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8012a2e:	4770      	bx	lr

08012a30 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8012a30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012a34:	b088      	sub	sp, #32
 8012a36:	ac08      	add	r4, sp, #32
 8012a38:	4606      	mov	r6, r0
 8012a3a:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8012a3e:	4620      	mov	r0, r4
 8012a40:	4688      	mov	r8, r1
 8012a42:	4691      	mov	r9, r2
 8012a44:	f7fd fc62 	bl	801030c <_ZNK8touchgfx6Bitmap7getDataEv>
 8012a48:	6833      	ldr	r3, [r6, #0]
 8012a4a:	4605      	mov	r5, r0
 8012a4c:	4620      	mov	r0, r4
 8012a4e:	699f      	ldr	r7, [r3, #24]
 8012a50:	f7fd fb6a 	bl	8010128 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012a54:	4682      	mov	sl, r0
 8012a56:	4620      	mov	r0, r4
 8012a58:	f7fd fb9a 	bl	8010190 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012a5c:	9500      	str	r5, [sp, #0]
 8012a5e:	e9cd a001 	strd	sl, r0, [sp, #4]
 8012a62:	464b      	mov	r3, r9
 8012a64:	a806      	add	r0, sp, #24
 8012a66:	4642      	mov	r2, r8
 8012a68:	4631      	mov	r1, r6
 8012a6a:	47b8      	blx	r7
 8012a6c:	4628      	mov	r0, r5
 8012a6e:	b008      	add	sp, #32
 8012a70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08012a74 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8012a74:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8012a78:	2300      	movs	r3, #0
 8012a7a:	9300      	str	r3, [sp, #0]
 8012a7c:	4b3d      	ldr	r3, [pc, #244]	@ (8012b74 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8012a7e:	781b      	ldrb	r3, [r3, #0]
 8012a80:	2b00      	cmp	r3, #0
 8012a82:	d137      	bne.n	8012af4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8012a84:	4a3c      	ldr	r2, [pc, #240]	@ (8012b78 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8012a86:	f9b2 2000 	ldrsh.w	r2, [r2]
 8012a8a:	f8ad 2004 	strh.w	r2, [sp, #4]
 8012a8e:	2b00      	cmp	r3, #0
 8012a90:	d132      	bne.n	8012af8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8012a92:	4b3a      	ldr	r3, [pc, #232]	@ (8012b7c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8012a94:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012a98:	6808      	ldr	r0, [r1, #0]
 8012a9a:	6849      	ldr	r1, [r1, #4]
 8012a9c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012aa0:	ac02      	add	r4, sp, #8
 8012aa2:	ab02      	add	r3, sp, #8
 8012aa4:	c303      	stmia	r3!, {r0, r1}
 8012aa6:	4669      	mov	r1, sp
 8012aa8:	4620      	mov	r0, r4
 8012aaa:	f7fa f8e5 	bl	800cc78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012aae:	4668      	mov	r0, sp
 8012ab0:	f7fa f8ba 	bl	800cc28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012ab4:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8012ab8:	f8bd 2000 	ldrh.w	r2, [sp]
 8012abc:	4d30      	ldr	r5, [pc, #192]	@ (8012b80 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8012abe:	4413      	add	r3, r2
 8012ac0:	f8ad 3008 	strh.w	r3, [sp, #8]
 8012ac4:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8012ac8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8012acc:	6828      	ldr	r0, [r5, #0]
 8012ace:	4413      	add	r3, r2
 8012ad0:	f8ad 300a 	strh.w	r3, [sp, #10]
 8012ad4:	6803      	ldr	r3, [r0, #0]
 8012ad6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012ad8:	4798      	blx	r3
 8012ada:	f010 0f01 	tst.w	r0, #1
 8012ade:	462f      	mov	r7, r5
 8012ae0:	d00c      	beq.n	8012afc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8012ae2:	6828      	ldr	r0, [r5, #0]
 8012ae4:	6803      	ldr	r3, [r0, #0]
 8012ae6:	e894 0006 	ldmia.w	r4, {r1, r2}
 8012aea:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8012aec:	4798      	blx	r3
 8012aee:	b004      	add	sp, #16
 8012af0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012af4:	4a21      	ldr	r2, [pc, #132]	@ (8012b7c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8012af6:	e7c6      	b.n	8012a86 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8012af8:	4b1f      	ldr	r3, [pc, #124]	@ (8012b78 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8012afa:	e7cb      	b.n	8012a94 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8012afc:	6838      	ldr	r0, [r7, #0]
 8012afe:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8012b02:	6803      	ldr	r3, [r0, #0]
 8012b04:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8012b08:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8012b0a:	4798      	blx	r3
 8012b0c:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8012b10:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8012b14:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8012b18:	fb16 3602 	smlabb	r6, r6, r2, r3
 8012b1c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8012b20:	6838      	ldr	r0, [r7, #0]
 8012b22:	6803      	ldr	r3, [r0, #0]
 8012b24:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012b26:	4798      	blx	r3
 8012b28:	4a13      	ldr	r2, [pc, #76]	@ (8012b78 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8012b2a:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8012b2e:	8813      	ldrh	r3, [r2, #0]
 8012b30:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8012b34:	fb03 1404 	mla	r4, r3, r4, r1
 8012b38:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8012b3c:	435d      	muls	r5, r3
 8012b3e:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8012b42:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8012b46:	4691      	mov	r9, r2
 8012b48:	6838      	ldr	r0, [r7, #0]
 8012b4a:	42ac      	cmp	r4, r5
 8012b4c:	6803      	ldr	r3, [r0, #0]
 8012b4e:	d20e      	bcs.n	8012b6e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8012b50:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
 8012b54:	4632      	mov	r2, r6
 8012b56:	4643      	mov	r3, r8
 8012b58:	4621      	mov	r1, r4
 8012b5a:	47d0      	blx	sl
 8012b5c:	f8b9 3000 	ldrh.w	r3, [r9]
 8012b60:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012b64:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8012b68:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8012b6c:	e7ec      	b.n	8012b48 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8012b6e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012b70:	4798      	blx	r3
 8012b72:	e7bc      	b.n	8012aee <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8012b74:	200119f4 	.word	0x200119f4
 8012b78:	200119f6 	.word	0x200119f6
 8012b7c:	200119f8 	.word	0x200119f8
 8012b80:	200119fc 	.word	0x200119fc

08012b84 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8012b84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b88:	b08b      	sub	sp, #44	@ 0x2c
 8012b8a:	460f      	mov	r7, r1
 8012b8c:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 8012b90:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 8012b94:	4616      	mov	r6, r2
 8012b96:	f1bb 0f00 	cmp.w	fp, #0
 8012b9a:	d04a      	beq.n	8012c32 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8012b9c:	6810      	ldr	r0, [r2, #0]
 8012b9e:	6851      	ldr	r1, [r2, #4]
 8012ba0:	ad06      	add	r5, sp, #24
 8012ba2:	c503      	stmia	r5!, {r0, r1}
 8012ba4:	6818      	ldr	r0, [r3, #0]
 8012ba6:	6859      	ldr	r1, [r3, #4]
 8012ba8:	ad08      	add	r5, sp, #32
 8012baa:	c503      	stmia	r5!, {r0, r1}
 8012bac:	a806      	add	r0, sp, #24
 8012bae:	f7fa f83b 	bl	800cc28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012bb2:	4631      	mov	r1, r6
 8012bb4:	a808      	add	r0, sp, #32
 8012bb6:	f7fa f85f 	bl	800cc78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012bba:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8012bbe:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8012bc2:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8012bc6:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 8012bca:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 8012bce:	fb16 2103 	smlabb	r1, r6, r3, r2
 8012bd2:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8012bd6:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8012bda:	4f5f      	ldr	r7, [pc, #380]	@ (8012d58 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8012bdc:	440a      	add	r2, r1
 8012bde:	f8ad 2020 	strh.w	r2, [sp, #32]
 8012be2:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8012be6:	6838      	ldr	r0, [r7, #0]
 8012be8:	4413      	add	r3, r2
 8012bea:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8012bee:	6803      	ldr	r3, [r0, #0]
 8012bf0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012bf2:	4798      	blx	r3
 8012bf4:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8012bf8:	46b9      	mov	r9, r7
 8012bfa:	d11d      	bne.n	8012c38 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8012bfc:	b9fc      	cbnz	r4, 8012c3e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8012bfe:	f010 0f01 	tst.w	r0, #1
 8012c02:	d01c      	beq.n	8012c3e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8012c04:	f8d9 0000 	ldr.w	r0, [r9]
 8012c08:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8012c0c:	6801      	ldr	r1, [r0, #0]
 8012c0e:	f8cd b00c 	str.w	fp, [sp, #12]
 8012c12:	2700      	movs	r7, #0
 8012c14:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8012c18:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8012c1c:	9402      	str	r4, [sp, #8]
 8012c1e:	b2ad      	uxth	r5, r5
 8012c20:	fa1f f488 	uxth.w	r4, r8
 8012c24:	9501      	str	r5, [sp, #4]
 8012c26:	9400      	str	r4, [sp, #0]
 8012c28:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
 8012c2a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8012c2e:	4631      	mov	r1, r6
 8012c30:	47a0      	blx	r4
 8012c32:	b00b      	add	sp, #44	@ 0x2c
 8012c34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012c38:	f010 0f04 	tst.w	r0, #4
 8012c3c:	e7e1      	b.n	8012c02 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8012c3e:	f8d9 0000 	ldr.w	r0, [r9]
 8012c42:	6803      	ldr	r3, [r0, #0]
 8012c44:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012c46:	4798      	blx	r3
 8012c48:	4b44      	ldr	r3, [pc, #272]	@ (8012d5c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8012c4a:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 8012c4e:	881a      	ldrh	r2, [r3, #0]
 8012c50:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8012c54:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8012c58:	fb02 1404 	mla	r4, r2, r4, r1
 8012c5c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8012c60:	469a      	mov	sl, r3
 8012c62:	fb05 f502 	mul.w	r5, r5, r2
 8012c66:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8012c6a:	d059      	beq.n	8012d20 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8012c6c:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 8012c70:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8012c74:	fa1f f28b 	uxth.w	r2, fp
 8012c78:	fa1f f989 	uxth.w	r9, r9
 8012c7c:	469e      	mov	lr, r3
 8012c7e:	42ac      	cmp	r4, r5
 8012c80:	d264      	bcs.n	8012d4c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8012c82:	eb04 0a07 	add.w	sl, r4, r7
 8012c86:	4554      	cmp	r4, sl
 8012c88:	d23d      	bcs.n	8012d06 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8012c8a:	8821      	ldrh	r1, [r4, #0]
 8012c8c:	f836 3b02 	ldrh.w	r3, [r6], #2
 8012c90:	1208      	asrs	r0, r1, #8
 8012c92:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8012c96:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8012c9a:	fb10 f009 	smulbb	r0, r0, r9
 8012c9e:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8012ca2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8012ca6:	00c9      	lsls	r1, r1, #3
 8012ca8:	fb0c 0c02 	mla	ip, ip, r2, r0
 8012cac:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8012cb0:	10d8      	asrs	r0, r3, #3
 8012cb2:	b2c9      	uxtb	r1, r1
 8012cb4:	00db      	lsls	r3, r3, #3
 8012cb6:	fa1f fc8c 	uxth.w	ip, ip
 8012cba:	fb1b fb09 	smulbb	fp, fp, r9
 8012cbe:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8012cc2:	b2db      	uxtb	r3, r3
 8012cc4:	fb11 f109 	smulbb	r1, r1, r9
 8012cc8:	fb00 b002 	mla	r0, r0, r2, fp
 8012ccc:	fb03 1302 	mla	r3, r3, r2, r1
 8012cd0:	f10c 0b01 	add.w	fp, ip, #1
 8012cd4:	b29b      	uxth	r3, r3
 8012cd6:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8012cda:	b280      	uxth	r0, r0
 8012cdc:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 8012ce0:	f103 0c01 	add.w	ip, r3, #1
 8012ce4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8012ce8:	1c43      	adds	r3, r0, #1
 8012cea:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8012cee:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8012cf2:	0940      	lsrs	r0, r0, #5
 8012cf4:	ea4c 0c0b 	orr.w	ip, ip, fp
 8012cf8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8012cfc:	ea4c 0c00 	orr.w	ip, ip, r0
 8012d00:	f824 cb02 	strh.w	ip, [r4], #2
 8012d04:	e7bf      	b.n	8012c86 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8012d06:	f8be 3000 	ldrh.w	r3, [lr]
 8012d0a:	eba3 0308 	sub.w	r3, r3, r8
 8012d0e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012d12:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012d16:	eba3 0308 	sub.w	r3, r3, r8
 8012d1a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8012d1e:	e7ae      	b.n	8012c7e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8012d20:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8012d24:	f8d9 0000 	ldr.w	r0, [r9]
 8012d28:	42ac      	cmp	r4, r5
 8012d2a:	6803      	ldr	r3, [r0, #0]
 8012d2c:	d20e      	bcs.n	8012d4c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8012d2e:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
 8012d32:	4632      	mov	r2, r6
 8012d34:	463b      	mov	r3, r7
 8012d36:	4621      	mov	r1, r4
 8012d38:	47c0      	blx	r8
 8012d3a:	f8ba 3000 	ldrh.w	r3, [sl]
 8012d3e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012d42:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012d46:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8012d4a:	e7eb      	b.n	8012d24 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8012d4c:	4b02      	ldr	r3, [pc, #8]	@ (8012d58 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8012d4e:	6818      	ldr	r0, [r3, #0]
 8012d50:	6803      	ldr	r3, [r0, #0]
 8012d52:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012d54:	4798      	blx	r3
 8012d56:	e76c      	b.n	8012c32 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8012d58:	200119fc 	.word	0x200119fc
 8012d5c:	200119f6 	.word	0x200119f6

08012d60 <_ZN8touchgfx8LCD16bppD0Ev>:
 8012d60:	b510      	push	{r4, lr}
 8012d62:	2188      	movs	r1, #136	@ 0x88
 8012d64:	4604      	mov	r4, r0
 8012d66:	f00a fe5f 	bl	801da28 <_ZdlPvj>
 8012d6a:	4620      	mov	r0, r4
 8012d6c:	bd10      	pop	{r4, pc}

08012d6e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 8012d6e:	b510      	push	{r4, lr}
 8012d70:	2104      	movs	r1, #4
 8012d72:	4604      	mov	r4, r0
 8012d74:	f00a fe58 	bl	801da28 <_ZdlPvj>
 8012d78:	4620      	mov	r0, r4
 8012d7a:	bd10      	pop	{r4, pc}

08012d7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 8012d7c:	b510      	push	{r4, lr}
 8012d7e:	2104      	movs	r1, #4
 8012d80:	4604      	mov	r4, r0
 8012d82:	f00a fe51 	bl	801da28 <_ZdlPvj>
 8012d86:	4620      	mov	r0, r4
 8012d88:	bd10      	pop	{r4, pc}

08012d8a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 8012d8a:	b510      	push	{r4, lr}
 8012d8c:	f640 0144 	movw	r1, #2116	@ 0x844
 8012d90:	4604      	mov	r4, r0
 8012d92:	f00a fe49 	bl	801da28 <_ZdlPvj>
 8012d96:	4620      	mov	r0, r4
 8012d98:	bd10      	pop	{r4, pc}

08012d9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8012d9a:	b510      	push	{r4, lr}
 8012d9c:	2104      	movs	r1, #4
 8012d9e:	4604      	mov	r4, r0
 8012da0:	f00a fe42 	bl	801da28 <_ZdlPvj>
 8012da4:	4620      	mov	r0, r4
 8012da6:	bd10      	pop	{r4, pc}

08012da8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8012da8:	b510      	push	{r4, lr}
 8012daa:	2104      	movs	r1, #4
 8012dac:	4604      	mov	r4, r0
 8012dae:	f00a fe3b 	bl	801da28 <_ZdlPvj>
 8012db2:	4620      	mov	r0, r4
 8012db4:	bd10      	pop	{r4, pc}

08012db6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8012db6:	b510      	push	{r4, lr}
 8012db8:	2104      	movs	r1, #4
 8012dba:	4604      	mov	r4, r0
 8012dbc:	f00a fe34 	bl	801da28 <_ZdlPvj>
 8012dc0:	4620      	mov	r0, r4
 8012dc2:	bd10      	pop	{r4, pc}

08012dc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8012dc4:	b510      	push	{r4, lr}
 8012dc6:	2104      	movs	r1, #4
 8012dc8:	4604      	mov	r4, r0
 8012dca:	f00a fe2d 	bl	801da28 <_ZdlPvj>
 8012dce:	4620      	mov	r0, r4
 8012dd0:	bd10      	pop	{r4, pc}

08012dd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8012dd2:	b510      	push	{r4, lr}
 8012dd4:	2104      	movs	r1, #4
 8012dd6:	4604      	mov	r4, r0
 8012dd8:	f00a fe26 	bl	801da28 <_ZdlPvj>
 8012ddc:	4620      	mov	r0, r4
 8012dde:	bd10      	pop	{r4, pc}

08012de0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8012de0:	b510      	push	{r4, lr}
 8012de2:	2104      	movs	r1, #4
 8012de4:	4604      	mov	r4, r0
 8012de6:	f00a fe1f 	bl	801da28 <_ZdlPvj>
 8012dea:	4620      	mov	r0, r4
 8012dec:	bd10      	pop	{r4, pc}

08012dee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8012dee:	b510      	push	{r4, lr}
 8012df0:	2104      	movs	r1, #4
 8012df2:	4604      	mov	r4, r0
 8012df4:	f00a fe18 	bl	801da28 <_ZdlPvj>
 8012df8:	4620      	mov	r0, r4
 8012dfa:	bd10      	pop	{r4, pc}

08012dfc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8012dfc:	b510      	push	{r4, lr}
 8012dfe:	2104      	movs	r1, #4
 8012e00:	4604      	mov	r4, r0
 8012e02:	f00a fe11 	bl	801da28 <_ZdlPvj>
 8012e06:	4620      	mov	r0, r4
 8012e08:	bd10      	pop	{r4, pc}

08012e0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8012e0a:	b510      	push	{r4, lr}
 8012e0c:	2104      	movs	r1, #4
 8012e0e:	4604      	mov	r4, r0
 8012e10:	f00a fe0a 	bl	801da28 <_ZdlPvj>
 8012e14:	4620      	mov	r0, r4
 8012e16:	bd10      	pop	{r4, pc}

08012e18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012e18:	b510      	push	{r4, lr}
 8012e1a:	2104      	movs	r1, #4
 8012e1c:	4604      	mov	r4, r0
 8012e1e:	f00a fe03 	bl	801da28 <_ZdlPvj>
 8012e22:	4620      	mov	r0, r4
 8012e24:	bd10      	pop	{r4, pc}

08012e26 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8012e26:	b510      	push	{r4, lr}
 8012e28:	2104      	movs	r1, #4
 8012e2a:	4604      	mov	r4, r0
 8012e2c:	f00a fdfc 	bl	801da28 <_ZdlPvj>
 8012e30:	4620      	mov	r0, r4
 8012e32:	bd10      	pop	{r4, pc}

08012e34 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012e34:	b510      	push	{r4, lr}
 8012e36:	2104      	movs	r1, #4
 8012e38:	4604      	mov	r4, r0
 8012e3a:	f00a fdf5 	bl	801da28 <_ZdlPvj>
 8012e3e:	4620      	mov	r0, r4
 8012e40:	bd10      	pop	{r4, pc}

08012e42 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8012e42:	b510      	push	{r4, lr}
 8012e44:	2104      	movs	r1, #4
 8012e46:	4604      	mov	r4, r0
 8012e48:	f00a fdee 	bl	801da28 <_ZdlPvj>
 8012e4c:	4620      	mov	r0, r4
 8012e4e:	bd10      	pop	{r4, pc}

08012e50 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8012e50:	b510      	push	{r4, lr}
 8012e52:	2104      	movs	r1, #4
 8012e54:	4604      	mov	r4, r0
 8012e56:	f00a fde7 	bl	801da28 <_ZdlPvj>
 8012e5a:	4620      	mov	r0, r4
 8012e5c:	bd10      	pop	{r4, pc}

08012e5e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8012e5e:	b510      	push	{r4, lr}
 8012e60:	2104      	movs	r1, #4
 8012e62:	4604      	mov	r4, r0
 8012e64:	f00a fde0 	bl	801da28 <_ZdlPvj>
 8012e68:	4620      	mov	r0, r4
 8012e6a:	bd10      	pop	{r4, pc}

08012e6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012e6c:	b510      	push	{r4, lr}
 8012e6e:	2104      	movs	r1, #4
 8012e70:	4604      	mov	r4, r0
 8012e72:	f00a fdd9 	bl	801da28 <_ZdlPvj>
 8012e76:	4620      	mov	r0, r4
 8012e78:	bd10      	pop	{r4, pc}

08012e7a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8012e7a:	b510      	push	{r4, lr}
 8012e7c:	2104      	movs	r1, #4
 8012e7e:	4604      	mov	r4, r0
 8012e80:	f00a fdd2 	bl	801da28 <_ZdlPvj>
 8012e84:	4620      	mov	r0, r4
 8012e86:	bd10      	pop	{r4, pc}

08012e88 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8012e88:	b510      	push	{r4, lr}
 8012e8a:	2104      	movs	r1, #4
 8012e8c:	4604      	mov	r4, r0
 8012e8e:	f00a fdcb 	bl	801da28 <_ZdlPvj>
 8012e92:	4620      	mov	r0, r4
 8012e94:	bd10      	pop	{r4, pc}

08012e96 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8012e96:	b510      	push	{r4, lr}
 8012e98:	2104      	movs	r1, #4
 8012e9a:	4604      	mov	r4, r0
 8012e9c:	f00a fdc4 	bl	801da28 <_ZdlPvj>
 8012ea0:	4620      	mov	r0, r4
 8012ea2:	bd10      	pop	{r4, pc}

08012ea4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012ea4:	b510      	push	{r4, lr}
 8012ea6:	2104      	movs	r1, #4
 8012ea8:	4604      	mov	r4, r0
 8012eaa:	f00a fdbd 	bl	801da28 <_ZdlPvj>
 8012eae:	4620      	mov	r0, r4
 8012eb0:	bd10      	pop	{r4, pc}

08012eb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8012eb2:	b510      	push	{r4, lr}
 8012eb4:	2104      	movs	r1, #4
 8012eb6:	4604      	mov	r4, r0
 8012eb8:	f00a fdb6 	bl	801da28 <_ZdlPvj>
 8012ebc:	4620      	mov	r0, r4
 8012ebe:	bd10      	pop	{r4, pc}

08012ec0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012ec0:	b510      	push	{r4, lr}
 8012ec2:	2104      	movs	r1, #4
 8012ec4:	4604      	mov	r4, r0
 8012ec6:	f00a fdaf 	bl	801da28 <_ZdlPvj>
 8012eca:	4620      	mov	r0, r4
 8012ecc:	bd10      	pop	{r4, pc}

08012ece <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8012ece:	b510      	push	{r4, lr}
 8012ed0:	2104      	movs	r1, #4
 8012ed2:	4604      	mov	r4, r0
 8012ed4:	f00a fda8 	bl	801da28 <_ZdlPvj>
 8012ed8:	4620      	mov	r0, r4
 8012eda:	bd10      	pop	{r4, pc}

08012edc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012edc:	b510      	push	{r4, lr}
 8012ede:	2104      	movs	r1, #4
 8012ee0:	4604      	mov	r4, r0
 8012ee2:	f00a fda1 	bl	801da28 <_ZdlPvj>
 8012ee6:	4620      	mov	r0, r4
 8012ee8:	bd10      	pop	{r4, pc}

08012eea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8012eea:	b510      	push	{r4, lr}
 8012eec:	2104      	movs	r1, #4
 8012eee:	4604      	mov	r4, r0
 8012ef0:	f00a fd9a 	bl	801da28 <_ZdlPvj>
 8012ef4:	4620      	mov	r0, r4
 8012ef6:	bd10      	pop	{r4, pc}

08012ef8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8012ef8:	b510      	push	{r4, lr}
 8012efa:	2104      	movs	r1, #4
 8012efc:	4604      	mov	r4, r0
 8012efe:	f00a fd93 	bl	801da28 <_ZdlPvj>
 8012f02:	4620      	mov	r0, r4
 8012f04:	bd10      	pop	{r4, pc}

08012f06 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8012f06:	b510      	push	{r4, lr}
 8012f08:	2104      	movs	r1, #4
 8012f0a:	4604      	mov	r4, r0
 8012f0c:	f00a fd8c 	bl	801da28 <_ZdlPvj>
 8012f10:	4620      	mov	r0, r4
 8012f12:	bd10      	pop	{r4, pc}

08012f14 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8012f14:	b510      	push	{r4, lr}
 8012f16:	2104      	movs	r1, #4
 8012f18:	4604      	mov	r4, r0
 8012f1a:	f00a fd85 	bl	801da28 <_ZdlPvj>
 8012f1e:	4620      	mov	r0, r4
 8012f20:	bd10      	pop	{r4, pc}
	...

08012f24 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8012f24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012f28:	b08f      	sub	sp, #60	@ 0x3c
 8012f2a:	461c      	mov	r4, r3
 8012f2c:	9205      	str	r2, [sp, #20]
 8012f2e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8012f32:	9100      	str	r1, [sp, #0]
 8012f34:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8012f36:	9201      	str	r2, [sp, #4]
 8012f38:	2a00      	cmp	r2, #0
 8012f3a:	f000 8115 	beq.w	8013168 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 8012f3e:	6820      	ldr	r0, [r4, #0]
 8012f40:	6861      	ldr	r1, [r4, #4]
 8012f42:	aa0a      	add	r2, sp, #40	@ 0x28
 8012f44:	c203      	stmia	r2!, {r0, r1}
 8012f46:	6818      	ldr	r0, [r3, #0]
 8012f48:	6859      	ldr	r1, [r3, #4]
 8012f4a:	aa0c      	add	r2, sp, #48	@ 0x30
 8012f4c:	c203      	stmia	r2!, {r0, r1}
 8012f4e:	a80a      	add	r0, sp, #40	@ 0x28
 8012f50:	f7f9 fe6a 	bl	800cc28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012f54:	4621      	mov	r1, r4
 8012f56:	a80c      	add	r0, sp, #48	@ 0x30
 8012f58:	f7f9 fe8e 	bl	800cc78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012f5c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8012f60:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8012f64:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8012f68:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8012f6c:	bfde      	ittt	le
 8012f6e:	b2b3      	uxthle	r3, r6
 8012f70:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8012f74:	fb92 f3f3 	sdivle	r3, r2, r3
 8012f78:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8012f7c:	bfc8      	it	gt
 8012f7e:	2301      	movgt	r3, #1
 8012f80:	fb92 f1f3 	sdiv	r1, r2, r3
 8012f84:	fa1f fc81 	uxth.w	ip, r1
 8012f88:	fb0c 2413 	mls	r4, ip, r3, r2
 8012f8c:	fb14 f406 	smulbb	r4, r4, r6
 8012f90:	441d      	add	r5, r3
 8012f92:	4404      	add	r4, r0
 8012f94:	4661      	mov	r1, ip
 8012f96:	3d01      	subs	r5, #1
 8012f98:	b2a4      	uxth	r4, r4
 8012f9a:	fb95 f5f3 	sdiv	r5, r5, r3
 8012f9e:	b131      	cbz	r1, 8012fae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 8012fa0:	9b05      	ldr	r3, [sp, #20]
 8012fa2:	9900      	ldr	r1, [sp, #0]
 8012fa4:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8012fa8:	ba1b      	rev	r3, r3
 8012faa:	4419      	add	r1, r3
 8012fac:	9100      	str	r1, [sp, #0]
 8012fae:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8012fb2:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 8012fb6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8012fba:	4418      	add	r0, r3
 8012fbc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8012fc0:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8012fc4:	441a      	add	r2, r3
 8012fc6:	4b6a      	ldr	r3, [pc, #424]	@ (8013170 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8012fc8:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8012fcc:	6818      	ldr	r0, [r3, #0]
 8012fce:	6803      	ldr	r3, [r0, #0]
 8012fd0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012fd2:	4798      	blx	r3
 8012fd4:	4967      	ldr	r1, [pc, #412]	@ (8013174 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 8012fd6:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8012fda:	880b      	ldrh	r3, [r1, #0]
 8012fdc:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8012fe0:	9109      	str	r1, [sp, #36]	@ 0x24
 8012fe2:	fb03 c202 	mla	r2, r3, r2, ip
 8012fe6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012fea:	4373      	muls	r3, r6
 8012fec:	b2ad      	uxth	r5, r5
 8012fee:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012ff2:	00ad      	lsls	r5, r5, #2
 8012ff4:	9306      	str	r3, [sp, #24]
 8012ff6:	1d2b      	adds	r3, r5, #4
 8012ff8:	9307      	str	r3, [sp, #28]
 8012ffa:	9b01      	ldr	r3, [sp, #4]
 8012ffc:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8013000:	9103      	str	r1, [sp, #12]
 8013002:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 8013006:	2c00      	cmp	r4, #0
 8013008:	bf0c      	ite	eq
 801300a:	46c6      	moveq	lr, r8
 801300c:	f04f 0e00 	movne.w	lr, #0
 8013010:	2300      	movs	r3, #0
 8013012:	b292      	uxth	r2, r2
 8013014:	fa1f fe8e 	uxth.w	lr, lr
 8013018:	9302      	str	r3, [sp, #8]
 801301a:	9204      	str	r2, [sp, #16]
 801301c:	9a06      	ldr	r2, [sp, #24]
 801301e:	4282      	cmp	r2, r0
 8013020:	f240 809d 	bls.w	801315e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 8013024:	b963      	cbnz	r3, 8013040 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8013026:	9b00      	ldr	r3, [sp, #0]
 8013028:	781a      	ldrb	r2, [r3, #0]
 801302a:	0993      	lsrs	r3, r2, #6
 801302c:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8013030:	9202      	str	r2, [sp, #8]
 8013032:	1e5a      	subs	r2, r3, #1
 8013034:	2a02      	cmp	r2, #2
 8013036:	d815      	bhi.n	8013064 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 8013038:	9a00      	ldr	r2, [sp, #0]
 801303a:	3201      	adds	r2, #1
 801303c:	9200      	str	r2, [sp, #0]
 801303e:	b29b      	uxth	r3, r3
 8013040:	b1b4      	cbz	r4, 8013070 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 8013042:	429c      	cmp	r4, r3
 8013044:	bf95      	itete	ls
 8013046:	1b1c      	subls	r4, r3, r4
 8013048:	1ae4      	subhi	r4, r4, r3
 801304a:	fa1f fa84 	uxthls.w	sl, r4
 801304e:	b2a4      	uxthhi	r4, r4
 8013050:	bf87      	ittee	hi
 8013052:	4671      	movhi	r1, lr
 8013054:	f04f 0a00 	movhi.w	sl, #0
 8013058:	fa1f f188 	uxthls.w	r1, r8
 801305c:	2400      	movls	r4, #0
 801305e:	4653      	mov	r3, sl
 8013060:	468e      	mov	lr, r1
 8013062:	e7db      	b.n	801301c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 8013064:	9a00      	ldr	r2, [sp, #0]
 8013066:	9b00      	ldr	r3, [sp, #0]
 8013068:	3202      	adds	r2, #2
 801306a:	785b      	ldrb	r3, [r3, #1]
 801306c:	9200      	str	r2, [sp, #0]
 801306e:	e7e7      	b.n	8013040 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8013070:	2202      	movs	r2, #2
 8013072:	4615      	mov	r5, r2
 8013074:	9907      	ldr	r1, [sp, #28]
 8013076:	9a02      	ldr	r2, [sp, #8]
 8013078:	fb15 1202 	smlabb	r2, r5, r2, r1
 801307c:	9905      	ldr	r1, [sp, #20]
 801307e:	4573      	cmp	r3, lr
 8013080:	f831 c002 	ldrh.w	ip, [r1, r2]
 8013084:	9a01      	ldr	r2, [sp, #4]
 8013086:	bf2b      	itete	cs
 8013088:	eba3 0a0e 	subcs.w	sl, r3, lr
 801308c:	ebae 0103 	subcc.w	r1, lr, r3
 8013090:	46f1      	movcs	r9, lr
 8013092:	4699      	movcc	r9, r3
 8013094:	bf27      	ittee	cs
 8013096:	fa1f fa8a 	uxthcs.w	sl, sl
 801309a:	4621      	movcs	r1, r4
 801309c:	b289      	uxthcc	r1, r1
 801309e:	46a2      	movcc	sl, r4
 80130a0:	2aff      	cmp	r2, #255	@ 0xff
 80130a2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80130a6:	d105      	bne.n	80130b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 80130a8:	4481      	add	r9, r0
 80130aa:	4581      	cmp	r9, r0
 80130ac:	d045      	beq.n	801313a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 80130ae:	f820 cb02 	strh.w	ip, [r0], #2
 80130b2:	e7fa      	b.n	80130aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 80130b4:	9d03      	ldr	r5, [sp, #12]
 80130b6:	ea4f 222c 	mov.w	r2, ip, asr #8
 80130ba:	ea4f 0bec 	mov.w	fp, ip, asr #3
 80130be:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80130c2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80130c6:	436a      	muls	r2, r5
 80130c8:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 80130cc:	fa5f fc8c 	uxtb.w	ip, ip
 80130d0:	9208      	str	r2, [sp, #32]
 80130d2:	fb0b fb05 	mul.w	fp, fp, r5
 80130d6:	fb0c fc05 	mul.w	ip, ip, r5
 80130da:	4481      	add	r9, r0
 80130dc:	4581      	cmp	r9, r0
 80130de:	d02c      	beq.n	801313a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 80130e0:	8802      	ldrh	r2, [r0, #0]
 80130e2:	9d04      	ldr	r5, [sp, #16]
 80130e4:	9f04      	ldr	r7, [sp, #16]
 80130e6:	1216      	asrs	r6, r2, #8
 80130e8:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80130ec:	fb16 f605 	smulbb	r6, r6, r5
 80130f0:	9d08      	ldr	r5, [sp, #32]
 80130f2:	442e      	add	r6, r5
 80130f4:	10d5      	asrs	r5, r2, #3
 80130f6:	00d2      	lsls	r2, r2, #3
 80130f8:	b2d2      	uxtb	r2, r2
 80130fa:	fb12 f207 	smulbb	r2, r2, r7
 80130fe:	b2b6      	uxth	r6, r6
 8013100:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8013104:	4462      	add	r2, ip
 8013106:	fb15 f507 	smulbb	r5, r5, r7
 801310a:	b292      	uxth	r2, r2
 801310c:	1c77      	adds	r7, r6, #1
 801310e:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8013112:	1c57      	adds	r7, r2, #1
 8013114:	445d      	add	r5, fp
 8013116:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801311a:	b2ad      	uxth	r5, r5
 801311c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013120:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8013124:	4316      	orrs	r6, r2
 8013126:	1c6a      	adds	r2, r5, #1
 8013128:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801312c:	096d      	lsrs	r5, r5, #5
 801312e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8013132:	432e      	orrs	r6, r5
 8013134:	f820 6b02 	strh.w	r6, [r0], #2
 8013138:	e7d0      	b.n	80130dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801313a:	4573      	cmp	r3, lr
 801313c:	d38f      	bcc.n	801305e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801313e:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8013142:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013144:	fa1f f188 	uxth.w	r1, r8
 8013148:	1a64      	subs	r4, r4, r1
 801314a:	881b      	ldrh	r3, [r3, #0]
 801314c:	b2a4      	uxth	r4, r4
 801314e:	2c00      	cmp	r4, #0
 8013150:	eba3 0308 	sub.w	r3, r3, r8
 8013154:	bf18      	it	ne
 8013156:	2100      	movne	r1, #0
 8013158:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801315c:	e77f      	b.n	801305e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801315e:	4b04      	ldr	r3, [pc, #16]	@ (8013170 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8013160:	6818      	ldr	r0, [r3, #0]
 8013162:	6803      	ldr	r3, [r0, #0]
 8013164:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013166:	4798      	blx	r3
 8013168:	b00f      	add	sp, #60	@ 0x3c
 801316a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801316e:	bf00      	nop
 8013170:	200119fc 	.word	0x200119fc
 8013174:	200119f6 	.word	0x200119f6

08013178 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8013178:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801317c:	b09f      	sub	sp, #124	@ 0x7c
 801317e:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8013182:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8013186:	9209      	str	r2, [sp, #36]	@ 0x24
 8013188:	461d      	mov	r5, r3
 801318a:	4604      	mov	r4, r0
 801318c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801318e:	2a00      	cmp	r2, #0
 8013190:	f000 81eb 	beq.w	801356a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 8013194:	6828      	ldr	r0, [r5, #0]
 8013196:	6869      	ldr	r1, [r5, #4]
 8013198:	aa1a      	add	r2, sp, #104	@ 0x68
 801319a:	c203      	stmia	r2!, {r0, r1}
 801319c:	6818      	ldr	r0, [r3, #0]
 801319e:	6859      	ldr	r1, [r3, #4]
 80131a0:	aa1c      	add	r2, sp, #112	@ 0x70
 80131a2:	c203      	stmia	r2!, {r0, r1}
 80131a4:	a81a      	add	r0, sp, #104	@ 0x68
 80131a6:	f7f9 fd3f 	bl	800cc28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80131aa:	4629      	mov	r1, r5
 80131ac:	a81c      	add	r0, sp, #112	@ 0x70
 80131ae:	f7f9 fd63 	bl	800cc78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80131b2:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 80131b6:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 80131ba:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 80131be:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80131c2:	bfd7      	itett	le
 80131c4:	b29a      	uxthle	r2, r3
 80131c6:	2201      	movgt	r2, #1
 80131c8:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80131cc:	fb91 f2f2 	sdivle	r2, r1, r2
 80131d0:	9202      	str	r2, [sp, #8]
 80131d2:	9802      	ldr	r0, [sp, #8]
 80131d4:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 80131d8:	fb92 f0f0 	sdiv	r0, r2, r0
 80131dc:	b280      	uxth	r0, r0
 80131de:	9010      	str	r0, [sp, #64]	@ 0x40
 80131e0:	9902      	ldr	r1, [sp, #8]
 80131e2:	9802      	ldr	r0, [sp, #8]
 80131e4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80131e6:	4488      	add	r8, r1
 80131e8:	fb05 2510 	mls	r5, r5, r0, r2
 80131ec:	fb15 f503 	smulbb	r5, r5, r3
 80131f0:	f108 38ff 	add.w	r8, r8, #4294967295
 80131f4:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 80131f8:	fb98 f8f1 	sdiv	r8, r8, r1
 80131fc:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8013200:	440d      	add	r5, r1
 8013202:	4419      	add	r1, r3
 8013204:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8013208:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 801320c:	441a      	add	r2, r3
 801320e:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8013212:	9304      	str	r3, [sp, #16]
 8013214:	4b95      	ldr	r3, [pc, #596]	@ (801346c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8013216:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801321a:	6818      	ldr	r0, [r3, #0]
 801321c:	6803      	ldr	r3, [r0, #0]
 801321e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013220:	4798      	blx	r3
 8013222:	4b93      	ldr	r3, [pc, #588]	@ (8013470 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8013224:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8013228:	881a      	ldrh	r2, [r3, #0]
 801322a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801322e:	9318      	str	r3, [sp, #96]	@ 0x60
 8013230:	fb02 7101 	mla	r1, r2, r1, r7
 8013234:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8013238:	4356      	muls	r6, r2
 801323a:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801323e:	f108 0801 	add.w	r8, r8, #1
 8013242:	920a      	str	r2, [sp, #40]	@ 0x28
 8013244:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013246:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 801324a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801324c:	fa1f f888 	uxth.w	r8, r8
 8013250:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 8013254:	f108 0204 	add.w	r2, r8, #4
 8013258:	9211      	str	r2, [sp, #68]	@ 0x44
 801325a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801325c:	4b85      	ldr	r3, [pc, #532]	@ (8013474 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801325e:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 8013262:	b2ad      	uxth	r5, r5
 8013264:	9215      	str	r2, [sp, #84]	@ 0x54
 8013266:	2d00      	cmp	r5, #0
 8013268:	9a04      	ldr	r2, [sp, #16]
 801326a:	f04f 0100 	mov.w	r1, #0
 801326e:	bf18      	it	ne
 8013270:	2200      	movne	r2, #0
 8013272:	1b1b      	subs	r3, r3, r4
 8013274:	b292      	uxth	r2, r2
 8013276:	910d      	str	r1, [sp, #52]	@ 0x34
 8013278:	9319      	str	r3, [sp, #100]	@ 0x64
 801327a:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801327c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801327e:	fa11 f383 	uxtah	r3, r1, r3
 8013282:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8013284:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8013288:	3304      	adds	r3, #4
 801328a:	9306      	str	r3, [sp, #24]
 801328c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801328e:	4283      	cmp	r3, r0
 8013290:	f240 8166 	bls.w	8013560 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 8013294:	9902      	ldr	r1, [sp, #8]
 8013296:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 801329a:	fbb5 f3f3 	udiv	r3, r5, r3
 801329e:	1acb      	subs	r3, r1, r3
 80132a0:	b29b      	uxth	r3, r3
 80132a2:	9316      	str	r3, [sp, #88]	@ 0x58
 80132a4:	9b06      	ldr	r3, [sp, #24]
 80132a6:	9e06      	ldr	r6, [sp, #24]
 80132a8:	7859      	ldrb	r1, [r3, #1]
 80132aa:	789b      	ldrb	r3, [r3, #2]
 80132ac:	7836      	ldrb	r6, [r6, #0]
 80132ae:	9612      	str	r6, [sp, #72]	@ 0x48
 80132b0:	021b      	lsls	r3, r3, #8
 80132b2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80132b6:	9906      	ldr	r1, [sp, #24]
 80132b8:	78c9      	ldrb	r1, [r1, #3]
 80132ba:	430b      	orrs	r3, r1
 80132bc:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80132be:	3601      	adds	r6, #1
 80132c0:	4419      	add	r1, r3
 80132c2:	9605      	str	r6, [sp, #20]
 80132c4:	1c4e      	adds	r6, r1, #1
 80132c6:	9603      	str	r6, [sp, #12]
 80132c8:	7849      	ldrb	r1, [r1, #1]
 80132ca:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80132cc:	0209      	lsls	r1, r1, #8
 80132ce:	5cf3      	ldrb	r3, [r6, r3]
 80132d0:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 80132d4:	4319      	orrs	r1, r3
 80132d6:	b28b      	uxth	r3, r1
 80132d8:	930c      	str	r3, [sp, #48]	@ 0x30
 80132da:	2300      	movs	r3, #0
 80132dc:	f04f 0a01 	mov.w	sl, #1
 80132e0:	9307      	str	r3, [sp, #28]
 80132e2:	469c      	mov	ip, r3
 80132e4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 80132e8:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 80132ec:	46d3      	mov	fp, sl
 80132ee:	4657      	mov	r7, sl
 80132f0:	930e      	str	r3, [sp, #56]	@ 0x38
 80132f2:	2d00      	cmp	r5, #0
 80132f4:	d07e      	beq.n	80133f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 80132f6:	42af      	cmp	r7, r5
 80132f8:	d26e      	bcs.n	80133d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 80132fa:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80132fc:	9201      	str	r2, [sp, #4]
 80132fe:	1bed      	subs	r5, r5, r7
 8013300:	4283      	cmp	r3, r0
 8013302:	b2ad      	uxth	r5, r5
 8013304:	d802      	bhi.n	801330c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 8013306:	e073      	b.n	80133f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 8013308:	2b00      	cmp	r3, #0
 801330a:	d15f      	bne.n	80133cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801330c:	9b03      	ldr	r3, [sp, #12]
 801330e:	785b      	ldrb	r3, [r3, #1]
 8013310:	f1cb 0207 	rsb	r2, fp, #7
 8013314:	4093      	lsls	r3, r2
 8013316:	005b      	lsls	r3, r3, #1
 8013318:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801331c:	9b03      	ldr	r3, [sp, #12]
 801331e:	781b      	ldrb	r3, [r3, #0]
 8013320:	fa43 f30b 	asr.w	r3, r3, fp
 8013324:	b2db      	uxtb	r3, r3
 8013326:	4313      	orrs	r3, r2
 8013328:	f10b 0201 	add.w	r2, fp, #1
 801332c:	fa5f fb82 	uxtb.w	fp, r2
 8013330:	9a03      	ldr	r2, [sp, #12]
 8013332:	f1bb 0f08 	cmp.w	fp, #8
 8013336:	bf15      	itete	ne
 8013338:	3201      	addne	r2, #1
 801333a:	3202      	addeq	r2, #2
 801333c:	9203      	strne	r2, [sp, #12]
 801333e:	9203      	streq	r2, [sp, #12]
 8013340:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013342:	b29f      	uxth	r7, r3
 8013344:	bf08      	it	eq
 8013346:	f04f 0b00 	moveq.w	fp, #0
 801334a:	42ba      	cmp	r2, r7
 801334c:	d309      	bcc.n	8013362 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801334e:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8013352:	2301      	movs	r3, #1
 8013354:	9a05      	ldr	r2, [sp, #20]
 8013356:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 801335a:	d30e      	bcc.n	801337a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801335c:	469a      	mov	sl, r3
 801335e:	2600      	movs	r6, #0
 8013360:	e035      	b.n	80133ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 8013362:	9b05      	ldr	r3, [sp, #20]
 8013364:	429f      	cmp	r7, r3
 8013366:	d318      	bcc.n	801339a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 8013368:	eb04 030a 	add.w	r3, r4, sl
 801336c:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 8013370:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 8013374:	f10a 0301 	add.w	r3, sl, #1
 8013378:	b29b      	uxth	r3, r3
 801337a:	9a05      	ldr	r2, [sp, #20]
 801337c:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8013380:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8013382:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8013386:	7116      	strb	r6, [r2, #4]
 8013388:	f10a 0601 	add.w	r6, sl, #1
 801338c:	80d1      	strh	r1, [r2, #6]
 801338e:	7156      	strb	r6, [r2, #5]
 8013390:	9a05      	ldr	r2, [sp, #20]
 8013392:	3201      	adds	r2, #1
 8013394:	b292      	uxth	r2, r2
 8013396:	9205      	str	r2, [sp, #20]
 8013398:	e7e0      	b.n	801335c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801339a:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801339e:	463a      	mov	r2, r7
 80133a0:	795b      	ldrb	r3, [r3, #5]
 80133a2:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 80133a6:	4426      	add	r6, r4
 80133a8:	9919      	ldr	r1, [sp, #100]	@ 0x64
 80133aa:	eb01 0c06 	add.w	ip, r1, r6
 80133ae:	f1bc 0f00 	cmp.w	ip, #0
 80133b2:	dd07      	ble.n	80133c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 80133b4:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 80133b8:	f892 c004 	ldrb.w	ip, [r2, #4]
 80133bc:	f806 cd01 	strb.w	ip, [r6, #-1]!
 80133c0:	88d2      	ldrh	r2, [r2, #6]
 80133c2:	e7f1      	b.n	80133a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 80133c4:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 80133c8:	b29b      	uxth	r3, r3
 80133ca:	e7c3      	b.n	8013354 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 80133cc:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 80133ce:	970c      	str	r7, [sp, #48]	@ 0x30
 80133d0:	9a01      	ldr	r2, [sp, #4]
 80133d2:	46b4      	mov	ip, r6
 80133d4:	461f      	mov	r7, r3
 80133d6:	e78c      	b.n	80132f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 80133d8:	1b7b      	subs	r3, r7, r5
 80133da:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80133de:	9201      	str	r2, [sp, #4]
 80133e0:	eb0c 0605 	add.w	r6, ip, r5
 80133e4:	b29b      	uxth	r3, r3
 80133e6:	b2b6      	uxth	r6, r6
 80133e8:	2500      	movs	r5, #0
 80133ea:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80133ec:	4282      	cmp	r2, r0
 80133ee:	d88b      	bhi.n	8013308 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 80133f0:	9a01      	ldr	r2, [sp, #4]
 80133f2:	e74b      	b.n	801328c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 80133f4:	4297      	cmp	r7, r2
 80133f6:	d332      	bcc.n	801345e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 80133f8:	1abb      	subs	r3, r7, r2
 80133fa:	b29b      	uxth	r3, r3
 80133fc:	9208      	str	r2, [sp, #32]
 80133fe:	9501      	str	r5, [sp, #4]
 8013400:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8013402:	29ff      	cmp	r1, #255	@ 0xff
 8013404:	9908      	ldr	r1, [sp, #32]
 8013406:	eb0c 0601 	add.w	r6, ip, r1
 801340a:	d135      	bne.n	8013478 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801340c:	f1a0 0e02 	sub.w	lr, r0, #2
 8013410:	b2b6      	uxth	r6, r6
 8013412:	45b4      	cmp	ip, r6
 8013414:	f040 808c 	bne.w	8013530 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 8013418:	9908      	ldr	r1, [sp, #32]
 801341a:	4297      	cmp	r7, r2
 801341c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8013420:	d3e2      	bcc.n	80133e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 8013422:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8013424:	9904      	ldr	r1, [sp, #16]
 8013426:	8812      	ldrh	r2, [r2, #0]
 8013428:	1a52      	subs	r2, r2, r1
 801342a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801342e:	9a07      	ldr	r2, [sp, #28]
 8013430:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8013432:	3201      	adds	r2, #1
 8013434:	428a      	cmp	r2, r1
 8013436:	9207      	str	r2, [sp, #28]
 8013438:	f040 8087 	bne.w	801354a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801343c:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8013440:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 8013444:	9b04      	ldr	r3, [sp, #16]
 8013446:	1bed      	subs	r5, r5, r7
 8013448:	b2ad      	uxth	r5, r5
 801344a:	2d00      	cmp	r5, #0
 801344c:	bf08      	it	eq
 801344e:	461a      	moveq	r2, r3
 8013450:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8013452:	bf18      	it	ne
 8013454:	2200      	movne	r2, #0
 8013456:	3301      	adds	r3, #1
 8013458:	930d      	str	r3, [sp, #52]	@ 0x34
 801345a:	b292      	uxth	r2, r2
 801345c:	e70d      	b.n	801327a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801345e:	1bd1      	subs	r1, r2, r7
 8013460:	b28b      	uxth	r3, r1
 8013462:	9301      	str	r3, [sp, #4]
 8013464:	9708      	str	r7, [sp, #32]
 8013466:	462b      	mov	r3, r5
 8013468:	e7ca      	b.n	8013400 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801346a:	bf00      	nop
 801346c:	200119fc 	.word	0x200119fc
 8013470:	200119f6 	.word	0x200119f6
 8013474:	fffff7fb 	.word	0xfffff7fb
 8013478:	b2b6      	uxth	r6, r6
 801347a:	900b      	str	r0, [sp, #44]	@ 0x2c
 801347c:	45b4      	cmp	ip, r6
 801347e:	d0cb      	beq.n	8013418 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 8013480:	f10c 0101 	add.w	r1, ip, #1
 8013484:	44a4      	add	ip, r4
 8013486:	9117      	str	r1, [sp, #92]	@ 0x5c
 8013488:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 801348c:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801348e:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8013492:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8013494:	f8b1 c000 	ldrh.w	ip, [r1]
 8013498:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801349a:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801349e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80134a2:	fb1e fe01 	smulbb	lr, lr, r1
 80134a6:	ea4f 2825 	mov.w	r8, r5, asr #8
 80134aa:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80134ac:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 80134b0:	fb08 e801 	mla	r8, r8, r1, lr
 80134b4:	ea4f 09ec 	mov.w	r9, ip, asr #3
 80134b8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80134ba:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80134be:	fb19 f901 	smulbb	r9, r9, r1
 80134c2:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 80134c6:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80134c8:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80134cc:	fb0e 9e01 	mla	lr, lr, r1, r9
 80134d0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80134d4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80134d6:	fa5f fc8c 	uxtb.w	ip, ip
 80134da:	fb1c fc01 	smulbb	ip, ip, r1
 80134de:	00ed      	lsls	r5, r5, #3
 80134e0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80134e2:	b2ed      	uxtb	r5, r5
 80134e4:	fb05 c501 	mla	r5, r5, r1, ip
 80134e8:	fa1f f888 	uxth.w	r8, r8
 80134ec:	fa1f fe8e 	uxth.w	lr, lr
 80134f0:	b2ad      	uxth	r5, r5
 80134f2:	f108 0c01 	add.w	ip, r8, #1
 80134f6:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 80134fa:	f10e 0901 	add.w	r9, lr, #1
 80134fe:	f105 0c01 	add.w	ip, r5, #1
 8013502:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8013506:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801350a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801350e:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8013512:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8013516:	ea4c 0808 	orr.w	r8, ip, r8
 801351a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801351c:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 8013520:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8013524:	ea48 0809 	orr.w	r8, r8, r9
 8013528:	f821 8b02 	strh.w	r8, [r1], #2
 801352c:	910b      	str	r1, [sp, #44]	@ 0x2c
 801352e:	e7a5      	b.n	801347c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 8013530:	f10c 0801 	add.w	r8, ip, #1
 8013534:	44a4      	add	ip, r4
 8013536:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8013538:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 801353c:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8013540:	f82e 5f02 	strh.w	r5, [lr, #2]!
 8013544:	fa1f fc88 	uxth.w	ip, r8
 8013548:	e763      	b.n	8013412 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801354a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801354e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 8013552:	1aad      	subs	r5, r5, r2
 8013554:	b2ad      	uxth	r5, r5
 8013556:	2d00      	cmp	r5, #0
 8013558:	bf18      	it	ne
 801355a:	2200      	movne	r2, #0
 801355c:	9201      	str	r2, [sp, #4]
 801355e:	e744      	b.n	80133ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 8013560:	4b03      	ldr	r3, [pc, #12]	@ (8013570 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 8013562:	6818      	ldr	r0, [r3, #0]
 8013564:	6803      	ldr	r3, [r0, #0]
 8013566:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013568:	4798      	blx	r3
 801356a:	b01f      	add	sp, #124	@ 0x7c
 801356c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013570:	200119fc 	.word	0x200119fc

08013574 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8013574:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013578:	b08f      	sub	sp, #60	@ 0x3c
 801357a:	461c      	mov	r4, r3
 801357c:	9203      	str	r2, [sp, #12]
 801357e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8013582:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8013584:	9202      	str	r2, [sp, #8]
 8013586:	460f      	mov	r7, r1
 8013588:	2a00      	cmp	r2, #0
 801358a:	f000 8128 	beq.w	80137de <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801358e:	6820      	ldr	r0, [r4, #0]
 8013590:	6861      	ldr	r1, [r4, #4]
 8013592:	aa0a      	add	r2, sp, #40	@ 0x28
 8013594:	c203      	stmia	r2!, {r0, r1}
 8013596:	6818      	ldr	r0, [r3, #0]
 8013598:	6859      	ldr	r1, [r3, #4]
 801359a:	aa0c      	add	r2, sp, #48	@ 0x30
 801359c:	c203      	stmia	r2!, {r0, r1}
 801359e:	a80a      	add	r0, sp, #40	@ 0x28
 80135a0:	f7f9 fb42 	bl	800cc28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80135a4:	4621      	mov	r1, r4
 80135a6:	a80c      	add	r0, sp, #48	@ 0x30
 80135a8:	f7f9 fb66 	bl	800cc78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80135ac:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 80135b0:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 80135b4:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 80135b8:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 80135bc:	bfde      	ittt	le
 80135be:	b2b3      	uxthle	r3, r6
 80135c0:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 80135c4:	fb92 f3f3 	sdivle	r3, r2, r3
 80135c8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 80135cc:	bfc8      	it	gt
 80135ce:	2301      	movgt	r3, #1
 80135d0:	fb92 f1f3 	sdiv	r1, r2, r3
 80135d4:	fa1f fc81 	uxth.w	ip, r1
 80135d8:	fb0c 2413 	mls	r4, ip, r3, r2
 80135dc:	fb14 f406 	smulbb	r4, r4, r6
 80135e0:	441d      	add	r5, r3
 80135e2:	4404      	add	r4, r0
 80135e4:	4661      	mov	r1, ip
 80135e6:	3d01      	subs	r5, #1
 80135e8:	b2a4      	uxth	r4, r4
 80135ea:	fb95 f5f3 	sdiv	r5, r5, r3
 80135ee:	b121      	cbz	r1, 80135fa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 80135f0:	9b03      	ldr	r3, [sp, #12]
 80135f2:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80135f6:	ba1b      	rev	r3, r3
 80135f8:	441f      	add	r7, r3
 80135fa:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80135fe:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8013602:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8013606:	4418      	add	r0, r3
 8013608:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801360c:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8013610:	441a      	add	r2, r3
 8013612:	4b74      	ldr	r3, [pc, #464]	@ (80137e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8013614:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8013618:	6818      	ldr	r0, [r3, #0]
 801361a:	6803      	ldr	r3, [r0, #0]
 801361c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801361e:	4798      	blx	r3
 8013620:	4a71      	ldr	r2, [pc, #452]	@ (80137e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 8013622:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8013626:	8813      	ldrh	r3, [r2, #0]
 8013628:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 801362c:	9209      	str	r2, [sp, #36]	@ 0x24
 801362e:	fb03 c101 	mla	r1, r3, r1, ip
 8013632:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8013636:	4373      	muls	r3, r6
 8013638:	b2ad      	uxth	r5, r5
 801363a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801363e:	00ad      	lsls	r5, r5, #2
 8013640:	2c00      	cmp	r4, #0
 8013642:	9304      	str	r3, [sp, #16]
 8013644:	f105 0304 	add.w	r3, r5, #4
 8013648:	9305      	str	r3, [sp, #20]
 801364a:	bf0c      	ite	eq
 801364c:	46c8      	moveq	r8, r9
 801364e:	f04f 0800 	movne.w	r8, #0
 8013652:	2300      	movs	r3, #0
 8013654:	fa1f f888 	uxth.w	r8, r8
 8013658:	9301      	str	r3, [sp, #4]
 801365a:	9a04      	ldr	r2, [sp, #16]
 801365c:	4282      	cmp	r2, r0
 801365e:	f240 80b9 	bls.w	80137d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 8013662:	b95b      	cbnz	r3, 801367c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 8013664:	783a      	ldrb	r2, [r7, #0]
 8013666:	0993      	lsrs	r3, r2, #6
 8013668:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801366c:	9201      	str	r2, [sp, #4]
 801366e:	1e5a      	subs	r2, r3, #1
 8013670:	2a02      	cmp	r2, #2
 8013672:	bf8d      	iteet	hi
 8013674:	787b      	ldrbhi	r3, [r7, #1]
 8013676:	3701      	addls	r7, #1
 8013678:	b29b      	uxthls	r3, r3
 801367a:	3702      	addhi	r7, #2
 801367c:	b184      	cbz	r4, 80136a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801367e:	429c      	cmp	r4, r3
 8013680:	bf95      	itete	ls
 8013682:	1b1c      	subls	r4, r3, r4
 8013684:	1ae4      	subhi	r4, r4, r3
 8013686:	fa1f fa84 	uxthls.w	sl, r4
 801368a:	b2a4      	uxthhi	r4, r4
 801368c:	bf87      	ittee	hi
 801368e:	46c4      	movhi	ip, r8
 8013690:	f04f 0a00 	movhi.w	sl, #0
 8013694:	fa1f fc89 	uxthls.w	ip, r9
 8013698:	2400      	movls	r4, #0
 801369a:	4653      	mov	r3, sl
 801369c:	46e0      	mov	r8, ip
 801369e:	e7dc      	b.n	801365a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 80136a0:	2204      	movs	r2, #4
 80136a2:	4615      	mov	r5, r2
 80136a4:	9905      	ldr	r1, [sp, #20]
 80136a6:	9a01      	ldr	r2, [sp, #4]
 80136a8:	fb15 1202 	smlabb	r2, r5, r2, r1
 80136ac:	9903      	ldr	r1, [sp, #12]
 80136ae:	588a      	ldr	r2, [r1, r2]
 80136b0:	4543      	cmp	r3, r8
 80136b2:	bf27      	ittee	cs
 80136b4:	eba3 0a08 	subcs.w	sl, r3, r8
 80136b8:	46c6      	movcs	lr, r8
 80136ba:	eba8 0c03 	subcc.w	ip, r8, r3
 80136be:	469e      	movcc	lr, r3
 80136c0:	ea4f 6112 	mov.w	r1, r2, lsr #24
 80136c4:	bf27      	ittee	cs
 80136c6:	fa1f fa8a 	uxthcs.w	sl, sl
 80136ca:	46a4      	movcs	ip, r4
 80136cc:	fa1f fc8c 	uxthcc.w	ip, ip
 80136d0:	46a2      	movcc	sl, r4
 80136d2:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 80136d6:	2900      	cmp	r1, #0
 80136d8:	d066      	beq.n	80137a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 80136da:	29ff      	cmp	r1, #255	@ 0xff
 80136dc:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80136e0:	d114      	bne.n	801370c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 80136e2:	9d02      	ldr	r5, [sp, #8]
 80136e4:	2dff      	cmp	r5, #255	@ 0xff
 80136e6:	d111      	bne.n	801370c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 80136e8:	0951      	lsrs	r1, r2, #5
 80136ea:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80136ee:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80136f2:	f026 0607 	bic.w	r6, r6, #7
 80136f6:	430e      	orrs	r6, r1
 80136f8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80136fc:	4316      	orrs	r6, r2
 80136fe:	b2b6      	uxth	r6, r6
 8013700:	4486      	add	lr, r0
 8013702:	4586      	cmp	lr, r0
 8013704:	d051      	beq.n	80137aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8013706:	f820 6b02 	strh.w	r6, [r0], #2
 801370a:	e7fa      	b.n	8013702 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801370c:	9d02      	ldr	r5, [sp, #8]
 801370e:	4369      	muls	r1, r5
 8013710:	1c4d      	adds	r5, r1, #1
 8013712:	eb05 2521 	add.w	r5, r5, r1, asr #8
 8013716:	122d      	asrs	r5, r5, #8
 8013718:	ea6f 0b05 	mvn.w	fp, r5
 801371c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8013720:	b2ad      	uxth	r5, r5
 8013722:	b2f6      	uxtb	r6, r6
 8013724:	b2d2      	uxtb	r2, r2
 8013726:	fb11 f105 	smulbb	r1, r1, r5
 801372a:	fb16 f605 	smulbb	r6, r6, r5
 801372e:	fb12 f205 	smulbb	r2, r2, r5
 8013732:	b289      	uxth	r1, r1
 8013734:	b2b6      	uxth	r6, r6
 8013736:	b292      	uxth	r2, r2
 8013738:	9106      	str	r1, [sp, #24]
 801373a:	9607      	str	r6, [sp, #28]
 801373c:	9208      	str	r2, [sp, #32]
 801373e:	4486      	add	lr, r0
 8013740:	fa5f fb8b 	uxtb.w	fp, fp
 8013744:	4586      	cmp	lr, r0
 8013746:	d030      	beq.n	80137aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8013748:	8802      	ldrh	r2, [r0, #0]
 801374a:	9906      	ldr	r1, [sp, #24]
 801374c:	1216      	asrs	r6, r2, #8
 801374e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8013752:	10d5      	asrs	r5, r2, #3
 8013754:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8013758:	fb06 160b 	mla	r6, r6, fp, r1
 801375c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8013760:	9907      	ldr	r1, [sp, #28]
 8013762:	00d2      	lsls	r2, r2, #3
 8013764:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8013768:	fb05 150b 	mla	r5, r5, fp, r1
 801376c:	b2d2      	uxtb	r2, r2
 801376e:	9908      	ldr	r1, [sp, #32]
 8013770:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8013774:	b2b6      	uxth	r6, r6
 8013776:	fb02 120b 	mla	r2, r2, fp, r1
 801377a:	b292      	uxth	r2, r2
 801377c:	1c71      	adds	r1, r6, #1
 801377e:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 8013782:	1c51      	adds	r1, r2, #1
 8013784:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8013788:	b2ad      	uxth	r5, r5
 801378a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801378e:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8013792:	4316      	orrs	r6, r2
 8013794:	1c6a      	adds	r2, r5, #1
 8013796:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801379a:	096d      	lsrs	r5, r5, #5
 801379c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80137a0:	432e      	orrs	r6, r5
 80137a2:	f820 6b02 	strh.w	r6, [r0], #2
 80137a6:	e7cd      	b.n	8013744 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 80137a8:	4470      	add	r0, lr
 80137aa:	4543      	cmp	r3, r8
 80137ac:	f4ff af75 	bcc.w	801369a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 80137b0:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 80137b4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80137b6:	fa1f fc89 	uxth.w	ip, r9
 80137ba:	eba4 040c 	sub.w	r4, r4, ip
 80137be:	881b      	ldrh	r3, [r3, #0]
 80137c0:	b2a4      	uxth	r4, r4
 80137c2:	2c00      	cmp	r4, #0
 80137c4:	eba3 0309 	sub.w	r3, r3, r9
 80137c8:	bf18      	it	ne
 80137ca:	f04f 0c00 	movne.w	ip, #0
 80137ce:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80137d2:	e762      	b.n	801369a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 80137d4:	4b03      	ldr	r3, [pc, #12]	@ (80137e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 80137d6:	6818      	ldr	r0, [r3, #0]
 80137d8:	6803      	ldr	r3, [r0, #0]
 80137da:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80137dc:	4798      	blx	r3
 80137de:	b00f      	add	sp, #60	@ 0x3c
 80137e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80137e4:	200119fc 	.word	0x200119fc
 80137e8:	200119f6 	.word	0x200119f6

080137ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80137ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80137f0:	b093      	sub	sp, #76	@ 0x4c
 80137f2:	461c      	mov	r4, r3
 80137f4:	9205      	str	r2, [sp, #20]
 80137f6:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 80137fa:	9101      	str	r1, [sp, #4]
 80137fc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80137fe:	9202      	str	r2, [sp, #8]
 8013800:	2a00      	cmp	r2, #0
 8013802:	f000 812c 	beq.w	8013a5e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8013806:	6820      	ldr	r0, [r4, #0]
 8013808:	6861      	ldr	r1, [r4, #4]
 801380a:	aa0e      	add	r2, sp, #56	@ 0x38
 801380c:	c203      	stmia	r2!, {r0, r1}
 801380e:	6818      	ldr	r0, [r3, #0]
 8013810:	6859      	ldr	r1, [r3, #4]
 8013812:	aa10      	add	r2, sp, #64	@ 0x40
 8013814:	c203      	stmia	r2!, {r0, r1}
 8013816:	a80e      	add	r0, sp, #56	@ 0x38
 8013818:	f7f9 fa06 	bl	800cc28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801381c:	4621      	mov	r1, r4
 801381e:	a810      	add	r0, sp, #64	@ 0x40
 8013820:	f7f9 fa2a 	bl	800cc78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013824:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8013828:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 801382c:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 8013830:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8013834:	bfde      	ittt	le
 8013836:	b2b3      	uxthle	r3, r6
 8013838:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801383c:	fb92 f3f3 	sdivle	r3, r2, r3
 8013840:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8013844:	bfc8      	it	gt
 8013846:	2301      	movgt	r3, #1
 8013848:	fb92 f1f3 	sdiv	r1, r2, r3
 801384c:	fa1f fc81 	uxth.w	ip, r1
 8013850:	fb0c 2413 	mls	r4, ip, r3, r2
 8013854:	fb14 f406 	smulbb	r4, r4, r6
 8013858:	441d      	add	r5, r3
 801385a:	4404      	add	r4, r0
 801385c:	4661      	mov	r1, ip
 801385e:	3d01      	subs	r5, #1
 8013860:	b2a4      	uxth	r4, r4
 8013862:	fb95 f5f3 	sdiv	r5, r5, r3
 8013866:	b131      	cbz	r1, 8013876 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 8013868:	9b05      	ldr	r3, [sp, #20]
 801386a:	9901      	ldr	r1, [sp, #4]
 801386c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8013870:	ba1b      	rev	r3, r3
 8013872:	4419      	add	r1, r3
 8013874:	9101      	str	r1, [sp, #4]
 8013876:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801387a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801387e:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 8013882:	4418      	add	r0, r3
 8013884:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8013888:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 801388c:	441a      	add	r2, r3
 801388e:	4b75      	ldr	r3, [pc, #468]	@ (8013a64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8013890:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 8013894:	6818      	ldr	r0, [r3, #0]
 8013896:	6803      	ldr	r3, [r0, #0]
 8013898:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801389a:	4798      	blx	r3
 801389c:	4972      	ldr	r1, [pc, #456]	@ (8013a68 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801389e:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 80138a2:	880b      	ldrh	r3, [r1, #0]
 80138a4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 80138a8:	910d      	str	r1, [sp, #52]	@ 0x34
 80138aa:	fb03 c202 	mla	r2, r3, r2, ip
 80138ae:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80138b2:	4373      	muls	r3, r6
 80138b4:	b2ad      	uxth	r5, r5
 80138b6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80138ba:	00ad      	lsls	r5, r5, #2
 80138bc:	9308      	str	r3, [sp, #32]
 80138be:	1d2b      	adds	r3, r5, #4
 80138c0:	9309      	str	r3, [sp, #36]	@ 0x24
 80138c2:	9b02      	ldr	r3, [sp, #8]
 80138c4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80138c8:	9106      	str	r1, [sp, #24]
 80138ca:	43da      	mvns	r2, r3
 80138cc:	2c00      	cmp	r4, #0
 80138ce:	bf0c      	ite	eq
 80138d0:	46dc      	moveq	ip, fp
 80138d2:	f04f 0c00 	movne.w	ip, #0
 80138d6:	2300      	movs	r3, #0
 80138d8:	b2d2      	uxtb	r2, r2
 80138da:	fa1f fc8c 	uxth.w	ip, ip
 80138de:	9303      	str	r3, [sp, #12]
 80138e0:	9207      	str	r2, [sp, #28]
 80138e2:	9a08      	ldr	r2, [sp, #32]
 80138e4:	4282      	cmp	r2, r0
 80138e6:	f240 80b5 	bls.w	8013a54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 80138ea:	b963      	cbnz	r3, 8013906 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 80138ec:	9b01      	ldr	r3, [sp, #4]
 80138ee:	781a      	ldrb	r2, [r3, #0]
 80138f0:	0993      	lsrs	r3, r2, #6
 80138f2:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80138f6:	9203      	str	r2, [sp, #12]
 80138f8:	1e5a      	subs	r2, r3, #1
 80138fa:	2a02      	cmp	r2, #2
 80138fc:	d815      	bhi.n	801392a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 80138fe:	9a01      	ldr	r2, [sp, #4]
 8013900:	3201      	adds	r2, #1
 8013902:	9201      	str	r2, [sp, #4]
 8013904:	b29b      	uxth	r3, r3
 8013906:	b1b4      	cbz	r4, 8013936 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 8013908:	429c      	cmp	r4, r3
 801390a:	bf95      	itete	ls
 801390c:	1b1c      	subls	r4, r3, r4
 801390e:	1ae4      	subhi	r4, r4, r3
 8013910:	fa1f f884 	uxthls.w	r8, r4
 8013914:	b2a4      	uxthhi	r4, r4
 8013916:	bf87      	ittee	hi
 8013918:	4666      	movhi	r6, ip
 801391a:	f04f 0800 	movhi.w	r8, #0
 801391e:	fa1f f68b 	uxthls.w	r6, fp
 8013922:	2400      	movls	r4, #0
 8013924:	4643      	mov	r3, r8
 8013926:	46b4      	mov	ip, r6
 8013928:	e7db      	b.n	80138e2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801392a:	9a01      	ldr	r2, [sp, #4]
 801392c:	9b01      	ldr	r3, [sp, #4]
 801392e:	3202      	adds	r2, #2
 8013930:	785b      	ldrb	r3, [r3, #1]
 8013932:	9201      	str	r2, [sp, #4]
 8013934:	e7e7      	b.n	8013906 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8013936:	2203      	movs	r2, #3
 8013938:	4615      	mov	r5, r2
 801393a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801393c:	9a03      	ldr	r2, [sp, #12]
 801393e:	fb15 1202 	smlabb	r2, r5, r2, r1
 8013942:	9905      	ldr	r1, [sp, #20]
 8013944:	4563      	cmp	r3, ip
 8013946:	eb01 0502 	add.w	r5, r1, r2
 801394a:	9902      	ldr	r1, [sp, #8]
 801394c:	bf29      	itett	cs
 801394e:	eba3 080c 	subcs.w	r8, r3, ip
 8013952:	ebac 0603 	subcc.w	r6, ip, r3
 8013956:	fa1f f888 	uxthcs.w	r8, r8
 801395a:	46e1      	movcs	r9, ip
 801395c:	bf2f      	iteee	cs
 801395e:	4626      	movcs	r6, r4
 8013960:	b2b6      	uxthcc	r6, r6
 8013962:	4699      	movcc	r9, r3
 8013964:	46a0      	movcc	r8, r4
 8013966:	29ff      	cmp	r1, #255	@ 0xff
 8013968:	d04a      	beq.n	8013a00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801396a:	9f06      	ldr	r7, [sp, #24]
 801396c:	78a9      	ldrb	r1, [r5, #2]
 801396e:	9004      	str	r0, [sp, #16]
 8013970:	4379      	muls	r1, r7
 8013972:	910a      	str	r1, [sp, #40]	@ 0x28
 8013974:	7869      	ldrb	r1, [r5, #1]
 8013976:	4379      	muls	r1, r7
 8013978:	910b      	str	r1, [sp, #44]	@ 0x2c
 801397a:	9905      	ldr	r1, [sp, #20]
 801397c:	5c8a      	ldrb	r2, [r1, r2]
 801397e:	437a      	muls	r2, r7
 8013980:	920c      	str	r2, [sp, #48]	@ 0x30
 8013982:	46ca      	mov	sl, r9
 8013984:	f1ba 0f00 	cmp.w	sl, #0
 8013988:	d03d      	beq.n	8013a06 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801398a:	9a04      	ldr	r2, [sp, #16]
 801398c:	9f07      	ldr	r7, [sp, #28]
 801398e:	8812      	ldrh	r2, [r2, #0]
 8013990:	1215      	asrs	r5, r2, #8
 8013992:	46be      	mov	lr, r7
 8013994:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8013998:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801399a:	10d1      	asrs	r1, r2, #3
 801399c:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 80139a0:	fb05 750e 	mla	r5, r5, lr, r7
 80139a4:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80139a8:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 80139aa:	00d2      	lsls	r2, r2, #3
 80139ac:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 80139b0:	fb01 710e 	mla	r1, r1, lr, r7
 80139b4:	b2d2      	uxtb	r2, r2
 80139b6:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 80139b8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80139bc:	b2ad      	uxth	r5, r5
 80139be:	fb02 720e 	mla	r2, r2, lr, r7
 80139c2:	b292      	uxth	r2, r2
 80139c4:	f105 0e01 	add.w	lr, r5, #1
 80139c8:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80139cc:	f102 0e01 	add.w	lr, r2, #1
 80139d0:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 80139d4:	b289      	uxth	r1, r1
 80139d6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80139da:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80139de:	4315      	orrs	r5, r2
 80139e0:	1c4a      	adds	r2, r1, #1
 80139e2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80139e6:	0949      	lsrs	r1, r1, #5
 80139e8:	9a04      	ldr	r2, [sp, #16]
 80139ea:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80139ee:	430d      	orrs	r5, r1
 80139f0:	f822 5b02 	strh.w	r5, [r2], #2
 80139f4:	f10a 3aff 	add.w	sl, sl, #4294967295
 80139f8:	9204      	str	r2, [sp, #16]
 80139fa:	fa1f fa8a 	uxth.w	sl, sl
 80139fe:	e7c1      	b.n	8013984 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 8013a00:	4649      	mov	r1, r9
 8013a02:	4686      	mov	lr, r0
 8013a04:	b999      	cbnz	r1, 8013a2e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8013a06:	4563      	cmp	r3, ip
 8013a08:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 8013a0c:	d38a      	bcc.n	8013924 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8013a0e:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 8013a12:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8013a14:	fa1f f68b 	uxth.w	r6, fp
 8013a18:	1ba4      	subs	r4, r4, r6
 8013a1a:	881b      	ldrh	r3, [r3, #0]
 8013a1c:	b2a4      	uxth	r4, r4
 8013a1e:	2c00      	cmp	r4, #0
 8013a20:	eba3 030b 	sub.w	r3, r3, fp
 8013a24:	bf18      	it	ne
 8013a26:	2600      	movne	r6, #0
 8013a28:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013a2c:	e77a      	b.n	8013924 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8013a2e:	78aa      	ldrb	r2, [r5, #2]
 8013a30:	4f0e      	ldr	r7, [pc, #56]	@ (8013a6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 8013a32:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 8013a36:	786a      	ldrb	r2, [r5, #1]
 8013a38:	00d2      	lsls	r2, r2, #3
 8013a3a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8013a3e:	ea4a 0202 	orr.w	r2, sl, r2
 8013a42:	f895 a000 	ldrb.w	sl, [r5]
 8013a46:	3901      	subs	r1, #1
 8013a48:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 8013a4c:	f82e 2b02 	strh.w	r2, [lr], #2
 8013a50:	b289      	uxth	r1, r1
 8013a52:	e7d7      	b.n	8013a04 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 8013a54:	4b03      	ldr	r3, [pc, #12]	@ (8013a64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8013a56:	6818      	ldr	r0, [r3, #0]
 8013a58:	6803      	ldr	r3, [r0, #0]
 8013a5a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013a5c:	4798      	blx	r3
 8013a5e:	b013      	add	sp, #76	@ 0x4c
 8013a60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013a64:	200119fc 	.word	0x200119fc
 8013a68:	200119f6 	.word	0x200119f6
 8013a6c:	fffff800 	.word	0xfffff800

08013a70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8013a70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013a74:	b09d      	sub	sp, #116	@ 0x74
 8013a76:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 8013a7a:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 8013a7e:	920e      	str	r2, [sp, #56]	@ 0x38
 8013a80:	461c      	mov	r4, r3
 8013a82:	4683      	mov	fp, r0
 8013a84:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8013a86:	2a00      	cmp	r2, #0
 8013a88:	f000 81e0 	beq.w	8013e4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 8013a8c:	6820      	ldr	r0, [r4, #0]
 8013a8e:	6861      	ldr	r1, [r4, #4]
 8013a90:	aa18      	add	r2, sp, #96	@ 0x60
 8013a92:	c203      	stmia	r2!, {r0, r1}
 8013a94:	6818      	ldr	r0, [r3, #0]
 8013a96:	6859      	ldr	r1, [r3, #4]
 8013a98:	aa1a      	add	r2, sp, #104	@ 0x68
 8013a9a:	c203      	stmia	r2!, {r0, r1}
 8013a9c:	a818      	add	r0, sp, #96	@ 0x60
 8013a9e:	f7f9 f8c3 	bl	800cc28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013aa2:	4621      	mov	r1, r4
 8013aa4:	a81a      	add	r0, sp, #104	@ 0x68
 8013aa6:	f7f9 f8e7 	bl	800cc78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013aaa:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 8013aae:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 8013ab2:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8013ab6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8013aba:	bfd7      	itett	le
 8013abc:	b29a      	uxthle	r2, r3
 8013abe:	2201      	movgt	r2, #1
 8013ac0:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8013ac4:	fb91 f2f2 	sdivle	r2, r1, r2
 8013ac8:	9202      	str	r2, [sp, #8]
 8013aca:	9802      	ldr	r0, [sp, #8]
 8013acc:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 8013ad0:	fb92 f0f0 	sdiv	r0, r2, r0
 8013ad4:	b280      	uxth	r0, r0
 8013ad6:	900f      	str	r0, [sp, #60]	@ 0x3c
 8013ad8:	9902      	ldr	r1, [sp, #8]
 8013ada:	9802      	ldr	r0, [sp, #8]
 8013adc:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8013ade:	440c      	add	r4, r1
 8013ae0:	fb05 2510 	mls	r5, r5, r0, r2
 8013ae4:	fb15 f503 	smulbb	r5, r5, r3
 8013ae8:	3c01      	subs	r4, #1
 8013aea:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8013aee:	fb94 f4f1 	sdiv	r4, r4, r1
 8013af2:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 8013af6:	440d      	add	r5, r1
 8013af8:	4419      	add	r1, r3
 8013afa:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 8013afe:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 8013b02:	441a      	add	r2, r3
 8013b04:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8013b08:	9306      	str	r3, [sp, #24]
 8013b0a:	4bb3      	ldr	r3, [pc, #716]	@ (8013dd8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 8013b0c:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 8013b10:	6818      	ldr	r0, [r3, #0]
 8013b12:	6803      	ldr	r3, [r0, #0]
 8013b14:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013b16:	4798      	blx	r3
 8013b18:	4bb0      	ldr	r3, [pc, #704]	@ (8013ddc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 8013b1a:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 8013b1e:	881a      	ldrh	r2, [r3, #0]
 8013b20:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 8013b24:	9316      	str	r3, [sp, #88]	@ 0x58
 8013b26:	fb02 7101 	mla	r1, r2, r1, r7
 8013b2a:	3401      	adds	r4, #1
 8013b2c:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8013b30:	b2a4      	uxth	r4, r4
 8013b32:	4356      	muls	r6, r2
 8013b34:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 8013b38:	00a4      	lsls	r4, r4, #2
 8013b3a:	920a      	str	r2, [sp, #40]	@ 0x28
 8013b3c:	1d22      	adds	r2, r4, #4
 8013b3e:	b2ad      	uxth	r5, r5
 8013b40:	9213      	str	r2, [sp, #76]	@ 0x4c
 8013b42:	4ba7      	ldr	r3, [pc, #668]	@ (8013de0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 8013b44:	9a06      	ldr	r2, [sp, #24]
 8013b46:	2d00      	cmp	r5, #0
 8013b48:	bf0c      	ite	eq
 8013b4a:	4611      	moveq	r1, r2
 8013b4c:	2100      	movne	r1, #0
 8013b4e:	2200      	movs	r2, #0
 8013b50:	eba3 030b 	sub.w	r3, r3, fp
 8013b54:	b289      	uxth	r1, r1
 8013b56:	920d      	str	r2, [sp, #52]	@ 0x34
 8013b58:	9317      	str	r3, [sp, #92]	@ 0x5c
 8013b5a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8013b5c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8013b5e:	fa12 f383 	uxtah	r3, r2, r3
 8013b62:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013b64:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8013b68:	3304      	adds	r3, #4
 8013b6a:	9308      	str	r3, [sp, #32]
 8013b6c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8013b6e:	4543      	cmp	r3, r8
 8013b70:	f240 8167 	bls.w	8013e42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 8013b74:	9a02      	ldr	r2, [sp, #8]
 8013b76:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 8013b7a:	fbb5 f3f3 	udiv	r3, r5, r3
 8013b7e:	1ad3      	subs	r3, r2, r3
 8013b80:	b29b      	uxth	r3, r3
 8013b82:	9314      	str	r3, [sp, #80]	@ 0x50
 8013b84:	9b08      	ldr	r3, [sp, #32]
 8013b86:	9808      	ldr	r0, [sp, #32]
 8013b88:	785a      	ldrb	r2, [r3, #1]
 8013b8a:	789b      	ldrb	r3, [r3, #2]
 8013b8c:	7800      	ldrb	r0, [r0, #0]
 8013b8e:	9010      	str	r0, [sp, #64]	@ 0x40
 8013b90:	021b      	lsls	r3, r3, #8
 8013b92:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8013b96:	9a08      	ldr	r2, [sp, #32]
 8013b98:	78d2      	ldrb	r2, [r2, #3]
 8013b9a:	4313      	orrs	r3, r2
 8013b9c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013b9e:	3001      	adds	r0, #1
 8013ba0:	441a      	add	r2, r3
 8013ba2:	9007      	str	r0, [sp, #28]
 8013ba4:	1c50      	adds	r0, r2, #1
 8013ba6:	9005      	str	r0, [sp, #20]
 8013ba8:	7852      	ldrb	r2, [r2, #1]
 8013baa:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013bac:	0212      	lsls	r2, r2, #8
 8013bae:	5cc3      	ldrb	r3, [r0, r3]
 8013bb0:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8013bb4:	431a      	orrs	r2, r3
 8013bb6:	b293      	uxth	r3, r2
 8013bb8:	930b      	str	r3, [sp, #44]	@ 0x2c
 8013bba:	2300      	movs	r3, #0
 8013bbc:	9309      	str	r3, [sp, #36]	@ 0x24
 8013bbe:	2301      	movs	r3, #1
 8013bc0:	9301      	str	r3, [sp, #4]
 8013bc2:	9304      	str	r3, [sp, #16]
 8013bc4:	2300      	movs	r3, #0
 8013bc6:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 8013bca:	9303      	str	r3, [sp, #12]
 8013bcc:	f04f 0e01 	mov.w	lr, #1
 8013bd0:	2d00      	cmp	r5, #0
 8013bd2:	d07c      	beq.n	8013cce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 8013bd4:	45ae      	cmp	lr, r5
 8013bd6:	d26b      	bcs.n	8013cb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8013bd8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8013bda:	eba5 050e 	sub.w	r5, r5, lr
 8013bde:	4543      	cmp	r3, r8
 8013be0:	b2ad      	uxth	r5, r5
 8013be2:	460c      	mov	r4, r1
 8013be4:	d802      	bhi.n	8013bec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 8013be6:	e070      	b.n	8013cca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8013be8:	2b00      	cmp	r3, #0
 8013bea:	d15c      	bne.n	8013ca6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8013bec:	9b05      	ldr	r3, [sp, #20]
 8013bee:	9a04      	ldr	r2, [sp, #16]
 8013bf0:	785b      	ldrb	r3, [r3, #1]
 8013bf2:	9904      	ldr	r1, [sp, #16]
 8013bf4:	f1c2 0207 	rsb	r2, r2, #7
 8013bf8:	4093      	lsls	r3, r2
 8013bfa:	005b      	lsls	r3, r3, #1
 8013bfc:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8013c00:	9b05      	ldr	r3, [sp, #20]
 8013c02:	781b      	ldrb	r3, [r3, #0]
 8013c04:	410b      	asrs	r3, r1
 8013c06:	3101      	adds	r1, #1
 8013c08:	b2c9      	uxtb	r1, r1
 8013c0a:	2908      	cmp	r1, #8
 8013c0c:	9104      	str	r1, [sp, #16]
 8013c0e:	9905      	ldr	r1, [sp, #20]
 8013c10:	bf0a      	itet	eq
 8013c12:	3102      	addeq	r1, #2
 8013c14:	3101      	addne	r1, #1
 8013c16:	9105      	streq	r1, [sp, #20]
 8013c18:	b2db      	uxtb	r3, r3
 8013c1a:	bf0a      	itet	eq
 8013c1c:	2100      	moveq	r1, #0
 8013c1e:	9105      	strne	r1, [sp, #20]
 8013c20:	9104      	streq	r1, [sp, #16]
 8013c22:	4313      	orrs	r3, r2
 8013c24:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8013c26:	b29a      	uxth	r2, r3
 8013c28:	4291      	cmp	r1, r2
 8013c2a:	d30a      	bcc.n	8013c42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8013c2c:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 8013c30:	2301      	movs	r3, #1
 8013c32:	9907      	ldr	r1, [sp, #28]
 8013c34:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8013c38:	d30f      	bcc.n	8013c5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 8013c3a:	2100      	movs	r1, #0
 8013c3c:	9301      	str	r3, [sp, #4]
 8013c3e:	9103      	str	r1, [sp, #12]
 8013c40:	e032      	b.n	8013ca8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 8013c42:	9b07      	ldr	r3, [sp, #28]
 8013c44:	429a      	cmp	r2, r3
 8013c46:	d318      	bcc.n	8013c7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 8013c48:	9b01      	ldr	r3, [sp, #4]
 8013c4a:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 8013c4e:	445b      	add	r3, fp
 8013c50:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8013c54:	9b01      	ldr	r3, [sp, #4]
 8013c56:	3301      	adds	r3, #1
 8013c58:	b29b      	uxth	r3, r3
 8013c5a:	9907      	ldr	r1, [sp, #28]
 8013c5c:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 8013c60:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8013c64:	7108      	strb	r0, [r1, #4]
 8013c66:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8013c68:	80c8      	strh	r0, [r1, #6]
 8013c6a:	9801      	ldr	r0, [sp, #4]
 8013c6c:	3001      	adds	r0, #1
 8013c6e:	7148      	strb	r0, [r1, #5]
 8013c70:	9907      	ldr	r1, [sp, #28]
 8013c72:	3101      	adds	r1, #1
 8013c74:	b289      	uxth	r1, r1
 8013c76:	9107      	str	r1, [sp, #28]
 8013c78:	e7df      	b.n	8013c3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 8013c7a:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 8013c7e:	4611      	mov	r1, r2
 8013c80:	795b      	ldrb	r3, [r3, #5]
 8013c82:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 8013c86:	4458      	add	r0, fp
 8013c88:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 8013c8a:	4406      	add	r6, r0
 8013c8c:	2e00      	cmp	r6, #0
 8013c8e:	dd06      	ble.n	8013c9e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 8013c90:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8013c94:	790e      	ldrb	r6, [r1, #4]
 8013c96:	f800 6d01 	strb.w	r6, [r0, #-1]!
 8013c9a:	88c9      	ldrh	r1, [r1, #6]
 8013c9c:	e7f4      	b.n	8013c88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 8013c9e:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 8013ca2:	b29b      	uxth	r3, r3
 8013ca4:	e7c5      	b.n	8013c32 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 8013ca6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8013ca8:	920b      	str	r2, [sp, #44]	@ 0x2c
 8013caa:	4621      	mov	r1, r4
 8013cac:	469e      	mov	lr, r3
 8013cae:	e78f      	b.n	8013bd0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 8013cb0:	9a03      	ldr	r2, [sp, #12]
 8013cb2:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8013cb6:	442a      	add	r2, r5
 8013cb8:	ebae 0305 	sub.w	r3, lr, r5
 8013cbc:	b292      	uxth	r2, r2
 8013cbe:	b29b      	uxth	r3, r3
 8013cc0:	9203      	str	r2, [sp, #12]
 8013cc2:	2500      	movs	r5, #0
 8013cc4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8013cc6:	4542      	cmp	r2, r8
 8013cc8:	d88e      	bhi.n	8013be8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 8013cca:	4621      	mov	r1, r4
 8013ccc:	e74e      	b.n	8013b6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 8013cce:	458e      	cmp	lr, r1
 8013cd0:	bf29      	itett	cs
 8013cd2:	ebae 0301 	subcs.w	r3, lr, r1
 8013cd6:	eba1 040e 	subcc.w	r4, r1, lr
 8013cda:	b29b      	uxthcs	r3, r3
 8013cdc:	910c      	strcs	r1, [sp, #48]	@ 0x30
 8013cde:	bf2f      	iteee	cs
 8013ce0:	462c      	movcs	r4, r5
 8013ce2:	b2a4      	uxthcc	r4, r4
 8013ce4:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 8013ce8:	462b      	movcc	r3, r5
 8013cea:	f04f 0900 	mov.w	r9, #0
 8013cee:	9a03      	ldr	r2, [sp, #12]
 8013cf0:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8013cf2:	444a      	add	r2, r9
 8013cf4:	4548      	cmp	r0, r9
 8013cf6:	b292      	uxth	r2, r2
 8013cf8:	d074      	beq.n	8013de4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 8013cfa:	445a      	add	r2, fp
 8013cfc:	2004      	movs	r0, #4
 8013cfe:	4605      	mov	r5, r0
 8013d00:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 8013d04:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8013d06:	fb15 0202 	smlabb	r2, r5, r2, r0
 8013d0a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013d0c:	5880      	ldr	r0, [r0, r2]
 8013d0e:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 8013d12:	d014      	beq.n	8013d3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8013d14:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8013d18:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8013d1c:	d112      	bne.n	8013d44 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8013d1e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8013d20:	2aff      	cmp	r2, #255	@ 0xff
 8013d22:	d10f      	bne.n	8013d44 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8013d24:	0942      	lsrs	r2, r0, #5
 8013d26:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8013d2a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8013d2e:	f025 0507 	bic.w	r5, r5, #7
 8013d32:	4315      	orrs	r5, r2
 8013d34:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8013d38:	4305      	orrs	r5, r0
 8013d3a:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 8013d3e:	f109 0901 	add.w	r9, r9, #1
 8013d42:	e7d4      	b.n	8013cee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 8013d44:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 8013d48:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8013d4c:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 8013d50:	9215      	str	r2, [sp, #84]	@ 0x54
 8013d52:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8013d54:	fb02 fa0a 	mul.w	sl, r2, sl
 8013d58:	f10a 0201 	add.w	r2, sl, #1
 8013d5c:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8013d60:	ea4f 272c 	mov.w	r7, ip, asr #8
 8013d64:	1212      	asrs	r2, r2, #8
 8013d66:	fa1f fa82 	uxth.w	sl, r2
 8013d6a:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8013d6e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013d72:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013d76:	43d2      	mvns	r2, r2
 8013d78:	b2d2      	uxtb	r2, r2
 8013d7a:	fb16 f60a 	smulbb	r6, r6, sl
 8013d7e:	fa5f fc8c 	uxtb.w	ip, ip
 8013d82:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8013d86:	b2c0      	uxtb	r0, r0
 8013d88:	fb07 6702 	mla	r7, r7, r2, r6
 8013d8c:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8013d90:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8013d92:	fb10 f00a 	smulbb	r0, r0, sl
 8013d96:	fb0c 0002 	mla	r0, ip, r2, r0
 8013d9a:	b2ed      	uxtb	r5, r5
 8013d9c:	b2bf      	uxth	r7, r7
 8013d9e:	fb15 f50a 	smulbb	r5, r5, sl
 8013da2:	b280      	uxth	r0, r0
 8013da4:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8013da8:	fb06 5602 	mla	r6, r6, r2, r5
 8013dac:	1c7a      	adds	r2, r7, #1
 8013dae:	1c45      	adds	r5, r0, #1
 8013db0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8013db4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8013db8:	b2b6      	uxth	r6, r6
 8013dba:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013dbe:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013dc2:	432f      	orrs	r7, r5
 8013dc4:	1c75      	adds	r5, r6, #1
 8013dc6:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8013dca:	096d      	lsrs	r5, r5, #5
 8013dcc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8013dd0:	432f      	orrs	r7, r5
 8013dd2:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 8013dd6:	e7b2      	b.n	8013d3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8013dd8:	200119fc 	.word	0x200119fc
 8013ddc:	200119f6 	.word	0x200119f6
 8013de0:	fffff7fb 	.word	0xfffff7fb
 8013de4:	9203      	str	r2, [sp, #12]
 8013de6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8013de8:	458e      	cmp	lr, r1
 8013dea:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8013dee:	f4ff af68 	bcc.w	8013cc2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 8013df2:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8013df4:	9906      	ldr	r1, [sp, #24]
 8013df6:	8812      	ldrh	r2, [r2, #0]
 8013df8:	1a52      	subs	r2, r2, r1
 8013dfa:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8013dfe:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8013e00:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8013e02:	3201      	adds	r2, #1
 8013e04:	428a      	cmp	r2, r1
 8013e06:	9209      	str	r2, [sp, #36]	@ 0x24
 8013e08:	d111      	bne.n	8013e2e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 8013e0a:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 8013e0e:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 8013e12:	9b06      	ldr	r3, [sp, #24]
 8013e14:	eba5 0509 	sub.w	r5, r5, r9
 8013e18:	b2ad      	uxth	r5, r5
 8013e1a:	2d00      	cmp	r5, #0
 8013e1c:	bf08      	it	eq
 8013e1e:	4619      	moveq	r1, r3
 8013e20:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8013e22:	bf18      	it	ne
 8013e24:	2100      	movne	r1, #0
 8013e26:	3301      	adds	r3, #1
 8013e28:	930d      	str	r3, [sp, #52]	@ 0x34
 8013e2a:	b289      	uxth	r1, r1
 8013e2c:	e695      	b.n	8013b5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 8013e2e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8013e32:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8013e36:	1b2d      	subs	r5, r5, r4
 8013e38:	b2ad      	uxth	r5, r5
 8013e3a:	2d00      	cmp	r5, #0
 8013e3c:	bf18      	it	ne
 8013e3e:	2400      	movne	r4, #0
 8013e40:	e740      	b.n	8013cc4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 8013e42:	4b04      	ldr	r3, [pc, #16]	@ (8013e54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 8013e44:	6818      	ldr	r0, [r3, #0]
 8013e46:	6803      	ldr	r3, [r0, #0]
 8013e48:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013e4a:	4798      	blx	r3
 8013e4c:	b01d      	add	sp, #116	@ 0x74
 8013e4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013e52:	bf00      	nop
 8013e54:	200119fc 	.word	0x200119fc

08013e58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8013e58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013e5c:	b09f      	sub	sp, #124	@ 0x7c
 8013e5e:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8013e62:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8013e66:	920a      	str	r2, [sp, #40]	@ 0x28
 8013e68:	461d      	mov	r5, r3
 8013e6a:	4604      	mov	r4, r0
 8013e6c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8013e6e:	2a00      	cmp	r2, #0
 8013e70:	f000 81fa 	beq.w	8014268 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 8013e74:	6828      	ldr	r0, [r5, #0]
 8013e76:	6869      	ldr	r1, [r5, #4]
 8013e78:	aa1a      	add	r2, sp, #104	@ 0x68
 8013e7a:	c203      	stmia	r2!, {r0, r1}
 8013e7c:	6818      	ldr	r0, [r3, #0]
 8013e7e:	6859      	ldr	r1, [r3, #4]
 8013e80:	aa1c      	add	r2, sp, #112	@ 0x70
 8013e82:	c203      	stmia	r2!, {r0, r1}
 8013e84:	a81a      	add	r0, sp, #104	@ 0x68
 8013e86:	f7f8 fecf 	bl	800cc28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013e8a:	4629      	mov	r1, r5
 8013e8c:	a81c      	add	r0, sp, #112	@ 0x70
 8013e8e:	f7f8 fef3 	bl	800cc78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013e92:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8013e96:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8013e9a:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 8013e9e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8013ea2:	bfd7      	itett	le
 8013ea4:	b29a      	uxthle	r2, r3
 8013ea6:	2201      	movgt	r2, #1
 8013ea8:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8013eac:	fb91 f2f2 	sdivle	r2, r1, r2
 8013eb0:	9201      	str	r2, [sp, #4]
 8013eb2:	9801      	ldr	r0, [sp, #4]
 8013eb4:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8013eb8:	fb92 f0f0 	sdiv	r0, r2, r0
 8013ebc:	b280      	uxth	r0, r0
 8013ebe:	9010      	str	r0, [sp, #64]	@ 0x40
 8013ec0:	9901      	ldr	r1, [sp, #4]
 8013ec2:	9801      	ldr	r0, [sp, #4]
 8013ec4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8013ec6:	440e      	add	r6, r1
 8013ec8:	fb05 2510 	mls	r5, r5, r0, r2
 8013ecc:	fb15 f503 	smulbb	r5, r5, r3
 8013ed0:	3e01      	subs	r6, #1
 8013ed2:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8013ed6:	fb96 f6f1 	sdiv	r6, r6, r1
 8013eda:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8013ede:	440d      	add	r5, r1
 8013ee0:	4419      	add	r1, r3
 8013ee2:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8013ee6:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8013eea:	441a      	add	r2, r3
 8013eec:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8013ef0:	9304      	str	r3, [sp, #16]
 8013ef2:	4b96      	ldr	r3, [pc, #600]	@ (801414c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8013ef4:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8013ef8:	6818      	ldr	r0, [r3, #0]
 8013efa:	6803      	ldr	r3, [r0, #0]
 8013efc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013efe:	4798      	blx	r3
 8013f00:	4b93      	ldr	r3, [pc, #588]	@ (8014150 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8013f02:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8013f06:	881a      	ldrh	r2, [r3, #0]
 8013f08:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 8013f0c:	9318      	str	r3, [sp, #96]	@ 0x60
 8013f0e:	fb02 c101 	mla	r1, r2, r1, ip
 8013f12:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8013f16:	4357      	muls	r7, r2
 8013f18:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8013f1c:	3601      	adds	r6, #1
 8013f1e:	920b      	str	r2, [sp, #44]	@ 0x2c
 8013f20:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013f22:	4b8c      	ldr	r3, [pc, #560]	@ (8014154 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8013f24:	b2b6      	uxth	r6, r6
 8013f26:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8013f2a:	1d32      	adds	r2, r6, #4
 8013f2c:	9206      	str	r2, [sp, #24]
 8013f2e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8013f30:	43d2      	mvns	r2, r2
 8013f32:	b2d2      	uxtb	r2, r2
 8013f34:	b2ad      	uxth	r5, r5
 8013f36:	9215      	str	r2, [sp, #84]	@ 0x54
 8013f38:	9a04      	ldr	r2, [sp, #16]
 8013f3a:	2d00      	cmp	r5, #0
 8013f3c:	bf0c      	ite	eq
 8013f3e:	4611      	moveq	r1, r2
 8013f40:	2100      	movne	r1, #0
 8013f42:	2200      	movs	r2, #0
 8013f44:	1b1b      	subs	r3, r3, r4
 8013f46:	b289      	uxth	r1, r1
 8013f48:	920d      	str	r2, [sp, #52]	@ 0x34
 8013f4a:	9319      	str	r3, [sp, #100]	@ 0x64
 8013f4c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013f4e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8013f50:	fa12 f383 	uxtah	r3, r2, r3
 8013f54:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013f56:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8013f5a:	3304      	adds	r3, #4
 8013f5c:	9307      	str	r3, [sp, #28]
 8013f5e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8013f60:	455b      	cmp	r3, fp
 8013f62:	f240 817c 	bls.w	801425e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 8013f66:	9a01      	ldr	r2, [sp, #4]
 8013f68:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8013f6c:	fbb5 f3f3 	udiv	r3, r5, r3
 8013f70:	1ad3      	subs	r3, r2, r3
 8013f72:	b29b      	uxth	r3, r3
 8013f74:	9316      	str	r3, [sp, #88]	@ 0x58
 8013f76:	9b07      	ldr	r3, [sp, #28]
 8013f78:	9807      	ldr	r0, [sp, #28]
 8013f7a:	785a      	ldrb	r2, [r3, #1]
 8013f7c:	789b      	ldrb	r3, [r3, #2]
 8013f7e:	7800      	ldrb	r0, [r0, #0]
 8013f80:	9011      	str	r0, [sp, #68]	@ 0x44
 8013f82:	021b      	lsls	r3, r3, #8
 8013f84:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8013f88:	9a07      	ldr	r2, [sp, #28]
 8013f8a:	78d2      	ldrb	r2, [r2, #3]
 8013f8c:	4313      	orrs	r3, r2
 8013f8e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013f90:	3001      	adds	r0, #1
 8013f92:	441a      	add	r2, r3
 8013f94:	9005      	str	r0, [sp, #20]
 8013f96:	1c50      	adds	r0, r2, #1
 8013f98:	9003      	str	r0, [sp, #12]
 8013f9a:	7852      	ldrb	r2, [r2, #1]
 8013f9c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8013f9e:	0212      	lsls	r2, r2, #8
 8013fa0:	5cc3      	ldrb	r3, [r0, r3]
 8013fa2:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8013fa6:	431a      	orrs	r2, r3
 8013fa8:	b293      	uxth	r3, r2
 8013faa:	930c      	str	r3, [sp, #48]	@ 0x30
 8013fac:	2300      	movs	r3, #0
 8013fae:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8013fb2:	9308      	str	r3, [sp, #32]
 8013fb4:	461a      	mov	r2, r3
 8013fb6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8013fba:	930e      	str	r3, [sp, #56]	@ 0x38
 8013fbc:	f04f 0801 	mov.w	r8, #1
 8013fc0:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8013fc4:	f8cd 8008 	str.w	r8, [sp, #8]
 8013fc8:	46c4      	mov	ip, r8
 8013fca:	930f      	str	r3, [sp, #60]	@ 0x3c
 8013fcc:	2d00      	cmp	r5, #0
 8013fce:	d07c      	beq.n	80140ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8013fd0:	45ac      	cmp	ip, r5
 8013fd2:	d26c      	bcs.n	80140ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 8013fd4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8013fd6:	eba5 050c 	sub.w	r5, r5, ip
 8013fda:	455b      	cmp	r3, fp
 8013fdc:	b2ad      	uxth	r5, r5
 8013fde:	4608      	mov	r0, r1
 8013fe0:	d802      	bhi.n	8013fe8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8013fe2:	e070      	b.n	80140c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 8013fe4:	2b00      	cmp	r3, #0
 8013fe6:	d15c      	bne.n	80140a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8013fe8:	9b03      	ldr	r3, [sp, #12]
 8013fea:	9a02      	ldr	r2, [sp, #8]
 8013fec:	785b      	ldrb	r3, [r3, #1]
 8013fee:	9902      	ldr	r1, [sp, #8]
 8013ff0:	f1c2 0207 	rsb	r2, r2, #7
 8013ff4:	4093      	lsls	r3, r2
 8013ff6:	005b      	lsls	r3, r3, #1
 8013ff8:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8013ffc:	9b03      	ldr	r3, [sp, #12]
 8013ffe:	781b      	ldrb	r3, [r3, #0]
 8014000:	410b      	asrs	r3, r1
 8014002:	3101      	adds	r1, #1
 8014004:	b2c9      	uxtb	r1, r1
 8014006:	2908      	cmp	r1, #8
 8014008:	9102      	str	r1, [sp, #8]
 801400a:	9903      	ldr	r1, [sp, #12]
 801400c:	bf0a      	itet	eq
 801400e:	3102      	addeq	r1, #2
 8014010:	3101      	addne	r1, #1
 8014012:	9103      	streq	r1, [sp, #12]
 8014014:	b2db      	uxtb	r3, r3
 8014016:	bf0a      	itet	eq
 8014018:	2100      	moveq	r1, #0
 801401a:	9103      	strne	r1, [sp, #12]
 801401c:	9102      	streq	r1, [sp, #8]
 801401e:	4313      	orrs	r3, r2
 8014020:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8014022:	b29a      	uxth	r2, r3
 8014024:	4291      	cmp	r1, r2
 8014026:	d30a      	bcc.n	801403e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 8014028:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801402c:	2301      	movs	r3, #1
 801402e:	9905      	ldr	r1, [sp, #20]
 8014030:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8014034:	d30f      	bcc.n	8014056 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 8014036:	2100      	movs	r1, #0
 8014038:	4698      	mov	r8, r3
 801403a:	9100      	str	r1, [sp, #0]
 801403c:	e032      	b.n	80140a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801403e:	9b05      	ldr	r3, [sp, #20]
 8014040:	429a      	cmp	r2, r3
 8014042:	d318      	bcc.n	8014076 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8014044:	eb04 0308 	add.w	r3, r4, r8
 8014048:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 801404c:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8014050:	f108 0301 	add.w	r3, r8, #1
 8014054:	b29b      	uxth	r3, r3
 8014056:	9905      	ldr	r1, [sp, #20]
 8014058:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 801405c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8014060:	710e      	strb	r6, [r1, #4]
 8014062:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8014064:	80ce      	strh	r6, [r1, #6]
 8014066:	f108 0601 	add.w	r6, r8, #1
 801406a:	714e      	strb	r6, [r1, #5]
 801406c:	9905      	ldr	r1, [sp, #20]
 801406e:	3101      	adds	r1, #1
 8014070:	b289      	uxth	r1, r1
 8014072:	9105      	str	r1, [sp, #20]
 8014074:	e7df      	b.n	8014036 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 8014076:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801407a:	4611      	mov	r1, r2
 801407c:	795b      	ldrb	r3, [r3, #5]
 801407e:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 8014082:	4426      	add	r6, r4
 8014084:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 8014086:	4437      	add	r7, r6
 8014088:	2f00      	cmp	r7, #0
 801408a:	dd06      	ble.n	801409a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801408c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8014090:	790f      	ldrb	r7, [r1, #4]
 8014092:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8014096:	88c9      	ldrh	r1, [r1, #6]
 8014098:	e7f4      	b.n	8014084 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801409a:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 801409e:	b29b      	uxth	r3, r3
 80140a0:	e7c5      	b.n	801402e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 80140a2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80140a4:	920c      	str	r2, [sp, #48]	@ 0x30
 80140a6:	4601      	mov	r1, r0
 80140a8:	9a00      	ldr	r2, [sp, #0]
 80140aa:	469c      	mov	ip, r3
 80140ac:	e78e      	b.n	8013fcc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 80140ae:	1957      	adds	r7, r2, r5
 80140b0:	ebac 0305 	sub.w	r3, ip, r5
 80140b4:	b2ba      	uxth	r2, r7
 80140b6:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 80140ba:	9200      	str	r2, [sp, #0]
 80140bc:	b29b      	uxth	r3, r3
 80140be:	2500      	movs	r5, #0
 80140c0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80140c2:	455a      	cmp	r2, fp
 80140c4:	d88e      	bhi.n	8013fe4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 80140c6:	4601      	mov	r1, r0
 80140c8:	e749      	b.n	8013f5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 80140ca:	458c      	cmp	ip, r1
 80140cc:	bf2c      	ite	cs
 80140ce:	4628      	movcs	r0, r5
 80140d0:	462b      	movcc	r3, r5
 80140d2:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 80140d4:	bf27      	ittee	cs
 80140d6:	9109      	strcs	r1, [sp, #36]	@ 0x24
 80140d8:	ebac 0301 	subcs.w	r3, ip, r1
 80140dc:	eba1 000c 	subcc.w	r0, r1, ip
 80140e0:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 80140e4:	bf2c      	ite	cs
 80140e6:	b29b      	uxthcs	r3, r3
 80140e8:	b280      	uxthcc	r0, r0
 80140ea:	2dff      	cmp	r5, #255	@ 0xff
 80140ec:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80140ee:	eb02 0705 	add.w	r7, r2, r5
 80140f2:	b2bd      	uxth	r5, r7
 80140f4:	9500      	str	r5, [sp, #0]
 80140f6:	d12f      	bne.n	8014158 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 80140f8:	465e      	mov	r6, fp
 80140fa:	9d00      	ldr	r5, [sp, #0]
 80140fc:	42aa      	cmp	r2, r5
 80140fe:	f040 8084 	bne.w	801420a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 8014102:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8014104:	458c      	cmp	ip, r1
 8014106:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801410a:	d3d8      	bcc.n	80140be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801410c:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801410e:	9904      	ldr	r1, [sp, #16]
 8014110:	8812      	ldrh	r2, [r2, #0]
 8014112:	1a52      	subs	r2, r2, r1
 8014114:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8014118:	9a08      	ldr	r2, [sp, #32]
 801411a:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801411c:	3201      	adds	r2, #1
 801411e:	428a      	cmp	r2, r1
 8014120:	9208      	str	r2, [sp, #32]
 8014122:	f040 8092 	bne.w	801424a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 8014126:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 801412a:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 801412e:	9b04      	ldr	r3, [sp, #16]
 8014130:	eba5 050c 	sub.w	r5, r5, ip
 8014134:	b2ad      	uxth	r5, r5
 8014136:	2d00      	cmp	r5, #0
 8014138:	bf08      	it	eq
 801413a:	4619      	moveq	r1, r3
 801413c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801413e:	bf18      	it	ne
 8014140:	2100      	movne	r1, #0
 8014142:	3301      	adds	r3, #1
 8014144:	930d      	str	r3, [sp, #52]	@ 0x34
 8014146:	b289      	uxth	r1, r1
 8014148:	e700      	b.n	8013f4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801414a:	bf00      	nop
 801414c:	200119fc 	.word	0x200119fc
 8014150:	200119f6 	.word	0x200119f6
 8014154:	fffff7fb 	.word	0xfffff7fb
 8014158:	46d9      	mov	r9, fp
 801415a:	9d00      	ldr	r5, [sp, #0]
 801415c:	42aa      	cmp	r2, r5
 801415e:	d0d0      	beq.n	8014102 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 8014160:	1c55      	adds	r5, r2, #1
 8014162:	4422      	add	r2, r4
 8014164:	9517      	str	r5, [sp, #92]	@ 0x5c
 8014166:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 801416a:	9a06      	ldr	r2, [sp, #24]
 801416c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014170:	4472      	add	r2, lr
 8014172:	9212      	str	r2, [sp, #72]	@ 0x48
 8014174:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8014176:	f8b9 2000 	ldrh.w	r2, [r9]
 801417a:	f897 a002 	ldrb.w	sl, [r7, #2]
 801417e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8014180:	1216      	asrs	r6, r2, #8
 8014182:	fb1a fa07 	smulbb	sl, sl, r7
 8014186:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801418a:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801418c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8014190:	fb06 a607 	mla	r6, r6, r7, sl
 8014194:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8014196:	f897 a001 	ldrb.w	sl, [r7, #1]
 801419a:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801419c:	10d5      	asrs	r5, r2, #3
 801419e:	fb1a fa07 	smulbb	sl, sl, r7
 80141a2:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80141a6:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80141a8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80141ac:	fb05 a507 	mla	r5, r5, r7, sl
 80141b0:	9f06      	ldr	r7, [sp, #24]
 80141b2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80141b6:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 80141b8:	00d2      	lsls	r2, r2, #3
 80141ba:	fb1e fe07 	smulbb	lr, lr, r7
 80141be:	b2d2      	uxtb	r2, r2
 80141c0:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80141c2:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80141c6:	b2b6      	uxth	r6, r6
 80141c8:	fb02 e207 	mla	r2, r2, r7, lr
 80141cc:	b292      	uxth	r2, r2
 80141ce:	b2ad      	uxth	r5, r5
 80141d0:	f106 0a01 	add.w	sl, r6, #1
 80141d4:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80141d8:	f102 0e01 	add.w	lr, r2, #1
 80141dc:	f105 0a01 	add.w	sl, r5, #1
 80141e0:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 80141e4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80141e8:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 80141ec:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80141f0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80141f4:	ea4e 0606 	orr.w	r6, lr, r6
 80141f8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80141fc:	ea46 060a 	orr.w	r6, r6, sl
 8014200:	f829 6b02 	strh.w	r6, [r9], #2
 8014204:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8014208:	e7a7      	b.n	801415a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801420a:	f102 0e01 	add.w	lr, r2, #1
 801420e:	4422      	add	r2, r4
 8014210:	9f06      	ldr	r7, [sp, #24]
 8014212:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 8014216:	9a06      	ldr	r2, [sp, #24]
 8014218:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801421c:	eb02 0a05 	add.w	sl, r2, r5
 8014220:	4a13      	ldr	r2, [pc, #76]	@ (8014270 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 8014222:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8014226:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801422a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801422e:	00d2      	lsls	r2, r2, #3
 8014230:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8014234:	ea49 0202 	orr.w	r2, r9, r2
 8014238:	f817 9005 	ldrb.w	r9, [r7, r5]
 801423c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8014240:	f826 2b02 	strh.w	r2, [r6], #2
 8014244:	fa1f f28e 	uxth.w	r2, lr
 8014248:	e757      	b.n	80140fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801424a:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801424e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 8014252:	1a2d      	subs	r5, r5, r0
 8014254:	b2ad      	uxth	r5, r5
 8014256:	2d00      	cmp	r5, #0
 8014258:	bf18      	it	ne
 801425a:	2000      	movne	r0, #0
 801425c:	e730      	b.n	80140c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801425e:	4b05      	ldr	r3, [pc, #20]	@ (8014274 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 8014260:	6818      	ldr	r0, [r3, #0]
 8014262:	6803      	ldr	r3, [r0, #0]
 8014264:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014266:	4798      	blx	r3
 8014268:	b01f      	add	sp, #124	@ 0x7c
 801426a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801426e:	bf00      	nop
 8014270:	fffff800 	.word	0xfffff800
 8014274:	200119fc 	.word	0x200119fc

08014278 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8014278:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801427c:	b091      	sub	sp, #68	@ 0x44
 801427e:	469b      	mov	fp, r3
 8014280:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 8014284:	4616      	mov	r6, r2
 8014286:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 801428a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801428e:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8014292:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8014296:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801429a:	4604      	mov	r4, r0
 801429c:	460d      	mov	r5, r1
 801429e:	4640      	mov	r0, r8
 80142a0:	4659      	mov	r1, fp
 80142a2:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 80142a6:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 80142aa:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 80142ae:	f7f5 fbe1 	bl	8009a74 <_ZN8touchgfx4RectaNERKS0_>
 80142b2:	4631      	mov	r1, r6
 80142b4:	4640      	mov	r0, r8
 80142b6:	f7f5 fbdd 	bl	8009a74 <_ZN8touchgfx4RectaNERKS0_>
 80142ba:	4b74      	ldr	r3, [pc, #464]	@ (801448c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 80142bc:	8818      	ldrh	r0, [r3, #0]
 80142be:	4b74      	ldr	r3, [pc, #464]	@ (8014490 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 80142c0:	8819      	ldrh	r1, [r3, #0]
 80142c2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 80142c6:	2b00      	cmp	r3, #0
 80142c8:	b202      	sxth	r2, r0
 80142ca:	b20e      	sxth	r6, r1
 80142cc:	da07      	bge.n	80142de <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 80142ce:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 80142d2:	4463      	add	r3, ip
 80142d4:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 80142d8:	2300      	movs	r3, #0
 80142da:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 80142de:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 80142e2:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 80142e6:	1ad2      	subs	r2, r2, r3
 80142e8:	4594      	cmp	ip, r2
 80142ea:	bfc4      	itt	gt
 80142ec:	1ac2      	subgt	r2, r0, r3
 80142ee:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 80142f2:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80142f6:	2a00      	cmp	r2, #0
 80142f8:	da07      	bge.n	801430a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 80142fa:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 80142fe:	4462      	add	r2, ip
 8014300:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8014304:	2200      	movs	r2, #0
 8014306:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 801430a:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 801430e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8014312:	eba6 060a 	sub.w	r6, r6, sl
 8014316:	42b2      	cmp	r2, r6
 8014318:	bfc4      	itt	gt
 801431a:	eba1 020a 	subgt.w	r2, r1, sl
 801431e:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 8014322:	4a5c      	ldr	r2, [pc, #368]	@ (8014494 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8014324:	7812      	ldrb	r2, [r2, #0]
 8014326:	b9a2      	cbnz	r2, 8014352 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8014328:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801432c:	4286      	cmp	r6, r0
 801432e:	4640      	mov	r0, r8
 8014330:	9303      	str	r3, [sp, #12]
 8014332:	bf14      	ite	ne
 8014334:	2600      	movne	r6, #0
 8014336:	2601      	moveq	r6, #1
 8014338:	f7f5 fbdf 	bl	8009afa <_ZNK8touchgfx4Rect7isEmptyEv>
 801433c:	9b03      	ldr	r3, [sp, #12]
 801433e:	b160      	cbz	r0, 801435a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8014340:	2300      	movs	r3, #0
 8014342:	8023      	strh	r3, [r4, #0]
 8014344:	8063      	strh	r3, [r4, #2]
 8014346:	80a3      	strh	r3, [r4, #4]
 8014348:	4620      	mov	r0, r4
 801434a:	80e3      	strh	r3, [r4, #6]
 801434c:	b011      	add	sp, #68	@ 0x44
 801434e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014352:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 8014356:	428e      	cmp	r6, r1
 8014358:	e7e9      	b.n	801432e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801435a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801435e:	9205      	str	r2, [sp, #20]
 8014360:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8014364:	9206      	str	r2, [sp, #24]
 8014366:	f8bb 2000 	ldrh.w	r2, [fp]
 801436a:	900e      	str	r0, [sp, #56]	@ 0x38
 801436c:	1a9b      	subs	r3, r3, r2
 801436e:	b21b      	sxth	r3, r3
 8014370:	9303      	str	r3, [sp, #12]
 8014372:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8014376:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 801437a:	ebaa 0a03 	sub.w	sl, sl, r3
 801437e:	fa0f f38a 	sxth.w	r3, sl
 8014382:	9304      	str	r3, [sp, #16]
 8014384:	9b03      	ldr	r3, [sp, #12]
 8014386:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 801438a:	9b04      	ldr	r3, [sp, #16]
 801438c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8014390:	9b05      	ldr	r3, [sp, #20]
 8014392:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8014396:	a90e      	add	r1, sp, #56	@ 0x38
 8014398:	9b06      	ldr	r3, [sp, #24]
 801439a:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801439e:	a80c      	add	r0, sp, #48	@ 0x30
 80143a0:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 80143a4:	f7f8 fc68 	bl	800cc78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80143a8:	4640      	mov	r0, r8
 80143aa:	f7f8 fc3d 	bl	800cc28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80143ae:	a80e      	add	r0, sp, #56	@ 0x38
 80143b0:	f7f8 fc3a 	bl	800cc28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80143b4:	4b38      	ldr	r3, [pc, #224]	@ (8014498 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 80143b6:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 80143ba:	881b      	ldrh	r3, [r3, #0]
 80143bc:	9307      	str	r3, [sp, #28]
 80143be:	682b      	ldr	r3, [r5, #0]
 80143c0:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 801449c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80143c4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80143c6:	4628      	mov	r0, r5
 80143c8:	4798      	blx	r3
 80143ca:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 80143ce:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 80143d2:	4681      	mov	r9, r0
 80143d4:	fb1a 3305 	smlabb	r3, sl, r5, r3
 80143d8:	f8db 0000 	ldr.w	r0, [fp]
 80143dc:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 80143de:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80143e2:	6803      	ldr	r3, [r0, #0]
 80143e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80143e6:	4798      	blx	r3
 80143e8:	4607      	mov	r7, r0
 80143ea:	f8db 0000 	ldr.w	r0, [fp]
 80143ee:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 80143f2:	6803      	ldr	r3, [r0, #0]
 80143f4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80143f8:	9109      	str	r1, [sp, #36]	@ 0x24
 80143fa:	9208      	str	r2, [sp, #32]
 80143fc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80143fe:	4798      	blx	r3
 8014400:	f010 0f01 	tst.w	r0, #1
 8014404:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8014408:	d012      	beq.n	8014430 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801440a:	f8db 0000 	ldr.w	r0, [fp]
 801440e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 8014412:	6803      	ldr	r3, [r0, #0]
 8014414:	9200      	str	r2, [sp, #0]
 8014416:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 8014418:	e898 0006 	ldmia.w	r8, {r1, r2}
 801441c:	462b      	mov	r3, r5
 801441e:	47b0      	blx	r6
 8014420:	9b03      	ldr	r3, [sp, #12]
 8014422:	8023      	strh	r3, [r4, #0]
 8014424:	9b04      	ldr	r3, [sp, #16]
 8014426:	8063      	strh	r3, [r4, #2]
 8014428:	9b05      	ldr	r3, [sp, #20]
 801442a:	80a3      	strh	r3, [r4, #4]
 801442c:	9b06      	ldr	r3, [sp, #24]
 801442e:	e78b      	b.n	8014348 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8014430:	fb09 f202 	mul.w	r2, r9, r2
 8014434:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8014438:	440f      	add	r7, r1
 801443a:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 801443e:	b166      	cbz	r6, 801445a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8014440:	9a07      	ldr	r2, [sp, #28]
 8014442:	4592      	cmp	sl, r2
 8014444:	d109      	bne.n	801445a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8014446:	f8db 0000 	ldr.w	r0, [fp]
 801444a:	6802      	ldr	r2, [r0, #0]
 801444c:	fb09 f303 	mul.w	r3, r9, r3
 8014450:	6b56      	ldr	r6, [r2, #52]	@ 0x34
 8014452:	4629      	mov	r1, r5
 8014454:	463a      	mov	r2, r7
 8014456:	47b0      	blx	r6
 8014458:	e7e2      	b.n	8014420 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801445a:	fb0a f303 	mul.w	r3, sl, r3
 801445e:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 801449c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8014462:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8014466:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801446a:	4545      	cmp	r5, r8
 801446c:	d2d8      	bcs.n	8014420 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801446e:	f8db 0000 	ldr.w	r0, [fp]
 8014472:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8014476:	6802      	ldr	r2, [r0, #0]
 8014478:	4629      	mov	r1, r5
 801447a:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
 801447e:	005b      	lsls	r3, r3, #1
 8014480:	463a      	mov	r2, r7
 8014482:	47d0      	blx	sl
 8014484:	444f      	add	r7, r9
 8014486:	4435      	add	r5, r6
 8014488:	e7ef      	b.n	801446a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801448a:	bf00      	nop
 801448c:	200119f0 	.word	0x200119f0
 8014490:	200119f2 	.word	0x200119f2
 8014494:	200119f4 	.word	0x200119f4
 8014498:	200119f6 	.word	0x200119f6
 801449c:	200119fc 	.word	0x200119fc

080144a0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 80144a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80144a2:	4606      	mov	r6, r0
 80144a4:	b087      	sub	sp, #28
 80144a6:	460c      	mov	r4, r1
 80144a8:	4617      	mov	r7, r2
 80144aa:	461d      	mov	r5, r3
 80144ac:	b333      	cbz	r3, 80144fc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80144ae:	4608      	mov	r0, r1
 80144b0:	f7f5 fb23 	bl	8009afa <_ZNK8touchgfx4Rect7isEmptyEv>
 80144b4:	bb10      	cbnz	r0, 80144fc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80144b6:	6820      	ldr	r0, [r4, #0]
 80144b8:	6861      	ldr	r1, [r4, #4]
 80144ba:	4c1c      	ldr	r4, [pc, #112]	@ (801452c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 80144bc:	ab04      	add	r3, sp, #16
 80144be:	c303      	stmia	r3!, {r0, r1}
 80144c0:	a804      	add	r0, sp, #16
 80144c2:	f7f8 fbb1 	bl	800cc28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80144c6:	6820      	ldr	r0, [r4, #0]
 80144c8:	6803      	ldr	r3, [r0, #0]
 80144ca:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80144cc:	4798      	blx	r3
 80144ce:	2dff      	cmp	r5, #255	@ 0xff
 80144d0:	d016      	beq.n	8014500 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 80144d2:	f010 0f08 	tst.w	r0, #8
 80144d6:	6820      	ldr	r0, [r4, #0]
 80144d8:	d015      	beq.n	8014506 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 80144da:	2400      	movs	r4, #0
 80144dc:	6801      	ldr	r1, [r0, #0]
 80144de:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80144e2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80144e6:	e9cd 5402 	strd	r5, r4, [sp, #8]
 80144ea:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 80144ee:	9401      	str	r4, [sp, #4]
 80144f0:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 80144f4:	9400      	str	r4, [sp, #0]
 80144f6:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
 80144f8:	4639      	mov	r1, r7
 80144fa:	47a0      	blx	r4
 80144fc:	b007      	add	sp, #28
 80144fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014500:	f010 0f02 	tst.w	r0, #2
 8014504:	e7e7      	b.n	80144d6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8014506:	6803      	ldr	r3, [r0, #0]
 8014508:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801450a:	4798      	blx	r3
 801450c:	4b08      	ldr	r3, [pc, #32]	@ (8014530 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801450e:	881a      	ldrh	r2, [r3, #0]
 8014510:	6833      	ldr	r3, [r6, #0]
 8014512:	e9cd 7500 	strd	r7, r5, [sp]
 8014516:	4601      	mov	r1, r0
 8014518:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 801451a:	4630      	mov	r0, r6
 801451c:	ab04      	add	r3, sp, #16
 801451e:	47a8      	blx	r5
 8014520:	6820      	ldr	r0, [r4, #0]
 8014522:	6803      	ldr	r3, [r0, #0]
 8014524:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014526:	4798      	blx	r3
 8014528:	e7e8      	b.n	80144fc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801452a:	bf00      	nop
 801452c:	200119fc 	.word	0x200119fc
 8014530:	200119f6 	.word	0x200119f6

08014534 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8014534:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014538:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 801453c:	9e08      	ldr	r6, [sp, #32]
 801453e:	4688      	mov	r8, r1
 8014540:	4614      	mov	r4, r2
 8014542:	461d      	mov	r5, r3
 8014544:	2f00      	cmp	r7, #0
 8014546:	f000 80a9 	beq.w	801469c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801454a:	4618      	mov	r0, r3
 801454c:	f7f5 fad5 	bl	8009afa <_ZNK8touchgfx4Rect7isEmptyEv>
 8014550:	2800      	cmp	r0, #0
 8014552:	f040 80a3 	bne.w	801469c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8014556:	f9b5 1000 	ldrsh.w	r1, [r5]
 801455a:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801455e:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8014562:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8014566:	fb04 1303 	mla	r3, r4, r3, r1
 801456a:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801456e:	4365      	muls	r5, r4
 8014570:	2fff      	cmp	r7, #255	@ 0xff
 8014572:	eba4 0200 	sub.w	r2, r4, r0
 8014576:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801457a:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801457e:	d04a      	beq.n	8014616 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8014580:	b2bc      	uxth	r4, r7
 8014582:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 8014586:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801458a:	fa5f f788 	uxtb.w	r7, r8
 801458e:	b2f3      	uxtb	r3, r6
 8014590:	0040      	lsls	r0, r0, #1
 8014592:	fb0e fe04 	mul.w	lr, lr, r4
 8014596:	4367      	muls	r7, r4
 8014598:	4363      	muls	r3, r4
 801459a:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801459e:	fa1f fc8c 	uxth.w	ip, ip
 80145a2:	42a9      	cmp	r1, r5
 80145a4:	d27a      	bcs.n	801469c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80145a6:	eb01 0900 	add.w	r9, r1, r0
 80145aa:	4549      	cmp	r1, r9
 80145ac:	d231      	bcs.n	8014612 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 80145ae:	880a      	ldrh	r2, [r1, #0]
 80145b0:	1214      	asrs	r4, r2, #8
 80145b2:	10d6      	asrs	r6, r2, #3
 80145b4:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80145b8:	00d2      	lsls	r2, r2, #3
 80145ba:	b2d2      	uxtb	r2, r2
 80145bc:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80145c0:	fb14 f40c 	smulbb	r4, r4, ip
 80145c4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80145c8:	4474      	add	r4, lr
 80145ca:	fb12 f20c 	smulbb	r2, r2, ip
 80145ce:	b2a4      	uxth	r4, r4
 80145d0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80145d4:	441a      	add	r2, r3
 80145d6:	b292      	uxth	r2, r2
 80145d8:	f104 0a01 	add.w	sl, r4, #1
 80145dc:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80145e0:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80145e4:	fb16 f60c 	smulbb	r6, r6, ip
 80145e8:	f102 0a01 	add.w	sl, r2, #1
 80145ec:	443e      	add	r6, r7
 80145ee:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 80145f2:	b2b6      	uxth	r6, r6
 80145f4:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 80145f8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80145fc:	4322      	orrs	r2, r4
 80145fe:	1c74      	adds	r4, r6, #1
 8014600:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8014604:	0976      	lsrs	r6, r6, #5
 8014606:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801460a:	4332      	orrs	r2, r6
 801460c:	f821 2b02 	strh.w	r2, [r1], #2
 8014610:	e7cb      	b.n	80145aa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 8014612:	4441      	add	r1, r8
 8014614:	e7c5      	b.n	80145a2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8014616:	4f22      	ldr	r7, [pc, #136]	@ (80146a0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8014618:	0973      	lsrs	r3, r6, #5
 801461a:	ea08 0707 	and.w	r7, r8, r7
 801461e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8014622:	433b      	orrs	r3, r7
 8014624:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8014628:	4333      	orrs	r3, r6
 801462a:	07e7      	lsls	r7, r4, #31
 801462c:	b29b      	uxth	r3, r3
 801462e:	d50b      	bpl.n	8014648 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8014630:	0040      	lsls	r0, r0, #1
 8014632:	0052      	lsls	r2, r2, #1
 8014634:	42a9      	cmp	r1, r5
 8014636:	d231      	bcs.n	801469c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8014638:	180c      	adds	r4, r1, r0
 801463a:	42a1      	cmp	r1, r4
 801463c:	d202      	bcs.n	8014644 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801463e:	f821 3b02 	strh.w	r3, [r1], #2
 8014642:	e7fa      	b.n	801463a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8014644:	4411      	add	r1, r2
 8014646:	e7f5      	b.n	8014634 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8014648:	078e      	lsls	r6, r1, #30
 801464a:	d008      	beq.n	801465e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801464c:	0066      	lsls	r6, r4, #1
 801464e:	460a      	mov	r2, r1
 8014650:	42aa      	cmp	r2, r5
 8014652:	d202      	bcs.n	801465a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8014654:	8013      	strh	r3, [r2, #0]
 8014656:	4432      	add	r2, r6
 8014658:	e7fa      	b.n	8014650 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801465a:	3102      	adds	r1, #2
 801465c:	3801      	subs	r0, #1
 801465e:	07c2      	lsls	r2, r0, #31
 8014660:	d50b      	bpl.n	801467a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8014662:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 8014666:	3a01      	subs	r2, #1
 8014668:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801466c:	0066      	lsls	r6, r4, #1
 801466e:	42aa      	cmp	r2, r5
 8014670:	d202      	bcs.n	8014678 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 8014672:	8013      	strh	r3, [r2, #0]
 8014674:	4432      	add	r2, r6
 8014676:	e7fa      	b.n	801466e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8014678:	3801      	subs	r0, #1
 801467a:	b178      	cbz	r0, 801469c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801467c:	1040      	asrs	r0, r0, #1
 801467e:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8014682:	0080      	lsls	r0, r0, #2
 8014684:	0064      	lsls	r4, r4, #1
 8014686:	42a9      	cmp	r1, r5
 8014688:	d208      	bcs.n	801469c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801468a:	180e      	adds	r6, r1, r0
 801468c:	460a      	mov	r2, r1
 801468e:	42b2      	cmp	r2, r6
 8014690:	d202      	bcs.n	8014698 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 8014692:	f842 3b04 	str.w	r3, [r2], #4
 8014696:	e7fa      	b.n	801468e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8014698:	4421      	add	r1, r4
 801469a:	e7f4      	b.n	8014686 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801469c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80146a0:	00fff800 	.word	0x00fff800

080146a4 <_ZN8touchgfx8LCD16bppC1Ev>:
 80146a4:	2200      	movs	r2, #0
 80146a6:	4912      	ldr	r1, [pc, #72]	@ (80146f0 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 80146a8:	6001      	str	r1, [r0, #0]
 80146aa:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80146ae:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80146b2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80146b6:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80146ba:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 80146be:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 80146c2:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 80146c6:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 80146ca:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 80146ce:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 80146d2:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 80146d6:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 80146da:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 80146de:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 80146e2:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 80146e6:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 80146ea:	f8c0 2084 	str.w	r2, [r0, #132]	@ 0x84
 80146ee:	4770      	bx	lr
 80146f0:	080209b8 	.word	0x080209b8

080146f4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 80146f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80146f8:	460d      	mov	r5, r1
 80146fa:	b08d      	sub	sp, #52	@ 0x34
 80146fc:	4604      	mov	r4, r0
 80146fe:	6808      	ldr	r0, [r1, #0]
 8014700:	6849      	ldr	r1, [r1, #4]
 8014702:	4699      	mov	r9, r3
 8014704:	ab08      	add	r3, sp, #32
 8014706:	c303      	stmia	r3!, {r0, r1}
 8014708:	6810      	ldr	r0, [r2, #0]
 801470a:	6851      	ldr	r1, [r2, #4]
 801470c:	ab0a      	add	r3, sp, #40	@ 0x28
 801470e:	c303      	stmia	r3!, {r0, r1}
 8014710:	a808      	add	r0, sp, #32
 8014712:	f7f8 fa89 	bl	800cc28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014716:	4629      	mov	r1, r5
 8014718:	a80a      	add	r0, sp, #40	@ 0x28
 801471a:	f7f8 faad 	bl	800cc78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801471e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8014722:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 8014726:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 801472a:	4d63      	ldr	r5, [pc, #396]	@ (80148b8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801472c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 8014730:	6828      	ldr	r0, [r5, #0]
 8014732:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 8014736:	fb11 2103 	smlabb	r1, r1, r3, r2
 801473a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801473e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8014742:	440a      	add	r2, r1
 8014744:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8014748:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 801474c:	4413      	add	r3, r2
 801474e:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8014752:	6803      	ldr	r3, [r0, #0]
 8014754:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8014756:	4798      	blx	r3
 8014758:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801475c:	d119      	bne.n	8014792 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801475e:	f010 0f20 	tst.w	r0, #32
 8014762:	6828      	ldr	r0, [r5, #0]
 8014764:	d018      	beq.n	8014798 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8014766:	2500      	movs	r5, #0
 8014768:	6801      	ldr	r1, [r0, #0]
 801476a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801476e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8014772:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8014776:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 801477a:	9502      	str	r5, [sp, #8]
 801477c:	b2b6      	uxth	r6, r6
 801477e:	fa1f f588 	uxth.w	r5, r8
 8014782:	9601      	str	r6, [sp, #4]
 8014784:	9500      	str	r5, [sp, #0]
 8014786:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
 8014788:	4621      	mov	r1, r4
 801478a:	47a8      	blx	r5
 801478c:	b00d      	add	sp, #52	@ 0x34
 801478e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014792:	f010 0f40 	tst.w	r0, #64	@ 0x40
 8014796:	e7e4      	b.n	8014762 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8014798:	6803      	ldr	r3, [r0, #0]
 801479a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801479c:	4798      	blx	r3
 801479e:	4947      	ldr	r1, [pc, #284]	@ (80148bc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 80147a0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80147a4:	880b      	ldrh	r3, [r1, #0]
 80147a6:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 80147aa:	fb03 5202 	mla	r2, r3, r2, r5
 80147ae:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80147b2:	4373      	muls	r3, r6
 80147b4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80147b8:	9307      	str	r3, [sp, #28]
 80147ba:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80147be:	9306      	str	r3, [sp, #24]
 80147c0:	468a      	mov	sl, r1
 80147c2:	9b07      	ldr	r3, [sp, #28]
 80147c4:	4298      	cmp	r0, r3
 80147c6:	d270      	bcs.n	80148aa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 80147c8:	9b06      	ldr	r3, [sp, #24]
 80147ca:	4621      	mov	r1, r4
 80147cc:	eb00 0b03 	add.w	fp, r0, r3
 80147d0:	4558      	cmp	r0, fp
 80147d2:	d25d      	bcs.n	8014890 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 80147d4:	f851 4b04 	ldr.w	r4, [r1], #4
 80147d8:	0e23      	lsrs	r3, r4, #24
 80147da:	d014      	beq.n	8014806 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80147dc:	2bff      	cmp	r3, #255	@ 0xff
 80147de:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 80147e2:	d112      	bne.n	801480a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80147e4:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 80147e8:	d10f      	bne.n	801480a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80147ea:	0963      	lsrs	r3, r4, #5
 80147ec:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 80147f0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80147f4:	f02c 0c07 	bic.w	ip, ip, #7
 80147f8:	ea43 0c0c 	orr.w	ip, r3, ip
 80147fc:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8014800:	ea4c 0404 	orr.w	r4, ip, r4
 8014804:	8004      	strh	r4, [r0, #0]
 8014806:	3002      	adds	r0, #2
 8014808:	e7e2      	b.n	80147d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801480a:	fb09 f303 	mul.w	r3, r9, r3
 801480e:	8807      	ldrh	r7, [r0, #0]
 8014810:	1c5a      	adds	r2, r3, #1
 8014812:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8014816:	1212      	asrs	r2, r2, #8
 8014818:	123e      	asrs	r6, r7, #8
 801481a:	b293      	uxth	r3, r2
 801481c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8014820:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8014824:	43d2      	mvns	r2, r2
 8014826:	b2d2      	uxtb	r2, r2
 8014828:	10fd      	asrs	r5, r7, #3
 801482a:	fb1e fe03 	smulbb	lr, lr, r3
 801482e:	00ff      	lsls	r7, r7, #3
 8014830:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8014834:	fb06 e602 	mla	r6, r6, r2, lr
 8014838:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801483c:	b2ff      	uxtb	r7, r7
 801483e:	fa5f fc8c 	uxtb.w	ip, ip
 8014842:	b2e4      	uxtb	r4, r4
 8014844:	b2b6      	uxth	r6, r6
 8014846:	fb1c fc03 	smulbb	ip, ip, r3
 801484a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801484e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8014852:	fb14 f403 	smulbb	r4, r4, r3
 8014856:	fb05 c502 	mla	r5, r5, r2, ip
 801485a:	f106 0e01 	add.w	lr, r6, #1
 801485e:	fb07 4702 	mla	r7, r7, r2, r4
 8014862:	b2ad      	uxth	r5, r5
 8014864:	b2bf      	uxth	r7, r7
 8014866:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801486a:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 801486e:	f105 0c01 	add.w	ip, r5, #1
 8014872:	1c7e      	adds	r6, r7, #1
 8014874:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8014878:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801487c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014880:	096d      	lsrs	r5, r5, #5
 8014882:	ea46 060e 	orr.w	r6, r6, lr
 8014886:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801488a:	432e      	orrs	r6, r5
 801488c:	8006      	strh	r6, [r0, #0]
 801488e:	e7ba      	b.n	8014806 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8014890:	f8ba 3000 	ldrh.w	r3, [sl]
 8014894:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 8014898:	eba3 0308 	sub.w	r3, r3, r8
 801489c:	eba4 0408 	sub.w	r4, r4, r8
 80148a0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80148a4:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 80148a8:	e78b      	b.n	80147c2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 80148aa:	4b03      	ldr	r3, [pc, #12]	@ (80148b8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80148ac:	6818      	ldr	r0, [r3, #0]
 80148ae:	6803      	ldr	r3, [r0, #0]
 80148b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80148b2:	4798      	blx	r3
 80148b4:	e76a      	b.n	801478c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 80148b6:	bf00      	nop
 80148b8:	200119fc 	.word	0x200119fc
 80148bc:	200119f6 	.word	0x200119f6

080148c0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 80148c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80148c4:	460c      	mov	r4, r1
 80148c6:	b085      	sub	sp, #20
 80148c8:	6810      	ldr	r0, [r2, #0]
 80148ca:	6851      	ldr	r1, [r2, #4]
 80148cc:	466d      	mov	r5, sp
 80148ce:	c503      	stmia	r5!, {r0, r1}
 80148d0:	6818      	ldr	r0, [r3, #0]
 80148d2:	6859      	ldr	r1, [r3, #4]
 80148d4:	4616      	mov	r6, r2
 80148d6:	c503      	stmia	r5!, {r0, r1}
 80148d8:	4668      	mov	r0, sp
 80148da:	f7f8 f9a5 	bl	800cc28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80148de:	4631      	mov	r1, r6
 80148e0:	a802      	add	r0, sp, #8
 80148e2:	f7f8 f9c9 	bl	800cc78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80148e6:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 80148ea:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 80148ee:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80148f2:	4d28      	ldr	r5, [pc, #160]	@ (8014994 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 80148f4:	4e28      	ldr	r6, [pc, #160]	@ (8014998 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 80148f6:	6828      	ldr	r0, [r5, #0]
 80148f8:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80148fc:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8014900:	fb11 2103 	smlabb	r1, r1, r3, r2
 8014904:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8014908:	f8bd 1000 	ldrh.w	r1, [sp]
 801490c:	440a      	add	r2, r1
 801490e:	f8ad 2008 	strh.w	r2, [sp, #8]
 8014912:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8014916:	4413      	add	r3, r2
 8014918:	f8ad 300a 	strh.w	r3, [sp, #10]
 801491c:	6803      	ldr	r3, [r0, #0]
 801491e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014920:	4798      	blx	r3
 8014922:	8833      	ldrh	r3, [r6, #0]
 8014924:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8014928:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801492c:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 801499c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8014930:	fb03 1202 	mla	r2, r3, r2, r1
 8014934:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8014938:	fb08 f303 	mul.w	r3, r8, r3
 801493c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8014940:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8014944:	4298      	cmp	r0, r3
 8014946:	d21d      	bcs.n	8014984 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8014948:	eb00 080c 	add.w	r8, r0, ip
 801494c:	4540      	cmp	r0, r8
 801494e:	d20f      	bcs.n	8014970 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8014950:	f854 1b04 	ldr.w	r1, [r4], #4
 8014954:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8014958:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801495c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8014960:	ea42 0209 	orr.w	r2, r2, r9
 8014964:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8014968:	430a      	orrs	r2, r1
 801496a:	f820 2b02 	strh.w	r2, [r0], #2
 801496e:	e7ed      	b.n	801494c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8014970:	8832      	ldrh	r2, [r6, #0]
 8014972:	1bd2      	subs	r2, r2, r7
 8014974:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8014978:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801497c:	1bd2      	subs	r2, r2, r7
 801497e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8014982:	e7df      	b.n	8014944 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8014984:	6828      	ldr	r0, [r5, #0]
 8014986:	6803      	ldr	r3, [r0, #0]
 8014988:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801498a:	4798      	blx	r3
 801498c:	b005      	add	sp, #20
 801498e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014992:	bf00      	nop
 8014994:	200119fc 	.word	0x200119fc
 8014998:	200119f6 	.word	0x200119f6
 801499c:	fffff800 	.word	0xfffff800

080149a0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 80149a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80149a4:	460e      	mov	r6, r1
 80149a6:	b08e      	sub	sp, #56	@ 0x38
 80149a8:	4604      	mov	r4, r0
 80149aa:	6808      	ldr	r0, [r1, #0]
 80149ac:	6849      	ldr	r1, [r1, #4]
 80149ae:	f8df 81d8 	ldr.w	r8, [pc, #472]	@ 8014b88 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 80149b2:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 8014b8c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 80149b6:	461d      	mov	r5, r3
 80149b8:	ab0a      	add	r3, sp, #40	@ 0x28
 80149ba:	c303      	stmia	r3!, {r0, r1}
 80149bc:	6810      	ldr	r0, [r2, #0]
 80149be:	6851      	ldr	r1, [r2, #4]
 80149c0:	ab0c      	add	r3, sp, #48	@ 0x30
 80149c2:	c303      	stmia	r3!, {r0, r1}
 80149c4:	a80a      	add	r0, sp, #40	@ 0x28
 80149c6:	f7f8 f92f 	bl	800cc28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80149ca:	4631      	mov	r1, r6
 80149cc:	a80c      	add	r0, sp, #48	@ 0x30
 80149ce:	f7f8 f953 	bl	800cc78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80149d2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 80149d6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 80149da:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 80149de:	f8d8 0000 	ldr.w	r0, [r8]
 80149e2:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 80149e6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 80149ea:	fb11 2103 	smlabb	r1, r1, r3, r2
 80149ee:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80149f2:	440c      	add	r4, r1
 80149f4:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 80149f8:	440a      	add	r2, r1
 80149fa:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 80149fe:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8014a02:	4413      	add	r3, r2
 8014a04:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8014a08:	6803      	ldr	r3, [r0, #0]
 8014a0a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8014a0c:	4798      	blx	r3
 8014a0e:	2dff      	cmp	r5, #255	@ 0xff
 8014a10:	d124      	bne.n	8014a5c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8014a12:	f010 0f01 	tst.w	r0, #1
 8014a16:	f8d8 0000 	ldr.w	r0, [r8]
 8014a1a:	d022      	beq.n	8014a62 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8014a1c:	2100      	movs	r1, #0
 8014a1e:	f8d0 c000 	ldr.w	ip, [r0]
 8014a22:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8014a26:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8014a2a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8014a2e:	f04f 0e01 	mov.w	lr, #1
 8014a32:	f8cd e018 	str.w	lr, [sp, #24]
 8014a36:	f8b9 e000 	ldrh.w	lr, [r9]
 8014a3a:	9503      	str	r5, [sp, #12]
 8014a3c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8014a40:	b2b6      	uxth	r6, r6
 8014a42:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8014a46:	9102      	str	r1, [sp, #8]
 8014a48:	b2bf      	uxth	r7, r7
 8014a4a:	9601      	str	r6, [sp, #4]
 8014a4c:	9700      	str	r7, [sp, #0]
 8014a4e:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
 8014a52:	4621      	mov	r1, r4
 8014a54:	47a8      	blx	r5
 8014a56:	b00e      	add	sp, #56	@ 0x38
 8014a58:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014a5c:	f010 0f04 	tst.w	r0, #4
 8014a60:	e7d9      	b.n	8014a16 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8014a62:	6803      	ldr	r3, [r0, #0]
 8014a64:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014a66:	4798      	blx	r3
 8014a68:	f8b9 3000 	ldrh.w	r3, [r9]
 8014a6c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8014a70:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 8014a74:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8014a78:	fb03 1202 	mla	r2, r3, r2, r1
 8014a7c:	ebac 0c07 	sub.w	ip, ip, r7
 8014a80:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8014a84:	435e      	muls	r6, r3
 8014a86:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8014a8a:	2dff      	cmp	r5, #255	@ 0xff
 8014a8c:	eba3 0707 	sub.w	r7, r3, r7
 8014a90:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8014a94:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8014a98:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8014a9c:	d049      	beq.n	8014b32 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8014a9e:	43eb      	mvns	r3, r5
 8014aa0:	fa1f f985 	uxth.w	r9, r5
 8014aa4:	b2db      	uxtb	r3, r3
 8014aa6:	42b0      	cmp	r0, r6
 8014aa8:	d266      	bcs.n	8014b78 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8014aaa:	eb00 0a0e 	add.w	sl, r0, lr
 8014aae:	4550      	cmp	r0, sl
 8014ab0:	4621      	mov	r1, r4
 8014ab2:	f104 0403 	add.w	r4, r4, #3
 8014ab6:	d25b      	bcs.n	8014b70 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8014ab8:	8802      	ldrh	r2, [r0, #0]
 8014aba:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8014abe:	ea4f 2822 	mov.w	r8, r2, asr #8
 8014ac2:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8014ac6:	fb11 f109 	smulbb	r1, r1, r9
 8014aca:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8014ace:	10d5      	asrs	r5, r2, #3
 8014ad0:	fb08 1803 	mla	r8, r8, r3, r1
 8014ad4:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8014ad8:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8014adc:	fb11 f109 	smulbb	r1, r1, r9
 8014ae0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8014ae4:	fb05 1503 	mla	r5, r5, r3, r1
 8014ae8:	00d2      	lsls	r2, r2, #3
 8014aea:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8014aee:	b2d2      	uxtb	r2, r2
 8014af0:	fb11 f109 	smulbb	r1, r1, r9
 8014af4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8014af8:	fa1f f888 	uxth.w	r8, r8
 8014afc:	fb02 1203 	mla	r2, r2, r3, r1
 8014b00:	b292      	uxth	r2, r2
 8014b02:	f108 0101 	add.w	r1, r8, #1
 8014b06:	b2ad      	uxth	r5, r5
 8014b08:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8014b0c:	1c51      	adds	r1, r2, #1
 8014b0e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8014b12:	1c69      	adds	r1, r5, #1
 8014b14:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8014b18:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8014b1c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8014b20:	096d      	lsrs	r5, r5, #5
 8014b22:	ea42 0208 	orr.w	r2, r2, r8
 8014b26:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8014b2a:	432a      	orrs	r2, r5
 8014b2c:	f820 2b02 	strh.w	r2, [r0], #2
 8014b30:	e7bd      	b.n	8014aae <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8014b32:	4a14      	ldr	r2, [pc, #80]	@ (8014b84 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8014b34:	42b0      	cmp	r0, r6
 8014b36:	d21f      	bcs.n	8014b78 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8014b38:	eb00 050e 	add.w	r5, r0, lr
 8014b3c:	42a8      	cmp	r0, r5
 8014b3e:	4621      	mov	r1, r4
 8014b40:	f104 0403 	add.w	r4, r4, #3
 8014b44:	d210      	bcs.n	8014b68 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8014b46:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8014b4a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8014b4e:	00db      	lsls	r3, r3, #3
 8014b50:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8014b54:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8014b58:	430b      	orrs	r3, r1
 8014b5a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8014b5e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8014b62:	f820 3b02 	strh.w	r3, [r0], #2
 8014b66:	e7e9      	b.n	8014b3c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8014b68:	4438      	add	r0, r7
 8014b6a:	eb01 040c 	add.w	r4, r1, ip
 8014b6e:	e7e1      	b.n	8014b34 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8014b70:	4438      	add	r0, r7
 8014b72:	eb01 040c 	add.w	r4, r1, ip
 8014b76:	e796      	b.n	8014aa6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8014b78:	4b03      	ldr	r3, [pc, #12]	@ (8014b88 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8014b7a:	6818      	ldr	r0, [r3, #0]
 8014b7c:	6803      	ldr	r3, [r0, #0]
 8014b7e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014b80:	4798      	blx	r3
 8014b82:	e768      	b.n	8014a56 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8014b84:	fffff800 	.word	0xfffff800
 8014b88:	200119fc 	.word	0x200119fc
 8014b8c:	200119f6 	.word	0x200119f6

08014b90 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8014b90:	b4f0      	push	{r4, r5, r6, r7}
 8014b92:	4616      	mov	r6, r2
 8014b94:	2e01      	cmp	r6, #1
 8014b96:	461c      	mov	r4, r3
 8014b98:	460d      	mov	r5, r1
 8014b9a:	9a04      	ldr	r2, [sp, #16]
 8014b9c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8014ba0:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8014ba4:	d012      	beq.n	8014bcc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8014ba6:	d303      	bcc.n	8014bb0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8014ba8:	2e02      	cmp	r6, #2
 8014baa:	d00a      	beq.n	8014bc2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8014bac:	bcf0      	pop	{r4, r5, r6, r7}
 8014bae:	4770      	bx	lr
 8014bb0:	6805      	ldr	r5, [r0, #0]
 8014bb2:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8014bb6:	68ed      	ldr	r5, [r5, #12]
 8014bb8:	4613      	mov	r3, r2
 8014bba:	46ac      	mov	ip, r5
 8014bbc:	4622      	mov	r2, r4
 8014bbe:	bcf0      	pop	{r4, r5, r6, r7}
 8014bc0:	4760      	bx	ip
 8014bc2:	4621      	mov	r1, r4
 8014bc4:	4628      	mov	r0, r5
 8014bc6:	bcf0      	pop	{r4, r5, r6, r7}
 8014bc8:	f7ff bd94 	b.w	80146f4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8014bcc:	4621      	mov	r1, r4
 8014bce:	4628      	mov	r0, r5
 8014bd0:	bcf0      	pop	{r4, r5, r6, r7}
 8014bd2:	f7ff bee5 	b.w	80149a0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08014bd8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8014bd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014bdc:	4681      	mov	r9, r0
 8014bde:	b093      	sub	sp, #76	@ 0x4c
 8014be0:	6810      	ldr	r0, [r2, #0]
 8014be2:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 8014be6:	4f6d      	ldr	r7, [pc, #436]	@ (8014d9c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8014be8:	4688      	mov	r8, r1
 8014bea:	6851      	ldr	r1, [r2, #4]
 8014bec:	ac0e      	add	r4, sp, #56	@ 0x38
 8014bee:	c403      	stmia	r4!, {r0, r1}
 8014bf0:	6818      	ldr	r0, [r3, #0]
 8014bf2:	6859      	ldr	r1, [r3, #4]
 8014bf4:	ac10      	add	r4, sp, #64	@ 0x40
 8014bf6:	4616      	mov	r6, r2
 8014bf8:	c403      	stmia	r4!, {r0, r1}
 8014bfa:	a80e      	add	r0, sp, #56	@ 0x38
 8014bfc:	f7f8 f814 	bl	800cc28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014c00:	4631      	mov	r1, r6
 8014c02:	a810      	add	r0, sp, #64	@ 0x40
 8014c04:	f7f8 f838 	bl	800cc78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014c08:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8014c0c:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8014c10:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8014c14:	4e62      	ldr	r6, [pc, #392]	@ (8014da0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8014c16:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 8014c1a:	6830      	ldr	r0, [r6, #0]
 8014c1c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8014c20:	fb11 2103 	smlabb	r1, r1, r3, r2
 8014c24:	4489      	add	r9, r1
 8014c26:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 8014c2a:	440a      	add	r2, r1
 8014c2c:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8014c30:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8014c34:	4413      	add	r3, r2
 8014c36:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8014c3a:	6803      	ldr	r3, [r0, #0]
 8014c3c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8014c3e:	4798      	blx	r3
 8014c40:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8014c44:	6830      	ldr	r0, [r6, #0]
 8014c46:	d01d      	beq.n	8014c84 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8014c48:	2200      	movs	r2, #0
 8014c4a:	6801      	ldr	r1, [r0, #0]
 8014c4c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8014c50:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8014c54:	220b      	movs	r2, #11
 8014c56:	9207      	str	r2, [sp, #28]
 8014c58:	883a      	ldrh	r2, [r7, #0]
 8014c5a:	9206      	str	r2, [sp, #24]
 8014c5c:	2201      	movs	r2, #1
 8014c5e:	e9cd a204 	strd	sl, r2, [sp, #16]
 8014c62:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 8014c66:	9203      	str	r2, [sp, #12]
 8014c68:	b2a4      	uxth	r4, r4
 8014c6a:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 8014c6e:	9200      	str	r2, [sp, #0]
 8014c70:	b2ad      	uxth	r5, r5
 8014c72:	9502      	str	r5, [sp, #8]
 8014c74:	9401      	str	r4, [sp, #4]
 8014c76:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
 8014c78:	4642      	mov	r2, r8
 8014c7a:	4649      	mov	r1, r9
 8014c7c:	47a0      	blx	r4
 8014c7e:	b013      	add	sp, #76	@ 0x4c
 8014c80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014c84:	6803      	ldr	r3, [r0, #0]
 8014c86:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014c88:	4798      	blx	r3
 8014c8a:	883b      	ldrh	r3, [r7, #0]
 8014c8c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8014c90:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8014c94:	fb03 1202 	mla	r2, r3, r2, r1
 8014c98:	435d      	muls	r5, r3
 8014c9a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8014c9e:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8014ca2:	920c      	str	r2, [sp, #48]	@ 0x30
 8014ca4:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8014ca8:	1b12      	subs	r2, r2, r4
 8014caa:	920d      	str	r2, [sp, #52]	@ 0x34
 8014cac:	0062      	lsls	r2, r4, #1
 8014cae:	1b1c      	subs	r4, r3, r4
 8014cb0:	0063      	lsls	r3, r4, #1
 8014cb2:	920a      	str	r2, [sp, #40]	@ 0x28
 8014cb4:	930b      	str	r3, [sp, #44]	@ 0x2c
 8014cb6:	f04f 0e04 	mov.w	lr, #4
 8014cba:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8014cbc:	4298      	cmp	r0, r3
 8014cbe:	d266      	bcs.n	8014d8e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8014cc0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8014cc2:	eb00 0b03 	add.w	fp, r0, r3
 8014cc6:	4558      	cmp	r0, fp
 8014cc8:	d25c      	bcs.n	8014d84 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8014cca:	f819 3b01 	ldrb.w	r3, [r9], #1
 8014cce:	fb1e e303 	smlabb	r3, lr, r3, lr
 8014cd2:	f858 2003 	ldr.w	r2, [r8, r3]
 8014cd6:	0e11      	lsrs	r1, r2, #24
 8014cd8:	d012      	beq.n	8014d00 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8014cda:	29ff      	cmp	r1, #255	@ 0xff
 8014cdc:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8014ce0:	d110      	bne.n	8014d04 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8014ce2:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8014ce6:	d10d      	bne.n	8014d04 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8014ce8:	0953      	lsrs	r3, r2, #5
 8014cea:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 8014cee:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8014cf2:	f027 0707 	bic.w	r7, r7, #7
 8014cf6:	431f      	orrs	r7, r3
 8014cf8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8014cfc:	433a      	orrs	r2, r7
 8014cfe:	8002      	strh	r2, [r0, #0]
 8014d00:	3002      	adds	r0, #2
 8014d02:	e7e0      	b.n	8014cc6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8014d04:	fb0a f101 	mul.w	r1, sl, r1
 8014d08:	8806      	ldrh	r6, [r0, #0]
 8014d0a:	1c4b      	adds	r3, r1, #1
 8014d0c:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8014d10:	1235      	asrs	r5, r6, #8
 8014d12:	10f4      	asrs	r4, r6, #3
 8014d14:	121b      	asrs	r3, r3, #8
 8014d16:	00f6      	lsls	r6, r6, #3
 8014d18:	b299      	uxth	r1, r3
 8014d1a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8014d1e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8014d22:	b2f6      	uxtb	r6, r6
 8014d24:	43db      	mvns	r3, r3
 8014d26:	b2d2      	uxtb	r2, r2
 8014d28:	b2db      	uxtb	r3, r3
 8014d2a:	fb1c fc01 	smulbb	ip, ip, r1
 8014d2e:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8014d32:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8014d36:	fb12 f201 	smulbb	r2, r2, r1
 8014d3a:	fb05 c503 	mla	r5, r5, r3, ip
 8014d3e:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8014d42:	b2ff      	uxtb	r7, r7
 8014d44:	fb06 2203 	mla	r2, r6, r3, r2
 8014d48:	b2ad      	uxth	r5, r5
 8014d4a:	fb17 f701 	smulbb	r7, r7, r1
 8014d4e:	b292      	uxth	r2, r2
 8014d50:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8014d54:	fb04 7403 	mla	r4, r4, r3, r7
 8014d58:	f105 0c01 	add.w	ip, r5, #1
 8014d5c:	1c57      	adds	r7, r2, #1
 8014d5e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8014d62:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8014d66:	b2a4      	uxth	r4, r4
 8014d68:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8014d6c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8014d70:	433d      	orrs	r5, r7
 8014d72:	1c67      	adds	r7, r4, #1
 8014d74:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8014d78:	0964      	lsrs	r4, r4, #5
 8014d7a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8014d7e:	4325      	orrs	r5, r4
 8014d80:	8005      	strh	r5, [r0, #0]
 8014d82:	e7bd      	b.n	8014d00 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8014d84:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8014d86:	4418      	add	r0, r3
 8014d88:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014d8a:	4499      	add	r9, r3
 8014d8c:	e795      	b.n	8014cba <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8014d8e:	4b04      	ldr	r3, [pc, #16]	@ (8014da0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8014d90:	6818      	ldr	r0, [r3, #0]
 8014d92:	6803      	ldr	r3, [r0, #0]
 8014d94:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014d96:	4798      	blx	r3
 8014d98:	e771      	b.n	8014c7e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8014d9a:	bf00      	nop
 8014d9c:	200119f6 	.word	0x200119f6
 8014da0:	200119fc 	.word	0x200119fc

08014da4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8014da4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014da8:	b087      	sub	sp, #28
 8014daa:	4680      	mov	r8, r0
 8014dac:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 8014db0:	460d      	mov	r5, r1
 8014db2:	4614      	mov	r4, r2
 8014db4:	2e00      	cmp	r6, #0
 8014db6:	f000 80b9 	beq.w	8014f2c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8014dba:	6810      	ldr	r0, [r2, #0]
 8014dbc:	6851      	ldr	r1, [r2, #4]
 8014dbe:	af02      	add	r7, sp, #8
 8014dc0:	c703      	stmia	r7!, {r0, r1}
 8014dc2:	6818      	ldr	r0, [r3, #0]
 8014dc4:	6859      	ldr	r1, [r3, #4]
 8014dc6:	af04      	add	r7, sp, #16
 8014dc8:	c703      	stmia	r7!, {r0, r1}
 8014dca:	a802      	add	r0, sp, #8
 8014dcc:	f7f7 ff2c 	bl	800cc28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014dd0:	4621      	mov	r1, r4
 8014dd2:	a804      	add	r0, sp, #16
 8014dd4:	f7f7 ff50 	bl	800cc78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014dd8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8014ddc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8014de0:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8014de4:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8014de8:	fb14 2103 	smlabb	r1, r4, r3, r2
 8014dec:	eb08 0401 	add.w	r4, r8, r1
 8014df0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8014df4:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8014df8:	440a      	add	r2, r1
 8014dfa:	f8ad 2010 	strh.w	r2, [sp, #16]
 8014dfe:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8014e02:	4413      	add	r3, r2
 8014e04:	f8ad 3012 	strh.w	r3, [sp, #18]
 8014e08:	4b4a      	ldr	r3, [pc, #296]	@ (8014f34 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8014e0a:	6818      	ldr	r0, [r3, #0]
 8014e0c:	6803      	ldr	r3, [r0, #0]
 8014e0e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014e10:	4798      	blx	r3
 8014e12:	4b49      	ldr	r3, [pc, #292]	@ (8014f38 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8014e14:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8014e18:	881a      	ldrh	r2, [r3, #0]
 8014e1a:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8014e1e:	2eff      	cmp	r6, #255	@ 0xff
 8014e20:	fb02 c101 	mla	r1, r2, r1, ip
 8014e24:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8014e28:	fb02 f207 	mul.w	r2, r2, r7
 8014e2c:	f105 0104 	add.w	r1, r5, #4
 8014e30:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8014e34:	461d      	mov	r5, r3
 8014e36:	d05a      	beq.n	8014eee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8014e38:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 8014e3c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8014e40:	b2b6      	uxth	r6, r6
 8014e42:	fa1f fe8e 	uxth.w	lr, lr
 8014e46:	9301      	str	r3, [sp, #4]
 8014e48:	4282      	cmp	r2, r0
 8014e4a:	d96a      	bls.n	8014f22 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8014e4c:	eb00 0b0a 	add.w	fp, r0, sl
 8014e50:	4583      	cmp	fp, r0
 8014e52:	d940      	bls.n	8014ed6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8014e54:	f814 3b01 	ldrb.w	r3, [r4], #1
 8014e58:	8805      	ldrh	r5, [r0, #0]
 8014e5a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8014e5e:	122f      	asrs	r7, r5, #8
 8014e60:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8014e64:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014e68:	fb17 f70e 	smulbb	r7, r7, lr
 8014e6c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014e70:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014e74:	00ed      	lsls	r5, r5, #3
 8014e76:	fb0c 7c06 	mla	ip, ip, r6, r7
 8014e7a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8014e7e:	10df      	asrs	r7, r3, #3
 8014e80:	b2ed      	uxtb	r5, r5
 8014e82:	00db      	lsls	r3, r3, #3
 8014e84:	fa1f fc8c 	uxth.w	ip, ip
 8014e88:	fb19 f90e 	smulbb	r9, r9, lr
 8014e8c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014e90:	b2db      	uxtb	r3, r3
 8014e92:	fb15 f50e 	smulbb	r5, r5, lr
 8014e96:	fb07 9706 	mla	r7, r7, r6, r9
 8014e9a:	fb03 5306 	mla	r3, r3, r6, r5
 8014e9e:	f10c 0901 	add.w	r9, ip, #1
 8014ea2:	b29b      	uxth	r3, r3
 8014ea4:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8014ea8:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 8014eac:	f103 0c01 	add.w	ip, r3, #1
 8014eb0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8014eb4:	b2bf      	uxth	r7, r7
 8014eb6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8014eba:	ea4c 0c09 	orr.w	ip, ip, r9
 8014ebe:	f107 0901 	add.w	r9, r7, #1
 8014ec2:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8014ec6:	097f      	lsrs	r7, r7, #5
 8014ec8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8014ecc:	ea4c 0c07 	orr.w	ip, ip, r7
 8014ed0:	f820 cb02 	strh.w	ip, [r0], #2
 8014ed4:	e7bc      	b.n	8014e50 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8014ed6:	9b01      	ldr	r3, [sp, #4]
 8014ed8:	881b      	ldrh	r3, [r3, #0]
 8014eda:	eba3 0308 	sub.w	r3, r3, r8
 8014ede:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014ee2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8014ee6:	eba3 0308 	sub.w	r3, r3, r8
 8014eea:	441c      	add	r4, r3
 8014eec:	e7ac      	b.n	8014e48 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8014eee:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8014ef2:	4282      	cmp	r2, r0
 8014ef4:	d915      	bls.n	8014f22 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8014ef6:	eb00 060a 	add.w	r6, r0, sl
 8014efa:	4286      	cmp	r6, r0
 8014efc:	d906      	bls.n	8014f0c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8014efe:	f814 3b01 	ldrb.w	r3, [r4], #1
 8014f02:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8014f06:	f820 3b02 	strh.w	r3, [r0], #2
 8014f0a:	e7f6      	b.n	8014efa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8014f0c:	882b      	ldrh	r3, [r5, #0]
 8014f0e:	eba3 0308 	sub.w	r3, r3, r8
 8014f12:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014f16:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8014f1a:	eba3 0308 	sub.w	r3, r3, r8
 8014f1e:	441c      	add	r4, r3
 8014f20:	e7e7      	b.n	8014ef2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8014f22:	4b04      	ldr	r3, [pc, #16]	@ (8014f34 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8014f24:	6818      	ldr	r0, [r3, #0]
 8014f26:	6803      	ldr	r3, [r0, #0]
 8014f28:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014f2a:	4798      	blx	r3
 8014f2c:	b007      	add	sp, #28
 8014f2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014f32:	bf00      	nop
 8014f34:	200119fc 	.word	0x200119fc
 8014f38:	200119f6 	.word	0x200119f6

08014f3c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8014f3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014f40:	b091      	sub	sp, #68	@ 0x44
 8014f42:	4680      	mov	r8, r0
 8014f44:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 8014f48:	460f      	mov	r7, r1
 8014f4a:	4614      	mov	r4, r2
 8014f4c:	2d00      	cmp	r5, #0
 8014f4e:	d051      	beq.n	8014ff4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8014f50:	6810      	ldr	r0, [r2, #0]
 8014f52:	6851      	ldr	r1, [r2, #4]
 8014f54:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 8015158 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8014f58:	ae0c      	add	r6, sp, #48	@ 0x30
 8014f5a:	c603      	stmia	r6!, {r0, r1}
 8014f5c:	6818      	ldr	r0, [r3, #0]
 8014f5e:	6859      	ldr	r1, [r3, #4]
 8014f60:	ae0e      	add	r6, sp, #56	@ 0x38
 8014f62:	c603      	stmia	r6!, {r0, r1}
 8014f64:	a80c      	add	r0, sp, #48	@ 0x30
 8014f66:	f7f7 fe5f 	bl	800cc28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014f6a:	4621      	mov	r1, r4
 8014f6c:	a80e      	add	r0, sp, #56	@ 0x38
 8014f6e:	f7f7 fe83 	bl	800cc78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014f72:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 8014f76:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8014f7a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8014f7e:	f8d9 0000 	ldr.w	r0, [r9]
 8014f82:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8014f86:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 8014f8a:	fb11 2103 	smlabb	r1, r1, r3, r2
 8014f8e:	eb08 0401 	add.w	r4, r8, r1
 8014f92:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8014f96:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 801515c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8014f9a:	440a      	add	r2, r1
 8014f9c:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8014fa0:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 8014fa4:	4413      	add	r3, r2
 8014fa6:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8014faa:	6803      	ldr	r3, [r0, #0]
 8014fac:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8014fae:	4798      	blx	r3
 8014fb0:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8014fb4:	f8d9 0000 	ldr.w	r0, [r9]
 8014fb8:	d01f      	beq.n	8014ffa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8014fba:	2200      	movs	r2, #0
 8014fbc:	6801      	ldr	r1, [r0, #0]
 8014fbe:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8014fc2:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8014fc6:	220b      	movs	r2, #11
 8014fc8:	9207      	str	r2, [sp, #28]
 8014fca:	f8b8 2000 	ldrh.w	r2, [r8]
 8014fce:	9206      	str	r2, [sp, #24]
 8014fd0:	2201      	movs	r2, #1
 8014fd2:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8014fd6:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 8014fda:	9203      	str	r2, [sp, #12]
 8014fdc:	fa1f f28a 	uxth.w	r2, sl
 8014fe0:	9202      	str	r2, [sp, #8]
 8014fe2:	b2b6      	uxth	r6, r6
 8014fe4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8014fe8:	9200      	str	r2, [sp, #0]
 8014fea:	9601      	str	r6, [sp, #4]
 8014fec:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
 8014fee:	463a      	mov	r2, r7
 8014ff0:	4621      	mov	r1, r4
 8014ff2:	47a8      	blx	r5
 8014ff4:	b011      	add	sp, #68	@ 0x44
 8014ff6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014ffa:	6803      	ldr	r3, [r0, #0]
 8014ffc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014ffe:	4798      	blx	r3
 8015000:	f8b8 2000 	ldrh.w	r2, [r8]
 8015004:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8015008:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 801500c:	2dff      	cmp	r5, #255	@ 0xff
 801500e:	fb02 1303 	mla	r3, r2, r3, r1
 8015012:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015016:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801501a:	fb0a fa02 	mul.w	sl, sl, r2
 801501e:	d062      	beq.n	80150e6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8015020:	ea6f 0c05 	mvn.w	ip, r5
 8015024:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8015028:	930a      	str	r3, [sp, #40]	@ 0x28
 801502a:	b2ad      	uxth	r5, r5
 801502c:	fa5f fc8c 	uxtb.w	ip, ip
 8015030:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 8015034:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8015036:	4298      	cmp	r0, r3
 8015038:	f080 8085 	bcs.w	8015146 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801503c:	eb00 0b09 	add.w	fp, r0, r9
 8015040:	4558      	cmp	r0, fp
 8015042:	d246      	bcs.n	80150d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8015044:	f814 eb01 	ldrb.w	lr, [r4], #1
 8015048:	2303      	movs	r3, #3
 801504a:	2204      	movs	r2, #4
 801504c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8015050:	eb07 0a0e 	add.w	sl, r7, lr
 8015054:	8803      	ldrh	r3, [r0, #0]
 8015056:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801505a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801505e:	1219      	asrs	r1, r3, #8
 8015060:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8015064:	fb18 f805 	smulbb	r8, r8, r5
 8015068:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801506c:	10da      	asrs	r2, r3, #3
 801506e:	fb01 810c 	mla	r1, r1, ip, r8
 8015072:	00db      	lsls	r3, r3, #3
 8015074:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8015078:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801507c:	b2db      	uxtb	r3, r3
 801507e:	fb18 f805 	smulbb	r8, r8, r5
 8015082:	fb1e fe05 	smulbb	lr, lr, r5
 8015086:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801508a:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801508e:	b289      	uxth	r1, r1
 8015090:	fb02 820c 	mla	r2, r2, ip, r8
 8015094:	fb03 e30c 	mla	r3, r3, ip, lr
 8015098:	b292      	uxth	r2, r2
 801509a:	b29b      	uxth	r3, r3
 801509c:	f101 0801 	add.w	r8, r1, #1
 80150a0:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 80150a4:	f103 0e01 	add.w	lr, r3, #1
 80150a8:	f102 0801 	add.w	r8, r2, #1
 80150ac:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 80150b0:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 80150b4:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 80150b8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80150bc:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80150c0:	ea4e 0101 	orr.w	r1, lr, r1
 80150c4:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80150c8:	ea41 0108 	orr.w	r1, r1, r8
 80150cc:	f820 1b02 	strh.w	r1, [r0], #2
 80150d0:	e7b6      	b.n	8015040 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 80150d2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80150d4:	881b      	ldrh	r3, [r3, #0]
 80150d6:	1b9b      	subs	r3, r3, r6
 80150d8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80150dc:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80150e0:	1b9b      	subs	r3, r3, r6
 80150e2:	441c      	add	r4, r3
 80150e4:	e7a6      	b.n	8015034 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 80150e6:	491b      	ldr	r1, [pc, #108]	@ (8015154 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 80150e8:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 80150ec:	2203      	movs	r2, #3
 80150ee:	2504      	movs	r5, #4
 80150f0:	4550      	cmp	r0, sl
 80150f2:	d228      	bcs.n	8015146 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80150f4:	eb00 0c09 	add.w	ip, r0, r9
 80150f8:	4560      	cmp	r0, ip
 80150fa:	4623      	mov	r3, r4
 80150fc:	d219      	bcs.n	8015132 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 80150fe:	f893 e000 	ldrb.w	lr, [r3]
 8015102:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8015106:	eb07 0b0e 	add.w	fp, r7, lr
 801510a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801510e:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8015112:	f89b b001 	ldrb.w	fp, [fp, #1]
 8015116:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801511a:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801511e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8015122:	ea43 030b 	orr.w	r3, r3, fp
 8015126:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801512a:	3401      	adds	r4, #1
 801512c:	f820 3b02 	strh.w	r3, [r0], #2
 8015130:	e7e2      	b.n	80150f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8015132:	f8b8 3000 	ldrh.w	r3, [r8]
 8015136:	1b9b      	subs	r3, r3, r6
 8015138:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801513c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8015140:	1b9b      	subs	r3, r3, r6
 8015142:	441c      	add	r4, r3
 8015144:	e7d4      	b.n	80150f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8015146:	4b04      	ldr	r3, [pc, #16]	@ (8015158 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8015148:	6818      	ldr	r0, [r3, #0]
 801514a:	6803      	ldr	r3, [r0, #0]
 801514c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801514e:	4798      	blx	r3
 8015150:	e750      	b.n	8014ff4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8015152:	bf00      	nop
 8015154:	fffff800 	.word	0xfffff800
 8015158:	200119fc 	.word	0x200119fc
 801515c:	200119f6 	.word	0x200119f6

08015160 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8015160:	b4f0      	push	{r4, r5, r6, r7}
 8015162:	460c      	mov	r4, r1
 8015164:	4611      	mov	r1, r2
 8015166:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801516a:	780f      	ldrb	r7, [r1, #0]
 801516c:	784e      	ldrb	r6, [r1, #1]
 801516e:	2f01      	cmp	r7, #1
 8015170:	461a      	mov	r2, r3
 8015172:	9b04      	ldr	r3, [sp, #16]
 8015174:	d038      	beq.n	80151e8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 8015176:	d31f      	bcc.n	80151b8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 8015178:	2f02      	cmp	r7, #2
 801517a:	d14d      	bne.n	8015218 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801517c:	2e03      	cmp	r6, #3
 801517e:	d84b      	bhi.n	8015218 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8015180:	e8df f006 	tbb	[pc, r6]
 8015184:	17140702 	.word	0x17140702
 8015188:	9504      	str	r5, [sp, #16]
 801518a:	4620      	mov	r0, r4
 801518c:	bcf0      	pop	{r4, r5, r6, r7}
 801518e:	f7ff be09 	b.w	8014da4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8015192:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8015194:	2800      	cmp	r0, #0
 8015196:	d03f      	beq.n	8015218 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8015198:	6806      	ldr	r6, [r0, #0]
 801519a:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801519e:	68b5      	ldr	r5, [r6, #8]
 80151a0:	4613      	mov	r3, r2
 80151a2:	46ac      	mov	ip, r5
 80151a4:	460a      	mov	r2, r1
 80151a6:	4621      	mov	r1, r4
 80151a8:	bcf0      	pop	{r4, r5, r6, r7}
 80151aa:	4760      	bx	ip
 80151ac:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 80151b0:	e7f0      	b.n	8015194 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 80151b2:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 80151b6:	e7ed      	b.n	8015194 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 80151b8:	2e03      	cmp	r6, #3
 80151ba:	d82d      	bhi.n	8015218 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80151bc:	e8df f006 	tbb	[pc, r6]
 80151c0:	110e0702 	.word	0x110e0702
 80151c4:	9504      	str	r5, [sp, #16]
 80151c6:	4620      	mov	r0, r4
 80151c8:	bcf0      	pop	{r4, r5, r6, r7}
 80151ca:	f7ff bd05 	b.w	8014bd8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80151ce:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 80151d0:	b310      	cbz	r0, 8015218 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80151d2:	6806      	ldr	r6, [r0, #0]
 80151d4:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80151d8:	68f5      	ldr	r5, [r6, #12]
 80151da:	e7e1      	b.n	80151a0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 80151dc:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 80151e0:	e7f6      	b.n	80151d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 80151e2:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 80151e6:	e7f3      	b.n	80151d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 80151e8:	2e03      	cmp	r6, #3
 80151ea:	d815      	bhi.n	8015218 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80151ec:	e8df f006 	tbb	[pc, r6]
 80151f0:	110e0702 	.word	0x110e0702
 80151f4:	9504      	str	r5, [sp, #16]
 80151f6:	4620      	mov	r0, r4
 80151f8:	bcf0      	pop	{r4, r5, r6, r7}
 80151fa:	f7ff be9f 	b.w	8014f3c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80151fe:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8015200:	b150      	cbz	r0, 8015218 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8015202:	6806      	ldr	r6, [r0, #0]
 8015204:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8015208:	6935      	ldr	r5, [r6, #16]
 801520a:	e7c9      	b.n	80151a0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801520c:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8015210:	e7f6      	b.n	8015200 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 8015212:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8015216:	e7f3      	b.n	8015200 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 8015218:	bcf0      	pop	{r4, r5, r6, r7}
 801521a:	4770      	bx	lr

0801521c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801521c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015220:	4604      	mov	r4, r0
 8015222:	b087      	sub	sp, #28
 8015224:	6810      	ldr	r0, [r2, #0]
 8015226:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 801522a:	f8df 9238 	ldr.w	r9, [pc, #568]	@ 8015464 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801522e:	460e      	mov	r6, r1
 8015230:	6851      	ldr	r1, [r2, #4]
 8015232:	ad02      	add	r5, sp, #8
 8015234:	c503      	stmia	r5!, {r0, r1}
 8015236:	6818      	ldr	r0, [r3, #0]
 8015238:	6859      	ldr	r1, [r3, #4]
 801523a:	ad04      	add	r5, sp, #16
 801523c:	4617      	mov	r7, r2
 801523e:	c503      	stmia	r5!, {r0, r1}
 8015240:	a802      	add	r0, sp, #8
 8015242:	f7f7 fcf1 	bl	800cc28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015246:	4639      	mov	r1, r7
 8015248:	a804      	add	r0, sp, #16
 801524a:	f7f7 fd15 	bl	800cc78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801524e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8015252:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8015256:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801525a:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801525e:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8015262:	fb11 2103 	smlabb	r1, r1, r3, r2
 8015266:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801526a:	440e      	add	r6, r1
 801526c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8015270:	440a      	add	r2, r1
 8015272:	f8ad 2010 	strh.w	r2, [sp, #16]
 8015276:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801527a:	4413      	add	r3, r2
 801527c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8015280:	4b77      	ldr	r3, [pc, #476]	@ (8015460 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8015282:	6818      	ldr	r0, [r3, #0]
 8015284:	6803      	ldr	r3, [r0, #0]
 8015286:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015288:	4798      	blx	r3
 801528a:	f8b9 b000 	ldrh.w	fp, [r9]
 801528e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8015292:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8015296:	fb0b 2303 	mla	r3, fp, r3, r2
 801529a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801529e:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80152a2:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80152a6:	fb05 f50b 	mul.w	r5, r5, fp
 80152aa:	9300      	str	r3, [sp, #0]
 80152ac:	d069      	beq.n	8015382 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 80152ae:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 80152b2:	4558      	cmp	r0, fp
 80152b4:	f080 80cc 	bcs.w	8015450 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80152b8:	9b00      	ldr	r3, [sp, #0]
 80152ba:	18c3      	adds	r3, r0, r3
 80152bc:	9301      	str	r3, [sp, #4]
 80152be:	4631      	mov	r1, r6
 80152c0:	9b01      	ldr	r3, [sp, #4]
 80152c2:	4298      	cmp	r0, r3
 80152c4:	d24f      	bcs.n	8015366 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 80152c6:	f811 2b01 	ldrb.w	r2, [r1], #1
 80152ca:	2a00      	cmp	r2, #0
 80152cc:	d048      	beq.n	8015360 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80152ce:	fb0a f202 	mul.w	r2, sl, r2
 80152d2:	1c53      	adds	r3, r2, #1
 80152d4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80152d8:	121b      	asrs	r3, r3, #8
 80152da:	d041      	beq.n	8015360 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80152dc:	8802      	ldrh	r2, [r0, #0]
 80152de:	f8b4 c000 	ldrh.w	ip, [r4]
 80152e2:	b29e      	uxth	r6, r3
 80152e4:	1215      	asrs	r5, r2, #8
 80152e6:	43db      	mvns	r3, r3
 80152e8:	b2db      	uxtb	r3, r3
 80152ea:	ea4f 272c 	mov.w	r7, ip, asr #8
 80152ee:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80152f2:	fb15 f503 	smulbb	r5, r5, r3
 80152f6:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 80152fa:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80152fe:	00d2      	lsls	r2, r2, #3
 8015300:	fb07 5706 	mla	r7, r7, r6, r5
 8015304:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8015308:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801530c:	b2d2      	uxtb	r2, r2
 801530e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015312:	b2bf      	uxth	r7, r7
 8015314:	fb1e fe03 	smulbb	lr, lr, r3
 8015318:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801531c:	fa5f fc8c 	uxtb.w	ip, ip
 8015320:	fb12 f203 	smulbb	r2, r2, r3
 8015324:	fb05 e506 	mla	r5, r5, r6, lr
 8015328:	fb0c 2c06 	mla	ip, ip, r6, r2
 801532c:	f107 0e01 	add.w	lr, r7, #1
 8015330:	fa1f fc8c 	uxth.w	ip, ip
 8015334:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8015338:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 801533c:	f10c 0701 	add.w	r7, ip, #1
 8015340:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8015344:	b2ad      	uxth	r5, r5
 8015346:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801534a:	ea47 070e 	orr.w	r7, r7, lr
 801534e:	f105 0e01 	add.w	lr, r5, #1
 8015352:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8015356:	096d      	lsrs	r5, r5, #5
 8015358:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801535c:	432f      	orrs	r7, r5
 801535e:	8007      	strh	r7, [r0, #0]
 8015360:	3002      	adds	r0, #2
 8015362:	3402      	adds	r4, #2
 8015364:	e7ac      	b.n	80152c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8015366:	f8b9 3000 	ldrh.w	r3, [r9]
 801536a:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801536e:	eba3 0308 	sub.w	r3, r3, r8
 8015372:	eba6 0608 	sub.w	r6, r6, r8
 8015376:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801537a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801537e:	440e      	add	r6, r1
 8015380:	e797      	b.n	80152b2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8015382:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8015386:	42a8      	cmp	r0, r5
 8015388:	d262      	bcs.n	8015450 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801538a:	9b00      	ldr	r3, [sp, #0]
 801538c:	4631      	mov	r1, r6
 801538e:	eb00 0b03 	add.w	fp, r0, r3
 8015392:	4558      	cmp	r0, fp
 8015394:	d24e      	bcs.n	8015434 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8015396:	f811 3b01 	ldrb.w	r3, [r1], #1
 801539a:	b12b      	cbz	r3, 80153a8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801539c:	2bff      	cmp	r3, #255	@ 0xff
 801539e:	f8b4 e000 	ldrh.w	lr, [r4]
 80153a2:	d104      	bne.n	80153ae <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 80153a4:	f8a0 e000 	strh.w	lr, [r0]
 80153a8:	3002      	adds	r0, #2
 80153aa:	3402      	adds	r4, #2
 80153ac:	e7f1      	b.n	8015392 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 80153ae:	8802      	ldrh	r2, [r0, #0]
 80153b0:	b29f      	uxth	r7, r3
 80153b2:	1216      	asrs	r6, r2, #8
 80153b4:	43db      	mvns	r3, r3
 80153b6:	b2db      	uxtb	r3, r3
 80153b8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80153bc:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80153c0:	fb16 f603 	smulbb	r6, r6, r3
 80153c4:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80153c8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80153cc:	00d2      	lsls	r2, r2, #3
 80153ce:	fb0c 6c07 	mla	ip, ip, r7, r6
 80153d2:	b2d2      	uxtb	r2, r2
 80153d4:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80153d8:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80153dc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80153e0:	fb1a fa03 	smulbb	sl, sl, r3
 80153e4:	fa1f fc8c 	uxth.w	ip, ip
 80153e8:	fb12 f303 	smulbb	r3, r2, r3
 80153ec:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80153f0:	fa5f fe8e 	uxtb.w	lr, lr
 80153f4:	fb06 a607 	mla	r6, r6, r7, sl
 80153f8:	f10c 0201 	add.w	r2, ip, #1
 80153fc:	fb0e 3307 	mla	r3, lr, r7, r3
 8015400:	b2b6      	uxth	r6, r6
 8015402:	b29b      	uxth	r3, r3
 8015404:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8015408:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 801540c:	f106 0a01 	add.w	sl, r6, #1
 8015410:	f103 0c01 	add.w	ip, r3, #1
 8015414:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8015418:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801541c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015420:	0976      	lsrs	r6, r6, #5
 8015422:	ea4c 0c02 	orr.w	ip, ip, r2
 8015426:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801542a:	ea4c 0c06 	orr.w	ip, ip, r6
 801542e:	f8a0 c000 	strh.w	ip, [r0]
 8015432:	e7b9      	b.n	80153a8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8015434:	f8b9 3000 	ldrh.w	r3, [r9]
 8015438:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801543c:	eba3 0308 	sub.w	r3, r3, r8
 8015440:	eba6 0608 	sub.w	r6, r6, r8
 8015444:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8015448:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801544c:	440e      	add	r6, r1
 801544e:	e79a      	b.n	8015386 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8015450:	4b03      	ldr	r3, [pc, #12]	@ (8015460 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8015452:	6818      	ldr	r0, [r3, #0]
 8015454:	6803      	ldr	r3, [r0, #0]
 8015456:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015458:	4798      	blx	r3
 801545a:	b007      	add	sp, #28
 801545c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015460:	200119fc 	.word	0x200119fc
 8015464:	200119f6 	.word	0x200119f6

08015468 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8015468:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801546c:	b089      	sub	sp, #36	@ 0x24
 801546e:	4682      	mov	sl, r0
 8015470:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 8015474:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8015476:	460f      	mov	r7, r1
 8015478:	4691      	mov	r9, r2
 801547a:	4698      	mov	r8, r3
 801547c:	2e00      	cmp	r6, #0
 801547e:	d03d      	beq.n	80154fc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8015480:	4608      	mov	r0, r1
 8015482:	f7fa fe51 	bl	8010128 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015486:	4605      	mov	r5, r0
 8015488:	4638      	mov	r0, r7
 801548a:	f7fa fe81 	bl	8010190 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801548e:	f8ad 000e 	strh.w	r0, [sp, #14]
 8015492:	4638      	mov	r0, r7
 8015494:	f8ad 9008 	strh.w	r9, [sp, #8]
 8015498:	f8ad 500c 	strh.w	r5, [sp, #12]
 801549c:	f8ad 800a 	strh.w	r8, [sp, #10]
 80154a0:	f7fa ff34 	bl	801030c <_ZNK8touchgfx6Bitmap7getDataEv>
 80154a4:	4605      	mov	r5, r0
 80154a6:	4638      	mov	r0, r7
 80154a8:	f7fa ff60 	bl	801036c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80154ac:	4681      	mov	r9, r0
 80154ae:	4638      	mov	r0, r7
 80154b0:	f7fa ffb0 	bl	8010414 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80154b4:	280b      	cmp	r0, #11
 80154b6:	d821      	bhi.n	80154fc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80154b8:	e8df f000 	tbb	[pc, r0]
 80154bc:	2006aebe 	.word	0x2006aebe
 80154c0:	20202020 	.word	0x20202020
 80154c4:	b5202020 	.word	0xb5202020
 80154c8:	4bb0      	ldr	r3, [pc, #704]	@ (801578c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 80154ca:	6818      	ldr	r0, [r3, #0]
 80154cc:	6803      	ldr	r3, [r0, #0]
 80154ce:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80154d0:	4798      	blx	r3
 80154d2:	2eff      	cmp	r6, #255	@ 0xff
 80154d4:	d101      	bne.n	80154da <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 80154d6:	0683      	lsls	r3, r0, #26
 80154d8:	d506      	bpl.n	80154e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 80154da:	4633      	mov	r3, r6
 80154dc:	4622      	mov	r2, r4
 80154de:	a902      	add	r1, sp, #8
 80154e0:	4628      	mov	r0, r5
 80154e2:	f7ff f907 	bl	80146f4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80154e6:	e009      	b.n	80154fc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80154e8:	4638      	mov	r0, r7
 80154ea:	f7fa fed7 	bl	801029c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80154ee:	b940      	cbnz	r0, 8015502 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 80154f0:	4623      	mov	r3, r4
 80154f2:	aa02      	add	r2, sp, #8
 80154f4:	4629      	mov	r1, r5
 80154f6:	4650      	mov	r0, sl
 80154f8:	f7ff f9e2 	bl	80148c0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80154fc:	b009      	add	sp, #36	@ 0x24
 80154fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015502:	f10d 0818 	add.w	r8, sp, #24
 8015506:	4639      	mov	r1, r7
 8015508:	4640      	mov	r0, r8
 801550a:	f7fa fe75 	bl	80101f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801550e:	e898 0003 	ldmia.w	r8, {r0, r1}
 8015512:	af04      	add	r7, sp, #16
 8015514:	e887 0003 	stmia.w	r7, {r0, r1}
 8015518:	4638      	mov	r0, r7
 801551a:	4621      	mov	r1, r4
 801551c:	f7f4 faaa 	bl	8009a74 <_ZN8touchgfx4RectaNERKS0_>
 8015520:	4638      	mov	r0, r7
 8015522:	f7f4 faea 	bl	8009afa <_ZNK8touchgfx4Rect7isEmptyEv>
 8015526:	2800      	cmp	r0, #0
 8015528:	d1d7      	bne.n	80154da <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801552a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801552e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8015532:	4293      	cmp	r3, r2
 8015534:	dd12      	ble.n	801555c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 8015536:	1a9b      	subs	r3, r3, r2
 8015538:	f9b4 0000 	ldrsh.w	r0, [r4]
 801553c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8015540:	f8ad 0018 	strh.w	r0, [sp, #24]
 8015544:	f8ad 201a 	strh.w	r2, [sp, #26]
 8015548:	f8ad 101c 	strh.w	r1, [sp, #28]
 801554c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8015550:	4642      	mov	r2, r8
 8015552:	4633      	mov	r3, r6
 8015554:	a902      	add	r1, sp, #8
 8015556:	4628      	mov	r0, r5
 8015558:	f7ff f8cc 	bl	80146f4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801555c:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8015560:	f9b4 2000 	ldrsh.w	r2, [r4]
 8015564:	4293      	cmp	r3, r2
 8015566:	dd12      	ble.n	801558e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 8015568:	1a9b      	subs	r3, r3, r2
 801556a:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801556e:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8015572:	f8ad 2018 	strh.w	r2, [sp, #24]
 8015576:	f8ad 001a 	strh.w	r0, [sp, #26]
 801557a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801557e:	f8ad 101e 	strh.w	r1, [sp, #30]
 8015582:	23ff      	movs	r3, #255	@ 0xff
 8015584:	4642      	mov	r2, r8
 8015586:	a902      	add	r1, sp, #8
 8015588:	4628      	mov	r0, r5
 801558a:	f7ff f8b3 	bl	80146f4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801558e:	463b      	mov	r3, r7
 8015590:	aa02      	add	r2, sp, #8
 8015592:	4629      	mov	r1, r5
 8015594:	4650      	mov	r0, sl
 8015596:	f7ff f993 	bl	80148c0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801559a:	88a2      	ldrh	r2, [r4, #4]
 801559c:	8823      	ldrh	r3, [r4, #0]
 801559e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80155a2:	4413      	add	r3, r2
 80155a4:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80155a8:	440a      	add	r2, r1
 80155aa:	b29b      	uxth	r3, r3
 80155ac:	b292      	uxth	r2, r2
 80155ae:	b211      	sxth	r1, r2
 80155b0:	b218      	sxth	r0, r3
 80155b2:	4288      	cmp	r0, r1
 80155b4:	dd12      	ble.n	80155dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 80155b6:	1a9b      	subs	r3, r3, r2
 80155b8:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80155bc:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 80155c0:	f8ad 1018 	strh.w	r1, [sp, #24]
 80155c4:	f8ad 301c 	strh.w	r3, [sp, #28]
 80155c8:	f8ad 001e 	strh.w	r0, [sp, #30]
 80155cc:	23ff      	movs	r3, #255	@ 0xff
 80155ce:	4642      	mov	r2, r8
 80155d0:	a902      	add	r1, sp, #8
 80155d2:	4628      	mov	r0, r5
 80155d4:	f8ad 601a 	strh.w	r6, [sp, #26]
 80155d8:	f7ff f88c 	bl	80146f4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80155dc:	88e2      	ldrh	r2, [r4, #6]
 80155de:	8863      	ldrh	r3, [r4, #2]
 80155e0:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80155e4:	4413      	add	r3, r2
 80155e6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80155ea:	440a      	add	r2, r1
 80155ec:	b29b      	uxth	r3, r3
 80155ee:	b292      	uxth	r2, r2
 80155f0:	b211      	sxth	r1, r2
 80155f2:	b218      	sxth	r0, r3
 80155f4:	4288      	cmp	r0, r1
 80155f6:	dd81      	ble.n	80154fc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80155f8:	1a9b      	subs	r3, r3, r2
 80155fa:	f9b4 6000 	ldrsh.w	r6, [r4]
 80155fe:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8015602:	f8ad 301e 	strh.w	r3, [sp, #30]
 8015606:	f8ad 6018 	strh.w	r6, [sp, #24]
 801560a:	f8ad 101a 	strh.w	r1, [sp, #26]
 801560e:	f8ad 001c 	strh.w	r0, [sp, #28]
 8015612:	23ff      	movs	r3, #255	@ 0xff
 8015614:	4642      	mov	r2, r8
 8015616:	e762      	b.n	80154de <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 8015618:	4633      	mov	r3, r6
 801561a:	4622      	mov	r2, r4
 801561c:	a902      	add	r1, sp, #8
 801561e:	4628      	mov	r0, r5
 8015620:	f7ff f9be 	bl	80149a0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8015624:	e76a      	b.n	80154fc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8015626:	e9cd 4600 	strd	r4, r6, [sp]
 801562a:	ab02      	add	r3, sp, #8
 801562c:	464a      	mov	r2, r9
 801562e:	4629      	mov	r1, r5
 8015630:	4650      	mov	r0, sl
 8015632:	f7ff fd95 	bl	8015160 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8015636:	e761      	b.n	80154fc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8015638:	4638      	mov	r0, r7
 801563a:	f7fa fe2f 	bl	801029c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801563e:	b950      	cbnz	r0, 8015656 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 8015640:	e9cd 6000 	strd	r6, r0, [sp]
 8015644:	f8da 3000 	ldr.w	r3, [sl]
 8015648:	aa02      	add	r2, sp, #8
 801564a:	68de      	ldr	r6, [r3, #12]
 801564c:	4629      	mov	r1, r5
 801564e:	4623      	mov	r3, r4
 8015650:	4650      	mov	r0, sl
 8015652:	47b0      	blx	r6
 8015654:	e752      	b.n	80154fc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8015656:	f10d 0818 	add.w	r8, sp, #24
 801565a:	4639      	mov	r1, r7
 801565c:	4640      	mov	r0, r8
 801565e:	f7fa fdcb 	bl	80101f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8015662:	e898 0003 	ldmia.w	r8, {r0, r1}
 8015666:	af04      	add	r7, sp, #16
 8015668:	e887 0003 	stmia.w	r7, {r0, r1}
 801566c:	4638      	mov	r0, r7
 801566e:	4621      	mov	r1, r4
 8015670:	f7f4 fa00 	bl	8009a74 <_ZN8touchgfx4RectaNERKS0_>
 8015674:	4638      	mov	r0, r7
 8015676:	f7f4 fa40 	bl	8009afa <_ZNK8touchgfx4Rect7isEmptyEv>
 801567a:	b138      	cbz	r0, 801568c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801567c:	9600      	str	r6, [sp, #0]
 801567e:	4623      	mov	r3, r4
 8015680:	aa02      	add	r2, sp, #8
 8015682:	4649      	mov	r1, r9
 8015684:	4628      	mov	r0, r5
 8015686:	f7ff fdc9 	bl	801521c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801568a:	e737      	b.n	80154fc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801568c:	e9cd 6000 	strd	r6, r0, [sp]
 8015690:	f8da 3000 	ldr.w	r3, [sl]
 8015694:	aa02      	add	r2, sp, #8
 8015696:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801569a:	4629      	mov	r1, r5
 801569c:	463b      	mov	r3, r7
 801569e:	4650      	mov	r0, sl
 80156a0:	47d8      	blx	fp
 80156a2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80156a6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80156aa:	4293      	cmp	r3, r2
 80156ac:	dd13      	ble.n	80156d6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 80156ae:	f9b4 0000 	ldrsh.w	r0, [r4]
 80156b2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80156b6:	f8ad 0018 	strh.w	r0, [sp, #24]
 80156ba:	1a9b      	subs	r3, r3, r2
 80156bc:	f8ad 201a 	strh.w	r2, [sp, #26]
 80156c0:	f8ad 101c 	strh.w	r1, [sp, #28]
 80156c4:	f8ad 301e 	strh.w	r3, [sp, #30]
 80156c8:	9600      	str	r6, [sp, #0]
 80156ca:	4643      	mov	r3, r8
 80156cc:	aa02      	add	r2, sp, #8
 80156ce:	4649      	mov	r1, r9
 80156d0:	4628      	mov	r0, r5
 80156d2:	f7ff fda3 	bl	801521c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80156d6:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80156da:	f9b4 2000 	ldrsh.w	r2, [r4]
 80156de:	4293      	cmp	r3, r2
 80156e0:	dd13      	ble.n	801570a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 80156e2:	1a9b      	subs	r3, r3, r2
 80156e4:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80156e8:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80156ec:	f8ad 2018 	strh.w	r2, [sp, #24]
 80156f0:	f8ad 001a 	strh.w	r0, [sp, #26]
 80156f4:	f8ad 301c 	strh.w	r3, [sp, #28]
 80156f8:	f8ad 101e 	strh.w	r1, [sp, #30]
 80156fc:	9600      	str	r6, [sp, #0]
 80156fe:	4643      	mov	r3, r8
 8015700:	aa02      	add	r2, sp, #8
 8015702:	4649      	mov	r1, r9
 8015704:	4628      	mov	r0, r5
 8015706:	f7ff fd89 	bl	801521c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801570a:	88a2      	ldrh	r2, [r4, #4]
 801570c:	8823      	ldrh	r3, [r4, #0]
 801570e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8015712:	4413      	add	r3, r2
 8015714:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8015718:	440a      	add	r2, r1
 801571a:	b29b      	uxth	r3, r3
 801571c:	b292      	uxth	r2, r2
 801571e:	b211      	sxth	r1, r2
 8015720:	b218      	sxth	r0, r3
 8015722:	4288      	cmp	r0, r1
 8015724:	dd13      	ble.n	801574e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 8015726:	1a9b      	subs	r3, r3, r2
 8015728:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801572c:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8015730:	f8ad 1018 	strh.w	r1, [sp, #24]
 8015734:	f8ad 301c 	strh.w	r3, [sp, #28]
 8015738:	f8ad 001e 	strh.w	r0, [sp, #30]
 801573c:	9600      	str	r6, [sp, #0]
 801573e:	4643      	mov	r3, r8
 8015740:	aa02      	add	r2, sp, #8
 8015742:	4649      	mov	r1, r9
 8015744:	4628      	mov	r0, r5
 8015746:	f8ad 701a 	strh.w	r7, [sp, #26]
 801574a:	f7ff fd67 	bl	801521c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801574e:	88e2      	ldrh	r2, [r4, #6]
 8015750:	8863      	ldrh	r3, [r4, #2]
 8015752:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8015756:	4413      	add	r3, r2
 8015758:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801575c:	440a      	add	r2, r1
 801575e:	b29b      	uxth	r3, r3
 8015760:	b292      	uxth	r2, r2
 8015762:	b211      	sxth	r1, r2
 8015764:	b218      	sxth	r0, r3
 8015766:	4288      	cmp	r0, r1
 8015768:	f77f aec8 	ble.w	80154fc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801576c:	f9b4 7000 	ldrsh.w	r7, [r4]
 8015770:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8015774:	f8ad 7018 	strh.w	r7, [sp, #24]
 8015778:	1a9b      	subs	r3, r3, r2
 801577a:	f8ad 301e 	strh.w	r3, [sp, #30]
 801577e:	f8ad 101a 	strh.w	r1, [sp, #26]
 8015782:	f8ad 001c 	strh.w	r0, [sp, #28]
 8015786:	9600      	str	r6, [sp, #0]
 8015788:	4643      	mov	r3, r8
 801578a:	e779      	b.n	8015680 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801578c:	200119fc 	.word	0x200119fc

08015790 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8015790:	b180      	cbz	r0, 80157b4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8015792:	2903      	cmp	r1, #3
 8015794:	d81c      	bhi.n	80157d0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8015796:	e8df f001 	tbb	[pc, r1]
 801579a:	1d02      	.short	0x1d02
 801579c:	1f08      	.short	0x1f08
 801579e:	4b10      	ldr	r3, [pc, #64]	@ (80157e0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80157a0:	8818      	ldrh	r0, [r3, #0]
 80157a2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80157a6:	4240      	negs	r0, r0
 80157a8:	4770      	bx	lr
 80157aa:	4b0d      	ldr	r3, [pc, #52]	@ (80157e0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80157ac:	8818      	ldrh	r0, [r3, #0]
 80157ae:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80157b2:	4770      	bx	lr
 80157b4:	2903      	cmp	r1, #3
 80157b6:	d80b      	bhi.n	80157d0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80157b8:	a301      	add	r3, pc, #4	@ (adr r3, 80157c0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 80157ba:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80157be:	bf00      	nop
 80157c0:	080157d5 	.word	0x080157d5
 80157c4:	080157ab 	.word	0x080157ab
 80157c8:	080157d9 	.word	0x080157d9
 80157cc:	0801579f 	.word	0x0801579f
 80157d0:	2000      	movs	r0, #0
 80157d2:	4770      	bx	lr
 80157d4:	2001      	movs	r0, #1
 80157d6:	4770      	bx	lr
 80157d8:	f04f 30ff 	mov.w	r0, #4294967295
 80157dc:	4770      	bx	lr
 80157de:	bf00      	nop
 80157e0:	200119f6 	.word	0x200119f6

080157e4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 80157e4:	b180      	cbz	r0, 8015808 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 80157e6:	2903      	cmp	r1, #3
 80157e8:	d81c      	bhi.n	8015824 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80157ea:	e8df f001 	tbb	[pc, r1]
 80157ee:	021d      	.short	0x021d
 80157f0:	071f      	.short	0x071f
 80157f2:	4b10      	ldr	r3, [pc, #64]	@ (8015834 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80157f4:	8818      	ldrh	r0, [r3, #0]
 80157f6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80157fa:	4770      	bx	lr
 80157fc:	4b0d      	ldr	r3, [pc, #52]	@ (8015834 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80157fe:	8818      	ldrh	r0, [r3, #0]
 8015800:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8015804:	4240      	negs	r0, r0
 8015806:	4770      	bx	lr
 8015808:	2903      	cmp	r1, #3
 801580a:	d80b      	bhi.n	8015824 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801580c:	a301      	add	r3, pc, #4	@ (adr r3, 8015814 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801580e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8015812:	bf00      	nop
 8015814:	080157f3 	.word	0x080157f3
 8015818:	0801582d 	.word	0x0801582d
 801581c:	080157fd 	.word	0x080157fd
 8015820:	08015829 	.word	0x08015829
 8015824:	2000      	movs	r0, #0
 8015826:	4770      	bx	lr
 8015828:	2001      	movs	r0, #1
 801582a:	4770      	bx	lr
 801582c:	f04f 30ff 	mov.w	r0, #4294967295
 8015830:	4770      	bx	lr
 8015832:	bf00      	nop
 8015834:	200119f6 	.word	0x200119f6

08015838 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8015838:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801583c:	b099      	sub	sp, #100	@ 0x64
 801583e:	910b      	str	r1, [sp, #44]	@ 0x2c
 8015840:	a914      	add	r1, sp, #80	@ 0x50
 8015842:	e881 000c 	stmia.w	r1, {r2, r3}
 8015846:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 801584a:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 801584e:	f891 900d 	ldrb.w	r9, [r1, #13]
 8015852:	9309      	str	r3, [sp, #36]	@ 0x24
 8015854:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8015858:	9310      	str	r3, [sp, #64]	@ 0x40
 801585a:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801585e:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 8015862:	930c      	str	r3, [sp, #48]	@ 0x30
 8015864:	f407 7380 	and.w	r3, r7, #256	@ 0x100
 8015868:	798f      	ldrb	r7, [r1, #6]
 801586a:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 801586e:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 8015872:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 8015876:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
 801587a:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 801587e:	431f      	orrs	r7, r3
 8015880:	f000 8195 	beq.w	8015bae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8015884:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8015888:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 801588c:	f891 9007 	ldrb.w	r9, [r1, #7]
 8015890:	ea59 0903 	orrs.w	r9, r9, r3
 8015894:	f000 818b 	beq.w	8015bae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8015898:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801589c:	b29b      	uxth	r3, r3
 801589e:	2d00      	cmp	r5, #0
 80158a0:	f000 812e 	beq.w	8015b00 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 80158a4:	1aed      	subs	r5, r5, r3
 80158a6:	b2ad      	uxth	r5, r5
 80158a8:	042b      	lsls	r3, r5, #16
 80158aa:	d502      	bpl.n	80158b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 80158ac:	1b64      	subs	r4, r4, r5
 80158ae:	b224      	sxth	r4, r4
 80158b0:	2500      	movs	r5, #0
 80158b2:	f9b2 1000 	ldrsh.w	r1, [r2]
 80158b6:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 80158ba:	428c      	cmp	r4, r1
 80158bc:	b28b      	uxth	r3, r1
 80158be:	bfbf      	itttt	lt
 80158c0:	18ed      	addlt	r5, r5, r3
 80158c2:	1b2c      	sublt	r4, r5, r4
 80158c4:	b2a5      	uxthlt	r5, r4
 80158c6:	460c      	movlt	r4, r1
 80158c8:	8891      	ldrh	r1, [r2, #4]
 80158ca:	440b      	add	r3, r1
 80158cc:	b21b      	sxth	r3, r3
 80158ce:	930f      	str	r3, [sp, #60]	@ 0x3c
 80158d0:	88d3      	ldrh	r3, [r2, #6]
 80158d2:	8852      	ldrh	r2, [r2, #2]
 80158d4:	4413      	add	r3, r2
 80158d6:	b21b      	sxth	r3, r3
 80158d8:	930d      	str	r3, [sp, #52]	@ 0x34
 80158da:	4bbe      	ldr	r3, [pc, #760]	@ (8015bd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 80158dc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80158de:	f893 b000 	ldrb.w	fp, [r3]
 80158e2:	f10b 3cff 	add.w	ip, fp, #4294967295
 80158e6:	f1dc 0300 	rsbs	r3, ip, #0
 80158ea:	eb43 030c 	adc.w	r3, r3, ip
 80158ee:	930e      	str	r3, [sp, #56]	@ 0x38
 80158f0:	4621      	mov	r1, r4
 80158f2:	4653      	mov	r3, sl
 80158f4:	a814      	add	r0, sp, #80	@ 0x50
 80158f6:	f7f7 f80c 	bl	800c912 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 80158fa:	4621      	mov	r1, r4
 80158fc:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 8015900:	4653      	mov	r3, sl
 8015902:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8015904:	a814      	add	r0, sp, #80	@ 0x50
 8015906:	f7f7 f821 	bl	800c94c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801590a:	a918      	add	r1, sp, #96	@ 0x60
 801590c:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8015910:	a817      	add	r0, sp, #92	@ 0x5c
 8015912:	f7f7 f947 	bl	800cba4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8015916:	f1ba 0f00 	cmp.w	sl, #0
 801591a:	f040 80f4 	bne.w	8015b06 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801591e:	f1bb 0f01 	cmp.w	fp, #1
 8015922:	f040 80f8 	bne.w	8015b16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8015926:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015928:	2b00      	cmp	r3, #0
 801592a:	f040 8145 	bne.w	8015bb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801592e:	b2ba      	uxth	r2, r7
 8015930:	b905      	cbnz	r5, 8015934 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8015932:	b16e      	cbz	r6, 8015950 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8015934:	fb06 5302 	mla	r3, r6, r2, r5
 8015938:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 801593a:	fb08 f303 	mul.w	r3, r8, r3
 801593e:	4631      	mov	r1, r6
 8015940:	f003 0607 	and.w	r6, r3, #7
 8015944:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8015948:	9328      	str	r3, [sp, #160]	@ 0xa0
 801594a:	eba9 0301 	sub.w	r3, r9, r1
 801594e:	930a      	str	r3, [sp, #40]	@ 0x28
 8015950:	4651      	mov	r1, sl
 8015952:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8015954:	f7ff ff1c 	bl	8015790 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8015958:	4681      	mov	r9, r0
 801595a:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801595c:	f7ff ff42 	bl	80157e4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8015960:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015962:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8015964:	eba3 0a01 	sub.w	sl, r3, r1
 8015968:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801596a:	459a      	cmp	sl, r3
 801596c:	bfa8      	it	ge
 801596e:	469a      	movge	sl, r3
 8015970:	f1ba 0f00 	cmp.w	sl, #0
 8015974:	4683      	mov	fp, r0
 8015976:	f340 811a 	ble.w	8015bae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801597a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801597c:	1b64      	subs	r4, r4, r5
 801597e:	1b1c      	subs	r4, r3, r4
 8015980:	42bc      	cmp	r4, r7
 8015982:	bfd4      	ite	le
 8015984:	ebc5 0504 	rsble	r5, r5, r4
 8015988:	ebc5 0507 	rsbgt	r5, r5, r7
 801598c:	2d00      	cmp	r5, #0
 801598e:	f340 810e 	ble.w	8015bae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8015992:	1b52      	subs	r2, r2, r5
 8015994:	fb08 f302 	mul.w	r3, r8, r2
 8015998:	930f      	str	r3, [sp, #60]	@ 0x3c
 801599a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801599c:	2b00      	cmp	r3, #0
 801599e:	f040 8116 	bne.w	8015bce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 80159a2:	4b8d      	ldr	r3, [pc, #564]	@ (8015bd8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 80159a4:	6818      	ldr	r0, [r3, #0]
 80159a6:	6803      	ldr	r3, [r0, #0]
 80159a8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80159aa:	4798      	blx	r3
 80159ac:	2301      	movs	r3, #1
 80159ae:	fa03 f308 	lsl.w	r3, r3, r8
 80159b2:	4a8a      	ldr	r2, [pc, #552]	@ (8015bdc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 80159b4:	3b01      	subs	r3, #1
 80159b6:	b2db      	uxtb	r3, r3
 80159b8:	8811      	ldrh	r1, [r2, #0]
 80159ba:	930e      	str	r3, [sp, #56]	@ 0x38
 80159bc:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
 80159c0:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
 80159c4:	fb01 2303 	mla	r3, r1, r3, r2
 80159c8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80159cc:	930a      	str	r3, [sp, #40]	@ 0x28
 80159ce:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80159d0:	f3c3 4307 	ubfx	r3, r3, #16, #8
 80159d4:	9313      	str	r3, [sp, #76]	@ 0x4c
 80159d6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80159d8:	0a19      	lsrs	r1, r3, #8
 80159da:	b2cb      	uxtb	r3, r1
 80159dc:	9312      	str	r3, [sp, #72]	@ 0x48
 80159de:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80159e0:	b2db      	uxtb	r3, r3
 80159e2:	9311      	str	r3, [sp, #68]	@ 0x44
 80159e4:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80159e6:	095a      	lsrs	r2, r3, #5
 80159e8:	4b7d      	ldr	r3, [pc, #500]	@ (8015be0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 80159ea:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80159ee:	400b      	ands	r3, r1
 80159f0:	4313      	orrs	r3, r2
 80159f2:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 80159f4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80159f8:	4313      	orrs	r3, r2
 80159fa:	b29b      	uxth	r3, r3
 80159fc:	9310      	str	r3, [sp, #64]	@ 0x40
 80159fe:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8015a00:	781a      	ldrb	r2, [r3, #0]
 8015a02:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8015a06:	4132      	asrs	r2, r6
 8015a08:	fb05 b919 	mls	r9, r5, r9, fp
 8015a0c:	fb03 fb05 	mul.w	fp, r3, r5
 8015a10:	b2d2      	uxtb	r2, r2
 8015a12:	930d      	str	r3, [sp, #52]	@ 0x34
 8015a14:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8015a18:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8015a1c:	f0c0 80f5 	bcc.w	8015c0a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8015a20:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
 8015a24:	46ae      	mov	lr, r5
 8015a26:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8015a2a:	f0c0 80dd 	bcc.w	8015be8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8015a2e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015a30:	4013      	ands	r3, r2
 8015a32:	d055      	beq.n	8015ae0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8015a34:	20ff      	movs	r0, #255	@ 0xff
 8015a36:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8015a38:	fb90 f1f1 	sdiv	r1, r0, r1
 8015a3c:	434b      	muls	r3, r1
 8015a3e:	2bfe      	cmp	r3, #254	@ 0xfe
 8015a40:	dd03      	ble.n	8015a4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8015a42:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8015a44:	4281      	cmp	r1, r0
 8015a46:	f000 80cd 	beq.w	8015be4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8015a4a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8015a4c:	f8bc 4000 	ldrh.w	r4, [ip]
 8015a50:	fb11 f303 	smulbb	r3, r1, r3
 8015a54:	b29b      	uxth	r3, r3
 8015a56:	1c59      	adds	r1, r3, #1
 8015a58:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8015a5c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8015a60:	b29f      	uxth	r7, r3
 8015a62:	43db      	mvns	r3, r3
 8015a64:	b2db      	uxtb	r3, r3
 8015a66:	9309      	str	r3, [sp, #36]	@ 0x24
 8015a68:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8015a6a:	1220      	asrs	r0, r4, #8
 8015a6c:	fb13 f907 	smulbb	r9, r3, r7
 8015a70:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8015a74:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015a76:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8015a7a:	fb00 9003 	mla	r0, r0, r3, r9
 8015a7e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8015a80:	10e1      	asrs	r1, r4, #3
 8015a82:	fb13 f907 	smulbb	r9, r3, r7
 8015a86:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8015a8a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015a8c:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8015a90:	fb01 9103 	mla	r1, r1, r3, r9
 8015a94:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8015a96:	00e4      	lsls	r4, r4, #3
 8015a98:	fb13 f707 	smulbb	r7, r3, r7
 8015a9c:	b2e4      	uxtb	r4, r4
 8015a9e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015aa0:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8015aa4:	fb04 7403 	mla	r4, r4, r3, r7
 8015aa8:	b280      	uxth	r0, r0
 8015aaa:	b2a4      	uxth	r4, r4
 8015aac:	1c43      	adds	r3, r0, #1
 8015aae:	f104 0901 	add.w	r9, r4, #1
 8015ab2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8015ab6:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8015aba:	b289      	uxth	r1, r1
 8015abc:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8015ac0:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8015ac4:	ea49 0000 	orr.w	r0, r9, r0
 8015ac8:	f101 0901 	add.w	r9, r1, #1
 8015acc:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8015ad0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8015ad4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8015ad8:	ea40 0009 	orr.w	r0, r0, r9
 8015adc:	f8ac 0000 	strh.w	r0, [ip]
 8015ae0:	4446      	add	r6, r8
 8015ae2:	b2b6      	uxth	r6, r6
 8015ae4:	2e07      	cmp	r6, #7
 8015ae6:	bf81      	itttt	hi
 8015ae8:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
 8015aea:	785a      	ldrbhi	r2, [r3, #1]
 8015aec:	3301      	addhi	r3, #1
 8015aee:	9328      	strhi	r3, [sp, #160]	@ 0xa0
 8015af0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015af2:	bf9a      	itte	ls
 8015af4:	fa42 f208 	asrls.w	r2, r2, r8
 8015af8:	b2d2      	uxtbls	r2, r2
 8015afa:	2600      	movhi	r6, #0
 8015afc:	449c      	add	ip, r3
 8015afe:	e792      	b.n	8015a26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8015b00:	441c      	add	r4, r3
 8015b02:	b224      	sxth	r4, r4
 8015b04:	e6d5      	b.n	80158b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8015b06:	f1ba 0f01 	cmp.w	sl, #1
 8015b0a:	f47f af0c 	bne.w	8015926 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8015b0e:	f1bb 0f01 	cmp.w	fp, #1
 8015b12:	f47f af08 	bne.w	8015926 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8015b16:	f8df b0c0 	ldr.w	fp, [pc, #192]	@ 8015bd8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8015b1a:	f8db 0000 	ldr.w	r0, [fp]
 8015b1e:	6803      	ldr	r3, [r0, #0]
 8015b20:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8015b22:	4798      	blx	r3
 8015b24:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 8015b28:	465a      	mov	r2, fp
 8015b2a:	d006      	beq.n	8015b3a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8015b2c:	f1b8 0f04 	cmp.w	r8, #4
 8015b30:	d140      	bne.n	8015bb4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8015b32:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015b34:	3300      	adds	r3, #0
 8015b36:	bf18      	it	ne
 8015b38:	2301      	movne	r3, #1
 8015b3a:	0580      	lsls	r0, r0, #22
 8015b3c:	d56e      	bpl.n	8015c1c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8015b3e:	f1b8 0f08 	cmp.w	r8, #8
 8015b42:	d16b      	bne.n	8015c1c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8015b44:	2b00      	cmp	r3, #0
 8015b46:	bf0c      	ite	eq
 8015b48:	f44f 7100 	moveq.w	r1, #512	@ 0x200
 8015b4c:	f44f 7180 	movne.w	r1, #256	@ 0x100
 8015b50:	2d00      	cmp	r5, #0
 8015b52:	f47f aee8 	bne.w	8015926 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8015b56:	2e00      	cmp	r6, #0
 8015b58:	f47f aee5 	bne.w	8015926 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8015b5c:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8015b5e:	19e3      	adds	r3, r4, r7
 8015b60:	4283      	cmp	r3, r0
 8015b62:	f73f aee0 	bgt.w	8015926 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8015b66:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015b68:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8015b6a:	444b      	add	r3, r9
 8015b6c:	4283      	cmp	r3, r0
 8015b6e:	f73f aeda 	bgt.w	8015926 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8015b72:	6810      	ldr	r0, [r2, #0]
 8015b74:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
 8015b78:	6804      	ldr	r4, [r0, #0]
 8015b7a:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8015b7e:	b2bf      	uxth	r7, r7
 8015b80:	f1b8 0f08 	cmp.w	r8, #8
 8015b84:	f04f 0500 	mov.w	r5, #0
 8015b88:	bf18      	it	ne
 8015b8a:	3701      	addne	r7, #1
 8015b8c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8015b90:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8015b92:	9104      	str	r1, [sp, #16]
 8015b94:	bf18      	it	ne
 8015b96:	f027 0701 	bicne.w	r7, r7, #1
 8015b9a:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8015b9c:	bf18      	it	ne
 8015b9e:	b2bf      	uxthne	r7, r7
 8015ba0:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8015ba4:	e9cd 7900 	strd	r7, r9, [sp]
 8015ba8:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8015baa:	6d64      	ldr	r4, [r4, #84]	@ 0x54
 8015bac:	47a0      	blx	r4
 8015bae:	b019      	add	sp, #100	@ 0x64
 8015bb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015bb4:	2300      	movs	r3, #0
 8015bb6:	e7c0      	b.n	8015b3a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8015bb8:	2208      	movs	r2, #8
 8015bba:	fb92 f3f8 	sdiv	r3, r2, r8
 8015bbe:	1e5a      	subs	r2, r3, #1
 8015bc0:	443a      	add	r2, r7
 8015bc2:	fb92 f2f3 	sdiv	r2, r2, r3
 8015bc6:	fb12 f203 	smulbb	r2, r2, r3
 8015bca:	b292      	uxth	r2, r2
 8015bcc:	e6b0      	b.n	8015930 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8015bce:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8015bd0:	e6ec      	b.n	80159ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8015bd2:	bf00      	nop
 8015bd4:	200119f4 	.word	0x200119f4
 8015bd8:	200119fc 	.word	0x200119fc
 8015bdc:	200119f6 	.word	0x200119f6
 8015be0:	00fff800 	.word	0x00fff800
 8015be4:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8015be6:	e779      	b.n	8015adc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8015be8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8015bea:	b153      	cbz	r3, 8015c02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8015bec:	441e      	add	r6, r3
 8015bee:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8015bf0:	b2b6      	uxth	r6, r6
 8015bf2:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8015bf6:	f006 0607 	and.w	r6, r6, #7
 8015bfa:	781a      	ldrb	r2, [r3, #0]
 8015bfc:	9328      	str	r3, [sp, #160]	@ 0xa0
 8015bfe:	4132      	asrs	r2, r6
 8015c00:	b2d2      	uxtb	r2, r2
 8015c02:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8015c04:	445b      	add	r3, fp
 8015c06:	930a      	str	r3, [sp, #40]	@ 0x28
 8015c08:	e706      	b.n	8015a18 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8015c0a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8015c0c:	2b00      	cmp	r3, #0
 8015c0e:	d1ce      	bne.n	8015bae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8015c10:	4b05      	ldr	r3, [pc, #20]	@ (8015c28 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8015c12:	6818      	ldr	r0, [r3, #0]
 8015c14:	6803      	ldr	r3, [r0, #0]
 8015c16:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015c18:	4798      	blx	r3
 8015c1a:	e7c8      	b.n	8015bae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8015c1c:	2b00      	cmp	r3, #0
 8015c1e:	f43f ae82 	beq.w	8015926 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8015c22:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8015c26:	e793      	b.n	8015b50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8015c28:	200119fc 	.word	0x200119fc

08015c2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8015c2c:	b538      	push	{r3, r4, r5, lr}
 8015c2e:	4c15      	ldr	r4, [pc, #84]	@ (8015c84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8015c30:	7823      	ldrb	r3, [r4, #0]
 8015c32:	f3bf 8f5b 	dmb	ish
 8015c36:	07da      	lsls	r2, r3, #31
 8015c38:	4605      	mov	r5, r0
 8015c3a:	d40b      	bmi.n	8015c54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8015c3c:	4620      	mov	r0, r4
 8015c3e:	f007 fef5 	bl	801da2c <__cxa_guard_acquire>
 8015c42:	b138      	cbz	r0, 8015c54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8015c44:	4620      	mov	r0, r4
 8015c46:	f007 fefd 	bl	801da44 <__cxa_guard_release>
 8015c4a:	4a0f      	ldr	r2, [pc, #60]	@ (8015c88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8015c4c:	490f      	ldr	r1, [pc, #60]	@ (8015c8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8015c4e:	4810      	ldr	r0, [pc, #64]	@ (8015c90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8015c50:	f007 fee5 	bl	801da1e <__aeabi_atexit>
 8015c54:	4c0f      	ldr	r4, [pc, #60]	@ (8015c94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8015c56:	7823      	ldrb	r3, [r4, #0]
 8015c58:	f3bf 8f5b 	dmb	ish
 8015c5c:	07db      	lsls	r3, r3, #31
 8015c5e:	d40b      	bmi.n	8015c78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8015c60:	4620      	mov	r0, r4
 8015c62:	f007 fee3 	bl	801da2c <__cxa_guard_acquire>
 8015c66:	b138      	cbz	r0, 8015c78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8015c68:	4620      	mov	r0, r4
 8015c6a:	f007 feeb 	bl	801da44 <__cxa_guard_release>
 8015c6e:	4a06      	ldr	r2, [pc, #24]	@ (8015c88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8015c70:	4909      	ldr	r1, [pc, #36]	@ (8015c98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8015c72:	480a      	ldr	r0, [pc, #40]	@ (8015c9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8015c74:	f007 fed3 	bl	801da1e <__aeabi_atexit>
 8015c78:	4b05      	ldr	r3, [pc, #20]	@ (8015c90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8015c7a:	616b      	str	r3, [r5, #20]
 8015c7c:	4b07      	ldr	r3, [pc, #28]	@ (8015c9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8015c7e:	61ab      	str	r3, [r5, #24]
 8015c80:	bd38      	pop	{r3, r4, r5, pc}
 8015c82:	bf00      	nop
 8015c84:	20011ad4 	.word	0x20011ad4
 8015c88:	20000000 	.word	0x20000000
 8015c8c:	08012a2b 	.word	0x08012a2b
 8015c90:	200000d0 	.word	0x200000d0
 8015c94:	20011ad8 	.word	0x20011ad8
 8015c98:	08012a29 	.word	0x08012a29
 8015c9c:	200000d4 	.word	0x200000d4

08015ca0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8015ca0:	b538      	push	{r3, r4, r5, lr}
 8015ca2:	4c15      	ldr	r4, [pc, #84]	@ (8015cf8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8015ca4:	7823      	ldrb	r3, [r4, #0]
 8015ca6:	f3bf 8f5b 	dmb	ish
 8015caa:	07da      	lsls	r2, r3, #31
 8015cac:	4605      	mov	r5, r0
 8015cae:	d40b      	bmi.n	8015cc8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8015cb0:	4620      	mov	r0, r4
 8015cb2:	f007 febb 	bl	801da2c <__cxa_guard_acquire>
 8015cb6:	b138      	cbz	r0, 8015cc8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8015cb8:	4620      	mov	r0, r4
 8015cba:	f007 fec3 	bl	801da44 <__cxa_guard_release>
 8015cbe:	4a0f      	ldr	r2, [pc, #60]	@ (8015cfc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8015cc0:	490f      	ldr	r1, [pc, #60]	@ (8015d00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8015cc2:	4810      	ldr	r0, [pc, #64]	@ (8015d04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8015cc4:	f007 feab 	bl	801da1e <__aeabi_atexit>
 8015cc8:	4c0f      	ldr	r4, [pc, #60]	@ (8015d08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8015cca:	7823      	ldrb	r3, [r4, #0]
 8015ccc:	f3bf 8f5b 	dmb	ish
 8015cd0:	07db      	lsls	r3, r3, #31
 8015cd2:	d40b      	bmi.n	8015cec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8015cd4:	4620      	mov	r0, r4
 8015cd6:	f007 fea9 	bl	801da2c <__cxa_guard_acquire>
 8015cda:	b138      	cbz	r0, 8015cec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8015cdc:	4620      	mov	r0, r4
 8015cde:	f007 feb1 	bl	801da44 <__cxa_guard_release>
 8015ce2:	4a06      	ldr	r2, [pc, #24]	@ (8015cfc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8015ce4:	4909      	ldr	r1, [pc, #36]	@ (8015d0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8015ce6:	480a      	ldr	r0, [pc, #40]	@ (8015d10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8015ce8:	f007 fe99 	bl	801da1e <__aeabi_atexit>
 8015cec:	4b05      	ldr	r3, [pc, #20]	@ (8015d04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8015cee:	60eb      	str	r3, [r5, #12]
 8015cf0:	4b07      	ldr	r3, [pc, #28]	@ (8015d10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8015cf2:	612b      	str	r3, [r5, #16]
 8015cf4:	bd38      	pop	{r3, r4, r5, pc}
 8015cf6:	bf00      	nop
 8015cf8:	20011aac 	.word	0x20011aac
 8015cfc:	20000000 	.word	0x20000000
 8015d00:	08012a2f 	.word	0x08012a2f
 8015d04:	200000a8 	.word	0x200000a8
 8015d08:	20011ab0 	.word	0x20011ab0
 8015d0c:	08012a2d 	.word	0x08012a2d
 8015d10:	200000ac 	.word	0x200000ac

08015d14 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8015d14:	b510      	push	{r4, lr}
 8015d16:	4604      	mov	r4, r0
 8015d18:	f7ff ff88 	bl	8015c2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8015d1c:	4620      	mov	r0, r4
 8015d1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015d22:	f7ff bfbd 	b.w	8015ca0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08015d28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8015d28:	b538      	push	{r3, r4, r5, lr}
 8015d2a:	4c15      	ldr	r4, [pc, #84]	@ (8015d80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8015d2c:	7823      	ldrb	r3, [r4, #0]
 8015d2e:	f3bf 8f5b 	dmb	ish
 8015d32:	07da      	lsls	r2, r3, #31
 8015d34:	4605      	mov	r5, r0
 8015d36:	d40b      	bmi.n	8015d50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8015d38:	4620      	mov	r0, r4
 8015d3a:	f007 fe77 	bl	801da2c <__cxa_guard_acquire>
 8015d3e:	b138      	cbz	r0, 8015d50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8015d40:	4620      	mov	r0, r4
 8015d42:	f007 fe7f 	bl	801da44 <__cxa_guard_release>
 8015d46:	4a0f      	ldr	r2, [pc, #60]	@ (8015d84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8015d48:	490f      	ldr	r1, [pc, #60]	@ (8015d88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8015d4a:	4810      	ldr	r0, [pc, #64]	@ (8015d8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8015d4c:	f007 fe67 	bl	801da1e <__aeabi_atexit>
 8015d50:	4c0f      	ldr	r4, [pc, #60]	@ (8015d90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8015d52:	7823      	ldrb	r3, [r4, #0]
 8015d54:	f3bf 8f5b 	dmb	ish
 8015d58:	07db      	lsls	r3, r3, #31
 8015d5a:	d40b      	bmi.n	8015d74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8015d5c:	4620      	mov	r0, r4
 8015d5e:	f007 fe65 	bl	801da2c <__cxa_guard_acquire>
 8015d62:	b138      	cbz	r0, 8015d74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8015d64:	4620      	mov	r0, r4
 8015d66:	f007 fe6d 	bl	801da44 <__cxa_guard_release>
 8015d6a:	4a06      	ldr	r2, [pc, #24]	@ (8015d84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8015d6c:	4909      	ldr	r1, [pc, #36]	@ (8015d94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8015d6e:	480a      	ldr	r0, [pc, #40]	@ (8015d98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8015d70:	f007 fe55 	bl	801da1e <__aeabi_atexit>
 8015d74:	4b05      	ldr	r3, [pc, #20]	@ (8015d8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8015d76:	626b      	str	r3, [r5, #36]	@ 0x24
 8015d78:	4b07      	ldr	r3, [pc, #28]	@ (8015d98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8015d7a:	62ab      	str	r3, [r5, #40]	@ 0x28
 8015d7c:	bd38      	pop	{r3, r4, r5, pc}
 8015d7e:	bf00      	nop
 8015d80:	20011adc 	.word	0x20011adc
 8015d84:	20000000 	.word	0x20000000
 8015d88:	08012a23 	.word	0x08012a23
 8015d8c:	200000d8 	.word	0x200000d8
 8015d90:	20011ae0 	.word	0x20011ae0
 8015d94:	08012a21 	.word	0x08012a21
 8015d98:	200000dc 	.word	0x200000dc

08015d9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8015d9c:	b538      	push	{r3, r4, r5, lr}
 8015d9e:	4c15      	ldr	r4, [pc, #84]	@ (8015df4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8015da0:	7823      	ldrb	r3, [r4, #0]
 8015da2:	f3bf 8f5b 	dmb	ish
 8015da6:	07da      	lsls	r2, r3, #31
 8015da8:	4605      	mov	r5, r0
 8015daa:	d40b      	bmi.n	8015dc4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8015dac:	4620      	mov	r0, r4
 8015dae:	f007 fe3d 	bl	801da2c <__cxa_guard_acquire>
 8015db2:	b138      	cbz	r0, 8015dc4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8015db4:	4620      	mov	r0, r4
 8015db6:	f007 fe45 	bl	801da44 <__cxa_guard_release>
 8015dba:	4a0f      	ldr	r2, [pc, #60]	@ (8015df8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8015dbc:	490f      	ldr	r1, [pc, #60]	@ (8015dfc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8015dbe:	4810      	ldr	r0, [pc, #64]	@ (8015e00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8015dc0:	f007 fe2d 	bl	801da1e <__aeabi_atexit>
 8015dc4:	4c0f      	ldr	r4, [pc, #60]	@ (8015e04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8015dc6:	7823      	ldrb	r3, [r4, #0]
 8015dc8:	f3bf 8f5b 	dmb	ish
 8015dcc:	07db      	lsls	r3, r3, #31
 8015dce:	d40b      	bmi.n	8015de8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8015dd0:	4620      	mov	r0, r4
 8015dd2:	f007 fe2b 	bl	801da2c <__cxa_guard_acquire>
 8015dd6:	b138      	cbz	r0, 8015de8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8015dd8:	4620      	mov	r0, r4
 8015dda:	f007 fe33 	bl	801da44 <__cxa_guard_release>
 8015dde:	4a06      	ldr	r2, [pc, #24]	@ (8015df8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8015de0:	4909      	ldr	r1, [pc, #36]	@ (8015e08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8015de2:	480a      	ldr	r0, [pc, #40]	@ (8015e0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8015de4:	f007 fe1b 	bl	801da1e <__aeabi_atexit>
 8015de8:	4b05      	ldr	r3, [pc, #20]	@ (8015e00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8015dea:	61eb      	str	r3, [r5, #28]
 8015dec:	4b07      	ldr	r3, [pc, #28]	@ (8015e0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8015dee:	622b      	str	r3, [r5, #32]
 8015df0:	bd38      	pop	{r3, r4, r5, pc}
 8015df2:	bf00      	nop
 8015df4:	20011ab4 	.word	0x20011ab4
 8015df8:	20000000 	.word	0x20000000
 8015dfc:	08012a27 	.word	0x08012a27
 8015e00:	200000b0 	.word	0x200000b0
 8015e04:	20011ab8 	.word	0x20011ab8
 8015e08:	08012a25 	.word	0x08012a25
 8015e0c:	200000b4 	.word	0x200000b4

08015e10 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8015e10:	b510      	push	{r4, lr}
 8015e12:	4604      	mov	r4, r0
 8015e14:	f7ff ff88 	bl	8015d28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8015e18:	4620      	mov	r0, r4
 8015e1a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015e1e:	f7ff bfbd 	b.w	8015d9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08015e24 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8015e24:	b538      	push	{r3, r4, r5, lr}
 8015e26:	4c15      	ldr	r4, [pc, #84]	@ (8015e7c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8015e28:	7823      	ldrb	r3, [r4, #0]
 8015e2a:	f3bf 8f5b 	dmb	ish
 8015e2e:	07da      	lsls	r2, r3, #31
 8015e30:	4605      	mov	r5, r0
 8015e32:	d40b      	bmi.n	8015e4c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8015e34:	4620      	mov	r0, r4
 8015e36:	f007 fdf9 	bl	801da2c <__cxa_guard_acquire>
 8015e3a:	b138      	cbz	r0, 8015e4c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8015e3c:	4620      	mov	r0, r4
 8015e3e:	f007 fe01 	bl	801da44 <__cxa_guard_release>
 8015e42:	4a0f      	ldr	r2, [pc, #60]	@ (8015e80 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8015e44:	490f      	ldr	r1, [pc, #60]	@ (8015e84 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8015e46:	4810      	ldr	r0, [pc, #64]	@ (8015e88 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8015e48:	f007 fde9 	bl	801da1e <__aeabi_atexit>
 8015e4c:	4c0f      	ldr	r4, [pc, #60]	@ (8015e8c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8015e4e:	7823      	ldrb	r3, [r4, #0]
 8015e50:	f3bf 8f5b 	dmb	ish
 8015e54:	07db      	lsls	r3, r3, #31
 8015e56:	d40b      	bmi.n	8015e70 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8015e58:	4620      	mov	r0, r4
 8015e5a:	f007 fde7 	bl	801da2c <__cxa_guard_acquire>
 8015e5e:	b138      	cbz	r0, 8015e70 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8015e60:	4620      	mov	r0, r4
 8015e62:	f007 fdef 	bl	801da44 <__cxa_guard_release>
 8015e66:	4a06      	ldr	r2, [pc, #24]	@ (8015e80 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8015e68:	4909      	ldr	r1, [pc, #36]	@ (8015e90 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8015e6a:	480a      	ldr	r0, [pc, #40]	@ (8015e94 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8015e6c:	f007 fdd7 	bl	801da1e <__aeabi_atexit>
 8015e70:	4b05      	ldr	r3, [pc, #20]	@ (8015e88 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8015e72:	636b      	str	r3, [r5, #52]	@ 0x34
 8015e74:	4b07      	ldr	r3, [pc, #28]	@ (8015e94 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8015e76:	63ab      	str	r3, [r5, #56]	@ 0x38
 8015e78:	bd38      	pop	{r3, r4, r5, pc}
 8015e7a:	bf00      	nop
 8015e7c:	20011aec 	.word	0x20011aec
 8015e80:	20000000 	.word	0x20000000
 8015e84:	08012a1b 	.word	0x08012a1b
 8015e88:	200000e8 	.word	0x200000e8
 8015e8c:	20011af0 	.word	0x20011af0
 8015e90:	08012a19 	.word	0x08012a19
 8015e94:	200000ec 	.word	0x200000ec

08015e98 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8015e98:	b538      	push	{r3, r4, r5, lr}
 8015e9a:	4c15      	ldr	r4, [pc, #84]	@ (8015ef0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8015e9c:	7823      	ldrb	r3, [r4, #0]
 8015e9e:	f3bf 8f5b 	dmb	ish
 8015ea2:	07da      	lsls	r2, r3, #31
 8015ea4:	4605      	mov	r5, r0
 8015ea6:	d40b      	bmi.n	8015ec0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8015ea8:	4620      	mov	r0, r4
 8015eaa:	f007 fdbf 	bl	801da2c <__cxa_guard_acquire>
 8015eae:	b138      	cbz	r0, 8015ec0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8015eb0:	4620      	mov	r0, r4
 8015eb2:	f007 fdc7 	bl	801da44 <__cxa_guard_release>
 8015eb6:	4a0f      	ldr	r2, [pc, #60]	@ (8015ef4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8015eb8:	490f      	ldr	r1, [pc, #60]	@ (8015ef8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8015eba:	4810      	ldr	r0, [pc, #64]	@ (8015efc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8015ebc:	f007 fdaf 	bl	801da1e <__aeabi_atexit>
 8015ec0:	4c0f      	ldr	r4, [pc, #60]	@ (8015f00 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8015ec2:	7823      	ldrb	r3, [r4, #0]
 8015ec4:	f3bf 8f5b 	dmb	ish
 8015ec8:	07db      	lsls	r3, r3, #31
 8015eca:	d40b      	bmi.n	8015ee4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8015ecc:	4620      	mov	r0, r4
 8015ece:	f007 fdad 	bl	801da2c <__cxa_guard_acquire>
 8015ed2:	b138      	cbz	r0, 8015ee4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8015ed4:	4620      	mov	r0, r4
 8015ed6:	f007 fdb5 	bl	801da44 <__cxa_guard_release>
 8015eda:	4a06      	ldr	r2, [pc, #24]	@ (8015ef4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8015edc:	4909      	ldr	r1, [pc, #36]	@ (8015f04 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8015ede:	480a      	ldr	r0, [pc, #40]	@ (8015f08 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8015ee0:	f007 fd9d 	bl	801da1e <__aeabi_atexit>
 8015ee4:	4b05      	ldr	r3, [pc, #20]	@ (8015efc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8015ee6:	62eb      	str	r3, [r5, #44]	@ 0x2c
 8015ee8:	4b07      	ldr	r3, [pc, #28]	@ (8015f08 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8015eea:	632b      	str	r3, [r5, #48]	@ 0x30
 8015eec:	bd38      	pop	{r3, r4, r5, pc}
 8015eee:	bf00      	nop
 8015ef0:	20011abc 	.word	0x20011abc
 8015ef4:	20000000 	.word	0x20000000
 8015ef8:	08012a1f 	.word	0x08012a1f
 8015efc:	200000b8 	.word	0x200000b8
 8015f00:	20011ac0 	.word	0x20011ac0
 8015f04:	08012a1d 	.word	0x08012a1d
 8015f08:	200000bc 	.word	0x200000bc

08015f0c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8015f0c:	b510      	push	{r4, lr}
 8015f0e:	4604      	mov	r4, r0
 8015f10:	f7ff ff88 	bl	8015e24 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8015f14:	4620      	mov	r0, r4
 8015f16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015f1a:	f7ff bfbd 	b.w	8015e98 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08015f20 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8015f20:	b538      	push	{r3, r4, r5, lr}
 8015f22:	4c15      	ldr	r4, [pc, #84]	@ (8015f78 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8015f24:	7823      	ldrb	r3, [r4, #0]
 8015f26:	f3bf 8f5b 	dmb	ish
 8015f2a:	07da      	lsls	r2, r3, #31
 8015f2c:	4605      	mov	r5, r0
 8015f2e:	d40b      	bmi.n	8015f48 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8015f30:	4620      	mov	r0, r4
 8015f32:	f007 fd7b 	bl	801da2c <__cxa_guard_acquire>
 8015f36:	b138      	cbz	r0, 8015f48 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8015f38:	4620      	mov	r0, r4
 8015f3a:	f007 fd83 	bl	801da44 <__cxa_guard_release>
 8015f3e:	4a0f      	ldr	r2, [pc, #60]	@ (8015f7c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8015f40:	490f      	ldr	r1, [pc, #60]	@ (8015f80 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8015f42:	4810      	ldr	r0, [pc, #64]	@ (8015f84 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8015f44:	f007 fd6b 	bl	801da1e <__aeabi_atexit>
 8015f48:	4c0f      	ldr	r4, [pc, #60]	@ (8015f88 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8015f4a:	7823      	ldrb	r3, [r4, #0]
 8015f4c:	f3bf 8f5b 	dmb	ish
 8015f50:	07db      	lsls	r3, r3, #31
 8015f52:	d40b      	bmi.n	8015f6c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8015f54:	4620      	mov	r0, r4
 8015f56:	f007 fd69 	bl	801da2c <__cxa_guard_acquire>
 8015f5a:	b138      	cbz	r0, 8015f6c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8015f5c:	4620      	mov	r0, r4
 8015f5e:	f007 fd71 	bl	801da44 <__cxa_guard_release>
 8015f62:	4a06      	ldr	r2, [pc, #24]	@ (8015f7c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8015f64:	4909      	ldr	r1, [pc, #36]	@ (8015f8c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8015f66:	480a      	ldr	r0, [pc, #40]	@ (8015f90 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8015f68:	f007 fd59 	bl	801da1e <__aeabi_atexit>
 8015f6c:	4b05      	ldr	r3, [pc, #20]	@ (8015f84 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8015f6e:	656b      	str	r3, [r5, #84]	@ 0x54
 8015f70:	4b07      	ldr	r3, [pc, #28]	@ (8015f90 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8015f72:	65ab      	str	r3, [r5, #88]	@ 0x58
 8015f74:	bd38      	pop	{r3, r4, r5, pc}
 8015f76:	bf00      	nop
 8015f78:	20011af4 	.word	0x20011af4
 8015f7c:	20000000 	.word	0x20000000
 8015f80:	08012a0b 	.word	0x08012a0b
 8015f84:	200000f0 	.word	0x200000f0
 8015f88:	20011af8 	.word	0x20011af8
 8015f8c:	08012a09 	.word	0x08012a09
 8015f90:	200000f4 	.word	0x200000f4

08015f94 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8015f94:	b538      	push	{r3, r4, r5, lr}
 8015f96:	4c15      	ldr	r4, [pc, #84]	@ (8015fec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8015f98:	7823      	ldrb	r3, [r4, #0]
 8015f9a:	f3bf 8f5b 	dmb	ish
 8015f9e:	07da      	lsls	r2, r3, #31
 8015fa0:	4605      	mov	r5, r0
 8015fa2:	d40b      	bmi.n	8015fbc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8015fa4:	4620      	mov	r0, r4
 8015fa6:	f007 fd41 	bl	801da2c <__cxa_guard_acquire>
 8015faa:	b138      	cbz	r0, 8015fbc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8015fac:	4620      	mov	r0, r4
 8015fae:	f007 fd49 	bl	801da44 <__cxa_guard_release>
 8015fb2:	4a0f      	ldr	r2, [pc, #60]	@ (8015ff0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8015fb4:	490f      	ldr	r1, [pc, #60]	@ (8015ff4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8015fb6:	4810      	ldr	r0, [pc, #64]	@ (8015ff8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8015fb8:	f007 fd31 	bl	801da1e <__aeabi_atexit>
 8015fbc:	4c0f      	ldr	r4, [pc, #60]	@ (8015ffc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8015fbe:	7823      	ldrb	r3, [r4, #0]
 8015fc0:	f3bf 8f5b 	dmb	ish
 8015fc4:	07db      	lsls	r3, r3, #31
 8015fc6:	d40b      	bmi.n	8015fe0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8015fc8:	4620      	mov	r0, r4
 8015fca:	f007 fd2f 	bl	801da2c <__cxa_guard_acquire>
 8015fce:	b138      	cbz	r0, 8015fe0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8015fd0:	4620      	mov	r0, r4
 8015fd2:	f007 fd37 	bl	801da44 <__cxa_guard_release>
 8015fd6:	4a06      	ldr	r2, [pc, #24]	@ (8015ff0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8015fd8:	4909      	ldr	r1, [pc, #36]	@ (8016000 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8015fda:	480a      	ldr	r0, [pc, #40]	@ (8016004 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8015fdc:	f007 fd1f 	bl	801da1e <__aeabi_atexit>
 8015fe0:	4b05      	ldr	r3, [pc, #20]	@ (8015ff8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8015fe2:	64eb      	str	r3, [r5, #76]	@ 0x4c
 8015fe4:	4b07      	ldr	r3, [pc, #28]	@ (8016004 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8015fe6:	652b      	str	r3, [r5, #80]	@ 0x50
 8015fe8:	bd38      	pop	{r3, r4, r5, pc}
 8015fea:	bf00      	nop
 8015fec:	20011afc 	.word	0x20011afc
 8015ff0:	20000000 	.word	0x20000000
 8015ff4:	08012a0f 	.word	0x08012a0f
 8015ff8:	200000f8 	.word	0x200000f8
 8015ffc:	20011b00 	.word	0x20011b00
 8016000:	08012a0d 	.word	0x08012a0d
 8016004:	200000fc 	.word	0x200000fc

08016008 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8016008:	b538      	push	{r3, r4, r5, lr}
 801600a:	4c15      	ldr	r4, [pc, #84]	@ (8016060 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801600c:	7823      	ldrb	r3, [r4, #0]
 801600e:	f3bf 8f5b 	dmb	ish
 8016012:	07da      	lsls	r2, r3, #31
 8016014:	4605      	mov	r5, r0
 8016016:	d40b      	bmi.n	8016030 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8016018:	4620      	mov	r0, r4
 801601a:	f007 fd07 	bl	801da2c <__cxa_guard_acquire>
 801601e:	b138      	cbz	r0, 8016030 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8016020:	4620      	mov	r0, r4
 8016022:	f007 fd0f 	bl	801da44 <__cxa_guard_release>
 8016026:	4a0f      	ldr	r2, [pc, #60]	@ (8016064 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8016028:	490f      	ldr	r1, [pc, #60]	@ (8016068 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801602a:	4810      	ldr	r0, [pc, #64]	@ (801606c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801602c:	f007 fcf7 	bl	801da1e <__aeabi_atexit>
 8016030:	4c0f      	ldr	r4, [pc, #60]	@ (8016070 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8016032:	7823      	ldrb	r3, [r4, #0]
 8016034:	f3bf 8f5b 	dmb	ish
 8016038:	07db      	lsls	r3, r3, #31
 801603a:	d40b      	bmi.n	8016054 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801603c:	4620      	mov	r0, r4
 801603e:	f007 fcf5 	bl	801da2c <__cxa_guard_acquire>
 8016042:	b138      	cbz	r0, 8016054 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8016044:	4620      	mov	r0, r4
 8016046:	f007 fcfd 	bl	801da44 <__cxa_guard_release>
 801604a:	4a06      	ldr	r2, [pc, #24]	@ (8016064 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801604c:	4909      	ldr	r1, [pc, #36]	@ (8016074 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801604e:	480a      	ldr	r0, [pc, #40]	@ (8016078 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8016050:	f007 fce5 	bl	801da1e <__aeabi_atexit>
 8016054:	4b05      	ldr	r3, [pc, #20]	@ (801606c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8016056:	646b      	str	r3, [r5, #68]	@ 0x44
 8016058:	4b07      	ldr	r3, [pc, #28]	@ (8016078 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801605a:	64ab      	str	r3, [r5, #72]	@ 0x48
 801605c:	bd38      	pop	{r3, r4, r5, pc}
 801605e:	bf00      	nop
 8016060:	20011ac4 	.word	0x20011ac4
 8016064:	20000000 	.word	0x20000000
 8016068:	08012a13 	.word	0x08012a13
 801606c:	200000c0 	.word	0x200000c0
 8016070:	20011ac8 	.word	0x20011ac8
 8016074:	08012a11 	.word	0x08012a11
 8016078:	200000c4 	.word	0x200000c4

0801607c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801607c:	b538      	push	{r3, r4, r5, lr}
 801607e:	4c15      	ldr	r4, [pc, #84]	@ (80160d4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8016080:	7823      	ldrb	r3, [r4, #0]
 8016082:	f3bf 8f5b 	dmb	ish
 8016086:	07da      	lsls	r2, r3, #31
 8016088:	4605      	mov	r5, r0
 801608a:	d40b      	bmi.n	80160a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801608c:	4620      	mov	r0, r4
 801608e:	f007 fccd 	bl	801da2c <__cxa_guard_acquire>
 8016092:	b138      	cbz	r0, 80160a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8016094:	4620      	mov	r0, r4
 8016096:	f007 fcd5 	bl	801da44 <__cxa_guard_release>
 801609a:	4a0f      	ldr	r2, [pc, #60]	@ (80160d8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801609c:	490f      	ldr	r1, [pc, #60]	@ (80160dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801609e:	4810      	ldr	r0, [pc, #64]	@ (80160e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80160a0:	f007 fcbd 	bl	801da1e <__aeabi_atexit>
 80160a4:	4c0f      	ldr	r4, [pc, #60]	@ (80160e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80160a6:	7823      	ldrb	r3, [r4, #0]
 80160a8:	f3bf 8f5b 	dmb	ish
 80160ac:	07db      	lsls	r3, r3, #31
 80160ae:	d40b      	bmi.n	80160c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80160b0:	4620      	mov	r0, r4
 80160b2:	f007 fcbb 	bl	801da2c <__cxa_guard_acquire>
 80160b6:	b138      	cbz	r0, 80160c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80160b8:	4620      	mov	r0, r4
 80160ba:	f007 fcc3 	bl	801da44 <__cxa_guard_release>
 80160be:	4a06      	ldr	r2, [pc, #24]	@ (80160d8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80160c0:	4909      	ldr	r1, [pc, #36]	@ (80160e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80160c2:	480a      	ldr	r0, [pc, #40]	@ (80160ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80160c4:	f007 fcab 	bl	801da1e <__aeabi_atexit>
 80160c8:	4b05      	ldr	r3, [pc, #20]	@ (80160e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80160ca:	63eb      	str	r3, [r5, #60]	@ 0x3c
 80160cc:	4b07      	ldr	r3, [pc, #28]	@ (80160ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80160ce:	642b      	str	r3, [r5, #64]	@ 0x40
 80160d0:	bd38      	pop	{r3, r4, r5, pc}
 80160d2:	bf00      	nop
 80160d4:	20011ae4 	.word	0x20011ae4
 80160d8:	20000000 	.word	0x20000000
 80160dc:	08012a17 	.word	0x08012a17
 80160e0:	200000e0 	.word	0x200000e0
 80160e4:	20011ae8 	.word	0x20011ae8
 80160e8:	08012a15 	.word	0x08012a15
 80160ec:	200000e4 	.word	0x200000e4

080160f0 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 80160f0:	b510      	push	{r4, lr}
 80160f2:	4604      	mov	r4, r0
 80160f4:	f7ff ff14 	bl	8015f20 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 80160f8:	4620      	mov	r0, r4
 80160fa:	f7ff ff85 	bl	8016008 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 80160fe:	4620      	mov	r0, r4
 8016100:	f7ff ff48 	bl	8015f94 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8016104:	4620      	mov	r0, r4
 8016106:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801610a:	f7ff bfb7 	b.w	801607c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08016110 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8016110:	b538      	push	{r3, r4, r5, lr}
 8016112:	4c15      	ldr	r4, [pc, #84]	@ (8016168 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8016114:	7823      	ldrb	r3, [r4, #0]
 8016116:	f3bf 8f5b 	dmb	ish
 801611a:	07da      	lsls	r2, r3, #31
 801611c:	4605      	mov	r5, r0
 801611e:	d40b      	bmi.n	8016138 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8016120:	4620      	mov	r0, r4
 8016122:	f007 fc83 	bl	801da2c <__cxa_guard_acquire>
 8016126:	b138      	cbz	r0, 8016138 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8016128:	4620      	mov	r0, r4
 801612a:	f007 fc8b 	bl	801da44 <__cxa_guard_release>
 801612e:	4a0f      	ldr	r2, [pc, #60]	@ (801616c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8016130:	490f      	ldr	r1, [pc, #60]	@ (8016170 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8016132:	4810      	ldr	r0, [pc, #64]	@ (8016174 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8016134:	f007 fc73 	bl	801da1e <__aeabi_atexit>
 8016138:	4c0f      	ldr	r4, [pc, #60]	@ (8016178 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801613a:	7823      	ldrb	r3, [r4, #0]
 801613c:	f3bf 8f5b 	dmb	ish
 8016140:	07db      	lsls	r3, r3, #31
 8016142:	d40b      	bmi.n	801615c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8016144:	4620      	mov	r0, r4
 8016146:	f007 fc71 	bl	801da2c <__cxa_guard_acquire>
 801614a:	b138      	cbz	r0, 801615c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801614c:	4620      	mov	r0, r4
 801614e:	f007 fc79 	bl	801da44 <__cxa_guard_release>
 8016152:	4a06      	ldr	r2, [pc, #24]	@ (801616c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8016154:	4909      	ldr	r1, [pc, #36]	@ (801617c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8016156:	480a      	ldr	r0, [pc, #40]	@ (8016180 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8016158:	f007 fc61 	bl	801da1e <__aeabi_atexit>
 801615c:	4b05      	ldr	r3, [pc, #20]	@ (8016174 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801615e:	666b      	str	r3, [r5, #100]	@ 0x64
 8016160:	4b07      	ldr	r3, [pc, #28]	@ (8016180 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8016162:	66ab      	str	r3, [r5, #104]	@ 0x68
 8016164:	bd38      	pop	{r3, r4, r5, pc}
 8016166:	bf00      	nop
 8016168:	20011acc 	.word	0x20011acc
 801616c:	20000000 	.word	0x20000000
 8016170:	08012a03 	.word	0x08012a03
 8016174:	200000c8 	.word	0x200000c8
 8016178:	20011ad0 	.word	0x20011ad0
 801617c:	08012a01 	.word	0x08012a01
 8016180:	200000cc 	.word	0x200000cc

08016184 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8016184:	b538      	push	{r3, r4, r5, lr}
 8016186:	4c15      	ldr	r4, [pc, #84]	@ (80161dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8016188:	7823      	ldrb	r3, [r4, #0]
 801618a:	f3bf 8f5b 	dmb	ish
 801618e:	07da      	lsls	r2, r3, #31
 8016190:	4605      	mov	r5, r0
 8016192:	d40b      	bmi.n	80161ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8016194:	4620      	mov	r0, r4
 8016196:	f007 fc49 	bl	801da2c <__cxa_guard_acquire>
 801619a:	b138      	cbz	r0, 80161ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801619c:	4620      	mov	r0, r4
 801619e:	f007 fc51 	bl	801da44 <__cxa_guard_release>
 80161a2:	4a0f      	ldr	r2, [pc, #60]	@ (80161e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80161a4:	490f      	ldr	r1, [pc, #60]	@ (80161e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80161a6:	4810      	ldr	r0, [pc, #64]	@ (80161e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80161a8:	f007 fc39 	bl	801da1e <__aeabi_atexit>
 80161ac:	4c0f      	ldr	r4, [pc, #60]	@ (80161ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80161ae:	7823      	ldrb	r3, [r4, #0]
 80161b0:	f3bf 8f5b 	dmb	ish
 80161b4:	07db      	lsls	r3, r3, #31
 80161b6:	d40b      	bmi.n	80161d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80161b8:	4620      	mov	r0, r4
 80161ba:	f007 fc37 	bl	801da2c <__cxa_guard_acquire>
 80161be:	b138      	cbz	r0, 80161d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80161c0:	4620      	mov	r0, r4
 80161c2:	f007 fc3f 	bl	801da44 <__cxa_guard_release>
 80161c6:	4a06      	ldr	r2, [pc, #24]	@ (80161e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80161c8:	4909      	ldr	r1, [pc, #36]	@ (80161f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80161ca:	480a      	ldr	r0, [pc, #40]	@ (80161f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80161cc:	f007 fc27 	bl	801da1e <__aeabi_atexit>
 80161d0:	4b05      	ldr	r3, [pc, #20]	@ (80161e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80161d2:	65eb      	str	r3, [r5, #92]	@ 0x5c
 80161d4:	4b07      	ldr	r3, [pc, #28]	@ (80161f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80161d6:	662b      	str	r3, [r5, #96]	@ 0x60
 80161d8:	bd38      	pop	{r3, r4, r5, pc}
 80161da:	bf00      	nop
 80161dc:	20011aa4 	.word	0x20011aa4
 80161e0:	20000000 	.word	0x20000000
 80161e4:	08012a07 	.word	0x08012a07
 80161e8:	200000a0 	.word	0x200000a0
 80161ec:	20011aa8 	.word	0x20011aa8
 80161f0:	08012a05 	.word	0x08012a05
 80161f4:	200000a4 	.word	0x200000a4

080161f8 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 80161f8:	b510      	push	{r4, lr}
 80161fa:	4604      	mov	r4, r0
 80161fc:	f7ff ff88 	bl	8016110 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8016200:	4620      	mov	r0, r4
 8016202:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016206:	f7ff bfbd 	b.w	8016184 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801620c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801620c:	b538      	push	{r3, r4, r5, lr}
 801620e:	4c15      	ldr	r4, [pc, #84]	@ (8016264 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8016210:	7823      	ldrb	r3, [r4, #0]
 8016212:	f3bf 8f5b 	dmb	ish
 8016216:	07da      	lsls	r2, r3, #31
 8016218:	4605      	mov	r5, r0
 801621a:	d40b      	bmi.n	8016234 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801621c:	4620      	mov	r0, r4
 801621e:	f007 fc05 	bl	801da2c <__cxa_guard_acquire>
 8016222:	b138      	cbz	r0, 8016234 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8016224:	4620      	mov	r0, r4
 8016226:	f007 fc0d 	bl	801da44 <__cxa_guard_release>
 801622a:	4a0f      	ldr	r2, [pc, #60]	@ (8016268 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801622c:	490f      	ldr	r1, [pc, #60]	@ (801626c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801622e:	4810      	ldr	r0, [pc, #64]	@ (8016270 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8016230:	f007 fbf5 	bl	801da1e <__aeabi_atexit>
 8016234:	4c0f      	ldr	r4, [pc, #60]	@ (8016274 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8016236:	7823      	ldrb	r3, [r4, #0]
 8016238:	f3bf 8f5b 	dmb	ish
 801623c:	07db      	lsls	r3, r3, #31
 801623e:	d40b      	bmi.n	8016258 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8016240:	4620      	mov	r0, r4
 8016242:	f007 fbf3 	bl	801da2c <__cxa_guard_acquire>
 8016246:	b138      	cbz	r0, 8016258 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8016248:	4620      	mov	r0, r4
 801624a:	f007 fbfb 	bl	801da44 <__cxa_guard_release>
 801624e:	4a06      	ldr	r2, [pc, #24]	@ (8016268 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8016250:	4909      	ldr	r1, [pc, #36]	@ (8016278 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8016252:	480a      	ldr	r0, [pc, #40]	@ (801627c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8016254:	f007 fbe3 	bl	801da1e <__aeabi_atexit>
 8016258:	4b05      	ldr	r3, [pc, #20]	@ (8016270 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801625a:	676b      	str	r3, [r5, #116]	@ 0x74
 801625c:	4b07      	ldr	r3, [pc, #28]	@ (801627c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801625e:	67ab      	str	r3, [r5, #120]	@ 0x78
 8016260:	bd38      	pop	{r3, r4, r5, pc}
 8016262:	bf00      	nop
 8016264:	20011a9c 	.word	0x20011a9c
 8016268:	20000000 	.word	0x20000000
 801626c:	080129fb 	.word	0x080129fb
 8016270:	20000098 	.word	0x20000098
 8016274:	20011aa0 	.word	0x20011aa0
 8016278:	080129f9 	.word	0x080129f9
 801627c:	2000009c 	.word	0x2000009c

08016280 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8016280:	b538      	push	{r3, r4, r5, lr}
 8016282:	4c15      	ldr	r4, [pc, #84]	@ (80162d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8016284:	7823      	ldrb	r3, [r4, #0]
 8016286:	f3bf 8f5b 	dmb	ish
 801628a:	07da      	lsls	r2, r3, #31
 801628c:	4605      	mov	r5, r0
 801628e:	d40b      	bmi.n	80162a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8016290:	4620      	mov	r0, r4
 8016292:	f007 fbcb 	bl	801da2c <__cxa_guard_acquire>
 8016296:	b138      	cbz	r0, 80162a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8016298:	4620      	mov	r0, r4
 801629a:	f007 fbd3 	bl	801da44 <__cxa_guard_release>
 801629e:	4a0f      	ldr	r2, [pc, #60]	@ (80162dc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80162a0:	490f      	ldr	r1, [pc, #60]	@ (80162e0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80162a2:	4810      	ldr	r0, [pc, #64]	@ (80162e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80162a4:	f007 fbbb 	bl	801da1e <__aeabi_atexit>
 80162a8:	4c0f      	ldr	r4, [pc, #60]	@ (80162e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80162aa:	7823      	ldrb	r3, [r4, #0]
 80162ac:	f3bf 8f5b 	dmb	ish
 80162b0:	07db      	lsls	r3, r3, #31
 80162b2:	d40b      	bmi.n	80162cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80162b4:	4620      	mov	r0, r4
 80162b6:	f007 fbb9 	bl	801da2c <__cxa_guard_acquire>
 80162ba:	b138      	cbz	r0, 80162cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80162bc:	4620      	mov	r0, r4
 80162be:	f007 fbc1 	bl	801da44 <__cxa_guard_release>
 80162c2:	4a06      	ldr	r2, [pc, #24]	@ (80162dc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80162c4:	4909      	ldr	r1, [pc, #36]	@ (80162ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80162c6:	480a      	ldr	r0, [pc, #40]	@ (80162f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80162c8:	f007 fba9 	bl	801da1e <__aeabi_atexit>
 80162cc:	4b05      	ldr	r3, [pc, #20]	@ (80162e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80162ce:	66eb      	str	r3, [r5, #108]	@ 0x6c
 80162d0:	4b07      	ldr	r3, [pc, #28]	@ (80162f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80162d2:	672b      	str	r3, [r5, #112]	@ 0x70
 80162d4:	bd38      	pop	{r3, r4, r5, pc}
 80162d6:	bf00      	nop
 80162d8:	20011a94 	.word	0x20011a94
 80162dc:	20000000 	.word	0x20000000
 80162e0:	080129ff 	.word	0x080129ff
 80162e4:	20000090 	.word	0x20000090
 80162e8:	20011a98 	.word	0x20011a98
 80162ec:	080129fd 	.word	0x080129fd
 80162f0:	20000094 	.word	0x20000094

080162f4 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 80162f4:	b510      	push	{r4, lr}
 80162f6:	4604      	mov	r4, r0
 80162f8:	f7ff ff88 	bl	801620c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 80162fc:	4620      	mov	r0, r4
 80162fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016302:	f7ff bfbd 	b.w	8016280 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08016306 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8016306:	b510      	push	{r4, lr}
 8016308:	4604      	mov	r4, r0
 801630a:	f7ff fff3 	bl	80162f4 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801630e:	4620      	mov	r0, r4
 8016310:	f7ff ff72 	bl	80161f8 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8016314:	4620      	mov	r0, r4
 8016316:	f7ff fdf9 	bl	8015f0c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801631a:	4620      	mov	r0, r4
 801631c:	f7ff fcfa 	bl	8015d14 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8016320:	4620      	mov	r0, r4
 8016322:	f7ff fd75 	bl	8015e10 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8016326:	4620      	mov	r0, r4
 8016328:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801632c:	f7ff bee0 	b.w	80160f0 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08016330 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8016330:	b538      	push	{r3, r4, r5, lr}
 8016332:	4c0b      	ldr	r4, [pc, #44]	@ (8016360 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 8016334:	7823      	ldrb	r3, [r4, #0]
 8016336:	f3bf 8f5b 	dmb	ish
 801633a:	07db      	lsls	r3, r3, #31
 801633c:	4605      	mov	r5, r0
 801633e:	d40b      	bmi.n	8016358 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8016340:	4620      	mov	r0, r4
 8016342:	f007 fb73 	bl	801da2c <__cxa_guard_acquire>
 8016346:	b138      	cbz	r0, 8016358 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8016348:	4620      	mov	r0, r4
 801634a:	f007 fb7b 	bl	801da44 <__cxa_guard_release>
 801634e:	4a05      	ldr	r2, [pc, #20]	@ (8016364 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8016350:	4905      	ldr	r1, [pc, #20]	@ (8016368 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 8016352:	4806      	ldr	r0, [pc, #24]	@ (801636c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8016354:	f007 fb63 	bl	801da1e <__aeabi_atexit>
 8016358:	4b04      	ldr	r3, [pc, #16]	@ (801636c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801635a:	67eb      	str	r3, [r5, #124]	@ 0x7c
 801635c:	bd38      	pop	{r3, r4, r5, pc}
 801635e:	bf00      	nop
 8016360:	20011a88 	.word	0x20011a88
 8016364:	20000000 	.word	0x20000000
 8016368:	080129f7 	.word	0x080129f7
 801636c:	20000088 	.word	0x20000088

08016370 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8016370:	b538      	push	{r3, r4, r5, lr}
 8016372:	4c0b      	ldr	r4, [pc, #44]	@ (80163a0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 8016374:	7823      	ldrb	r3, [r4, #0]
 8016376:	f3bf 8f5b 	dmb	ish
 801637a:	07db      	lsls	r3, r3, #31
 801637c:	4605      	mov	r5, r0
 801637e:	d40b      	bmi.n	8016398 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8016380:	4620      	mov	r0, r4
 8016382:	f007 fb53 	bl	801da2c <__cxa_guard_acquire>
 8016386:	b138      	cbz	r0, 8016398 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8016388:	4620      	mov	r0, r4
 801638a:	f007 fb5b 	bl	801da44 <__cxa_guard_release>
 801638e:	4a05      	ldr	r2, [pc, #20]	@ (80163a4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 8016390:	4905      	ldr	r1, [pc, #20]	@ (80163a8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 8016392:	4806      	ldr	r0, [pc, #24]	@ (80163ac <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8016394:	f007 fb43 	bl	801da1e <__aeabi_atexit>
 8016398:	4b04      	ldr	r3, [pc, #16]	@ (80163ac <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801639a:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 801639e:	bd38      	pop	{r3, r4, r5, pc}
 80163a0:	20011a8c 	.word	0x20011a8c
 80163a4:	20000000 	.word	0x20000000
 80163a8:	080129f5 	.word	0x080129f5
 80163ac:	2000008c 	.word	0x2000008c

080163b0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 80163b0:	b570      	push	{r4, r5, r6, lr}
 80163b2:	4d0d      	ldr	r5, [pc, #52]	@ (80163e8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 80163b4:	4c0d      	ldr	r4, [pc, #52]	@ (80163ec <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 80163b6:	782b      	ldrb	r3, [r5, #0]
 80163b8:	f3bf 8f5b 	dmb	ish
 80163bc:	f013 0f01 	tst.w	r3, #1
 80163c0:	4606      	mov	r6, r0
 80163c2:	d10d      	bne.n	80163e0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80163c4:	4628      	mov	r0, r5
 80163c6:	f007 fb31 	bl	801da2c <__cxa_guard_acquire>
 80163ca:	b148      	cbz	r0, 80163e0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80163cc:	4b08      	ldr	r3, [pc, #32]	@ (80163f0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 80163ce:	6023      	str	r3, [r4, #0]
 80163d0:	4628      	mov	r0, r5
 80163d2:	f007 fb37 	bl	801da44 <__cxa_guard_release>
 80163d6:	4a07      	ldr	r2, [pc, #28]	@ (80163f4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 80163d8:	4907      	ldr	r1, [pc, #28]	@ (80163f8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 80163da:	4620      	mov	r0, r4
 80163dc:	f007 fb1f 	bl	801da1e <__aeabi_atexit>
 80163e0:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 80163e4:	bd70      	pop	{r4, r5, r6, pc}
 80163e6:	bf00      	nop
 80163e8:	20011a90 	.word	0x20011a90
 80163ec:	20011b04 	.word	0x20011b04
 80163f0:	0802076c 	.word	0x0802076c
 80163f4:	20000000 	.word	0x20000000
 80163f8:	080129f3 	.word	0x080129f3

080163fc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 80163fc:	b510      	push	{r4, lr}
 80163fe:	4604      	mov	r4, r0
 8016400:	f7ff ff96 	bl	8016330 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 8016404:	4620      	mov	r0, r4
 8016406:	f7ff ffb3 	bl	8016370 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801640a:	4620      	mov	r0, r4
 801640c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016410:	f7ff bfce 	b.w	80163b0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

08016414 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8016414:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016418:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 801641c:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 8016420:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 8016424:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 8016428:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 801642c:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 8016430:	8808      	ldrh	r0, [r1, #0]
 8016432:	fb05 4c0e 	mla	ip, r5, lr, r4
 8016436:	2d00      	cmp	r5, #0
 8016438:	eb02 0a0c 	add.w	sl, r2, ip
 801643c:	f2c0 80b0 	blt.w	80165a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8016440:	45ab      	cmp	fp, r5
 8016442:	f340 80ad 	ble.w	80165a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8016446:	2c00      	cmp	r4, #0
 8016448:	f2c0 80a8 	blt.w	801659c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801644c:	45a6      	cmp	lr, r4
 801644e:	f340 80a5 	ble.w	801659c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8016452:	f812 200c 	ldrb.w	r2, [r2, ip]
 8016456:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801645a:	1c62      	adds	r2, r4, #1
 801645c:	f100 80a3 	bmi.w	80165a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8016460:	4596      	cmp	lr, r2
 8016462:	f340 80a0 	ble.w	80165a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8016466:	f1b9 0f00 	cmp.w	r9, #0
 801646a:	f000 809c 	beq.w	80165a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801646e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8016472:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8016476:	3501      	adds	r5, #1
 8016478:	f100 8099 	bmi.w	80165ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801647c:	45ab      	cmp	fp, r5
 801647e:	f340 8096 	ble.w	80165ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8016482:	2f00      	cmp	r7, #0
 8016484:	f000 8093 	beq.w	80165ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8016488:	2c00      	cmp	r4, #0
 801648a:	f2c0 808e 	blt.w	80165aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801648e:	45a6      	cmp	lr, r4
 8016490:	f340 808b 	ble.w	80165aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8016494:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8016498:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801649c:	3401      	adds	r4, #1
 801649e:	f100 8089 	bmi.w	80165b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80164a2:	45a6      	cmp	lr, r4
 80164a4:	f340 8086 	ble.w	80165b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80164a8:	f1b9 0f00 	cmp.w	r9, #0
 80164ac:	f000 8082 	beq.w	80165b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80164b0:	44d6      	add	lr, sl
 80164b2:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80164b6:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80164ba:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80164be:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 80164c2:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 80164c6:	fb19 fe07 	smulbb	lr, r9, r7
 80164ca:	ea44 0808 	orr.w	r8, r4, r8
 80164ce:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80164d2:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80164d6:	f1c7 0210 	rsb	r2, r7, #16
 80164da:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 80164de:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 80164e2:	ea44 0c0c 	orr.w	ip, r4, ip
 80164e6:	eba2 0209 	sub.w	r2, r2, r9
 80164ea:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80164ee:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80164f2:	fb04 f40c 	mul.w	r4, r4, ip
 80164f6:	fb02 4808 	mla	r8, r2, r8, r4
 80164fa:	041a      	lsls	r2, r3, #16
 80164fc:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8016500:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8016504:	4313      	orrs	r3, r2
 8016506:	042a      	lsls	r2, r5, #16
 8016508:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801650c:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8016510:	fb0e 8303 	mla	r3, lr, r3, r8
 8016514:	432a      	orrs	r2, r5
 8016516:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801651a:	fb07 3202 	mla	r2, r7, r2, r3
 801651e:	0d53      	lsrs	r3, r2, #21
 8016520:	0952      	lsrs	r2, r2, #5
 8016522:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8016526:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801652a:	431a      	orrs	r2, r3
 801652c:	b293      	uxth	r3, r2
 801652e:	b2b4      	uxth	r4, r6
 8016530:	1202      	asrs	r2, r0, #8
 8016532:	43f6      	mvns	r6, r6
 8016534:	b2f6      	uxtb	r6, r6
 8016536:	121d      	asrs	r5, r3, #8
 8016538:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801653c:	fb12 f206 	smulbb	r2, r2, r6
 8016540:	10c7      	asrs	r7, r0, #3
 8016542:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8016546:	00c0      	lsls	r0, r0, #3
 8016548:	fb05 2504 	mla	r5, r5, r4, r2
 801654c:	b2c0      	uxtb	r0, r0
 801654e:	10da      	asrs	r2, r3, #3
 8016550:	00db      	lsls	r3, r3, #3
 8016552:	b2db      	uxtb	r3, r3
 8016554:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8016558:	fb10 f006 	smulbb	r0, r0, r6
 801655c:	b2ad      	uxth	r5, r5
 801655e:	fb03 0004 	mla	r0, r3, r4, r0
 8016562:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8016566:	fb17 f706 	smulbb	r7, r7, r6
 801656a:	b280      	uxth	r0, r0
 801656c:	1c6b      	adds	r3, r5, #1
 801656e:	fb02 7204 	mla	r2, r2, r4, r7
 8016572:	b292      	uxth	r2, r2
 8016574:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8016578:	1c43      	adds	r3, r0, #1
 801657a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801657e:	1c50      	adds	r0, r2, #1
 8016580:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8016584:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8016588:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801658c:	0952      	lsrs	r2, r2, #5
 801658e:	432b      	orrs	r3, r5
 8016590:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8016594:	4313      	orrs	r3, r2
 8016596:	800b      	strh	r3, [r1, #0]
 8016598:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801659c:	4680      	mov	r8, r0
 801659e:	e75c      	b.n	801645a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 80165a0:	4684      	mov	ip, r0
 80165a2:	4680      	mov	r8, r0
 80165a4:	e767      	b.n	8016476 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80165a6:	4684      	mov	ip, r0
 80165a8:	e765      	b.n	8016476 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80165aa:	4605      	mov	r5, r0
 80165ac:	e776      	b.n	801649c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 80165ae:	4603      	mov	r3, r0
 80165b0:	4605      	mov	r5, r0
 80165b2:	e782      	b.n	80164ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80165b4:	4603      	mov	r3, r0
 80165b6:	e780      	b.n	80164ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

080165b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80165b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80165bc:	b099      	sub	sp, #100	@ 0x64
 80165be:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 80165c2:	9215      	str	r2, [sp, #84]	@ 0x54
 80165c4:	9309      	str	r3, [sp, #36]	@ 0x24
 80165c6:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 80165c8:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 80165cc:	930d      	str	r3, [sp, #52]	@ 0x34
 80165ce:	910c      	str	r1, [sp, #48]	@ 0x30
 80165d0:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 80165d4:	9016      	str	r0, [sp, #88]	@ 0x58
 80165d6:	6850      	ldr	r0, [r2, #4]
 80165d8:	6812      	ldr	r2, [r2, #0]
 80165da:	fb00 1303 	mla	r3, r0, r3, r1
 80165de:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 80165e2:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80165e4:	681b      	ldr	r3, [r3, #0]
 80165e6:	930b      	str	r3, [sp, #44]	@ 0x2c
 80165e8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80165ea:	685e      	ldr	r6, [r3, #4]
 80165ec:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80165ee:	43db      	mvns	r3, r3
 80165f0:	b2db      	uxtb	r3, r3
 80165f2:	3604      	adds	r6, #4
 80165f4:	930a      	str	r3, [sp, #40]	@ 0x28
 80165f6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80165f8:	2b00      	cmp	r3, #0
 80165fa:	dc03      	bgt.n	8016604 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80165fc:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80165fe:	2b00      	cmp	r3, #0
 8016600:	f340 8225 	ble.w	8016a4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8016604:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8016606:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801660a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801660e:	1e48      	subs	r0, r1, #1
 8016610:	1e57      	subs	r7, r2, #1
 8016612:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016614:	2b00      	cmp	r3, #0
 8016616:	f340 80e3 	ble.w	80167e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801661a:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801661e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8016622:	d406      	bmi.n	8016632 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8016624:	4584      	cmp	ip, r0
 8016626:	da04      	bge.n	8016632 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8016628:	2b00      	cmp	r3, #0
 801662a:	db02      	blt.n	8016632 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801662c:	42bb      	cmp	r3, r7
 801662e:	f2c0 80d8 	blt.w	80167e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8016632:	f11c 0c01 	adds.w	ip, ip, #1
 8016636:	f100 80c9 	bmi.w	80167cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801663a:	4561      	cmp	r1, ip
 801663c:	f2c0 80c6 	blt.w	80167cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8016640:	3301      	adds	r3, #1
 8016642:	f100 80c3 	bmi.w	80167cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8016646:	429a      	cmp	r2, r3
 8016648:	f2c0 80c0 	blt.w	80167cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801664c:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8016650:	4647      	mov	r7, r8
 8016652:	f1bb 0f00 	cmp.w	fp, #0
 8016656:	f340 80e3 	ble.w	8016820 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801665a:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 801665c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801665e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8016662:	689b      	ldr	r3, [r3, #8]
 8016664:	ea5f 422a 	movs.w	r2, sl, asr #16
 8016668:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801666c:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8016670:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8016674:	f100 8121 	bmi.w	80168ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8016678:	f103 39ff 	add.w	r9, r3, #4294967295
 801667c:	454a      	cmp	r2, r9
 801667e:	f280 811c 	bge.w	80168ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8016682:	f1bc 0f00 	cmp.w	ip, #0
 8016686:	f2c0 8118 	blt.w	80168ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801668a:	f10e 39ff 	add.w	r9, lr, #4294967295
 801668e:	45cc      	cmp	ip, r9
 8016690:	f280 8113 	bge.w	80168ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8016694:	b21b      	sxth	r3, r3
 8016696:	fb0c 2203 	mla	r2, ip, r3, r2
 801669a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801669c:	eb04 0902 	add.w	r9, r4, r2
 80166a0:	5ca2      	ldrb	r2, [r4, r2]
 80166a2:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 80166a6:	2800      	cmp	r0, #0
 80166a8:	f000 80fe 	beq.w	80168a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80166ac:	f899 2001 	ldrb.w	r2, [r9, #1]
 80166b0:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80166b4:	9211      	str	r2, [sp, #68]	@ 0x44
 80166b6:	b151      	cbz	r1, 80166ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80166b8:	eb09 0203 	add.w	r2, r9, r3
 80166bc:	f819 3003 	ldrb.w	r3, [r9, r3]
 80166c0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80166c4:	930f      	str	r3, [sp, #60]	@ 0x3c
 80166c6:	7853      	ldrb	r3, [r2, #1]
 80166c8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80166cc:	9312      	str	r3, [sp, #72]	@ 0x48
 80166ce:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80166d0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80166d2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80166d6:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80166da:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80166de:	ea4c 0c03 	orr.w	ip, ip, r3
 80166e2:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80166e4:	041b      	lsls	r3, r3, #16
 80166e6:	fb10 f201 	smulbb	r2, r0, r1
 80166ea:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 80166ee:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80166f2:	10d2      	asrs	r2, r2, #3
 80166f4:	4323      	orrs	r3, r4
 80166f6:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 80166fa:	4353      	muls	r3, r2
 80166fc:	fb09 330c 	mla	r3, r9, ip, r3
 8016700:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8016704:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8016708:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801670c:	ea4c 0e0e 	orr.w	lr, ip, lr
 8016710:	f1c1 0c10 	rsb	ip, r1, #16
 8016714:	ebac 0c00 	sub.w	ip, ip, r0
 8016718:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801671c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8016720:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8016722:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8016724:	0418      	lsls	r0, r3, #16
 8016726:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801672a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801672e:	4318      	orrs	r0, r3
 8016730:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8016734:	fb02 c200 	mla	r2, r2, r0, ip
 8016738:	0d53      	lsrs	r3, r2, #21
 801673a:	0952      	lsrs	r2, r2, #5
 801673c:	8838      	ldrh	r0, [r7, #0]
 801673e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8016742:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8016746:	431a      	orrs	r2, r3
 8016748:	b292      	uxth	r2, r2
 801674a:	1201      	asrs	r1, r0, #8
 801674c:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 8016750:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8016754:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8016758:	fb11 f104 	smulbb	r1, r1, r4
 801675c:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8016760:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8016764:	00c0      	lsls	r0, r0, #3
 8016766:	fb0c 1c03 	mla	ip, ip, r3, r1
 801676a:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801676e:	10d1      	asrs	r1, r2, #3
 8016770:	b2c0      	uxtb	r0, r0
 8016772:	00d2      	lsls	r2, r2, #3
 8016774:	b2d2      	uxtb	r2, r2
 8016776:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801677a:	fb1e fe04 	smulbb	lr, lr, r4
 801677e:	fb10 f004 	smulbb	r0, r0, r4
 8016782:	fa1f fc8c 	uxth.w	ip, ip
 8016786:	fb01 e103 	mla	r1, r1, r3, lr
 801678a:	fb02 0303 	mla	r3, r2, r3, r0
 801678e:	b29a      	uxth	r2, r3
 8016790:	f10c 0301 	add.w	r3, ip, #1
 8016794:	b289      	uxth	r1, r1
 8016796:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801679a:	1c53      	adds	r3, r2, #1
 801679c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80167a0:	1c4a      	adds	r2, r1, #1
 80167a2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80167a6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80167aa:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80167ae:	0949      	lsrs	r1, r1, #5
 80167b0:	ea43 030c 	orr.w	r3, r3, ip
 80167b4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80167b8:	430b      	orrs	r3, r1
 80167ba:	803b      	strh	r3, [r7, #0]
 80167bc:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80167be:	449a      	add	sl, r3
 80167c0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80167c2:	3702      	adds	r7, #2
 80167c4:	441d      	add	r5, r3
 80167c6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80167ca:	e742      	b.n	8016652 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80167cc:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80167ce:	449a      	add	sl, r3
 80167d0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80167d2:	441d      	add	r5, r3
 80167d4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80167d6:	3b01      	subs	r3, #1
 80167d8:	9309      	str	r3, [sp, #36]	@ 0x24
 80167da:	f108 0802 	add.w	r8, r8, #2
 80167de:	e718      	b.n	8016612 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80167e0:	d023      	beq.n	801682a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 80167e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80167e4:	9825      	ldr	r0, [sp, #148]	@ 0x94
 80167e6:	3b01      	subs	r3, #1
 80167e8:	fb00 a003 	mla	r0, r0, r3, sl
 80167ec:	1400      	asrs	r0, r0, #16
 80167ee:	f53f af2d 	bmi.w	801664c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80167f2:	3901      	subs	r1, #1
 80167f4:	4288      	cmp	r0, r1
 80167f6:	f6bf af29 	bge.w	801664c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80167fa:	9926      	ldr	r1, [sp, #152]	@ 0x98
 80167fc:	fb01 5303 	mla	r3, r1, r3, r5
 8016800:	141b      	asrs	r3, r3, #16
 8016802:	f53f af23 	bmi.w	801664c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8016806:	3a01      	subs	r2, #1
 8016808:	4293      	cmp	r3, r2
 801680a:	f6bf af1f 	bge.w	801664c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801680e:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8016812:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 8016816:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 801681a:	f1be 0f00 	cmp.w	lr, #0
 801681e:	dc6c      	bgt.n	80168fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8016820:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016822:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8016826:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801682a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801682c:	2b00      	cmp	r3, #0
 801682e:	f340 810e 	ble.w	8016a4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8016832:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016836:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801683a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801683e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8016840:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016844:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016848:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801684c:	eef0 6a62 	vmov.f32	s13, s5
 8016850:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016854:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016858:	ee77 2a62 	vsub.f32	s5, s14, s5
 801685c:	ee16 aa90 	vmov	sl, s13
 8016860:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016864:	eef0 6a43 	vmov.f32	s13, s6
 8016868:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801686c:	ee12 2a90 	vmov	r2, s5
 8016870:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016874:	fb92 f3f3 	sdiv	r3, r2, r3
 8016878:	ee13 2a10 	vmov	r2, s6
 801687c:	9325      	str	r3, [sp, #148]	@ 0x94
 801687e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8016880:	fb92 f3f3 	sdiv	r3, r2, r3
 8016884:	9326      	str	r3, [sp, #152]	@ 0x98
 8016886:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8016888:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 801688a:	3b01      	subs	r3, #1
 801688c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016890:	930c      	str	r3, [sp, #48]	@ 0x30
 8016892:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8016894:	bf08      	it	eq
 8016896:	4613      	moveq	r3, r2
 8016898:	ee16 5a90 	vmov	r5, s13
 801689c:	9309      	str	r3, [sp, #36]	@ 0x24
 801689e:	eeb0 3a67 	vmov.f32	s6, s15
 80168a2:	eef0 2a47 	vmov.f32	s5, s14
 80168a6:	e6a6      	b.n	80165f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80168a8:	2900      	cmp	r1, #0
 80168aa:	f43f af10 	beq.w	80166ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80168ae:	f819 3003 	ldrb.w	r3, [r9, r3]
 80168b2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80168b6:	930f      	str	r3, [sp, #60]	@ 0x3c
 80168b8:	e709      	b.n	80166ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80168ba:	f112 0901 	adds.w	r9, r2, #1
 80168be:	f53f af7d 	bmi.w	80167bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80168c2:	454b      	cmp	r3, r9
 80168c4:	f6ff af7a 	blt.w	80167bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80168c8:	f11c 0901 	adds.w	r9, ip, #1
 80168cc:	f53f af76 	bmi.w	80167bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80168d0:	45ce      	cmp	lr, r9
 80168d2:	f6ff af73 	blt.w	80167bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80168d6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80168d8:	9202      	str	r2, [sp, #8]
 80168da:	b21b      	sxth	r3, r3
 80168dc:	fa0f f28e 	sxth.w	r2, lr
 80168e0:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80168e4:	e9cd c003 	strd	ip, r0, [sp, #12]
 80168e8:	9201      	str	r2, [sp, #4]
 80168ea:	9300      	str	r3, [sp, #0]
 80168ec:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80168ee:	9816      	ldr	r0, [sp, #88]	@ 0x58
 80168f0:	4633      	mov	r3, r6
 80168f2:	4639      	mov	r1, r7
 80168f4:	f7ff fd8e 	bl	8016414 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 80168f8:	e760      	b.n	80167bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80168fa:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80168fc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80168fe:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8016902:	ea4f 422a 	mov.w	r2, sl, asr #16
 8016906:	1429      	asrs	r1, r5, #16
 8016908:	fb03 2101 	mla	r1, r3, r1, r2
 801690c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801690e:	440a      	add	r2, r1
 8016910:	5c61      	ldrb	r1, [r4, r1]
 8016912:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8016916:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801691a:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801691e:	f1bc 0f00 	cmp.w	ip, #0
 8016922:	f000 808c 	beq.w	8016a3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8016926:	7857      	ldrb	r7, [r2, #1]
 8016928:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801692c:	9413      	str	r4, [sp, #76]	@ 0x4c
 801692e:	b140      	cbz	r0, 8016942 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8016930:	18d7      	adds	r7, r2, r3
 8016932:	5cd3      	ldrb	r3, [r2, r3]
 8016934:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8016938:	9310      	str	r3, [sp, #64]	@ 0x40
 801693a:	787b      	ldrb	r3, [r7, #1]
 801693c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8016940:	9314      	str	r3, [sp, #80]	@ 0x50
 8016942:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8016944:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8016946:	fb1c f200 	smulbb	r2, ip, r0
 801694a:	041f      	lsls	r7, r3, #16
 801694c:	10d2      	asrs	r2, r2, #3
 801694e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8016952:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 8016956:	431f      	orrs	r7, r3
 8016958:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801695c:	9317      	str	r3, [sp, #92]	@ 0x5c
 801695e:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8016960:	041b      	lsls	r3, r3, #16
 8016962:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 8016966:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801696a:	ea43 030b 	orr.w	r3, r3, fp
 801696e:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8016970:	4353      	muls	r3, r2
 8016972:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8016976:	fb04 3707 	mla	r7, r4, r7, r3
 801697a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801697e:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 8016982:	ea43 0b01 	orr.w	fp, r3, r1
 8016986:	f1c0 0110 	rsb	r1, r0, #16
 801698a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801698c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801698e:	eba1 0c0c 	sub.w	ip, r1, ip
 8016992:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8016996:	fb0c 770b 	mla	r7, ip, fp, r7
 801699a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801699e:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 80169a2:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80169a6:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80169aa:	ea4c 0c0b 	orr.w	ip, ip, fp
 80169ae:	fb02 770c 	mla	r7, r2, ip, r7
 80169b2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80169b4:	0d79      	lsrs	r1, r7, #21
 80169b6:	097f      	lsrs	r7, r7, #5
 80169b8:	8812      	ldrh	r2, [r2, #0]
 80169ba:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80169be:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 80169c2:	430f      	orrs	r7, r1
 80169c4:	b2bb      	uxth	r3, r7
 80169c6:	1211      	asrs	r1, r2, #8
 80169c8:	1218      	asrs	r0, r3, #8
 80169ca:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80169ce:	fb11 f104 	smulbb	r1, r1, r4
 80169d2:	10d7      	asrs	r7, r2, #3
 80169d4:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80169d8:	00d2      	lsls	r2, r2, #3
 80169da:	fb00 1009 	mla	r0, r0, r9, r1
 80169de:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80169e2:	10d9      	asrs	r1, r3, #3
 80169e4:	b2d2      	uxtb	r2, r2
 80169e6:	00db      	lsls	r3, r3, #3
 80169e8:	fb17 f704 	smulbb	r7, r7, r4
 80169ec:	fb12 f204 	smulbb	r2, r2, r4
 80169f0:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80169f4:	b2db      	uxtb	r3, r3
 80169f6:	b280      	uxth	r0, r0
 80169f8:	fb01 7109 	mla	r1, r1, r9, r7
 80169fc:	fb03 2309 	mla	r3, r3, r9, r2
 8016a00:	b29b      	uxth	r3, r3
 8016a02:	b289      	uxth	r1, r1
 8016a04:	1c42      	adds	r2, r0, #1
 8016a06:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8016a0a:	1c4f      	adds	r7, r1, #1
 8016a0c:	1c5a      	adds	r2, r3, #1
 8016a0e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8016a12:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8016a16:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8016a1a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016a1e:	0949      	lsrs	r1, r1, #5
 8016a20:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016a22:	4310      	orrs	r0, r2
 8016a24:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8016a28:	4308      	orrs	r0, r1
 8016a2a:	f823 0b02 	strh.w	r0, [r3], #2
 8016a2e:	930e      	str	r3, [sp, #56]	@ 0x38
 8016a30:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8016a32:	449a      	add	sl, r3
 8016a34:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8016a36:	f10e 3eff 	add.w	lr, lr, #4294967295
 8016a3a:	441d      	add	r5, r3
 8016a3c:	e6ed      	b.n	801681a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8016a3e:	2800      	cmp	r0, #0
 8016a40:	f43f af7f 	beq.w	8016942 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8016a44:	5cd3      	ldrb	r3, [r2, r3]
 8016a46:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8016a4a:	9310      	str	r3, [sp, #64]	@ 0x40
 8016a4c:	e779      	b.n	8016942 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8016a4e:	b019      	add	sp, #100	@ 0x64
 8016a50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016a54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8016a54:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016a58:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 8016a5c:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8016a60:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 8016a64:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 8016a68:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 8016a6c:	8808      	ldrh	r0, [r1, #0]
 8016a6e:	fb08 470e 	mla	r7, r8, lr, r4
 8016a72:	f1b8 0f00 	cmp.w	r8, #0
 8016a76:	eb02 0907 	add.w	r9, r2, r7
 8016a7a:	db67      	blt.n	8016b4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8016a7c:	45c2      	cmp	sl, r8
 8016a7e:	dd65      	ble.n	8016b4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8016a80:	2c00      	cmp	r4, #0
 8016a82:	db61      	blt.n	8016b48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8016a84:	45a6      	cmp	lr, r4
 8016a86:	dd5f      	ble.n	8016b48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8016a88:	5dd2      	ldrb	r2, [r2, r7]
 8016a8a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8016a8e:	1c62      	adds	r2, r4, #1
 8016a90:	d45f      	bmi.n	8016b52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8016a92:	4596      	cmp	lr, r2
 8016a94:	dd5d      	ble.n	8016b52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8016a96:	2d00      	cmp	r5, #0
 8016a98:	d05b      	beq.n	8016b52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8016a9a:	f899 2001 	ldrb.w	r2, [r9, #1]
 8016a9e:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8016aa2:	f118 0801 	adds.w	r8, r8, #1
 8016aa6:	d458      	bmi.n	8016b5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8016aa8:	45c2      	cmp	sl, r8
 8016aaa:	dd56      	ble.n	8016b5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8016aac:	2e00      	cmp	r6, #0
 8016aae:	d054      	beq.n	8016b5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8016ab0:	2c00      	cmp	r4, #0
 8016ab2:	db50      	blt.n	8016b56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8016ab4:	45a6      	cmp	lr, r4
 8016ab6:	dd4e      	ble.n	8016b56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8016ab8:	f819 200e 	ldrb.w	r2, [r9, lr]
 8016abc:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8016ac0:	3401      	adds	r4, #1
 8016ac2:	d407      	bmi.n	8016ad4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8016ac4:	45a6      	cmp	lr, r4
 8016ac6:	dd05      	ble.n	8016ad4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8016ac8:	b125      	cbz	r5, 8016ad4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8016aca:	44ce      	add	lr, r9
 8016acc:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8016ad0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8016ad4:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8016ad8:	fb15 f406 	smulbb	r4, r5, r6
 8016adc:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8016ae0:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8016ae4:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8016ae8:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8016aec:	ea43 0c0c 	orr.w	ip, r3, ip
 8016af0:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8016af4:	f1c6 0310 	rsb	r3, r6, #16
 8016af8:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8016afc:	1b5b      	subs	r3, r3, r5
 8016afe:	ea4e 0707 	orr.w	r7, lr, r7
 8016b02:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8016b06:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016b0a:	437d      	muls	r5, r7
 8016b0c:	fb03 5c0c 	mla	ip, r3, ip, r5
 8016b10:	0403      	lsls	r3, r0, #16
 8016b12:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8016b16:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8016b1a:	4318      	orrs	r0, r3
 8016b1c:	0413      	lsls	r3, r2, #16
 8016b1e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8016b22:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8016b26:	4313      	orrs	r3, r2
 8016b28:	fb04 c000 	mla	r0, r4, r0, ip
 8016b2c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8016b30:	fb06 0003 	mla	r0, r6, r3, r0
 8016b34:	0d43      	lsrs	r3, r0, #21
 8016b36:	0940      	lsrs	r0, r0, #5
 8016b38:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8016b3c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8016b40:	4318      	orrs	r0, r3
 8016b42:	8008      	strh	r0, [r1, #0]
 8016b44:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016b48:	4684      	mov	ip, r0
 8016b4a:	e7a0      	b.n	8016a8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8016b4c:	4607      	mov	r7, r0
 8016b4e:	4684      	mov	ip, r0
 8016b50:	e7a7      	b.n	8016aa2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8016b52:	4607      	mov	r7, r0
 8016b54:	e7a5      	b.n	8016aa2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8016b56:	4602      	mov	r2, r0
 8016b58:	e7b2      	b.n	8016ac0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8016b5a:	4602      	mov	r2, r0
 8016b5c:	e7ba      	b.n	8016ad4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08016b5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016b5e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016b62:	b093      	sub	sp, #76	@ 0x4c
 8016b64:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8016b68:	920f      	str	r2, [sp, #60]	@ 0x3c
 8016b6a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8016b6c:	9108      	str	r1, [sp, #32]
 8016b6e:	9306      	str	r3, [sp, #24]
 8016b70:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8016b74:	9010      	str	r0, [sp, #64]	@ 0x40
 8016b76:	6850      	ldr	r0, [r2, #4]
 8016b78:	6812      	ldr	r2, [r2, #0]
 8016b7a:	fb00 1303 	mla	r3, r0, r3, r1
 8016b7e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8016b82:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8016b84:	681b      	ldr	r3, [r3, #0]
 8016b86:	9307      	str	r3, [sp, #28]
 8016b88:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8016b8a:	685f      	ldr	r7, [r3, #4]
 8016b8c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8016b90:	3704      	adds	r7, #4
 8016b92:	9b08      	ldr	r3, [sp, #32]
 8016b94:	2b00      	cmp	r3, #0
 8016b96:	dc03      	bgt.n	8016ba0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8016b98:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8016b9a:	2b00      	cmp	r3, #0
 8016b9c:	f340 81b2 	ble.w	8016f04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8016ba0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8016ba2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016ba6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016baa:	1e48      	subs	r0, r1, #1
 8016bac:	f102 3cff 	add.w	ip, r2, #4294967295
 8016bb0:	9b06      	ldr	r3, [sp, #24]
 8016bb2:	2b00      	cmp	r3, #0
 8016bb4:	f340 80a9 	ble.w	8016d0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8016bb8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8016bbc:	ea4f 4326 	mov.w	r3, r6, asr #16
 8016bc0:	d406      	bmi.n	8016bd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016bc2:	4586      	cmp	lr, r0
 8016bc4:	da04      	bge.n	8016bd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016bc6:	2b00      	cmp	r3, #0
 8016bc8:	db02      	blt.n	8016bd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016bca:	4563      	cmp	r3, ip
 8016bcc:	f2c0 809e 	blt.w	8016d0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8016bd0:	f11e 0e01 	adds.w	lr, lr, #1
 8016bd4:	f100 808f 	bmi.w	8016cf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016bd8:	4571      	cmp	r1, lr
 8016bda:	f2c0 808c 	blt.w	8016cf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016bde:	3301      	adds	r3, #1
 8016be0:	f100 8089 	bmi.w	8016cf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016be4:	429a      	cmp	r2, r3
 8016be6:	f2c0 8086 	blt.w	8016cf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016bea:	f8dd b018 	ldr.w	fp, [sp, #24]
 8016bee:	46c8      	mov	r8, r9
 8016bf0:	f1bb 0f00 	cmp.w	fp, #0
 8016bf4:	f340 80a6 	ble.w	8016d44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8016bf8:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8016bfa:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8016bfc:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8016c00:	689b      	ldr	r3, [r3, #8]
 8016c02:	1422      	asrs	r2, r4, #16
 8016c04:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8016c08:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8016c0c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8016c10:	f100 80e3 	bmi.w	8016dda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8016c14:	f103 3aff 	add.w	sl, r3, #4294967295
 8016c18:	4552      	cmp	r2, sl
 8016c1a:	f280 80de 	bge.w	8016dda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8016c1e:	f1bc 0f00 	cmp.w	ip, #0
 8016c22:	f2c0 80da 	blt.w	8016dda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8016c26:	f10e 3aff 	add.w	sl, lr, #4294967295
 8016c2a:	45d4      	cmp	ip, sl
 8016c2c:	f280 80d5 	bge.w	8016dda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8016c30:	b21b      	sxth	r3, r3
 8016c32:	fb0c 2203 	mla	r2, ip, r3, r2
 8016c36:	9d07      	ldr	r5, [sp, #28]
 8016c38:	eb05 0a02 	add.w	sl, r5, r2
 8016c3c:	5caa      	ldrb	r2, [r5, r2]
 8016c3e:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8016c42:	2800      	cmp	r0, #0
 8016c44:	f000 80c0 	beq.w	8016dc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8016c48:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8016c4c:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8016c50:	920b      	str	r2, [sp, #44]	@ 0x2c
 8016c52:	b151      	cbz	r1, 8016c6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8016c54:	eb0a 0203 	add.w	r2, sl, r3
 8016c58:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8016c5c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8016c60:	9309      	str	r3, [sp, #36]	@ 0x24
 8016c62:	7853      	ldrb	r3, [r2, #1]
 8016c64:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8016c68:	930c      	str	r3, [sp, #48]	@ 0x30
 8016c6a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8016c6c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8016c6e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8016c72:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8016c76:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8016c7a:	ea4c 0c03 	orr.w	ip, ip, r3
 8016c7e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8016c80:	041b      	lsls	r3, r3, #16
 8016c82:	fb10 f201 	smulbb	r2, r0, r1
 8016c86:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8016c8a:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8016c8e:	10d2      	asrs	r2, r2, #3
 8016c90:	432b      	orrs	r3, r5
 8016c92:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8016c96:	4353      	muls	r3, r2
 8016c98:	fb0a 330c 	mla	r3, sl, ip, r3
 8016c9c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8016ca0:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8016ca4:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8016ca8:	ea4c 0e0e 	orr.w	lr, ip, lr
 8016cac:	f1c1 0c10 	rsb	ip, r1, #16
 8016cb0:	ebac 0c00 	sub.w	ip, ip, r0
 8016cb4:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8016cb8:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8016cbc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016cbe:	0418      	lsls	r0, r3, #16
 8016cc0:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8016cc4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8016cc8:	4318      	orrs	r0, r3
 8016cca:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8016cce:	fb02 c200 	mla	r2, r2, r0, ip
 8016cd2:	0d53      	lsrs	r3, r2, #21
 8016cd4:	0952      	lsrs	r2, r2, #5
 8016cd6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8016cda:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8016cde:	431a      	orrs	r2, r3
 8016ce0:	f8a8 2000 	strh.w	r2, [r8]
 8016ce4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8016ce6:	441c      	add	r4, r3
 8016ce8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8016cea:	f108 0802 	add.w	r8, r8, #2
 8016cee:	441e      	add	r6, r3
 8016cf0:	f10b 3bff 	add.w	fp, fp, #4294967295
 8016cf4:	e77c      	b.n	8016bf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016cf6:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8016cf8:	441c      	add	r4, r3
 8016cfa:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8016cfc:	441e      	add	r6, r3
 8016cfe:	9b06      	ldr	r3, [sp, #24]
 8016d00:	3b01      	subs	r3, #1
 8016d02:	9306      	str	r3, [sp, #24]
 8016d04:	f109 0902 	add.w	r9, r9, #2
 8016d08:	e752      	b.n	8016bb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8016d0a:	d020      	beq.n	8016d4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8016d0c:	9b06      	ldr	r3, [sp, #24]
 8016d0e:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8016d10:	3b01      	subs	r3, #1
 8016d12:	fb00 4003 	mla	r0, r0, r3, r4
 8016d16:	1400      	asrs	r0, r0, #16
 8016d18:	f53f af67 	bmi.w	8016bea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016d1c:	3901      	subs	r1, #1
 8016d1e:	4288      	cmp	r0, r1
 8016d20:	f6bf af63 	bge.w	8016bea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016d24:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8016d26:	fb01 6303 	mla	r3, r1, r3, r6
 8016d2a:	141b      	asrs	r3, r3, #16
 8016d2c:	f53f af5d 	bmi.w	8016bea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016d30:	3a01      	subs	r2, #1
 8016d32:	4293      	cmp	r3, r2
 8016d34:	f6bf af59 	bge.w	8016bea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016d38:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8016d3c:	46ca      	mov	sl, r9
 8016d3e:	f1b8 0f00 	cmp.w	r8, #0
 8016d42:	dc67      	bgt.n	8016e14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8016d44:	9b06      	ldr	r3, [sp, #24]
 8016d46:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8016d4a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8016d4e:	9b08      	ldr	r3, [sp, #32]
 8016d50:	2b00      	cmp	r3, #0
 8016d52:	f340 80d7 	ble.w	8016f04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8016d56:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016d5a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016d5e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016d62:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8016d64:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016d68:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016d6c:	eeb0 6a62 	vmov.f32	s12, s5
 8016d70:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016d74:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016d78:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016d7c:	ee16 4a10 	vmov	r4, s12
 8016d80:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016d84:	eeb0 6a43 	vmov.f32	s12, s6
 8016d88:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016d8c:	ee12 2a90 	vmov	r2, s5
 8016d90:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016d94:	fb92 f3f3 	sdiv	r3, r2, r3
 8016d98:	ee13 2a10 	vmov	r2, s6
 8016d9c:	931f      	str	r3, [sp, #124]	@ 0x7c
 8016d9e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8016da0:	fb92 f3f3 	sdiv	r3, r2, r3
 8016da4:	9320      	str	r3, [sp, #128]	@ 0x80
 8016da6:	9b08      	ldr	r3, [sp, #32]
 8016da8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8016daa:	3b01      	subs	r3, #1
 8016dac:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016db0:	9308      	str	r3, [sp, #32]
 8016db2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8016db4:	bf08      	it	eq
 8016db6:	4613      	moveq	r3, r2
 8016db8:	ee16 6a10 	vmov	r6, s12
 8016dbc:	9306      	str	r3, [sp, #24]
 8016dbe:	eeb0 3a67 	vmov.f32	s6, s15
 8016dc2:	eef0 2a47 	vmov.f32	s5, s14
 8016dc6:	e6e4      	b.n	8016b92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8016dc8:	2900      	cmp	r1, #0
 8016dca:	f43f af4e 	beq.w	8016c6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8016dce:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8016dd2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8016dd6:	9309      	str	r3, [sp, #36]	@ 0x24
 8016dd8:	e747      	b.n	8016c6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8016dda:	f112 0a01 	adds.w	sl, r2, #1
 8016dde:	d481      	bmi.n	8016ce4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016de0:	4553      	cmp	r3, sl
 8016de2:	f6ff af7f 	blt.w	8016ce4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016de6:	f11c 0a01 	adds.w	sl, ip, #1
 8016dea:	f53f af7b 	bmi.w	8016ce4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016dee:	45d6      	cmp	lr, sl
 8016df0:	f6ff af78 	blt.w	8016ce4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016df4:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8016df8:	b21b      	sxth	r3, r3
 8016dfa:	fa0f f28e 	sxth.w	r2, lr
 8016dfe:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8016e02:	9201      	str	r2, [sp, #4]
 8016e04:	9300      	str	r3, [sp, #0]
 8016e06:	9a07      	ldr	r2, [sp, #28]
 8016e08:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8016e0a:	463b      	mov	r3, r7
 8016e0c:	4641      	mov	r1, r8
 8016e0e:	f7ff fe21 	bl	8016a54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8016e12:	e767      	b.n	8016ce4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016e14:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8016e16:	9d07      	ldr	r5, [sp, #28]
 8016e18:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8016e1c:	1422      	asrs	r2, r4, #16
 8016e1e:	1431      	asrs	r1, r6, #16
 8016e20:	fb03 2101 	mla	r1, r3, r1, r2
 8016e24:	9a07      	ldr	r2, [sp, #28]
 8016e26:	440a      	add	r2, r1
 8016e28:	5c69      	ldrb	r1, [r5, r1]
 8016e2a:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8016e2e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8016e32:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8016e36:	f1be 0f00 	cmp.w	lr, #0
 8016e3a:	d05c      	beq.n	8016ef6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8016e3c:	f892 c001 	ldrb.w	ip, [r2, #1]
 8016e40:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8016e44:	950d      	str	r5, [sp, #52]	@ 0x34
 8016e46:	b150      	cbz	r0, 8016e5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8016e48:	eb02 0c03 	add.w	ip, r2, r3
 8016e4c:	5cd3      	ldrb	r3, [r2, r3]
 8016e4e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8016e52:	930a      	str	r3, [sp, #40]	@ 0x28
 8016e54:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8016e58:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8016e5c:	930e      	str	r3, [sp, #56]	@ 0x38
 8016e5e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016e60:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8016e62:	fb1e f200 	smulbb	r2, lr, r0
 8016e66:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8016e6a:	10d2      	asrs	r2, r2, #3
 8016e6c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8016e70:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8016e74:	ea4c 0c03 	orr.w	ip, ip, r3
 8016e78:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8016e7c:	9311      	str	r3, [sp, #68]	@ 0x44
 8016e7e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016e80:	041b      	lsls	r3, r3, #16
 8016e82:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 8016e86:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8016e8a:	ea43 030b 	orr.w	r3, r3, fp
 8016e8e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8016e90:	4353      	muls	r3, r2
 8016e92:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8016e96:	fb05 3c0c 	mla	ip, r5, ip, r3
 8016e9a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8016e9e:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 8016ea2:	ea43 0b01 	orr.w	fp, r3, r1
 8016ea6:	f1c0 0110 	rsb	r1, r0, #16
 8016eaa:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016eac:	eba1 0e0e 	sub.w	lr, r1, lr
 8016eb0:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8016eb4:	fb0e cc0b 	mla	ip, lr, fp, ip
 8016eb8:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8016ebc:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 8016ec0:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8016ec4:	ea4b 0e0e 	orr.w	lr, fp, lr
 8016ec8:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8016ecc:	fb02 cc0e 	mla	ip, r2, lr, ip
 8016ed0:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8016ed4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8016ed8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8016edc:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8016ee0:	ea43 0c0c 	orr.w	ip, r3, ip
 8016ee4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8016ee6:	f82a cb02 	strh.w	ip, [sl], #2
 8016eea:	441c      	add	r4, r3
 8016eec:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8016eee:	f108 38ff 	add.w	r8, r8, #4294967295
 8016ef2:	441e      	add	r6, r3
 8016ef4:	e723      	b.n	8016d3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8016ef6:	2800      	cmp	r0, #0
 8016ef8:	d0b1      	beq.n	8016e5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8016efa:	5cd3      	ldrb	r3, [r2, r3]
 8016efc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8016f00:	930a      	str	r3, [sp, #40]	@ 0x28
 8016f02:	e7ac      	b.n	8016e5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8016f04:	b013      	add	sp, #76	@ 0x4c
 8016f06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016f0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8016f0a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f0e:	880d      	ldrh	r5, [r1, #0]
 8016f10:	b087      	sub	sp, #28
 8016f12:	10ef      	asrs	r7, r5, #3
 8016f14:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8016f18:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8016f1c:	00ed      	lsls	r5, r5, #3
 8016f1e:	9701      	str	r7, [sp, #4]
 8016f20:	b2ed      	uxtb	r5, r5
 8016f22:	9502      	str	r5, [sp, #8]
 8016f24:	9d01      	ldr	r5, [sp, #4]
 8016f26:	9103      	str	r1, [sp, #12]
 8016f28:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 8016f2c:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 8016f30:	9902      	ldr	r1, [sp, #8]
 8016f32:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8016f36:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 8016f3a:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 8016f3e:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 8016f42:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 8016f46:	022d      	lsls	r5, r5, #8
 8016f48:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8016f4c:	fb06 0709 	mla	r7, r6, r9, r0
 8016f50:	430d      	orrs	r5, r1
 8016f52:	2e00      	cmp	r6, #0
 8016f54:	eb02 0c07 	add.w	ip, r2, r7
 8016f58:	9505      	str	r5, [sp, #20]
 8016f5a:	f2c0 80b6 	blt.w	80170ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8016f5e:	45b3      	cmp	fp, r6
 8016f60:	f340 80b3 	ble.w	80170ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8016f64:	2800      	cmp	r0, #0
 8016f66:	f2c0 80ae 	blt.w	80170c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8016f6a:	4581      	cmp	r9, r0
 8016f6c:	f340 80ab 	ble.w	80170c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8016f70:	5dd7      	ldrb	r7, [r2, r7]
 8016f72:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8016f76:	441f      	add	r7, r3
 8016f78:	1c42      	adds	r2, r0, #1
 8016f7a:	f100 80a9 	bmi.w	80170d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8016f7e:	4591      	cmp	r9, r2
 8016f80:	f340 80a6 	ble.w	80170d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8016f84:	2c00      	cmp	r4, #0
 8016f86:	f000 80a3 	beq.w	80170d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8016f8a:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8016f8e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8016f92:	441d      	add	r5, r3
 8016f94:	3601      	adds	r6, #1
 8016f96:	f100 809f 	bmi.w	80170d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8016f9a:	45b3      	cmp	fp, r6
 8016f9c:	f340 809c 	ble.w	80170d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8016fa0:	f1be 0f00 	cmp.w	lr, #0
 8016fa4:	f000 8098 	beq.w	80170d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8016fa8:	2800      	cmp	r0, #0
 8016faa:	f2c0 8093 	blt.w	80170d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8016fae:	4581      	cmp	r9, r0
 8016fb0:	f340 8090 	ble.w	80170d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8016fb4:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8016fb8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8016fbc:	441e      	add	r6, r3
 8016fbe:	3001      	adds	r0, #1
 8016fc0:	f100 808d 	bmi.w	80170de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8016fc4:	4581      	cmp	r9, r0
 8016fc6:	f340 808a 	ble.w	80170de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8016fca:	2c00      	cmp	r4, #0
 8016fcc:	f000 8087 	beq.w	80170de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8016fd0:	44e1      	add	r9, ip
 8016fd2:	f899 2001 	ldrb.w	r2, [r9, #1]
 8016fd6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016fda:	4413      	add	r3, r2
 8016fdc:	b2a4      	uxth	r4, r4
 8016fde:	fa1f fe8e 	uxth.w	lr, lr
 8016fe2:	fb04 fb0e 	mul.w	fp, r4, lr
 8016fe6:	0124      	lsls	r4, r4, #4
 8016fe8:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8016fec:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 8016ff0:	eba4 040b 	sub.w	r4, r4, fp
 8016ff4:	fa1f f08e 	uxth.w	r0, lr
 8016ff8:	b2a2      	uxth	r2, r4
 8016ffa:	78ac      	ldrb	r4, [r5, #2]
 8016ffc:	f897 c002 	ldrb.w	ip, [r7, #2]
 8017000:	9901      	ldr	r1, [sp, #4]
 8017002:	eba9 0900 	sub.w	r9, r9, r0
 8017006:	fa1f f989 	uxth.w	r9, r9
 801700a:	4354      	muls	r4, r2
 801700c:	fb09 440c 	mla	r4, r9, ip, r4
 8017010:	f896 c002 	ldrb.w	ip, [r6, #2]
 8017014:	fb00 440c 	mla	r4, r0, ip, r4
 8017018:	f893 c002 	ldrb.w	ip, [r3, #2]
 801701c:	fa1f fe88 	uxth.w	lr, r8
 8017020:	ea6f 0808 	mvn.w	r8, r8
 8017024:	fa5f f888 	uxtb.w	r8, r8
 8017028:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801702c:	fb1a fa08 	smulbb	sl, sl, r8
 8017030:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8017034:	fb0c ac0e 	mla	ip, ip, lr, sl
 8017038:	f895 a001 	ldrb.w	sl, [r5, #1]
 801703c:	787c      	ldrb	r4, [r7, #1]
 801703e:	782d      	ldrb	r5, [r5, #0]
 8017040:	783f      	ldrb	r7, [r7, #0]
 8017042:	fb02 fa0a 	mul.w	sl, r2, sl
 8017046:	fb09 aa04 	mla	sl, r9, r4, sl
 801704a:	7874      	ldrb	r4, [r6, #1]
 801704c:	436a      	muls	r2, r5
 801704e:	7835      	ldrb	r5, [r6, #0]
 8017050:	fb00 aa04 	mla	sl, r0, r4, sl
 8017054:	fb09 2207 	mla	r2, r9, r7, r2
 8017058:	785c      	ldrb	r4, [r3, #1]
 801705a:	781b      	ldrb	r3, [r3, #0]
 801705c:	fb00 2005 	mla	r0, r0, r5, r2
 8017060:	fb0b a404 	mla	r4, fp, r4, sl
 8017064:	fb0b 0b03 	mla	fp, fp, r3, r0
 8017068:	9b02      	ldr	r3, [sp, #8]
 801706a:	fb11 fa08 	smulbb	sl, r1, r8
 801706e:	fa1f fc8c 	uxth.w	ip, ip
 8017072:	fb13 f808 	smulbb	r8, r3, r8
 8017076:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801707a:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801707e:	fb04 a40e 	mla	r4, r4, lr, sl
 8017082:	f10c 0301 	add.w	r3, ip, #1
 8017086:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801708a:	fa1f fe8e 	uxth.w	lr, lr
 801708e:	b2a4      	uxth	r4, r4
 8017090:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8017094:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 8017098:	f104 0a01 	add.w	sl, r4, #1
 801709c:	f10e 0c01 	add.w	ip, lr, #1
 80170a0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80170a4:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80170a8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80170ac:	0964      	lsrs	r4, r4, #5
 80170ae:	ea4c 0c03 	orr.w	ip, ip, r3
 80170b2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80170b6:	9b03      	ldr	r3, [sp, #12]
 80170b8:	ea4c 0c04 	orr.w	ip, ip, r4
 80170bc:	f8a3 c000 	strh.w	ip, [r3]
 80170c0:	b007      	add	sp, #28
 80170c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80170c6:	af05      	add	r7, sp, #20
 80170c8:	e756      	b.n	8016f78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 80170ca:	ad05      	add	r5, sp, #20
 80170cc:	462f      	mov	r7, r5
 80170ce:	e761      	b.n	8016f94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80170d0:	ad05      	add	r5, sp, #20
 80170d2:	e75f      	b.n	8016f94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80170d4:	ae05      	add	r6, sp, #20
 80170d6:	e772      	b.n	8016fbe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 80170d8:	ab05      	add	r3, sp, #20
 80170da:	461e      	mov	r6, r3
 80170dc:	e77e      	b.n	8016fdc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 80170de:	ab05      	add	r3, sp, #20
 80170e0:	e77c      	b.n	8016fdc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

080170e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80170e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80170e6:	b095      	sub	sp, #84	@ 0x54
 80170e8:	9212      	str	r2, [sp, #72]	@ 0x48
 80170ea:	9309      	str	r3, [sp, #36]	@ 0x24
 80170ec:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 80170ee:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 80170f2:	930f      	str	r3, [sp, #60]	@ 0x3c
 80170f4:	910e      	str	r1, [sp, #56]	@ 0x38
 80170f6:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 80170fa:	9013      	str	r0, [sp, #76]	@ 0x4c
 80170fc:	6850      	ldr	r0, [r2, #4]
 80170fe:	6812      	ldr	r2, [r2, #0]
 8017100:	fb00 1303 	mla	r3, r0, r3, r1
 8017104:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017108:	930a      	str	r3, [sp, #40]	@ 0x28
 801710a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801710c:	681b      	ldr	r3, [r3, #0]
 801710e:	930d      	str	r3, [sp, #52]	@ 0x34
 8017110:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8017112:	685c      	ldr	r4, [r3, #4]
 8017114:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8017116:	43db      	mvns	r3, r3
 8017118:	b2db      	uxtb	r3, r3
 801711a:	3404      	adds	r4, #4
 801711c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801711e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017120:	2b00      	cmp	r3, #0
 8017122:	dc03      	bgt.n	801712c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8017124:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8017126:	2b00      	cmp	r3, #0
 8017128:	f340 8255 	ble.w	80175d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801712c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801712e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017132:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017136:	1e48      	subs	r0, r1, #1
 8017138:	1e55      	subs	r5, r2, #1
 801713a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801713c:	2b00      	cmp	r3, #0
 801713e:	f340 80f9 	ble.w	8017334 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8017142:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 8017144:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8017146:	1436      	asrs	r6, r6, #16
 8017148:	ea4f 4323 	mov.w	r3, r3, asr #16
 801714c:	d406      	bmi.n	801715c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801714e:	4286      	cmp	r6, r0
 8017150:	da04      	bge.n	801715c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8017152:	2b00      	cmp	r3, #0
 8017154:	db02      	blt.n	801715c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8017156:	42ab      	cmp	r3, r5
 8017158:	f2c0 80ed 	blt.w	8017336 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801715c:	3601      	adds	r6, #1
 801715e:	f100 80da 	bmi.w	8017316 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8017162:	42b1      	cmp	r1, r6
 8017164:	f2c0 80d7 	blt.w	8017316 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8017168:	3301      	adds	r3, #1
 801716a:	f100 80d4 	bmi.w	8017316 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801716e:	429a      	cmp	r2, r3
 8017170:	f2c0 80d1 	blt.w	8017316 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8017174:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017176:	9311      	str	r3, [sp, #68]	@ 0x44
 8017178:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801717a:	930c      	str	r3, [sp, #48]	@ 0x30
 801717c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801717e:	2b00      	cmp	r3, #0
 8017180:	f340 80fa 	ble.w	8017378 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8017184:	9826      	ldr	r0, [sp, #152]	@ 0x98
 8017186:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8017188:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801718a:	68c6      	ldr	r6, [r0, #12]
 801718c:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801718e:	141d      	asrs	r5, r3, #16
 8017190:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8017194:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8017196:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8017198:	1400      	asrs	r0, r0, #16
 801719a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801719e:	6892      	ldr	r2, [r2, #8]
 80171a0:	f100 813e 	bmi.w	8017420 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80171a4:	1e57      	subs	r7, r2, #1
 80171a6:	42b8      	cmp	r0, r7
 80171a8:	f280 813a 	bge.w	8017420 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80171ac:	2d00      	cmp	r5, #0
 80171ae:	f2c0 8137 	blt.w	8017420 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80171b2:	1e77      	subs	r7, r6, #1
 80171b4:	42bd      	cmp	r5, r7
 80171b6:	f280 8133 	bge.w	8017420 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80171ba:	b212      	sxth	r2, r2
 80171bc:	fb05 0002 	mla	r0, r5, r2, r0
 80171c0:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80171c2:	f815 a000 	ldrb.w	sl, [r5, r0]
 80171c6:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80171ca:	182e      	adds	r6, r5, r0
 80171cc:	eb04 050a 	add.w	r5, r4, sl
 80171d0:	2b00      	cmp	r3, #0
 80171d2:	f000 8117 	beq.w	8017404 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 80171d6:	f896 c001 	ldrb.w	ip, [r6, #1]
 80171da:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80171de:	44a4      	add	ip, r4
 80171e0:	2900      	cmp	r1, #0
 80171e2:	f000 8117 	beq.w	8017414 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 80171e6:	18b0      	adds	r0, r6, r2
 80171e8:	5cb2      	ldrb	r2, [r6, r2]
 80171ea:	7840      	ldrb	r0, [r0, #1]
 80171ec:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80171f0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80171f4:	4422      	add	r2, r4
 80171f6:	4420      	add	r0, r4
 80171f8:	b29b      	uxth	r3, r3
 80171fa:	b289      	uxth	r1, r1
 80171fc:	fb03 f901 	mul.w	r9, r3, r1
 8017200:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8017204:	011b      	lsls	r3, r3, #4
 8017206:	b289      	uxth	r1, r1
 8017208:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801720c:	f895 b002 	ldrb.w	fp, [r5, #2]
 8017210:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8017212:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8017216:	f8b6 e000 	ldrh.w	lr, [r6]
 801721a:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 801721e:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 8017222:	eba3 0309 	sub.w	r3, r3, r9
 8017226:	b29b      	uxth	r3, r3
 8017228:	eba8 0801 	sub.w	r8, r8, r1
 801722c:	fa1f f888 	uxth.w	r8, r8
 8017230:	435f      	muls	r7, r3
 8017232:	fb08 770b 	mla	r7, r8, fp, r7
 8017236:	f892 b002 	ldrb.w	fp, [r2, #2]
 801723a:	9310      	str	r3, [sp, #64]	@ 0x40
 801723c:	fb01 770b 	mla	r7, r1, fp, r7
 8017240:	f890 b002 	ldrb.w	fp, [r0, #2]
 8017244:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017246:	fb09 770b 	mla	r7, r9, fp, r7
 801724a:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801724e:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 8017252:	fb1b fb03 	smulbb	fp, fp, r3
 8017256:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801725a:	fb07 b706 	mla	r7, r7, r6, fp
 801725e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017260:	f895 b001 	ldrb.w	fp, [r5, #1]
 8017264:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8017268:	f89c c000 	ldrb.w	ip, [ip]
 801726c:	435d      	muls	r5, r3
 801726e:	fb08 550b 	mla	r5, r8, fp, r5
 8017272:	f892 b001 	ldrb.w	fp, [r2, #1]
 8017276:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017278:	fb01 550b 	mla	r5, r1, fp, r5
 801727c:	f890 b001 	ldrb.w	fp, [r0, #1]
 8017280:	fb09 550b 	mla	r5, r9, fp, r5
 8017284:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8017288:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801728c:	fb1b fb03 	smulbb	fp, fp, r3
 8017290:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017292:	fb03 f30c 	mul.w	r3, r3, ip
 8017296:	f892 c000 	ldrb.w	ip, [r2]
 801729a:	fb08 330a 	mla	r3, r8, sl, r3
 801729e:	fb01 330c 	mla	r3, r1, ip, r3
 80172a2:	f890 c000 	ldrb.w	ip, [r0]
 80172a6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80172aa:	fb09 3c0c 	mla	ip, r9, ip, r3
 80172ae:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80172b0:	fa5f fe8e 	uxtb.w	lr, lr
 80172b4:	b2bf      	uxth	r7, r7
 80172b6:	fb1e fe03 	smulbb	lr, lr, r3
 80172ba:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80172be:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80172c2:	fb05 b506 	mla	r5, r5, r6, fp
 80172c6:	1c7b      	adds	r3, r7, #1
 80172c8:	fb0c e606 	mla	r6, ip, r6, lr
 80172cc:	b2ad      	uxth	r5, r5
 80172ce:	b2b6      	uxth	r6, r6
 80172d0:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80172d4:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 80172d8:	f105 0b01 	add.w	fp, r5, #1
 80172dc:	1c77      	adds	r7, r6, #1
 80172de:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 80172e2:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80172e6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80172ea:	096d      	lsrs	r5, r5, #5
 80172ec:	431f      	orrs	r7, r3
 80172ee:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80172f2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80172f4:	433d      	orrs	r5, r7
 80172f6:	801d      	strh	r5, [r3, #0]
 80172f8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80172fa:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80172fc:	3302      	adds	r3, #2
 80172fe:	930c      	str	r3, [sp, #48]	@ 0x30
 8017300:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8017302:	4413      	add	r3, r2
 8017304:	931f      	str	r3, [sp, #124]	@ 0x7c
 8017306:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8017308:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801730a:	4413      	add	r3, r2
 801730c:	9320      	str	r3, [sp, #128]	@ 0x80
 801730e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8017310:	3b01      	subs	r3, #1
 8017312:	9311      	str	r3, [sp, #68]	@ 0x44
 8017314:	e732      	b.n	801717c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8017316:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8017318:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801731a:	4433      	add	r3, r6
 801731c:	931f      	str	r3, [sp, #124]	@ 0x7c
 801731e:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 8017320:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8017322:	4433      	add	r3, r6
 8017324:	9320      	str	r3, [sp, #128]	@ 0x80
 8017326:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017328:	3b01      	subs	r3, #1
 801732a:	9309      	str	r3, [sp, #36]	@ 0x24
 801732c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801732e:	3302      	adds	r3, #2
 8017330:	930a      	str	r3, [sp, #40]	@ 0x28
 8017332:	e702      	b.n	801713a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8017334:	d027      	beq.n	8017386 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8017336:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017338:	9821      	ldr	r0, [sp, #132]	@ 0x84
 801733a:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801733c:	3b01      	subs	r3, #1
 801733e:	fb00 5003 	mla	r0, r0, r3, r5
 8017342:	1400      	asrs	r0, r0, #16
 8017344:	f53f af16 	bmi.w	8017174 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017348:	3901      	subs	r1, #1
 801734a:	4288      	cmp	r0, r1
 801734c:	f6bf af12 	bge.w	8017174 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017350:	9922      	ldr	r1, [sp, #136]	@ 0x88
 8017352:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8017354:	fb01 0303 	mla	r3, r1, r3, r0
 8017358:	141b      	asrs	r3, r3, #16
 801735a:	f53f af0b 	bmi.w	8017174 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801735e:	3a01      	subs	r2, #1
 8017360:	4293      	cmp	r3, r2
 8017362:	f6bf af07 	bge.w	8017174 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017366:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017368:	9311      	str	r3, [sp, #68]	@ 0x44
 801736a:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 801736e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017370:	930c      	str	r3, [sp, #48]	@ 0x30
 8017372:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8017374:	2b00      	cmp	r3, #0
 8017376:	dc70      	bgt.n	801745a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8017378:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801737a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801737c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017380:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017384:	930a      	str	r3, [sp, #40]	@ 0x28
 8017386:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017388:	2b00      	cmp	r3, #0
 801738a:	f340 8124 	ble.w	80175d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801738e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017392:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8017396:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801739a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801739c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80173a0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80173a4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80173a8:	eef0 6a62 	vmov.f32	s13, s5
 80173ac:	ee61 7a27 	vmul.f32	s15, s2, s15
 80173b0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80173b4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80173b8:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 80173bc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80173c0:	eef0 6a43 	vmov.f32	s13, s6
 80173c4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80173c8:	ee12 2a90 	vmov	r2, s5
 80173cc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80173d0:	fb92 f3f3 	sdiv	r3, r2, r3
 80173d4:	ee13 2a10 	vmov	r2, s6
 80173d8:	9321      	str	r3, [sp, #132]	@ 0x84
 80173da:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80173dc:	fb92 f3f3 	sdiv	r3, r2, r3
 80173e0:	9322      	str	r3, [sp, #136]	@ 0x88
 80173e2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80173e4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80173e6:	3b01      	subs	r3, #1
 80173e8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80173ec:	930e      	str	r3, [sp, #56]	@ 0x38
 80173ee:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80173f0:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 80173f4:	bf08      	it	eq
 80173f6:	4613      	moveq	r3, r2
 80173f8:	9309      	str	r3, [sp, #36]	@ 0x24
 80173fa:	eeb0 3a67 	vmov.f32	s6, s15
 80173fe:	eef0 2a47 	vmov.f32	s5, s14
 8017402:	e68c      	b.n	801711e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8017404:	b149      	cbz	r1, 801741a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 8017406:	5cb2      	ldrb	r2, [r6, r2]
 8017408:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801740c:	4422      	add	r2, r4
 801740e:	4628      	mov	r0, r5
 8017410:	46ac      	mov	ip, r5
 8017412:	e6f1      	b.n	80171f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8017414:	4628      	mov	r0, r5
 8017416:	462a      	mov	r2, r5
 8017418:	e6ee      	b.n	80171f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801741a:	4628      	mov	r0, r5
 801741c:	462a      	mov	r2, r5
 801741e:	e7f7      	b.n	8017410 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8017420:	1c47      	adds	r7, r0, #1
 8017422:	f53f af69 	bmi.w	80172f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8017426:	42ba      	cmp	r2, r7
 8017428:	f6ff af66 	blt.w	80172f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801742c:	1c6f      	adds	r7, r5, #1
 801742e:	f53f af63 	bmi.w	80172f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8017432:	42be      	cmp	r6, r7
 8017434:	f6ff af60 	blt.w	80172f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8017438:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801743a:	9002      	str	r0, [sp, #8]
 801743c:	b236      	sxth	r6, r6
 801743e:	b212      	sxth	r2, r2
 8017440:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8017444:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8017448:	9200      	str	r2, [sp, #0]
 801744a:	9601      	str	r6, [sp, #4]
 801744c:	4623      	mov	r3, r4
 801744e:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 8017452:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8017454:	f7ff fd59 	bl	8016f0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8017458:	e74e      	b.n	80172f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801745a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801745c:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801745e:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 8017460:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8017462:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8017466:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8017468:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801746c:	142d      	asrs	r5, r5, #16
 801746e:	1400      	asrs	r0, r0, #16
 8017470:	fb02 5000 	mla	r0, r2, r0, r5
 8017474:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8017476:	f815 9000 	ldrb.w	r9, [r5, r0]
 801747a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801747e:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8017482:	182e      	adds	r6, r5, r0
 8017484:	eb04 0509 	add.w	r5, r4, r9
 8017488:	2b00      	cmp	r3, #0
 801748a:	f000 8096 	beq.w	80175ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801748e:	7877      	ldrb	r7, [r6, #1]
 8017490:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8017494:	4427      	add	r7, r4
 8017496:	2900      	cmp	r1, #0
 8017498:	f000 8097 	beq.w	80175ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801749c:	18b0      	adds	r0, r6, r2
 801749e:	5cb2      	ldrb	r2, [r6, r2]
 80174a0:	7840      	ldrb	r0, [r0, #1]
 80174a2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80174a6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80174aa:	4422      	add	r2, r4
 80174ac:	4420      	add	r0, r4
 80174ae:	b29b      	uxth	r3, r3
 80174b0:	b289      	uxth	r1, r1
 80174b2:	fb03 f801 	mul.w	r8, r3, r1
 80174b6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80174b8:	f895 b002 	ldrb.w	fp, [r5, #2]
 80174bc:	f8b6 c000 	ldrh.w	ip, [r6]
 80174c0:	78be      	ldrb	r6, [r7, #2]
 80174c2:	f814 9009 	ldrb.w	r9, [r4, r9]
 80174c6:	011b      	lsls	r3, r3, #4
 80174c8:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80174cc:	b289      	uxth	r1, r1
 80174ce:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 80174d2:	eba3 0308 	sub.w	r3, r3, r8
 80174d6:	b29b      	uxth	r3, r3
 80174d8:	ebae 0e01 	sub.w	lr, lr, r1
 80174dc:	fa1f fe8e 	uxth.w	lr, lr
 80174e0:	435e      	muls	r6, r3
 80174e2:	fb0e 660b 	mla	r6, lr, fp, r6
 80174e6:	f892 b002 	ldrb.w	fp, [r2, #2]
 80174ea:	9310      	str	r3, [sp, #64]	@ 0x40
 80174ec:	fb01 660b 	mla	r6, r1, fp, r6
 80174f0:	f890 b002 	ldrb.w	fp, [r0, #2]
 80174f4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80174f6:	fb08 660b 	mla	r6, r8, fp, r6
 80174fa:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 80174fe:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 8017502:	fb1b fb03 	smulbb	fp, fp, r3
 8017506:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801750a:	fb06 b60a 	mla	r6, r6, sl, fp
 801750e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017510:	f895 b001 	ldrb.w	fp, [r5, #1]
 8017514:	787d      	ldrb	r5, [r7, #1]
 8017516:	783f      	ldrb	r7, [r7, #0]
 8017518:	435d      	muls	r5, r3
 801751a:	fb0e 550b 	mla	r5, lr, fp, r5
 801751e:	f892 b001 	ldrb.w	fp, [r2, #1]
 8017522:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017524:	fb01 550b 	mla	r5, r1, fp, r5
 8017528:	f890 b001 	ldrb.w	fp, [r0, #1]
 801752c:	fb08 550b 	mla	r5, r8, fp, r5
 8017530:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8017534:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8017538:	fb1b fb03 	smulbb	fp, fp, r3
 801753c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801753e:	437b      	muls	r3, r7
 8017540:	7817      	ldrb	r7, [r2, #0]
 8017542:	fb0e 3309 	mla	r3, lr, r9, r3
 8017546:	fb01 3307 	mla	r3, r1, r7, r3
 801754a:	7807      	ldrb	r7, [r0, #0]
 801754c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017550:	fb08 3707 	mla	r7, r8, r7, r3
 8017554:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017556:	fa5f fc8c 	uxtb.w	ip, ip
 801755a:	fb1c fc03 	smulbb	ip, ip, r3
 801755e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8017562:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8017566:	fb05 b50a 	mla	r5, r5, sl, fp
 801756a:	fb07 c70a 	mla	r7, r7, sl, ip
 801756e:	b2b6      	uxth	r6, r6
 8017570:	b2ad      	uxth	r5, r5
 8017572:	b2bf      	uxth	r7, r7
 8017574:	1c73      	adds	r3, r6, #1
 8017576:	1c7a      	adds	r2, r7, #1
 8017578:	f105 0b01 	add.w	fp, r5, #1
 801757c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8017580:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8017584:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8017588:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801758c:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8017590:	096d      	lsrs	r5, r5, #5
 8017592:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8017594:	4316      	orrs	r6, r2
 8017596:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801759a:	432e      	orrs	r6, r5
 801759c:	f823 6b02 	strh.w	r6, [r3], #2
 80175a0:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80175a2:	930c      	str	r3, [sp, #48]	@ 0x30
 80175a4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80175a6:	4413      	add	r3, r2
 80175a8:	931f      	str	r3, [sp, #124]	@ 0x7c
 80175aa:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80175ac:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80175ae:	4413      	add	r3, r2
 80175b0:	9320      	str	r3, [sp, #128]	@ 0x80
 80175b2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80175b4:	3b01      	subs	r3, #1
 80175b6:	9311      	str	r3, [sp, #68]	@ 0x44
 80175b8:	e6db      	b.n	8017372 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 80175ba:	b149      	cbz	r1, 80175d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80175bc:	5cb2      	ldrb	r2, [r6, r2]
 80175be:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80175c2:	4422      	add	r2, r4
 80175c4:	4628      	mov	r0, r5
 80175c6:	462f      	mov	r7, r5
 80175c8:	e771      	b.n	80174ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80175ca:	4628      	mov	r0, r5
 80175cc:	462a      	mov	r2, r5
 80175ce:	e76e      	b.n	80174ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80175d0:	4628      	mov	r0, r5
 80175d2:	462a      	mov	r2, r5
 80175d4:	e7f7      	b.n	80175c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80175d6:	b015      	add	sp, #84	@ 0x54
 80175d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080175dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 80175dc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80175e0:	880f      	ldrh	r7, [r1, #0]
 80175e2:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 80175e6:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 80175ea:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 80175ee:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 80175f2:	023c      	lsls	r4, r7, #8
 80175f4:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 80175f8:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 80175fc:	017c      	lsls	r4, r7, #5
 80175fe:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 8017602:	00ff      	lsls	r7, r7, #3
 8017604:	ea4b 0404 	orr.w	r4, fp, r4
 8017608:	b2ff      	uxtb	r7, r7
 801760a:	fb05 ca0e 	mla	sl, r5, lr, ip
 801760e:	4327      	orrs	r7, r4
 8017610:	2d00      	cmp	r5, #0
 8017612:	eb02 080a 	add.w	r8, r2, sl
 8017616:	9701      	str	r7, [sp, #4]
 8017618:	db7e      	blt.n	8017718 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801761a:	45a9      	cmp	r9, r5
 801761c:	dd7c      	ble.n	8017718 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801761e:	f1bc 0f00 	cmp.w	ip, #0
 8017622:	db77      	blt.n	8017714 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8017624:	45e6      	cmp	lr, ip
 8017626:	dd75      	ble.n	8017714 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8017628:	f812 700a 	ldrb.w	r7, [r2, sl]
 801762c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8017630:	441f      	add	r7, r3
 8017632:	f11c 0201 	adds.w	r2, ip, #1
 8017636:	d472      	bmi.n	801771e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8017638:	4596      	cmp	lr, r2
 801763a:	dd70      	ble.n	801771e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801763c:	2800      	cmp	r0, #0
 801763e:	d06e      	beq.n	801771e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8017640:	f898 4001 	ldrb.w	r4, [r8, #1]
 8017644:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8017648:	441c      	add	r4, r3
 801764a:	3501      	adds	r5, #1
 801764c:	d46b      	bmi.n	8017726 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801764e:	45a9      	cmp	r9, r5
 8017650:	dd69      	ble.n	8017726 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8017652:	2e00      	cmp	r6, #0
 8017654:	d067      	beq.n	8017726 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8017656:	f1bc 0f00 	cmp.w	ip, #0
 801765a:	db62      	blt.n	8017722 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801765c:	45e6      	cmp	lr, ip
 801765e:	dd60      	ble.n	8017722 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8017660:	f818 500e 	ldrb.w	r5, [r8, lr]
 8017664:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8017668:	441d      	add	r5, r3
 801766a:	f11c 0201 	adds.w	r2, ip, #1
 801766e:	d45d      	bmi.n	801772c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8017670:	4596      	cmp	lr, r2
 8017672:	dd5b      	ble.n	801772c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8017674:	2800      	cmp	r0, #0
 8017676:	d059      	beq.n	801772c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8017678:	44c6      	add	lr, r8
 801767a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801767e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017682:	4413      	add	r3, r2
 8017684:	b280      	uxth	r0, r0
 8017686:	b2b2      	uxth	r2, r6
 8017688:	fb00 f602 	mul.w	r6, r0, r2
 801768c:	0100      	lsls	r0, r0, #4
 801768e:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8017692:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 8017696:	1b80      	subs	r0, r0, r6
 8017698:	fa1f fc82 	uxth.w	ip, r2
 801769c:	b282      	uxth	r2, r0
 801769e:	78a0      	ldrb	r0, [r4, #2]
 80176a0:	f897 e002 	ldrb.w	lr, [r7, #2]
 80176a4:	f897 9000 	ldrb.w	r9, [r7]
 80176a8:	787f      	ldrb	r7, [r7, #1]
 80176aa:	eba8 080c 	sub.w	r8, r8, ip
 80176ae:	fa1f f888 	uxth.w	r8, r8
 80176b2:	4350      	muls	r0, r2
 80176b4:	fb08 0e0e 	mla	lr, r8, lr, r0
 80176b8:	78a8      	ldrb	r0, [r5, #2]
 80176ba:	fb0c e000 	mla	r0, ip, r0, lr
 80176be:	f893 e002 	ldrb.w	lr, [r3, #2]
 80176c2:	fb06 0e0e 	mla	lr, r6, lr, r0
 80176c6:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 80176ca:	f894 e000 	ldrb.w	lr, [r4]
 80176ce:	fb02 fe0e 	mul.w	lr, r2, lr
 80176d2:	fb08 e909 	mla	r9, r8, r9, lr
 80176d6:	f895 e000 	ldrb.w	lr, [r5]
 80176da:	fb0c 990e 	mla	r9, ip, lr, r9
 80176de:	f893 e000 	ldrb.w	lr, [r3]
 80176e2:	785b      	ldrb	r3, [r3, #1]
 80176e4:	fb06 9e0e 	mla	lr, r6, lr, r9
 80176e8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80176ec:	ea4e 0e00 	orr.w	lr, lr, r0
 80176f0:	7860      	ldrb	r0, [r4, #1]
 80176f2:	4350      	muls	r0, r2
 80176f4:	786a      	ldrb	r2, [r5, #1]
 80176f6:	fb08 0007 	mla	r0, r8, r7, r0
 80176fa:	fb0c 0202 	mla	r2, ip, r2, r0
 80176fe:	fb06 2303 	mla	r3, r6, r3, r2
 8017702:	095b      	lsrs	r3, r3, #5
 8017704:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017708:	ea4e 0303 	orr.w	r3, lr, r3
 801770c:	800b      	strh	r3, [r1, #0]
 801770e:	b003      	add	sp, #12
 8017710:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017714:	af01      	add	r7, sp, #4
 8017716:	e78c      	b.n	8017632 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8017718:	ac01      	add	r4, sp, #4
 801771a:	4627      	mov	r7, r4
 801771c:	e795      	b.n	801764a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801771e:	ac01      	add	r4, sp, #4
 8017720:	e793      	b.n	801764a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8017722:	ad01      	add	r5, sp, #4
 8017724:	e7a1      	b.n	801766a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8017726:	ab01      	add	r3, sp, #4
 8017728:	461d      	mov	r5, r3
 801772a:	e7ab      	b.n	8017684 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801772c:	ab01      	add	r3, sp, #4
 801772e:	e7a9      	b.n	8017684 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08017730 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017730:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017734:	b08f      	sub	sp, #60	@ 0x3c
 8017736:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 801773a:	920c      	str	r2, [sp, #48]	@ 0x30
 801773c:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 801773e:	910a      	str	r1, [sp, #40]	@ 0x28
 8017740:	9306      	str	r3, [sp, #24]
 8017742:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 8017746:	900d      	str	r0, [sp, #52]	@ 0x34
 8017748:	6850      	ldr	r0, [r2, #4]
 801774a:	6812      	ldr	r2, [r2, #0]
 801774c:	fb00 1303 	mla	r3, r0, r3, r1
 8017750:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017754:	9307      	str	r3, [sp, #28]
 8017756:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8017758:	681b      	ldr	r3, [r3, #0]
 801775a:	9308      	str	r3, [sp, #32]
 801775c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801775e:	685c      	ldr	r4, [r3, #4]
 8017760:	3404      	adds	r4, #4
 8017762:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017764:	2b00      	cmp	r3, #0
 8017766:	dc03      	bgt.n	8017770 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8017768:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801776a:	2b00      	cmp	r3, #0
 801776c:	f340 81d6 	ble.w	8017b1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8017770:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8017772:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017776:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801777a:	1e48      	subs	r0, r1, #1
 801777c:	1e56      	subs	r6, r2, #1
 801777e:	9b06      	ldr	r3, [sp, #24]
 8017780:	2b00      	cmp	r3, #0
 8017782:	f340 80b7 	ble.w	80178f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8017786:	ea5f 472b 	movs.w	r7, fp, asr #16
 801778a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801778e:	d406      	bmi.n	801779e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017790:	4287      	cmp	r7, r0
 8017792:	da04      	bge.n	801779e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017794:	2b00      	cmp	r3, #0
 8017796:	db02      	blt.n	801779e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017798:	42b3      	cmp	r3, r6
 801779a:	f2c0 80ac 	blt.w	80178f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801779e:	3701      	adds	r7, #1
 80177a0:	f100 809d 	bmi.w	80178de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80177a4:	42b9      	cmp	r1, r7
 80177a6:	f2c0 809a 	blt.w	80178de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80177aa:	3301      	adds	r3, #1
 80177ac:	f100 8097 	bmi.w	80178de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80177b0:	429a      	cmp	r2, r3
 80177b2:	f2c0 8094 	blt.w	80178de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80177b6:	9b06      	ldr	r3, [sp, #24]
 80177b8:	930b      	str	r3, [sp, #44]	@ 0x2c
 80177ba:	9b07      	ldr	r3, [sp, #28]
 80177bc:	9309      	str	r3, [sp, #36]	@ 0x24
 80177be:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80177c0:	2b00      	cmp	r3, #0
 80177c2:	f340 80b5 	ble.w	8017930 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80177c6:	9820      	ldr	r0, [sp, #128]	@ 0x80
 80177c8:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80177ca:	68c7      	ldr	r7, [r0, #12]
 80177cc:	6892      	ldr	r2, [r2, #8]
 80177ce:	ea5f 402b 	movs.w	r0, fp, asr #16
 80177d2:	ea4f 4625 	mov.w	r6, r5, asr #16
 80177d6:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80177da:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80177de:	f100 80fb 	bmi.w	80179d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80177e2:	f102 3cff 	add.w	ip, r2, #4294967295
 80177e6:	4560      	cmp	r0, ip
 80177e8:	f280 80f6 	bge.w	80179d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80177ec:	2e00      	cmp	r6, #0
 80177ee:	f2c0 80f3 	blt.w	80179d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80177f2:	f107 3cff 	add.w	ip, r7, #4294967295
 80177f6:	4566      	cmp	r6, ip
 80177f8:	f280 80ee 	bge.w	80179d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80177fc:	b212      	sxth	r2, r2
 80177fe:	fb06 0002 	mla	r0, r6, r2, r0
 8017802:	9e08      	ldr	r6, [sp, #32]
 8017804:	1837      	adds	r7, r6, r0
 8017806:	5c30      	ldrb	r0, [r6, r0]
 8017808:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801780c:	eb04 0c08 	add.w	ip, r4, r8
 8017810:	2b00      	cmp	r3, #0
 8017812:	f000 80d3 	beq.w	80179bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8017816:	787e      	ldrb	r6, [r7, #1]
 8017818:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801781c:	4426      	add	r6, r4
 801781e:	2900      	cmp	r1, #0
 8017820:	f000 80d4 	beq.w	80179cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8017824:	18b8      	adds	r0, r7, r2
 8017826:	5cba      	ldrb	r2, [r7, r2]
 8017828:	7840      	ldrb	r0, [r0, #1]
 801782a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801782e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8017832:	4422      	add	r2, r4
 8017834:	4420      	add	r0, r4
 8017836:	b29b      	uxth	r3, r3
 8017838:	b289      	uxth	r1, r1
 801783a:	fb03 f901 	mul.w	r9, r3, r1
 801783e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8017842:	011b      	lsls	r3, r3, #4
 8017844:	b289      	uxth	r1, r1
 8017846:	78b7      	ldrb	r7, [r6, #2]
 8017848:	f89c a002 	ldrb.w	sl, [ip, #2]
 801784c:	f89c c001 	ldrb.w	ip, [ip, #1]
 8017850:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 8017854:	eba3 0309 	sub.w	r3, r3, r9
 8017858:	b29b      	uxth	r3, r3
 801785a:	ebae 0e01 	sub.w	lr, lr, r1
 801785e:	fa1f fe8e 	uxth.w	lr, lr
 8017862:	435f      	muls	r7, r3
 8017864:	fb0e 770a 	mla	r7, lr, sl, r7
 8017868:	f892 a002 	ldrb.w	sl, [r2, #2]
 801786c:	fb01 770a 	mla	r7, r1, sl, r7
 8017870:	f890 a002 	ldrb.w	sl, [r0, #2]
 8017874:	fb09 7a0a 	mla	sl, r9, sl, r7
 8017878:	f814 7008 	ldrb.w	r7, [r4, r8]
 801787c:	f896 8000 	ldrb.w	r8, [r6]
 8017880:	7876      	ldrb	r6, [r6, #1]
 8017882:	fb03 f808 	mul.w	r8, r3, r8
 8017886:	fb0e 8807 	mla	r8, lr, r7, r8
 801788a:	7817      	ldrb	r7, [r2, #0]
 801788c:	fb01 8807 	mla	r8, r1, r7, r8
 8017890:	7807      	ldrb	r7, [r0, #0]
 8017892:	fb09 8707 	mla	r7, r9, r7, r8
 8017896:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801789a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801789e:	ea47 070a 	orr.w	r7, r7, sl
 80178a2:	4373      	muls	r3, r6
 80178a4:	f892 a001 	ldrb.w	sl, [r2, #1]
 80178a8:	fb0e 330c 	mla	r3, lr, ip, r3
 80178ac:	fb01 310a 	mla	r1, r1, sl, r3
 80178b0:	f890 a001 	ldrb.w	sl, [r0, #1]
 80178b4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80178b6:	fb09 1a0a 	mla	sl, r9, sl, r1
 80178ba:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80178be:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80178c2:	ea47 070a 	orr.w	r7, r7, sl
 80178c6:	801f      	strh	r7, [r3, #0]
 80178c8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80178ca:	3302      	adds	r3, #2
 80178cc:	9309      	str	r3, [sp, #36]	@ 0x24
 80178ce:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80178d0:	449b      	add	fp, r3
 80178d2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80178d4:	441d      	add	r5, r3
 80178d6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80178d8:	3b01      	subs	r3, #1
 80178da:	930b      	str	r3, [sp, #44]	@ 0x2c
 80178dc:	e76f      	b.n	80177be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80178de:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80178e0:	449b      	add	fp, r3
 80178e2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80178e4:	441d      	add	r5, r3
 80178e6:	9b06      	ldr	r3, [sp, #24]
 80178e8:	3b01      	subs	r3, #1
 80178ea:	9306      	str	r3, [sp, #24]
 80178ec:	9b07      	ldr	r3, [sp, #28]
 80178ee:	3302      	adds	r3, #2
 80178f0:	9307      	str	r3, [sp, #28]
 80178f2:	e744      	b.n	801777e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 80178f4:	d023      	beq.n	801793e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 80178f6:	9b06      	ldr	r3, [sp, #24]
 80178f8:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 80178fa:	3b01      	subs	r3, #1
 80178fc:	fb00 b003 	mla	r0, r0, r3, fp
 8017900:	1400      	asrs	r0, r0, #16
 8017902:	f53f af58 	bmi.w	80177b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8017906:	3901      	subs	r1, #1
 8017908:	4288      	cmp	r0, r1
 801790a:	f6bf af54 	bge.w	80177b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801790e:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8017910:	fb01 5303 	mla	r3, r1, r3, r5
 8017914:	141b      	asrs	r3, r3, #16
 8017916:	f53f af4e 	bmi.w	80177b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801791a:	3a01      	subs	r2, #1
 801791c:	4293      	cmp	r3, r2
 801791e:	f6bf af4a 	bge.w	80177b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8017922:	9b06      	ldr	r3, [sp, #24]
 8017924:	9309      	str	r3, [sp, #36]	@ 0x24
 8017926:	9b07      	ldr	r3, [sp, #28]
 8017928:	930b      	str	r3, [sp, #44]	@ 0x2c
 801792a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801792c:	2b00      	cmp	r3, #0
 801792e:	dc70      	bgt.n	8017a12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8017930:	9b06      	ldr	r3, [sp, #24]
 8017932:	9a07      	ldr	r2, [sp, #28]
 8017934:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017938:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801793c:	9307      	str	r3, [sp, #28]
 801793e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017940:	2b00      	cmp	r3, #0
 8017942:	f340 80eb 	ble.w	8017b1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8017946:	ee30 0a04 	vadd.f32	s0, s0, s8
 801794a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801794e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8017952:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8017954:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017958:	ee31 1a05 	vadd.f32	s2, s2, s10
 801795c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017960:	eef0 6a62 	vmov.f32	s13, s5
 8017964:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017968:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801796c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017970:	ee16 ba90 	vmov	fp, s13
 8017974:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017978:	eef0 6a43 	vmov.f32	s13, s6
 801797c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017980:	ee12 2a90 	vmov	r2, s5
 8017984:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017988:	fb92 f3f3 	sdiv	r3, r2, r3
 801798c:	ee13 2a10 	vmov	r2, s6
 8017990:	931b      	str	r3, [sp, #108]	@ 0x6c
 8017992:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8017994:	fb92 f3f3 	sdiv	r3, r2, r3
 8017998:	931c      	str	r3, [sp, #112]	@ 0x70
 801799a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801799c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801799e:	3b01      	subs	r3, #1
 80179a0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80179a4:	930a      	str	r3, [sp, #40]	@ 0x28
 80179a6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80179a8:	bf08      	it	eq
 80179aa:	4613      	moveq	r3, r2
 80179ac:	ee16 5a90 	vmov	r5, s13
 80179b0:	9306      	str	r3, [sp, #24]
 80179b2:	eeb0 3a67 	vmov.f32	s6, s15
 80179b6:	eef0 2a47 	vmov.f32	s5, s14
 80179ba:	e6d2      	b.n	8017762 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80179bc:	b149      	cbz	r1, 80179d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80179be:	5cba      	ldrb	r2, [r7, r2]
 80179c0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80179c4:	4422      	add	r2, r4
 80179c6:	4660      	mov	r0, ip
 80179c8:	4666      	mov	r6, ip
 80179ca:	e734      	b.n	8017836 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80179cc:	4660      	mov	r0, ip
 80179ce:	4662      	mov	r2, ip
 80179d0:	e731      	b.n	8017836 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80179d2:	4660      	mov	r0, ip
 80179d4:	4662      	mov	r2, ip
 80179d6:	e7f7      	b.n	80179c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 80179d8:	f110 0c01 	adds.w	ip, r0, #1
 80179dc:	f53f af74 	bmi.w	80178c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80179e0:	4562      	cmp	r2, ip
 80179e2:	f6ff af71 	blt.w	80178c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80179e6:	f116 0c01 	adds.w	ip, r6, #1
 80179ea:	f53f af6d 	bmi.w	80178c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80179ee:	4567      	cmp	r7, ip
 80179f0:	f6ff af6a 	blt.w	80178c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80179f4:	b23f      	sxth	r7, r7
 80179f6:	b212      	sxth	r2, r2
 80179f8:	e9cd 3104 	strd	r3, r1, [sp, #16]
 80179fc:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8017a00:	9200      	str	r2, [sp, #0]
 8017a02:	9701      	str	r7, [sp, #4]
 8017a04:	4623      	mov	r3, r4
 8017a06:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017a0a:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8017a0c:	f7ff fde6 	bl	80175dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8017a10:	e75a      	b.n	80178c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017a12:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8017a14:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8017a18:	ea4f 462b 	mov.w	r6, fp, asr #16
 8017a1c:	1428      	asrs	r0, r5, #16
 8017a1e:	fb02 6000 	mla	r0, r2, r0, r6
 8017a22:	9e08      	ldr	r6, [sp, #32]
 8017a24:	f816 8000 	ldrb.w	r8, [r6, r0]
 8017a28:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8017a2c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8017a30:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8017a34:	1837      	adds	r7, r6, r0
 8017a36:	eb04 0c08 	add.w	ip, r4, r8
 8017a3a:	2b00      	cmp	r3, #0
 8017a3c:	d060      	beq.n	8017b00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8017a3e:	787e      	ldrb	r6, [r7, #1]
 8017a40:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8017a44:	4426      	add	r6, r4
 8017a46:	2900      	cmp	r1, #0
 8017a48:	d062      	beq.n	8017b10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8017a4a:	18b8      	adds	r0, r7, r2
 8017a4c:	5cba      	ldrb	r2, [r7, r2]
 8017a4e:	7840      	ldrb	r0, [r0, #1]
 8017a50:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017a54:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8017a58:	4422      	add	r2, r4
 8017a5a:	4420      	add	r0, r4
 8017a5c:	b29b      	uxth	r3, r3
 8017a5e:	b289      	uxth	r1, r1
 8017a60:	fb03 f901 	mul.w	r9, r3, r1
 8017a64:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8017a68:	011b      	lsls	r3, r3, #4
 8017a6a:	b289      	uxth	r1, r1
 8017a6c:	78b7      	ldrb	r7, [r6, #2]
 8017a6e:	f89c a002 	ldrb.w	sl, [ip, #2]
 8017a72:	f89c c001 	ldrb.w	ip, [ip, #1]
 8017a76:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 8017a7a:	eba3 0309 	sub.w	r3, r3, r9
 8017a7e:	b29b      	uxth	r3, r3
 8017a80:	ebae 0e01 	sub.w	lr, lr, r1
 8017a84:	fa1f fe8e 	uxth.w	lr, lr
 8017a88:	435f      	muls	r7, r3
 8017a8a:	fb0e 770a 	mla	r7, lr, sl, r7
 8017a8e:	f892 a002 	ldrb.w	sl, [r2, #2]
 8017a92:	fb01 770a 	mla	r7, r1, sl, r7
 8017a96:	f890 a002 	ldrb.w	sl, [r0, #2]
 8017a9a:	fb09 7a0a 	mla	sl, r9, sl, r7
 8017a9e:	f814 7008 	ldrb.w	r7, [r4, r8]
 8017aa2:	f896 8000 	ldrb.w	r8, [r6]
 8017aa6:	7876      	ldrb	r6, [r6, #1]
 8017aa8:	fb03 f808 	mul.w	r8, r3, r8
 8017aac:	fb0e 8807 	mla	r8, lr, r7, r8
 8017ab0:	7817      	ldrb	r7, [r2, #0]
 8017ab2:	fb01 8807 	mla	r8, r1, r7, r8
 8017ab6:	7807      	ldrb	r7, [r0, #0]
 8017ab8:	fb09 8707 	mla	r7, r9, r7, r8
 8017abc:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 8017ac0:	4373      	muls	r3, r6
 8017ac2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017ac6:	7856      	ldrb	r6, [r2, #1]
 8017ac8:	ea47 070a 	orr.w	r7, r7, sl
 8017acc:	fb0e 330c 	mla	r3, lr, ip, r3
 8017ad0:	f890 a001 	ldrb.w	sl, [r0, #1]
 8017ad4:	fb01 3306 	mla	r3, r1, r6, r3
 8017ad8:	fb09 3a0a 	mla	sl, r9, sl, r3
 8017adc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017ae0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017ae2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8017ae6:	ea47 070a 	orr.w	r7, r7, sl
 8017aea:	f823 7b02 	strh.w	r7, [r3], #2
 8017aee:	930b      	str	r3, [sp, #44]	@ 0x2c
 8017af0:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8017af2:	449b      	add	fp, r3
 8017af4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8017af6:	441d      	add	r5, r3
 8017af8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017afa:	3b01      	subs	r3, #1
 8017afc:	9309      	str	r3, [sp, #36]	@ 0x24
 8017afe:	e714      	b.n	801792a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8017b00:	b149      	cbz	r1, 8017b16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8017b02:	5cba      	ldrb	r2, [r7, r2]
 8017b04:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017b08:	4422      	add	r2, r4
 8017b0a:	4660      	mov	r0, ip
 8017b0c:	4666      	mov	r6, ip
 8017b0e:	e7a5      	b.n	8017a5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8017b10:	4660      	mov	r0, ip
 8017b12:	4662      	mov	r2, ip
 8017b14:	e7a2      	b.n	8017a5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8017b16:	4660      	mov	r0, ip
 8017b18:	4662      	mov	r2, ip
 8017b1a:	e7f7      	b.n	8017b0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8017b1c:	b00f      	add	sp, #60	@ 0x3c
 8017b1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017b22 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8017b22:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b26:	b085      	sub	sp, #20
 8017b28:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 8017b2c:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 8017b30:	9102      	str	r1, [sp, #8]
 8017b32:	2c00      	cmp	r4, #0
 8017b34:	fb04 710c 	mla	r1, r4, ip, r7
 8017b38:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 8017b3c:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 8017b40:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 8017b44:	eb02 0e01 	add.w	lr, r2, r1
 8017b48:	f2c0 8122 	blt.w	8017d90 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8017b4c:	45a0      	cmp	r8, r4
 8017b4e:	f340 811f 	ble.w	8017d90 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8017b52:	2f00      	cmp	r7, #0
 8017b54:	f2c0 811a 	blt.w	8017d8c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8017b58:	45bc      	cmp	ip, r7
 8017b5a:	f340 8117 	ble.w	8017d8c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8017b5e:	5c52      	ldrb	r2, [r2, r1]
 8017b60:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8017b64:	1c7a      	adds	r2, r7, #1
 8017b66:	f100 8116 	bmi.w	8017d96 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8017b6a:	4594      	cmp	ip, r2
 8017b6c:	f340 8113 	ble.w	8017d96 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8017b70:	2e00      	cmp	r6, #0
 8017b72:	f000 8112 	beq.w	8017d9a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8017b76:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8017b7a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8017b7e:	3401      	adds	r4, #1
 8017b80:	f100 810f 	bmi.w	8017da2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8017b84:	45a0      	cmp	r8, r4
 8017b86:	f340 810c 	ble.w	8017da2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8017b8a:	2800      	cmp	r0, #0
 8017b8c:	f000 810c 	beq.w	8017da8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8017b90:	2f00      	cmp	r7, #0
 8017b92:	f2c0 8104 	blt.w	8017d9e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8017b96:	45bc      	cmp	ip, r7
 8017b98:	f340 8101 	ble.w	8017d9e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8017b9c:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8017ba0:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8017ba4:	3701      	adds	r7, #1
 8017ba6:	f100 8102 	bmi.w	8017dae <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8017baa:	45bc      	cmp	ip, r7
 8017bac:	f340 80ff 	ble.w	8017dae <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8017bb0:	2e00      	cmp	r6, #0
 8017bb2:	f000 80fe 	beq.w	8017db2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8017bb6:	44f4      	add	ip, lr
 8017bb8:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8017bbc:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8017bc0:	b2b6      	uxth	r6, r6
 8017bc2:	b280      	uxth	r0, r0
 8017bc4:	fb00 fe06 	mul.w	lr, r0, r6
 8017bc8:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8017bcc:	0136      	lsls	r6, r6, #4
 8017bce:	eba6 070e 	sub.w	r7, r6, lr
 8017bd2:	b280      	uxth	r0, r0
 8017bd4:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 8017bd8:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8017bdc:	b2bf      	uxth	r7, r7
 8017bde:	1a1b      	subs	r3, r3, r0
 8017be0:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8017be4:	b29b      	uxth	r3, r3
 8017be6:	fb0a f607 	mul.w	r6, sl, r7
 8017bea:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8017bee:	fb0b 6603 	mla	r6, fp, r3, r6
 8017bf2:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8017bf6:	fb00 6609 	mla	r6, r0, r9, r6
 8017bfa:	fb0e 6608 	mla	r6, lr, r8, r6
 8017bfe:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8017c02:	9600      	str	r6, [sp, #0]
 8017c04:	2e00      	cmp	r6, #0
 8017c06:	f000 80be 	beq.w	8017d86 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8017c0a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8017c0e:	fb0b fc0c 	mul.w	ip, fp, ip
 8017c12:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8017c16:	fb0b f505 	mul.w	r5, fp, r5
 8017c1a:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8017c1e:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8017c22:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8017c26:	44dc      	add	ip, fp
 8017c28:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017c2c:	9501      	str	r5, [sp, #4]
 8017c2e:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8017c32:	9503      	str	r5, [sp, #12]
 8017c34:	9d01      	ldr	r5, [sp, #4]
 8017c36:	9e02      	ldr	r6, [sp, #8]
 8017c38:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 8017c3c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017c40:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 8017c44:	fb0a fc0c 	mul.w	ip, sl, ip
 8017c48:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8017c4c:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8017c50:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8017c54:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8017c58:	4465      	add	r5, ip
 8017c5a:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8017c5e:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8017c62:	fb09 fc0c 	mul.w	ip, r9, ip
 8017c66:	fb09 f904 	mul.w	r9, r9, r4
 8017c6a:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8017c6e:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8017c72:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8017c76:	fb08 f404 	mul.w	r4, r8, r4
 8017c7a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8017c7e:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8017c82:	fb08 f802 	mul.w	r8, r8, r2
 8017c86:	fb0a fa01 	mul.w	sl, sl, r1
 8017c8a:	0a22      	lsrs	r2, r4, #8
 8017c8c:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8017c90:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8017c94:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 8017c98:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8017c9c:	4414      	add	r4, r2
 8017c9e:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8017ca2:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8017ca6:	0a2d      	lsrs	r5, r5, #8
 8017ca8:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8017cac:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8017cb0:	9a03      	ldr	r2, [sp, #12]
 8017cb2:	8836      	ldrh	r6, [r6, #0]
 8017cb4:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8017cb8:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8017cbc:	437d      	muls	r5, r7
 8017cbe:	4461      	add	r1, ip
 8017cc0:	0a24      	lsrs	r4, r4, #8
 8017cc2:	fb02 5503 	mla	r5, r2, r3, r5
 8017cc6:	0a09      	lsrs	r1, r1, #8
 8017cc8:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8017ccc:	fb04 540e 	mla	r4, r4, lr, r5
 8017cd0:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8017cd4:	fb01 4100 	mla	r1, r1, r0, r4
 8017cd8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017cdc:	0a09      	lsrs	r1, r1, #8
 8017cde:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8017ce2:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8017ce6:	fb07 f70a 	mul.w	r7, r7, sl
 8017cea:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8017cee:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8017cf2:	fb03 7101 	mla	r1, r3, r1, r7
 8017cf6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017cfa:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8017cfe:	fb0e 1e08 	mla	lr, lr, r8, r1
 8017d02:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8017d06:	fb00 e101 	mla	r1, r0, r1, lr
 8017d0a:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 8017d0e:	9a00      	ldr	r2, [sp, #0]
 8017d10:	b287      	uxth	r7, r0
 8017d12:	437a      	muls	r2, r7
 8017d14:	0a09      	lsrs	r1, r1, #8
 8017d16:	1c53      	adds	r3, r2, #1
 8017d18:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8017d1c:	4321      	orrs	r1, r4
 8017d1e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8017d22:	1235      	asrs	r5, r6, #8
 8017d24:	0c0a      	lsrs	r2, r1, #16
 8017d26:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8017d2a:	b2db      	uxtb	r3, r3
 8017d2c:	fb12 f207 	smulbb	r2, r2, r7
 8017d30:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8017d34:	fb05 2503 	mla	r5, r5, r3, r2
 8017d38:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8017d3c:	10f2      	asrs	r2, r6, #3
 8017d3e:	b2c8      	uxtb	r0, r1
 8017d40:	00f6      	lsls	r6, r6, #3
 8017d42:	fb14 f407 	smulbb	r4, r4, r7
 8017d46:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8017d4a:	b2f6      	uxtb	r6, r6
 8017d4c:	fb10 f007 	smulbb	r0, r0, r7
 8017d50:	fb02 4203 	mla	r2, r2, r3, r4
 8017d54:	b2ad      	uxth	r5, r5
 8017d56:	fb06 0303 	mla	r3, r6, r3, r0
 8017d5a:	b299      	uxth	r1, r3
 8017d5c:	b294      	uxth	r4, r2
 8017d5e:	1c6b      	adds	r3, r5, #1
 8017d60:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8017d64:	1c62      	adds	r2, r4, #1
 8017d66:	1c4b      	adds	r3, r1, #1
 8017d68:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8017d6c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8017d70:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8017d74:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8017d78:	0952      	lsrs	r2, r2, #5
 8017d7a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8017d7e:	432b      	orrs	r3, r5
 8017d80:	4313      	orrs	r3, r2
 8017d82:	9a02      	ldr	r2, [sp, #8]
 8017d84:	8013      	strh	r3, [r2, #0]
 8017d86:	b005      	add	sp, #20
 8017d88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017d8c:	2500      	movs	r5, #0
 8017d8e:	e6e9      	b.n	8017b64 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8017d90:	2100      	movs	r1, #0
 8017d92:	460d      	mov	r5, r1
 8017d94:	e6f3      	b.n	8017b7e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8017d96:	2100      	movs	r1, #0
 8017d98:	e6f1      	b.n	8017b7e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8017d9a:	4631      	mov	r1, r6
 8017d9c:	e6ef      	b.n	8017b7e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8017d9e:	2400      	movs	r4, #0
 8017da0:	e700      	b.n	8017ba4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8017da2:	2200      	movs	r2, #0
 8017da4:	4614      	mov	r4, r2
 8017da6:	e70b      	b.n	8017bc0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8017da8:	4602      	mov	r2, r0
 8017daa:	4604      	mov	r4, r0
 8017dac:	e708      	b.n	8017bc0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8017dae:	2200      	movs	r2, #0
 8017db0:	e706      	b.n	8017bc0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8017db2:	4632      	mov	r2, r6
 8017db4:	e704      	b.n	8017bc0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08017db6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017db6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017dba:	b09f      	sub	sp, #124	@ 0x7c
 8017dbc:	921b      	str	r2, [sp, #108]	@ 0x6c
 8017dbe:	9309      	str	r3, [sp, #36]	@ 0x24
 8017dc0:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 8017dc2:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 8017dc6:	931c      	str	r3, [sp, #112]	@ 0x70
 8017dc8:	9119      	str	r1, [sp, #100]	@ 0x64
 8017dca:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 8017dce:	901d      	str	r0, [sp, #116]	@ 0x74
 8017dd0:	6850      	ldr	r0, [r2, #4]
 8017dd2:	6812      	ldr	r2, [r2, #0]
 8017dd4:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 8017dd6:	fb00 1303 	mla	r3, r0, r3, r1
 8017dda:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017dde:	930c      	str	r3, [sp, #48]	@ 0x30
 8017de0:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8017de2:	681b      	ldr	r3, [r3, #0]
 8017de4:	9312      	str	r3, [sp, #72]	@ 0x48
 8017de6:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8017de8:	685e      	ldr	r6, [r3, #4]
 8017dea:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 8017dee:	930d      	str	r3, [sp, #52]	@ 0x34
 8017df0:	3604      	adds	r6, #4
 8017df2:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8017df4:	2b00      	cmp	r3, #0
 8017df6:	dc03      	bgt.n	8017e00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8017df8:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8017dfa:	2b00      	cmp	r3, #0
 8017dfc:	f340 8388 	ble.w	8018510 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8017e00:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8017e02:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017e06:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017e0a:	1e48      	subs	r0, r1, #1
 8017e0c:	1e57      	subs	r7, r2, #1
 8017e0e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017e10:	2b00      	cmp	r3, #0
 8017e12:	f340 8195 	ble.w	8018140 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8017e16:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8017e18:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8017e1c:	ea4f 4325 	mov.w	r3, r5, asr #16
 8017e20:	d406      	bmi.n	8017e30 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8017e22:	4584      	cmp	ip, r0
 8017e24:	da04      	bge.n	8017e30 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8017e26:	2b00      	cmp	r3, #0
 8017e28:	db02      	blt.n	8017e30 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8017e2a:	42bb      	cmp	r3, r7
 8017e2c:	f2c0 8189 	blt.w	8018142 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8017e30:	f11c 0c01 	adds.w	ip, ip, #1
 8017e34:	f100 8177 	bmi.w	8018126 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8017e38:	4561      	cmp	r1, ip
 8017e3a:	f2c0 8174 	blt.w	8018126 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8017e3e:	3301      	adds	r3, #1
 8017e40:	f100 8171 	bmi.w	8018126 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8017e44:	429a      	cmp	r2, r3
 8017e46:	f2c0 816e 	blt.w	8018126 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8017e4a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017e4c:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8017e4e:	931a      	str	r3, [sp, #104]	@ 0x68
 8017e50:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8017e52:	2b00      	cmp	r3, #0
 8017e54:	f340 8193 	ble.w	801817e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8017e58:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8017e5a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017e5e:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8017e60:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8017e64:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8017e66:	141b      	asrs	r3, r3, #16
 8017e68:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8017e6c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8017e70:	f100 81d6 	bmi.w	8018220 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8017e74:	f100 38ff 	add.w	r8, r0, #4294967295
 8017e78:	4543      	cmp	r3, r8
 8017e7a:	f280 81d1 	bge.w	8018220 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8017e7e:	f1bc 0f00 	cmp.w	ip, #0
 8017e82:	f2c0 81cd 	blt.w	8018220 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8017e86:	f10e 38ff 	add.w	r8, lr, #4294967295
 8017e8a:	45c4      	cmp	ip, r8
 8017e8c:	f280 81c8 	bge.w	8018220 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8017e90:	b200      	sxth	r0, r0
 8017e92:	fb0c 3300 	mla	r3, ip, r0, r3
 8017e96:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8017e98:	eb04 0803 	add.w	r8, r4, r3
 8017e9c:	5ce3      	ldrb	r3, [r4, r3]
 8017e9e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8017ea2:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8017ea6:	2a00      	cmp	r2, #0
 8017ea8:	f000 81af 	beq.w	801820a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8017eac:	f898 c001 	ldrb.w	ip, [r8, #1]
 8017eb0:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8017eb4:	940e      	str	r4, [sp, #56]	@ 0x38
 8017eb6:	0e24      	lsrs	r4, r4, #24
 8017eb8:	9415      	str	r4, [sp, #84]	@ 0x54
 8017eba:	b179      	cbz	r1, 8017edc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8017ebc:	eb08 0c00 	add.w	ip, r8, r0
 8017ec0:	f818 0000 	ldrb.w	r0, [r8, r0]
 8017ec4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8017ec8:	900a      	str	r0, [sp, #40]	@ 0x28
 8017eca:	0e00      	lsrs	r0, r0, #24
 8017ecc:	9013      	str	r0, [sp, #76]	@ 0x4c
 8017ece:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8017ed2:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8017ed6:	900f      	str	r0, [sp, #60]	@ 0x3c
 8017ed8:	0e00      	lsrs	r0, r0, #24
 8017eda:	9016      	str	r0, [sp, #88]	@ 0x58
 8017edc:	b292      	uxth	r2, r2
 8017ede:	b289      	uxth	r1, r1
 8017ee0:	fb02 f901 	mul.w	r9, r2, r1
 8017ee4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8017ee8:	0112      	lsls	r2, r2, #4
 8017eea:	eba2 0809 	sub.w	r8, r2, r9
 8017eee:	b289      	uxth	r1, r1
 8017ef0:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8017ef4:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8017ef6:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8017ef8:	fa1f f888 	uxth.w	r8, r8
 8017efc:	1a52      	subs	r2, r2, r1
 8017efe:	b292      	uxth	r2, r2
 8017f00:	fb08 f000 	mul.w	r0, r8, r0
 8017f04:	fb02 000e 	mla	r0, r2, lr, r0
 8017f08:	fb01 0004 	mla	r0, r1, r4, r0
 8017f0c:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8017f0e:	fb09 0004 	mla	r0, r9, r4, r0
 8017f12:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8017f16:	2800      	cmp	r0, #0
 8017f18:	f000 80fa 	beq.w	8018110 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8017f1c:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8017f20:	d01b      	beq.n	8017f5a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8017f22:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8017f26:	fb0e fa0a 	mul.w	sl, lr, sl
 8017f2a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8017f2e:	fb0e fe03 	mul.w	lr, lr, r3
 8017f32:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8017f36:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8017f3a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8017f3e:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8017f42:	4453      	add	r3, sl
 8017f44:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8017f48:	0a1b      	lsrs	r3, r3, #8
 8017f4a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017f4e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8017f52:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8017f56:	ea43 030c 	orr.w	r3, r3, ip
 8017f5a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8017f5c:	2cff      	cmp	r4, #255	@ 0xff
 8017f5e:	d021      	beq.n	8017fa4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8017f60:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8017f62:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8017f66:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8017f68:	fb04 fb0b 	mul.w	fp, r4, fp
 8017f6c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8017f6e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8017f72:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8017f74:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017f78:	fb04 fa0a 	mul.w	sl, r4, sl
 8017f7c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8017f80:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8017f84:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8017f88:	44de      	add	lr, fp
 8017f8a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017f8e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017f92:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017f96:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8017f9a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8017f9e:	ea4e 040a 	orr.w	r4, lr, sl
 8017fa2:	940e      	str	r4, [sp, #56]	@ 0x38
 8017fa4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8017fa6:	2cff      	cmp	r4, #255	@ 0xff
 8017fa8:	d021      	beq.n	8017fee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8017faa:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8017fac:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8017fb0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8017fb2:	fb04 fb0b 	mul.w	fp, r4, fp
 8017fb6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8017fb8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8017fbc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8017fbe:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017fc2:	fb04 fa0a 	mul.w	sl, r4, sl
 8017fc6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8017fca:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8017fce:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8017fd2:	44de      	add	lr, fp
 8017fd4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017fd8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017fdc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017fe0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8017fe4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8017fe8:	ea4e 040a 	orr.w	r4, lr, sl
 8017fec:	940a      	str	r4, [sp, #40]	@ 0x28
 8017fee:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8017ff0:	2cff      	cmp	r4, #255	@ 0xff
 8017ff2:	d021      	beq.n	8018038 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8017ff4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8017ff6:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8017ffa:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8017ffc:	fb04 fb0b 	mul.w	fp, r4, fp
 8018000:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8018002:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8018006:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8018008:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801800c:	fb04 fa0a 	mul.w	sl, r4, sl
 8018010:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8018014:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8018018:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801801c:	44de      	add	lr, fp
 801801e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018022:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018026:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801802a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801802e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8018032:	ea4e 040a 	orr.w	r4, lr, sl
 8018036:	940f      	str	r4, [sp, #60]	@ 0x3c
 8018038:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801803a:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801803e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8018040:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 8018044:	fb08 fc0c 	mul.w	ip, r8, ip
 8018048:	fb02 cc0e 	mla	ip, r2, lr, ip
 801804c:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8018050:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8018052:	fb01 cc0e 	mla	ip, r1, lr, ip
 8018056:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801805a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801805c:	fb09 cc0e 	mla	ip, r9, lr, ip
 8018060:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 8018064:	fb08 f80e 	mul.w	r8, r8, lr
 8018068:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801806c:	fb02 8303 	mla	r3, r2, r3, r8
 8018070:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8018072:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8018074:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8018078:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801807a:	fb01 330a 	mla	r3, r1, sl, r3
 801807e:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 8018082:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8018084:	fb09 3901 	mla	r9, r9, r1, r3
 8018088:	4342      	muls	r2, r0
 801808a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801808e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018092:	883b      	ldrh	r3, [r7, #0]
 8018094:	1c50      	adds	r0, r2, #1
 8018096:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801809a:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801809e:	ea4c 0c09 	orr.w	ip, ip, r9
 80180a2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80180a6:	1219      	asrs	r1, r3, #8
 80180a8:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80180ac:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80180b0:	b2c0      	uxtb	r0, r0
 80180b2:	fb12 f204 	smulbb	r2, r2, r4
 80180b6:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80180ba:	fb01 2100 	mla	r1, r1, r0, r2
 80180be:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80180c2:	10da      	asrs	r2, r3, #3
 80180c4:	fa5f fc8c 	uxtb.w	ip, ip
 80180c8:	00db      	lsls	r3, r3, #3
 80180ca:	fb1c fc04 	smulbb	ip, ip, r4
 80180ce:	b2db      	uxtb	r3, r3
 80180d0:	b289      	uxth	r1, r1
 80180d2:	fb03 c300 	mla	r3, r3, r0, ip
 80180d6:	fa1f fc83 	uxth.w	ip, r3
 80180da:	1c4b      	adds	r3, r1, #1
 80180dc:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80180e0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80180e4:	fb1e fe04 	smulbb	lr, lr, r4
 80180e8:	f10c 0301 	add.w	r3, ip, #1
 80180ec:	fb02 e200 	mla	r2, r2, r0, lr
 80180f0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80180f4:	b292      	uxth	r2, r2
 80180f6:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 80180fa:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80180fe:	430b      	orrs	r3, r1
 8018100:	1c51      	adds	r1, r2, #1
 8018102:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8018106:	0952      	lsrs	r2, r2, #5
 8018108:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801810c:	4313      	orrs	r3, r2
 801810e:	803b      	strh	r3, [r7, #0]
 8018110:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8018112:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8018114:	441a      	add	r2, r3
 8018116:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8018118:	9229      	str	r2, [sp, #164]	@ 0xa4
 801811a:	441d      	add	r5, r3
 801811c:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801811e:	3b01      	subs	r3, #1
 8018120:	3702      	adds	r7, #2
 8018122:	931a      	str	r3, [sp, #104]	@ 0x68
 8018124:	e694      	b.n	8017e50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018126:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8018128:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801812a:	441c      	add	r4, r3
 801812c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801812e:	9429      	str	r4, [sp, #164]	@ 0xa4
 8018130:	441d      	add	r5, r3
 8018132:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018134:	3b01      	subs	r3, #1
 8018136:	9309      	str	r3, [sp, #36]	@ 0x24
 8018138:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801813a:	3302      	adds	r3, #2
 801813c:	930c      	str	r3, [sp, #48]	@ 0x30
 801813e:	e666      	b.n	8017e0e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8018140:	d024      	beq.n	801818c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8018142:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018144:	982b      	ldr	r0, [sp, #172]	@ 0xac
 8018146:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8018148:	3b01      	subs	r3, #1
 801814a:	fb00 4003 	mla	r0, r0, r3, r4
 801814e:	1400      	asrs	r0, r0, #16
 8018150:	f53f ae7b 	bmi.w	8017e4a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8018154:	3901      	subs	r1, #1
 8018156:	4288      	cmp	r0, r1
 8018158:	f6bf ae77 	bge.w	8017e4a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801815c:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 801815e:	fb01 5303 	mla	r3, r1, r3, r5
 8018162:	141b      	asrs	r3, r3, #16
 8018164:	f53f ae71 	bmi.w	8017e4a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8018168:	3a01      	subs	r2, #1
 801816a:	4293      	cmp	r3, r2
 801816c:	f6bf ae6d 	bge.w	8017e4a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8018170:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8018174:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 8018178:	f1bb 0f00 	cmp.w	fp, #0
 801817c:	dc70      	bgt.n	8018260 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801817e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018180:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018184:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018186:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801818a:	930c      	str	r3, [sp, #48]	@ 0x30
 801818c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801818e:	2b00      	cmp	r3, #0
 8018190:	f340 81be 	ble.w	8018510 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8018194:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018198:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801819c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80181a0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80181a2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80181a6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80181aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80181ae:	eef0 6a62 	vmov.f32	s13, s5
 80181b2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80181b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80181ba:	ee77 2a62 	vsub.f32	s5, s14, s5
 80181be:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 80181c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80181c6:	eef0 6a43 	vmov.f32	s13, s6
 80181ca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80181ce:	ee12 2a90 	vmov	r2, s5
 80181d2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80181d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80181da:	ee13 2a10 	vmov	r2, s6
 80181de:	932b      	str	r3, [sp, #172]	@ 0xac
 80181e0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80181e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80181e6:	932c      	str	r3, [sp, #176]	@ 0xb0
 80181e8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80181ea:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 80181ec:	3b01      	subs	r3, #1
 80181ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80181f2:	9319      	str	r3, [sp, #100]	@ 0x64
 80181f4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80181f6:	bf08      	it	eq
 80181f8:	4613      	moveq	r3, r2
 80181fa:	ee16 5a90 	vmov	r5, s13
 80181fe:	9309      	str	r3, [sp, #36]	@ 0x24
 8018200:	eeb0 3a67 	vmov.f32	s6, s15
 8018204:	eef0 2a47 	vmov.f32	s5, s14
 8018208:	e5f3      	b.n	8017df2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801820a:	2900      	cmp	r1, #0
 801820c:	f43f ae66 	beq.w	8017edc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8018210:	f818 0000 	ldrb.w	r0, [r8, r0]
 8018214:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8018218:	900a      	str	r0, [sp, #40]	@ 0x28
 801821a:	0e00      	lsrs	r0, r0, #24
 801821c:	9013      	str	r0, [sp, #76]	@ 0x4c
 801821e:	e65d      	b.n	8017edc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8018220:	f113 0801 	adds.w	r8, r3, #1
 8018224:	f53f af74 	bmi.w	8018110 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8018228:	4540      	cmp	r0, r8
 801822a:	f6ff af71 	blt.w	8018110 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801822e:	f11c 0801 	adds.w	r8, ip, #1
 8018232:	f53f af6d 	bmi.w	8018110 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8018236:	45c6      	cmp	lr, r8
 8018238:	f6ff af6a 	blt.w	8018110 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801823c:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 801823e:	9302      	str	r3, [sp, #8]
 8018240:	b200      	sxth	r0, r0
 8018242:	fa0f f38e 	sxth.w	r3, lr
 8018246:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801824a:	e9cd c203 	strd	ip, r2, [sp, #12]
 801824e:	9301      	str	r3, [sp, #4]
 8018250:	9000      	str	r0, [sp, #0]
 8018252:	4633      	mov	r3, r6
 8018254:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8018256:	981d      	ldr	r0, [sp, #116]	@ 0x74
 8018258:	4639      	mov	r1, r7
 801825a:	f7ff fc62 	bl	8017b22 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801825e:	e757      	b.n	8018110 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8018260:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8018262:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8018264:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018268:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801826a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801826e:	1427      	asrs	r7, r4, #16
 8018270:	142b      	asrs	r3, r5, #16
 8018272:	fb01 7303 	mla	r3, r1, r3, r7
 8018276:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8018278:	18e7      	adds	r7, r4, r3
 801827a:	5ce3      	ldrb	r3, [r4, r3]
 801827c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8018280:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8018284:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8018288:	2a00      	cmp	r2, #0
 801828a:	f000 8137 	beq.w	80184fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801828e:	f897 e001 	ldrb.w	lr, [r7, #1]
 8018292:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8018296:	9410      	str	r4, [sp, #64]	@ 0x40
 8018298:	0e24      	lsrs	r4, r4, #24
 801829a:	9417      	str	r4, [sp, #92]	@ 0x5c
 801829c:	b170      	cbz	r0, 80182bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801829e:	eb07 0e01 	add.w	lr, r7, r1
 80182a2:	5c79      	ldrb	r1, [r7, r1]
 80182a4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80182a8:	910b      	str	r1, [sp, #44]	@ 0x2c
 80182aa:	0e09      	lsrs	r1, r1, #24
 80182ac:	9114      	str	r1, [sp, #80]	@ 0x50
 80182ae:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80182b2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80182b6:	9111      	str	r1, [sp, #68]	@ 0x44
 80182b8:	0e09      	lsrs	r1, r1, #24
 80182ba:	9118      	str	r1, [sp, #96]	@ 0x60
 80182bc:	b292      	uxth	r2, r2
 80182be:	b280      	uxth	r0, r0
 80182c0:	fb02 f800 	mul.w	r8, r2, r0
 80182c4:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80182c8:	0112      	lsls	r2, r2, #4
 80182ca:	eba2 0e08 	sub.w	lr, r2, r8
 80182ce:	b280      	uxth	r0, r0
 80182d0:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 80182d4:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 80182d6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80182d8:	fa1f fe8e 	uxth.w	lr, lr
 80182dc:	1a12      	subs	r2, r2, r0
 80182de:	b292      	uxth	r2, r2
 80182e0:	fb0e f101 	mul.w	r1, lr, r1
 80182e4:	fb02 110c 	mla	r1, r2, ip, r1
 80182e8:	fb00 1104 	mla	r1, r0, r4, r1
 80182ec:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 80182ee:	fb08 1104 	mla	r1, r8, r4, r1
 80182f2:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80182f6:	2900      	cmp	r1, #0
 80182f8:	f000 80f5 	beq.w	80184e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80182fc:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8018300:	d019      	beq.n	8018336 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8018302:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8018306:	fb0c fa0a 	mul.w	sl, ip, sl
 801830a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801830e:	fb0c fc03 	mul.w	ip, ip, r3
 8018312:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8018316:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801831a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801831e:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8018322:	4453      	add	r3, sl
 8018324:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8018328:	0a1b      	lsrs	r3, r3, #8
 801832a:	0a3f      	lsrs	r7, r7, #8
 801832c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8018330:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8018334:	433b      	orrs	r3, r7
 8018336:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8018338:	2cff      	cmp	r4, #255	@ 0xff
 801833a:	d020      	beq.n	801837e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801833c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801833e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8018342:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8018344:	4367      	muls	r7, r4
 8018346:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8018348:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801834c:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801834e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018352:	fb04 fa0a 	mul.w	sl, r4, sl
 8018356:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801835a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801835e:	44bc      	add	ip, r7
 8018360:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8018364:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018368:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801836c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018370:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8018374:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8018378:	ea4c 040a 	orr.w	r4, ip, sl
 801837c:	9410      	str	r4, [sp, #64]	@ 0x40
 801837e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8018380:	2cff      	cmp	r4, #255	@ 0xff
 8018382:	d020      	beq.n	80183c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8018384:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8018386:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801838a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801838c:	4367      	muls	r7, r4
 801838e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8018390:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8018394:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8018396:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801839a:	fb04 fa0a 	mul.w	sl, r4, sl
 801839e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80183a2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80183a6:	44bc      	add	ip, r7
 80183a8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80183ac:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80183b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80183b4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80183b8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80183bc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80183c0:	ea4c 040a 	orr.w	r4, ip, sl
 80183c4:	940b      	str	r4, [sp, #44]	@ 0x2c
 80183c6:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 80183c8:	2cff      	cmp	r4, #255	@ 0xff
 80183ca:	d020      	beq.n	801840e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 80183cc:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80183ce:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80183d2:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 80183d4:	4367      	muls	r7, r4
 80183d6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80183d8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80183dc:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 80183de:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80183e2:	fb04 fa0a 	mul.w	sl, r4, sl
 80183e6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80183ea:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80183ee:	44bc      	add	ip, r7
 80183f0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80183f4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80183f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80183fc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018400:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8018404:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8018408:	ea4c 040a 	orr.w	r4, ip, sl
 801840c:	9411      	str	r4, [sp, #68]	@ 0x44
 801840e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8018410:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8018414:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8018416:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801841a:	fb0e f707 	mul.w	r7, lr, r7
 801841e:	fb02 770c 	mla	r7, r2, ip, r7
 8018422:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8018426:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8018428:	fb00 770c 	mla	r7, r0, ip, r7
 801842c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8018430:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8018432:	fb08 770c 	mla	r7, r8, ip, r7
 8018436:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801843a:	fb0e fe0c 	mul.w	lr, lr, ip
 801843e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8018442:	fb02 e303 	mla	r3, r2, r3, lr
 8018446:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8018448:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801844a:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801844e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8018450:	fb00 330a 	mla	r3, r0, sl, r3
 8018454:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 8018458:	fb08 3c0c 	mla	ip, r8, ip, r3
 801845c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801845e:	f8b9 0000 	ldrh.w	r0, [r9]
 8018462:	434b      	muls	r3, r1
 8018464:	0a3f      	lsrs	r7, r7, #8
 8018466:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801846a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801846e:	1c59      	adds	r1, r3, #1
 8018470:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8018474:	ea47 070c 	orr.w	r7, r7, ip
 8018478:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801847c:	1202      	asrs	r2, r0, #8
 801847e:	0c3b      	lsrs	r3, r7, #16
 8018480:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8018484:	b2c9      	uxtb	r1, r1
 8018486:	fb13 f304 	smulbb	r3, r3, r4
 801848a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801848e:	fb02 3201 	mla	r2, r2, r1, r3
 8018492:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8018496:	10c3      	asrs	r3, r0, #3
 8018498:	b2ff      	uxtb	r7, r7
 801849a:	00c0      	lsls	r0, r0, #3
 801849c:	b292      	uxth	r2, r2
 801849e:	fb1c fc04 	smulbb	ip, ip, r4
 80184a2:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80184a6:	b2c0      	uxtb	r0, r0
 80184a8:	fb17 f704 	smulbb	r7, r7, r4
 80184ac:	fb03 c301 	mla	r3, r3, r1, ip
 80184b0:	fb00 7001 	mla	r0, r0, r1, r7
 80184b4:	f102 0c01 	add.w	ip, r2, #1
 80184b8:	b280      	uxth	r0, r0
 80184ba:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80184be:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 80184c2:	1c42      	adds	r2, r0, #1
 80184c4:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80184c8:	b29b      	uxth	r3, r3
 80184ca:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80184ce:	ea42 020c 	orr.w	r2, r2, ip
 80184d2:	f103 0c01 	add.w	ip, r3, #1
 80184d6:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80184da:	095b      	lsrs	r3, r3, #5
 80184dc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80184e0:	431a      	orrs	r2, r3
 80184e2:	f8a9 2000 	strh.w	r2, [r9]
 80184e6:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 80184e8:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 80184ea:	441a      	add	r2, r3
 80184ec:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80184ee:	9229      	str	r2, [sp, #164]	@ 0xa4
 80184f0:	f109 0902 	add.w	r9, r9, #2
 80184f4:	441d      	add	r5, r3
 80184f6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80184fa:	e63d      	b.n	8018178 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80184fc:	2800      	cmp	r0, #0
 80184fe:	f43f aedd 	beq.w	80182bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8018502:	5c79      	ldrb	r1, [r7, r1]
 8018504:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018508:	910b      	str	r1, [sp, #44]	@ 0x2c
 801850a:	0e09      	lsrs	r1, r1, #24
 801850c:	9114      	str	r1, [sp, #80]	@ 0x50
 801850e:	e6d5      	b.n	80182bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8018510:	b01f      	add	sp, #124	@ 0x7c
 8018512:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018516 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8018516:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801851a:	b089      	sub	sp, #36	@ 0x24
 801851c:	9101      	str	r1, [sp, #4]
 801851e:	9801      	ldr	r0, [sp, #4]
 8018520:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 8018524:	8800      	ldrh	r0, [r0, #0]
 8018526:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 801852a:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 801852e:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 8018532:	1206      	asrs	r6, r0, #8
 8018534:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 8018538:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801853c:	9602      	str	r6, [sp, #8]
 801853e:	10c6      	asrs	r6, r0, #3
 8018540:	00c0      	lsls	r0, r0, #3
 8018542:	b2c0      	uxtb	r0, r0
 8018544:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018548:	9004      	str	r0, [sp, #16]
 801854a:	2f00      	cmp	r7, #0
 801854c:	fb07 100c 	mla	r0, r7, ip, r1
 8018550:	9603      	str	r6, [sp, #12]
 8018552:	eb02 0e00 	add.w	lr, r2, r0
 8018556:	f2c0 810a 	blt.w	801876e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801855a:	45b8      	cmp	r8, r7
 801855c:	f340 8107 	ble.w	801876e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8018560:	2900      	cmp	r1, #0
 8018562:	f2c0 8102 	blt.w	801876a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8018566:	458c      	cmp	ip, r1
 8018568:	f340 80ff 	ble.w	801876a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801856c:	5c12      	ldrb	r2, [r2, r0]
 801856e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8018572:	1c4a      	adds	r2, r1, #1
 8018574:	f100 80fe 	bmi.w	8018774 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8018578:	4594      	cmp	ip, r2
 801857a:	f340 80fb 	ble.w	8018774 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801857e:	2d00      	cmp	r5, #0
 8018580:	f000 80fa 	beq.w	8018778 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8018584:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8018588:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801858c:	3701      	adds	r7, #1
 801858e:	f100 80f7 	bmi.w	8018780 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8018592:	45b8      	cmp	r8, r7
 8018594:	f340 80f4 	ble.w	8018780 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8018598:	2c00      	cmp	r4, #0
 801859a:	f000 80f4 	beq.w	8018786 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801859e:	2900      	cmp	r1, #0
 80185a0:	eb0e 020c 	add.w	r2, lr, ip
 80185a4:	f2c0 80ea 	blt.w	801877c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80185a8:	458c      	cmp	ip, r1
 80185aa:	f340 80e7 	ble.w	801877c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80185ae:	f81e 700c 	ldrb.w	r7, [lr, ip]
 80185b2:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 80185b6:	3101      	adds	r1, #1
 80185b8:	f100 80e8 	bmi.w	801878c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80185bc:	458c      	cmp	ip, r1
 80185be:	f340 80e5 	ble.w	801878c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80185c2:	2d00      	cmp	r5, #0
 80185c4:	f000 80e4 	beq.w	8018790 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 80185c8:	7852      	ldrb	r2, [r2, #1]
 80185ca:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80185ce:	0e0b      	lsrs	r3, r1, #24
 80185d0:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 80185d4:	9300      	str	r3, [sp, #0]
 80185d6:	b2a4      	uxth	r4, r4
 80185d8:	b2ab      	uxth	r3, r5
 80185da:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 80185de:	fb03 f904 	mul.w	r9, r3, r4
 80185e2:	fb0a f505 	mul.w	r5, sl, r5
 80185e6:	011b      	lsls	r3, r3, #4
 80185e8:	eba3 0e09 	sub.w	lr, r3, r9
 80185ec:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 80185f0:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 80185f4:	0a28      	lsrs	r0, r5, #8
 80185f6:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 80185fa:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 80185fe:	4405      	add	r5, r0
 8018600:	0a2d      	lsrs	r5, r5, #8
 8018602:	fb0a f303 	mul.w	r3, sl, r3
 8018606:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 801860a:	9005      	str	r0, [sp, #20]
 801860c:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 8018610:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8018614:	0a1b      	lsrs	r3, r3, #8
 8018616:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801861a:	9306      	str	r3, [sp, #24]
 801861c:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 8018620:	fb0b f303 	mul.w	r3, fp, r3
 8018624:	0a1d      	lsrs	r5, r3, #8
 8018626:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801862a:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801862e:	fb0b f606 	mul.w	r6, fp, r6
 8018632:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 8018636:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 801863a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801863e:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8018642:	fb08 f707 	mul.w	r7, r8, r7
 8018646:	441d      	add	r5, r3
 8018648:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 801864c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8018650:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 8018654:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8018658:	fb08 fc0c 	mul.w	ip, r8, ip
 801865c:	0a1b      	lsrs	r3, r3, #8
 801865e:	9307      	str	r3, [sp, #28]
 8018660:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8018664:	0e0b      	lsrs	r3, r1, #24
 8018666:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 801866a:	435f      	muls	r7, r3
 801866c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8018670:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8018674:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8018678:	4460      	add	r0, ip
 801867a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801867e:	b2a4      	uxth	r4, r4
 8018680:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8018684:	0a2d      	lsrs	r5, r5, #8
 8018686:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801868a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801868e:	fa1f fe8e 	uxth.w	lr, lr
 8018692:	4359      	muls	r1, r3
 8018694:	1b12      	subs	r2, r2, r4
 8018696:	9b05      	ldr	r3, [sp, #20]
 8018698:	44bc      	add	ip, r7
 801869a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801869e:	b292      	uxth	r2, r2
 80186a0:	fb05 f50e 	mul.w	r5, r5, lr
 80186a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80186a8:	fb03 5502 	mla	r5, r3, r2, r5
 80186ac:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80186b0:	9b06      	ldr	r3, [sp, #24]
 80186b2:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 80186b6:	0a36      	lsrs	r6, r6, #8
 80186b8:	0a00      	lsrs	r0, r0, #8
 80186ba:	fb0c 5509 	mla	r5, ip, r9, r5
 80186be:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 80186c2:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80186c6:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 80186ca:	fb00 5504 	mla	r5, r0, r4, r5
 80186ce:	fb0e f606 	mul.w	r6, lr, r6
 80186d2:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 80186d6:	0a09      	lsrs	r1, r1, #8
 80186d8:	9b07      	ldr	r3, [sp, #28]
 80186da:	fb02 6000 	mla	r0, r2, r0, r6
 80186de:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80186e2:	fb09 0001 	mla	r0, r9, r1, r0
 80186e6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80186ea:	fb0e fe0b 	mul.w	lr, lr, fp
 80186ee:	fb04 0003 	mla	r0, r4, r3, r0
 80186f2:	fb02 e20a 	mla	r2, r2, sl, lr
 80186f6:	9b00      	ldr	r3, [sp, #0]
 80186f8:	fb04 2408 	mla	r4, r4, r8, r2
 80186fc:	fb09 4903 	mla	r9, r9, r3, r4
 8018700:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8018704:	9b02      	ldr	r3, [sp, #8]
 8018706:	9a04      	ldr	r2, [sp, #16]
 8018708:	fa5f f989 	uxtb.w	r9, r9
 801870c:	fb03 f109 	mul.w	r1, r3, r9
 8018710:	9b03      	ldr	r3, [sp, #12]
 8018712:	0a2d      	lsrs	r5, r5, #8
 8018714:	0a00      	lsrs	r0, r0, #8
 8018716:	fb03 f309 	mul.w	r3, r3, r9
 801871a:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 801871e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8018722:	4305      	orrs	r5, r0
 8018724:	fb02 f909 	mul.w	r9, r2, r9
 8018728:	1c58      	adds	r0, r3, #1
 801872a:	1c4a      	adds	r2, r1, #1
 801872c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8018730:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018734:	0a2b      	lsrs	r3, r5, #8
 8018736:	0c2a      	lsrs	r2, r5, #16
 8018738:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801873c:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8018740:	00db      	lsls	r3, r3, #3
 8018742:	0212      	lsls	r2, r2, #8
 8018744:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8018748:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801874c:	4313      	orrs	r3, r2
 801874e:	f109 0201 	add.w	r2, r9, #1
 8018752:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8018756:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801875a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801875e:	431d      	orrs	r5, r3
 8018760:	9b01      	ldr	r3, [sp, #4]
 8018762:	801d      	strh	r5, [r3, #0]
 8018764:	b009      	add	sp, #36	@ 0x24
 8018766:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801876a:	2000      	movs	r0, #0
 801876c:	e701      	b.n	8018572 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801876e:	2600      	movs	r6, #0
 8018770:	4630      	mov	r0, r6
 8018772:	e70b      	b.n	801858c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8018774:	2600      	movs	r6, #0
 8018776:	e709      	b.n	801858c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8018778:	462e      	mov	r6, r5
 801877a:	e707      	b.n	801858c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801877c:	2700      	movs	r7, #0
 801877e:	e71a      	b.n	80185b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8018780:	2100      	movs	r1, #0
 8018782:	460f      	mov	r7, r1
 8018784:	e723      	b.n	80185ce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8018786:	4621      	mov	r1, r4
 8018788:	4627      	mov	r7, r4
 801878a:	e720      	b.n	80185ce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801878c:	2100      	movs	r1, #0
 801878e:	e71e      	b.n	80185ce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8018790:	4629      	mov	r1, r5
 8018792:	e71c      	b.n	80185ce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08018794 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018794:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018798:	b09b      	sub	sp, #108	@ 0x6c
 801879a:	9218      	str	r2, [sp, #96]	@ 0x60
 801879c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801879e:	9116      	str	r1, [sp, #88]	@ 0x58
 80187a0:	9307      	str	r3, [sp, #28]
 80187a2:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 80187a6:	9019      	str	r0, [sp, #100]	@ 0x64
 80187a8:	6850      	ldr	r0, [r2, #4]
 80187aa:	6812      	ldr	r2, [r2, #0]
 80187ac:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 80187ae:	fb00 1303 	mla	r3, r0, r3, r1
 80187b2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80187b6:	930a      	str	r3, [sp, #40]	@ 0x28
 80187b8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80187ba:	681b      	ldr	r3, [r3, #0]
 80187bc:	930f      	str	r3, [sp, #60]	@ 0x3c
 80187be:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80187c0:	685e      	ldr	r6, [r3, #4]
 80187c2:	3604      	adds	r6, #4
 80187c4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80187c6:	2b00      	cmp	r3, #0
 80187c8:	dc03      	bgt.n	80187d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80187ca:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80187cc:	2b00      	cmp	r3, #0
 80187ce:	f340 8373 	ble.w	8018eb8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80187d2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80187d4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80187d8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80187dc:	1e48      	subs	r0, r1, #1
 80187de:	1e57      	subs	r7, r2, #1
 80187e0:	9b07      	ldr	r3, [sp, #28]
 80187e2:	2b00      	cmp	r3, #0
 80187e4:	f340 8190 	ble.w	8018b08 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80187e8:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 80187ea:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80187ee:	ea4f 4325 	mov.w	r3, r5, asr #16
 80187f2:	d406      	bmi.n	8018802 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80187f4:	4584      	cmp	ip, r0
 80187f6:	da04      	bge.n	8018802 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80187f8:	2b00      	cmp	r3, #0
 80187fa:	db02      	blt.n	8018802 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80187fc:	42bb      	cmp	r3, r7
 80187fe:	f2c0 8184 	blt.w	8018b0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8018802:	f11c 0c01 	adds.w	ip, ip, #1
 8018806:	f100 8172 	bmi.w	8018aee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801880a:	4561      	cmp	r1, ip
 801880c:	f2c0 816f 	blt.w	8018aee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8018810:	3301      	adds	r3, #1
 8018812:	f100 816c 	bmi.w	8018aee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8018816:	429a      	cmp	r2, r3
 8018818:	f2c0 8169 	blt.w	8018aee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801881c:	9b07      	ldr	r3, [sp, #28]
 801881e:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8018820:	9317      	str	r3, [sp, #92]	@ 0x5c
 8018822:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8018824:	2b00      	cmp	r3, #0
 8018826:	f340 818e 	ble.w	8018b46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801882a:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801882c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018830:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8018832:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8018836:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8018838:	141b      	asrs	r3, r3, #16
 801883a:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801883e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8018842:	f100 81d1 	bmi.w	8018be8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8018846:	f101 38ff 	add.w	r8, r1, #4294967295
 801884a:	4543      	cmp	r3, r8
 801884c:	f280 81cc 	bge.w	8018be8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8018850:	f1bc 0f00 	cmp.w	ip, #0
 8018854:	f2c0 81c8 	blt.w	8018be8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8018858:	f10e 38ff 	add.w	r8, lr, #4294967295
 801885c:	45c4      	cmp	ip, r8
 801885e:	f280 81c3 	bge.w	8018be8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8018862:	b209      	sxth	r1, r1
 8018864:	fb0c 3301 	mla	r3, ip, r1, r3
 8018868:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801886a:	eb04 0803 	add.w	r8, r4, r3
 801886e:	5ce3      	ldrb	r3, [r4, r3]
 8018870:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8018874:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8018878:	2a00      	cmp	r2, #0
 801887a:	f000 81aa 	beq.w	8018bd2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801887e:	f898 c001 	ldrb.w	ip, [r8, #1]
 8018882:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8018886:	940b      	str	r4, [sp, #44]	@ 0x2c
 8018888:	0e24      	lsrs	r4, r4, #24
 801888a:	9412      	str	r4, [sp, #72]	@ 0x48
 801888c:	b178      	cbz	r0, 80188ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801888e:	eb08 0c01 	add.w	ip, r8, r1
 8018892:	f818 1001 	ldrb.w	r1, [r8, r1]
 8018896:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801889a:	9108      	str	r1, [sp, #32]
 801889c:	0e09      	lsrs	r1, r1, #24
 801889e:	9110      	str	r1, [sp, #64]	@ 0x40
 80188a0:	f89c 1001 	ldrb.w	r1, [ip, #1]
 80188a4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80188a8:	910c      	str	r1, [sp, #48]	@ 0x30
 80188aa:	0e09      	lsrs	r1, r1, #24
 80188ac:	9113      	str	r1, [sp, #76]	@ 0x4c
 80188ae:	b292      	uxth	r2, r2
 80188b0:	b280      	uxth	r0, r0
 80188b2:	fb02 f900 	mul.w	r9, r2, r0
 80188b6:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80188ba:	0112      	lsls	r2, r2, #4
 80188bc:	eba2 0809 	sub.w	r8, r2, r9
 80188c0:	b280      	uxth	r0, r0
 80188c2:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 80188c6:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80188c8:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80188ca:	fa1f f888 	uxth.w	r8, r8
 80188ce:	1a12      	subs	r2, r2, r0
 80188d0:	b292      	uxth	r2, r2
 80188d2:	fb08 f101 	mul.w	r1, r8, r1
 80188d6:	fb02 110e 	mla	r1, r2, lr, r1
 80188da:	fb00 1104 	mla	r1, r0, r4, r1
 80188de:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80188e0:	fb09 1104 	mla	r1, r9, r4, r1
 80188e4:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80188e8:	2900      	cmp	r1, #0
 80188ea:	f000 80f5 	beq.w	8018ad8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80188ee:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 80188f2:	d01b      	beq.n	801892c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80188f4:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 80188f8:	fb0e fa0a 	mul.w	sl, lr, sl
 80188fc:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8018900:	fb0e fe03 	mul.w	lr, lr, r3
 8018904:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8018908:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801890c:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8018910:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8018914:	4453      	add	r3, sl
 8018916:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801891a:	0a1b      	lsrs	r3, r3, #8
 801891c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018920:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8018924:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8018928:	ea43 030c 	orr.w	r3, r3, ip
 801892c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801892e:	2cff      	cmp	r4, #255	@ 0xff
 8018930:	d021      	beq.n	8018976 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8018932:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8018934:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8018938:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801893a:	fb04 fb0b 	mul.w	fp, r4, fp
 801893e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8018940:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8018944:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8018946:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801894a:	fb04 fa0a 	mul.w	sl, r4, sl
 801894e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8018952:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8018956:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801895a:	44de      	add	lr, fp
 801895c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018960:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018964:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018968:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801896c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8018970:	ea4e 040a 	orr.w	r4, lr, sl
 8018974:	940b      	str	r4, [sp, #44]	@ 0x2c
 8018976:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8018978:	2cff      	cmp	r4, #255	@ 0xff
 801897a:	d021      	beq.n	80189c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801897c:	9c08      	ldr	r4, [sp, #32]
 801897e:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8018982:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8018984:	fb04 fb0b 	mul.w	fp, r4, fp
 8018988:	9c08      	ldr	r4, [sp, #32]
 801898a:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801898e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8018990:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018994:	fb04 fa0a 	mul.w	sl, r4, sl
 8018998:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801899c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80189a0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80189a4:	44de      	add	lr, fp
 80189a6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80189aa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80189ae:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80189b2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80189b6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80189ba:	ea4e 040a 	orr.w	r4, lr, sl
 80189be:	9408      	str	r4, [sp, #32]
 80189c0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80189c2:	2cff      	cmp	r4, #255	@ 0xff
 80189c4:	d021      	beq.n	8018a0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80189c6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80189c8:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 80189cc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80189ce:	fb04 fb0b 	mul.w	fp, r4, fp
 80189d2:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80189d4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80189d8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80189da:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80189de:	fb04 fa0a 	mul.w	sl, r4, sl
 80189e2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80189e6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80189ea:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80189ee:	44de      	add	lr, fp
 80189f0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80189f4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80189f8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80189fc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8018a00:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8018a04:	ea4e 040a 	orr.w	r4, lr, sl
 8018a08:	940c      	str	r4, [sp, #48]	@ 0x30
 8018a0a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8018a0c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8018a10:	9c08      	ldr	r4, [sp, #32]
 8018a12:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 8018a16:	fb08 fc0c 	mul.w	ip, r8, ip
 8018a1a:	fb02 cc0e 	mla	ip, r2, lr, ip
 8018a1e:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8018a22:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8018a24:	fb00 cc0e 	mla	ip, r0, lr, ip
 8018a28:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8018a2c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8018a2e:	fb09 cc0e 	mla	ip, r9, lr, ip
 8018a32:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 8018a36:	fb08 f80e 	mul.w	r8, r8, lr
 8018a3a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8018a3e:	fb02 8303 	mla	r3, r2, r3, r8
 8018a42:	9a08      	ldr	r2, [sp, #32]
 8018a44:	f8b7 8000 	ldrh.w	r8, [r7]
 8018a48:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8018a4c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8018a4e:	fb00 330a 	mla	r3, r0, sl, r3
 8018a52:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 8018a56:	fb09 3900 	mla	r9, r9, r0, r3
 8018a5a:	43c9      	mvns	r1, r1
 8018a5c:	ea4f 2228 	mov.w	r2, r8, asr #8
 8018a60:	fa5f fe81 	uxtb.w	lr, r1
 8018a64:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018a68:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018a6c:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8018a70:	fb02 f20e 	mul.w	r2, r2, lr
 8018a74:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8018a78:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8018a7c:	ea4c 0c09 	orr.w	ip, ip, r9
 8018a80:	1c53      	adds	r3, r2, #1
 8018a82:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8018a86:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8018a8a:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8018a8e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018a92:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8018a96:	4a63      	ldr	r2, [pc, #396]	@ (8018c24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8018a98:	fb00 f00e 	mul.w	r0, r0, lr
 8018a9c:	b2db      	uxtb	r3, r3
 8018a9e:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8018aa2:	1c43      	adds	r3, r0, #1
 8018aa4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018aa8:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8018aac:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8018ab0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8018ab4:	b2c9      	uxtb	r1, r1
 8018ab6:	00db      	lsls	r3, r3, #3
 8018ab8:	fb01 f10e 	mul.w	r1, r1, lr
 8018abc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018ac0:	4313      	orrs	r3, r2
 8018ac2:	1c4a      	adds	r2, r1, #1
 8018ac4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018ac8:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8018acc:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8018ad0:	ea4c 0c03 	orr.w	ip, ip, r3
 8018ad4:	f8a7 c000 	strh.w	ip, [r7]
 8018ad8:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8018ada:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8018adc:	441a      	add	r2, r3
 8018ade:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8018ae0:	9225      	str	r2, [sp, #148]	@ 0x94
 8018ae2:	441d      	add	r5, r3
 8018ae4:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8018ae6:	3b01      	subs	r3, #1
 8018ae8:	3702      	adds	r7, #2
 8018aea:	9317      	str	r3, [sp, #92]	@ 0x5c
 8018aec:	e699      	b.n	8018822 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8018aee:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8018af0:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8018af2:	441c      	add	r4, r3
 8018af4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8018af6:	9425      	str	r4, [sp, #148]	@ 0x94
 8018af8:	441d      	add	r5, r3
 8018afa:	9b07      	ldr	r3, [sp, #28]
 8018afc:	3b01      	subs	r3, #1
 8018afe:	9307      	str	r3, [sp, #28]
 8018b00:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018b02:	3302      	adds	r3, #2
 8018b04:	930a      	str	r3, [sp, #40]	@ 0x28
 8018b06:	e66b      	b.n	80187e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8018b08:	d024      	beq.n	8018b54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8018b0a:	9b07      	ldr	r3, [sp, #28]
 8018b0c:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8018b0e:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8018b10:	3b01      	subs	r3, #1
 8018b12:	fb00 4003 	mla	r0, r0, r3, r4
 8018b16:	1400      	asrs	r0, r0, #16
 8018b18:	f53f ae80 	bmi.w	801881c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8018b1c:	3901      	subs	r1, #1
 8018b1e:	4288      	cmp	r0, r1
 8018b20:	f6bf ae7c 	bge.w	801881c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8018b24:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8018b26:	fb01 5303 	mla	r3, r1, r3, r5
 8018b2a:	141b      	asrs	r3, r3, #16
 8018b2c:	f53f ae76 	bmi.w	801881c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8018b30:	3a01      	subs	r2, #1
 8018b32:	4293      	cmp	r3, r2
 8018b34:	f6bf ae72 	bge.w	801881c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8018b38:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8018b3c:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 8018b40:	f1bb 0f00 	cmp.w	fp, #0
 8018b44:	dc70      	bgt.n	8018c28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8018b46:	9b07      	ldr	r3, [sp, #28]
 8018b48:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018b4c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018b4e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8018b52:	930a      	str	r3, [sp, #40]	@ 0x28
 8018b54:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8018b56:	2b00      	cmp	r3, #0
 8018b58:	f340 81ae 	ble.w	8018eb8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8018b5c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018b60:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8018b64:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018b68:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8018b6a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018b6e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018b72:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018b76:	eef0 6a62 	vmov.f32	s13, s5
 8018b7a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018b7e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018b82:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018b86:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 8018b8a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018b8e:	eef0 6a43 	vmov.f32	s13, s6
 8018b92:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018b96:	ee12 2a90 	vmov	r2, s5
 8018b9a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018b9e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018ba2:	ee13 2a10 	vmov	r2, s6
 8018ba6:	9327      	str	r3, [sp, #156]	@ 0x9c
 8018ba8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8018baa:	fb92 f3f3 	sdiv	r3, r2, r3
 8018bae:	9328      	str	r3, [sp, #160]	@ 0xa0
 8018bb0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8018bb2:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8018bb4:	3b01      	subs	r3, #1
 8018bb6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018bba:	9316      	str	r3, [sp, #88]	@ 0x58
 8018bbc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8018bbe:	bf08      	it	eq
 8018bc0:	4613      	moveq	r3, r2
 8018bc2:	ee16 5a90 	vmov	r5, s13
 8018bc6:	9307      	str	r3, [sp, #28]
 8018bc8:	eeb0 3a67 	vmov.f32	s6, s15
 8018bcc:	eef0 2a47 	vmov.f32	s5, s14
 8018bd0:	e5f8      	b.n	80187c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8018bd2:	2800      	cmp	r0, #0
 8018bd4:	f43f ae6b 	beq.w	80188ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8018bd8:	f818 1001 	ldrb.w	r1, [r8, r1]
 8018bdc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018be0:	9108      	str	r1, [sp, #32]
 8018be2:	0e09      	lsrs	r1, r1, #24
 8018be4:	9110      	str	r1, [sp, #64]	@ 0x40
 8018be6:	e662      	b.n	80188ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8018be8:	f113 0801 	adds.w	r8, r3, #1
 8018bec:	f53f af74 	bmi.w	8018ad8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8018bf0:	4541      	cmp	r1, r8
 8018bf2:	f6ff af71 	blt.w	8018ad8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8018bf6:	f11c 0801 	adds.w	r8, ip, #1
 8018bfa:	f53f af6d 	bmi.w	8018ad8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8018bfe:	45c6      	cmp	lr, r8
 8018c00:	f6ff af6a 	blt.w	8018ad8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8018c04:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8018c08:	b209      	sxth	r1, r1
 8018c0a:	fa0f f38e 	sxth.w	r3, lr
 8018c0e:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8018c12:	9301      	str	r3, [sp, #4]
 8018c14:	9100      	str	r1, [sp, #0]
 8018c16:	4633      	mov	r3, r6
 8018c18:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8018c1a:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8018c1c:	4639      	mov	r1, r7
 8018c1e:	f7ff fc7a 	bl	8018516 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8018c22:	e759      	b.n	8018ad8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8018c24:	fffff800 	.word	0xfffff800
 8018c28:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8018c2a:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8018c2c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018c30:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8018c32:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018c36:	1427      	asrs	r7, r4, #16
 8018c38:	142b      	asrs	r3, r5, #16
 8018c3a:	fb01 7303 	mla	r3, r1, r3, r7
 8018c3e:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8018c40:	18e7      	adds	r7, r4, r3
 8018c42:	5ce3      	ldrb	r3, [r4, r3]
 8018c44:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8018c48:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8018c4c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8018c50:	2a00      	cmp	r2, #0
 8018c52:	f000 8127 	beq.w	8018ea4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8018c56:	f897 e001 	ldrb.w	lr, [r7, #1]
 8018c5a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8018c5e:	940d      	str	r4, [sp, #52]	@ 0x34
 8018c60:	0e24      	lsrs	r4, r4, #24
 8018c62:	9414      	str	r4, [sp, #80]	@ 0x50
 8018c64:	b170      	cbz	r0, 8018c84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8018c66:	eb07 0e01 	add.w	lr, r7, r1
 8018c6a:	5c79      	ldrb	r1, [r7, r1]
 8018c6c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018c70:	9109      	str	r1, [sp, #36]	@ 0x24
 8018c72:	0e09      	lsrs	r1, r1, #24
 8018c74:	9111      	str	r1, [sp, #68]	@ 0x44
 8018c76:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8018c7a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018c7e:	910e      	str	r1, [sp, #56]	@ 0x38
 8018c80:	0e09      	lsrs	r1, r1, #24
 8018c82:	9115      	str	r1, [sp, #84]	@ 0x54
 8018c84:	b292      	uxth	r2, r2
 8018c86:	b280      	uxth	r0, r0
 8018c88:	fb02 f800 	mul.w	r8, r2, r0
 8018c8c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8018c90:	0112      	lsls	r2, r2, #4
 8018c92:	eba2 0e08 	sub.w	lr, r2, r8
 8018c96:	b280      	uxth	r0, r0
 8018c98:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 8018c9c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8018c9e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8018ca0:	fa1f fe8e 	uxth.w	lr, lr
 8018ca4:	1a09      	subs	r1, r1, r0
 8018ca6:	b289      	uxth	r1, r1
 8018ca8:	fb0e f202 	mul.w	r2, lr, r2
 8018cac:	fb01 220c 	mla	r2, r1, ip, r2
 8018cb0:	fb00 2204 	mla	r2, r0, r4, r2
 8018cb4:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8018cb6:	fb08 2204 	mla	r2, r8, r4, r2
 8018cba:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8018cbe:	2a00      	cmp	r2, #0
 8018cc0:	f000 80e5 	beq.w	8018e8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8018cc4:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8018cc8:	d019      	beq.n	8018cfe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8018cca:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8018cce:	fb0c fa0a 	mul.w	sl, ip, sl
 8018cd2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8018cd6:	fb0c fc03 	mul.w	ip, ip, r3
 8018cda:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8018cde:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8018ce2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8018ce6:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8018cea:	4453      	add	r3, sl
 8018cec:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8018cf0:	0a1b      	lsrs	r3, r3, #8
 8018cf2:	0a3f      	lsrs	r7, r7, #8
 8018cf4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8018cf8:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8018cfc:	433b      	orrs	r3, r7
 8018cfe:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8018d00:	2cff      	cmp	r4, #255	@ 0xff
 8018d02:	d020      	beq.n	8018d46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8018d04:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8018d06:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8018d0a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8018d0c:	4367      	muls	r7, r4
 8018d0e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8018d10:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8018d14:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8018d16:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018d1a:	fb04 fa0a 	mul.w	sl, r4, sl
 8018d1e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8018d22:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8018d26:	44bc      	add	ip, r7
 8018d28:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8018d2c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018d30:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018d34:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018d38:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8018d3c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8018d40:	ea4c 040a 	orr.w	r4, ip, sl
 8018d44:	940d      	str	r4, [sp, #52]	@ 0x34
 8018d46:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8018d48:	2cff      	cmp	r4, #255	@ 0xff
 8018d4a:	d020      	beq.n	8018d8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8018d4c:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8018d4e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8018d52:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8018d54:	4367      	muls	r7, r4
 8018d56:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8018d58:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8018d5c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8018d5e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018d62:	fb04 fa0a 	mul.w	sl, r4, sl
 8018d66:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8018d6a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8018d6e:	44bc      	add	ip, r7
 8018d70:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8018d74:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018d78:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018d7c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018d80:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8018d84:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8018d88:	ea4c 040a 	orr.w	r4, ip, sl
 8018d8c:	9409      	str	r4, [sp, #36]	@ 0x24
 8018d8e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8018d90:	2cff      	cmp	r4, #255	@ 0xff
 8018d92:	d020      	beq.n	8018dd6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8018d94:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8018d96:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8018d9a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8018d9c:	4367      	muls	r7, r4
 8018d9e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8018da0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8018da4:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8018da6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018daa:	fb04 fa0a 	mul.w	sl, r4, sl
 8018dae:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8018db2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8018db6:	44bc      	add	ip, r7
 8018db8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8018dbc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018dc0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018dc4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018dc8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8018dcc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8018dd0:	ea4c 040a 	orr.w	r4, ip, sl
 8018dd4:	940e      	str	r4, [sp, #56]	@ 0x38
 8018dd6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8018dd8:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8018ddc:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8018dde:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8018de2:	fb0e f707 	mul.w	r7, lr, r7
 8018de6:	fb01 770c 	mla	r7, r1, ip, r7
 8018dea:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8018dee:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8018df0:	fb00 770c 	mla	r7, r0, ip, r7
 8018df4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8018df8:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8018dfa:	fb08 770c 	mla	r7, r8, ip, r7
 8018dfe:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 8018e02:	fb0e fe0c 	mul.w	lr, lr, ip
 8018e06:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8018e0a:	fb01 e303 	mla	r3, r1, r3, lr
 8018e0e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8018e10:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8018e14:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8018e16:	fb00 330a 	mla	r3, r0, sl, r3
 8018e1a:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 8018e1e:	fb08 3c0c 	mla	ip, r8, ip, r3
 8018e22:	f8b9 3000 	ldrh.w	r3, [r9]
 8018e26:	43d2      	mvns	r2, r2
 8018e28:	1218      	asrs	r0, r3, #8
 8018e2a:	b2d2      	uxtb	r2, r2
 8018e2c:	10d9      	asrs	r1, r3, #3
 8018e2e:	0a3f      	lsrs	r7, r7, #8
 8018e30:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018e34:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8018e38:	00db      	lsls	r3, r3, #3
 8018e3a:	4350      	muls	r0, r2
 8018e3c:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8018e40:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8018e44:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8018e48:	b2db      	uxtb	r3, r3
 8018e4a:	ea47 070c 	orr.w	r7, r7, ip
 8018e4e:	4351      	muls	r1, r2
 8018e50:	4353      	muls	r3, r2
 8018e52:	1c42      	adds	r2, r0, #1
 8018e54:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018e58:	0c3a      	lsrs	r2, r7, #16
 8018e5a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018e5e:	4a18      	ldr	r2, [pc, #96]	@ (8018ec0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8018e60:	b2c0      	uxtb	r0, r0
 8018e62:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8018e66:	1c4a      	adds	r2, r1, #1
 8018e68:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018e6c:	0a3a      	lsrs	r2, r7, #8
 8018e6e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018e72:	00c9      	lsls	r1, r1, #3
 8018e74:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8018e78:	4301      	orrs	r1, r0
 8018e7a:	1c58      	adds	r0, r3, #1
 8018e7c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8018e80:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8018e84:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8018e88:	4308      	orrs	r0, r1
 8018e8a:	f8a9 0000 	strh.w	r0, [r9]
 8018e8e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8018e90:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8018e92:	441a      	add	r2, r3
 8018e94:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8018e96:	9225      	str	r2, [sp, #148]	@ 0x94
 8018e98:	f109 0902 	add.w	r9, r9, #2
 8018e9c:	441d      	add	r5, r3
 8018e9e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8018ea2:	e64d      	b.n	8018b40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8018ea4:	2800      	cmp	r0, #0
 8018ea6:	f43f aeed 	beq.w	8018c84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8018eaa:	5c79      	ldrb	r1, [r7, r1]
 8018eac:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018eb0:	9109      	str	r1, [sp, #36]	@ 0x24
 8018eb2:	0e09      	lsrs	r1, r1, #24
 8018eb4:	9111      	str	r1, [sp, #68]	@ 0x44
 8018eb6:	e6e5      	b.n	8018c84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8018eb8:	b01b      	add	sp, #108	@ 0x6c
 8018eba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018ebe:	bf00      	nop
 8018ec0:	fffff800 	.word	0xfffff800

08018ec4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8018ec4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ec8:	b085      	sub	sp, #20
 8018eca:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 8018ece:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 8018ed2:	9103      	str	r1, [sp, #12]
 8018ed4:	fb00 7406 	mla	r4, r0, r6, r7
 8018ed8:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8018edc:	2800      	cmp	r0, #0
 8018ede:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 8018ee2:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 8018ee6:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 8018eea:	9501      	str	r5, [sp, #4]
 8018eec:	eb03 0904 	add.w	r9, r3, r4
 8018ef0:	f2c0 8150 	blt.w	8019194 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8018ef4:	4583      	cmp	fp, r0
 8018ef6:	f340 814d 	ble.w	8019194 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8018efa:	2f00      	cmp	r7, #0
 8018efc:	f2c0 8146 	blt.w	801918c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8018f00:	42be      	cmp	r6, r7
 8018f02:	f340 8143 	ble.w	801918c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8018f06:	f813 c004 	ldrb.w	ip, [r3, r4]
 8018f0a:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8018f0e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8018f12:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 8018f16:	4355      	muls	r5, r2
 8018f18:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018f1c:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 8018f20:	fb0c f203 	mul.w	r2, ip, r3
 8018f24:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8018f28:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 8018f2c:	441d      	add	r5, r3
 8018f2e:	f102 0320 	add.w	r3, r2, #32
 8018f32:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018f36:	0a1b      	lsrs	r3, r3, #8
 8018f38:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8018f3c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018f40:	431c      	orrs	r4, r3
 8018f42:	1c7b      	adds	r3, r7, #1
 8018f44:	f100 812b 	bmi.w	801919e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8018f48:	429e      	cmp	r6, r3
 8018f4a:	f340 8128 	ble.w	801919e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8018f4e:	2900      	cmp	r1, #0
 8018f50:	f000 8128 	beq.w	80191a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8018f54:	9a01      	ldr	r2, [sp, #4]
 8018f56:	f899 3001 	ldrb.w	r3, [r9, #1]
 8018f5a:	8855      	ldrh	r5, [r2, #2]
 8018f5c:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8018f60:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 8018f64:	fb08 f802 	mul.w	r8, r8, r2
 8018f68:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018f6c:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 8018f70:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8018f74:	435d      	muls	r5, r3
 8018f76:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8018f7a:	44d0      	add	r8, sl
 8018f7c:	f105 0a20 	add.w	sl, r5, #32
 8018f80:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8018f84:	0a2d      	lsrs	r5, r5, #8
 8018f86:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8018f8a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018f8e:	432a      	orrs	r2, r5
 8018f90:	3001      	adds	r0, #1
 8018f92:	f100 810d 	bmi.w	80191b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8018f96:	4583      	cmp	fp, r0
 8018f98:	f340 810a 	ble.w	80191b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8018f9c:	f1be 0f00 	cmp.w	lr, #0
 8018fa0:	f000 810b 	beq.w	80191ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8018fa4:	2f00      	cmp	r7, #0
 8018fa6:	f2c0 8100 	blt.w	80191aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8018faa:	42be      	cmp	r6, r7
 8018fac:	f340 80fd 	ble.w	80191aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8018fb0:	9801      	ldr	r0, [sp, #4]
 8018fb2:	f819 5006 	ldrb.w	r5, [r9, r6]
 8018fb6:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8018fba:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8018fbe:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 8018fc2:	fb0a fa00 	mul.w	sl, sl, r0
 8018fc6:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 8018fca:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8018fce:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8018fd2:	fb05 f808 	mul.w	r8, r5, r8
 8018fd6:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 8018fda:	4482      	add	sl, r0
 8018fdc:	f108 0020 	add.w	r0, r8, #32
 8018fe0:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8018fe4:	0a00      	lsrs	r0, r0, #8
 8018fe6:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8018fea:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8018fee:	ea4b 0b00 	orr.w	fp, fp, r0
 8018ff2:	3701      	adds	r7, #1
 8018ff4:	f100 80e6 	bmi.w	80191c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8018ff8:	42be      	cmp	r6, r7
 8018ffa:	f340 80e3 	ble.w	80191c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8018ffe:	2900      	cmp	r1, #0
 8019000:	f000 80e3 	beq.w	80191ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8019004:	3601      	adds	r6, #1
 8019006:	9801      	ldr	r0, [sp, #4]
 8019008:	f819 7006 	ldrb.w	r7, [r9, r6]
 801900c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8019010:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8019014:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 8019018:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801901c:	fb09 f906 	mul.w	r9, r9, r6
 8019020:	fb07 f800 	mul.w	r8, r7, r0
 8019024:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 8019028:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801902c:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 8019030:	44d1      	add	r9, sl
 8019032:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8019036:	f108 0020 	add.w	r0, r8, #32
 801903a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801903e:	0a00      	lsrs	r0, r0, #8
 8019040:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8019044:	4330      	orrs	r0, r6
 8019046:	b28e      	uxth	r6, r1
 8019048:	fa1f f98e 	uxth.w	r9, lr
 801904c:	fb06 f809 	mul.w	r8, r6, r9
 8019050:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8019054:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8019058:	0136      	lsls	r6, r6, #4
 801905a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801905e:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8019062:	9601      	str	r6, [sp, #4]
 8019064:	ea4a 0404 	orr.w	r4, sl, r4
 8019068:	fa1f f689 	uxth.w	r6, r9
 801906c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8019070:	fb11 f90e 	smulbb	r9, r1, lr
 8019074:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8019078:	9602      	str	r6, [sp, #8]
 801907a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801907e:	4626      	mov	r6, r4
 8019080:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019084:	f1ce 0410 	rsb	r4, lr, #16
 8019088:	1a64      	subs	r4, r4, r1
 801908a:	ea4a 0202 	orr.w	r2, sl, r2
 801908e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8019092:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8019096:	434a      	muls	r2, r1
 8019098:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801909c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80190a0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80190a4:	fb04 2406 	mla	r4, r4, r6, r2
 80190a8:	ea4a 0000 	orr.w	r0, sl, r0
 80190ac:	fb09 4200 	mla	r2, r9, r0, r4
 80190b0:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80190b4:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 80190b8:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 80190bc:	ea44 0b0b 	orr.w	fp, r4, fp
 80190c0:	9c01      	ldr	r4, [sp, #4]
 80190c2:	9e02      	ldr	r6, [sp, #8]
 80190c4:	9903      	ldr	r1, [sp, #12]
 80190c6:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 80190ca:	1ba4      	subs	r4, r4, r6
 80190cc:	9e01      	ldr	r6, [sp, #4]
 80190ce:	8808      	ldrh	r0, [r1, #0]
 80190d0:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 80190d4:	eba6 0608 	sub.w	r6, r6, r8
 80190d8:	b2b6      	uxth	r6, r6
 80190da:	b2a4      	uxth	r4, r4
 80190dc:	4373      	muls	r3, r6
 80190de:	fb0c 3304 	mla	r3, ip, r4, r3
 80190e2:	9c02      	ldr	r4, [sp, #8]
 80190e4:	fb04 3505 	mla	r5, r4, r5, r3
 80190e8:	fb08 5707 	mla	r7, r8, r7, r5
 80190ec:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80190f0:	b289      	uxth	r1, r1
 80190f2:	fb0e 2e0b 	mla	lr, lr, fp, r2
 80190f6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80190fa:	434f      	muls	r7, r1
 80190fc:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8019100:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8019104:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019108:	1c7b      	adds	r3, r7, #1
 801910a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801910e:	ea42 0e0e 	orr.w	lr, r2, lr
 8019112:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8019116:	fa1f f28e 	uxth.w	r2, lr
 801911a:	1203      	asrs	r3, r0, #8
 801911c:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8019120:	b2ff      	uxtb	r7, r7
 8019122:	1215      	asrs	r5, r2, #8
 8019124:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8019128:	fb13 f307 	smulbb	r3, r3, r7
 801912c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8019130:	fb05 3501 	mla	r5, r5, r1, r3
 8019134:	10c3      	asrs	r3, r0, #3
 8019136:	10d4      	asrs	r4, r2, #3
 8019138:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801913c:	fb13 f307 	smulbb	r3, r3, r7
 8019140:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8019144:	fb04 3401 	mla	r4, r4, r1, r3
 8019148:	00c3      	lsls	r3, r0, #3
 801914a:	00d2      	lsls	r2, r2, #3
 801914c:	b2db      	uxtb	r3, r3
 801914e:	fb13 f307 	smulbb	r3, r3, r7
 8019152:	b2d2      	uxtb	r2, r2
 8019154:	fb02 3101 	mla	r1, r2, r1, r3
 8019158:	b2ad      	uxth	r5, r5
 801915a:	b289      	uxth	r1, r1
 801915c:	b2a4      	uxth	r4, r4
 801915e:	1c6b      	adds	r3, r5, #1
 8019160:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019164:	1c62      	adds	r2, r4, #1
 8019166:	1c4b      	adds	r3, r1, #1
 8019168:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801916c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8019170:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8019174:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019178:	0964      	lsrs	r4, r4, #5
 801917a:	432b      	orrs	r3, r5
 801917c:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8019180:	9a03      	ldr	r2, [sp, #12]
 8019182:	4323      	orrs	r3, r4
 8019184:	8013      	strh	r3, [r2, #0]
 8019186:	b005      	add	sp, #20
 8019188:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801918c:	f04f 0c00 	mov.w	ip, #0
 8019190:	4664      	mov	r4, ip
 8019192:	e6d6      	b.n	8018f42 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8019194:	2300      	movs	r3, #0
 8019196:	469c      	mov	ip, r3
 8019198:	461a      	mov	r2, r3
 801919a:	461c      	mov	r4, r3
 801919c:	e6f8      	b.n	8018f90 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801919e:	2300      	movs	r3, #0
 80191a0:	461a      	mov	r2, r3
 80191a2:	e6f5      	b.n	8018f90 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80191a4:	460b      	mov	r3, r1
 80191a6:	460a      	mov	r2, r1
 80191a8:	e6f2      	b.n	8018f90 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80191aa:	2500      	movs	r5, #0
 80191ac:	46ab      	mov	fp, r5
 80191ae:	e720      	b.n	8018ff2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 80191b0:	2700      	movs	r7, #0
 80191b2:	463d      	mov	r5, r7
 80191b4:	4638      	mov	r0, r7
 80191b6:	46bb      	mov	fp, r7
 80191b8:	e745      	b.n	8019046 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80191ba:	4677      	mov	r7, lr
 80191bc:	4675      	mov	r5, lr
 80191be:	4670      	mov	r0, lr
 80191c0:	46f3      	mov	fp, lr
 80191c2:	e740      	b.n	8019046 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80191c4:	2700      	movs	r7, #0
 80191c6:	4638      	mov	r0, r7
 80191c8:	e73d      	b.n	8019046 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80191ca:	460f      	mov	r7, r1
 80191cc:	4608      	mov	r0, r1
 80191ce:	e73a      	b.n	8019046 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

080191d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80191d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80191d4:	b097      	sub	sp, #92	@ 0x5c
 80191d6:	9214      	str	r2, [sp, #80]	@ 0x50
 80191d8:	9308      	str	r3, [sp, #32]
 80191da:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 80191dc:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 80191e0:	9312      	str	r3, [sp, #72]	@ 0x48
 80191e2:	9111      	str	r1, [sp, #68]	@ 0x44
 80191e4:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 80191e8:	9015      	str	r0, [sp, #84]	@ 0x54
 80191ea:	6850      	ldr	r0, [r2, #4]
 80191ec:	6812      	ldr	r2, [r2, #0]
 80191ee:	fb00 1303 	mla	r3, r0, r3, r1
 80191f2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80191f6:	9309      	str	r3, [sp, #36]	@ 0x24
 80191f8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80191fa:	681b      	ldr	r3, [r3, #0]
 80191fc:	930b      	str	r3, [sp, #44]	@ 0x2c
 80191fe:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8019200:	685b      	ldr	r3, [r3, #4]
 8019202:	930c      	str	r3, [sp, #48]	@ 0x30
 8019204:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8019208:	930a      	str	r3, [sp, #40]	@ 0x28
 801920a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801920c:	2b00      	cmp	r3, #0
 801920e:	dc03      	bgt.n	8019218 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8019210:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8019212:	2b00      	cmp	r3, #0
 8019214:	f340 83cb 	ble.w	80199ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8019218:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801921a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801921e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019222:	1e48      	subs	r0, r1, #1
 8019224:	1e55      	subs	r5, r2, #1
 8019226:	9b08      	ldr	r3, [sp, #32]
 8019228:	2b00      	cmp	r3, #0
 801922a:	f340 81a3 	ble.w	8019574 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801922e:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 8019230:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8019232:	1436      	asrs	r6, r6, #16
 8019234:	ea4f 4323 	mov.w	r3, r3, asr #16
 8019238:	d406      	bmi.n	8019248 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801923a:	4286      	cmp	r6, r0
 801923c:	da04      	bge.n	8019248 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801923e:	2b00      	cmp	r3, #0
 8019240:	db02      	blt.n	8019248 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019242:	42ab      	cmp	r3, r5
 8019244:	f2c0 8197 	blt.w	8019576 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8019248:	3601      	adds	r6, #1
 801924a:	f100 8184 	bmi.w	8019556 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801924e:	42b1      	cmp	r1, r6
 8019250:	f2c0 8181 	blt.w	8019556 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8019254:	3301      	adds	r3, #1
 8019256:	f100 817e 	bmi.w	8019556 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801925a:	429a      	cmp	r2, r3
 801925c:	f2c0 817b 	blt.w	8019556 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8019260:	9b08      	ldr	r3, [sp, #32]
 8019262:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8019264:	9313      	str	r3, [sp, #76]	@ 0x4c
 8019266:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801926a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801926c:	2b00      	cmp	r3, #0
 801926e:	f340 81a4 	ble.w	80195ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8019272:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8019274:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 8019276:	1418      	asrs	r0, r3, #16
 8019278:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801927a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801927e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8019280:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8019284:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8019286:	142d      	asrs	r5, r5, #16
 8019288:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801928c:	f100 81f8 	bmi.w	8019680 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8019290:	f102 3eff 	add.w	lr, r2, #4294967295
 8019294:	4575      	cmp	r5, lr
 8019296:	f280 81f3 	bge.w	8019680 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801929a:	2800      	cmp	r0, #0
 801929c:	f2c0 81f0 	blt.w	8019680 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80192a0:	f103 3eff 	add.w	lr, r3, #4294967295
 80192a4:	4570      	cmp	r0, lr
 80192a6:	f280 81eb 	bge.w	8019680 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80192aa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80192ac:	b212      	sxth	r2, r2
 80192ae:	fb00 5002 	mla	r0, r0, r2, r5
 80192b2:	fa1f fe81 	uxth.w	lr, r1
 80192b6:	eb03 0a00 	add.w	sl, r3, r0
 80192ba:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80192be:	f813 9000 	ldrb.w	r9, [r3, r0]
 80192c2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80192c6:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 80192ca:	b29b      	uxth	r3, r3
 80192cc:	f1bc 0f00 	cmp.w	ip, #0
 80192d0:	f000 81b9 	beq.w	8019646 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80192d4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80192d8:	940d      	str	r4, [sp, #52]	@ 0x34
 80192da:	eb0a 0b02 	add.w	fp, sl, r2
 80192de:	fa1f fa8c 	uxth.w	sl, ip
 80192e2:	fb0a fe0e 	mul.w	lr, sl, lr
 80192e6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80192ea:	fa1f fa8a 	uxth.w	sl, sl
 80192ee:	eba5 050e 	sub.w	r5, r5, lr
 80192f2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80192f6:	940e      	str	r4, [sp, #56]	@ 0x38
 80192f8:	eba3 030a 	sub.w	r3, r3, sl
 80192fc:	b2ad      	uxth	r5, r5
 80192fe:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8019300:	b29b      	uxth	r3, r3
 8019302:	fb08 f505 	mul.w	r5, r8, r5
 8019306:	fb09 5303 	mla	r3, r9, r3, r5
 801930a:	fb0a 3304 	mla	r3, sl, r4, r3
 801930e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8019310:	fb0e 3304 	mla	r3, lr, r4, r3
 8019314:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019318:	2b00      	cmp	r3, #0
 801931a:	f000 810f 	beq.w	801953c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801931e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8019320:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8019324:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8019328:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801932c:	f000 8190 	beq.w	8019650 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8019330:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8019334:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8019338:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801933c:	fb09 f000 	mul.w	r0, r9, r0
 8019340:	fb0a fe0e 	mul.w	lr, sl, lr
 8019344:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8019348:	f100 0b20 	add.w	fp, r0, #32
 801934c:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8019350:	44ce      	add	lr, r9
 8019352:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8019356:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801935a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801935e:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8019362:	ea4e 0909 	orr.w	r9, lr, r9
 8019366:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801936a:	8868      	ldrh	r0, [r5, #2]
 801936c:	d019      	beq.n	80193a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801936e:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8019372:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8019376:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801937a:	fb08 f800 	mul.w	r8, r8, r0
 801937e:	fb0a fe0e 	mul.w	lr, sl, lr
 8019382:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8019386:	f108 0b20 	add.w	fp, r8, #32
 801938a:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801938e:	4486      	add	lr, r0
 8019390:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8019394:	0a00      	lsrs	r0, r0, #8
 8019396:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801939a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801939e:	ea4e 0000 	orr.w	r0, lr, r0
 80193a2:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80193a6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80193aa:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 80193ae:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 80193b2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80193b6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80193ba:	ea4e 0909 	orr.w	r9, lr, r9
 80193be:	ea4a 0000 	orr.w	r0, sl, r0
 80193c2:	f1bc 0f00 	cmp.w	ip, #0
 80193c6:	f000 8145 	beq.w	8019654 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 80193ca:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 80193ce:	3a01      	subs	r2, #1
 80193d0:	0052      	lsls	r2, r2, #1
 80193d2:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80193d4:	3202      	adds	r2, #2
 80193d6:	2cff      	cmp	r4, #255	@ 0xff
 80193d8:	eb05 0e02 	add.w	lr, r5, r2
 80193dc:	5aaa      	ldrh	r2, [r5, r2]
 80193de:	d018      	beq.n	8019412 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80193e0:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 80193e4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80193e8:	fb04 fa02 	mul.w	sl, r4, r2
 80193ec:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80193f0:	fb08 f805 	mul.w	r8, r8, r5
 80193f4:	f10a 0520 	add.w	r5, sl, #32
 80193f8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80193fc:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8019400:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8019404:	4442      	add	r2, r8
 8019406:	0a2d      	lsrs	r5, r5, #8
 8019408:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801940c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019410:	432a      	orrs	r2, r5
 8019412:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8019414:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8019418:	2cff      	cmp	r4, #255	@ 0xff
 801941a:	d01a      	beq.n	8019452 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801941c:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 8019420:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019424:	fb04 fa05 	mul.w	sl, r4, r5
 8019428:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801942c:	fb08 f80e 	mul.w	r8, r8, lr
 8019430:	f10a 0e20 	add.w	lr, sl, #32
 8019434:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8019438:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801943c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8019440:	4445      	add	r5, r8
 8019442:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019446:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801944a:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801944e:	ea45 050e 	orr.w	r5, r5, lr
 8019452:	fb1c fe01 	smulbb	lr, ip, r1
 8019456:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801945a:	f1cc 0810 	rsb	r8, ip, #16
 801945e:	eba8 0801 	sub.w	r8, r8, r1
 8019462:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8019466:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801946a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801946e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8019472:	4341      	muls	r1, r0
 8019474:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8019478:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801947c:	ea4a 0202 	orr.w	r2, sl, r2
 8019480:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8019484:	fb09 1108 	mla	r1, r9, r8, r1
 8019488:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801948c:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8019490:	fb0c 1102 	mla	r1, ip, r2, r1
 8019494:	ea4b 0505 	orr.w	r5, fp, r5
 8019498:	fb0e 1e05 	mla	lr, lr, r5, r1
 801949c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80194a0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80194a4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80194a8:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 80194ac:	ea42 0e0e 	orr.w	lr, r2, lr
 80194b0:	fa1f f28e 	uxth.w	r2, lr
 80194b4:	2bff      	cmp	r3, #255	@ 0xff
 80194b6:	d103      	bne.n	80194c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80194b8:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80194ba:	29ff      	cmp	r1, #255	@ 0xff
 80194bc:	f000 80de 	beq.w	801967c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 80194c0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80194c2:	8838      	ldrh	r0, [r7, #0]
 80194c4:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80194c6:	434b      	muls	r3, r1
 80194c8:	f103 0c01 	add.w	ip, r3, #1
 80194cc:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 80194d0:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80194d4:	fa5f fc83 	uxtb.w	ip, r3
 80194d8:	1203      	asrs	r3, r0, #8
 80194da:	1215      	asrs	r5, r2, #8
 80194dc:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 80194e0:	fb13 f30c 	smulbb	r3, r3, ip
 80194e4:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80194e8:	fb05 3501 	mla	r5, r5, r1, r3
 80194ec:	10c3      	asrs	r3, r0, #3
 80194ee:	10d1      	asrs	r1, r2, #3
 80194f0:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80194f4:	fb13 f30c 	smulbb	r3, r3, ip
 80194f8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80194fc:	fb01 3104 	mla	r1, r1, r4, r3
 8019500:	00c3      	lsls	r3, r0, #3
 8019502:	00d2      	lsls	r2, r2, #3
 8019504:	b2db      	uxtb	r3, r3
 8019506:	b2d2      	uxtb	r2, r2
 8019508:	fb13 f30c 	smulbb	r3, r3, ip
 801950c:	b2ad      	uxth	r5, r5
 801950e:	fb02 3304 	mla	r3, r2, r4, r3
 8019512:	b29a      	uxth	r2, r3
 8019514:	1c6b      	adds	r3, r5, #1
 8019516:	b289      	uxth	r1, r1
 8019518:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801951c:	1c53      	adds	r3, r2, #1
 801951e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019522:	1c4a      	adds	r2, r1, #1
 8019524:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019528:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801952c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019530:	0949      	lsrs	r1, r1, #5
 8019532:	432b      	orrs	r3, r5
 8019534:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8019538:	430b      	orrs	r3, r1
 801953a:	803b      	strh	r3, [r7, #0]
 801953c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801953e:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8019540:	4413      	add	r3, r2
 8019542:	9321      	str	r3, [sp, #132]	@ 0x84
 8019544:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8019546:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019548:	441a      	add	r2, r3
 801954a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801954c:	9222      	str	r2, [sp, #136]	@ 0x88
 801954e:	3b01      	subs	r3, #1
 8019550:	3702      	adds	r7, #2
 8019552:	9313      	str	r3, [sp, #76]	@ 0x4c
 8019554:	e689      	b.n	801926a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019556:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8019558:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 801955a:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 801955c:	4433      	add	r3, r6
 801955e:	9321      	str	r3, [sp, #132]	@ 0x84
 8019560:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019562:	441c      	add	r4, r3
 8019564:	9b08      	ldr	r3, [sp, #32]
 8019566:	9422      	str	r4, [sp, #136]	@ 0x88
 8019568:	3b01      	subs	r3, #1
 801956a:	9308      	str	r3, [sp, #32]
 801956c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801956e:	3302      	adds	r3, #2
 8019570:	9309      	str	r3, [sp, #36]	@ 0x24
 8019572:	e658      	b.n	8019226 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8019574:	d028      	beq.n	80195c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8019576:	9b08      	ldr	r3, [sp, #32]
 8019578:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801957a:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801957c:	3b01      	subs	r3, #1
 801957e:	fb00 5003 	mla	r0, r0, r3, r5
 8019582:	1400      	asrs	r0, r0, #16
 8019584:	f53f ae6c 	bmi.w	8019260 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019588:	3901      	subs	r1, #1
 801958a:	4288      	cmp	r0, r1
 801958c:	f6bf ae68 	bge.w	8019260 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019590:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8019592:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8019594:	fb01 0303 	mla	r3, r1, r3, r0
 8019598:	141b      	asrs	r3, r3, #16
 801959a:	f53f ae61 	bmi.w	8019260 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801959e:	3a01      	subs	r2, #1
 80195a0:	4293      	cmp	r3, r2
 80195a2:	f6bf ae5d 	bge.w	8019260 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80195a6:	9b08      	ldr	r3, [sp, #32]
 80195a8:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 80195ac:	9313      	str	r3, [sp, #76]	@ 0x4c
 80195ae:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 80195b2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80195b4:	2b00      	cmp	r3, #0
 80195b6:	f300 8082 	bgt.w	80196be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80195ba:	9b08      	ldr	r3, [sp, #32]
 80195bc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80195c0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80195c2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80195c6:	9309      	str	r3, [sp, #36]	@ 0x24
 80195c8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80195ca:	2b00      	cmp	r3, #0
 80195cc:	f340 81ef 	ble.w	80199ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80195d0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80195d4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80195d8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80195dc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80195de:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80195e2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80195e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80195ea:	eef0 6a62 	vmov.f32	s13, s5
 80195ee:	ee61 7a27 	vmul.f32	s15, s2, s15
 80195f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80195f6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80195fa:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 80195fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019602:	eef0 6a43 	vmov.f32	s13, s6
 8019606:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801960a:	ee12 2a90 	vmov	r2, s5
 801960e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019612:	fb92 f3f3 	sdiv	r3, r2, r3
 8019616:	ee13 2a10 	vmov	r2, s6
 801961a:	9323      	str	r3, [sp, #140]	@ 0x8c
 801961c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801961e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019622:	9324      	str	r3, [sp, #144]	@ 0x90
 8019624:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8019626:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019628:	3b01      	subs	r3, #1
 801962a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801962e:	9311      	str	r3, [sp, #68]	@ 0x44
 8019630:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8019632:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 8019636:	bf08      	it	eq
 8019638:	4613      	moveq	r3, r2
 801963a:	9308      	str	r3, [sp, #32]
 801963c:	eeb0 3a67 	vmov.f32	s6, s15
 8019640:	eef0 2a47 	vmov.f32	s5, s14
 8019644:	e5e1      	b.n	801920a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8019646:	fb08 f505 	mul.w	r5, r8, r5
 801964a:	fb09 5303 	mla	r3, r9, r3, r5
 801964e:	e661      	b.n	8019314 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8019650:	4681      	mov	r9, r0
 8019652:	e688      	b.n	8019366 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8019654:	f1c1 0210 	rsb	r2, r1, #16
 8019658:	4341      	muls	r1, r0
 801965a:	fb09 1902 	mla	r9, r9, r2, r1
 801965e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8019662:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8019666:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801966a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801966e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8019672:	ea42 0909 	orr.w	r9, r2, r9
 8019676:	fa1f f289 	uxth.w	r2, r9
 801967a:	e71b      	b.n	80194b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801967c:	803a      	strh	r2, [r7, #0]
 801967e:	e75d      	b.n	801953c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8019680:	f115 0e01 	adds.w	lr, r5, #1
 8019684:	f53f af5a 	bmi.w	801953c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8019688:	4572      	cmp	r2, lr
 801968a:	f6ff af57 	blt.w	801953c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801968e:	f110 0e01 	adds.w	lr, r0, #1
 8019692:	f53f af53 	bmi.w	801953c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8019696:	4573      	cmp	r3, lr
 8019698:	f6ff af50 	blt.w	801953c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801969c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801969e:	9502      	str	r5, [sp, #8]
 80196a0:	b21b      	sxth	r3, r3
 80196a2:	b212      	sxth	r2, r2
 80196a4:	e9cd 0103 	strd	r0, r1, [sp, #12]
 80196a8:	9301      	str	r3, [sp, #4]
 80196aa:	9200      	str	r2, [sp, #0]
 80196ac:	e9cd c405 	strd	ip, r4, [sp, #20]
 80196b0:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 80196b4:	4639      	mov	r1, r7
 80196b6:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80196b8:	f7ff fc04 	bl	8018ec4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 80196bc:	e73e      	b.n	801953c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80196be:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80196c0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80196c4:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80196c6:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80196ca:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80196cc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80196d0:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80196d2:	141f      	asrs	r7, r3, #16
 80196d4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80196d6:	141b      	asrs	r3, r3, #16
 80196d8:	fb01 3707 	mla	r7, r1, r7, r3
 80196dc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80196de:	fa1f fc82 	uxth.w	ip, r2
 80196e2:	eb03 0a07 	add.w	sl, r3, r7
 80196e6:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80196ea:	f813 9007 	ldrb.w	r9, [r3, r7]
 80196ee:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80196f2:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 80196f6:	b29b      	uxth	r3, r3
 80196f8:	2d00      	cmp	r5, #0
 80196fa:	f000 813d 	beq.w	8019978 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 80196fe:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8019702:	940f      	str	r4, [sp, #60]	@ 0x3c
 8019704:	eb0a 0b01 	add.w	fp, sl, r1
 8019708:	fa1f fa85 	uxth.w	sl, r5
 801970c:	fb0a fc0c 	mul.w	ip, sl, ip
 8019710:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8019714:	fa1f fa8a 	uxth.w	sl, sl
 8019718:	eba0 000c 	sub.w	r0, r0, ip
 801971c:	eba3 030a 	sub.w	r3, r3, sl
 8019720:	b280      	uxth	r0, r0
 8019722:	fb08 f000 	mul.w	r0, r8, r0
 8019726:	b29b      	uxth	r3, r3
 8019728:	fb09 0303 	mla	r3, r9, r3, r0
 801972c:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801972e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8019732:	9410      	str	r4, [sp, #64]	@ 0x40
 8019734:	fb0a 3300 	mla	r3, sl, r0, r3
 8019738:	fb0c 3304 	mla	r3, ip, r4, r3
 801973c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019740:	2b00      	cmp	r3, #0
 8019742:	f000 810b 	beq.w	801995c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8019746:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8019748:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801974a:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801974e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8019752:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8019756:	f000 8114 	beq.w	8019982 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801975a:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801975e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8019762:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8019766:	fb09 f707 	mul.w	r7, r9, r7
 801976a:	fb0a fc0c 	mul.w	ip, sl, ip
 801976e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8019772:	f107 0b20 	add.w	fp, r7, #32
 8019776:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801977a:	44cc      	add	ip, r9
 801977c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8019780:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019784:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8019788:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801978c:	ea4c 0909 	orr.w	r9, ip, r9
 8019790:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8019794:	8847      	ldrh	r7, [r0, #2]
 8019796:	d019      	beq.n	80197cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8019798:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801979c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80197a0:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80197a4:	fb08 f807 	mul.w	r8, r8, r7
 80197a8:	fb0a fc0c 	mul.w	ip, sl, ip
 80197ac:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80197b0:	f108 0b20 	add.w	fp, r8, #32
 80197b4:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 80197b8:	44bc      	add	ip, r7
 80197ba:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80197be:	0a3f      	lsrs	r7, r7, #8
 80197c0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80197c4:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80197c8:	ea4c 0707 	orr.w	r7, ip, r7
 80197cc:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80197d0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80197d4:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80197d8:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 80197dc:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80197e0:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 80197e4:	ea4c 0909 	orr.w	r9, ip, r9
 80197e8:	ea4a 0707 	orr.w	r7, sl, r7
 80197ec:	2d00      	cmp	r5, #0
 80197ee:	f000 80ca 	beq.w	8019986 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 80197f2:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 80197f6:	3901      	subs	r1, #1
 80197f8:	0049      	lsls	r1, r1, #1
 80197fa:	3102      	adds	r1, #2
 80197fc:	eb00 0c01 	add.w	ip, r0, r1
 8019800:	5a41      	ldrh	r1, [r0, r1]
 8019802:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8019804:	28ff      	cmp	r0, #255	@ 0xff
 8019806:	d019      	beq.n	801983c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8019808:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801980a:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801980e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8019812:	fb04 fa01 	mul.w	sl, r4, r1
 8019816:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801981a:	fb08 f800 	mul.w	r8, r8, r0
 801981e:	f10a 0020 	add.w	r0, sl, #32
 8019822:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8019826:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801982a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801982e:	4441      	add	r1, r8
 8019830:	0a00      	lsrs	r0, r0, #8
 8019832:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8019836:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801983a:	4301      	orrs	r1, r0
 801983c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801983e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8019842:	2cff      	cmp	r4, #255	@ 0xff
 8019844:	d01a      	beq.n	801987c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8019846:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801984a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801984e:	fb04 fa00 	mul.w	sl, r4, r0
 8019852:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019856:	fb08 f80c 	mul.w	r8, r8, ip
 801985a:	f10a 0c20 	add.w	ip, sl, #32
 801985e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8019862:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8019866:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801986a:	4440      	add	r0, r8
 801986c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019870:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8019874:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8019878:	ea40 000c 	orr.w	r0, r0, ip
 801987c:	fb15 fc02 	smulbb	ip, r5, r2
 8019880:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8019884:	f1c5 0810 	rsb	r8, r5, #16
 8019888:	eba8 0802 	sub.w	r8, r8, r2
 801988c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8019890:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8019894:	437a      	muls	r2, r7
 8019896:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801989a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801989e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80198a2:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 80198a6:	fb09 2208 	mla	r2, r9, r8, r2
 80198aa:	ea4a 0101 	orr.w	r1, sl, r1
 80198ae:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80198b2:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80198b6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80198ba:	fb05 2201 	mla	r2, r5, r1, r2
 80198be:	ea4b 0000 	orr.w	r0, fp, r0
 80198c2:	fb0c 2200 	mla	r2, ip, r0, r2
 80198c6:	0d57      	lsrs	r7, r2, #21
 80198c8:	0952      	lsrs	r2, r2, #5
 80198ca:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80198ce:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80198d2:	433a      	orrs	r2, r7
 80198d4:	2bff      	cmp	r3, #255	@ 0xff
 80198d6:	b292      	uxth	r2, r2
 80198d8:	d102      	bne.n	80198e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80198da:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80198dc:	29ff      	cmp	r1, #255	@ 0xff
 80198de:	d063      	beq.n	80199a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 80198e0:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80198e2:	f8be 1000 	ldrh.w	r1, [lr]
 80198e6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80198e8:	4343      	muls	r3, r0
 80198ea:	1c58      	adds	r0, r3, #1
 80198ec:	eb00 2323 	add.w	r3, r0, r3, asr #8
 80198f0:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80198f4:	1208      	asrs	r0, r1, #8
 80198f6:	b2db      	uxtb	r3, r3
 80198f8:	1215      	asrs	r5, r2, #8
 80198fa:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80198fe:	fb10 f003 	smulbb	r0, r0, r3
 8019902:	10cf      	asrs	r7, r1, #3
 8019904:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8019908:	00c9      	lsls	r1, r1, #3
 801990a:	fb05 0504 	mla	r5, r5, r4, r0
 801990e:	b2c9      	uxtb	r1, r1
 8019910:	10d0      	asrs	r0, r2, #3
 8019912:	00d2      	lsls	r2, r2, #3
 8019914:	fb11 f103 	smulbb	r1, r1, r3
 8019918:	b2d2      	uxtb	r2, r2
 801991a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801991e:	fb02 1204 	mla	r2, r2, r4, r1
 8019922:	fb17 f703 	smulbb	r7, r7, r3
 8019926:	b2ad      	uxth	r5, r5
 8019928:	b292      	uxth	r2, r2
 801992a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801992e:	fb00 7004 	mla	r0, r0, r4, r7
 8019932:	1c6b      	adds	r3, r5, #1
 8019934:	1c57      	adds	r7, r2, #1
 8019936:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801993a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801993e:	b280      	uxth	r0, r0
 8019940:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8019944:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8019948:	433d      	orrs	r5, r7
 801994a:	1c47      	adds	r7, r0, #1
 801994c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8019950:	097f      	lsrs	r7, r7, #5
 8019952:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8019956:	433d      	orrs	r5, r7
 8019958:	f8ae 5000 	strh.w	r5, [lr]
 801995c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801995e:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8019960:	4413      	add	r3, r2
 8019962:	9321      	str	r3, [sp, #132]	@ 0x84
 8019964:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8019966:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019968:	441a      	add	r2, r3
 801996a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801996c:	9222      	str	r2, [sp, #136]	@ 0x88
 801996e:	3b01      	subs	r3, #1
 8019970:	f10e 0e02 	add.w	lr, lr, #2
 8019974:	9313      	str	r3, [sp, #76]	@ 0x4c
 8019976:	e61c      	b.n	80195b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8019978:	fb08 f000 	mul.w	r0, r8, r0
 801997c:	fb09 0303 	mla	r3, r9, r3, r0
 8019980:	e6dc      	b.n	801973c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8019982:	46b9      	mov	r9, r7
 8019984:	e704      	b.n	8019790 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8019986:	f1c2 0110 	rsb	r1, r2, #16
 801998a:	437a      	muls	r2, r7
 801998c:	fb09 2901 	mla	r9, r9, r1, r2
 8019990:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8019994:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8019998:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801999c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80199a0:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80199a4:	4302      	orrs	r2, r0
 80199a6:	e795      	b.n	80198d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 80199a8:	f8ae 2000 	strh.w	r2, [lr]
 80199ac:	e7d6      	b.n	801995c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 80199ae:	b017      	add	sp, #92	@ 0x5c
 80199b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080199b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80199b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80199b8:	b085      	sub	sp, #20
 80199ba:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 80199be:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 80199c2:	9103      	str	r1, [sp, #12]
 80199c4:	fb00 7406 	mla	r4, r0, r6, r7
 80199c8:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 80199cc:	2800      	cmp	r0, #0
 80199ce:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 80199d2:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 80199d6:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 80199da:	9501      	str	r5, [sp, #4]
 80199dc:	eb02 0904 	add.w	r9, r2, r4
 80199e0:	f2c0 8141 	blt.w	8019c66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 80199e4:	4583      	cmp	fp, r0
 80199e6:	f340 813e 	ble.w	8019c66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 80199ea:	2f00      	cmp	r7, #0
 80199ec:	f2c0 8137 	blt.w	8019c5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 80199f0:	42be      	cmp	r6, r7
 80199f2:	f340 8134 	ble.w	8019c5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 80199f6:	f812 c004 	ldrb.w	ip, [r2, r4]
 80199fa:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 80199fe:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8019a02:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 8019a06:	4355      	muls	r5, r2
 8019a08:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019a0c:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 8019a10:	fb0c f203 	mul.w	r2, ip, r3
 8019a14:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8019a18:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 8019a1c:	441d      	add	r5, r3
 8019a1e:	f102 0320 	add.w	r3, r2, #32
 8019a22:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019a26:	0a1b      	lsrs	r3, r3, #8
 8019a28:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8019a2c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019a30:	431c      	orrs	r4, r3
 8019a32:	1c7b      	adds	r3, r7, #1
 8019a34:	f100 811c 	bmi.w	8019c70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8019a38:	429e      	cmp	r6, r3
 8019a3a:	f340 8119 	ble.w	8019c70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8019a3e:	2900      	cmp	r1, #0
 8019a40:	f000 8119 	beq.w	8019c76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8019a44:	9a01      	ldr	r2, [sp, #4]
 8019a46:	f899 3001 	ldrb.w	r3, [r9, #1]
 8019a4a:	8855      	ldrh	r5, [r2, #2]
 8019a4c:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8019a50:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 8019a54:	fb08 f802 	mul.w	r8, r8, r2
 8019a58:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019a5c:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 8019a60:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8019a64:	435d      	muls	r5, r3
 8019a66:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8019a6a:	44d0      	add	r8, sl
 8019a6c:	f105 0a20 	add.w	sl, r5, #32
 8019a70:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8019a74:	0a2d      	lsrs	r5, r5, #8
 8019a76:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8019a7a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019a7e:	432a      	orrs	r2, r5
 8019a80:	3001      	adds	r0, #1
 8019a82:	f100 80fe 	bmi.w	8019c82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8019a86:	4583      	cmp	fp, r0
 8019a88:	f340 80fb 	ble.w	8019c82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8019a8c:	f1be 0f00 	cmp.w	lr, #0
 8019a90:	f000 80fc 	beq.w	8019c8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8019a94:	2f00      	cmp	r7, #0
 8019a96:	f2c0 80f1 	blt.w	8019c7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8019a9a:	42be      	cmp	r6, r7
 8019a9c:	f340 80ee 	ble.w	8019c7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8019aa0:	9801      	ldr	r0, [sp, #4]
 8019aa2:	f819 5006 	ldrb.w	r5, [r9, r6]
 8019aa6:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8019aaa:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019aae:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 8019ab2:	fb0a fa00 	mul.w	sl, sl, r0
 8019ab6:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 8019aba:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8019abe:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8019ac2:	fb05 f808 	mul.w	r8, r5, r8
 8019ac6:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 8019aca:	4482      	add	sl, r0
 8019acc:	f108 0020 	add.w	r0, r8, #32
 8019ad0:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8019ad4:	0a00      	lsrs	r0, r0, #8
 8019ad6:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8019ada:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8019ade:	ea4b 0b00 	orr.w	fp, fp, r0
 8019ae2:	3701      	adds	r7, #1
 8019ae4:	f100 80d7 	bmi.w	8019c96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8019ae8:	42be      	cmp	r6, r7
 8019aea:	f340 80d4 	ble.w	8019c96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8019aee:	2900      	cmp	r1, #0
 8019af0:	f000 80d4 	beq.w	8019c9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8019af4:	3601      	adds	r6, #1
 8019af6:	9801      	ldr	r0, [sp, #4]
 8019af8:	f819 7006 	ldrb.w	r7, [r9, r6]
 8019afc:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8019b00:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8019b04:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 8019b08:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8019b0c:	fb09 f906 	mul.w	r9, r9, r6
 8019b10:	fb07 f800 	mul.w	r8, r7, r0
 8019b14:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 8019b18:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8019b1c:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 8019b20:	44d1      	add	r9, sl
 8019b22:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8019b26:	f108 0020 	add.w	r0, r8, #32
 8019b2a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8019b2e:	0a00      	lsrs	r0, r0, #8
 8019b30:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8019b34:	4330      	orrs	r0, r6
 8019b36:	b28e      	uxth	r6, r1
 8019b38:	fa1f f98e 	uxth.w	r9, lr
 8019b3c:	fb06 f809 	mul.w	r8, r6, r9
 8019b40:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8019b44:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8019b48:	0136      	lsls	r6, r6, #4
 8019b4a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8019b4e:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8019b52:	9601      	str	r6, [sp, #4]
 8019b54:	ea4a 0404 	orr.w	r4, sl, r4
 8019b58:	fa1f f689 	uxth.w	r6, r9
 8019b5c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8019b60:	fb11 f90e 	smulbb	r9, r1, lr
 8019b64:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8019b68:	9602      	str	r6, [sp, #8]
 8019b6a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8019b6e:	4626      	mov	r6, r4
 8019b70:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019b74:	f1ce 0410 	rsb	r4, lr, #16
 8019b78:	1a64      	subs	r4, r4, r1
 8019b7a:	ea4a 0202 	orr.w	r2, sl, r2
 8019b7e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8019b82:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8019b86:	434a      	muls	r2, r1
 8019b88:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8019b8c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8019b90:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8019b94:	fb04 2406 	mla	r4, r4, r6, r2
 8019b98:	ea4a 0000 	orr.w	r0, sl, r0
 8019b9c:	fb09 4200 	mla	r2, r9, r0, r4
 8019ba0:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8019ba4:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8019ba8:	9801      	ldr	r0, [sp, #4]
 8019baa:	9903      	ldr	r1, [sp, #12]
 8019bac:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8019bb0:	ea44 0b0b 	orr.w	fp, r4, fp
 8019bb4:	9c02      	ldr	r4, [sp, #8]
 8019bb6:	8809      	ldrh	r1, [r1, #0]
 8019bb8:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 8019bbc:	1b00      	subs	r0, r0, r4
 8019bbe:	9c01      	ldr	r4, [sp, #4]
 8019bc0:	eba4 0608 	sub.w	r6, r4, r8
 8019bc4:	b2b6      	uxth	r6, r6
 8019bc6:	b280      	uxth	r0, r0
 8019bc8:	4373      	muls	r3, r6
 8019bca:	fb0c 3300 	mla	r3, ip, r0, r3
 8019bce:	9802      	ldr	r0, [sp, #8]
 8019bd0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8019bd4:	fb00 3505 	mla	r5, r0, r5, r3
 8019bd8:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8019bdc:	fb08 5707 	mla	r7, r8, r7, r5
 8019be0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8019be4:	120b      	asrs	r3, r1, #8
 8019be6:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8019bea:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8019bee:	b2ff      	uxtb	r7, r7
 8019bf0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019bf4:	10c8      	asrs	r0, r1, #3
 8019bf6:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8019bfa:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8019bfe:	00c9      	lsls	r1, r1, #3
 8019c00:	437b      	muls	r3, r7
 8019c02:	ea42 0e0e 	orr.w	lr, r2, lr
 8019c06:	b2c9      	uxtb	r1, r1
 8019c08:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8019c0c:	fa1f f28e 	uxth.w	r2, lr
 8019c10:	4378      	muls	r0, r7
 8019c12:	434f      	muls	r7, r1
 8019c14:	1c59      	adds	r1, r3, #1
 8019c16:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8019c1a:	1213      	asrs	r3, r2, #8
 8019c1c:	f023 0307 	bic.w	r3, r3, #7
 8019c20:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8019c24:	1c41      	adds	r1, r0, #1
 8019c26:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8019c2a:	10d1      	asrs	r1, r2, #3
 8019c2c:	f021 0103 	bic.w	r1, r1, #3
 8019c30:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8019c34:	021b      	lsls	r3, r3, #8
 8019c36:	00c9      	lsls	r1, r1, #3
 8019c38:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8019c3c:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8019c40:	430b      	orrs	r3, r1
 8019c42:	1c79      	adds	r1, r7, #1
 8019c44:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8019c48:	00d2      	lsls	r2, r2, #3
 8019c4a:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8019c4e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8019c52:	431a      	orrs	r2, r3
 8019c54:	9b03      	ldr	r3, [sp, #12]
 8019c56:	801a      	strh	r2, [r3, #0]
 8019c58:	b005      	add	sp, #20
 8019c5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019c5e:	f04f 0c00 	mov.w	ip, #0
 8019c62:	4664      	mov	r4, ip
 8019c64:	e6e5      	b.n	8019a32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8019c66:	2300      	movs	r3, #0
 8019c68:	469c      	mov	ip, r3
 8019c6a:	461a      	mov	r2, r3
 8019c6c:	461c      	mov	r4, r3
 8019c6e:	e707      	b.n	8019a80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8019c70:	2300      	movs	r3, #0
 8019c72:	461a      	mov	r2, r3
 8019c74:	e704      	b.n	8019a80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8019c76:	460b      	mov	r3, r1
 8019c78:	460a      	mov	r2, r1
 8019c7a:	e701      	b.n	8019a80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8019c7c:	2500      	movs	r5, #0
 8019c7e:	46ab      	mov	fp, r5
 8019c80:	e72f      	b.n	8019ae2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8019c82:	2700      	movs	r7, #0
 8019c84:	463d      	mov	r5, r7
 8019c86:	4638      	mov	r0, r7
 8019c88:	46bb      	mov	fp, r7
 8019c8a:	e754      	b.n	8019b36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8019c8c:	4677      	mov	r7, lr
 8019c8e:	4675      	mov	r5, lr
 8019c90:	4670      	mov	r0, lr
 8019c92:	46f3      	mov	fp, lr
 8019c94:	e74f      	b.n	8019b36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8019c96:	2700      	movs	r7, #0
 8019c98:	4638      	mov	r0, r7
 8019c9a:	e74c      	b.n	8019b36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8019c9c:	460f      	mov	r7, r1
 8019c9e:	4608      	mov	r0, r1
 8019ca0:	e749      	b.n	8019b36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08019ca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019ca4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019ca8:	b093      	sub	sp, #76	@ 0x4c
 8019caa:	9210      	str	r2, [sp, #64]	@ 0x40
 8019cac:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8019cae:	910e      	str	r1, [sp, #56]	@ 0x38
 8019cb0:	9306      	str	r3, [sp, #24]
 8019cb2:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8019cb6:	9011      	str	r0, [sp, #68]	@ 0x44
 8019cb8:	6850      	ldr	r0, [r2, #4]
 8019cba:	6812      	ldr	r2, [r2, #0]
 8019cbc:	fb00 1303 	mla	r3, r0, r3, r1
 8019cc0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019cc4:	9307      	str	r3, [sp, #28]
 8019cc6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019cc8:	681b      	ldr	r3, [r3, #0]
 8019cca:	9308      	str	r3, [sp, #32]
 8019ccc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019cce:	685b      	ldr	r3, [r3, #4]
 8019cd0:	9309      	str	r3, [sp, #36]	@ 0x24
 8019cd2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019cd4:	2b00      	cmp	r3, #0
 8019cd6:	dc03      	bgt.n	8019ce0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019cd8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019cda:	2b00      	cmp	r3, #0
 8019cdc:	f340 83b4 	ble.w	801a448 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8019ce0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019ce2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019ce6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019cea:	1e48      	subs	r0, r1, #1
 8019cec:	1e55      	subs	r5, r2, #1
 8019cee:	9b06      	ldr	r3, [sp, #24]
 8019cf0:	2b00      	cmp	r3, #0
 8019cf2:	f340 8163 	ble.w	8019fbc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8019cf6:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 8019cf8:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8019cfa:	1436      	asrs	r6, r6, #16
 8019cfc:	ea4f 4323 	mov.w	r3, r3, asr #16
 8019d00:	d406      	bmi.n	8019d10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019d02:	4286      	cmp	r6, r0
 8019d04:	da04      	bge.n	8019d10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019d06:	2b00      	cmp	r3, #0
 8019d08:	db02      	blt.n	8019d10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019d0a:	42ab      	cmp	r3, r5
 8019d0c:	f2c0 8157 	blt.w	8019fbe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8019d10:	3601      	adds	r6, #1
 8019d12:	f100 8144 	bmi.w	8019f9e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8019d16:	42b1      	cmp	r1, r6
 8019d18:	f2c0 8141 	blt.w	8019f9e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8019d1c:	3301      	adds	r3, #1
 8019d1e:	f100 813e 	bmi.w	8019f9e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8019d22:	429a      	cmp	r2, r3
 8019d24:	f2c0 813b 	blt.w	8019f9e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8019d28:	9b06      	ldr	r3, [sp, #24]
 8019d2a:	9f07      	ldr	r7, [sp, #28]
 8019d2c:	930f      	str	r3, [sp, #60]	@ 0x3c
 8019d2e:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8019d32:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8019d34:	2b00      	cmp	r3, #0
 8019d36:	f340 8164 	ble.w	801a002 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8019d3a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8019d3c:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 8019d3e:	1418      	asrs	r0, r3, #16
 8019d40:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8019d42:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8019d46:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8019d48:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8019d4c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019d4e:	142d      	asrs	r5, r5, #16
 8019d50:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8019d54:	f100 81ee 	bmi.w	801a134 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8019d58:	f102 3eff 	add.w	lr, r2, #4294967295
 8019d5c:	4575      	cmp	r5, lr
 8019d5e:	f280 81e9 	bge.w	801a134 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8019d62:	2800      	cmp	r0, #0
 8019d64:	f2c0 81e6 	blt.w	801a134 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8019d68:	f103 3eff 	add.w	lr, r3, #4294967295
 8019d6c:	4570      	cmp	r0, lr
 8019d6e:	f280 81e1 	bge.w	801a134 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8019d72:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019d74:	b212      	sxth	r2, r2
 8019d76:	fb00 5002 	mla	r0, r0, r2, r5
 8019d7a:	fa1f fe81 	uxth.w	lr, r1
 8019d7e:	eb03 0a00 	add.w	sl, r3, r0
 8019d82:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8019d86:	f813 9000 	ldrb.w	r9, [r3, r0]
 8019d8a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8019d8e:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 8019d92:	b29b      	uxth	r3, r3
 8019d94:	f1bc 0f00 	cmp.w	ip, #0
 8019d98:	f000 8179 	beq.w	801a08e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8019d9c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8019da0:	940a      	str	r4, [sp, #40]	@ 0x28
 8019da2:	eb0a 0b02 	add.w	fp, sl, r2
 8019da6:	fa1f fa8c 	uxth.w	sl, ip
 8019daa:	fb0a fe0e 	mul.w	lr, sl, lr
 8019dae:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8019db2:	fa1f fa8a 	uxth.w	sl, sl
 8019db6:	eba5 050e 	sub.w	r5, r5, lr
 8019dba:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8019dbe:	940b      	str	r4, [sp, #44]	@ 0x2c
 8019dc0:	eba3 030a 	sub.w	r3, r3, sl
 8019dc4:	b2ad      	uxth	r5, r5
 8019dc6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8019dc8:	b29b      	uxth	r3, r3
 8019dca:	fb08 f505 	mul.w	r5, r8, r5
 8019dce:	fb09 5303 	mla	r3, r9, r3, r5
 8019dd2:	fb0a 3304 	mla	r3, sl, r4, r3
 8019dd6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8019dd8:	fb0e 3304 	mla	r3, lr, r4, r3
 8019ddc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019de0:	2b00      	cmp	r3, #0
 8019de2:	f000 80cf 	beq.w	8019f84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8019de6:	9c08      	ldr	r4, [sp, #32]
 8019de8:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8019dec:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8019df0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8019df4:	f000 8150 	beq.w	801a098 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8019df8:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8019dfc:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8019e00:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8019e04:	fb09 f000 	mul.w	r0, r9, r0
 8019e08:	fb0a fe0e 	mul.w	lr, sl, lr
 8019e0c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8019e10:	f100 0b20 	add.w	fp, r0, #32
 8019e14:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8019e18:	44ce      	add	lr, r9
 8019e1a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8019e1e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019e22:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8019e26:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8019e2a:	ea4e 0909 	orr.w	r9, lr, r9
 8019e2e:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8019e32:	8868      	ldrh	r0, [r5, #2]
 8019e34:	d019      	beq.n	8019e6a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8019e36:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8019e3a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8019e3e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8019e42:	fb08 f800 	mul.w	r8, r8, r0
 8019e46:	fb0a fe0e 	mul.w	lr, sl, lr
 8019e4a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8019e4e:	f108 0b20 	add.w	fp, r8, #32
 8019e52:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8019e56:	4486      	add	lr, r0
 8019e58:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8019e5c:	0a00      	lsrs	r0, r0, #8
 8019e5e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8019e62:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8019e66:	ea4e 0000 	orr.w	r0, lr, r0
 8019e6a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8019e6e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8019e72:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8019e76:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8019e7a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8019e7e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8019e82:	ea4e 0909 	orr.w	r9, lr, r9
 8019e86:	ea4a 0000 	orr.w	r0, sl, r0
 8019e8a:	f1bc 0f00 	cmp.w	ip, #0
 8019e8e:	f000 8105 	beq.w	801a09c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8019e92:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 8019e96:	3a01      	subs	r2, #1
 8019e98:	0052      	lsls	r2, r2, #1
 8019e9a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8019e9c:	3202      	adds	r2, #2
 8019e9e:	2cff      	cmp	r4, #255	@ 0xff
 8019ea0:	eb05 0e02 	add.w	lr, r5, r2
 8019ea4:	5aaa      	ldrh	r2, [r5, r2]
 8019ea6:	d018      	beq.n	8019eda <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8019ea8:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 8019eac:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019eb0:	fb04 fa02 	mul.w	sl, r4, r2
 8019eb4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019eb8:	fb08 f805 	mul.w	r8, r8, r5
 8019ebc:	f10a 0520 	add.w	r5, sl, #32
 8019ec0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8019ec4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8019ec8:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8019ecc:	4442      	add	r2, r8
 8019ece:	0a2d      	lsrs	r5, r5, #8
 8019ed0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8019ed4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019ed8:	432a      	orrs	r2, r5
 8019eda:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8019edc:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8019ee0:	2cff      	cmp	r4, #255	@ 0xff
 8019ee2:	d01a      	beq.n	8019f1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8019ee4:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 8019ee8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019eec:	fb04 fa05 	mul.w	sl, r4, r5
 8019ef0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019ef4:	fb08 f80e 	mul.w	r8, r8, lr
 8019ef8:	f10a 0e20 	add.w	lr, sl, #32
 8019efc:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8019f00:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8019f04:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8019f08:	4445      	add	r5, r8
 8019f0a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019f0e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8019f12:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8019f16:	ea45 050e 	orr.w	r5, r5, lr
 8019f1a:	fb1c fe01 	smulbb	lr, ip, r1
 8019f1e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8019f22:	f1cc 0810 	rsb	r8, ip, #16
 8019f26:	eba8 0801 	sub.w	r8, r8, r1
 8019f2a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8019f2e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8019f32:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8019f36:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8019f3a:	4341      	muls	r1, r0
 8019f3c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8019f40:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019f44:	ea4a 0202 	orr.w	r2, sl, r2
 8019f48:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8019f4c:	fb09 1108 	mla	r1, r9, r8, r1
 8019f50:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8019f54:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8019f58:	fb0c 1102 	mla	r1, ip, r2, r1
 8019f5c:	ea4b 0505 	orr.w	r5, fp, r5
 8019f60:	fb0e 1e05 	mla	lr, lr, r5, r1
 8019f64:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8019f68:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8019f6c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019f70:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8019f74:	ea42 0e0e 	orr.w	lr, r2, lr
 8019f78:	fa1f f28e 	uxth.w	r2, lr
 8019f7c:	2bff      	cmp	r3, #255	@ 0xff
 8019f7e:	f040 80a1 	bne.w	801a0c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8019f82:	803a      	strh	r2, [r7, #0]
 8019f84:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8019f86:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 8019f88:	4413      	add	r3, r2
 8019f8a:	931d      	str	r3, [sp, #116]	@ 0x74
 8019f8c:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8019f8e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8019f90:	441a      	add	r2, r3
 8019f92:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8019f94:	921e      	str	r2, [sp, #120]	@ 0x78
 8019f96:	3b01      	subs	r3, #1
 8019f98:	3702      	adds	r7, #2
 8019f9a:	930f      	str	r3, [sp, #60]	@ 0x3c
 8019f9c:	e6c9      	b.n	8019d32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8019f9e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8019fa0:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 8019fa2:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 8019fa4:	4433      	add	r3, r6
 8019fa6:	931d      	str	r3, [sp, #116]	@ 0x74
 8019fa8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8019faa:	441c      	add	r4, r3
 8019fac:	9b06      	ldr	r3, [sp, #24]
 8019fae:	941e      	str	r4, [sp, #120]	@ 0x78
 8019fb0:	3b01      	subs	r3, #1
 8019fb2:	9306      	str	r3, [sp, #24]
 8019fb4:	9b07      	ldr	r3, [sp, #28]
 8019fb6:	3302      	adds	r3, #2
 8019fb8:	9307      	str	r3, [sp, #28]
 8019fba:	e698      	b.n	8019cee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019fbc:	d028      	beq.n	801a010 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8019fbe:	9b06      	ldr	r3, [sp, #24]
 8019fc0:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8019fc2:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 8019fc4:	3b01      	subs	r3, #1
 8019fc6:	fb00 5003 	mla	r0, r0, r3, r5
 8019fca:	1400      	asrs	r0, r0, #16
 8019fcc:	f53f aeac 	bmi.w	8019d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019fd0:	3901      	subs	r1, #1
 8019fd2:	4288      	cmp	r0, r1
 8019fd4:	f6bf aea8 	bge.w	8019d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019fd8:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8019fda:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8019fdc:	fb01 0303 	mla	r3, r1, r3, r0
 8019fe0:	141b      	asrs	r3, r3, #16
 8019fe2:	f53f aea1 	bmi.w	8019d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019fe6:	3a01      	subs	r2, #1
 8019fe8:	4293      	cmp	r3, r2
 8019fea:	f6bf ae9d 	bge.w	8019d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019fee:	9b06      	ldr	r3, [sp, #24]
 8019ff0:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8019ff4:	930f      	str	r3, [sp, #60]	@ 0x3c
 8019ff6:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8019ffa:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8019ffc:	2b00      	cmp	r3, #0
 8019ffe:	f300 80b6 	bgt.w	801a16e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801a002:	9b06      	ldr	r3, [sp, #24]
 801a004:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a008:	9b07      	ldr	r3, [sp, #28]
 801a00a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801a00e:	9307      	str	r3, [sp, #28]
 801a010:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a012:	2b00      	cmp	r3, #0
 801a014:	f340 8218 	ble.w	801a448 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801a018:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a01c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801a020:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a024:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a026:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a02a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a02e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a032:	eef0 6a62 	vmov.f32	s13, s5
 801a036:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a03a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a03e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a042:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 801a046:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a04a:	eef0 6a43 	vmov.f32	s13, s6
 801a04e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a052:	ee12 2a90 	vmov	r2, s5
 801a056:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a05a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a05e:	ee13 2a10 	vmov	r2, s6
 801a062:	931f      	str	r3, [sp, #124]	@ 0x7c
 801a064:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a066:	fb92 f3f3 	sdiv	r3, r2, r3
 801a06a:	9320      	str	r3, [sp, #128]	@ 0x80
 801a06c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a06e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801a070:	3b01      	subs	r3, #1
 801a072:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a076:	930e      	str	r3, [sp, #56]	@ 0x38
 801a078:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a07a:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 801a07e:	bf08      	it	eq
 801a080:	4613      	moveq	r3, r2
 801a082:	9306      	str	r3, [sp, #24]
 801a084:	eeb0 3a67 	vmov.f32	s6, s15
 801a088:	eef0 2a47 	vmov.f32	s5, s14
 801a08c:	e621      	b.n	8019cd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801a08e:	fb08 f505 	mul.w	r5, r8, r5
 801a092:	fb09 5303 	mla	r3, r9, r3, r5
 801a096:	e6a1      	b.n	8019ddc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801a098:	4681      	mov	r9, r0
 801a09a:	e6c8      	b.n	8019e2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801a09c:	f1c1 0210 	rsb	r2, r1, #16
 801a0a0:	4341      	muls	r1, r0
 801a0a2:	fb09 1902 	mla	r9, r9, r2, r1
 801a0a6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801a0aa:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801a0ae:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801a0b2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a0b6:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801a0ba:	ea42 0909 	orr.w	r9, r2, r9
 801a0be:	fa1f f289 	uxth.w	r2, r9
 801a0c2:	e75b      	b.n	8019f7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801a0c4:	f8b7 c000 	ldrh.w	ip, [r7]
 801a0c8:	43db      	mvns	r3, r3
 801a0ca:	ea4f 202c 	mov.w	r0, ip, asr #8
 801a0ce:	fa5f fe83 	uxtb.w	lr, r3
 801a0d2:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801a0d6:	fb00 f00e 	mul.w	r0, r0, lr
 801a0da:	1c41      	adds	r1, r0, #1
 801a0dc:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801a0e0:	1211      	asrs	r1, r2, #8
 801a0e2:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801a0e6:	f021 0107 	bic.w	r1, r1, #7
 801a0ea:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801a0ee:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801a0f2:	48d7      	ldr	r0, [pc, #860]	@ (801a450 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801a0f4:	fb05 f50e 	mul.w	r5, r5, lr
 801a0f8:	b2c9      	uxtb	r1, r1
 801a0fa:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801a0fe:	1c69      	adds	r1, r5, #1
 801a100:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801a104:	10d1      	asrs	r1, r2, #3
 801a106:	f021 0103 	bic.w	r1, r1, #3
 801a10a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801a10e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801a112:	b2db      	uxtb	r3, r3
 801a114:	00c9      	lsls	r1, r1, #3
 801a116:	fb03 f30e 	mul.w	r3, r3, lr
 801a11a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a11e:	4301      	orrs	r1, r0
 801a120:	1c58      	adds	r0, r3, #1
 801a122:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801a126:	00d2      	lsls	r2, r2, #3
 801a128:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801a12c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801a130:	430a      	orrs	r2, r1
 801a132:	e726      	b.n	8019f82 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801a134:	f115 0e01 	adds.w	lr, r5, #1
 801a138:	f53f af24 	bmi.w	8019f84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801a13c:	4572      	cmp	r2, lr
 801a13e:	f6ff af21 	blt.w	8019f84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801a142:	f110 0e01 	adds.w	lr, r0, #1
 801a146:	f53f af1d 	bmi.w	8019f84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801a14a:	4573      	cmp	r3, lr
 801a14c:	f6ff af1a 	blt.w	8019f84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801a150:	b21b      	sxth	r3, r3
 801a152:	b212      	sxth	r2, r2
 801a154:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801a158:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801a15c:	9301      	str	r3, [sp, #4]
 801a15e:	9200      	str	r2, [sp, #0]
 801a160:	4639      	mov	r1, r7
 801a162:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801a166:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801a168:	f7ff fc24 	bl	80199b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801a16c:	e70a      	b.n	8019f84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801a16e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801a170:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801a174:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801a176:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801a17a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a17c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a180:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801a182:	141f      	asrs	r7, r3, #16
 801a184:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801a186:	141b      	asrs	r3, r3, #16
 801a188:	fb01 3707 	mla	r7, r1, r7, r3
 801a18c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a18e:	fa1f fc82 	uxth.w	ip, r2
 801a192:	eb03 0a07 	add.w	sl, r3, r7
 801a196:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801a19a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801a19e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801a1a2:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801a1a6:	b29b      	uxth	r3, r3
 801a1a8:	2d00      	cmp	r5, #0
 801a1aa:	f000 80fe 	beq.w	801a3aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801a1ae:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801a1b2:	940c      	str	r4, [sp, #48]	@ 0x30
 801a1b4:	eb0a 0b01 	add.w	fp, sl, r1
 801a1b8:	fa1f fa85 	uxth.w	sl, r5
 801a1bc:	fb0a fc0c 	mul.w	ip, sl, ip
 801a1c0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801a1c4:	fa1f fa8a 	uxth.w	sl, sl
 801a1c8:	eba0 000c 	sub.w	r0, r0, ip
 801a1cc:	eba3 030a 	sub.w	r3, r3, sl
 801a1d0:	b280      	uxth	r0, r0
 801a1d2:	fb08 f000 	mul.w	r0, r8, r0
 801a1d6:	b29b      	uxth	r3, r3
 801a1d8:	fb09 0303 	mla	r3, r9, r3, r0
 801a1dc:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801a1de:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801a1e2:	940d      	str	r4, [sp, #52]	@ 0x34
 801a1e4:	fb0a 3300 	mla	r3, sl, r0, r3
 801a1e8:	fb0c 3304 	mla	r3, ip, r4, r3
 801a1ec:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a1f0:	2b00      	cmp	r3, #0
 801a1f2:	f000 80cc 	beq.w	801a38e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801a1f6:	9808      	ldr	r0, [sp, #32]
 801a1f8:	9c08      	ldr	r4, [sp, #32]
 801a1fa:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801a1fe:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801a202:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801a206:	f000 80d5 	beq.w	801a3b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801a20a:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801a20e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801a212:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801a216:	fb09 f707 	mul.w	r7, r9, r7
 801a21a:	fb0a fc0c 	mul.w	ip, sl, ip
 801a21e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801a222:	f107 0b20 	add.w	fp, r7, #32
 801a226:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801a22a:	44cc      	add	ip, r9
 801a22c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801a230:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a234:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801a238:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801a23c:	ea4c 0909 	orr.w	r9, ip, r9
 801a240:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801a244:	8847      	ldrh	r7, [r0, #2]
 801a246:	d019      	beq.n	801a27c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801a248:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801a24c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801a250:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801a254:	fb08 f807 	mul.w	r8, r8, r7
 801a258:	fb0a fc0c 	mul.w	ip, sl, ip
 801a25c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801a260:	f108 0b20 	add.w	fp, r8, #32
 801a264:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801a268:	44bc      	add	ip, r7
 801a26a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801a26e:	0a3f      	lsrs	r7, r7, #8
 801a270:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801a274:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801a278:	ea4c 0707 	orr.w	r7, ip, r7
 801a27c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801a280:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801a284:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a288:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801a28c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801a290:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801a294:	ea4c 0909 	orr.w	r9, ip, r9
 801a298:	ea4a 0707 	orr.w	r7, sl, r7
 801a29c:	2d00      	cmp	r5, #0
 801a29e:	f000 808b 	beq.w	801a3b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801a2a2:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801a2a6:	3901      	subs	r1, #1
 801a2a8:	0049      	lsls	r1, r1, #1
 801a2aa:	3102      	adds	r1, #2
 801a2ac:	eb00 0c01 	add.w	ip, r0, r1
 801a2b0:	5a41      	ldrh	r1, [r0, r1]
 801a2b2:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801a2b4:	28ff      	cmp	r0, #255	@ 0xff
 801a2b6:	d019      	beq.n	801a2ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801a2b8:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801a2ba:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801a2be:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a2c2:	fb04 fa01 	mul.w	sl, r4, r1
 801a2c6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801a2ca:	fb08 f800 	mul.w	r8, r8, r0
 801a2ce:	f10a 0020 	add.w	r0, sl, #32
 801a2d2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801a2d6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801a2da:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801a2de:	4441      	add	r1, r8
 801a2e0:	0a00      	lsrs	r0, r0, #8
 801a2e2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801a2e6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a2ea:	4301      	orrs	r1, r0
 801a2ec:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801a2ee:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801a2f2:	2cff      	cmp	r4, #255	@ 0xff
 801a2f4:	d01a      	beq.n	801a32c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801a2f6:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801a2fa:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a2fe:	fb04 fa00 	mul.w	sl, r4, r0
 801a302:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801a306:	fb08 f80c 	mul.w	r8, r8, ip
 801a30a:	f10a 0c20 	add.w	ip, sl, #32
 801a30e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801a312:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801a316:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801a31a:	4440      	add	r0, r8
 801a31c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a320:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801a324:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801a328:	ea40 000c 	orr.w	r0, r0, ip
 801a32c:	fb15 fc02 	smulbb	ip, r5, r2
 801a330:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801a334:	f1c5 0810 	rsb	r8, r5, #16
 801a338:	eba8 0802 	sub.w	r8, r8, r2
 801a33c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801a340:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801a344:	437a      	muls	r2, r7
 801a346:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801a34a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801a34e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801a352:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801a356:	fb09 2208 	mla	r2, r9, r8, r2
 801a35a:	ea4a 0101 	orr.w	r1, sl, r1
 801a35e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801a362:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801a366:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a36a:	fb05 2201 	mla	r2, r5, r1, r2
 801a36e:	ea4b 0000 	orr.w	r0, fp, r0
 801a372:	fb0c 2200 	mla	r2, ip, r0, r2
 801a376:	0d57      	lsrs	r7, r2, #21
 801a378:	0952      	lsrs	r2, r2, #5
 801a37a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801a37e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a382:	433a      	orrs	r2, r7
 801a384:	2bff      	cmp	r3, #255	@ 0xff
 801a386:	b292      	uxth	r2, r2
 801a388:	d127      	bne.n	801a3da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801a38a:	f8ae 2000 	strh.w	r2, [lr]
 801a38e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801a390:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801a392:	4413      	add	r3, r2
 801a394:	931d      	str	r3, [sp, #116]	@ 0x74
 801a396:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801a398:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a39a:	441a      	add	r2, r3
 801a39c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801a39e:	921e      	str	r2, [sp, #120]	@ 0x78
 801a3a0:	3b01      	subs	r3, #1
 801a3a2:	f10e 0e02 	add.w	lr, lr, #2
 801a3a6:	930f      	str	r3, [sp, #60]	@ 0x3c
 801a3a8:	e627      	b.n	8019ffa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801a3aa:	fb08 f000 	mul.w	r0, r8, r0
 801a3ae:	fb09 0303 	mla	r3, r9, r3, r0
 801a3b2:	e71b      	b.n	801a1ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801a3b4:	46b9      	mov	r9, r7
 801a3b6:	e743      	b.n	801a240 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801a3b8:	f1c2 0110 	rsb	r1, r2, #16
 801a3bc:	437a      	muls	r2, r7
 801a3be:	fb09 2901 	mla	r9, r9, r1, r2
 801a3c2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801a3c6:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801a3ca:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801a3ce:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a3d2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a3d6:	4302      	orrs	r2, r0
 801a3d8:	e7d4      	b.n	801a384 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801a3da:	f8be 7000 	ldrh.w	r7, [lr]
 801a3de:	4c1c      	ldr	r4, [pc, #112]	@ (801a450 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801a3e0:	43db      	mvns	r3, r3
 801a3e2:	1238      	asrs	r0, r7, #8
 801a3e4:	fa5f fc83 	uxtb.w	ip, r3
 801a3e8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801a3ec:	10fd      	asrs	r5, r7, #3
 801a3ee:	fb00 f00c 	mul.w	r0, r0, ip
 801a3f2:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801a3f6:	fb05 f10c 	mul.w	r1, r5, ip
 801a3fa:	1c45      	adds	r5, r0, #1
 801a3fc:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801a400:	1215      	asrs	r5, r2, #8
 801a402:	f025 0507 	bic.w	r5, r5, #7
 801a406:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801a40a:	1c4d      	adds	r5, r1, #1
 801a40c:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801a410:	10d1      	asrs	r1, r2, #3
 801a412:	f021 0103 	bic.w	r1, r1, #3
 801a416:	00fb      	lsls	r3, r7, #3
 801a418:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801a41c:	b2db      	uxtb	r3, r3
 801a41e:	b2c0      	uxtb	r0, r0
 801a420:	00c9      	lsls	r1, r1, #3
 801a422:	fb03 f30c 	mul.w	r3, r3, ip
 801a426:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a42a:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801a42e:	4308      	orrs	r0, r1
 801a430:	1c59      	adds	r1, r3, #1
 801a432:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801a436:	00d2      	lsls	r2, r2, #3
 801a438:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801a43c:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801a440:	4318      	orrs	r0, r3
 801a442:	f8ae 0000 	strh.w	r0, [lr]
 801a446:	e7a2      	b.n	801a38e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801a448:	b013      	add	sp, #76	@ 0x4c
 801a44a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a44e:	bf00      	nop
 801a450:	fffff800 	.word	0xfffff800

0801a454 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801a454:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a458:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 801a45c:	fb05 4c03 	mla	ip, r5, r3, r4
 801a460:	2d00      	cmp	r5, #0
 801a462:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801a466:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 801a46a:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801a46e:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801a472:	8808      	ldrh	r0, [r1, #0]
 801a474:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801a478:	f2c0 80a7 	blt.w	801a5ca <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801a47c:	45aa      	cmp	sl, r5
 801a47e:	f340 80a4 	ble.w	801a5ca <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801a482:	2c00      	cmp	r4, #0
 801a484:	f2c0 809f 	blt.w	801a5c6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801a488:	42a3      	cmp	r3, r4
 801a48a:	f340 809c 	ble.w	801a5c6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801a48e:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801a492:	1c62      	adds	r2, r4, #1
 801a494:	f100 809c 	bmi.w	801a5d0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801a498:	4293      	cmp	r3, r2
 801a49a:	f340 8099 	ble.w	801a5d0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801a49e:	f1b9 0f00 	cmp.w	r9, #0
 801a4a2:	f000 8095 	beq.w	801a5d0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801a4a6:	f8be c002 	ldrh.w	ip, [lr, #2]
 801a4aa:	3501      	adds	r5, #1
 801a4ac:	f100 8094 	bmi.w	801a5d8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801a4b0:	45aa      	cmp	sl, r5
 801a4b2:	f340 8091 	ble.w	801a5d8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801a4b6:	2f00      	cmp	r7, #0
 801a4b8:	f000 808e 	beq.w	801a5d8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801a4bc:	2c00      	cmp	r4, #0
 801a4be:	f2c0 8089 	blt.w	801a5d4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801a4c2:	42a3      	cmp	r3, r4
 801a4c4:	f340 8086 	ble.w	801a5d4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801a4c8:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801a4cc:	3401      	adds	r4, #1
 801a4ce:	f100 8086 	bmi.w	801a5de <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801a4d2:	42a3      	cmp	r3, r4
 801a4d4:	f340 8083 	ble.w	801a5de <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801a4d8:	f1b9 0f00 	cmp.w	r9, #0
 801a4dc:	d07f      	beq.n	801a5de <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801a4de:	3301      	adds	r3, #1
 801a4e0:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801a4e4:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801a4e8:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801a4ec:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801a4f0:	fb19 fe07 	smulbb	lr, r9, r7
 801a4f4:	ea44 0808 	orr.w	r8, r4, r8
 801a4f8:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801a4fc:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801a500:	f1c7 0210 	rsb	r2, r7, #16
 801a504:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801a508:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801a50c:	ea44 0c0c 	orr.w	ip, r4, ip
 801a510:	eba2 0209 	sub.w	r2, r2, r9
 801a514:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801a518:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801a51c:	fb04 f40c 	mul.w	r4, r4, ip
 801a520:	fb02 4808 	mla	r8, r2, r8, r4
 801a524:	041a      	lsls	r2, r3, #16
 801a526:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801a52a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a52e:	4313      	orrs	r3, r2
 801a530:	042a      	lsls	r2, r5, #16
 801a532:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801a536:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801a53a:	fb0e 8303 	mla	r3, lr, r3, r8
 801a53e:	432a      	orrs	r2, r5
 801a540:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801a544:	fb07 3202 	mla	r2, r7, r2, r3
 801a548:	0d53      	lsrs	r3, r2, #21
 801a54a:	0952      	lsrs	r2, r2, #5
 801a54c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a550:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a554:	431a      	orrs	r2, r3
 801a556:	b293      	uxth	r3, r2
 801a558:	b2b4      	uxth	r4, r6
 801a55a:	1202      	asrs	r2, r0, #8
 801a55c:	43f6      	mvns	r6, r6
 801a55e:	b2f6      	uxtb	r6, r6
 801a560:	121d      	asrs	r5, r3, #8
 801a562:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801a566:	fb12 f206 	smulbb	r2, r2, r6
 801a56a:	10c7      	asrs	r7, r0, #3
 801a56c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801a570:	00c0      	lsls	r0, r0, #3
 801a572:	fb05 2504 	mla	r5, r5, r4, r2
 801a576:	b2c0      	uxtb	r0, r0
 801a578:	10da      	asrs	r2, r3, #3
 801a57a:	00db      	lsls	r3, r3, #3
 801a57c:	b2db      	uxtb	r3, r3
 801a57e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801a582:	fb10 f006 	smulbb	r0, r0, r6
 801a586:	b2ad      	uxth	r5, r5
 801a588:	fb03 0004 	mla	r0, r3, r4, r0
 801a58c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801a590:	fb17 f706 	smulbb	r7, r7, r6
 801a594:	b280      	uxth	r0, r0
 801a596:	1c6b      	adds	r3, r5, #1
 801a598:	fb02 7204 	mla	r2, r2, r4, r7
 801a59c:	b292      	uxth	r2, r2
 801a59e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801a5a2:	1c43      	adds	r3, r0, #1
 801a5a4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801a5a8:	1c50      	adds	r0, r2, #1
 801a5aa:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801a5ae:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801a5b2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a5b6:	0952      	lsrs	r2, r2, #5
 801a5b8:	432b      	orrs	r3, r5
 801a5ba:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a5be:	4313      	orrs	r3, r2
 801a5c0:	800b      	strh	r3, [r1, #0]
 801a5c2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a5c6:	4680      	mov	r8, r0
 801a5c8:	e763      	b.n	801a492 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801a5ca:	4684      	mov	ip, r0
 801a5cc:	4680      	mov	r8, r0
 801a5ce:	e76c      	b.n	801a4aa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801a5d0:	4684      	mov	ip, r0
 801a5d2:	e76a      	b.n	801a4aa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801a5d4:	4605      	mov	r5, r0
 801a5d6:	e779      	b.n	801a4cc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801a5d8:	4603      	mov	r3, r0
 801a5da:	4605      	mov	r5, r0
 801a5dc:	e782      	b.n	801a4e4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801a5de:	4603      	mov	r3, r0
 801a5e0:	e780      	b.n	801a4e4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801a5e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a5e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a5e6:	b093      	sub	sp, #76	@ 0x4c
 801a5e8:	461d      	mov	r5, r3
 801a5ea:	9210      	str	r2, [sp, #64]	@ 0x40
 801a5ec:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801a5ee:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 801a5f2:	920b      	str	r2, [sp, #44]	@ 0x2c
 801a5f4:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 801a5f8:	910a      	str	r1, [sp, #40]	@ 0x28
 801a5fa:	6859      	ldr	r1, [r3, #4]
 801a5fc:	681b      	ldr	r3, [r3, #0]
 801a5fe:	9011      	str	r0, [sp, #68]	@ 0x44
 801a600:	fb01 2707 	mla	r7, r1, r7, r2
 801a604:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801a608:	9307      	str	r3, [sp, #28]
 801a60a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a60c:	681b      	ldr	r3, [r3, #0]
 801a60e:	9309      	str	r3, [sp, #36]	@ 0x24
 801a610:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a612:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801a616:	43db      	mvns	r3, r3
 801a618:	b2db      	uxtb	r3, r3
 801a61a:	9308      	str	r3, [sp, #32]
 801a61c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a61e:	2b00      	cmp	r3, #0
 801a620:	dc03      	bgt.n	801a62a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801a622:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a624:	2b00      	cmp	r3, #0
 801a626:	f340 8203 	ble.w	801aa30 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801a62a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a62c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a630:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a634:	1e48      	subs	r0, r1, #1
 801a636:	f102 3cff 	add.w	ip, r2, #4294967295
 801a63a:	2d00      	cmp	r5, #0
 801a63c:	f340 80da 	ble.w	801a7f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801a640:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801a644:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a648:	d406      	bmi.n	801a658 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a64a:	4586      	cmp	lr, r0
 801a64c:	da04      	bge.n	801a658 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a64e:	2b00      	cmp	r3, #0
 801a650:	db02      	blt.n	801a658 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a652:	4563      	cmp	r3, ip
 801a654:	f2c0 80cf 	blt.w	801a7f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a658:	f11e 0e01 	adds.w	lr, lr, #1
 801a65c:	f100 80c1 	bmi.w	801a7e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a660:	4571      	cmp	r1, lr
 801a662:	f2c0 80be 	blt.w	801a7e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a666:	3301      	adds	r3, #1
 801a668:	f100 80bb 	bmi.w	801a7e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a66c:	429a      	cmp	r2, r3
 801a66e:	f2c0 80b8 	blt.w	801a7e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a672:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801a676:	46a9      	mov	r9, r5
 801a678:	f1b9 0f00 	cmp.w	r9, #0
 801a67c:	f340 80d8 	ble.w	801a830 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801a680:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a682:	1421      	asrs	r1, r4, #16
 801a684:	ea4f 4026 	mov.w	r0, r6, asr #16
 801a688:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a68c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801a690:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801a694:	f100 8111 	bmi.w	801a8ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801a698:	f10e 3aff 	add.w	sl, lr, #4294967295
 801a69c:	4551      	cmp	r1, sl
 801a69e:	f280 810c 	bge.w	801a8ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801a6a2:	2800      	cmp	r0, #0
 801a6a4:	f2c0 8109 	blt.w	801a8ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801a6a8:	f103 3aff 	add.w	sl, r3, #4294967295
 801a6ac:	4550      	cmp	r0, sl
 801a6ae:	f280 8104 	bge.w	801a8ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801a6b2:	fa0f f38e 	sxth.w	r3, lr
 801a6b6:	fb00 1103 	mla	r1, r0, r3, r1
 801a6ba:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801a6bc:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801a6c0:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801a6c4:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801a6c8:	f1bc 0f00 	cmp.w	ip, #0
 801a6cc:	d007      	beq.n	801a6de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801a6ce:	005b      	lsls	r3, r3, #1
 801a6d0:	eb0a 0003 	add.w	r0, sl, r3
 801a6d4:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801a6d8:	930c      	str	r3, [sp, #48]	@ 0x30
 801a6da:	8843      	ldrh	r3, [r0, #2]
 801a6dc:	930d      	str	r3, [sp, #52]	@ 0x34
 801a6de:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801a6e2:	fb12 f30c 	smulbb	r3, r2, ip
 801a6e6:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801a6ea:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801a6ee:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801a6f2:	10db      	asrs	r3, r3, #3
 801a6f4:	ea40 000e 	orr.w	r0, r0, lr
 801a6f8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801a6fc:	f1cc 0e10 	rsb	lr, ip, #16
 801a700:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801a704:	ebae 0e02 	sub.w	lr, lr, r2
 801a708:	ea4a 0101 	orr.w	r1, sl, r1
 801a70c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801a710:	4351      	muls	r1, r2
 801a712:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801a714:	9f08      	ldr	r7, [sp, #32]
 801a716:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801a71a:	fb0e 1e00 	mla	lr, lr, r0, r1
 801a71e:	0410      	lsls	r0, r2, #16
 801a720:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801a724:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a728:	4310      	orrs	r0, r2
 801a72a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801a72c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801a72e:	0412      	lsls	r2, r2, #16
 801a730:	fb03 e000 	mla	r0, r3, r0, lr
 801a734:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801a738:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801a73c:	ea42 020e 	orr.w	r2, r2, lr
 801a740:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801a744:	fb03 0302 	mla	r3, r3, r2, r0
 801a748:	0d5a      	lsrs	r2, r3, #21
 801a74a:	095b      	lsrs	r3, r3, #5
 801a74c:	f8b8 0000 	ldrh.w	r0, [r8]
 801a750:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a754:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a758:	4313      	orrs	r3, r2
 801a75a:	b29b      	uxth	r3, r3
 801a75c:	1201      	asrs	r1, r0, #8
 801a75e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801a762:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801a766:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801a76a:	fb11 f107 	smulbb	r1, r1, r7
 801a76e:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801a772:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801a776:	00c0      	lsls	r0, r0, #3
 801a778:	fb0c 1c02 	mla	ip, ip, r2, r1
 801a77c:	b2c0      	uxtb	r0, r0
 801a77e:	10d9      	asrs	r1, r3, #3
 801a780:	00db      	lsls	r3, r3, #3
 801a782:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801a786:	b2db      	uxtb	r3, r3
 801a788:	fb10 f007 	smulbb	r0, r0, r7
 801a78c:	fa1f fc8c 	uxth.w	ip, ip
 801a790:	fb03 0302 	mla	r3, r3, r2, r0
 801a794:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801a798:	fb1e fe07 	smulbb	lr, lr, r7
 801a79c:	fb01 e102 	mla	r1, r1, r2, lr
 801a7a0:	b29a      	uxth	r2, r3
 801a7a2:	f10c 0301 	add.w	r3, ip, #1
 801a7a6:	b289      	uxth	r1, r1
 801a7a8:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801a7ac:	1c53      	adds	r3, r2, #1
 801a7ae:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a7b2:	1c4a      	adds	r2, r1, #1
 801a7b4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801a7b8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801a7bc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a7c0:	0949      	lsrs	r1, r1, #5
 801a7c2:	ea43 030c 	orr.w	r3, r3, ip
 801a7c6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a7ca:	430b      	orrs	r3, r1
 801a7cc:	f8a8 3000 	strh.w	r3, [r8]
 801a7d0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a7d2:	441c      	add	r4, r3
 801a7d4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a7d6:	f108 0802 	add.w	r8, r8, #2
 801a7da:	441e      	add	r6, r3
 801a7dc:	f109 39ff 	add.w	r9, r9, #4294967295
 801a7e0:	e74a      	b.n	801a678 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a7e2:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a7e4:	441c      	add	r4, r3
 801a7e6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a7e8:	441e      	add	r6, r3
 801a7ea:	9b07      	ldr	r3, [sp, #28]
 801a7ec:	3302      	adds	r3, #2
 801a7ee:	3d01      	subs	r5, #1
 801a7f0:	9307      	str	r3, [sp, #28]
 801a7f2:	e722      	b.n	801a63a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a7f4:	d022      	beq.n	801a83c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801a7f6:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801a7f8:	1e6b      	subs	r3, r5, #1
 801a7fa:	fb00 4003 	mla	r0, r0, r3, r4
 801a7fe:	1400      	asrs	r0, r0, #16
 801a800:	f53f af37 	bmi.w	801a672 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a804:	3901      	subs	r1, #1
 801a806:	4288      	cmp	r0, r1
 801a808:	f6bf af33 	bge.w	801a672 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a80c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801a80e:	fb01 6303 	mla	r3, r1, r3, r6
 801a812:	141b      	asrs	r3, r3, #16
 801a814:	f53f af2d 	bmi.w	801a672 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a818:	3a01      	subs	r2, #1
 801a81a:	4293      	cmp	r3, r2
 801a81c:	f6bf af29 	bge.w	801a672 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a820:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801a824:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 801a828:	46a8      	mov	r8, r5
 801a82a:	f1b8 0f00 	cmp.w	r8, #0
 801a82e:	dc5e      	bgt.n	801a8ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801a830:	9b07      	ldr	r3, [sp, #28]
 801a832:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801a836:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801a83a:	9307      	str	r3, [sp, #28]
 801a83c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a83e:	2b00      	cmp	r3, #0
 801a840:	f340 80f6 	ble.w	801aa30 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801a844:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a848:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801a84c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a850:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a852:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a856:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a85a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a85e:	eef0 6a62 	vmov.f32	s13, s5
 801a862:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a866:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a86a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a86e:	ee16 4a90 	vmov	r4, s13
 801a872:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a876:	eef0 6a43 	vmov.f32	s13, s6
 801a87a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a87e:	ee12 2a90 	vmov	r2, s5
 801a882:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a886:	fb92 f3f3 	sdiv	r3, r2, r3
 801a88a:	ee13 2a10 	vmov	r2, s6
 801a88e:	931f      	str	r3, [sp, #124]	@ 0x7c
 801a890:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a892:	fb92 f3f3 	sdiv	r3, r2, r3
 801a896:	9320      	str	r3, [sp, #128]	@ 0x80
 801a898:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a89a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801a89c:	3b01      	subs	r3, #1
 801a89e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a8a2:	930a      	str	r3, [sp, #40]	@ 0x28
 801a8a4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a8a6:	ee16 6a90 	vmov	r6, s13
 801a8aa:	bf14      	ite	ne
 801a8ac:	461d      	movne	r5, r3
 801a8ae:	4615      	moveq	r5, r2
 801a8b0:	eeb0 3a67 	vmov.f32	s6, s15
 801a8b4:	eef0 2a47 	vmov.f32	s5, s14
 801a8b8:	e6b0      	b.n	801a61c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801a8ba:	f111 0a01 	adds.w	sl, r1, #1
 801a8be:	d487      	bmi.n	801a7d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801a8c0:	45d6      	cmp	lr, sl
 801a8c2:	db85      	blt.n	801a7d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801a8c4:	f110 0a01 	adds.w	sl, r0, #1
 801a8c8:	d482      	bmi.n	801a7d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801a8ca:	4553      	cmp	r3, sl
 801a8cc:	db80      	blt.n	801a7d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801a8ce:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801a8d0:	9101      	str	r1, [sp, #4]
 801a8d2:	b21b      	sxth	r3, r3
 801a8d4:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801a8d8:	9300      	str	r3, [sp, #0]
 801a8da:	e9cd c704 	strd	ip, r7, [sp, #16]
 801a8de:	fa0f f38e 	sxth.w	r3, lr
 801a8e2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801a8e4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801a8e6:	4641      	mov	r1, r8
 801a8e8:	f7ff fdb4 	bl	801a454 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801a8ec:	e770      	b.n	801a7d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801a8ee:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a8f0:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801a8f2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a8f6:	1430      	asrs	r0, r6, #16
 801a8f8:	1423      	asrs	r3, r4, #16
 801a8fa:	fb01 3000 	mla	r0, r1, r0, r3
 801a8fe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a900:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801a904:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801a908:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801a90c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a910:	8858      	ldrh	r0, [r3, #2]
 801a912:	f1be 0f00 	cmp.w	lr, #0
 801a916:	d00b      	beq.n	801a930 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801a918:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801a91c:	3901      	subs	r1, #1
 801a91e:	0049      	lsls	r1, r1, #1
 801a920:	3102      	adds	r1, #2
 801a922:	eb03 0b01 	add.w	fp, r3, r1
 801a926:	5a5b      	ldrh	r3, [r3, r1]
 801a928:	930e      	str	r3, [sp, #56]	@ 0x38
 801a92a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801a92e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801a930:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801a934:	fb12 f30e 	smulbb	r3, r2, lr
 801a938:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801a93c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801a940:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 801a944:	10db      	asrs	r3, r3, #3
 801a946:	ea41 010c 	orr.w	r1, r1, ip
 801a94a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801a94e:	f1ce 0c10 	rsb	ip, lr, #16
 801a952:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a956:	ebac 0c02 	sub.w	ip, ip, r2
 801a95a:	ea4b 0000 	orr.w	r0, fp, r0
 801a95e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801a962:	4350      	muls	r0, r2
 801a964:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801a966:	9f08      	ldr	r7, [sp, #32]
 801a968:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801a96c:	fb0c 0c01 	mla	ip, ip, r1, r0
 801a970:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801a974:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 801a978:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801a97a:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801a97c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801a980:	0412      	lsls	r2, r2, #16
 801a982:	ea4b 0101 	orr.w	r1, fp, r1
 801a986:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a98a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801a98e:	fb03 c101 	mla	r1, r3, r1, ip
 801a992:	4302      	orrs	r2, r0
 801a994:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801a998:	fb03 1202 	mla	r2, r3, r2, r1
 801a99c:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801a9a0:	0952      	lsrs	r2, r2, #5
 801a9a2:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 801a9a6:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801a9aa:	f8b9 2000 	ldrh.w	r2, [r9]
 801a9ae:	ea4b 0303 	orr.w	r3, fp, r3
 801a9b2:	b29b      	uxth	r3, r3
 801a9b4:	1211      	asrs	r1, r2, #8
 801a9b6:	1218      	asrs	r0, r3, #8
 801a9b8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801a9bc:	fb11 f107 	smulbb	r1, r1, r7
 801a9c0:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801a9c4:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801a9c8:	00d2      	lsls	r2, r2, #3
 801a9ca:	fb00 100a 	mla	r0, r0, sl, r1
 801a9ce:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801a9d2:	10d9      	asrs	r1, r3, #3
 801a9d4:	b2d2      	uxtb	r2, r2
 801a9d6:	00db      	lsls	r3, r3, #3
 801a9d8:	fb1c fc07 	smulbb	ip, ip, r7
 801a9dc:	fb12 f207 	smulbb	r2, r2, r7
 801a9e0:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801a9e4:	b2db      	uxtb	r3, r3
 801a9e6:	b280      	uxth	r0, r0
 801a9e8:	fb01 c10a 	mla	r1, r1, sl, ip
 801a9ec:	fb03 230a 	mla	r3, r3, sl, r2
 801a9f0:	b29b      	uxth	r3, r3
 801a9f2:	b289      	uxth	r1, r1
 801a9f4:	1c42      	adds	r2, r0, #1
 801a9f6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a9fa:	f101 0c01 	add.w	ip, r1, #1
 801a9fe:	1c5a      	adds	r2, r3, #1
 801aa00:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801aa04:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801aa08:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801aa0a:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801aa0e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801aa12:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801aa16:	4310      	orrs	r0, r2
 801aa18:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801aa1c:	441c      	add	r4, r3
 801aa1e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801aa20:	ea40 000c 	orr.w	r0, r0, ip
 801aa24:	f829 0b02 	strh.w	r0, [r9], #2
 801aa28:	441e      	add	r6, r3
 801aa2a:	f108 38ff 	add.w	r8, r8, #4294967295
 801aa2e:	e6fc      	b.n	801a82a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801aa30:	b013      	add	sp, #76	@ 0x4c
 801aa32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801aa36 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801aa36:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801aa3a:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801aa3e:	fb0e 4703 	mla	r7, lr, r3, r4
 801aa42:	f1be 0f00 	cmp.w	lr, #0
 801aa46:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801aa4a:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 801aa4e:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 801aa52:	8808      	ldrh	r0, [r1, #0]
 801aa54:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801aa58:	db60      	blt.n	801ab1c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801aa5a:	45f1      	cmp	r9, lr
 801aa5c:	dd5e      	ble.n	801ab1c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801aa5e:	2c00      	cmp	r4, #0
 801aa60:	db5a      	blt.n	801ab18 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801aa62:	42a3      	cmp	r3, r4
 801aa64:	dd58      	ble.n	801ab18 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801aa66:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801aa6a:	1c62      	adds	r2, r4, #1
 801aa6c:	d459      	bmi.n	801ab22 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801aa6e:	4293      	cmp	r3, r2
 801aa70:	dd57      	ble.n	801ab22 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801aa72:	2d00      	cmp	r5, #0
 801aa74:	d055      	beq.n	801ab22 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801aa76:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801aa7a:	f11e 0e01 	adds.w	lr, lr, #1
 801aa7e:	d454      	bmi.n	801ab2a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801aa80:	45f1      	cmp	r9, lr
 801aa82:	dd52      	ble.n	801ab2a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801aa84:	2e00      	cmp	r6, #0
 801aa86:	d050      	beq.n	801ab2a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801aa88:	2c00      	cmp	r4, #0
 801aa8a:	db4c      	blt.n	801ab26 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801aa8c:	42a3      	cmp	r3, r4
 801aa8e:	dd4a      	ble.n	801ab26 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801aa90:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801aa94:	3401      	adds	r4, #1
 801aa96:	d405      	bmi.n	801aaa4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801aa98:	42a3      	cmp	r3, r4
 801aa9a:	dd03      	ble.n	801aaa4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801aa9c:	b115      	cbz	r5, 801aaa4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801aa9e:	3301      	adds	r3, #1
 801aaa0:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801aaa4:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801aaa8:	fb15 f406 	smulbb	r4, r5, r6
 801aaac:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801aab0:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801aab4:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801aab8:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801aabc:	ea43 0c0c 	orr.w	ip, r3, ip
 801aac0:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801aac4:	f1c6 0310 	rsb	r3, r6, #16
 801aac8:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801aacc:	1b5b      	subs	r3, r3, r5
 801aace:	ea4e 0707 	orr.w	r7, lr, r7
 801aad2:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801aad6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801aada:	437d      	muls	r5, r7
 801aadc:	fb03 5c0c 	mla	ip, r3, ip, r5
 801aae0:	0403      	lsls	r3, r0, #16
 801aae2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801aae6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801aaea:	4318      	orrs	r0, r3
 801aaec:	0413      	lsls	r3, r2, #16
 801aaee:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801aaf2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801aaf6:	4313      	orrs	r3, r2
 801aaf8:	fb04 c000 	mla	r0, r4, r0, ip
 801aafc:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801ab00:	fb06 0003 	mla	r0, r6, r3, r0
 801ab04:	0d43      	lsrs	r3, r0, #21
 801ab06:	0940      	lsrs	r0, r0, #5
 801ab08:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ab0c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801ab10:	4318      	orrs	r0, r3
 801ab12:	8008      	strh	r0, [r1, #0]
 801ab14:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801ab18:	4684      	mov	ip, r0
 801ab1a:	e7a6      	b.n	801aa6a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801ab1c:	4607      	mov	r7, r0
 801ab1e:	4684      	mov	ip, r0
 801ab20:	e7ab      	b.n	801aa7a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801ab22:	4607      	mov	r7, r0
 801ab24:	e7a9      	b.n	801aa7a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801ab26:	4602      	mov	r2, r0
 801ab28:	e7b4      	b.n	801aa94 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801ab2a:	4602      	mov	r2, r0
 801ab2c:	e7ba      	b.n	801aaa4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801ab2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ab2e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab32:	b08f      	sub	sp, #60	@ 0x3c
 801ab34:	461d      	mov	r5, r3
 801ab36:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801ab38:	920c      	str	r2, [sp, #48]	@ 0x30
 801ab3a:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 801ab3e:	9107      	str	r1, [sp, #28]
 801ab40:	6859      	ldr	r1, [r3, #4]
 801ab42:	681b      	ldr	r3, [r3, #0]
 801ab44:	900d      	str	r0, [sp, #52]	@ 0x34
 801ab46:	fb01 2707 	mla	r7, r1, r7, r2
 801ab4a:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801ab4e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ab50:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 801ab54:	f8d3 8000 	ldr.w	r8, [r3]
 801ab58:	9b07      	ldr	r3, [sp, #28]
 801ab5a:	2b00      	cmp	r3, #0
 801ab5c:	dc03      	bgt.n	801ab66 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801ab5e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ab60:	2b00      	cmp	r3, #0
 801ab62:	f340 8181 	ble.w	801ae68 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801ab66:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ab68:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ab6c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ab70:	1e48      	subs	r0, r1, #1
 801ab72:	f102 3cff 	add.w	ip, r2, #4294967295
 801ab76:	2d00      	cmp	r5, #0
 801ab78:	f340 809b 	ble.w	801acb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801ab7c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ab80:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ab84:	d406      	bmi.n	801ab94 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ab86:	4586      	cmp	lr, r0
 801ab88:	da04      	bge.n	801ab94 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ab8a:	2b00      	cmp	r3, #0
 801ab8c:	db02      	blt.n	801ab94 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ab8e:	4563      	cmp	r3, ip
 801ab90:	f2c0 8090 	blt.w	801acb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ab94:	f11e 0e01 	adds.w	lr, lr, #1
 801ab98:	f100 8084 	bmi.w	801aca4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801ab9c:	4571      	cmp	r1, lr
 801ab9e:	f2c0 8081 	blt.w	801aca4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801aba2:	3301      	adds	r3, #1
 801aba4:	d47e      	bmi.n	801aca4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801aba6:	429a      	cmp	r2, r3
 801aba8:	db7c      	blt.n	801aca4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801abaa:	46aa      	mov	sl, r5
 801abac:	46b9      	mov	r9, r7
 801abae:	f1ba 0f00 	cmp.w	sl, #0
 801abb2:	f340 8099 	ble.w	801ace8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801abb6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801abb8:	1421      	asrs	r1, r4, #16
 801abba:	ea4f 4026 	mov.w	r0, r6, asr #16
 801abbe:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801abc2:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801abc6:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801abca:	f100 80d0 	bmi.w	801ad6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801abce:	f10e 3bff 	add.w	fp, lr, #4294967295
 801abd2:	4559      	cmp	r1, fp
 801abd4:	f280 80cb 	bge.w	801ad6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801abd8:	2800      	cmp	r0, #0
 801abda:	f2c0 80c8 	blt.w	801ad6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801abde:	f103 3bff 	add.w	fp, r3, #4294967295
 801abe2:	4558      	cmp	r0, fp
 801abe4:	f280 80c3 	bge.w	801ad6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801abe8:	fa0f fe8e 	sxth.w	lr, lr
 801abec:	fb00 110e 	mla	r1, r0, lr, r1
 801abf0:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801abf4:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801abf8:	8841      	ldrh	r1, [r0, #2]
 801abfa:	f1bc 0f00 	cmp.w	ip, #0
 801abfe:	d00b      	beq.n	801ac18 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801ac00:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 801ac04:	3b01      	subs	r3, #1
 801ac06:	005b      	lsls	r3, r3, #1
 801ac08:	3302      	adds	r3, #2
 801ac0a:	eb00 0e03 	add.w	lr, r0, r3
 801ac0e:	5ac3      	ldrh	r3, [r0, r3]
 801ac10:	9308      	str	r3, [sp, #32]
 801ac12:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801ac16:	9309      	str	r3, [sp, #36]	@ 0x24
 801ac18:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801ac1c:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801ac20:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801ac24:	ea40 000b 	orr.w	r0, r0, fp
 801ac28:	fb12 f30c 	smulbb	r3, r2, ip
 801ac2c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ac30:	10db      	asrs	r3, r3, #3
 801ac32:	f1cc 0e10 	rsb	lr, ip, #16
 801ac36:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801ac3a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801ac3e:	ebae 0e02 	sub.w	lr, lr, r2
 801ac42:	ea4b 0101 	orr.w	r1, fp, r1
 801ac46:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801ac4a:	4351      	muls	r1, r2
 801ac4c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801ac4e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801ac52:	fb0e 1e00 	mla	lr, lr, r0, r1
 801ac56:	0410      	lsls	r0, r2, #16
 801ac58:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801ac5c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ac60:	4310      	orrs	r0, r2
 801ac62:	9a08      	ldr	r2, [sp, #32]
 801ac64:	9908      	ldr	r1, [sp, #32]
 801ac66:	0412      	lsls	r2, r2, #16
 801ac68:	fb03 e000 	mla	r0, r3, r0, lr
 801ac6c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801ac70:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801ac74:	ea42 020e 	orr.w	r2, r2, lr
 801ac78:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801ac7c:	fb03 0302 	mla	r3, r3, r2, r0
 801ac80:	0d5a      	lsrs	r2, r3, #21
 801ac82:	095b      	lsrs	r3, r3, #5
 801ac84:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ac88:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ac8c:	4313      	orrs	r3, r2
 801ac8e:	f8a9 3000 	strh.w	r3, [r9]
 801ac92:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801ac94:	441c      	add	r4, r3
 801ac96:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ac98:	f109 0902 	add.w	r9, r9, #2
 801ac9c:	441e      	add	r6, r3
 801ac9e:	f10a 3aff 	add.w	sl, sl, #4294967295
 801aca2:	e784      	b.n	801abae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801aca4:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801aca6:	441c      	add	r4, r3
 801aca8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801acaa:	3d01      	subs	r5, #1
 801acac:	441e      	add	r6, r3
 801acae:	3702      	adds	r7, #2
 801acb0:	e761      	b.n	801ab76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801acb2:	d01d      	beq.n	801acf0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801acb4:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801acb6:	1e6b      	subs	r3, r5, #1
 801acb8:	fb00 4003 	mla	r0, r0, r3, r4
 801acbc:	1400      	asrs	r0, r0, #16
 801acbe:	f53f af74 	bmi.w	801abaa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801acc2:	3901      	subs	r1, #1
 801acc4:	4288      	cmp	r0, r1
 801acc6:	f6bf af70 	bge.w	801abaa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801acca:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801accc:	fb01 6303 	mla	r3, r1, r3, r6
 801acd0:	141b      	asrs	r3, r3, #16
 801acd2:	f53f af6a 	bmi.w	801abaa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801acd6:	3a01      	subs	r2, #1
 801acd8:	4293      	cmp	r3, r2
 801acda:	f6bf af66 	bge.w	801abaa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801acde:	46a9      	mov	r9, r5
 801ace0:	46ba      	mov	sl, r7
 801ace2:	f1b9 0f00 	cmp.w	r9, #0
 801ace6:	dc5a      	bgt.n	801ad9e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801ace8:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801acec:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801acf0:	9b07      	ldr	r3, [sp, #28]
 801acf2:	2b00      	cmp	r3, #0
 801acf4:	f340 80b8 	ble.w	801ae68 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801acf8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801acfc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ad00:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ad04:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ad06:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ad0a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ad0e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ad12:	eef0 6a62 	vmov.f32	s13, s5
 801ad16:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ad1a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ad1e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ad22:	ee16 4a90 	vmov	r4, s13
 801ad26:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ad2a:	eef0 6a43 	vmov.f32	s13, s6
 801ad2e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ad32:	ee12 2a90 	vmov	r2, s5
 801ad36:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ad3a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad3e:	ee13 2a10 	vmov	r2, s6
 801ad42:	931b      	str	r3, [sp, #108]	@ 0x6c
 801ad44:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ad46:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad4a:	931c      	str	r3, [sp, #112]	@ 0x70
 801ad4c:	9b07      	ldr	r3, [sp, #28]
 801ad4e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801ad50:	3b01      	subs	r3, #1
 801ad52:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ad56:	9307      	str	r3, [sp, #28]
 801ad58:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ad5a:	ee16 6a90 	vmov	r6, s13
 801ad5e:	bf14      	ite	ne
 801ad60:	461d      	movne	r5, r3
 801ad62:	4615      	moveq	r5, r2
 801ad64:	eeb0 3a67 	vmov.f32	s6, s15
 801ad68:	eef0 2a47 	vmov.f32	s5, s14
 801ad6c:	e6f4      	b.n	801ab58 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801ad6e:	f111 0b01 	adds.w	fp, r1, #1
 801ad72:	d48e      	bmi.n	801ac92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ad74:	45de      	cmp	lr, fp
 801ad76:	db8c      	blt.n	801ac92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ad78:	f110 0b01 	adds.w	fp, r0, #1
 801ad7c:	d489      	bmi.n	801ac92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ad7e:	455b      	cmp	r3, fp
 801ad80:	db87      	blt.n	801ac92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ad82:	b21b      	sxth	r3, r3
 801ad84:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801ad88:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801ad8c:	9300      	str	r3, [sp, #0]
 801ad8e:	4642      	mov	r2, r8
 801ad90:	fa0f f38e 	sxth.w	r3, lr
 801ad94:	4649      	mov	r1, r9
 801ad96:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801ad98:	f7ff fe4d 	bl	801aa36 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801ad9c:	e779      	b.n	801ac92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ad9e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ada0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ada4:	1420      	asrs	r0, r4, #16
 801ada6:	1431      	asrs	r1, r6, #16
 801ada8:	fb03 0101 	mla	r1, r3, r1, r0
 801adac:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801adb0:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801adb4:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801adb8:	8841      	ldrh	r1, [r0, #2]
 801adba:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801adbe:	f1be 0f00 	cmp.w	lr, #0
 801adc2:	d00b      	beq.n	801addc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801adc4:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801adc8:	3b01      	subs	r3, #1
 801adca:	005b      	lsls	r3, r3, #1
 801adcc:	3302      	adds	r3, #2
 801adce:	eb00 0b03 	add.w	fp, r0, r3
 801add2:	5ac3      	ldrh	r3, [r0, r3]
 801add4:	930a      	str	r3, [sp, #40]	@ 0x28
 801add6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801adda:	930b      	str	r3, [sp, #44]	@ 0x2c
 801addc:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801ade0:	fb12 f30e 	smulbb	r3, r2, lr
 801ade4:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801ade8:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801adec:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801adf0:	10db      	asrs	r3, r3, #3
 801adf2:	ea40 000c 	orr.w	r0, r0, ip
 801adf6:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801adfa:	f1ce 0c10 	rsb	ip, lr, #16
 801adfe:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801ae02:	ebac 0c02 	sub.w	ip, ip, r2
 801ae06:	ea4b 0101 	orr.w	r1, fp, r1
 801ae0a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801ae0e:	4351      	muls	r1, r2
 801ae10:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801ae12:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801ae16:	fb0c 1c00 	mla	ip, ip, r0, r1
 801ae1a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801ae1e:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 801ae22:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801ae24:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801ae26:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801ae2a:	0412      	lsls	r2, r2, #16
 801ae2c:	ea4b 0000 	orr.w	r0, fp, r0
 801ae30:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801ae34:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 801ae38:	fb03 c000 	mla	r0, r3, r0, ip
 801ae3c:	ea42 0b0b 	orr.w	fp, r2, fp
 801ae40:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801ae44:	fb03 000b 	mla	r0, r3, fp, r0
 801ae48:	0d43      	lsrs	r3, r0, #21
 801ae4a:	0940      	lsrs	r0, r0, #5
 801ae4c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ae50:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801ae54:	4318      	orrs	r0, r3
 801ae56:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801ae58:	f82a 0b02 	strh.w	r0, [sl], #2
 801ae5c:	441c      	add	r4, r3
 801ae5e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ae60:	f109 39ff 	add.w	r9, r9, #4294967295
 801ae64:	441e      	add	r6, r3
 801ae66:	e73c      	b.n	801ace2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801ae68:	b00f      	add	sp, #60	@ 0x3c
 801ae6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ae6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801ae6e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ae72:	b085      	sub	sp, #20
 801ae74:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801ae78:	9102      	str	r1, [sp, #8]
 801ae7a:	2c00      	cmp	r4, #0
 801ae7c:	fb04 7103 	mla	r1, r4, r3, r7
 801ae80:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801ae84:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801ae88:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801ae8c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801ae90:	f2c0 811b 	blt.w	801b0ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801ae94:	45a6      	cmp	lr, r4
 801ae96:	f340 8118 	ble.w	801b0ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801ae9a:	2f00      	cmp	r7, #0
 801ae9c:	f2c0 8113 	blt.w	801b0c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801aea0:	42bb      	cmp	r3, r7
 801aea2:	f340 8110 	ble.w	801b0c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801aea6:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801aeaa:	1c7a      	adds	r2, r7, #1
 801aeac:	f100 8110 	bmi.w	801b0d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801aeb0:	4293      	cmp	r3, r2
 801aeb2:	f340 810d 	ble.w	801b0d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801aeb6:	2e00      	cmp	r6, #0
 801aeb8:	f000 810c 	beq.w	801b0d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801aebc:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801aec0:	3401      	adds	r4, #1
 801aec2:	f100 810b 	bmi.w	801b0dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801aec6:	45a6      	cmp	lr, r4
 801aec8:	f340 8108 	ble.w	801b0dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801aecc:	2800      	cmp	r0, #0
 801aece:	f000 8108 	beq.w	801b0e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801aed2:	2f00      	cmp	r7, #0
 801aed4:	f2c0 8100 	blt.w	801b0d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801aed8:	42bb      	cmp	r3, r7
 801aeda:	f340 80fd 	ble.w	801b0d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801aede:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801aee2:	3701      	adds	r7, #1
 801aee4:	f100 8100 	bmi.w	801b0e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801aee8:	42bb      	cmp	r3, r7
 801aeea:	f340 80fd 	ble.w	801b0e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801aeee:	2e00      	cmp	r6, #0
 801aef0:	f000 80fc 	beq.w	801b0ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801aef4:	3301      	adds	r3, #1
 801aef6:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801aefa:	b2b6      	uxth	r6, r6
 801aefc:	b280      	uxth	r0, r0
 801aefe:	fb00 fe06 	mul.w	lr, r0, r6
 801af02:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801af06:	0136      	lsls	r6, r6, #4
 801af08:	eba6 070e 	sub.w	r7, r6, lr
 801af0c:	b280      	uxth	r0, r0
 801af0e:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801af12:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801af16:	b2bf      	uxth	r7, r7
 801af18:	1a1b      	subs	r3, r3, r0
 801af1a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801af1e:	b29b      	uxth	r3, r3
 801af20:	fb0a f607 	mul.w	r6, sl, r7
 801af24:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801af28:	fb0b 6603 	mla	r6, fp, r3, r6
 801af2c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801af30:	fb00 6609 	mla	r6, r0, r9, r6
 801af34:	fb0e 6608 	mla	r6, lr, r8, r6
 801af38:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801af3c:	9600      	str	r6, [sp, #0]
 801af3e:	2e00      	cmp	r6, #0
 801af40:	f000 80be 	beq.w	801b0c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801af44:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801af48:	fb0b fc0c 	mul.w	ip, fp, ip
 801af4c:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801af50:	fb0b f505 	mul.w	r5, fp, r5
 801af54:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801af58:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801af5c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801af60:	44dc      	add	ip, fp
 801af62:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801af66:	9501      	str	r5, [sp, #4]
 801af68:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801af6c:	9503      	str	r5, [sp, #12]
 801af6e:	9d01      	ldr	r5, [sp, #4]
 801af70:	9e02      	ldr	r6, [sp, #8]
 801af72:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801af76:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801af7a:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801af7e:	fb0a fc0c 	mul.w	ip, sl, ip
 801af82:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801af86:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801af8a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801af8e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801af92:	4465      	add	r5, ip
 801af94:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801af98:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801af9c:	fb09 fc0c 	mul.w	ip, r9, ip
 801afa0:	fb09 f904 	mul.w	r9, r9, r4
 801afa4:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801afa8:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801afac:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801afb0:	fb08 f404 	mul.w	r4, r8, r4
 801afb4:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801afb8:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801afbc:	fb08 f802 	mul.w	r8, r8, r2
 801afc0:	fb0a fa01 	mul.w	sl, sl, r1
 801afc4:	0a22      	lsrs	r2, r4, #8
 801afc6:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801afca:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801afce:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801afd2:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801afd6:	4414      	add	r4, r2
 801afd8:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801afdc:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801afe0:	0a2d      	lsrs	r5, r5, #8
 801afe2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801afe6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801afea:	9a03      	ldr	r2, [sp, #12]
 801afec:	8836      	ldrh	r6, [r6, #0]
 801afee:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801aff2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801aff6:	437d      	muls	r5, r7
 801aff8:	4461      	add	r1, ip
 801affa:	0a24      	lsrs	r4, r4, #8
 801affc:	fb02 5503 	mla	r5, r2, r3, r5
 801b000:	0a09      	lsrs	r1, r1, #8
 801b002:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801b006:	fb04 540e 	mla	r4, r4, lr, r5
 801b00a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801b00e:	fb01 4100 	mla	r1, r1, r0, r4
 801b012:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b016:	0a09      	lsrs	r1, r1, #8
 801b018:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b01c:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801b020:	fb07 f70a 	mul.w	r7, r7, sl
 801b024:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801b028:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801b02c:	fb03 7101 	mla	r1, r3, r1, r7
 801b030:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b034:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801b038:	fb0e 1e08 	mla	lr, lr, r8, r1
 801b03c:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801b040:	fb00 e101 	mla	r1, r0, r1, lr
 801b044:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801b048:	9a00      	ldr	r2, [sp, #0]
 801b04a:	b287      	uxth	r7, r0
 801b04c:	437a      	muls	r2, r7
 801b04e:	0a09      	lsrs	r1, r1, #8
 801b050:	1c53      	adds	r3, r2, #1
 801b052:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801b056:	4321      	orrs	r1, r4
 801b058:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b05c:	1235      	asrs	r5, r6, #8
 801b05e:	0c0a      	lsrs	r2, r1, #16
 801b060:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801b064:	b2db      	uxtb	r3, r3
 801b066:	fb12 f207 	smulbb	r2, r2, r7
 801b06a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801b06e:	fb05 2503 	mla	r5, r5, r3, r2
 801b072:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801b076:	10f2      	asrs	r2, r6, #3
 801b078:	b2c8      	uxtb	r0, r1
 801b07a:	00f6      	lsls	r6, r6, #3
 801b07c:	fb14 f407 	smulbb	r4, r4, r7
 801b080:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801b084:	b2f6      	uxtb	r6, r6
 801b086:	fb10 f007 	smulbb	r0, r0, r7
 801b08a:	fb02 4203 	mla	r2, r2, r3, r4
 801b08e:	b2ad      	uxth	r5, r5
 801b090:	fb06 0303 	mla	r3, r6, r3, r0
 801b094:	b299      	uxth	r1, r3
 801b096:	b294      	uxth	r4, r2
 801b098:	1c6b      	adds	r3, r5, #1
 801b09a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b09e:	1c62      	adds	r2, r4, #1
 801b0a0:	1c4b      	adds	r3, r1, #1
 801b0a2:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801b0a6:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801b0aa:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801b0ae:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b0b2:	0952      	lsrs	r2, r2, #5
 801b0b4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b0b8:	432b      	orrs	r3, r5
 801b0ba:	4313      	orrs	r3, r2
 801b0bc:	9a02      	ldr	r2, [sp, #8]
 801b0be:	8013      	strh	r3, [r2, #0]
 801b0c0:	b005      	add	sp, #20
 801b0c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b0c6:	2500      	movs	r5, #0
 801b0c8:	e6ef      	b.n	801aeaa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801b0ca:	2100      	movs	r1, #0
 801b0cc:	460d      	mov	r5, r1
 801b0ce:	e6f7      	b.n	801aec0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801b0d0:	2100      	movs	r1, #0
 801b0d2:	e6f5      	b.n	801aec0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801b0d4:	4631      	mov	r1, r6
 801b0d6:	e6f3      	b.n	801aec0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801b0d8:	2400      	movs	r4, #0
 801b0da:	e702      	b.n	801aee2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801b0dc:	2200      	movs	r2, #0
 801b0de:	4614      	mov	r4, r2
 801b0e0:	e70b      	b.n	801aefa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801b0e2:	4602      	mov	r2, r0
 801b0e4:	4604      	mov	r4, r0
 801b0e6:	e708      	b.n	801aefa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801b0e8:	2200      	movs	r2, #0
 801b0ea:	e706      	b.n	801aefa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801b0ec:	4632      	mov	r2, r6
 801b0ee:	e704      	b.n	801aefa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801b0f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b0f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b0f4:	b09d      	sub	sp, #116	@ 0x74
 801b0f6:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 801b0fa:	9219      	str	r2, [sp, #100]	@ 0x64
 801b0fc:	9307      	str	r3, [sp, #28]
 801b0fe:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 801b100:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 801b104:	931a      	str	r3, [sp, #104]	@ 0x68
 801b106:	9117      	str	r1, [sp, #92]	@ 0x5c
 801b108:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 801b10c:	901b      	str	r0, [sp, #108]	@ 0x6c
 801b10e:	6850      	ldr	r0, [r2, #4]
 801b110:	6812      	ldr	r2, [r2, #0]
 801b112:	fb00 1303 	mla	r3, r0, r3, r1
 801b116:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b11a:	930a      	str	r3, [sp, #40]	@ 0x28
 801b11c:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801b11e:	681b      	ldr	r3, [r3, #0]
 801b120:	9310      	str	r3, [sp, #64]	@ 0x40
 801b122:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801b126:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b128:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801b12a:	2b00      	cmp	r3, #0
 801b12c:	dc03      	bgt.n	801b136 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801b12e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801b130:	2b00      	cmp	r3, #0
 801b132:	f340 8375 	ble.w	801b820 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801b136:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801b138:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b13c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b140:	1e48      	subs	r0, r1, #1
 801b142:	1e57      	subs	r7, r2, #1
 801b144:	9b07      	ldr	r3, [sp, #28]
 801b146:	2b00      	cmp	r3, #0
 801b148:	f340 818e 	ble.w	801b468 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801b14c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b150:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b154:	d406      	bmi.n	801b164 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801b156:	4584      	cmp	ip, r0
 801b158:	da04      	bge.n	801b164 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801b15a:	2b00      	cmp	r3, #0
 801b15c:	db02      	blt.n	801b164 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801b15e:	42bb      	cmp	r3, r7
 801b160:	f2c0 8183 	blt.w	801b46a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801b164:	f11c 0c01 	adds.w	ip, ip, #1
 801b168:	f100 8173 	bmi.w	801b452 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801b16c:	4561      	cmp	r1, ip
 801b16e:	f2c0 8170 	blt.w	801b452 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801b172:	3301      	adds	r3, #1
 801b174:	f100 816d 	bmi.w	801b452 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801b178:	429a      	cmp	r2, r3
 801b17a:	f2c0 816a 	blt.w	801b452 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801b17e:	9b07      	ldr	r3, [sp, #28]
 801b180:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801b182:	9318      	str	r3, [sp, #96]	@ 0x60
 801b184:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801b186:	2b00      	cmp	r3, #0
 801b188:	f340 818c 	ble.w	801b4a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801b18c:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 801b18e:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801b190:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801b194:	689b      	ldr	r3, [r3, #8]
 801b196:	1422      	asrs	r2, r4, #16
 801b198:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801b19c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801b1a0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801b1a4:	f100 81cd 	bmi.w	801b542 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b1a8:	f103 38ff 	add.w	r8, r3, #4294967295
 801b1ac:	4542      	cmp	r2, r8
 801b1ae:	f280 81c8 	bge.w	801b542 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b1b2:	f1bc 0f00 	cmp.w	ip, #0
 801b1b6:	f2c0 81c4 	blt.w	801b542 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b1ba:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b1be:	45c4      	cmp	ip, r8
 801b1c0:	f280 81bf 	bge.w	801b542 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b1c4:	b21b      	sxth	r3, r3
 801b1c6:	fb0c 2203 	mla	r2, ip, r3, r2
 801b1ca:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801b1cc:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801b1d0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801b1d4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801b1d8:	2800      	cmp	r0, #0
 801b1da:	f000 81a9 	beq.w	801b530 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801b1de:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801b1e2:	950c      	str	r5, [sp, #48]	@ 0x30
 801b1e4:	0e2d      	lsrs	r5, r5, #24
 801b1e6:	9513      	str	r5, [sp, #76]	@ 0x4c
 801b1e8:	b181      	cbz	r1, 801b20c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b1ea:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801b1ee:	3b01      	subs	r3, #1
 801b1f0:	009b      	lsls	r3, r3, #2
 801b1f2:	3304      	adds	r3, #4
 801b1f4:	eb08 0c03 	add.w	ip, r8, r3
 801b1f8:	f858 3003 	ldr.w	r3, [r8, r3]
 801b1fc:	9308      	str	r3, [sp, #32]
 801b1fe:	0e1b      	lsrs	r3, r3, #24
 801b200:	9311      	str	r3, [sp, #68]	@ 0x44
 801b202:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801b206:	930d      	str	r3, [sp, #52]	@ 0x34
 801b208:	0e1b      	lsrs	r3, r3, #24
 801b20a:	9314      	str	r3, [sp, #80]	@ 0x50
 801b20c:	b280      	uxth	r0, r0
 801b20e:	b289      	uxth	r1, r1
 801b210:	fb00 f901 	mul.w	r9, r0, r1
 801b214:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b218:	0100      	lsls	r0, r0, #4
 801b21a:	eba0 0809 	sub.w	r8, r0, r9
 801b21e:	b289      	uxth	r1, r1
 801b220:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801b224:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801b226:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801b228:	fa1f f888 	uxth.w	r8, r8
 801b22c:	1a5b      	subs	r3, r3, r1
 801b22e:	b29b      	uxth	r3, r3
 801b230:	fb08 f000 	mul.w	r0, r8, r0
 801b234:	fb03 000e 	mla	r0, r3, lr, r0
 801b238:	fb01 0005 	mla	r0, r1, r5, r0
 801b23c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801b23e:	fb09 0005 	mla	r0, r9, r5, r0
 801b242:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801b246:	2800      	cmp	r0, #0
 801b248:	f000 80fa 	beq.w	801b440 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801b24c:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801b250:	d01b      	beq.n	801b28a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801b252:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801b256:	fb0e fa0a 	mul.w	sl, lr, sl
 801b25a:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801b25e:	fb0e fe02 	mul.w	lr, lr, r2
 801b262:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801b266:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801b26a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801b26e:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801b272:	4452      	add	r2, sl
 801b274:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b278:	0a12      	lsrs	r2, r2, #8
 801b27a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b27e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801b282:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801b286:	ea42 020c 	orr.w	r2, r2, ip
 801b28a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801b28c:	2dff      	cmp	r5, #255	@ 0xff
 801b28e:	d021      	beq.n	801b2d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801b290:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801b292:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801b296:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801b298:	fb05 fb0b 	mul.w	fp, r5, fp
 801b29c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801b29e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801b2a2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801b2a4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b2a8:	fb05 fa0a 	mul.w	sl, r5, sl
 801b2ac:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b2b0:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b2b4:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b2b8:	44de      	add	lr, fp
 801b2ba:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b2be:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b2c2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b2c6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b2ca:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b2ce:	ea4e 050a 	orr.w	r5, lr, sl
 801b2d2:	950c      	str	r5, [sp, #48]	@ 0x30
 801b2d4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801b2d6:	2dff      	cmp	r5, #255	@ 0xff
 801b2d8:	d021      	beq.n	801b31e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801b2da:	9d08      	ldr	r5, [sp, #32]
 801b2dc:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801b2e0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801b2e2:	fb05 fb0b 	mul.w	fp, r5, fp
 801b2e6:	9d08      	ldr	r5, [sp, #32]
 801b2e8:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801b2ec:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801b2ee:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b2f2:	fb05 fa0a 	mul.w	sl, r5, sl
 801b2f6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b2fa:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b2fe:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b302:	44de      	add	lr, fp
 801b304:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b308:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b30c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b310:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b314:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b318:	ea4e 050a 	orr.w	r5, lr, sl
 801b31c:	9508      	str	r5, [sp, #32]
 801b31e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801b320:	2dff      	cmp	r5, #255	@ 0xff
 801b322:	d021      	beq.n	801b368 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801b324:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801b326:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801b32a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801b32c:	fb05 fb0b 	mul.w	fp, r5, fp
 801b330:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801b332:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801b336:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801b338:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b33c:	fb05 fa0a 	mul.w	sl, r5, sl
 801b340:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b344:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b348:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b34c:	44de      	add	lr, fp
 801b34e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b352:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b356:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b35a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b35e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b362:	ea4e 050a 	orr.w	r5, lr, sl
 801b366:	950d      	str	r5, [sp, #52]	@ 0x34
 801b368:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801b36a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801b36e:	9d08      	ldr	r5, [sp, #32]
 801b370:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801b374:	fb08 fc0c 	mul.w	ip, r8, ip
 801b378:	fb03 cc0e 	mla	ip, r3, lr, ip
 801b37c:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801b380:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801b382:	fb01 cc0e 	mla	ip, r1, lr, ip
 801b386:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801b38a:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801b38c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b390:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801b394:	fb08 f80e 	mul.w	r8, r8, lr
 801b398:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801b39c:	fb03 8202 	mla	r2, r3, r2, r8
 801b3a0:	9b08      	ldr	r3, [sp, #32]
 801b3a2:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801b3a4:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 801b3a8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801b3aa:	fb01 220a 	mla	r2, r1, sl, r2
 801b3ae:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 801b3b2:	fb09 2901 	mla	r9, r9, r1, r2
 801b3b6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801b3b8:	883b      	ldrh	r3, [r7, #0]
 801b3ba:	4342      	muls	r2, r0
 801b3bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b3c0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b3c4:	1c50      	adds	r0, r2, #1
 801b3c6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b3ca:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801b3ce:	ea4c 0c09 	orr.w	ip, ip, r9
 801b3d2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801b3d6:	1219      	asrs	r1, r3, #8
 801b3d8:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801b3dc:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801b3e0:	b2c0      	uxtb	r0, r0
 801b3e2:	fb12 f205 	smulbb	r2, r2, r5
 801b3e6:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801b3ea:	fb01 2100 	mla	r1, r1, r0, r2
 801b3ee:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801b3f2:	10da      	asrs	r2, r3, #3
 801b3f4:	fa5f fc8c 	uxtb.w	ip, ip
 801b3f8:	00db      	lsls	r3, r3, #3
 801b3fa:	fb1c fc05 	smulbb	ip, ip, r5
 801b3fe:	b2db      	uxtb	r3, r3
 801b400:	b289      	uxth	r1, r1
 801b402:	fb03 c300 	mla	r3, r3, r0, ip
 801b406:	fa1f fc83 	uxth.w	ip, r3
 801b40a:	1c4b      	adds	r3, r1, #1
 801b40c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b410:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801b414:	fb1e fe05 	smulbb	lr, lr, r5
 801b418:	f10c 0301 	add.w	r3, ip, #1
 801b41c:	fb02 e200 	mla	r2, r2, r0, lr
 801b420:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801b424:	b292      	uxth	r2, r2
 801b426:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801b42a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b42e:	430b      	orrs	r3, r1
 801b430:	1c51      	adds	r1, r2, #1
 801b432:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b436:	0952      	lsrs	r2, r2, #5
 801b438:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b43c:	4313      	orrs	r3, r2
 801b43e:	803b      	strh	r3, [r7, #0]
 801b440:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801b442:	441c      	add	r4, r3
 801b444:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801b446:	441e      	add	r6, r3
 801b448:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801b44a:	3b01      	subs	r3, #1
 801b44c:	3702      	adds	r7, #2
 801b44e:	9318      	str	r3, [sp, #96]	@ 0x60
 801b450:	e698      	b.n	801b184 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b452:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801b454:	441c      	add	r4, r3
 801b456:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801b458:	441e      	add	r6, r3
 801b45a:	9b07      	ldr	r3, [sp, #28]
 801b45c:	3b01      	subs	r3, #1
 801b45e:	9307      	str	r3, [sp, #28]
 801b460:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b462:	3302      	adds	r3, #2
 801b464:	930a      	str	r3, [sp, #40]	@ 0x28
 801b466:	e66d      	b.n	801b144 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801b468:	d023      	beq.n	801b4b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801b46a:	9b07      	ldr	r3, [sp, #28]
 801b46c:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 801b46e:	3b01      	subs	r3, #1
 801b470:	fb00 4003 	mla	r0, r0, r3, r4
 801b474:	1400      	asrs	r0, r0, #16
 801b476:	f53f ae82 	bmi.w	801b17e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b47a:	3901      	subs	r1, #1
 801b47c:	4288      	cmp	r0, r1
 801b47e:	f6bf ae7e 	bge.w	801b17e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b482:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801b484:	fb01 6303 	mla	r3, r1, r3, r6
 801b488:	141b      	asrs	r3, r3, #16
 801b48a:	f53f ae78 	bmi.w	801b17e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b48e:	3a01      	subs	r2, #1
 801b490:	4293      	cmp	r3, r2
 801b492:	f6bf ae74 	bge.w	801b17e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b496:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801b49a:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801b49e:	f1bb 0f00 	cmp.w	fp, #0
 801b4a2:	dc6c      	bgt.n	801b57e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801b4a4:	9b07      	ldr	r3, [sp, #28]
 801b4a6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801b4aa:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b4ac:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801b4b0:	930a      	str	r3, [sp, #40]	@ 0x28
 801b4b2:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801b4b4:	2b00      	cmp	r3, #0
 801b4b6:	f340 81b3 	ble.w	801b820 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801b4ba:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b4be:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801b4c2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b4c6:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801b4c8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b4cc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b4d0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b4d4:	eef0 6a62 	vmov.f32	s13, s5
 801b4d8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b4dc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b4e0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b4e4:	ee16 4a90 	vmov	r4, s13
 801b4e8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b4ec:	eef0 6a43 	vmov.f32	s13, s6
 801b4f0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b4f4:	ee12 2a90 	vmov	r2, s5
 801b4f8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b4fc:	fb92 f3f3 	sdiv	r3, r2, r3
 801b500:	ee13 2a10 	vmov	r2, s6
 801b504:	9329      	str	r3, [sp, #164]	@ 0xa4
 801b506:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801b508:	fb92 f3f3 	sdiv	r3, r2, r3
 801b50c:	932a      	str	r3, [sp, #168]	@ 0xa8
 801b50e:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801b510:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801b512:	3b01      	subs	r3, #1
 801b514:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b518:	9317      	str	r3, [sp, #92]	@ 0x5c
 801b51a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801b51c:	bf08      	it	eq
 801b51e:	4613      	moveq	r3, r2
 801b520:	ee16 6a90 	vmov	r6, s13
 801b524:	9307      	str	r3, [sp, #28]
 801b526:	eeb0 3a67 	vmov.f32	s6, s15
 801b52a:	eef0 2a47 	vmov.f32	s5, s14
 801b52e:	e5fb      	b.n	801b128 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b530:	2900      	cmp	r1, #0
 801b532:	f43f ae6b 	beq.w	801b20c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b536:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801b53a:	9308      	str	r3, [sp, #32]
 801b53c:	0e1b      	lsrs	r3, r3, #24
 801b53e:	9311      	str	r3, [sp, #68]	@ 0x44
 801b540:	e664      	b.n	801b20c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b542:	f112 0801 	adds.w	r8, r2, #1
 801b546:	f53f af7b 	bmi.w	801b440 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801b54a:	4543      	cmp	r3, r8
 801b54c:	f6ff af78 	blt.w	801b440 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801b550:	f11c 0801 	adds.w	r8, ip, #1
 801b554:	f53f af74 	bmi.w	801b440 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801b558:	45c6      	cmp	lr, r8
 801b55a:	f6ff af71 	blt.w	801b440 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801b55e:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801b560:	9201      	str	r2, [sp, #4]
 801b562:	fa0f f28e 	sxth.w	r2, lr
 801b566:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801b56a:	e9cd c002 	strd	ip, r0, [sp, #8]
 801b56e:	9200      	str	r2, [sp, #0]
 801b570:	b21b      	sxth	r3, r3
 801b572:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801b574:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801b576:	4639      	mov	r1, r7
 801b578:	f7ff fc79 	bl	801ae6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801b57c:	e760      	b.n	801b440 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801b57e:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801b580:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801b582:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b586:	1427      	asrs	r7, r4, #16
 801b588:	1433      	asrs	r3, r6, #16
 801b58a:	fb01 7303 	mla	r3, r1, r3, r7
 801b58e:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801b592:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801b596:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801b59a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801b59e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b5a2:	2a00      	cmp	r2, #0
 801b5a4:	f000 8133 	beq.w	801b80e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801b5a8:	687d      	ldr	r5, [r7, #4]
 801b5aa:	950e      	str	r5, [sp, #56]	@ 0x38
 801b5ac:	0e2d      	lsrs	r5, r5, #24
 801b5ae:	9515      	str	r5, [sp, #84]	@ 0x54
 801b5b0:	b178      	cbz	r0, 801b5d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801b5b2:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 801b5b6:	3901      	subs	r1, #1
 801b5b8:	0089      	lsls	r1, r1, #2
 801b5ba:	3104      	adds	r1, #4
 801b5bc:	eb07 0e01 	add.w	lr, r7, r1
 801b5c0:	5879      	ldr	r1, [r7, r1]
 801b5c2:	9109      	str	r1, [sp, #36]	@ 0x24
 801b5c4:	0e09      	lsrs	r1, r1, #24
 801b5c6:	9112      	str	r1, [sp, #72]	@ 0x48
 801b5c8:	f8de 1004 	ldr.w	r1, [lr, #4]
 801b5cc:	910f      	str	r1, [sp, #60]	@ 0x3c
 801b5ce:	0e09      	lsrs	r1, r1, #24
 801b5d0:	9116      	str	r1, [sp, #88]	@ 0x58
 801b5d2:	b292      	uxth	r2, r2
 801b5d4:	b280      	uxth	r0, r0
 801b5d6:	fb02 f800 	mul.w	r8, r2, r0
 801b5da:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801b5de:	0112      	lsls	r2, r2, #4
 801b5e0:	eba2 0e08 	sub.w	lr, r2, r8
 801b5e4:	b280      	uxth	r0, r0
 801b5e6:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801b5ea:	9915      	ldr	r1, [sp, #84]	@ 0x54
 801b5ec:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801b5ee:	fa1f fe8e 	uxth.w	lr, lr
 801b5f2:	1a12      	subs	r2, r2, r0
 801b5f4:	b292      	uxth	r2, r2
 801b5f6:	fb0e f101 	mul.w	r1, lr, r1
 801b5fa:	fb02 110c 	mla	r1, r2, ip, r1
 801b5fe:	fb00 1105 	mla	r1, r0, r5, r1
 801b602:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801b604:	fb08 1105 	mla	r1, r8, r5, r1
 801b608:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b60c:	2900      	cmp	r1, #0
 801b60e:	f000 80f5 	beq.w	801b7fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801b612:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801b616:	d019      	beq.n	801b64c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801b618:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801b61c:	fb0c fa0a 	mul.w	sl, ip, sl
 801b620:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b624:	fb0c fc03 	mul.w	ip, ip, r3
 801b628:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b62c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b630:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801b634:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801b638:	4453      	add	r3, sl
 801b63a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b63e:	0a1b      	lsrs	r3, r3, #8
 801b640:	0a3f      	lsrs	r7, r7, #8
 801b642:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b646:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801b64a:	433b      	orrs	r3, r7
 801b64c:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801b64e:	2dff      	cmp	r5, #255	@ 0xff
 801b650:	d020      	beq.n	801b694 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801b652:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801b654:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801b658:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801b65a:	436f      	muls	r7, r5
 801b65c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801b65e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801b662:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801b664:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b668:	fb05 fa0a 	mul.w	sl, r5, sl
 801b66c:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b670:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b674:	44bc      	add	ip, r7
 801b676:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801b67a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b67e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b682:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b686:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b68a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b68e:	ea4c 050a 	orr.w	r5, ip, sl
 801b692:	950e      	str	r5, [sp, #56]	@ 0x38
 801b694:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801b696:	2dff      	cmp	r5, #255	@ 0xff
 801b698:	d020      	beq.n	801b6dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801b69a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801b69c:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801b6a0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801b6a2:	436f      	muls	r7, r5
 801b6a4:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801b6a6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801b6aa:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801b6ac:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b6b0:	fb05 fa0a 	mul.w	sl, r5, sl
 801b6b4:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b6b8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b6bc:	44bc      	add	ip, r7
 801b6be:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801b6c2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b6c6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b6ca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b6ce:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b6d2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b6d6:	ea4c 050a 	orr.w	r5, ip, sl
 801b6da:	9509      	str	r5, [sp, #36]	@ 0x24
 801b6dc:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801b6de:	2dff      	cmp	r5, #255	@ 0xff
 801b6e0:	d020      	beq.n	801b724 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801b6e2:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801b6e4:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801b6e8:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801b6ea:	436f      	muls	r7, r5
 801b6ec:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801b6ee:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801b6f2:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801b6f4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b6f8:	fb05 fa0a 	mul.w	sl, r5, sl
 801b6fc:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b700:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b704:	44bc      	add	ip, r7
 801b706:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801b70a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b70e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b712:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b716:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b71a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b71e:	ea4c 050a 	orr.w	r5, ip, sl
 801b722:	950f      	str	r5, [sp, #60]	@ 0x3c
 801b724:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801b726:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801b72a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801b72c:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801b730:	fb0e f707 	mul.w	r7, lr, r7
 801b734:	fb02 770c 	mla	r7, r2, ip, r7
 801b738:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801b73c:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801b73e:	fb00 770c 	mla	r7, r0, ip, r7
 801b742:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801b746:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801b748:	fb08 770c 	mla	r7, r8, ip, r7
 801b74c:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801b750:	fb0e fe0c 	mul.w	lr, lr, ip
 801b754:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b758:	fb02 e303 	mla	r3, r2, r3, lr
 801b75c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801b75e:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801b760:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801b764:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801b766:	fb00 330a 	mla	r3, r0, sl, r3
 801b76a:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801b76e:	fb08 3c0c 	mla	ip, r8, ip, r3
 801b772:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b774:	f8b9 0000 	ldrh.w	r0, [r9]
 801b778:	4359      	muls	r1, r3
 801b77a:	0a3f      	lsrs	r7, r7, #8
 801b77c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b780:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801b784:	1c4b      	adds	r3, r1, #1
 801b786:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801b78a:	ea47 070c 	orr.w	r7, r7, ip
 801b78e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b792:	1202      	asrs	r2, r0, #8
 801b794:	0c3b      	lsrs	r3, r7, #16
 801b796:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801b79a:	b2c9      	uxtb	r1, r1
 801b79c:	fb13 f305 	smulbb	r3, r3, r5
 801b7a0:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801b7a4:	fb02 3201 	mla	r2, r2, r1, r3
 801b7a8:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801b7ac:	10c3      	asrs	r3, r0, #3
 801b7ae:	b2ff      	uxtb	r7, r7
 801b7b0:	00c0      	lsls	r0, r0, #3
 801b7b2:	b2c0      	uxtb	r0, r0
 801b7b4:	fb17 f705 	smulbb	r7, r7, r5
 801b7b8:	fb00 7001 	mla	r0, r0, r1, r7
 801b7bc:	b292      	uxth	r2, r2
 801b7be:	fb1c fc05 	smulbb	ip, ip, r5
 801b7c2:	b280      	uxth	r0, r0
 801b7c4:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801b7c8:	fb03 c301 	mla	r3, r3, r1, ip
 801b7cc:	1c51      	adds	r1, r2, #1
 801b7ce:	f100 0c01 	add.w	ip, r0, #1
 801b7d2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b7d6:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801b7da:	b29b      	uxth	r3, r3
 801b7dc:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b7e0:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801b7e4:	ea4c 0202 	orr.w	r2, ip, r2
 801b7e8:	f103 0c01 	add.w	ip, r3, #1
 801b7ec:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801b7f0:	095b      	lsrs	r3, r3, #5
 801b7f2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b7f6:	431a      	orrs	r2, r3
 801b7f8:	f8a9 2000 	strh.w	r2, [r9]
 801b7fc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801b7fe:	441c      	add	r4, r3
 801b800:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801b802:	f109 0902 	add.w	r9, r9, #2
 801b806:	441e      	add	r6, r3
 801b808:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b80c:	e647      	b.n	801b49e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801b80e:	2800      	cmp	r0, #0
 801b810:	f43f aedf 	beq.w	801b5d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801b814:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801b818:	9109      	str	r1, [sp, #36]	@ 0x24
 801b81a:	0e09      	lsrs	r1, r1, #24
 801b81c:	9112      	str	r1, [sp, #72]	@ 0x48
 801b81e:	e6d8      	b.n	801b5d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801b820:	b01d      	add	sp, #116	@ 0x74
 801b822:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b826 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801b826:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b82a:	b085      	sub	sp, #20
 801b82c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801b830:	9102      	str	r1, [sp, #8]
 801b832:	2c00      	cmp	r4, #0
 801b834:	fb04 7103 	mla	r1, r4, r3, r7
 801b838:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801b83c:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801b840:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801b844:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801b848:	f2c0 810c 	blt.w	801ba64 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801b84c:	45a6      	cmp	lr, r4
 801b84e:	f340 8109 	ble.w	801ba64 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801b852:	2f00      	cmp	r7, #0
 801b854:	f2c0 8104 	blt.w	801ba60 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801b858:	42bb      	cmp	r3, r7
 801b85a:	f340 8101 	ble.w	801ba60 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801b85e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801b862:	1c7a      	adds	r2, r7, #1
 801b864:	f100 8101 	bmi.w	801ba6a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801b868:	4293      	cmp	r3, r2
 801b86a:	f340 80fe 	ble.w	801ba6a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801b86e:	2e00      	cmp	r6, #0
 801b870:	f000 80fd 	beq.w	801ba6e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801b874:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801b878:	3401      	adds	r4, #1
 801b87a:	f100 80fc 	bmi.w	801ba76 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801b87e:	45a6      	cmp	lr, r4
 801b880:	f340 80f9 	ble.w	801ba76 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801b884:	2800      	cmp	r0, #0
 801b886:	f000 80f9 	beq.w	801ba7c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801b88a:	2f00      	cmp	r7, #0
 801b88c:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801b890:	f2c0 80ef 	blt.w	801ba72 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801b894:	42bb      	cmp	r3, r7
 801b896:	f340 80ec 	ble.w	801ba72 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801b89a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801b89e:	3701      	adds	r7, #1
 801b8a0:	f100 80ef 	bmi.w	801ba82 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801b8a4:	42bb      	cmp	r3, r7
 801b8a6:	f340 80ec 	ble.w	801ba82 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801b8aa:	2e00      	cmp	r6, #0
 801b8ac:	f000 80eb 	beq.w	801ba86 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801b8b0:	6852      	ldr	r2, [r2, #4]
 801b8b2:	b2b6      	uxth	r6, r6
 801b8b4:	b280      	uxth	r0, r0
 801b8b6:	fb00 fe06 	mul.w	lr, r0, r6
 801b8ba:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801b8be:	0136      	lsls	r6, r6, #4
 801b8c0:	eba6 070e 	sub.w	r7, r6, lr
 801b8c4:	b280      	uxth	r0, r0
 801b8c6:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801b8ca:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801b8ce:	b2bf      	uxth	r7, r7
 801b8d0:	1a1b      	subs	r3, r3, r0
 801b8d2:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801b8d6:	b29b      	uxth	r3, r3
 801b8d8:	fb07 f60a 	mul.w	r6, r7, sl
 801b8dc:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801b8e0:	fb0b 6603 	mla	r6, fp, r3, r6
 801b8e4:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801b8e8:	fb00 6609 	mla	r6, r0, r9, r6
 801b8ec:	fb0e 6608 	mla	r6, lr, r8, r6
 801b8f0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801b8f4:	9600      	str	r6, [sp, #0]
 801b8f6:	2e00      	cmp	r6, #0
 801b8f8:	f000 80af 	beq.w	801ba5a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801b8fc:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801b900:	fb0b fc0c 	mul.w	ip, fp, ip
 801b904:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801b908:	fb0b f505 	mul.w	r5, fp, r5
 801b90c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801b910:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801b914:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801b918:	44dc      	add	ip, fp
 801b91a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b91e:	9501      	str	r5, [sp, #4]
 801b920:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801b924:	9503      	str	r5, [sp, #12]
 801b926:	9d01      	ldr	r5, [sp, #4]
 801b928:	9e02      	ldr	r6, [sp, #8]
 801b92a:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801b92e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801b932:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801b936:	fb0a fc0c 	mul.w	ip, sl, ip
 801b93a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801b93e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801b942:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801b946:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801b94a:	4465      	add	r5, ip
 801b94c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801b950:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801b954:	fb09 fc0c 	mul.w	ip, r9, ip
 801b958:	fb09 f904 	mul.w	r9, r9, r4
 801b95c:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801b960:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801b964:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801b968:	fb08 f404 	mul.w	r4, r8, r4
 801b96c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801b970:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801b974:	fb08 f802 	mul.w	r8, r8, r2
 801b978:	fb0a fa01 	mul.w	sl, sl, r1
 801b97c:	0a22      	lsrs	r2, r4, #8
 801b97e:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801b982:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801b986:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801b98a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801b98e:	4414      	add	r4, r2
 801b990:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801b994:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801b998:	0a2d      	lsrs	r5, r5, #8
 801b99a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801b99e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801b9a2:	9a03      	ldr	r2, [sp, #12]
 801b9a4:	8836      	ldrh	r6, [r6, #0]
 801b9a6:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801b9aa:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801b9ae:	437d      	muls	r5, r7
 801b9b0:	4461      	add	r1, ip
 801b9b2:	0a24      	lsrs	r4, r4, #8
 801b9b4:	fb02 5503 	mla	r5, r2, r3, r5
 801b9b8:	0a09      	lsrs	r1, r1, #8
 801b9ba:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801b9be:	fb04 540e 	mla	r4, r4, lr, r5
 801b9c2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801b9c6:	fb01 4100 	mla	r1, r1, r0, r4
 801b9ca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b9ce:	0a09      	lsrs	r1, r1, #8
 801b9d0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b9d4:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801b9d8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801b9dc:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801b9e0:	fb07 f70a 	mul.w	r7, r7, sl
 801b9e4:	fb03 7101 	mla	r1, r3, r1, r7
 801b9e8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b9ec:	9b00      	ldr	r3, [sp, #0]
 801b9ee:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801b9f2:	fb0e 1e08 	mla	lr, lr, r8, r1
 801b9f6:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801b9fa:	fb00 e101 	mla	r1, r0, r1, lr
 801b9fe:	43da      	mvns	r2, r3
 801ba00:	1233      	asrs	r3, r6, #8
 801ba02:	b2d2      	uxtb	r2, r2
 801ba04:	10f0      	asrs	r0, r6, #3
 801ba06:	0a09      	lsrs	r1, r1, #8
 801ba08:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801ba0c:	00f6      	lsls	r6, r6, #3
 801ba0e:	4353      	muls	r3, r2
 801ba10:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801ba14:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801ba18:	b2f6      	uxtb	r6, r6
 801ba1a:	4321      	orrs	r1, r4
 801ba1c:	4350      	muls	r0, r2
 801ba1e:	4356      	muls	r6, r2
 801ba20:	1c5a      	adds	r2, r3, #1
 801ba22:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801ba26:	0c0b      	lsrs	r3, r1, #16
 801ba28:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ba2c:	1c42      	adds	r2, r0, #1
 801ba2e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ba32:	0a0a      	lsrs	r2, r1, #8
 801ba34:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801ba38:	021b      	lsls	r3, r3, #8
 801ba3a:	00d2      	lsls	r2, r2, #3
 801ba3c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ba40:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801ba44:	4313      	orrs	r3, r2
 801ba46:	1c72      	adds	r2, r6, #1
 801ba48:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801ba4c:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801ba50:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801ba54:	4319      	orrs	r1, r3
 801ba56:	9b02      	ldr	r3, [sp, #8]
 801ba58:	8019      	strh	r1, [r3, #0]
 801ba5a:	b005      	add	sp, #20
 801ba5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ba60:	2500      	movs	r5, #0
 801ba62:	e6fe      	b.n	801b862 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801ba64:	2100      	movs	r1, #0
 801ba66:	460d      	mov	r5, r1
 801ba68:	e706      	b.n	801b878 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801ba6a:	2100      	movs	r1, #0
 801ba6c:	e704      	b.n	801b878 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801ba6e:	4631      	mov	r1, r6
 801ba70:	e702      	b.n	801b878 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801ba72:	2400      	movs	r4, #0
 801ba74:	e713      	b.n	801b89e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801ba76:	2200      	movs	r2, #0
 801ba78:	4614      	mov	r4, r2
 801ba7a:	e71a      	b.n	801b8b2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801ba7c:	4602      	mov	r2, r0
 801ba7e:	4604      	mov	r4, r0
 801ba80:	e717      	b.n	801b8b2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801ba82:	2200      	movs	r2, #0
 801ba84:	e715      	b.n	801b8b2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801ba86:	4632      	mov	r2, r6
 801ba88:	e713      	b.n	801b8b2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801ba8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ba8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ba90:	b09b      	sub	sp, #108	@ 0x6c
 801ba92:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 801ba96:	9218      	str	r2, [sp, #96]	@ 0x60
 801ba98:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801ba9a:	9116      	str	r1, [sp, #88]	@ 0x58
 801ba9c:	9307      	str	r3, [sp, #28]
 801ba9e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801baa2:	9019      	str	r0, [sp, #100]	@ 0x64
 801baa4:	6850      	ldr	r0, [r2, #4]
 801baa6:	6812      	ldr	r2, [r2, #0]
 801baa8:	fb00 1303 	mla	r3, r0, r3, r1
 801baac:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801bab0:	930a      	str	r3, [sp, #40]	@ 0x28
 801bab2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801bab4:	681b      	ldr	r3, [r3, #0]
 801bab6:	930f      	str	r3, [sp, #60]	@ 0x3c
 801bab8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801baba:	2b00      	cmp	r3, #0
 801babc:	dc03      	bgt.n	801bac6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801babe:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801bac0:	2b00      	cmp	r3, #0
 801bac2:	f340 8386 	ble.w	801c1d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801bac6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801bac8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bacc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801bad0:	1e48      	subs	r0, r1, #1
 801bad2:	1e57      	subs	r7, r2, #1
 801bad4:	9b07      	ldr	r3, [sp, #28]
 801bad6:	2b00      	cmp	r3, #0
 801bad8:	f340 8166 	ble.w	801bda8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801badc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801bae0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801bae4:	d406      	bmi.n	801baf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801bae6:	4584      	cmp	ip, r0
 801bae8:	da04      	bge.n	801baf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801baea:	2b00      	cmp	r3, #0
 801baec:	db02      	blt.n	801baf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801baee:	42bb      	cmp	r3, r7
 801baf0:	f2c0 815b 	blt.w	801bdaa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801baf4:	f11c 0c01 	adds.w	ip, ip, #1
 801baf8:	f100 814b 	bmi.w	801bd92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801bafc:	4561      	cmp	r1, ip
 801bafe:	f2c0 8148 	blt.w	801bd92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801bb02:	3301      	adds	r3, #1
 801bb04:	f100 8145 	bmi.w	801bd92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801bb08:	429a      	cmp	r2, r3
 801bb0a:	f2c0 8142 	blt.w	801bd92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801bb0e:	9b07      	ldr	r3, [sp, #28]
 801bb10:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801bb12:	9317      	str	r3, [sp, #92]	@ 0x5c
 801bb14:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801bb16:	2b00      	cmp	r3, #0
 801bb18:	f340 8165 	ble.w	801bde6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bb1c:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 801bb1e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801bb20:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801bb24:	689b      	ldr	r3, [r3, #8]
 801bb26:	1422      	asrs	r2, r4, #16
 801bb28:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801bb2c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801bb30:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801bb34:	f100 81d5 	bmi.w	801bee2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801bb38:	f103 38ff 	add.w	r8, r3, #4294967295
 801bb3c:	4542      	cmp	r2, r8
 801bb3e:	f280 81d0 	bge.w	801bee2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801bb42:	f1bc 0f00 	cmp.w	ip, #0
 801bb46:	f2c0 81cc 	blt.w	801bee2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801bb4a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801bb4e:	45c4      	cmp	ip, r8
 801bb50:	f280 81c7 	bge.w	801bee2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801bb54:	b21b      	sxth	r3, r3
 801bb56:	fb0c 2203 	mla	r2, ip, r3, r2
 801bb5a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801bb5c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801bb60:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801bb64:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801bb68:	2900      	cmp	r1, #0
 801bb6a:	f000 8182 	beq.w	801be72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801bb6e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801bb72:	950b      	str	r5, [sp, #44]	@ 0x2c
 801bb74:	0e2d      	lsrs	r5, r5, #24
 801bb76:	9512      	str	r5, [sp, #72]	@ 0x48
 801bb78:	b180      	cbz	r0, 801bb9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801bb7a:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801bb7e:	3b01      	subs	r3, #1
 801bb80:	009b      	lsls	r3, r3, #2
 801bb82:	3304      	adds	r3, #4
 801bb84:	eb08 0c03 	add.w	ip, r8, r3
 801bb88:	f858 3003 	ldr.w	r3, [r8, r3]
 801bb8c:	9308      	str	r3, [sp, #32]
 801bb8e:	0e1b      	lsrs	r3, r3, #24
 801bb90:	9310      	str	r3, [sp, #64]	@ 0x40
 801bb92:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801bb96:	930c      	str	r3, [sp, #48]	@ 0x30
 801bb98:	0e1b      	lsrs	r3, r3, #24
 801bb9a:	9313      	str	r3, [sp, #76]	@ 0x4c
 801bb9c:	b289      	uxth	r1, r1
 801bb9e:	b280      	uxth	r0, r0
 801bba0:	fb01 f900 	mul.w	r9, r1, r0
 801bba4:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801bba8:	0109      	lsls	r1, r1, #4
 801bbaa:	eba1 0809 	sub.w	r8, r1, r9
 801bbae:	b280      	uxth	r0, r0
 801bbb0:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 801bbb4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801bbb6:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801bbb8:	fa1f f888 	uxth.w	r8, r8
 801bbbc:	1a09      	subs	r1, r1, r0
 801bbbe:	b289      	uxth	r1, r1
 801bbc0:	fb08 f303 	mul.w	r3, r8, r3
 801bbc4:	fb01 330e 	mla	r3, r1, lr, r3
 801bbc8:	fb00 3305 	mla	r3, r0, r5, r3
 801bbcc:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801bbce:	fb09 3305 	mla	r3, r9, r5, r3
 801bbd2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801bbd6:	2b00      	cmp	r3, #0
 801bbd8:	f000 80d2 	beq.w	801bd80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801bbdc:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801bbe0:	d01b      	beq.n	801bc1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801bbe2:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801bbe6:	fb0e fa0a 	mul.w	sl, lr, sl
 801bbea:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801bbee:	fb0e fe02 	mul.w	lr, lr, r2
 801bbf2:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801bbf6:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801bbfa:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801bbfe:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801bc02:	4452      	add	r2, sl
 801bc04:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801bc08:	0a12      	lsrs	r2, r2, #8
 801bc0a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bc0e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801bc12:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801bc16:	ea42 020c 	orr.w	r2, r2, ip
 801bc1a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801bc1c:	2dff      	cmp	r5, #255	@ 0xff
 801bc1e:	d021      	beq.n	801bc64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801bc20:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801bc22:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801bc26:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801bc28:	fb05 fb0b 	mul.w	fp, r5, fp
 801bc2c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801bc2e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801bc32:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801bc34:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bc38:	fb05 fa0a 	mul.w	sl, r5, sl
 801bc3c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bc40:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801bc44:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801bc48:	44de      	add	lr, fp
 801bc4a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bc4e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bc52:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bc56:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bc5a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bc5e:	ea4e 050a 	orr.w	r5, lr, sl
 801bc62:	950b      	str	r5, [sp, #44]	@ 0x2c
 801bc64:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801bc66:	2dff      	cmp	r5, #255	@ 0xff
 801bc68:	d021      	beq.n	801bcae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801bc6a:	9d08      	ldr	r5, [sp, #32]
 801bc6c:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801bc70:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801bc72:	fb05 fb0b 	mul.w	fp, r5, fp
 801bc76:	9d08      	ldr	r5, [sp, #32]
 801bc78:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801bc7c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801bc7e:	fb05 fa0e 	mul.w	sl, r5, lr
 801bc82:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bc86:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bc8a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801bc8e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801bc92:	44de      	add	lr, fp
 801bc94:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bc98:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bc9c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bca0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bca4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bca8:	ea4e 050a 	orr.w	r5, lr, sl
 801bcac:	9508      	str	r5, [sp, #32]
 801bcae:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801bcb0:	2dff      	cmp	r5, #255	@ 0xff
 801bcb2:	d021      	beq.n	801bcf8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801bcb4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801bcb6:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801bcba:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801bcbc:	fb05 fb0b 	mul.w	fp, r5, fp
 801bcc0:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801bcc2:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801bcc6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801bcc8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bccc:	fb05 fa0a 	mul.w	sl, r5, sl
 801bcd0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bcd4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801bcd8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801bcdc:	44de      	add	lr, fp
 801bcde:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bce2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bce6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bcea:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bcee:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bcf2:	ea4e 050a 	orr.w	r5, lr, sl
 801bcf6:	950c      	str	r5, [sp, #48]	@ 0x30
 801bcf8:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801bcfa:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801bcfe:	9d08      	ldr	r5, [sp, #32]
 801bd00:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801bd04:	fb08 fc0c 	mul.w	ip, r8, ip
 801bd08:	fb01 cc0e 	mla	ip, r1, lr, ip
 801bd0c:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801bd10:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801bd12:	fb00 cc0e 	mla	ip, r0, lr, ip
 801bd16:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801bd1a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801bd1c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801bd20:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801bd24:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801bd28:	fb08 f80e 	mul.w	r8, r8, lr
 801bd2c:	fb01 8202 	mla	r2, r1, r2, r8
 801bd30:	9908      	ldr	r1, [sp, #32]
 801bd32:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801bd36:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801bd38:	fb00 220a 	mla	r2, r0, sl, r2
 801bd3c:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 801bd40:	fb09 2900 	mla	r9, r9, r0, r2
 801bd44:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bd48:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801bd4c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bd50:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801bd54:	ea4c 0c09 	orr.w	ip, ip, r9
 801bd58:	2bff      	cmp	r3, #255	@ 0xff
 801bd5a:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801bd5e:	f040 8091 	bne.w	801be84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801bd62:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801bd66:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 801bd6a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801bd6e:	f022 0207 	bic.w	r2, r2, #7
 801bd72:	431a      	orrs	r2, r3
 801bd74:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801bd78:	ea4c 0c02 	orr.w	ip, ip, r2
 801bd7c:	f8a7 c000 	strh.w	ip, [r7]
 801bd80:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801bd82:	441c      	add	r4, r3
 801bd84:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801bd86:	441e      	add	r6, r3
 801bd88:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801bd8a:	3b01      	subs	r3, #1
 801bd8c:	3702      	adds	r7, #2
 801bd8e:	9317      	str	r3, [sp, #92]	@ 0x5c
 801bd90:	e6c0      	b.n	801bb14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801bd92:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801bd94:	441c      	add	r4, r3
 801bd96:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801bd98:	441e      	add	r6, r3
 801bd9a:	9b07      	ldr	r3, [sp, #28]
 801bd9c:	3b01      	subs	r3, #1
 801bd9e:	9307      	str	r3, [sp, #28]
 801bda0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801bda2:	3302      	adds	r3, #2
 801bda4:	930a      	str	r3, [sp, #40]	@ 0x28
 801bda6:	e695      	b.n	801bad4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801bda8:	d024      	beq.n	801bdf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801bdaa:	9b07      	ldr	r3, [sp, #28]
 801bdac:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801bdae:	3b01      	subs	r3, #1
 801bdb0:	fb00 4003 	mla	r0, r0, r3, r4
 801bdb4:	1400      	asrs	r0, r0, #16
 801bdb6:	f53f aeaa 	bmi.w	801bb0e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801bdba:	3901      	subs	r1, #1
 801bdbc:	4288      	cmp	r0, r1
 801bdbe:	f6bf aea6 	bge.w	801bb0e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801bdc2:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801bdc4:	fb01 6303 	mla	r3, r1, r3, r6
 801bdc8:	141b      	asrs	r3, r3, #16
 801bdca:	f53f aea0 	bmi.w	801bb0e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801bdce:	3a01      	subs	r2, #1
 801bdd0:	4293      	cmp	r3, r2
 801bdd2:	f6bf ae9c 	bge.w	801bb0e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801bdd6:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801bdda:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 801bdde:	f1bb 0f00 	cmp.w	fp, #0
 801bde2:	f300 809a 	bgt.w	801bf1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801bde6:	9b07      	ldr	r3, [sp, #28]
 801bde8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801bdec:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801bdee:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801bdf2:	930a      	str	r3, [sp, #40]	@ 0x28
 801bdf4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801bdf6:	2b00      	cmp	r3, #0
 801bdf8:	f340 81eb 	ble.w	801c1d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801bdfc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801be00:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801be04:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801be08:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801be0a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801be0e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801be12:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801be16:	eef0 6a62 	vmov.f32	s13, s5
 801be1a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801be1e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801be22:	ee77 2a62 	vsub.f32	s5, s14, s5
 801be26:	ee16 4a90 	vmov	r4, s13
 801be2a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801be2e:	eef0 6a43 	vmov.f32	s13, s6
 801be32:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801be36:	ee12 2a90 	vmov	r2, s5
 801be3a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801be3e:	fb92 f3f3 	sdiv	r3, r2, r3
 801be42:	ee13 2a10 	vmov	r2, s6
 801be46:	9327      	str	r3, [sp, #156]	@ 0x9c
 801be48:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801be4a:	fb92 f3f3 	sdiv	r3, r2, r3
 801be4e:	9328      	str	r3, [sp, #160]	@ 0xa0
 801be50:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801be52:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801be54:	3b01      	subs	r3, #1
 801be56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801be5a:	9316      	str	r3, [sp, #88]	@ 0x58
 801be5c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801be5e:	bf08      	it	eq
 801be60:	4613      	moveq	r3, r2
 801be62:	ee16 6a90 	vmov	r6, s13
 801be66:	9307      	str	r3, [sp, #28]
 801be68:	eeb0 3a67 	vmov.f32	s6, s15
 801be6c:	eef0 2a47 	vmov.f32	s5, s14
 801be70:	e622      	b.n	801bab8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801be72:	2800      	cmp	r0, #0
 801be74:	f43f ae92 	beq.w	801bb9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801be78:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801be7c:	9308      	str	r3, [sp, #32]
 801be7e:	0e1b      	lsrs	r3, r3, #24
 801be80:	9310      	str	r3, [sp, #64]	@ 0x40
 801be82:	e68b      	b.n	801bb9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801be84:	8839      	ldrh	r1, [r7, #0]
 801be86:	4dd4      	ldr	r5, [pc, #848]	@ (801c1d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801be88:	43db      	mvns	r3, r3
 801be8a:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801be8e:	fa5f f883 	uxtb.w	r8, r3
 801be92:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801be96:	fb0e fe08 	mul.w	lr, lr, r8
 801be9a:	10c8      	asrs	r0, r1, #3
 801be9c:	00cb      	lsls	r3, r1, #3
 801be9e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801bea2:	f10e 0101 	add.w	r1, lr, #1
 801bea6:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801beaa:	fb00 f008 	mul.w	r0, r0, r8
 801beae:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801beb2:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801beb6:	f100 0e01 	add.w	lr, r0, #1
 801beba:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801bebe:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801bec2:	b2db      	uxtb	r3, r3
 801bec4:	b2c9      	uxtb	r1, r1
 801bec6:	00d2      	lsls	r2, r2, #3
 801bec8:	fb03 f308 	mul.w	r3, r3, r8
 801becc:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801bed0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801bed4:	430a      	orrs	r2, r1
 801bed6:	1c59      	adds	r1, r3, #1
 801bed8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801bedc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801bee0:	e748      	b.n	801bd74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801bee2:	f112 0801 	adds.w	r8, r2, #1
 801bee6:	f53f af4b 	bmi.w	801bd80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801beea:	4543      	cmp	r3, r8
 801beec:	f6ff af48 	blt.w	801bd80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801bef0:	f11c 0801 	adds.w	r8, ip, #1
 801bef4:	f53f af44 	bmi.w	801bd80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801bef8:	45c6      	cmp	lr, r8
 801befa:	f6ff af41 	blt.w	801bd80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801befe:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801bf02:	fa0f f28e 	sxth.w	r2, lr
 801bf06:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801bf0a:	9200      	str	r2, [sp, #0]
 801bf0c:	b21b      	sxth	r3, r3
 801bf0e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801bf10:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801bf12:	4639      	mov	r1, r7
 801bf14:	f7ff fc87 	bl	801b826 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801bf18:	e732      	b.n	801bd80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801bf1a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801bf1c:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801bf1e:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801bf22:	1421      	asrs	r1, r4, #16
 801bf24:	1433      	asrs	r3, r6, #16
 801bf26:	fb07 1303 	mla	r3, r7, r3, r1
 801bf2a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801bf2c:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801bf30:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801bf34:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801bf38:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801bf3c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801bf40:	2a00      	cmp	r2, #0
 801bf42:	f000 8107 	beq.w	801c154 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801bf46:	684d      	ldr	r5, [r1, #4]
 801bf48:	950d      	str	r5, [sp, #52]	@ 0x34
 801bf4a:	0e2d      	lsrs	r5, r5, #24
 801bf4c:	9514      	str	r5, [sp, #80]	@ 0x50
 801bf4e:	b178      	cbz	r0, 801bf70 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801bf50:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 801bf54:	3f01      	subs	r7, #1
 801bf56:	00bf      	lsls	r7, r7, #2
 801bf58:	3704      	adds	r7, #4
 801bf5a:	eb01 0e07 	add.w	lr, r1, r7
 801bf5e:	59c9      	ldr	r1, [r1, r7]
 801bf60:	9109      	str	r1, [sp, #36]	@ 0x24
 801bf62:	0e09      	lsrs	r1, r1, #24
 801bf64:	9111      	str	r1, [sp, #68]	@ 0x44
 801bf66:	f8de 1004 	ldr.w	r1, [lr, #4]
 801bf6a:	910e      	str	r1, [sp, #56]	@ 0x38
 801bf6c:	0e09      	lsrs	r1, r1, #24
 801bf6e:	9115      	str	r1, [sp, #84]	@ 0x54
 801bf70:	b292      	uxth	r2, r2
 801bf72:	b280      	uxth	r0, r0
 801bf74:	fb02 f900 	mul.w	r9, r2, r0
 801bf78:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801bf7c:	0112      	lsls	r2, r2, #4
 801bf7e:	eba2 0e09 	sub.w	lr, r2, r9
 801bf82:	b280      	uxth	r0, r0
 801bf84:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801bf88:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801bf8a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801bf8c:	fa1f fe8e 	uxth.w	lr, lr
 801bf90:	1a09      	subs	r1, r1, r0
 801bf92:	b289      	uxth	r1, r1
 801bf94:	fb0e f202 	mul.w	r2, lr, r2
 801bf98:	fb01 220c 	mla	r2, r1, ip, r2
 801bf9c:	fb00 2205 	mla	r2, r0, r5, r2
 801bfa0:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801bfa2:	fb09 2205 	mla	r2, r9, r5, r2
 801bfa6:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801bfaa:	2a00      	cmp	r2, #0
 801bfac:	f000 80c9 	beq.w	801c142 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801bfb0:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801bfb4:	d019      	beq.n	801bfea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801bfb6:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801bfba:	fb0c fa0a 	mul.w	sl, ip, sl
 801bfbe:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801bfc2:	fb0c fc03 	mul.w	ip, ip, r3
 801bfc6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bfca:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801bfce:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801bfd2:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801bfd6:	4453      	add	r3, sl
 801bfd8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801bfdc:	0a1b      	lsrs	r3, r3, #8
 801bfde:	0a3f      	lsrs	r7, r7, #8
 801bfe0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801bfe4:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801bfe8:	433b      	orrs	r3, r7
 801bfea:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801bfec:	2dff      	cmp	r5, #255	@ 0xff
 801bfee:	d020      	beq.n	801c032 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801bff0:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801bff2:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801bff6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801bff8:	436f      	muls	r7, r5
 801bffa:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801bffc:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801c000:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801c002:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c006:	fb05 fa0a 	mul.w	sl, r5, sl
 801c00a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c00e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c012:	44bc      	add	ip, r7
 801c014:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c018:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c01c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c020:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c024:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c028:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c02c:	ea4c 050a 	orr.w	r5, ip, sl
 801c030:	950d      	str	r5, [sp, #52]	@ 0x34
 801c032:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801c034:	2dff      	cmp	r5, #255	@ 0xff
 801c036:	d020      	beq.n	801c07a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801c038:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801c03a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801c03e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801c040:	436f      	muls	r7, r5
 801c042:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801c044:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801c048:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801c04a:	fb05 fa0c 	mul.w	sl, r5, ip
 801c04e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c052:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c056:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c05a:	44bc      	add	ip, r7
 801c05c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c060:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c064:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c068:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c06c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c070:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c074:	ea4c 050a 	orr.w	r5, ip, sl
 801c078:	9509      	str	r5, [sp, #36]	@ 0x24
 801c07a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801c07c:	2dff      	cmp	r5, #255	@ 0xff
 801c07e:	d020      	beq.n	801c0c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801c080:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801c082:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801c086:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801c088:	436f      	muls	r7, r5
 801c08a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801c08c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801c090:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801c092:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c096:	fb05 fa0a 	mul.w	sl, r5, sl
 801c09a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c09e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c0a2:	44bc      	add	ip, r7
 801c0a4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c0a8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c0ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c0b0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c0b4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c0b8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c0bc:	ea4c 050a 	orr.w	r5, ip, sl
 801c0c0:	950e      	str	r5, [sp, #56]	@ 0x38
 801c0c2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801c0c4:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801c0c8:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801c0ca:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801c0ce:	fb0e f707 	mul.w	r7, lr, r7
 801c0d2:	fb01 770c 	mla	r7, r1, ip, r7
 801c0d6:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801c0da:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801c0dc:	fb00 770c 	mla	r7, r0, ip, r7
 801c0e0:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801c0e4:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801c0e6:	fb09 770c 	mla	r7, r9, ip, r7
 801c0ea:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801c0ee:	fb0e fe0c 	mul.w	lr, lr, ip
 801c0f2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c0f6:	fb01 e303 	mla	r3, r1, r3, lr
 801c0fa:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801c0fc:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801c100:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801c102:	fb00 330a 	mla	r3, r0, sl, r3
 801c106:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801c10a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801c10e:	0a3f      	lsrs	r7, r7, #8
 801c110:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c114:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801c118:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801c11c:	ea47 070c 	orr.w	r7, r7, ip
 801c120:	2aff      	cmp	r2, #255	@ 0xff
 801c122:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801c126:	d11e      	bne.n	801c166 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801c128:	097a      	lsrs	r2, r7, #5
 801c12a:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 801c12e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c132:	f023 0307 	bic.w	r3, r3, #7
 801c136:	4313      	orrs	r3, r2
 801c138:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801c13c:	431f      	orrs	r7, r3
 801c13e:	f8a8 7000 	strh.w	r7, [r8]
 801c142:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c144:	441c      	add	r4, r3
 801c146:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c148:	f108 0802 	add.w	r8, r8, #2
 801c14c:	441e      	add	r6, r3
 801c14e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c152:	e644      	b.n	801bdde <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801c154:	2800      	cmp	r0, #0
 801c156:	f43f af0b 	beq.w	801bf70 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801c15a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801c15e:	9109      	str	r1, [sp, #36]	@ 0x24
 801c160:	0e09      	lsrs	r1, r1, #24
 801c162:	9111      	str	r1, [sp, #68]	@ 0x44
 801c164:	e704      	b.n	801bf70 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801c166:	f8b8 1000 	ldrh.w	r1, [r8]
 801c16a:	43d2      	mvns	r2, r2
 801c16c:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801c170:	fa5f fe82 	uxtb.w	lr, r2
 801c174:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801c178:	fb0c fc0e 	mul.w	ip, ip, lr
 801c17c:	10c8      	asrs	r0, r1, #3
 801c17e:	00ca      	lsls	r2, r1, #3
 801c180:	f10c 0101 	add.w	r1, ip, #1
 801c184:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801c188:	0c39      	lsrs	r1, r7, #16
 801c18a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801c18e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801c192:	4911      	ldr	r1, [pc, #68]	@ (801c1d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801c194:	fb00 f00e 	mul.w	r0, r0, lr
 801c198:	fa5f fc8c 	uxtb.w	ip, ip
 801c19c:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801c1a0:	b2d2      	uxtb	r2, r2
 801c1a2:	1c41      	adds	r1, r0, #1
 801c1a4:	fb02 f20e 	mul.w	r2, r2, lr
 801c1a8:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801c1ac:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c1b0:	1c51      	adds	r1, r2, #1
 801c1b2:	00c0      	lsls	r0, r0, #3
 801c1b4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801c1b8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c1bc:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801c1c0:	ea4c 0c00 	orr.w	ip, ip, r0
 801c1c4:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801c1c8:	ea47 0c0c 	orr.w	ip, r7, ip
 801c1cc:	f8a8 c000 	strh.w	ip, [r8]
 801c1d0:	e7b7      	b.n	801c142 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801c1d2:	b01b      	add	sp, #108	@ 0x6c
 801c1d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c1d8:	fffff800 	.word	0xfffff800

0801c1dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801c1dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c1e0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801c1e4:	2d00      	cmp	r5, #0
 801c1e6:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801c1ea:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801c1ee:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801c1f2:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801c1f6:	fb05 0e03 	mla	lr, r5, r3, r0
 801c1fa:	f2c0 808c 	blt.w	801c316 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801c1fe:	45a9      	cmp	r9, r5
 801c200:	f340 8089 	ble.w	801c316 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801c204:	2800      	cmp	r0, #0
 801c206:	f2c0 8084 	blt.w	801c312 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801c20a:	4580      	cmp	r8, r0
 801c20c:	f340 8081 	ble.w	801c312 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801c210:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801c214:	f01e 0f01 	tst.w	lr, #1
 801c218:	5d16      	ldrb	r6, [r2, r4]
 801c21a:	bf0c      	ite	eq
 801c21c:	f006 060f 	andeq.w	r6, r6, #15
 801c220:	1136      	asrne	r6, r6, #4
 801c222:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801c226:	b2f6      	uxtb	r6, r6
 801c228:	1c44      	adds	r4, r0, #1
 801c22a:	d477      	bmi.n	801c31c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801c22c:	45a0      	cmp	r8, r4
 801c22e:	dd75      	ble.n	801c31c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801c230:	2f00      	cmp	r7, #0
 801c232:	d075      	beq.n	801c320 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801c234:	f10e 0a01 	add.w	sl, lr, #1
 801c238:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801c23c:	f01a 0f01 	tst.w	sl, #1
 801c240:	5d14      	ldrb	r4, [r2, r4]
 801c242:	bf0c      	ite	eq
 801c244:	f004 040f 	andeq.w	r4, r4, #15
 801c248:	1124      	asrne	r4, r4, #4
 801c24a:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801c24e:	b2e4      	uxtb	r4, r4
 801c250:	3501      	adds	r5, #1
 801c252:	d469      	bmi.n	801c328 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801c254:	45a9      	cmp	r9, r5
 801c256:	dd67      	ble.n	801c328 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801c258:	f1bc 0f00 	cmp.w	ip, #0
 801c25c:	d067      	beq.n	801c32e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801c25e:	2800      	cmp	r0, #0
 801c260:	db60      	blt.n	801c324 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801c262:	4580      	cmp	r8, r0
 801c264:	dd5e      	ble.n	801c324 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801c266:	eb03 090e 	add.w	r9, r3, lr
 801c26a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801c26e:	f019 0f01 	tst.w	r9, #1
 801c272:	5d55      	ldrb	r5, [r2, r5]
 801c274:	bf0c      	ite	eq
 801c276:	f005 050f 	andeq.w	r5, r5, #15
 801c27a:	112d      	asrne	r5, r5, #4
 801c27c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801c280:	b2ed      	uxtb	r5, r5
 801c282:	3001      	adds	r0, #1
 801c284:	d456      	bmi.n	801c334 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801c286:	4580      	cmp	r8, r0
 801c288:	dd54      	ble.n	801c334 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801c28a:	2f00      	cmp	r7, #0
 801c28c:	d054      	beq.n	801c338 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801c28e:	3301      	adds	r3, #1
 801c290:	449e      	add	lr, r3
 801c292:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801c296:	f01e 0f01 	tst.w	lr, #1
 801c29a:	5cd0      	ldrb	r0, [r2, r3]
 801c29c:	bf0c      	ite	eq
 801c29e:	f000 000f 	andeq.w	r0, r0, #15
 801c2a2:	1100      	asrne	r0, r0, #4
 801c2a4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801c2a8:	b2c3      	uxtb	r3, r0
 801c2aa:	b2ba      	uxth	r2, r7
 801c2ac:	fa1f fc8c 	uxth.w	ip, ip
 801c2b0:	fb02 f00c 	mul.w	r0, r2, ip
 801c2b4:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801c2b8:	0112      	lsls	r2, r2, #4
 801c2ba:	fa1f fc8c 	uxth.w	ip, ip
 801c2be:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801c2c2:	1a12      	subs	r2, r2, r0
 801c2c4:	eba7 070c 	sub.w	r7, r7, ip
 801c2c8:	b292      	uxth	r2, r2
 801c2ca:	b2bf      	uxth	r7, r7
 801c2cc:	4362      	muls	r2, r4
 801c2ce:	fb06 2207 	mla	r2, r6, r7, r2
 801c2d2:	fb0c 2505 	mla	r5, ip, r5, r2
 801c2d6:	fb00 5303 	mla	r3, r0, r3, r5
 801c2da:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c2de:	b1b3      	cbz	r3, 801c30e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801c2e0:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801c2e4:	435a      	muls	r2, r3
 801c2e6:	1c53      	adds	r3, r2, #1
 801c2e8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c2ec:	4a2d      	ldr	r2, [pc, #180]	@ (801c3a4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801c2ee:	121b      	asrs	r3, r3, #8
 801c2f0:	6812      	ldr	r2, [r2, #0]
 801c2f2:	2bff      	cmp	r3, #255	@ 0xff
 801c2f4:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801c2f8:	d120      	bne.n	801c33c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801c2fa:	4b2b      	ldr	r3, [pc, #172]	@ (801c3a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801c2fc:	0950      	lsrs	r0, r2, #5
 801c2fe:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c302:	4033      	ands	r3, r6
 801c304:	4318      	orrs	r0, r3
 801c306:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c30a:	4302      	orrs	r2, r0
 801c30c:	800a      	strh	r2, [r1, #0]
 801c30e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c312:	2600      	movs	r6, #0
 801c314:	e788      	b.n	801c228 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801c316:	2400      	movs	r4, #0
 801c318:	4626      	mov	r6, r4
 801c31a:	e799      	b.n	801c250 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801c31c:	2400      	movs	r4, #0
 801c31e:	e797      	b.n	801c250 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801c320:	463c      	mov	r4, r7
 801c322:	e795      	b.n	801c250 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801c324:	2500      	movs	r5, #0
 801c326:	e7ac      	b.n	801c282 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801c328:	2300      	movs	r3, #0
 801c32a:	461d      	mov	r5, r3
 801c32c:	e7bd      	b.n	801c2aa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801c32e:	4663      	mov	r3, ip
 801c330:	4665      	mov	r5, ip
 801c332:	e7ba      	b.n	801c2aa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801c334:	2300      	movs	r3, #0
 801c336:	e7b8      	b.n	801c2aa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801c338:	463b      	mov	r3, r7
 801c33a:	e7b6      	b.n	801c2aa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801c33c:	880d      	ldrh	r5, [r1, #0]
 801c33e:	b29f      	uxth	r7, r3
 801c340:	122c      	asrs	r4, r5, #8
 801c342:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801c346:	43db      	mvns	r3, r3
 801c348:	b2db      	uxtb	r3, r3
 801c34a:	fb10 f007 	smulbb	r0, r0, r7
 801c34e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801c352:	fb04 0403 	mla	r4, r4, r3, r0
 801c356:	b2f6      	uxtb	r6, r6
 801c358:	10e8      	asrs	r0, r5, #3
 801c35a:	b2d2      	uxtb	r2, r2
 801c35c:	00ed      	lsls	r5, r5, #3
 801c35e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801c362:	fb12 f207 	smulbb	r2, r2, r7
 801c366:	fb16 f607 	smulbb	r6, r6, r7
 801c36a:	b2ed      	uxtb	r5, r5
 801c36c:	b2a4      	uxth	r4, r4
 801c36e:	fb00 6603 	mla	r6, r0, r3, r6
 801c372:	fb05 2303 	mla	r3, r5, r3, r2
 801c376:	b29a      	uxth	r2, r3
 801c378:	1c63      	adds	r3, r4, #1
 801c37a:	b2b0      	uxth	r0, r6
 801c37c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801c380:	1c53      	adds	r3, r2, #1
 801c382:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c386:	1c42      	adds	r2, r0, #1
 801c388:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c38c:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801c390:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c394:	0940      	lsrs	r0, r0, #5
 801c396:	4323      	orrs	r3, r4
 801c398:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c39c:	4303      	orrs	r3, r0
 801c39e:	800b      	strh	r3, [r1, #0]
 801c3a0:	e7b5      	b.n	801c30e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801c3a2:	bf00      	nop
 801c3a4:	20011a04 	.word	0x20011a04
 801c3a8:	00fff800 	.word	0x00fff800

0801c3ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c3ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c3b0:	b097      	sub	sp, #92	@ 0x5c
 801c3b2:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 801c3b6:	9214      	str	r2, [sp, #80]	@ 0x50
 801c3b8:	9309      	str	r3, [sp, #36]	@ 0x24
 801c3ba:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801c3bc:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801c3c0:	910d      	str	r1, [sp, #52]	@ 0x34
 801c3c2:	930f      	str	r3, [sp, #60]	@ 0x3c
 801c3c4:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801c3c8:	9015      	str	r0, [sp, #84]	@ 0x54
 801c3ca:	6850      	ldr	r0, [r2, #4]
 801c3cc:	6812      	ldr	r2, [r2, #0]
 801c3ce:	fb00 1303 	mla	r3, r0, r3, r1
 801c3d2:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801c3d6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c3d8:	689b      	ldr	r3, [r3, #8]
 801c3da:	3301      	adds	r3, #1
 801c3dc:	f023 0301 	bic.w	r3, r3, #1
 801c3e0:	930a      	str	r3, [sp, #40]	@ 0x28
 801c3e2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c3e4:	681f      	ldr	r7, [r3, #0]
 801c3e6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c3e8:	2b00      	cmp	r3, #0
 801c3ea:	dc03      	bgt.n	801c3f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c3ec:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801c3ee:	2b00      	cmp	r3, #0
 801c3f0:	f340 8287 	ble.w	801c902 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801c3f4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c3f6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c3fa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c3fe:	1e48      	subs	r0, r1, #1
 801c400:	f102 3cff 	add.w	ip, r2, #4294967295
 801c404:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c406:	2b00      	cmp	r3, #0
 801c408:	f340 80c4 	ble.w	801c594 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801c40c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801c410:	ea4f 4326 	mov.w	r3, r6, asr #16
 801c414:	d406      	bmi.n	801c424 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c416:	4586      	cmp	lr, r0
 801c418:	da04      	bge.n	801c424 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c41a:	2b00      	cmp	r3, #0
 801c41c:	db02      	blt.n	801c424 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c41e:	4563      	cmp	r3, ip
 801c420:	f2c0 80b9 	blt.w	801c596 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801c424:	f11e 0e01 	adds.w	lr, lr, #1
 801c428:	f100 80aa 	bmi.w	801c580 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801c42c:	4571      	cmp	r1, lr
 801c42e:	f2c0 80a7 	blt.w	801c580 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801c432:	3301      	adds	r3, #1
 801c434:	f100 80a4 	bmi.w	801c580 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801c438:	429a      	cmp	r2, r3
 801c43a:	f2c0 80a1 	blt.w	801c580 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801c43e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c440:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 801c444:	930e      	str	r3, [sp, #56]	@ 0x38
 801c446:	46c8      	mov	r8, r9
 801c448:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c44a:	2b00      	cmp	r3, #0
 801c44c:	f340 80c3 	ble.w	801c5d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801c450:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c452:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801c456:	1423      	asrs	r3, r4, #16
 801c458:	ea4f 4026 	mov.w	r0, r6, asr #16
 801c45c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801c460:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801c464:	f100 814d 	bmi.w	801c702 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801c468:	f10c 3bff 	add.w	fp, ip, #4294967295
 801c46c:	455b      	cmp	r3, fp
 801c46e:	f280 8148 	bge.w	801c702 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801c472:	2800      	cmp	r0, #0
 801c474:	f2c0 8145 	blt.w	801c702 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801c478:	f10e 3bff 	add.w	fp, lr, #4294967295
 801c47c:	4558      	cmp	r0, fp
 801c47e:	f280 8140 	bge.w	801c702 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801c482:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801c484:	fb00 3305 	mla	r3, r0, r5, r3
 801c488:	0858      	lsrs	r0, r3, #1
 801c48a:	07dd      	lsls	r5, r3, #31
 801c48c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801c490:	bf54      	ite	pl
 801c492:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c496:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c49a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c49e:	fa5f fc8c 	uxtb.w	ip, ip
 801c4a2:	2a00      	cmp	r2, #0
 801c4a4:	f000 80db 	beq.w	801c65e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801c4a8:	1c58      	adds	r0, r3, #1
 801c4aa:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801c4ae:	07c0      	lsls	r0, r0, #31
 801c4b0:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c4b4:	bf54      	ite	pl
 801c4b6:	f00e 0e0f 	andpl.w	lr, lr, #15
 801c4ba:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801c4be:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801c4c2:	fa5f f08e 	uxtb.w	r0, lr
 801c4c6:	9010      	str	r0, [sp, #64]	@ 0x40
 801c4c8:	b1c9      	cbz	r1, 801c4fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801c4ca:	4453      	add	r3, sl
 801c4cc:	0858      	lsrs	r0, r3, #1
 801c4ce:	07dd      	lsls	r5, r3, #31
 801c4d0:	5c38      	ldrb	r0, [r7, r0]
 801c4d2:	bf54      	ite	pl
 801c4d4:	f000 000f 	andpl.w	r0, r0, #15
 801c4d8:	1100      	asrmi	r0, r0, #4
 801c4da:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801c4de:	3301      	adds	r3, #1
 801c4e0:	b2c0      	uxtb	r0, r0
 801c4e2:	900b      	str	r0, [sp, #44]	@ 0x2c
 801c4e4:	0858      	lsrs	r0, r3, #1
 801c4e6:	07dd      	lsls	r5, r3, #31
 801c4e8:	f817 e000 	ldrb.w	lr, [r7, r0]
 801c4ec:	bf54      	ite	pl
 801c4ee:	f00e 030f 	andpl.w	r3, lr, #15
 801c4f2:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801c4f6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801c4fa:	b2db      	uxtb	r3, r3
 801c4fc:	9311      	str	r3, [sp, #68]	@ 0x44
 801c4fe:	b292      	uxth	r2, r2
 801c500:	b289      	uxth	r1, r1
 801c502:	fb02 f301 	mul.w	r3, r2, r1
 801c506:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801c50a:	0112      	lsls	r2, r2, #4
 801c50c:	b289      	uxth	r1, r1
 801c50e:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 801c512:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801c514:	1ad2      	subs	r2, r2, r3
 801c516:	1a40      	subs	r0, r0, r1
 801c518:	b292      	uxth	r2, r2
 801c51a:	436a      	muls	r2, r5
 801c51c:	b280      	uxth	r0, r0
 801c51e:	fb0c 2c00 	mla	ip, ip, r0, r2
 801c522:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801c524:	fb01 c102 	mla	r1, r1, r2, ip
 801c528:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801c52a:	fb03 1302 	mla	r3, r3, r2, r1
 801c52e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c532:	b1db      	cbz	r3, 801c56c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801c534:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c536:	4353      	muls	r3, r2
 801c538:	1c5a      	adds	r2, r3, #1
 801c53a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801c53e:	4ac6      	ldr	r2, [pc, #792]	@ (801c858 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801c540:	121b      	asrs	r3, r3, #8
 801c542:	6812      	ldr	r2, [r2, #0]
 801c544:	2bff      	cmp	r3, #255	@ 0xff
 801c546:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801c54a:	f040 8099 	bne.w	801c680 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801c54e:	0953      	lsrs	r3, r2, #5
 801c550:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801c554:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c558:	f02c 0c07 	bic.w	ip, ip, #7
 801c55c:	ea43 0c0c 	orr.w	ip, r3, ip
 801c560:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c564:	ea4c 0202 	orr.w	r2, ip, r2
 801c568:	f8a8 2000 	strh.w	r2, [r8]
 801c56c:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801c56e:	441c      	add	r4, r3
 801c570:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c572:	441e      	add	r6, r3
 801c574:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c576:	3b01      	subs	r3, #1
 801c578:	f108 0802 	add.w	r8, r8, #2
 801c57c:	930e      	str	r3, [sp, #56]	@ 0x38
 801c57e:	e763      	b.n	801c448 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801c580:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801c582:	441c      	add	r4, r3
 801c584:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c586:	441e      	add	r6, r3
 801c588:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c58a:	3b01      	subs	r3, #1
 801c58c:	9309      	str	r3, [sp, #36]	@ 0x24
 801c58e:	f109 0902 	add.w	r9, r9, #2
 801c592:	e737      	b.n	801c404 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801c594:	d024      	beq.n	801c5e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801c596:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c598:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801c59a:	3b01      	subs	r3, #1
 801c59c:	fb00 4003 	mla	r0, r0, r3, r4
 801c5a0:	1400      	asrs	r0, r0, #16
 801c5a2:	f53f af4c 	bmi.w	801c43e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c5a6:	3901      	subs	r1, #1
 801c5a8:	4288      	cmp	r0, r1
 801c5aa:	f6bf af48 	bge.w	801c43e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c5ae:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801c5b0:	fb01 6303 	mla	r3, r1, r3, r6
 801c5b4:	141b      	asrs	r3, r3, #16
 801c5b6:	f53f af42 	bmi.w	801c43e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c5ba:	3a01      	subs	r2, #1
 801c5bc:	4293      	cmp	r3, r2
 801c5be:	f6bf af3e 	bge.w	801c43e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c5c2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801c5c6:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801c5ca:	930e      	str	r3, [sp, #56]	@ 0x38
 801c5cc:	46c8      	mov	r8, r9
 801c5ce:	f1bb 0f00 	cmp.w	fp, #0
 801c5d2:	f300 80b7 	bgt.w	801c744 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801c5d6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c5d8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801c5dc:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801c5e0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c5e2:	2b00      	cmp	r3, #0
 801c5e4:	f340 818d 	ble.w	801c902 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801c5e8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c5ec:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801c5f0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c5f4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c5f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c5fa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c5fe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c602:	eef0 6a62 	vmov.f32	s13, s5
 801c606:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c60a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c60e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c612:	ee16 4a90 	vmov	r4, s13
 801c616:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c61a:	eef0 6a43 	vmov.f32	s13, s6
 801c61e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c622:	ee12 2a90 	vmov	r2, s5
 801c626:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c62a:	fb92 f3f3 	sdiv	r3, r2, r3
 801c62e:	ee13 2a10 	vmov	r2, s6
 801c632:	9323      	str	r3, [sp, #140]	@ 0x8c
 801c634:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c636:	fb92 f3f3 	sdiv	r3, r2, r3
 801c63a:	9324      	str	r3, [sp, #144]	@ 0x90
 801c63c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c63e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801c640:	3b01      	subs	r3, #1
 801c642:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c646:	930d      	str	r3, [sp, #52]	@ 0x34
 801c648:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c64a:	bf08      	it	eq
 801c64c:	4613      	moveq	r3, r2
 801c64e:	ee16 6a90 	vmov	r6, s13
 801c652:	9309      	str	r3, [sp, #36]	@ 0x24
 801c654:	eeb0 3a67 	vmov.f32	s6, s15
 801c658:	eef0 2a47 	vmov.f32	s5, s14
 801c65c:	e6c3      	b.n	801c3e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c65e:	2900      	cmp	r1, #0
 801c660:	f43f af4d 	beq.w	801c4fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801c664:	eb0a 0003 	add.w	r0, sl, r3
 801c668:	0843      	lsrs	r3, r0, #1
 801c66a:	07c0      	lsls	r0, r0, #31
 801c66c:	5cfb      	ldrb	r3, [r7, r3]
 801c66e:	bf54      	ite	pl
 801c670:	f003 030f 	andpl.w	r3, r3, #15
 801c674:	111b      	asrmi	r3, r3, #4
 801c676:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801c67a:	b2db      	uxtb	r3, r3
 801c67c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801c67e:	e73e      	b.n	801c4fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801c680:	f8b8 e000 	ldrh.w	lr, [r8]
 801c684:	fa1f fb83 	uxth.w	fp, r3
 801c688:	ea4f 202e 	mov.w	r0, lr, asr #8
 801c68c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801c690:	43db      	mvns	r3, r3
 801c692:	b2db      	uxtb	r3, r3
 801c694:	fb11 f10b 	smulbb	r1, r1, fp
 801c698:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801c69c:	fb00 1003 	mla	r0, r0, r3, r1
 801c6a0:	fa5f fc8c 	uxtb.w	ip, ip
 801c6a4:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801c6a8:	b2d2      	uxtb	r2, r2
 801c6aa:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c6ae:	b280      	uxth	r0, r0
 801c6b0:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801c6b4:	fb1c fc0b 	smulbb	ip, ip, fp
 801c6b8:	fa5f fe8e 	uxtb.w	lr, lr
 801c6bc:	fb12 fb0b 	smulbb	fp, r2, fp
 801c6c0:	fb01 cc03 	mla	ip, r1, r3, ip
 801c6c4:	fb0e bb03 	mla	fp, lr, r3, fp
 801c6c8:	1c43      	adds	r3, r0, #1
 801c6ca:	fa1f fc8c 	uxth.w	ip, ip
 801c6ce:	fa1f fb8b 	uxth.w	fp, fp
 801c6d2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c6d6:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 801c6da:	f10c 0101 	add.w	r1, ip, #1
 801c6de:	f10b 0001 	add.w	r0, fp, #1
 801c6e2:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801c6e6:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801c6ea:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801c6ee:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801c6f2:	4318      	orrs	r0, r3
 801c6f4:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801c6f8:	ea40 000c 	orr.w	r0, r0, ip
 801c6fc:	f8a8 0000 	strh.w	r0, [r8]
 801c700:	e734      	b.n	801c56c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801c702:	f113 0b01 	adds.w	fp, r3, #1
 801c706:	f53f af31 	bmi.w	801c56c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801c70a:	45dc      	cmp	ip, fp
 801c70c:	f6ff af2e 	blt.w	801c56c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801c710:	f110 0b01 	adds.w	fp, r0, #1
 801c714:	f53f af2a 	bmi.w	801c56c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801c718:	45de      	cmp	lr, fp
 801c71a:	f6ff af27 	blt.w	801c56c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801c71e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801c720:	9302      	str	r3, [sp, #8]
 801c722:	fa0f f38e 	sxth.w	r3, lr
 801c726:	9301      	str	r3, [sp, #4]
 801c728:	fa0f f38c 	sxth.w	r3, ip
 801c72c:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801c730:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801c734:	9300      	str	r3, [sp, #0]
 801c736:	463a      	mov	r2, r7
 801c738:	4653      	mov	r3, sl
 801c73a:	4641      	mov	r1, r8
 801c73c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801c73e:	f7ff fd4d 	bl	801c1dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801c742:	e713      	b.n	801c56c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801c744:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801c746:	1422      	asrs	r2, r4, #16
 801c748:	1433      	asrs	r3, r6, #16
 801c74a:	fb05 2303 	mla	r3, r5, r3, r2
 801c74e:	085a      	lsrs	r2, r3, #1
 801c750:	07dd      	lsls	r5, r3, #31
 801c752:	5cba      	ldrb	r2, [r7, r2]
 801c754:	bf54      	ite	pl
 801c756:	f002 020f 	andpl.w	r2, r2, #15
 801c75a:	1112      	asrmi	r2, r2, #4
 801c75c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c760:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801c764:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801c768:	b2d2      	uxtb	r2, r2
 801c76a:	2900      	cmp	r1, #0
 801c76c:	d076      	beq.n	801c85c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c76e:	f103 0e01 	add.w	lr, r3, #1
 801c772:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801c776:	f01e 0f01 	tst.w	lr, #1
 801c77a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c77e:	bf0c      	ite	eq
 801c780:	f00c 0c0f 	andeq.w	ip, ip, #15
 801c784:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801c788:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c78c:	fa5f f58c 	uxtb.w	r5, ip
 801c790:	9512      	str	r5, [sp, #72]	@ 0x48
 801c792:	b300      	cbz	r0, 801c7d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801c794:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801c796:	442b      	add	r3, r5
 801c798:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801c79c:	07dd      	lsls	r5, r3, #31
 801c79e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c7a2:	bf54      	ite	pl
 801c7a4:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c7a8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c7ac:	3301      	adds	r3, #1
 801c7ae:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c7b2:	fa5f f58c 	uxtb.w	r5, ip
 801c7b6:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801c7ba:	950c      	str	r5, [sp, #48]	@ 0x30
 801c7bc:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c7c0:	07dd      	lsls	r5, r3, #31
 801c7c2:	bf54      	ite	pl
 801c7c4:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c7c8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c7cc:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c7d0:	fa5f f38c 	uxtb.w	r3, ip
 801c7d4:	9313      	str	r3, [sp, #76]	@ 0x4c
 801c7d6:	b289      	uxth	r1, r1
 801c7d8:	b280      	uxth	r0, r0
 801c7da:	fb01 f300 	mul.w	r3, r1, r0
 801c7de:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801c7e2:	0109      	lsls	r1, r1, #4
 801c7e4:	b280      	uxth	r0, r0
 801c7e6:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 801c7ea:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801c7ec:	1ac9      	subs	r1, r1, r3
 801c7ee:	ebac 0c00 	sub.w	ip, ip, r0
 801c7f2:	b289      	uxth	r1, r1
 801c7f4:	4369      	muls	r1, r5
 801c7f6:	fa1f fc8c 	uxth.w	ip, ip
 801c7fa:	fb02 120c 	mla	r2, r2, ip, r1
 801c7fe:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801c800:	fb00 2001 	mla	r0, r0, r1, r2
 801c804:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801c806:	fb03 0302 	mla	r3, r3, r2, r0
 801c80a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c80e:	b1d3      	cbz	r3, 801c846 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801c810:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c812:	4353      	muls	r3, r2
 801c814:	1c5a      	adds	r2, r3, #1
 801c816:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801c81a:	4a0f      	ldr	r2, [pc, #60]	@ (801c858 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801c81c:	121b      	asrs	r3, r3, #8
 801c81e:	6812      	ldr	r2, [r2, #0]
 801c820:	2bff      	cmp	r3, #255	@ 0xff
 801c822:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801c826:	d12d      	bne.n	801c884 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801c828:	0953      	lsrs	r3, r2, #5
 801c82a:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801c82e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c832:	f02c 0c07 	bic.w	ip, ip, #7
 801c836:	ea43 0c0c 	orr.w	ip, r3, ip
 801c83a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c83e:	ea4c 0202 	orr.w	r2, ip, r2
 801c842:	f8a8 2000 	strh.w	r2, [r8]
 801c846:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801c848:	441c      	add	r4, r3
 801c84a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c84c:	f108 0802 	add.w	r8, r8, #2
 801c850:	441e      	add	r6, r3
 801c852:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c856:	e6ba      	b.n	801c5ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801c858:	20011a04 	.word	0x20011a04
 801c85c:	2800      	cmp	r0, #0
 801c85e:	d0ba      	beq.n	801c7d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801c860:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801c862:	442b      	add	r3, r5
 801c864:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801c868:	07db      	lsls	r3, r3, #31
 801c86a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c86e:	bf54      	ite	pl
 801c870:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c874:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c878:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c87c:	fa5f f38c 	uxtb.w	r3, ip
 801c880:	930c      	str	r3, [sp, #48]	@ 0x30
 801c882:	e7a8      	b.n	801c7d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801c884:	f8b8 e000 	ldrh.w	lr, [r8]
 801c888:	fa1f fa83 	uxth.w	sl, r3
 801c88c:	ea4f 202e 	mov.w	r0, lr, asr #8
 801c890:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801c894:	43db      	mvns	r3, r3
 801c896:	b2db      	uxtb	r3, r3
 801c898:	fb11 f10a 	smulbb	r1, r1, sl
 801c89c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801c8a0:	fb00 1003 	mla	r0, r0, r3, r1
 801c8a4:	b2d2      	uxtb	r2, r2
 801c8a6:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801c8aa:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c8ae:	fa5f fe8e 	uxtb.w	lr, lr
 801c8b2:	fb12 f20a 	smulbb	r2, r2, sl
 801c8b6:	fb0e 2203 	mla	r2, lr, r3, r2
 801c8ba:	fa5f fc8c 	uxtb.w	ip, ip
 801c8be:	b280      	uxth	r0, r0
 801c8c0:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801c8c4:	b292      	uxth	r2, r2
 801c8c6:	fb1c fc0a 	smulbb	ip, ip, sl
 801c8ca:	fb01 cc03 	mla	ip, r1, r3, ip
 801c8ce:	1c43      	adds	r3, r0, #1
 801c8d0:	1c51      	adds	r1, r2, #1
 801c8d2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c8d6:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801c8da:	fa1f fc8c 	uxth.w	ip, ip
 801c8de:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801c8e2:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801c8e6:	4308      	orrs	r0, r1
 801c8e8:	f10c 0101 	add.w	r1, ip, #1
 801c8ec:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801c8f0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801c8f4:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801c8f8:	ea40 000c 	orr.w	r0, r0, ip
 801c8fc:	f8a8 0000 	strh.w	r0, [r8]
 801c900:	e7a1      	b.n	801c846 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801c902:	b017      	add	sp, #92	@ 0x5c
 801c904:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c908 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801c908:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c90c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801c910:	2d00      	cmp	r5, #0
 801c912:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801c916:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801c91a:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801c91e:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801c922:	fb05 0e03 	mla	lr, r5, r3, r0
 801c926:	f2c0 80b0 	blt.w	801ca8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801c92a:	45a9      	cmp	r9, r5
 801c92c:	f340 80ad 	ble.w	801ca8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801c930:	2800      	cmp	r0, #0
 801c932:	f2c0 80a8 	blt.w	801ca86 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801c936:	4580      	cmp	r8, r0
 801c938:	f340 80a5 	ble.w	801ca86 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801c93c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801c940:	f01e 0f01 	tst.w	lr, #1
 801c944:	5d16      	ldrb	r6, [r2, r4]
 801c946:	bf0c      	ite	eq
 801c948:	f006 060f 	andeq.w	r6, r6, #15
 801c94c:	1136      	asrne	r6, r6, #4
 801c94e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801c952:	b2f6      	uxtb	r6, r6
 801c954:	1c44      	adds	r4, r0, #1
 801c956:	f100 809b 	bmi.w	801ca90 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801c95a:	45a0      	cmp	r8, r4
 801c95c:	f340 8098 	ble.w	801ca90 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801c960:	2f00      	cmp	r7, #0
 801c962:	f000 8097 	beq.w	801ca94 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801c966:	f10e 0a01 	add.w	sl, lr, #1
 801c96a:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801c96e:	f01a 0f01 	tst.w	sl, #1
 801c972:	5d14      	ldrb	r4, [r2, r4]
 801c974:	bf0c      	ite	eq
 801c976:	f004 040f 	andeq.w	r4, r4, #15
 801c97a:	1124      	asrne	r4, r4, #4
 801c97c:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801c980:	b2e4      	uxtb	r4, r4
 801c982:	3501      	adds	r5, #1
 801c984:	f100 808a 	bmi.w	801ca9c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801c988:	45a9      	cmp	r9, r5
 801c98a:	f340 8087 	ble.w	801ca9c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801c98e:	f1bc 0f00 	cmp.w	ip, #0
 801c992:	f000 8086 	beq.w	801caa2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801c996:	2800      	cmp	r0, #0
 801c998:	db7e      	blt.n	801ca98 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801c99a:	4580      	cmp	r8, r0
 801c99c:	dd7c      	ble.n	801ca98 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801c99e:	eb03 090e 	add.w	r9, r3, lr
 801c9a2:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801c9a6:	f019 0f01 	tst.w	r9, #1
 801c9aa:	5d55      	ldrb	r5, [r2, r5]
 801c9ac:	bf0c      	ite	eq
 801c9ae:	f005 050f 	andeq.w	r5, r5, #15
 801c9b2:	112d      	asrne	r5, r5, #4
 801c9b4:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801c9b8:	b2ed      	uxtb	r5, r5
 801c9ba:	3001      	adds	r0, #1
 801c9bc:	d474      	bmi.n	801caa8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801c9be:	4580      	cmp	r8, r0
 801c9c0:	dd72      	ble.n	801caa8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801c9c2:	2f00      	cmp	r7, #0
 801c9c4:	d072      	beq.n	801caac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801c9c6:	3301      	adds	r3, #1
 801c9c8:	449e      	add	lr, r3
 801c9ca:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801c9ce:	f01e 0f01 	tst.w	lr, #1
 801c9d2:	5cd0      	ldrb	r0, [r2, r3]
 801c9d4:	bf0c      	ite	eq
 801c9d6:	f000 000f 	andeq.w	r0, r0, #15
 801c9da:	1100      	asrne	r0, r0, #4
 801c9dc:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801c9e0:	b2c3      	uxtb	r3, r0
 801c9e2:	b2ba      	uxth	r2, r7
 801c9e4:	fa1f fc8c 	uxth.w	ip, ip
 801c9e8:	fb02 f00c 	mul.w	r0, r2, ip
 801c9ec:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801c9f0:	0112      	lsls	r2, r2, #4
 801c9f2:	fa1f fc8c 	uxth.w	ip, ip
 801c9f6:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801c9fa:	1a12      	subs	r2, r2, r0
 801c9fc:	eba7 070c 	sub.w	r7, r7, ip
 801ca00:	b292      	uxth	r2, r2
 801ca02:	b2bf      	uxth	r7, r7
 801ca04:	4362      	muls	r2, r4
 801ca06:	fb06 2207 	mla	r2, r6, r7, r2
 801ca0a:	fb0c 2505 	mla	r5, ip, r5, r2
 801ca0e:	fb00 5303 	mla	r3, r0, r3, r5
 801ca12:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ca16:	b3a3      	cbz	r3, 801ca82 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801ca18:	4a25      	ldr	r2, [pc, #148]	@ (801cab0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801ca1a:	880e      	ldrh	r6, [r1, #0]
 801ca1c:	6815      	ldr	r5, [r2, #0]
 801ca1e:	1234      	asrs	r4, r6, #8
 801ca20:	b29a      	uxth	r2, r3
 801ca22:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801ca26:	43db      	mvns	r3, r3
 801ca28:	b2db      	uxtb	r3, r3
 801ca2a:	fb10 f002 	smulbb	r0, r0, r2
 801ca2e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801ca32:	fb04 0403 	mla	r4, r4, r3, r0
 801ca36:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801ca3a:	10f0      	asrs	r0, r6, #3
 801ca3c:	b2ed      	uxtb	r5, r5
 801ca3e:	00f6      	lsls	r6, r6, #3
 801ca40:	fb17 f702 	smulbb	r7, r7, r2
 801ca44:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801ca48:	fb15 f202 	smulbb	r2, r5, r2
 801ca4c:	b2f6      	uxtb	r6, r6
 801ca4e:	b2a4      	uxth	r4, r4
 801ca50:	fb00 7003 	mla	r0, r0, r3, r7
 801ca54:	fb06 2303 	mla	r3, r6, r3, r2
 801ca58:	b29a      	uxth	r2, r3
 801ca5a:	1c63      	adds	r3, r4, #1
 801ca5c:	b280      	uxth	r0, r0
 801ca5e:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801ca62:	1c53      	adds	r3, r2, #1
 801ca64:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ca68:	1c42      	adds	r2, r0, #1
 801ca6a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ca6e:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801ca72:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ca76:	0940      	lsrs	r0, r0, #5
 801ca78:	4323      	orrs	r3, r4
 801ca7a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ca7e:	4303      	orrs	r3, r0
 801ca80:	800b      	strh	r3, [r1, #0]
 801ca82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ca86:	2600      	movs	r6, #0
 801ca88:	e764      	b.n	801c954 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801ca8a:	2400      	movs	r4, #0
 801ca8c:	4626      	mov	r6, r4
 801ca8e:	e778      	b.n	801c982 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801ca90:	2400      	movs	r4, #0
 801ca92:	e776      	b.n	801c982 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801ca94:	463c      	mov	r4, r7
 801ca96:	e774      	b.n	801c982 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801ca98:	2500      	movs	r5, #0
 801ca9a:	e78e      	b.n	801c9ba <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801ca9c:	2300      	movs	r3, #0
 801ca9e:	461d      	mov	r5, r3
 801caa0:	e79f      	b.n	801c9e2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801caa2:	4663      	mov	r3, ip
 801caa4:	4665      	mov	r5, ip
 801caa6:	e79c      	b.n	801c9e2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801caa8:	2300      	movs	r3, #0
 801caaa:	e79a      	b.n	801c9e2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801caac:	463b      	mov	r3, r7
 801caae:	e798      	b.n	801c9e2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801cab0:	20011a04 	.word	0x20011a04

0801cab4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cab4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cab8:	b093      	sub	sp, #76	@ 0x4c
 801caba:	461d      	mov	r5, r3
 801cabc:	920c      	str	r2, [sp, #48]	@ 0x30
 801cabe:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801cac0:	9107      	str	r1, [sp, #28]
 801cac2:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801cac6:	9011      	str	r0, [sp, #68]	@ 0x44
 801cac8:	6850      	ldr	r0, [r2, #4]
 801caca:	6812      	ldr	r2, [r2, #0]
 801cacc:	fb00 1303 	mla	r3, r0, r3, r1
 801cad0:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801cad4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cad6:	689b      	ldr	r3, [r3, #8]
 801cad8:	3301      	adds	r3, #1
 801cada:	f023 0301 	bic.w	r3, r3, #1
 801cade:	9306      	str	r3, [sp, #24]
 801cae0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cae2:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801cae6:	681f      	ldr	r7, [r3, #0]
 801cae8:	9b07      	ldr	r3, [sp, #28]
 801caea:	2b00      	cmp	r3, #0
 801caec:	dc03      	bgt.n	801caf6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801caee:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801caf0:	2b00      	cmp	r3, #0
 801caf2:	f340 8267 	ble.w	801cfc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801caf6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801caf8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cafc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cb00:	1e48      	subs	r0, r1, #1
 801cb02:	f102 3cff 	add.w	ip, r2, #4294967295
 801cb06:	2d00      	cmp	r5, #0
 801cb08:	f340 80b8 	ble.w	801cc7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801cb0c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801cb10:	ea4f 4326 	mov.w	r3, r6, asr #16
 801cb14:	d406      	bmi.n	801cb24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cb16:	4586      	cmp	lr, r0
 801cb18:	da04      	bge.n	801cb24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cb1a:	2b00      	cmp	r3, #0
 801cb1c:	db02      	blt.n	801cb24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cb1e:	4563      	cmp	r3, ip
 801cb20:	f2c0 80ad 	blt.w	801cc7e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 801cb24:	f11e 0e01 	adds.w	lr, lr, #1
 801cb28:	f100 80a0 	bmi.w	801cc6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801cb2c:	4571      	cmp	r1, lr
 801cb2e:	f2c0 809d 	blt.w	801cc6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801cb32:	3301      	adds	r3, #1
 801cb34:	f100 809a 	bmi.w	801cc6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801cb38:	429a      	cmp	r2, r3
 801cb3a:	f2c0 8097 	blt.w	801cc6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801cb3e:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801cb42:	9509      	str	r5, [sp, #36]	@ 0x24
 801cb44:	46c8      	mov	r8, r9
 801cb46:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cb48:	2b00      	cmp	r3, #0
 801cb4a:	f340 80b6 	ble.w	801ccba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801cb4e:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801cb52:	9308      	str	r3, [sp, #32]
 801cb54:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cb56:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801cb5a:	1423      	asrs	r3, r4, #16
 801cb5c:	ea4f 4026 	mov.w	r0, r6, asr #16
 801cb60:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801cb64:	f100 813e 	bmi.w	801cde4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801cb68:	f10c 3bff 	add.w	fp, ip, #4294967295
 801cb6c:	455b      	cmp	r3, fp
 801cb6e:	f280 8139 	bge.w	801cde4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801cb72:	2800      	cmp	r0, #0
 801cb74:	f2c0 8136 	blt.w	801cde4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801cb78:	f10e 3bff 	add.w	fp, lr, #4294967295
 801cb7c:	4558      	cmp	r0, fp
 801cb7e:	f280 8131 	bge.w	801cde4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801cb82:	9a06      	ldr	r2, [sp, #24]
 801cb84:	fb00 3302 	mla	r3, r0, r2, r3
 801cb88:	0858      	lsrs	r0, r3, #1
 801cb8a:	07da      	lsls	r2, r3, #31
 801cb8c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801cb90:	9a08      	ldr	r2, [sp, #32]
 801cb92:	bf54      	ite	pl
 801cb94:	f00c 0c0f 	andpl.w	ip, ip, #15
 801cb98:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801cb9c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801cba0:	fa5f fc8c 	uxtb.w	ip, ip
 801cba4:	2a00      	cmp	r2, #0
 801cba6:	f000 80cb 	beq.w	801cd40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801cbaa:	1c58      	adds	r0, r3, #1
 801cbac:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801cbb0:	07c0      	lsls	r0, r0, #31
 801cbb2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801cbb6:	bf54      	ite	pl
 801cbb8:	f00e 0e0f 	andpl.w	lr, lr, #15
 801cbbc:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801cbc0:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801cbc4:	fa5f fe8e 	uxtb.w	lr, lr
 801cbc8:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 801cbcc:	b1b9      	cbz	r1, 801cbfe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801cbce:	4453      	add	r3, sl
 801cbd0:	0858      	lsrs	r0, r3, #1
 801cbd2:	07da      	lsls	r2, r3, #31
 801cbd4:	5c38      	ldrb	r0, [r7, r0]
 801cbd6:	bf54      	ite	pl
 801cbd8:	f000 000f 	andpl.w	r0, r0, #15
 801cbdc:	1100      	asrmi	r0, r0, #4
 801cbde:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801cbe2:	b2c0      	uxtb	r0, r0
 801cbe4:	900a      	str	r0, [sp, #40]	@ 0x28
 801cbe6:	1c58      	adds	r0, r3, #1
 801cbe8:	0843      	lsrs	r3, r0, #1
 801cbea:	07c2      	lsls	r2, r0, #31
 801cbec:	5cfb      	ldrb	r3, [r7, r3]
 801cbee:	bf54      	ite	pl
 801cbf0:	f003 030f 	andpl.w	r3, r3, #15
 801cbf4:	111b      	asrmi	r3, r3, #4
 801cbf6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801cbfa:	b2db      	uxtb	r3, r3
 801cbfc:	930e      	str	r3, [sp, #56]	@ 0x38
 801cbfe:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801cc02:	b289      	uxth	r1, r1
 801cc04:	fb02 f301 	mul.w	r3, r2, r1
 801cc08:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801cc0c:	0112      	lsls	r2, r2, #4
 801cc0e:	b289      	uxth	r1, r1
 801cc10:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 801cc14:	1a40      	subs	r0, r0, r1
 801cc16:	fa1f fe80 	uxth.w	lr, r0
 801cc1a:	1ad2      	subs	r2, r2, r3
 801cc1c:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801cc1e:	b292      	uxth	r2, r2
 801cc20:	4342      	muls	r2, r0
 801cc22:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801cc26:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801cc28:	fb01 c102 	mla	r1, r1, r2, ip
 801cc2c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801cc2e:	fb03 1302 	mla	r3, r3, r2, r1
 801cc32:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cc36:	2bff      	cmp	r3, #255	@ 0xff
 801cc38:	f040 8093 	bne.w	801cd62 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801cc3c:	4bbe      	ldr	r3, [pc, #760]	@ (801cf38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801cc3e:	681a      	ldr	r2, [r3, #0]
 801cc40:	4bbe      	ldr	r3, [pc, #760]	@ (801cf3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801cc42:	0951      	lsrs	r1, r2, #5
 801cc44:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801cc48:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801cc4c:	430b      	orrs	r3, r1
 801cc4e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cc52:	4313      	orrs	r3, r2
 801cc54:	f8a8 3000 	strh.w	r3, [r8]
 801cc58:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801cc5a:	441c      	add	r4, r3
 801cc5c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cc5e:	441e      	add	r6, r3
 801cc60:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cc62:	3b01      	subs	r3, #1
 801cc64:	f108 0802 	add.w	r8, r8, #2
 801cc68:	9309      	str	r3, [sp, #36]	@ 0x24
 801cc6a:	e76c      	b.n	801cb46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801cc6c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801cc6e:	441c      	add	r4, r3
 801cc70:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cc72:	3d01      	subs	r5, #1
 801cc74:	441e      	add	r6, r3
 801cc76:	f109 0902 	add.w	r9, r9, #2
 801cc7a:	e744      	b.n	801cb06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801cc7c:	d021      	beq.n	801ccc2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801cc7e:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801cc80:	1e6b      	subs	r3, r5, #1
 801cc82:	fb00 4003 	mla	r0, r0, r3, r4
 801cc86:	1400      	asrs	r0, r0, #16
 801cc88:	f53f af59 	bmi.w	801cb3e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801cc8c:	3901      	subs	r1, #1
 801cc8e:	4288      	cmp	r0, r1
 801cc90:	f6bf af55 	bge.w	801cb3e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801cc94:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801cc96:	fb01 6303 	mla	r3, r1, r3, r6
 801cc9a:	141b      	asrs	r3, r3, #16
 801cc9c:	f53f af4f 	bmi.w	801cb3e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801cca0:	3a01      	subs	r2, #1
 801cca2:	4293      	cmp	r3, r2
 801cca4:	f6bf af4b 	bge.w	801cb3e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801cca8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801ccac:	9308      	str	r3, [sp, #32]
 801ccae:	46a8      	mov	r8, r5
 801ccb0:	46ce      	mov	lr, r9
 801ccb2:	f1b8 0f00 	cmp.w	r8, #0
 801ccb6:	f300 80b5 	bgt.w	801ce24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ccba:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801ccbe:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801ccc2:	9b07      	ldr	r3, [sp, #28]
 801ccc4:	2b00      	cmp	r3, #0
 801ccc6:	f340 817d 	ble.w	801cfc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801ccca:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ccce:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ccd2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ccd6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ccd8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ccdc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cce0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cce4:	eef0 6a62 	vmov.f32	s13, s5
 801cce8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ccec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ccf0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ccf4:	ee16 4a90 	vmov	r4, s13
 801ccf8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ccfc:	eef0 6a43 	vmov.f32	s13, s6
 801cd00:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cd04:	ee12 2a90 	vmov	r2, s5
 801cd08:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cd0c:	fb92 f3f3 	sdiv	r3, r2, r3
 801cd10:	ee13 2a10 	vmov	r2, s6
 801cd14:	931f      	str	r3, [sp, #124]	@ 0x7c
 801cd16:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801cd18:	fb92 f3f3 	sdiv	r3, r2, r3
 801cd1c:	9320      	str	r3, [sp, #128]	@ 0x80
 801cd1e:	9b07      	ldr	r3, [sp, #28]
 801cd20:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801cd22:	3b01      	subs	r3, #1
 801cd24:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cd28:	9307      	str	r3, [sp, #28]
 801cd2a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801cd2c:	ee16 6a90 	vmov	r6, s13
 801cd30:	bf14      	ite	ne
 801cd32:	461d      	movne	r5, r3
 801cd34:	4615      	moveq	r5, r2
 801cd36:	eeb0 3a67 	vmov.f32	s6, s15
 801cd3a:	eef0 2a47 	vmov.f32	s5, s14
 801cd3e:	e6d3      	b.n	801cae8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801cd40:	2900      	cmp	r1, #0
 801cd42:	f43f af5c 	beq.w	801cbfe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801cd46:	eb0a 0003 	add.w	r0, sl, r3
 801cd4a:	0843      	lsrs	r3, r0, #1
 801cd4c:	07c0      	lsls	r0, r0, #31
 801cd4e:	5cfb      	ldrb	r3, [r7, r3]
 801cd50:	bf54      	ite	pl
 801cd52:	f003 030f 	andpl.w	r3, r3, #15
 801cd56:	111b      	asrmi	r3, r3, #4
 801cd58:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801cd5c:	b2db      	uxtb	r3, r3
 801cd5e:	930a      	str	r3, [sp, #40]	@ 0x28
 801cd60:	e74d      	b.n	801cbfe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801cd62:	2b00      	cmp	r3, #0
 801cd64:	f43f af78 	beq.w	801cc58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801cd68:	4a73      	ldr	r2, [pc, #460]	@ (801cf38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801cd6a:	f8b8 c000 	ldrh.w	ip, [r8]
 801cd6e:	6810      	ldr	r0, [r2, #0]
 801cd70:	fa1f fe83 	uxth.w	lr, r3
 801cd74:	ea4f 212c 	mov.w	r1, ip, asr #8
 801cd78:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801cd7c:	43db      	mvns	r3, r3
 801cd7e:	b2db      	uxtb	r3, r3
 801cd80:	fb12 f20e 	smulbb	r2, r2, lr
 801cd84:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801cd88:	fb01 2103 	mla	r1, r1, r3, r2
 801cd8c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801cd90:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801cd94:	b2c0      	uxtb	r0, r0
 801cd96:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801cd9a:	fb1b fb0e 	smulbb	fp, fp, lr
 801cd9e:	b289      	uxth	r1, r1
 801cda0:	fb10 fe0e 	smulbb	lr, r0, lr
 801cda4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801cda8:	fa5f fc8c 	uxtb.w	ip, ip
 801cdac:	fb02 b203 	mla	r2, r2, r3, fp
 801cdb0:	1c48      	adds	r0, r1, #1
 801cdb2:	fb0c e303 	mla	r3, ip, r3, lr
 801cdb6:	b292      	uxth	r2, r2
 801cdb8:	b29b      	uxth	r3, r3
 801cdba:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801cdbe:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 801cdc2:	f102 0b01 	add.w	fp, r2, #1
 801cdc6:	1c59      	adds	r1, r3, #1
 801cdc8:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801cdcc:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801cdd0:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801cdd4:	0952      	lsrs	r2, r2, #5
 801cdd6:	4301      	orrs	r1, r0
 801cdd8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801cddc:	4311      	orrs	r1, r2
 801cdde:	f8a8 1000 	strh.w	r1, [r8]
 801cde2:	e739      	b.n	801cc58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801cde4:	f113 0b01 	adds.w	fp, r3, #1
 801cde8:	f53f af36 	bmi.w	801cc58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801cdec:	45dc      	cmp	ip, fp
 801cdee:	f6ff af33 	blt.w	801cc58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801cdf2:	f110 0b01 	adds.w	fp, r0, #1
 801cdf6:	f53f af2f 	bmi.w	801cc58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801cdfa:	45de      	cmp	lr, fp
 801cdfc:	f6ff af2c 	blt.w	801cc58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801ce00:	9a08      	ldr	r2, [sp, #32]
 801ce02:	9302      	str	r3, [sp, #8]
 801ce04:	fa0f f38e 	sxth.w	r3, lr
 801ce08:	9301      	str	r3, [sp, #4]
 801ce0a:	fa0f f38c 	sxth.w	r3, ip
 801ce0e:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801ce12:	9105      	str	r1, [sp, #20]
 801ce14:	9300      	str	r3, [sp, #0]
 801ce16:	463a      	mov	r2, r7
 801ce18:	4653      	mov	r3, sl
 801ce1a:	4641      	mov	r1, r8
 801ce1c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801ce1e:	f7ff fd73 	bl	801c908 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801ce22:	e719      	b.n	801cc58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801ce24:	9906      	ldr	r1, [sp, #24]
 801ce26:	1422      	asrs	r2, r4, #16
 801ce28:	1433      	asrs	r3, r6, #16
 801ce2a:	fb01 2303 	mla	r3, r1, r3, r2
 801ce2e:	085a      	lsrs	r2, r3, #1
 801ce30:	07d9      	lsls	r1, r3, #31
 801ce32:	5cba      	ldrb	r2, [r7, r2]
 801ce34:	bf54      	ite	pl
 801ce36:	f002 020f 	andpl.w	r2, r2, #15
 801ce3a:	1112      	asrmi	r2, r2, #4
 801ce3c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ce40:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801ce44:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801ce48:	b2d2      	uxtb	r2, r2
 801ce4a:	2800      	cmp	r0, #0
 801ce4c:	d062      	beq.n	801cf14 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 801ce4e:	f103 0a01 	add.w	sl, r3, #1
 801ce52:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801ce56:	f01a 0f01 	tst.w	sl, #1
 801ce5a:	5c79      	ldrb	r1, [r7, r1]
 801ce5c:	bf0c      	ite	eq
 801ce5e:	f001 010f 	andeq.w	r1, r1, #15
 801ce62:	1109      	asrne	r1, r1, #4
 801ce64:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801ce68:	b2c9      	uxtb	r1, r1
 801ce6a:	910f      	str	r1, [sp, #60]	@ 0x3c
 801ce6c:	f1bc 0f00 	cmp.w	ip, #0
 801ce70:	d019      	beq.n	801cea6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801ce72:	9908      	ldr	r1, [sp, #32]
 801ce74:	440b      	add	r3, r1
 801ce76:	0859      	lsrs	r1, r3, #1
 801ce78:	f013 0f01 	tst.w	r3, #1
 801ce7c:	5c79      	ldrb	r1, [r7, r1]
 801ce7e:	bf0c      	ite	eq
 801ce80:	f001 010f 	andeq.w	r1, r1, #15
 801ce84:	1109      	asrne	r1, r1, #4
 801ce86:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801ce8a:	b2c9      	uxtb	r1, r1
 801ce8c:	3301      	adds	r3, #1
 801ce8e:	910b      	str	r1, [sp, #44]	@ 0x2c
 801ce90:	0859      	lsrs	r1, r3, #1
 801ce92:	07db      	lsls	r3, r3, #31
 801ce94:	5c79      	ldrb	r1, [r7, r1]
 801ce96:	bf54      	ite	pl
 801ce98:	f001 010f 	andpl.w	r1, r1, #15
 801ce9c:	1109      	asrmi	r1, r1, #4
 801ce9e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801cea2:	b2c9      	uxtb	r1, r1
 801cea4:	9110      	str	r1, [sp, #64]	@ 0x40
 801cea6:	b280      	uxth	r0, r0
 801cea8:	fa1f fc8c 	uxth.w	ip, ip
 801ceac:	fb00 f30c 	mul.w	r3, r0, ip
 801ceb0:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801ceb4:	0100      	lsls	r0, r0, #4
 801ceb6:	fa1f fc8c 	uxth.w	ip, ip
 801ceba:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 801cebe:	eba1 010c 	sub.w	r1, r1, ip
 801cec2:	fa1f fa81 	uxth.w	sl, r1
 801cec6:	1ac0      	subs	r0, r0, r3
 801cec8:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801ceca:	b280      	uxth	r0, r0
 801cecc:	4348      	muls	r0, r1
 801cece:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801ced0:	fb02 020a 	mla	r2, r2, sl, r0
 801ced4:	fb0c 2c01 	mla	ip, ip, r1, r2
 801ced8:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801ceda:	fb03 c302 	mla	r3, r3, r2, ip
 801cede:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cee2:	2bff      	cmp	r3, #255	@ 0xff
 801cee4:	d12c      	bne.n	801cf40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801cee6:	4b14      	ldr	r3, [pc, #80]	@ (801cf38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801cee8:	681a      	ldr	r2, [r3, #0]
 801ceea:	4b14      	ldr	r3, [pc, #80]	@ (801cf3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801ceec:	0951      	lsrs	r1, r2, #5
 801ceee:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801cef2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801cef6:	430b      	orrs	r3, r1
 801cef8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cefc:	4313      	orrs	r3, r2
 801cefe:	f8ae 3000 	strh.w	r3, [lr]
 801cf02:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801cf04:	441c      	add	r4, r3
 801cf06:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cf08:	f10e 0e02 	add.w	lr, lr, #2
 801cf0c:	441e      	add	r6, r3
 801cf0e:	f108 38ff 	add.w	r8, r8, #4294967295
 801cf12:	e6ce      	b.n	801ccb2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801cf14:	f1bc 0f00 	cmp.w	ip, #0
 801cf18:	d0c5      	beq.n	801cea6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801cf1a:	9908      	ldr	r1, [sp, #32]
 801cf1c:	440b      	add	r3, r1
 801cf1e:	0859      	lsrs	r1, r3, #1
 801cf20:	07db      	lsls	r3, r3, #31
 801cf22:	5c79      	ldrb	r1, [r7, r1]
 801cf24:	bf54      	ite	pl
 801cf26:	f001 010f 	andpl.w	r1, r1, #15
 801cf2a:	1109      	asrmi	r1, r1, #4
 801cf2c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801cf30:	b2c9      	uxtb	r1, r1
 801cf32:	910b      	str	r1, [sp, #44]	@ 0x2c
 801cf34:	e7b7      	b.n	801cea6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801cf36:	bf00      	nop
 801cf38:	20011a04 	.word	0x20011a04
 801cf3c:	fffff800 	.word	0xfffff800
 801cf40:	2b00      	cmp	r3, #0
 801cf42:	d0de      	beq.n	801cf02 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801cf44:	4a21      	ldr	r2, [pc, #132]	@ (801cfcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 801cf46:	f8be c000 	ldrh.w	ip, [lr]
 801cf4a:	6810      	ldr	r0, [r2, #0]
 801cf4c:	fa1f fa83 	uxth.w	sl, r3
 801cf50:	ea4f 212c 	mov.w	r1, ip, asr #8
 801cf54:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801cf58:	43db      	mvns	r3, r3
 801cf5a:	b2db      	uxtb	r3, r3
 801cf5c:	fb12 f20a 	smulbb	r2, r2, sl
 801cf60:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801cf64:	fb01 2103 	mla	r1, r1, r3, r2
 801cf68:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801cf6c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801cf70:	b2c0      	uxtb	r0, r0
 801cf72:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801cf76:	fa5f fc8c 	uxtb.w	ip, ip
 801cf7a:	fb10 f00a 	smulbb	r0, r0, sl
 801cf7e:	fb0c 0003 	mla	r0, ip, r3, r0
 801cf82:	b289      	uxth	r1, r1
 801cf84:	fb1b fb0a 	smulbb	fp, fp, sl
 801cf88:	b280      	uxth	r0, r0
 801cf8a:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801cf8e:	fb02 b203 	mla	r2, r2, r3, fp
 801cf92:	1c4b      	adds	r3, r1, #1
 801cf94:	f100 0b01 	add.w	fp, r0, #1
 801cf98:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801cf9c:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801cfa0:	b292      	uxth	r2, r2
 801cfa2:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801cfa6:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801cfaa:	ea4b 0101 	orr.w	r1, fp, r1
 801cfae:	f102 0b01 	add.w	fp, r2, #1
 801cfb2:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801cfb6:	0952      	lsrs	r2, r2, #5
 801cfb8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801cfbc:	4311      	orrs	r1, r2
 801cfbe:	f8ae 1000 	strh.w	r1, [lr]
 801cfc2:	e79e      	b.n	801cf02 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801cfc4:	b013      	add	sp, #76	@ 0x4c
 801cfc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cfca:	bf00      	nop
 801cfcc:	20011a04 	.word	0x20011a04

0801cfd0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 801cfd0:	b570      	push	{r4, r5, r6, lr}
 801cfd2:	1208      	asrs	r0, r1, #8
 801cfd4:	b29e      	uxth	r6, r3
 801cfd6:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 801cfda:	1213      	asrs	r3, r2, #8
 801cfdc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801cfe0:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801cfe4:	fb13 f305 	smulbb	r3, r3, r5
 801cfe8:	fb10 f006 	smulbb	r0, r0, r6
 801cfec:	4418      	add	r0, r3
 801cfee:	10cc      	asrs	r4, r1, #3
 801cff0:	10d3      	asrs	r3, r2, #3
 801cff2:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801cff6:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801cffa:	fb13 f305 	smulbb	r3, r3, r5
 801cffe:	fb14 f406 	smulbb	r4, r4, r6
 801d002:	00c9      	lsls	r1, r1, #3
 801d004:	00d2      	lsls	r2, r2, #3
 801d006:	441c      	add	r4, r3
 801d008:	b2d2      	uxtb	r2, r2
 801d00a:	b2cb      	uxtb	r3, r1
 801d00c:	fb12 f205 	smulbb	r2, r2, r5
 801d010:	b280      	uxth	r0, r0
 801d012:	fb13 f306 	smulbb	r3, r3, r6
 801d016:	4413      	add	r3, r2
 801d018:	1c42      	adds	r2, r0, #1
 801d01a:	b29b      	uxth	r3, r3
 801d01c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d020:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 801d024:	1c58      	adds	r0, r3, #1
 801d026:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801d02a:	b2a4      	uxth	r4, r4
 801d02c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801d030:	4310      	orrs	r0, r2
 801d032:	1c62      	adds	r2, r4, #1
 801d034:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801d038:	0964      	lsrs	r4, r4, #5
 801d03a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801d03e:	4320      	orrs	r0, r4
 801d040:	bd70      	pop	{r4, r5, r6, pc}
	...

0801d044 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801d044:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d048:	b08f      	sub	sp, #60	@ 0x3c
 801d04a:	461c      	mov	r4, r3
 801d04c:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 801d050:	9004      	str	r0, [sp, #16]
 801d052:	460d      	mov	r5, r1
 801d054:	4616      	mov	r6, r2
 801d056:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801d058:	2f00      	cmp	r7, #0
 801d05a:	f000 80f6 	beq.w	801d24a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 801d05e:	6820      	ldr	r0, [r4, #0]
 801d060:	6861      	ldr	r1, [r4, #4]
 801d062:	aa0a      	add	r2, sp, #40	@ 0x28
 801d064:	c203      	stmia	r2!, {r0, r1}
 801d066:	6818      	ldr	r0, [r3, #0]
 801d068:	6859      	ldr	r1, [r3, #4]
 801d06a:	aa0c      	add	r2, sp, #48	@ 0x30
 801d06c:	c203      	stmia	r2!, {r0, r1}
 801d06e:	a80a      	add	r0, sp, #40	@ 0x28
 801d070:	f7ef fdda 	bl	800cc28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d074:	4621      	mov	r1, r4
 801d076:	a80c      	add	r0, sp, #48	@ 0x30
 801d078:	f7ef fdfe 	bl	800cc78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d07c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801d080:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 801d084:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801d088:	f002 0301 	and.w	r3, r2, #1
 801d08c:	9306      	str	r3, [sp, #24]
 801d08e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801d092:	f003 0101 	and.w	r1, r3, #1
 801d096:	9105      	str	r1, [sp, #20]
 801d098:	9805      	ldr	r0, [sp, #20]
 801d09a:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801d09e:	4403      	add	r3, r0
 801d0a0:	fb01 2303 	mla	r3, r1, r3, r2
 801d0a4:	f04f 0802 	mov.w	r8, #2
 801d0a8:	fb93 f3f8 	sdiv	r3, r3, r8
 801d0ac:	441d      	add	r5, r3
 801d0ae:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801d0b2:	441a      	add	r2, r3
 801d0b4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801d0b8:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801d0bc:	4419      	add	r1, r3
 801d0be:	4b64      	ldr	r3, [pc, #400]	@ (801d250 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 801d0c0:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 801d0c4:	6818      	ldr	r0, [r3, #0]
 801d0c6:	6803      	ldr	r3, [r0, #0]
 801d0c8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d0ca:	4798      	blx	r3
 801d0cc:	4a61      	ldr	r2, [pc, #388]	@ (801d254 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 801d0ce:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 801d0d2:	8813      	ldrh	r3, [r2, #0]
 801d0d4:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 801d0d8:	2fff      	cmp	r7, #255	@ 0xff
 801d0da:	fb03 a404 	mla	r4, r3, r4, sl
 801d0de:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801d0e2:	f106 0604 	add.w	r6, r6, #4
 801d0e6:	4611      	mov	r1, r2
 801d0e8:	fb03 fb0b 	mul.w	fp, r3, fp
 801d0ec:	d06b      	beq.n	801d1c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 801d0ee:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 801d0f2:	9303      	str	r3, [sp, #12]
 801d0f4:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 801d0f8:	e9cd 3207 	strd	r3, r2, [sp, #28]
 801d0fc:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 801d100:	9b07      	ldr	r3, [sp, #28]
 801d102:	42a3      	cmp	r3, r4
 801d104:	f240 809c 	bls.w	801d240 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 801d108:	9b06      	ldr	r3, [sp, #24]
 801d10a:	2b00      	cmp	r3, #0
 801d10c:	d039      	beq.n	801d182 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 801d10e:	782b      	ldrb	r3, [r5, #0]
 801d110:	8822      	ldrh	r2, [r4, #0]
 801d112:	9804      	ldr	r0, [sp, #16]
 801d114:	f003 030f 	and.w	r3, r3, #15
 801d118:	f105 0801 	add.w	r8, r5, #1
 801d11c:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801d120:	9b03      	ldr	r3, [sp, #12]
 801d122:	9300      	str	r3, [sp, #0]
 801d124:	463b      	mov	r3, r7
 801d126:	f7ff ff53 	bl	801cfd0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801d12a:	f824 0b02 	strh.w	r0, [r4], #2
 801d12e:	f109 3bff 	add.w	fp, r9, #4294967295
 801d132:	f1bb 0f01 	cmp.w	fp, #1
 801d136:	46a2      	mov	sl, r4
 801d138:	f104 0404 	add.w	r4, r4, #4
 801d13c:	dd24      	ble.n	801d188 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 801d13e:	f898 3000 	ldrb.w	r3, [r8]
 801d142:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 801d146:	9804      	ldr	r0, [sp, #16]
 801d148:	091b      	lsrs	r3, r3, #4
 801d14a:	f1ab 0b02 	sub.w	fp, fp, #2
 801d14e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801d152:	9b03      	ldr	r3, [sp, #12]
 801d154:	9300      	str	r3, [sp, #0]
 801d156:	463b      	mov	r3, r7
 801d158:	f7ff ff3a 	bl	801cfd0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801d15c:	f824 0c04 	strh.w	r0, [r4, #-4]
 801d160:	f818 3b01 	ldrb.w	r3, [r8], #1
 801d164:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 801d168:	9804      	ldr	r0, [sp, #16]
 801d16a:	f003 030f 	and.w	r3, r3, #15
 801d16e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801d172:	9b03      	ldr	r3, [sp, #12]
 801d174:	9300      	str	r3, [sp, #0]
 801d176:	463b      	mov	r3, r7
 801d178:	f7ff ff2a 	bl	801cfd0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801d17c:	f824 0c02 	strh.w	r0, [r4, #-2]
 801d180:	e7d7      	b.n	801d132 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 801d182:	46a8      	mov	r8, r5
 801d184:	46cb      	mov	fp, r9
 801d186:	e7d4      	b.n	801d132 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 801d188:	d10e      	bne.n	801d1a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 801d18a:	f898 3000 	ldrb.w	r3, [r8]
 801d18e:	f8ba 2000 	ldrh.w	r2, [sl]
 801d192:	9804      	ldr	r0, [sp, #16]
 801d194:	091b      	lsrs	r3, r3, #4
 801d196:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801d19a:	9b03      	ldr	r3, [sp, #12]
 801d19c:	9300      	str	r3, [sp, #0]
 801d19e:	463b      	mov	r3, r7
 801d1a0:	f7ff ff16 	bl	801cfd0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801d1a4:	f82a 0b02 	strh.w	r0, [sl], #2
 801d1a8:	9b08      	ldr	r3, [sp, #32]
 801d1aa:	9a05      	ldr	r2, [sp, #20]
 801d1ac:	881c      	ldrh	r4, [r3, #0]
 801d1ae:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801d1b2:	eba4 0409 	sub.w	r4, r4, r9
 801d1b6:	4413      	add	r3, r2
 801d1b8:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 801d1bc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801d1be:	fb93 f3f2 	sdiv	r3, r3, r2
 801d1c2:	441d      	add	r5, r3
 801d1c4:	e79c      	b.n	801d100 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 801d1c6:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 801d1ca:	45a3      	cmp	fp, r4
 801d1cc:	d938      	bls.n	801d240 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 801d1ce:	9b06      	ldr	r3, [sp, #24]
 801d1d0:	b1f3      	cbz	r3, 801d210 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 801d1d2:	782b      	ldrb	r3, [r5, #0]
 801d1d4:	f003 030f 	and.w	r3, r3, #15
 801d1d8:	1c6a      	adds	r2, r5, #1
 801d1da:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801d1de:	8023      	strh	r3, [r4, #0]
 801d1e0:	f109 30ff 	add.w	r0, r9, #4294967295
 801d1e4:	3402      	adds	r4, #2
 801d1e6:	2801      	cmp	r0, #1
 801d1e8:	4623      	mov	r3, r4
 801d1ea:	f104 0404 	add.w	r4, r4, #4
 801d1ee:	dd12      	ble.n	801d216 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 801d1f0:	7813      	ldrb	r3, [r2, #0]
 801d1f2:	091b      	lsrs	r3, r3, #4
 801d1f4:	3802      	subs	r0, #2
 801d1f6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801d1fa:	f824 3c04 	strh.w	r3, [r4, #-4]
 801d1fe:	f812 3b01 	ldrb.w	r3, [r2], #1
 801d202:	f003 030f 	and.w	r3, r3, #15
 801d206:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801d20a:	f824 3c02 	strh.w	r3, [r4, #-2]
 801d20e:	e7ea      	b.n	801d1e6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 801d210:	462a      	mov	r2, r5
 801d212:	4648      	mov	r0, r9
 801d214:	e7e7      	b.n	801d1e6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 801d216:	d106      	bne.n	801d226 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 801d218:	7812      	ldrb	r2, [r2, #0]
 801d21a:	0912      	lsrs	r2, r2, #4
 801d21c:	3302      	adds	r3, #2
 801d21e:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801d222:	f823 2c02 	strh.w	r2, [r3, #-2]
 801d226:	880c      	ldrh	r4, [r1, #0]
 801d228:	9a05      	ldr	r2, [sp, #20]
 801d22a:	eba4 0409 	sub.w	r4, r4, r9
 801d22e:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 801d232:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801d236:	4413      	add	r3, r2
 801d238:	fb93 f3f8 	sdiv	r3, r3, r8
 801d23c:	441d      	add	r5, r3
 801d23e:	e7c4      	b.n	801d1ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801d240:	4b03      	ldr	r3, [pc, #12]	@ (801d250 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 801d242:	6818      	ldr	r0, [r3, #0]
 801d244:	6803      	ldr	r3, [r0, #0]
 801d246:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d248:	4798      	blx	r3
 801d24a:	b00f      	add	sp, #60	@ 0x3c
 801d24c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d250:	200119fc 	.word	0x200119fc
 801d254:	200119f6 	.word	0x200119f6

0801d258 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 801d258:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d25a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801d25e:	2dff      	cmp	r5, #255	@ 0xff
 801d260:	ea4f 2711 	mov.w	r7, r1, lsr #8
 801d264:	d10c      	bne.n	801d280 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 801d266:	2bff      	cmp	r3, #255	@ 0xff
 801d268:	d10a      	bne.n	801d280 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 801d26a:	4b25      	ldr	r3, [pc, #148]	@ (801d300 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 801d26c:	0948      	lsrs	r0, r1, #5
 801d26e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d272:	403b      	ands	r3, r7
 801d274:	4318      	orrs	r0, r3
 801d276:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801d27a:	4308      	orrs	r0, r1
 801d27c:	b280      	uxth	r0, r0
 801d27e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801d280:	fb15 f503 	smulbb	r5, r5, r3
 801d284:	b2ab      	uxth	r3, r5
 801d286:	1c5d      	adds	r5, r3, #1
 801d288:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 801d28c:	1214      	asrs	r4, r2, #8
 801d28e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801d292:	fa1f fc85 	uxth.w	ip, r5
 801d296:	10d6      	asrs	r6, r2, #3
 801d298:	00d0      	lsls	r0, r2, #3
 801d29a:	43ed      	mvns	r5, r5
 801d29c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801d2a0:	f3c1 4207 	ubfx	r2, r1, #16, #8
 801d2a4:	b2eb      	uxtb	r3, r5
 801d2a6:	b2c0      	uxtb	r0, r0
 801d2a8:	fb12 f20c 	smulbb	r2, r2, ip
 801d2ac:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801d2b0:	fb04 2403 	mla	r4, r4, r3, r2
 801d2b4:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 801d2b8:	b2c8      	uxtb	r0, r1
 801d2ba:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801d2be:	b2fd      	uxtb	r5, r7
 801d2c0:	fb10 f00c 	smulbb	r0, r0, ip
 801d2c4:	b2a4      	uxth	r4, r4
 801d2c6:	fb02 0003 	mla	r0, r2, r3, r0
 801d2ca:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801d2ce:	fb15 f50c 	smulbb	r5, r5, ip
 801d2d2:	fb06 5503 	mla	r5, r6, r3, r5
 801d2d6:	b283      	uxth	r3, r0
 801d2d8:	1c60      	adds	r0, r4, #1
 801d2da:	b2ad      	uxth	r5, r5
 801d2dc:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 801d2e0:	1c58      	adds	r0, r3, #1
 801d2e2:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801d2e6:	1c6b      	adds	r3, r5, #1
 801d2e8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d2ec:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801d2f0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801d2f4:	096d      	lsrs	r5, r5, #5
 801d2f6:	4320      	orrs	r0, r4
 801d2f8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d2fc:	4328      	orrs	r0, r5
 801d2fe:	e7be      	b.n	801d27e <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 801d300:	00fff800 	.word	0x00fff800

0801d304 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801d304:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d308:	461c      	mov	r4, r3
 801d30a:	b08d      	sub	sp, #52	@ 0x34
 801d30c:	460d      	mov	r5, r1
 801d30e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801d310:	6861      	ldr	r1, [r4, #4]
 801d312:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 801d316:	4680      	mov	r8, r0
 801d318:	6820      	ldr	r0, [r4, #0]
 801d31a:	4616      	mov	r6, r2
 801d31c:	aa08      	add	r2, sp, #32
 801d31e:	c203      	stmia	r2!, {r0, r1}
 801d320:	6818      	ldr	r0, [r3, #0]
 801d322:	6859      	ldr	r1, [r3, #4]
 801d324:	aa0a      	add	r2, sp, #40	@ 0x28
 801d326:	c203      	stmia	r2!, {r0, r1}
 801d328:	a808      	add	r0, sp, #32
 801d32a:	f7ef fc7d 	bl	800cc28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d32e:	4621      	mov	r1, r4
 801d330:	a80a      	add	r0, sp, #40	@ 0x28
 801d332:	f7ef fca1 	bl	800cc78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d336:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 801d33a:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 801d33e:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 801d342:	f002 0301 	and.w	r3, r2, #1
 801d346:	9303      	str	r3, [sp, #12]
 801d348:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 801d34c:	f003 0101 	and.w	r1, r3, #1
 801d350:	9102      	str	r1, [sp, #8]
 801d352:	9802      	ldr	r0, [sp, #8]
 801d354:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 801d358:	4403      	add	r3, r0
 801d35a:	fb01 2303 	mla	r3, r1, r3, r2
 801d35e:	f04f 0a02 	mov.w	sl, #2
 801d362:	fb93 f3fa 	sdiv	r3, r3, sl
 801d366:	441d      	add	r5, r3
 801d368:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801d36c:	441a      	add	r2, r3
 801d36e:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801d372:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 801d376:	4a3f      	ldr	r2, [pc, #252]	@ (801d474 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 801d378:	9205      	str	r2, [sp, #20]
 801d37a:	4419      	add	r1, r3
 801d37c:	6810      	ldr	r0, [r2, #0]
 801d37e:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 801d382:	6803      	ldr	r3, [r0, #0]
 801d384:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d386:	4798      	blx	r3
 801d388:	4b3b      	ldr	r3, [pc, #236]	@ (801d478 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 801d38a:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 801d38e:	8819      	ldrh	r1, [r3, #0]
 801d390:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 801d394:	fb01 c404 	mla	r4, r1, r4, ip
 801d398:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801d39c:	434f      	muls	r7, r1
 801d39e:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 801d3a2:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 801d3a6:	3604      	adds	r6, #4
 801d3a8:	9204      	str	r2, [sp, #16]
 801d3aa:	9b04      	ldr	r3, [sp, #16]
 801d3ac:	429c      	cmp	r4, r3
 801d3ae:	d258      	bcs.n	801d462 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 801d3b0:	9b03      	ldr	r3, [sp, #12]
 801d3b2:	2b00      	cmp	r3, #0
 801d3b4:	d034      	beq.n	801d420 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 801d3b6:	782b      	ldrb	r3, [r5, #0]
 801d3b8:	f003 030f 	and.w	r3, r3, #15
 801d3bc:	1c6f      	adds	r7, r5, #1
 801d3be:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801d3c2:	0e0b      	lsrs	r3, r1, #24
 801d3c4:	d006      	beq.n	801d3d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 801d3c6:	8822      	ldrh	r2, [r4, #0]
 801d3c8:	9300      	str	r3, [sp, #0]
 801d3ca:	4640      	mov	r0, r8
 801d3cc:	464b      	mov	r3, r9
 801d3ce:	f7ff ff43 	bl	801d258 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801d3d2:	8020      	strh	r0, [r4, #0]
 801d3d4:	3402      	adds	r4, #2
 801d3d6:	f10b 3aff 	add.w	sl, fp, #4294967295
 801d3da:	f1ba 0f01 	cmp.w	sl, #1
 801d3de:	dd22      	ble.n	801d426 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 801d3e0:	783b      	ldrb	r3, [r7, #0]
 801d3e2:	091b      	lsrs	r3, r3, #4
 801d3e4:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801d3e8:	0e0b      	lsrs	r3, r1, #24
 801d3ea:	d006      	beq.n	801d3fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 801d3ec:	8822      	ldrh	r2, [r4, #0]
 801d3ee:	9300      	str	r3, [sp, #0]
 801d3f0:	4640      	mov	r0, r8
 801d3f2:	464b      	mov	r3, r9
 801d3f4:	f7ff ff30 	bl	801d258 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801d3f8:	8020      	strh	r0, [r4, #0]
 801d3fa:	f817 3b01 	ldrb.w	r3, [r7], #1
 801d3fe:	f003 030f 	and.w	r3, r3, #15
 801d402:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801d406:	0e0b      	lsrs	r3, r1, #24
 801d408:	d006      	beq.n	801d418 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 801d40a:	8862      	ldrh	r2, [r4, #2]
 801d40c:	9300      	str	r3, [sp, #0]
 801d40e:	4640      	mov	r0, r8
 801d410:	464b      	mov	r3, r9
 801d412:	f7ff ff21 	bl	801d258 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801d416:	8060      	strh	r0, [r4, #2]
 801d418:	3404      	adds	r4, #4
 801d41a:	f1aa 0a02 	sub.w	sl, sl, #2
 801d41e:	e7dc      	b.n	801d3da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 801d420:	462f      	mov	r7, r5
 801d422:	46da      	mov	sl, fp
 801d424:	e7d9      	b.n	801d3da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 801d426:	d10d      	bne.n	801d444 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 801d428:	783b      	ldrb	r3, [r7, #0]
 801d42a:	091b      	lsrs	r3, r3, #4
 801d42c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801d430:	0e0b      	lsrs	r3, r1, #24
 801d432:	d006      	beq.n	801d442 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 801d434:	8822      	ldrh	r2, [r4, #0]
 801d436:	9300      	str	r3, [sp, #0]
 801d438:	4640      	mov	r0, r8
 801d43a:	464b      	mov	r3, r9
 801d43c:	f7ff ff0c 	bl	801d258 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801d440:	8020      	strh	r0, [r4, #0]
 801d442:	3402      	adds	r4, #2
 801d444:	9b06      	ldr	r3, [sp, #24]
 801d446:	9a02      	ldr	r2, [sp, #8]
 801d448:	881b      	ldrh	r3, [r3, #0]
 801d44a:	eba3 030b 	sub.w	r3, r3, fp
 801d44e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d452:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 801d456:	4413      	add	r3, r2
 801d458:	9a07      	ldr	r2, [sp, #28]
 801d45a:	fb93 f3f2 	sdiv	r3, r3, r2
 801d45e:	441d      	add	r5, r3
 801d460:	e7a3      	b.n	801d3aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 801d462:	9b05      	ldr	r3, [sp, #20]
 801d464:	6818      	ldr	r0, [r3, #0]
 801d466:	6803      	ldr	r3, [r0, #0]
 801d468:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d46a:	4798      	blx	r3
 801d46c:	b00d      	add	sp, #52	@ 0x34
 801d46e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d472:	bf00      	nop
 801d474:	200119fc 	.word	0x200119fc
 801d478:	200119f6 	.word	0x200119f6

0801d47c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 801d47c:	b570      	push	{r4, r5, r6, lr}
 801d47e:	1214      	asrs	r4, r2, #8
 801d480:	788d      	ldrb	r5, [r1, #2]
 801d482:	f89d 6010 	ldrb.w	r6, [sp, #16]
 801d486:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801d48a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801d48e:	fb15 f503 	smulbb	r5, r5, r3
 801d492:	fb04 5506 	mla	r5, r4, r6, r5
 801d496:	10d0      	asrs	r0, r2, #3
 801d498:	784c      	ldrb	r4, [r1, #1]
 801d49a:	7809      	ldrb	r1, [r1, #0]
 801d49c:	00d2      	lsls	r2, r2, #3
 801d49e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801d4a2:	b2d2      	uxtb	r2, r2
 801d4a4:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 801d4a8:	fb14 f403 	smulbb	r4, r4, r3
 801d4ac:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d4b0:	fb11 f303 	smulbb	r3, r1, r3
 801d4b4:	fb00 4406 	mla	r4, r0, r6, r4
 801d4b8:	fb02 3306 	mla	r3, r2, r6, r3
 801d4bc:	b2ad      	uxth	r5, r5
 801d4be:	b29b      	uxth	r3, r3
 801d4c0:	b2a4      	uxth	r4, r4
 801d4c2:	1c68      	adds	r0, r5, #1
 801d4c4:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 801d4c8:	1c62      	adds	r2, r4, #1
 801d4ca:	1c58      	adds	r0, r3, #1
 801d4cc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801d4d0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801d4d4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801d4d8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801d4dc:	0964      	lsrs	r4, r4, #5
 801d4de:	4328      	orrs	r0, r5
 801d4e0:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801d4e4:	4320      	orrs	r0, r4
 801d4e6:	bd70      	pop	{r4, r5, r6, pc}

0801d4e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801d4e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d4ec:	b08f      	sub	sp, #60	@ 0x3c
 801d4ee:	461c      	mov	r4, r3
 801d4f0:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 801d4f4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801d4f6:	4682      	mov	sl, r0
 801d4f8:	460e      	mov	r6, r1
 801d4fa:	4615      	mov	r5, r2
 801d4fc:	2f00      	cmp	r7, #0
 801d4fe:	f000 8142 	beq.w	801d786 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 801d502:	6820      	ldr	r0, [r4, #0]
 801d504:	6861      	ldr	r1, [r4, #4]
 801d506:	aa0a      	add	r2, sp, #40	@ 0x28
 801d508:	c203      	stmia	r2!, {r0, r1}
 801d50a:	6818      	ldr	r0, [r3, #0]
 801d50c:	6859      	ldr	r1, [r3, #4]
 801d50e:	aa0c      	add	r2, sp, #48	@ 0x30
 801d510:	c203      	stmia	r2!, {r0, r1}
 801d512:	a80a      	add	r0, sp, #40	@ 0x28
 801d514:	f7ef fb88 	bl	800cc28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d518:	4621      	mov	r1, r4
 801d51a:	a80c      	add	r0, sp, #48	@ 0x30
 801d51c:	f7ef fbac 	bl	800cc78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d520:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801d524:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 801d528:	f002 0301 	and.w	r3, r2, #1
 801d52c:	9306      	str	r3, [sp, #24]
 801d52e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801d532:	f003 0101 	and.w	r1, r3, #1
 801d536:	9105      	str	r1, [sp, #20]
 801d538:	9805      	ldr	r0, [sp, #20]
 801d53a:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801d53e:	4403      	add	r3, r0
 801d540:	fb01 2303 	mla	r3, r1, r3, r2
 801d544:	f04f 0802 	mov.w	r8, #2
 801d548:	fb93 f3f8 	sdiv	r3, r3, r8
 801d54c:	441e      	add	r6, r3
 801d54e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801d552:	441a      	add	r2, r3
 801d554:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801d558:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801d55c:	4419      	add	r1, r3
 801d55e:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801d562:	9303      	str	r3, [sp, #12]
 801d564:	4b89      	ldr	r3, [pc, #548]	@ (801d78c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 801d566:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 801d56a:	6818      	ldr	r0, [r3, #0]
 801d56c:	6803      	ldr	r3, [r0, #0]
 801d56e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d570:	4798      	blx	r3
 801d572:	4a87      	ldr	r2, [pc, #540]	@ (801d790 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 801d574:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 801d578:	8813      	ldrh	r3, [r2, #0]
 801d57a:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 801d57e:	2fff      	cmp	r7, #255	@ 0xff
 801d580:	fb03 9404 	mla	r4, r3, r4, r9
 801d584:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801d588:	f105 0504 	add.w	r5, r5, #4
 801d58c:	4694      	mov	ip, r2
 801d58e:	fb03 f30b 	mul.w	r3, r3, fp
 801d592:	d071      	beq.n	801d678 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801d594:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801d598:	43f9      	mvns	r1, r7
 801d59a:	e9cd 3207 	strd	r3, r2, [sp, #28]
 801d59e:	b2c9      	uxtb	r1, r1
 801d5a0:	9104      	str	r1, [sp, #16]
 801d5a2:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 801d5a6:	9b07      	ldr	r3, [sp, #28]
 801d5a8:	42a3      	cmp	r3, r4
 801d5aa:	f240 80e7 	bls.w	801d77c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 801d5ae:	9b06      	ldr	r3, [sp, #24]
 801d5b0:	2b00      	cmp	r3, #0
 801d5b2:	d03d      	beq.n	801d630 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 801d5b4:	7831      	ldrb	r1, [r6, #0]
 801d5b6:	9b04      	ldr	r3, [sp, #16]
 801d5b8:	8822      	ldrh	r2, [r4, #0]
 801d5ba:	9300      	str	r3, [sp, #0]
 801d5bc:	f001 010f 	and.w	r1, r1, #15
 801d5c0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801d5c4:	463b      	mov	r3, r7
 801d5c6:	4429      	add	r1, r5
 801d5c8:	4650      	mov	r0, sl
 801d5ca:	f7ff ff57 	bl	801d47c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801d5ce:	9b03      	ldr	r3, [sp, #12]
 801d5d0:	f824 0b02 	strh.w	r0, [r4], #2
 801d5d4:	f106 0801 	add.w	r8, r6, #1
 801d5d8:	f103 3bff 	add.w	fp, r3, #4294967295
 801d5dc:	f1bb 0f01 	cmp.w	fp, #1
 801d5e0:	46a1      	mov	r9, r4
 801d5e2:	f104 0404 	add.w	r4, r4, #4
 801d5e6:	dd27      	ble.n	801d638 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 801d5e8:	f898 1000 	ldrb.w	r1, [r8]
 801d5ec:	9b04      	ldr	r3, [sp, #16]
 801d5ee:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 801d5f2:	9300      	str	r3, [sp, #0]
 801d5f4:	0909      	lsrs	r1, r1, #4
 801d5f6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801d5fa:	463b      	mov	r3, r7
 801d5fc:	4429      	add	r1, r5
 801d5fe:	4650      	mov	r0, sl
 801d600:	f7ff ff3c 	bl	801d47c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801d604:	f824 0c04 	strh.w	r0, [r4, #-4]
 801d608:	f818 1b01 	ldrb.w	r1, [r8], #1
 801d60c:	9b04      	ldr	r3, [sp, #16]
 801d60e:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 801d612:	9300      	str	r3, [sp, #0]
 801d614:	f001 010f 	and.w	r1, r1, #15
 801d618:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801d61c:	463b      	mov	r3, r7
 801d61e:	4429      	add	r1, r5
 801d620:	4650      	mov	r0, sl
 801d622:	f7ff ff2b 	bl	801d47c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801d626:	f1ab 0b02 	sub.w	fp, fp, #2
 801d62a:	f824 0c02 	strh.w	r0, [r4, #-2]
 801d62e:	e7d5      	b.n	801d5dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801d630:	46b0      	mov	r8, r6
 801d632:	f8dd b00c 	ldr.w	fp, [sp, #12]
 801d636:	e7d1      	b.n	801d5dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801d638:	d10f      	bne.n	801d65a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 801d63a:	f898 1000 	ldrb.w	r1, [r8]
 801d63e:	9b04      	ldr	r3, [sp, #16]
 801d640:	f8b9 2000 	ldrh.w	r2, [r9]
 801d644:	9300      	str	r3, [sp, #0]
 801d646:	0909      	lsrs	r1, r1, #4
 801d648:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801d64c:	463b      	mov	r3, r7
 801d64e:	4429      	add	r1, r5
 801d650:	4650      	mov	r0, sl
 801d652:	f7ff ff13 	bl	801d47c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801d656:	f829 0b02 	strh.w	r0, [r9], #2
 801d65a:	9b08      	ldr	r3, [sp, #32]
 801d65c:	9a05      	ldr	r2, [sp, #20]
 801d65e:	881c      	ldrh	r4, [r3, #0]
 801d660:	9b03      	ldr	r3, [sp, #12]
 801d662:	1ae4      	subs	r4, r4, r3
 801d664:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801d668:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801d66c:	4413      	add	r3, r2
 801d66e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801d670:	fb93 f3f2 	sdiv	r3, r3, r2
 801d674:	441e      	add	r6, r3
 801d676:	e796      	b.n	801d5a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 801d678:	4f46      	ldr	r7, [pc, #280]	@ (801d794 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 801d67a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801d67e:	42a3      	cmp	r3, r4
 801d680:	d97c      	bls.n	801d77c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 801d682:	9a06      	ldr	r2, [sp, #24]
 801d684:	2a00      	cmp	r2, #0
 801d686:	d054      	beq.n	801d732 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801d688:	7830      	ldrb	r0, [r6, #0]
 801d68a:	f000 000f 	and.w	r0, r0, #15
 801d68e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d692:	eb05 0e00 	add.w	lr, r5, r0
 801d696:	5c28      	ldrb	r0, [r5, r0]
 801d698:	f89e 2002 	ldrb.w	r2, [lr, #2]
 801d69c:	f89e e001 	ldrb.w	lr, [lr, #1]
 801d6a0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d6a4:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801d6a8:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 801d6ac:	ea42 020e 	orr.w	r2, r2, lr
 801d6b0:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 801d6b4:	f824 2b02 	strh.w	r2, [r4], #2
 801d6b8:	9a03      	ldr	r2, [sp, #12]
 801d6ba:	1c71      	adds	r1, r6, #1
 801d6bc:	f102 3eff 	add.w	lr, r2, #4294967295
 801d6c0:	f1be 0f01 	cmp.w	lr, #1
 801d6c4:	4620      	mov	r0, r4
 801d6c6:	f104 0404 	add.w	r4, r4, #4
 801d6ca:	dd36      	ble.n	801d73a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 801d6cc:	7808      	ldrb	r0, [r1, #0]
 801d6ce:	0900      	lsrs	r0, r0, #4
 801d6d0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d6d4:	eb05 0a00 	add.w	sl, r5, r0
 801d6d8:	f1ae 0e02 	sub.w	lr, lr, #2
 801d6dc:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801d6e0:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801d6e4:	00d2      	lsls	r2, r2, #3
 801d6e6:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 801d6ea:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d6ee:	ea49 0202 	orr.w	r2, r9, r2
 801d6f2:	f815 9000 	ldrb.w	r9, [r5, r0]
 801d6f6:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801d6fa:	f824 2c04 	strh.w	r2, [r4, #-4]
 801d6fe:	f811 0b01 	ldrb.w	r0, [r1], #1
 801d702:	f000 000f 	and.w	r0, r0, #15
 801d706:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d70a:	eb05 0a00 	add.w	sl, r5, r0
 801d70e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801d712:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801d716:	00d2      	lsls	r2, r2, #3
 801d718:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 801d71c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d720:	ea49 0202 	orr.w	r2, r9, r2
 801d724:	f815 9000 	ldrb.w	r9, [r5, r0]
 801d728:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801d72c:	f824 2c02 	strh.w	r2, [r4, #-2]
 801d730:	e7c6      	b.n	801d6c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 801d732:	4631      	mov	r1, r6
 801d734:	f8dd e00c 	ldr.w	lr, [sp, #12]
 801d738:	e7c2      	b.n	801d6c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 801d73a:	d111      	bne.n	801d760 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 801d73c:	7809      	ldrb	r1, [r1, #0]
 801d73e:	0909      	lsrs	r1, r1, #4
 801d740:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801d744:	186c      	adds	r4, r5, r1
 801d746:	5c69      	ldrb	r1, [r5, r1]
 801d748:	78a2      	ldrb	r2, [r4, #2]
 801d74a:	7864      	ldrb	r4, [r4, #1]
 801d74c:	00e4      	lsls	r4, r4, #3
 801d74e:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 801d752:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801d756:	4322      	orrs	r2, r4
 801d758:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 801d75c:	f820 2b02 	strh.w	r2, [r0], #2
 801d760:	9a03      	ldr	r2, [sp, #12]
 801d762:	f8bc 4000 	ldrh.w	r4, [ip]
 801d766:	9905      	ldr	r1, [sp, #20]
 801d768:	1aa4      	subs	r4, r4, r2
 801d76a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801d76e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801d772:	440a      	add	r2, r1
 801d774:	fb92 f2f8 	sdiv	r2, r2, r8
 801d778:	4416      	add	r6, r2
 801d77a:	e780      	b.n	801d67e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 801d77c:	4b03      	ldr	r3, [pc, #12]	@ (801d78c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 801d77e:	6818      	ldr	r0, [r3, #0]
 801d780:	6803      	ldr	r3, [r0, #0]
 801d782:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d784:	4798      	blx	r3
 801d786:	b00f      	add	sp, #60	@ 0x3c
 801d788:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d78c:	200119fc 	.word	0x200119fc
 801d790:	200119f6 	.word	0x200119f6
 801d794:	fffff800 	.word	0xfffff800

0801d798 <CRC_Lock>:
 801d798:	b530      	push	{r4, r5, lr}
 801d79a:	4a2d      	ldr	r2, [pc, #180]	@ (801d850 <CRC_Lock+0xb8>)
 801d79c:	6813      	ldr	r3, [r2, #0]
 801d79e:	f023 0301 	bic.w	r3, r3, #1
 801d7a2:	6013      	str	r3, [r2, #0]
 801d7a4:	4b2b      	ldr	r3, [pc, #172]	@ (801d854 <CRC_Lock+0xbc>)
 801d7a6:	681c      	ldr	r4, [r3, #0]
 801d7a8:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 801d7ac:	4014      	ands	r4, r2
 801d7ae:	f24c 2540 	movw	r5, #49728	@ 0xc240
 801d7b2:	42ac      	cmp	r4, r5
 801d7b4:	d005      	beq.n	801d7c2 <CRC_Lock+0x2a>
 801d7b6:	681c      	ldr	r4, [r3, #0]
 801d7b8:	f24c 2570 	movw	r5, #49776	@ 0xc270
 801d7bc:	4014      	ands	r4, r2
 801d7be:	42ac      	cmp	r4, r5
 801d7c0:	d125      	bne.n	801d80e <CRC_Lock+0x76>
 801d7c2:	4b25      	ldr	r3, [pc, #148]	@ (801d858 <CRC_Lock+0xc0>)
 801d7c4:	681b      	ldr	r3, [r3, #0]
 801d7c6:	2b00      	cmp	r3, #0
 801d7c8:	d139      	bne.n	801d83e <CRC_Lock+0xa6>
 801d7ca:	4b24      	ldr	r3, [pc, #144]	@ (801d85c <CRC_Lock+0xc4>)
 801d7cc:	681a      	ldr	r2, [r3, #0]
 801d7ce:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801d7d2:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 801d7d6:	d00d      	beq.n	801d7f4 <CRC_Lock+0x5c>
 801d7d8:	681a      	ldr	r2, [r3, #0]
 801d7da:	f240 4483 	movw	r4, #1155	@ 0x483
 801d7de:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801d7e2:	42a2      	cmp	r2, r4
 801d7e4:	d006      	beq.n	801d7f4 <CRC_Lock+0x5c>
 801d7e6:	681b      	ldr	r3, [r3, #0]
 801d7e8:	f240 4285 	movw	r2, #1157	@ 0x485
 801d7ec:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801d7f0:	4293      	cmp	r3, r2
 801d7f2:	d124      	bne.n	801d83e <CRC_Lock+0xa6>
 801d7f4:	4b1a      	ldr	r3, [pc, #104]	@ (801d860 <CRC_Lock+0xc8>)
 801d7f6:	2201      	movs	r2, #1
 801d7f8:	601a      	str	r2, [r3, #0]
 801d7fa:	681a      	ldr	r2, [r3, #0]
 801d7fc:	2a00      	cmp	r2, #0
 801d7fe:	d1fc      	bne.n	801d7fa <CRC_Lock+0x62>
 801d800:	4b18      	ldr	r3, [pc, #96]	@ (801d864 <CRC_Lock+0xcc>)
 801d802:	6018      	str	r0, [r3, #0]
 801d804:	6818      	ldr	r0, [r3, #0]
 801d806:	1a43      	subs	r3, r0, r1
 801d808:	4258      	negs	r0, r3
 801d80a:	4158      	adcs	r0, r3
 801d80c:	e00e      	b.n	801d82c <CRC_Lock+0x94>
 801d80e:	681b      	ldr	r3, [r3, #0]
 801d810:	4013      	ands	r3, r2
 801d812:	f24d 2220 	movw	r2, #53792	@ 0xd220
 801d816:	4293      	cmp	r3, r2
 801d818:	d111      	bne.n	801d83e <CRC_Lock+0xa6>
 801d81a:	4b13      	ldr	r3, [pc, #76]	@ (801d868 <CRC_Lock+0xd0>)
 801d81c:	681b      	ldr	r3, [r3, #0]
 801d81e:	f240 4286 	movw	r2, #1158	@ 0x486
 801d822:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801d826:	4293      	cmp	r3, r2
 801d828:	d001      	beq.n	801d82e <CRC_Lock+0x96>
 801d82a:	2000      	movs	r0, #0
 801d82c:	bd30      	pop	{r4, r5, pc}
 801d82e:	4b0f      	ldr	r3, [pc, #60]	@ (801d86c <CRC_Lock+0xd4>)
 801d830:	2201      	movs	r2, #1
 801d832:	601a      	str	r2, [r3, #0]
 801d834:	681a      	ldr	r2, [r3, #0]
 801d836:	2a00      	cmp	r2, #0
 801d838:	d1fc      	bne.n	801d834 <CRC_Lock+0x9c>
 801d83a:	4b0d      	ldr	r3, [pc, #52]	@ (801d870 <CRC_Lock+0xd8>)
 801d83c:	e7e1      	b.n	801d802 <CRC_Lock+0x6a>
 801d83e:	4b0d      	ldr	r3, [pc, #52]	@ (801d874 <CRC_Lock+0xdc>)
 801d840:	2201      	movs	r2, #1
 801d842:	601a      	str	r2, [r3, #0]
 801d844:	681a      	ldr	r2, [r3, #0]
 801d846:	2a00      	cmp	r2, #0
 801d848:	d1fc      	bne.n	801d844 <CRC_Lock+0xac>
 801d84a:	4b0b      	ldr	r3, [pc, #44]	@ (801d878 <CRC_Lock+0xe0>)
 801d84c:	e7d9      	b.n	801d802 <CRC_Lock+0x6a>
 801d84e:	bf00      	nop
 801d850:	e0002000 	.word	0xe0002000
 801d854:	e000ed00 	.word	0xe000ed00
 801d858:	e0042000 	.word	0xe0042000
 801d85c:	5c001000 	.word	0x5c001000
 801d860:	58024c08 	.word	0x58024c08
 801d864:	58024c00 	.word	0x58024c00
 801d868:	46008ff0 	.word	0x46008ff0
 801d86c:	46024c08 	.word	0x46024c08
 801d870:	46024c00 	.word	0x46024c00
 801d874:	40023008 	.word	0x40023008
 801d878:	40023000 	.word	0x40023000

0801d87c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801d87c:	6101      	str	r1, [r0, #16]
 801d87e:	4770      	bx	lr

0801d880 <_ZN8touchgfx8Gestures4tickEv>:
 801d880:	7b83      	ldrb	r3, [r0, #14]
 801d882:	b14b      	cbz	r3, 801d898 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801d884:	8903      	ldrh	r3, [r0, #8]
 801d886:	3301      	adds	r3, #1
 801d888:	b29b      	uxth	r3, r3
 801d88a:	2b07      	cmp	r3, #7
 801d88c:	8103      	strh	r3, [r0, #8]
 801d88e:	bf81      	itttt	hi
 801d890:	2300      	movhi	r3, #0
 801d892:	8143      	strhhi	r3, [r0, #10]
 801d894:	8183      	strhhi	r3, [r0, #12]
 801d896:	7383      	strbhi	r3, [r0, #14]
 801d898:	4770      	bx	lr
	...

0801d89c <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801d89c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801d8a0:	4698      	mov	r8, r3
 801d8a2:	8883      	ldrh	r3, [r0, #4]
 801d8a4:	f8ad 3006 	strh.w	r3, [sp, #6]
 801d8a8:	eba8 0303 	sub.w	r3, r8, r3
 801d8ac:	b21b      	sxth	r3, r3
 801d8ae:	4604      	mov	r4, r0
 801d8b0:	2b00      	cmp	r3, #0
 801d8b2:	4617      	mov	r7, r2
 801d8b4:	4a18      	ldr	r2, [pc, #96]	@ (801d918 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801d8b6:	9200      	str	r2, [sp, #0]
 801d8b8:	bfb8      	it	lt
 801d8ba:	425b      	neglt	r3, r3
 801d8bc:	8aa2      	ldrh	r2, [r4, #20]
 801d8be:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 801d8c2:	f8ad 800a 	strh.w	r8, [sp, #10]
 801d8c6:	b21b      	sxth	r3, r3
 801d8c8:	460e      	mov	r6, r1
 801d8ca:	4293      	cmp	r3, r2
 801d8cc:	88c1      	ldrh	r1, [r0, #6]
 801d8ce:	f8ad 1008 	strh.w	r1, [sp, #8]
 801d8d2:	f04f 0000 	mov.w	r0, #0
 801d8d6:	f88d 0004 	strb.w	r0, [sp, #4]
 801d8da:	f8ad 500c 	strh.w	r5, [sp, #12]
 801d8de:	dc07      	bgt.n	801d8f0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 801d8e0:	1a69      	subs	r1, r5, r1
 801d8e2:	b209      	sxth	r1, r1
 801d8e4:	2900      	cmp	r1, #0
 801d8e6:	bfb8      	it	lt
 801d8e8:	4249      	neglt	r1, r1
 801d8ea:	b209      	sxth	r1, r1
 801d8ec:	428a      	cmp	r2, r1
 801d8ee:	da10      	bge.n	801d912 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 801d8f0:	6920      	ldr	r0, [r4, #16]
 801d8f2:	6803      	ldr	r3, [r0, #0]
 801d8f4:	4669      	mov	r1, sp
 801d8f6:	685b      	ldr	r3, [r3, #4]
 801d8f8:	4798      	blx	r3
 801d8fa:	eba8 0606 	sub.w	r6, r8, r6
 801d8fe:	2300      	movs	r3, #0
 801d900:	1bef      	subs	r7, r5, r7
 801d902:	2001      	movs	r0, #1
 801d904:	8123      	strh	r3, [r4, #8]
 801d906:	8166      	strh	r6, [r4, #10]
 801d908:	81a7      	strh	r7, [r4, #12]
 801d90a:	f8a4 8004 	strh.w	r8, [r4, #4]
 801d90e:	80e5      	strh	r5, [r4, #6]
 801d910:	73a0      	strb	r0, [r4, #14]
 801d912:	b004      	add	sp, #16
 801d914:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d918:	080206d8 	.word	0x080206d8

0801d91c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801d91c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d91e:	461e      	mov	r6, r3
 801d920:	1e4b      	subs	r3, r1, #1
 801d922:	2b01      	cmp	r3, #1
 801d924:	b085      	sub	sp, #20
 801d926:	4604      	mov	r4, r0
 801d928:	460d      	mov	r5, r1
 801d92a:	4617      	mov	r7, r2
 801d92c:	d84b      	bhi.n	801d9c6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801d92e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801d932:	1cd3      	adds	r3, r2, #3
 801d934:	b29b      	uxth	r3, r3
 801d936:	2b06      	cmp	r3, #6
 801d938:	d916      	bls.n	801d968 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801d93a:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 801d9dc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801d93e:	f8cd c004 	str.w	ip, [sp, #4]
 801d942:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d946:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801d94a:	6900      	ldr	r0, [r0, #16]
 801d94c:	f8ad 100c 	strh.w	r1, [sp, #12]
 801d950:	f04f 0c00 	mov.w	ip, #0
 801d954:	f88d c008 	strb.w	ip, [sp, #8]
 801d958:	f8ad 200a 	strh.w	r2, [sp, #10]
 801d95c:	f8ad 300e 	strh.w	r3, [sp, #14]
 801d960:	6803      	ldr	r3, [r0, #0]
 801d962:	a901      	add	r1, sp, #4
 801d964:	689b      	ldr	r3, [r3, #8]
 801d966:	4798      	blx	r3
 801d968:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801d96c:	1cd3      	adds	r3, r2, #3
 801d96e:	b29b      	uxth	r3, r3
 801d970:	2b06      	cmp	r3, #6
 801d972:	d916      	bls.n	801d9a2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801d974:	f8df c064 	ldr.w	ip, [pc, #100]	@ 801d9dc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801d978:	f8cd c004 	str.w	ip, [sp, #4]
 801d97c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d980:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801d984:	6920      	ldr	r0, [r4, #16]
 801d986:	f8ad 100c 	strh.w	r1, [sp, #12]
 801d98a:	f04f 0c01 	mov.w	ip, #1
 801d98e:	f88d c008 	strb.w	ip, [sp, #8]
 801d992:	f8ad 200a 	strh.w	r2, [sp, #10]
 801d996:	f8ad 300e 	strh.w	r3, [sp, #14]
 801d99a:	6803      	ldr	r3, [r0, #0]
 801d99c:	a901      	add	r1, sp, #4
 801d99e:	689b      	ldr	r3, [r3, #8]
 801d9a0:	4798      	blx	r3
 801d9a2:	4b0d      	ldr	r3, [pc, #52]	@ (801d9d8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801d9a4:	9301      	str	r3, [sp, #4]
 801d9a6:	6920      	ldr	r0, [r4, #16]
 801d9a8:	f88d 5008 	strb.w	r5, [sp, #8]
 801d9ac:	2300      	movs	r3, #0
 801d9ae:	f8ad 700a 	strh.w	r7, [sp, #10]
 801d9b2:	f8ad 600c 	strh.w	r6, [sp, #12]
 801d9b6:	f8ad 300e 	strh.w	r3, [sp, #14]
 801d9ba:	6803      	ldr	r3, [r0, #0]
 801d9bc:	a901      	add	r1, sp, #4
 801d9be:	681b      	ldr	r3, [r3, #0]
 801d9c0:	4798      	blx	r3
 801d9c2:	b005      	add	sp, #20
 801d9c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801d9c6:	2900      	cmp	r1, #0
 801d9c8:	d1eb      	bne.n	801d9a2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801d9ca:	80a2      	strh	r2, [r4, #4]
 801d9cc:	80c6      	strh	r6, [r0, #6]
 801d9ce:	60a1      	str	r1, [r4, #8]
 801d9d0:	81a1      	strh	r1, [r4, #12]
 801d9d2:	73a1      	strb	r1, [r4, #14]
 801d9d4:	e7e5      	b.n	801d9a2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801d9d6:	bf00      	nop
 801d9d8:	080206c4 	.word	0x080206c4
 801d9dc:	080206ec 	.word	0x080206ec

0801d9e0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 801d9e0:	b570      	push	{r4, r5, r6, lr}
 801d9e2:	790b      	ldrb	r3, [r1, #4]
 801d9e4:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
 801d9e8:	2b00      	cmp	r3, #0
 801d9ea:	bf0c      	ite	eq
 801d9ec:	2301      	moveq	r3, #1
 801d9ee:	2300      	movne	r3, #0
 801d9f0:	4604      	mov	r4, r0
 801d9f2:	460e      	mov	r6, r1
 801d9f4:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 801d9f8:	d109      	bne.n	801da0e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 801d9fa:	b14d      	cbz	r5, 801da10 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 801d9fc:	7933      	ldrb	r3, [r6, #4]
 801d9fe:	2b01      	cmp	r3, #1
 801da00:	d10c      	bne.n	801da1c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801da02:	6823      	ldr	r3, [r4, #0]
 801da04:	4620      	mov	r0, r4
 801da06:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 801da08:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801da0c:	4718      	bx	r3
 801da0e:	b12d      	cbz	r5, 801da1c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801da10:	6823      	ldr	r3, [r4, #0]
 801da12:	4620      	mov	r0, r4
 801da14:	695b      	ldr	r3, [r3, #20]
 801da16:	4798      	blx	r3
 801da18:	2d00      	cmp	r5, #0
 801da1a:	d1ef      	bne.n	801d9fc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 801da1c:	bd70      	pop	{r4, r5, r6, pc}

0801da1e <__aeabi_atexit>:
 801da1e:	460b      	mov	r3, r1
 801da20:	4601      	mov	r1, r0
 801da22:	4618      	mov	r0, r3
 801da24:	f000 b910 	b.w	801dc48 <__cxa_atexit>

0801da28 <_ZdlPvj>:
 801da28:	f000 b812 	b.w	801da50 <_ZdlPv>

0801da2c <__cxa_guard_acquire>:
 801da2c:	6802      	ldr	r2, [r0, #0]
 801da2e:	07d2      	lsls	r2, r2, #31
 801da30:	4603      	mov	r3, r0
 801da32:	d405      	bmi.n	801da40 <__cxa_guard_acquire+0x14>
 801da34:	7842      	ldrb	r2, [r0, #1]
 801da36:	b102      	cbz	r2, 801da3a <__cxa_guard_acquire+0xe>
 801da38:	deff      	udf	#255	@ 0xff
 801da3a:	2001      	movs	r0, #1
 801da3c:	7058      	strb	r0, [r3, #1]
 801da3e:	4770      	bx	lr
 801da40:	2000      	movs	r0, #0
 801da42:	4770      	bx	lr

0801da44 <__cxa_guard_release>:
 801da44:	2301      	movs	r3, #1
 801da46:	6003      	str	r3, [r0, #0]
 801da48:	4770      	bx	lr

0801da4a <__cxa_pure_virtual>:
 801da4a:	b508      	push	{r3, lr}
 801da4c:	f000 f80e 	bl	801da6c <_ZSt9terminatev>

0801da50 <_ZdlPv>:
 801da50:	f000 b844 	b.w	801dadc <free>

0801da54 <_ZN10__cxxabiv111__terminateEPFvvE>:
 801da54:	b508      	push	{r3, lr}
 801da56:	4780      	blx	r0
 801da58:	f000 f80d 	bl	801da76 <abort>

0801da5c <_ZSt13get_terminatev>:
 801da5c:	4b02      	ldr	r3, [pc, #8]	@ (801da68 <_ZSt13get_terminatev+0xc>)
 801da5e:	6818      	ldr	r0, [r3, #0]
 801da60:	f3bf 8f5b 	dmb	ish
 801da64:	4770      	bx	lr
 801da66:	bf00      	nop
 801da68:	20000100 	.word	0x20000100

0801da6c <_ZSt9terminatev>:
 801da6c:	b508      	push	{r3, lr}
 801da6e:	f7ff fff5 	bl	801da5c <_ZSt13get_terminatev>
 801da72:	f7ff ffef 	bl	801da54 <_ZN10__cxxabiv111__terminateEPFvvE>

0801da76 <abort>:
 801da76:	b508      	push	{r3, lr}
 801da78:	2006      	movs	r0, #6
 801da7a:	f000 fa3b 	bl	801def4 <raise>
 801da7e:	2001      	movs	r0, #1
 801da80:	f7e4 f9a6 	bl	8001dd0 <_exit>

0801da84 <__assert_func>:
 801da84:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801da86:	4614      	mov	r4, r2
 801da88:	461a      	mov	r2, r3
 801da8a:	4b09      	ldr	r3, [pc, #36]	@ (801dab0 <__assert_func+0x2c>)
 801da8c:	681b      	ldr	r3, [r3, #0]
 801da8e:	4605      	mov	r5, r0
 801da90:	68d8      	ldr	r0, [r3, #12]
 801da92:	b954      	cbnz	r4, 801daaa <__assert_func+0x26>
 801da94:	4b07      	ldr	r3, [pc, #28]	@ (801dab4 <__assert_func+0x30>)
 801da96:	461c      	mov	r4, r3
 801da98:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801da9c:	9100      	str	r1, [sp, #0]
 801da9e:	462b      	mov	r3, r5
 801daa0:	4905      	ldr	r1, [pc, #20]	@ (801dab8 <__assert_func+0x34>)
 801daa2:	f000 f983 	bl	801ddac <fiprintf>
 801daa6:	f7ff ffe6 	bl	801da76 <abort>
 801daaa:	4b04      	ldr	r3, [pc, #16]	@ (801dabc <__assert_func+0x38>)
 801daac:	e7f4      	b.n	801da98 <__assert_func+0x14>
 801daae:	bf00      	nop
 801dab0:	20000110 	.word	0x20000110
 801dab4:	08020a43 	.word	0x08020a43
 801dab8:	08020a15 	.word	0x08020a15
 801dabc:	08020a08 	.word	0x08020a08

0801dac0 <atexit>:
 801dac0:	2300      	movs	r3, #0
 801dac2:	4601      	mov	r1, r0
 801dac4:	461a      	mov	r2, r3
 801dac6:	4618      	mov	r0, r3
 801dac8:	f000 bb18 	b.w	801e0fc <__register_exitproc>

0801dacc <malloc>:
 801dacc:	4b02      	ldr	r3, [pc, #8]	@ (801dad8 <malloc+0xc>)
 801dace:	4601      	mov	r1, r0
 801dad0:	6818      	ldr	r0, [r3, #0]
 801dad2:	f000 b82d 	b.w	801db30 <_malloc_r>
 801dad6:	bf00      	nop
 801dad8:	20000110 	.word	0x20000110

0801dadc <free>:
 801dadc:	4b02      	ldr	r3, [pc, #8]	@ (801dae8 <free+0xc>)
 801dade:	4601      	mov	r1, r0
 801dae0:	6818      	ldr	r0, [r3, #0]
 801dae2:	f000 bb67 	b.w	801e1b4 <_free_r>
 801dae6:	bf00      	nop
 801dae8:	20000110 	.word	0x20000110

0801daec <sbrk_aligned>:
 801daec:	b570      	push	{r4, r5, r6, lr}
 801daee:	4e0f      	ldr	r6, [pc, #60]	@ (801db2c <sbrk_aligned+0x40>)
 801daf0:	460c      	mov	r4, r1
 801daf2:	6831      	ldr	r1, [r6, #0]
 801daf4:	4605      	mov	r5, r0
 801daf6:	b911      	cbnz	r1, 801dafe <sbrk_aligned+0x12>
 801daf8:	f000 faa2 	bl	801e040 <_sbrk_r>
 801dafc:	6030      	str	r0, [r6, #0]
 801dafe:	4621      	mov	r1, r4
 801db00:	4628      	mov	r0, r5
 801db02:	f000 fa9d 	bl	801e040 <_sbrk_r>
 801db06:	1c43      	adds	r3, r0, #1
 801db08:	d103      	bne.n	801db12 <sbrk_aligned+0x26>
 801db0a:	f04f 34ff 	mov.w	r4, #4294967295
 801db0e:	4620      	mov	r0, r4
 801db10:	bd70      	pop	{r4, r5, r6, pc}
 801db12:	1cc4      	adds	r4, r0, #3
 801db14:	f024 0403 	bic.w	r4, r4, #3
 801db18:	42a0      	cmp	r0, r4
 801db1a:	d0f8      	beq.n	801db0e <sbrk_aligned+0x22>
 801db1c:	1a21      	subs	r1, r4, r0
 801db1e:	4628      	mov	r0, r5
 801db20:	f000 fa8e 	bl	801e040 <_sbrk_r>
 801db24:	3001      	adds	r0, #1
 801db26:	d1f2      	bne.n	801db0e <sbrk_aligned+0x22>
 801db28:	e7ef      	b.n	801db0a <sbrk_aligned+0x1e>
 801db2a:	bf00      	nop
 801db2c:	20012348 	.word	0x20012348

0801db30 <_malloc_r>:
 801db30:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801db34:	1ccd      	adds	r5, r1, #3
 801db36:	f025 0503 	bic.w	r5, r5, #3
 801db3a:	3508      	adds	r5, #8
 801db3c:	2d0c      	cmp	r5, #12
 801db3e:	bf38      	it	cc
 801db40:	250c      	movcc	r5, #12
 801db42:	2d00      	cmp	r5, #0
 801db44:	4606      	mov	r6, r0
 801db46:	db01      	blt.n	801db4c <_malloc_r+0x1c>
 801db48:	42a9      	cmp	r1, r5
 801db4a:	d904      	bls.n	801db56 <_malloc_r+0x26>
 801db4c:	230c      	movs	r3, #12
 801db4e:	6033      	str	r3, [r6, #0]
 801db50:	2000      	movs	r0, #0
 801db52:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801db56:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 801dc2c <_malloc_r+0xfc>
 801db5a:	f000 f869 	bl	801dc30 <__malloc_lock>
 801db5e:	f8d8 3000 	ldr.w	r3, [r8]
 801db62:	461c      	mov	r4, r3
 801db64:	bb44      	cbnz	r4, 801dbb8 <_malloc_r+0x88>
 801db66:	4629      	mov	r1, r5
 801db68:	4630      	mov	r0, r6
 801db6a:	f7ff ffbf 	bl	801daec <sbrk_aligned>
 801db6e:	1c43      	adds	r3, r0, #1
 801db70:	4604      	mov	r4, r0
 801db72:	d158      	bne.n	801dc26 <_malloc_r+0xf6>
 801db74:	f8d8 4000 	ldr.w	r4, [r8]
 801db78:	4627      	mov	r7, r4
 801db7a:	2f00      	cmp	r7, #0
 801db7c:	d143      	bne.n	801dc06 <_malloc_r+0xd6>
 801db7e:	2c00      	cmp	r4, #0
 801db80:	d04b      	beq.n	801dc1a <_malloc_r+0xea>
 801db82:	6823      	ldr	r3, [r4, #0]
 801db84:	4639      	mov	r1, r7
 801db86:	4630      	mov	r0, r6
 801db88:	eb04 0903 	add.w	r9, r4, r3
 801db8c:	f000 fa58 	bl	801e040 <_sbrk_r>
 801db90:	4581      	cmp	r9, r0
 801db92:	d142      	bne.n	801dc1a <_malloc_r+0xea>
 801db94:	6821      	ldr	r1, [r4, #0]
 801db96:	1a6d      	subs	r5, r5, r1
 801db98:	4629      	mov	r1, r5
 801db9a:	4630      	mov	r0, r6
 801db9c:	f7ff ffa6 	bl	801daec <sbrk_aligned>
 801dba0:	3001      	adds	r0, #1
 801dba2:	d03a      	beq.n	801dc1a <_malloc_r+0xea>
 801dba4:	6823      	ldr	r3, [r4, #0]
 801dba6:	442b      	add	r3, r5
 801dba8:	6023      	str	r3, [r4, #0]
 801dbaa:	f8d8 3000 	ldr.w	r3, [r8]
 801dbae:	685a      	ldr	r2, [r3, #4]
 801dbb0:	bb62      	cbnz	r2, 801dc0c <_malloc_r+0xdc>
 801dbb2:	f8c8 7000 	str.w	r7, [r8]
 801dbb6:	e00f      	b.n	801dbd8 <_malloc_r+0xa8>
 801dbb8:	6822      	ldr	r2, [r4, #0]
 801dbba:	1b52      	subs	r2, r2, r5
 801dbbc:	d420      	bmi.n	801dc00 <_malloc_r+0xd0>
 801dbbe:	2a0b      	cmp	r2, #11
 801dbc0:	d917      	bls.n	801dbf2 <_malloc_r+0xc2>
 801dbc2:	1961      	adds	r1, r4, r5
 801dbc4:	42a3      	cmp	r3, r4
 801dbc6:	6025      	str	r5, [r4, #0]
 801dbc8:	bf18      	it	ne
 801dbca:	6059      	strne	r1, [r3, #4]
 801dbcc:	6863      	ldr	r3, [r4, #4]
 801dbce:	bf08      	it	eq
 801dbd0:	f8c8 1000 	streq.w	r1, [r8]
 801dbd4:	5162      	str	r2, [r4, r5]
 801dbd6:	604b      	str	r3, [r1, #4]
 801dbd8:	4630      	mov	r0, r6
 801dbda:	f000 f82f 	bl	801dc3c <__malloc_unlock>
 801dbde:	f104 000b 	add.w	r0, r4, #11
 801dbe2:	1d23      	adds	r3, r4, #4
 801dbe4:	f020 0007 	bic.w	r0, r0, #7
 801dbe8:	1ac2      	subs	r2, r0, r3
 801dbea:	bf1c      	itt	ne
 801dbec:	1a1b      	subne	r3, r3, r0
 801dbee:	50a3      	strne	r3, [r4, r2]
 801dbf0:	e7af      	b.n	801db52 <_malloc_r+0x22>
 801dbf2:	6862      	ldr	r2, [r4, #4]
 801dbf4:	42a3      	cmp	r3, r4
 801dbf6:	bf0c      	ite	eq
 801dbf8:	f8c8 2000 	streq.w	r2, [r8]
 801dbfc:	605a      	strne	r2, [r3, #4]
 801dbfe:	e7eb      	b.n	801dbd8 <_malloc_r+0xa8>
 801dc00:	4623      	mov	r3, r4
 801dc02:	6864      	ldr	r4, [r4, #4]
 801dc04:	e7ae      	b.n	801db64 <_malloc_r+0x34>
 801dc06:	463c      	mov	r4, r7
 801dc08:	687f      	ldr	r7, [r7, #4]
 801dc0a:	e7b6      	b.n	801db7a <_malloc_r+0x4a>
 801dc0c:	461a      	mov	r2, r3
 801dc0e:	685b      	ldr	r3, [r3, #4]
 801dc10:	42a3      	cmp	r3, r4
 801dc12:	d1fb      	bne.n	801dc0c <_malloc_r+0xdc>
 801dc14:	2300      	movs	r3, #0
 801dc16:	6053      	str	r3, [r2, #4]
 801dc18:	e7de      	b.n	801dbd8 <_malloc_r+0xa8>
 801dc1a:	230c      	movs	r3, #12
 801dc1c:	6033      	str	r3, [r6, #0]
 801dc1e:	4630      	mov	r0, r6
 801dc20:	f000 f80c 	bl	801dc3c <__malloc_unlock>
 801dc24:	e794      	b.n	801db50 <_malloc_r+0x20>
 801dc26:	6005      	str	r5, [r0, #0]
 801dc28:	e7d6      	b.n	801dbd8 <_malloc_r+0xa8>
 801dc2a:	bf00      	nop
 801dc2c:	2001234c 	.word	0x2001234c

0801dc30 <__malloc_lock>:
 801dc30:	4801      	ldr	r0, [pc, #4]	@ (801dc38 <__malloc_lock+0x8>)
 801dc32:	f000 ba52 	b.w	801e0da <__retarget_lock_acquire_recursive>
 801dc36:	bf00      	nop
 801dc38:	20012490 	.word	0x20012490

0801dc3c <__malloc_unlock>:
 801dc3c:	4801      	ldr	r0, [pc, #4]	@ (801dc44 <__malloc_unlock+0x8>)
 801dc3e:	f000 ba4d 	b.w	801e0dc <__retarget_lock_release_recursive>
 801dc42:	bf00      	nop
 801dc44:	20012490 	.word	0x20012490

0801dc48 <__cxa_atexit>:
 801dc48:	b510      	push	{r4, lr}
 801dc4a:	4604      	mov	r4, r0
 801dc4c:	4804      	ldr	r0, [pc, #16]	@ (801dc60 <__cxa_atexit+0x18>)
 801dc4e:	4613      	mov	r3, r2
 801dc50:	b120      	cbz	r0, 801dc5c <__cxa_atexit+0x14>
 801dc52:	460a      	mov	r2, r1
 801dc54:	2002      	movs	r0, #2
 801dc56:	4621      	mov	r1, r4
 801dc58:	f000 fa50 	bl	801e0fc <__register_exitproc>
 801dc5c:	bd10      	pop	{r4, pc}
 801dc5e:	bf00      	nop
 801dc60:	0801e0fd 	.word	0x0801e0fd

0801dc64 <std>:
 801dc64:	2300      	movs	r3, #0
 801dc66:	b510      	push	{r4, lr}
 801dc68:	4604      	mov	r4, r0
 801dc6a:	e9c0 3300 	strd	r3, r3, [r0]
 801dc6e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801dc72:	6083      	str	r3, [r0, #8]
 801dc74:	8181      	strh	r1, [r0, #12]
 801dc76:	6643      	str	r3, [r0, #100]	@ 0x64
 801dc78:	81c2      	strh	r2, [r0, #14]
 801dc7a:	6183      	str	r3, [r0, #24]
 801dc7c:	4619      	mov	r1, r3
 801dc7e:	2208      	movs	r2, #8
 801dc80:	305c      	adds	r0, #92	@ 0x5c
 801dc82:	f000 f906 	bl	801de92 <memset>
 801dc86:	4b0d      	ldr	r3, [pc, #52]	@ (801dcbc <std+0x58>)
 801dc88:	6263      	str	r3, [r4, #36]	@ 0x24
 801dc8a:	4b0d      	ldr	r3, [pc, #52]	@ (801dcc0 <std+0x5c>)
 801dc8c:	62a3      	str	r3, [r4, #40]	@ 0x28
 801dc8e:	4b0d      	ldr	r3, [pc, #52]	@ (801dcc4 <std+0x60>)
 801dc90:	62e3      	str	r3, [r4, #44]	@ 0x2c
 801dc92:	4b0d      	ldr	r3, [pc, #52]	@ (801dcc8 <std+0x64>)
 801dc94:	6323      	str	r3, [r4, #48]	@ 0x30
 801dc96:	4b0d      	ldr	r3, [pc, #52]	@ (801dccc <std+0x68>)
 801dc98:	6224      	str	r4, [r4, #32]
 801dc9a:	429c      	cmp	r4, r3
 801dc9c:	d006      	beq.n	801dcac <std+0x48>
 801dc9e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 801dca2:	4294      	cmp	r4, r2
 801dca4:	d002      	beq.n	801dcac <std+0x48>
 801dca6:	33d0      	adds	r3, #208	@ 0xd0
 801dca8:	429c      	cmp	r4, r3
 801dcaa:	d105      	bne.n	801dcb8 <std+0x54>
 801dcac:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 801dcb0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801dcb4:	f000 ba10 	b.w	801e0d8 <__retarget_lock_init_recursive>
 801dcb8:	bd10      	pop	{r4, pc}
 801dcba:	bf00      	nop
 801dcbc:	0801de0d 	.word	0x0801de0d
 801dcc0:	0801de2f 	.word	0x0801de2f
 801dcc4:	0801de67 	.word	0x0801de67
 801dcc8:	0801de8b 	.word	0x0801de8b
 801dccc:	20012350 	.word	0x20012350

0801dcd0 <stdio_exit_handler>:
 801dcd0:	4a02      	ldr	r2, [pc, #8]	@ (801dcdc <stdio_exit_handler+0xc>)
 801dcd2:	4903      	ldr	r1, [pc, #12]	@ (801dce0 <stdio_exit_handler+0x10>)
 801dcd4:	4803      	ldr	r0, [pc, #12]	@ (801dce4 <stdio_exit_handler+0x14>)
 801dcd6:	f000 b87b 	b.w	801ddd0 <_fwalk_sglue>
 801dcda:	bf00      	nop
 801dcdc:	20000104 	.word	0x20000104
 801dce0:	0801e8f1 	.word	0x0801e8f1
 801dce4:	20000114 	.word	0x20000114

0801dce8 <cleanup_stdio>:
 801dce8:	6841      	ldr	r1, [r0, #4]
 801dcea:	4b0c      	ldr	r3, [pc, #48]	@ (801dd1c <cleanup_stdio+0x34>)
 801dcec:	4299      	cmp	r1, r3
 801dcee:	b510      	push	{r4, lr}
 801dcf0:	4604      	mov	r4, r0
 801dcf2:	d001      	beq.n	801dcf8 <cleanup_stdio+0x10>
 801dcf4:	f000 fdfc 	bl	801e8f0 <_fflush_r>
 801dcf8:	68a1      	ldr	r1, [r4, #8]
 801dcfa:	4b09      	ldr	r3, [pc, #36]	@ (801dd20 <cleanup_stdio+0x38>)
 801dcfc:	4299      	cmp	r1, r3
 801dcfe:	d002      	beq.n	801dd06 <cleanup_stdio+0x1e>
 801dd00:	4620      	mov	r0, r4
 801dd02:	f000 fdf5 	bl	801e8f0 <_fflush_r>
 801dd06:	68e1      	ldr	r1, [r4, #12]
 801dd08:	4b06      	ldr	r3, [pc, #24]	@ (801dd24 <cleanup_stdio+0x3c>)
 801dd0a:	4299      	cmp	r1, r3
 801dd0c:	d004      	beq.n	801dd18 <cleanup_stdio+0x30>
 801dd0e:	4620      	mov	r0, r4
 801dd10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801dd14:	f000 bdec 	b.w	801e8f0 <_fflush_r>
 801dd18:	bd10      	pop	{r4, pc}
 801dd1a:	bf00      	nop
 801dd1c:	20012350 	.word	0x20012350
 801dd20:	200123b8 	.word	0x200123b8
 801dd24:	20012420 	.word	0x20012420

0801dd28 <global_stdio_init.part.0>:
 801dd28:	b510      	push	{r4, lr}
 801dd2a:	4b0b      	ldr	r3, [pc, #44]	@ (801dd58 <global_stdio_init.part.0+0x30>)
 801dd2c:	4c0b      	ldr	r4, [pc, #44]	@ (801dd5c <global_stdio_init.part.0+0x34>)
 801dd2e:	4a0c      	ldr	r2, [pc, #48]	@ (801dd60 <global_stdio_init.part.0+0x38>)
 801dd30:	601a      	str	r2, [r3, #0]
 801dd32:	4620      	mov	r0, r4
 801dd34:	2200      	movs	r2, #0
 801dd36:	2104      	movs	r1, #4
 801dd38:	f7ff ff94 	bl	801dc64 <std>
 801dd3c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 801dd40:	2201      	movs	r2, #1
 801dd42:	2109      	movs	r1, #9
 801dd44:	f7ff ff8e 	bl	801dc64 <std>
 801dd48:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 801dd4c:	2202      	movs	r2, #2
 801dd4e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801dd52:	2112      	movs	r1, #18
 801dd54:	f7ff bf86 	b.w	801dc64 <std>
 801dd58:	20012488 	.word	0x20012488
 801dd5c:	20012350 	.word	0x20012350
 801dd60:	0801dcd1 	.word	0x0801dcd1

0801dd64 <__sfp_lock_acquire>:
 801dd64:	4801      	ldr	r0, [pc, #4]	@ (801dd6c <__sfp_lock_acquire+0x8>)
 801dd66:	f000 b9b8 	b.w	801e0da <__retarget_lock_acquire_recursive>
 801dd6a:	bf00      	nop
 801dd6c:	20012492 	.word	0x20012492

0801dd70 <__sfp_lock_release>:
 801dd70:	4801      	ldr	r0, [pc, #4]	@ (801dd78 <__sfp_lock_release+0x8>)
 801dd72:	f000 b9b3 	b.w	801e0dc <__retarget_lock_release_recursive>
 801dd76:	bf00      	nop
 801dd78:	20012492 	.word	0x20012492

0801dd7c <__sinit>:
 801dd7c:	b510      	push	{r4, lr}
 801dd7e:	4604      	mov	r4, r0
 801dd80:	f7ff fff0 	bl	801dd64 <__sfp_lock_acquire>
 801dd84:	6a23      	ldr	r3, [r4, #32]
 801dd86:	b11b      	cbz	r3, 801dd90 <__sinit+0x14>
 801dd88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801dd8c:	f7ff bff0 	b.w	801dd70 <__sfp_lock_release>
 801dd90:	4b04      	ldr	r3, [pc, #16]	@ (801dda4 <__sinit+0x28>)
 801dd92:	6223      	str	r3, [r4, #32]
 801dd94:	4b04      	ldr	r3, [pc, #16]	@ (801dda8 <__sinit+0x2c>)
 801dd96:	681b      	ldr	r3, [r3, #0]
 801dd98:	2b00      	cmp	r3, #0
 801dd9a:	d1f5      	bne.n	801dd88 <__sinit+0xc>
 801dd9c:	f7ff ffc4 	bl	801dd28 <global_stdio_init.part.0>
 801dda0:	e7f2      	b.n	801dd88 <__sinit+0xc>
 801dda2:	bf00      	nop
 801dda4:	0801dce9 	.word	0x0801dce9
 801dda8:	20012488 	.word	0x20012488

0801ddac <fiprintf>:
 801ddac:	b40e      	push	{r1, r2, r3}
 801ddae:	b503      	push	{r0, r1, lr}
 801ddb0:	4601      	mov	r1, r0
 801ddb2:	ab03      	add	r3, sp, #12
 801ddb4:	4805      	ldr	r0, [pc, #20]	@ (801ddcc <fiprintf+0x20>)
 801ddb6:	f853 2b04 	ldr.w	r2, [r3], #4
 801ddba:	6800      	ldr	r0, [r0, #0]
 801ddbc:	9301      	str	r3, [sp, #4]
 801ddbe:	f000 fa6d 	bl	801e29c <_vfiprintf_r>
 801ddc2:	b002      	add	sp, #8
 801ddc4:	f85d eb04 	ldr.w	lr, [sp], #4
 801ddc8:	b003      	add	sp, #12
 801ddca:	4770      	bx	lr
 801ddcc:	20000110 	.word	0x20000110

0801ddd0 <_fwalk_sglue>:
 801ddd0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801ddd4:	4607      	mov	r7, r0
 801ddd6:	4688      	mov	r8, r1
 801ddd8:	4614      	mov	r4, r2
 801ddda:	2600      	movs	r6, #0
 801dddc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801dde0:	f1b9 0901 	subs.w	r9, r9, #1
 801dde4:	d505      	bpl.n	801ddf2 <_fwalk_sglue+0x22>
 801dde6:	6824      	ldr	r4, [r4, #0]
 801dde8:	2c00      	cmp	r4, #0
 801ddea:	d1f7      	bne.n	801dddc <_fwalk_sglue+0xc>
 801ddec:	4630      	mov	r0, r6
 801ddee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801ddf2:	89ab      	ldrh	r3, [r5, #12]
 801ddf4:	2b01      	cmp	r3, #1
 801ddf6:	d907      	bls.n	801de08 <_fwalk_sglue+0x38>
 801ddf8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801ddfc:	3301      	adds	r3, #1
 801ddfe:	d003      	beq.n	801de08 <_fwalk_sglue+0x38>
 801de00:	4629      	mov	r1, r5
 801de02:	4638      	mov	r0, r7
 801de04:	47c0      	blx	r8
 801de06:	4306      	orrs	r6, r0
 801de08:	3568      	adds	r5, #104	@ 0x68
 801de0a:	e7e9      	b.n	801dde0 <_fwalk_sglue+0x10>

0801de0c <__sread>:
 801de0c:	b510      	push	{r4, lr}
 801de0e:	460c      	mov	r4, r1
 801de10:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801de14:	f000 f8ee 	bl	801dff4 <_read_r>
 801de18:	2800      	cmp	r0, #0
 801de1a:	bfab      	itete	ge
 801de1c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 801de1e:	89a3      	ldrhlt	r3, [r4, #12]
 801de20:	181b      	addge	r3, r3, r0
 801de22:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 801de26:	bfac      	ite	ge
 801de28:	6563      	strge	r3, [r4, #84]	@ 0x54
 801de2a:	81a3      	strhlt	r3, [r4, #12]
 801de2c:	bd10      	pop	{r4, pc}

0801de2e <__swrite>:
 801de2e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801de32:	461f      	mov	r7, r3
 801de34:	898b      	ldrh	r3, [r1, #12]
 801de36:	05db      	lsls	r3, r3, #23
 801de38:	4605      	mov	r5, r0
 801de3a:	460c      	mov	r4, r1
 801de3c:	4616      	mov	r6, r2
 801de3e:	d505      	bpl.n	801de4c <__swrite+0x1e>
 801de40:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801de44:	2302      	movs	r3, #2
 801de46:	2200      	movs	r2, #0
 801de48:	f000 f8c2 	bl	801dfd0 <_lseek_r>
 801de4c:	89a3      	ldrh	r3, [r4, #12]
 801de4e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801de52:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 801de56:	81a3      	strh	r3, [r4, #12]
 801de58:	4632      	mov	r2, r6
 801de5a:	463b      	mov	r3, r7
 801de5c:	4628      	mov	r0, r5
 801de5e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801de62:	f000 b8fd 	b.w	801e060 <_write_r>

0801de66 <__sseek>:
 801de66:	b510      	push	{r4, lr}
 801de68:	460c      	mov	r4, r1
 801de6a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801de6e:	f000 f8af 	bl	801dfd0 <_lseek_r>
 801de72:	1c43      	adds	r3, r0, #1
 801de74:	89a3      	ldrh	r3, [r4, #12]
 801de76:	bf15      	itete	ne
 801de78:	6560      	strne	r0, [r4, #84]	@ 0x54
 801de7a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 801de7e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 801de82:	81a3      	strheq	r3, [r4, #12]
 801de84:	bf18      	it	ne
 801de86:	81a3      	strhne	r3, [r4, #12]
 801de88:	bd10      	pop	{r4, pc}

0801de8a <__sclose>:
 801de8a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801de8e:	f000 b839 	b.w	801df04 <_close_r>

0801de92 <memset>:
 801de92:	4402      	add	r2, r0
 801de94:	4603      	mov	r3, r0
 801de96:	4293      	cmp	r3, r2
 801de98:	d100      	bne.n	801de9c <memset+0xa>
 801de9a:	4770      	bx	lr
 801de9c:	f803 1b01 	strb.w	r1, [r3], #1
 801dea0:	e7f9      	b.n	801de96 <memset+0x4>

0801dea2 <_raise_r>:
 801dea2:	291f      	cmp	r1, #31
 801dea4:	b538      	push	{r3, r4, r5, lr}
 801dea6:	4605      	mov	r5, r0
 801dea8:	460c      	mov	r4, r1
 801deaa:	d904      	bls.n	801deb6 <_raise_r+0x14>
 801deac:	2316      	movs	r3, #22
 801deae:	6003      	str	r3, [r0, #0]
 801deb0:	f04f 30ff 	mov.w	r0, #4294967295
 801deb4:	bd38      	pop	{r3, r4, r5, pc}
 801deb6:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 801deb8:	b112      	cbz	r2, 801dec0 <_raise_r+0x1e>
 801deba:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801debe:	b94b      	cbnz	r3, 801ded4 <_raise_r+0x32>
 801dec0:	4628      	mov	r0, r5
 801dec2:	f000 f8bb 	bl	801e03c <_getpid_r>
 801dec6:	4622      	mov	r2, r4
 801dec8:	4601      	mov	r1, r0
 801deca:	4628      	mov	r0, r5
 801decc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801ded0:	f000 b8a2 	b.w	801e018 <_kill_r>
 801ded4:	2b01      	cmp	r3, #1
 801ded6:	d00a      	beq.n	801deee <_raise_r+0x4c>
 801ded8:	1c59      	adds	r1, r3, #1
 801deda:	d103      	bne.n	801dee4 <_raise_r+0x42>
 801dedc:	2316      	movs	r3, #22
 801dede:	6003      	str	r3, [r0, #0]
 801dee0:	2001      	movs	r0, #1
 801dee2:	e7e7      	b.n	801deb4 <_raise_r+0x12>
 801dee4:	2100      	movs	r1, #0
 801dee6:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 801deea:	4620      	mov	r0, r4
 801deec:	4798      	blx	r3
 801deee:	2000      	movs	r0, #0
 801def0:	e7e0      	b.n	801deb4 <_raise_r+0x12>
	...

0801def4 <raise>:
 801def4:	4b02      	ldr	r3, [pc, #8]	@ (801df00 <raise+0xc>)
 801def6:	4601      	mov	r1, r0
 801def8:	6818      	ldr	r0, [r3, #0]
 801defa:	f7ff bfd2 	b.w	801dea2 <_raise_r>
 801defe:	bf00      	nop
 801df00:	20000110 	.word	0x20000110

0801df04 <_close_r>:
 801df04:	b538      	push	{r3, r4, r5, lr}
 801df06:	4d06      	ldr	r5, [pc, #24]	@ (801df20 <_close_r+0x1c>)
 801df08:	2300      	movs	r3, #0
 801df0a:	4604      	mov	r4, r0
 801df0c:	4608      	mov	r0, r1
 801df0e:	602b      	str	r3, [r5, #0]
 801df10:	f7e3 ff80 	bl	8001e14 <_close>
 801df14:	1c43      	adds	r3, r0, #1
 801df16:	d102      	bne.n	801df1e <_close_r+0x1a>
 801df18:	682b      	ldr	r3, [r5, #0]
 801df1a:	b103      	cbz	r3, 801df1e <_close_r+0x1a>
 801df1c:	6023      	str	r3, [r4, #0]
 801df1e:	bd38      	pop	{r3, r4, r5, pc}
 801df20:	2001248c 	.word	0x2001248c

0801df24 <_reclaim_reent>:
 801df24:	4b29      	ldr	r3, [pc, #164]	@ (801dfcc <_reclaim_reent+0xa8>)
 801df26:	681b      	ldr	r3, [r3, #0]
 801df28:	4283      	cmp	r3, r0
 801df2a:	b570      	push	{r4, r5, r6, lr}
 801df2c:	4604      	mov	r4, r0
 801df2e:	d04b      	beq.n	801dfc8 <_reclaim_reent+0xa4>
 801df30:	69c3      	ldr	r3, [r0, #28]
 801df32:	b1ab      	cbz	r3, 801df60 <_reclaim_reent+0x3c>
 801df34:	68db      	ldr	r3, [r3, #12]
 801df36:	b16b      	cbz	r3, 801df54 <_reclaim_reent+0x30>
 801df38:	2500      	movs	r5, #0
 801df3a:	69e3      	ldr	r3, [r4, #28]
 801df3c:	68db      	ldr	r3, [r3, #12]
 801df3e:	5959      	ldr	r1, [r3, r5]
 801df40:	2900      	cmp	r1, #0
 801df42:	d13b      	bne.n	801dfbc <_reclaim_reent+0x98>
 801df44:	3504      	adds	r5, #4
 801df46:	2d80      	cmp	r5, #128	@ 0x80
 801df48:	d1f7      	bne.n	801df3a <_reclaim_reent+0x16>
 801df4a:	69e3      	ldr	r3, [r4, #28]
 801df4c:	4620      	mov	r0, r4
 801df4e:	68d9      	ldr	r1, [r3, #12]
 801df50:	f000 f930 	bl	801e1b4 <_free_r>
 801df54:	69e3      	ldr	r3, [r4, #28]
 801df56:	6819      	ldr	r1, [r3, #0]
 801df58:	b111      	cbz	r1, 801df60 <_reclaim_reent+0x3c>
 801df5a:	4620      	mov	r0, r4
 801df5c:	f000 f92a 	bl	801e1b4 <_free_r>
 801df60:	6961      	ldr	r1, [r4, #20]
 801df62:	b111      	cbz	r1, 801df6a <_reclaim_reent+0x46>
 801df64:	4620      	mov	r0, r4
 801df66:	f000 f925 	bl	801e1b4 <_free_r>
 801df6a:	69e1      	ldr	r1, [r4, #28]
 801df6c:	b111      	cbz	r1, 801df74 <_reclaim_reent+0x50>
 801df6e:	4620      	mov	r0, r4
 801df70:	f000 f920 	bl	801e1b4 <_free_r>
 801df74:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 801df76:	b111      	cbz	r1, 801df7e <_reclaim_reent+0x5a>
 801df78:	4620      	mov	r0, r4
 801df7a:	f000 f91b 	bl	801e1b4 <_free_r>
 801df7e:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 801df80:	b111      	cbz	r1, 801df88 <_reclaim_reent+0x64>
 801df82:	4620      	mov	r0, r4
 801df84:	f000 f916 	bl	801e1b4 <_free_r>
 801df88:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 801df8a:	b111      	cbz	r1, 801df92 <_reclaim_reent+0x6e>
 801df8c:	4620      	mov	r0, r4
 801df8e:	f000 f911 	bl	801e1b4 <_free_r>
 801df92:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 801df94:	b111      	cbz	r1, 801df9c <_reclaim_reent+0x78>
 801df96:	4620      	mov	r0, r4
 801df98:	f000 f90c 	bl	801e1b4 <_free_r>
 801df9c:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 801df9e:	b111      	cbz	r1, 801dfa6 <_reclaim_reent+0x82>
 801dfa0:	4620      	mov	r0, r4
 801dfa2:	f000 f907 	bl	801e1b4 <_free_r>
 801dfa6:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 801dfa8:	b111      	cbz	r1, 801dfb0 <_reclaim_reent+0x8c>
 801dfaa:	4620      	mov	r0, r4
 801dfac:	f000 f902 	bl	801e1b4 <_free_r>
 801dfb0:	6a23      	ldr	r3, [r4, #32]
 801dfb2:	b14b      	cbz	r3, 801dfc8 <_reclaim_reent+0xa4>
 801dfb4:	4620      	mov	r0, r4
 801dfb6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801dfba:	4718      	bx	r3
 801dfbc:	680e      	ldr	r6, [r1, #0]
 801dfbe:	4620      	mov	r0, r4
 801dfc0:	f000 f8f8 	bl	801e1b4 <_free_r>
 801dfc4:	4631      	mov	r1, r6
 801dfc6:	e7bb      	b.n	801df40 <_reclaim_reent+0x1c>
 801dfc8:	bd70      	pop	{r4, r5, r6, pc}
 801dfca:	bf00      	nop
 801dfcc:	20000110 	.word	0x20000110

0801dfd0 <_lseek_r>:
 801dfd0:	b538      	push	{r3, r4, r5, lr}
 801dfd2:	4d07      	ldr	r5, [pc, #28]	@ (801dff0 <_lseek_r+0x20>)
 801dfd4:	4604      	mov	r4, r0
 801dfd6:	4608      	mov	r0, r1
 801dfd8:	4611      	mov	r1, r2
 801dfda:	2200      	movs	r2, #0
 801dfdc:	602a      	str	r2, [r5, #0]
 801dfde:	461a      	mov	r2, r3
 801dfe0:	f7e3 ff22 	bl	8001e28 <_lseek>
 801dfe4:	1c43      	adds	r3, r0, #1
 801dfe6:	d102      	bne.n	801dfee <_lseek_r+0x1e>
 801dfe8:	682b      	ldr	r3, [r5, #0]
 801dfea:	b103      	cbz	r3, 801dfee <_lseek_r+0x1e>
 801dfec:	6023      	str	r3, [r4, #0]
 801dfee:	bd38      	pop	{r3, r4, r5, pc}
 801dff0:	2001248c 	.word	0x2001248c

0801dff4 <_read_r>:
 801dff4:	b538      	push	{r3, r4, r5, lr}
 801dff6:	4d07      	ldr	r5, [pc, #28]	@ (801e014 <_read_r+0x20>)
 801dff8:	4604      	mov	r4, r0
 801dffa:	4608      	mov	r0, r1
 801dffc:	4611      	mov	r1, r2
 801dffe:	2200      	movs	r2, #0
 801e000:	602a      	str	r2, [r5, #0]
 801e002:	461a      	mov	r2, r3
 801e004:	f7e3 feea 	bl	8001ddc <_read>
 801e008:	1c43      	adds	r3, r0, #1
 801e00a:	d102      	bne.n	801e012 <_read_r+0x1e>
 801e00c:	682b      	ldr	r3, [r5, #0]
 801e00e:	b103      	cbz	r3, 801e012 <_read_r+0x1e>
 801e010:	6023      	str	r3, [r4, #0]
 801e012:	bd38      	pop	{r3, r4, r5, pc}
 801e014:	2001248c 	.word	0x2001248c

0801e018 <_kill_r>:
 801e018:	b538      	push	{r3, r4, r5, lr}
 801e01a:	4d07      	ldr	r5, [pc, #28]	@ (801e038 <_kill_r+0x20>)
 801e01c:	2300      	movs	r3, #0
 801e01e:	4604      	mov	r4, r0
 801e020:	4608      	mov	r0, r1
 801e022:	4611      	mov	r1, r2
 801e024:	602b      	str	r3, [r5, #0]
 801e026:	f7e3 fecb 	bl	8001dc0 <_kill>
 801e02a:	1c43      	adds	r3, r0, #1
 801e02c:	d102      	bne.n	801e034 <_kill_r+0x1c>
 801e02e:	682b      	ldr	r3, [r5, #0]
 801e030:	b103      	cbz	r3, 801e034 <_kill_r+0x1c>
 801e032:	6023      	str	r3, [r4, #0]
 801e034:	bd38      	pop	{r3, r4, r5, pc}
 801e036:	bf00      	nop
 801e038:	2001248c 	.word	0x2001248c

0801e03c <_getpid_r>:
 801e03c:	f7e3 bebe 	b.w	8001dbc <_getpid>

0801e040 <_sbrk_r>:
 801e040:	b538      	push	{r3, r4, r5, lr}
 801e042:	4d06      	ldr	r5, [pc, #24]	@ (801e05c <_sbrk_r+0x1c>)
 801e044:	2300      	movs	r3, #0
 801e046:	4604      	mov	r4, r0
 801e048:	4608      	mov	r0, r1
 801e04a:	602b      	str	r3, [r5, #0]
 801e04c:	f7e3 feee 	bl	8001e2c <_sbrk>
 801e050:	1c43      	adds	r3, r0, #1
 801e052:	d102      	bne.n	801e05a <_sbrk_r+0x1a>
 801e054:	682b      	ldr	r3, [r5, #0]
 801e056:	b103      	cbz	r3, 801e05a <_sbrk_r+0x1a>
 801e058:	6023      	str	r3, [r4, #0]
 801e05a:	bd38      	pop	{r3, r4, r5, pc}
 801e05c:	2001248c 	.word	0x2001248c

0801e060 <_write_r>:
 801e060:	b538      	push	{r3, r4, r5, lr}
 801e062:	4d07      	ldr	r5, [pc, #28]	@ (801e080 <_write_r+0x20>)
 801e064:	4604      	mov	r4, r0
 801e066:	4608      	mov	r0, r1
 801e068:	4611      	mov	r1, r2
 801e06a:	2200      	movs	r2, #0
 801e06c:	602a      	str	r2, [r5, #0]
 801e06e:	461a      	mov	r2, r3
 801e070:	f7e3 fec2 	bl	8001df8 <_write>
 801e074:	1c43      	adds	r3, r0, #1
 801e076:	d102      	bne.n	801e07e <_write_r+0x1e>
 801e078:	682b      	ldr	r3, [r5, #0]
 801e07a:	b103      	cbz	r3, 801e07e <_write_r+0x1e>
 801e07c:	6023      	str	r3, [r4, #0]
 801e07e:	bd38      	pop	{r3, r4, r5, pc}
 801e080:	2001248c 	.word	0x2001248c

0801e084 <__errno>:
 801e084:	4b01      	ldr	r3, [pc, #4]	@ (801e08c <__errno+0x8>)
 801e086:	6818      	ldr	r0, [r3, #0]
 801e088:	4770      	bx	lr
 801e08a:	bf00      	nop
 801e08c:	20000110 	.word	0x20000110

0801e090 <__libc_init_array>:
 801e090:	b570      	push	{r4, r5, r6, lr}
 801e092:	4d0d      	ldr	r5, [pc, #52]	@ (801e0c8 <__libc_init_array+0x38>)
 801e094:	4c0d      	ldr	r4, [pc, #52]	@ (801e0cc <__libc_init_array+0x3c>)
 801e096:	1b64      	subs	r4, r4, r5
 801e098:	10a4      	asrs	r4, r4, #2
 801e09a:	2600      	movs	r6, #0
 801e09c:	42a6      	cmp	r6, r4
 801e09e:	d109      	bne.n	801e0b4 <__libc_init_array+0x24>
 801e0a0:	4d0b      	ldr	r5, [pc, #44]	@ (801e0d0 <__libc_init_array+0x40>)
 801e0a2:	4c0c      	ldr	r4, [pc, #48]	@ (801e0d4 <__libc_init_array+0x44>)
 801e0a4:	f000 fd64 	bl	801eb70 <_init>
 801e0a8:	1b64      	subs	r4, r4, r5
 801e0aa:	10a4      	asrs	r4, r4, #2
 801e0ac:	2600      	movs	r6, #0
 801e0ae:	42a6      	cmp	r6, r4
 801e0b0:	d105      	bne.n	801e0be <__libc_init_array+0x2e>
 801e0b2:	bd70      	pop	{r4, r5, r6, pc}
 801e0b4:	f855 3b04 	ldr.w	r3, [r5], #4
 801e0b8:	4798      	blx	r3
 801e0ba:	3601      	adds	r6, #1
 801e0bc:	e7ee      	b.n	801e09c <__libc_init_array+0xc>
 801e0be:	f855 3b04 	ldr.w	r3, [r5], #4
 801e0c2:	4798      	blx	r3
 801e0c4:	3601      	adds	r6, #1
 801e0c6:	e7f2      	b.n	801e0ae <__libc_init_array+0x1e>
 801e0c8:	0807297c 	.word	0x0807297c
 801e0cc:	0807297c 	.word	0x0807297c
 801e0d0:	0807297c 	.word	0x0807297c
 801e0d4:	08072990 	.word	0x08072990

0801e0d8 <__retarget_lock_init_recursive>:
 801e0d8:	4770      	bx	lr

0801e0da <__retarget_lock_acquire_recursive>:
 801e0da:	4770      	bx	lr

0801e0dc <__retarget_lock_release_recursive>:
 801e0dc:	4770      	bx	lr

0801e0de <memcpy>:
 801e0de:	440a      	add	r2, r1
 801e0e0:	4291      	cmp	r1, r2
 801e0e2:	f100 33ff 	add.w	r3, r0, #4294967295
 801e0e6:	d100      	bne.n	801e0ea <memcpy+0xc>
 801e0e8:	4770      	bx	lr
 801e0ea:	b510      	push	{r4, lr}
 801e0ec:	f811 4b01 	ldrb.w	r4, [r1], #1
 801e0f0:	f803 4f01 	strb.w	r4, [r3, #1]!
 801e0f4:	4291      	cmp	r1, r2
 801e0f6:	d1f9      	bne.n	801e0ec <memcpy+0xe>
 801e0f8:	bd10      	pop	{r4, pc}
	...

0801e0fc <__register_exitproc>:
 801e0fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801e100:	4d27      	ldr	r5, [pc, #156]	@ (801e1a0 <__register_exitproc+0xa4>)
 801e102:	4607      	mov	r7, r0
 801e104:	6828      	ldr	r0, [r5, #0]
 801e106:	4691      	mov	r9, r2
 801e108:	460e      	mov	r6, r1
 801e10a:	4698      	mov	r8, r3
 801e10c:	f7ff ffe5 	bl	801e0da <__retarget_lock_acquire_recursive>
 801e110:	4a24      	ldr	r2, [pc, #144]	@ (801e1a4 <__register_exitproc+0xa8>)
 801e112:	6814      	ldr	r4, [r2, #0]
 801e114:	b93c      	cbnz	r4, 801e126 <__register_exitproc+0x2a>
 801e116:	4b24      	ldr	r3, [pc, #144]	@ (801e1a8 <__register_exitproc+0xac>)
 801e118:	6013      	str	r3, [r2, #0]
 801e11a:	4a24      	ldr	r2, [pc, #144]	@ (801e1ac <__register_exitproc+0xb0>)
 801e11c:	b112      	cbz	r2, 801e124 <__register_exitproc+0x28>
 801e11e:	6812      	ldr	r2, [r2, #0]
 801e120:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 801e124:	4c20      	ldr	r4, [pc, #128]	@ (801e1a8 <__register_exitproc+0xac>)
 801e126:	6863      	ldr	r3, [r4, #4]
 801e128:	2b1f      	cmp	r3, #31
 801e12a:	dd06      	ble.n	801e13a <__register_exitproc+0x3e>
 801e12c:	6828      	ldr	r0, [r5, #0]
 801e12e:	f7ff ffd5 	bl	801e0dc <__retarget_lock_release_recursive>
 801e132:	f04f 30ff 	mov.w	r0, #4294967295
 801e136:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801e13a:	b32f      	cbz	r7, 801e188 <__register_exitproc+0x8c>
 801e13c:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 801e140:	b968      	cbnz	r0, 801e15e <__register_exitproc+0x62>
 801e142:	4b1b      	ldr	r3, [pc, #108]	@ (801e1b0 <__register_exitproc+0xb4>)
 801e144:	2b00      	cmp	r3, #0
 801e146:	d0f1      	beq.n	801e12c <__register_exitproc+0x30>
 801e148:	f44f 7084 	mov.w	r0, #264	@ 0x108
 801e14c:	f7ff fcbe 	bl	801dacc <malloc>
 801e150:	2800      	cmp	r0, #0
 801e152:	d0eb      	beq.n	801e12c <__register_exitproc+0x30>
 801e154:	2300      	movs	r3, #0
 801e156:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 801e15a:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 801e15e:	6863      	ldr	r3, [r4, #4]
 801e160:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801e164:	2201      	movs	r2, #1
 801e166:	409a      	lsls	r2, r3
 801e168:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801e16c:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 801e170:	4313      	orrs	r3, r2
 801e172:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 801e176:	2f02      	cmp	r7, #2
 801e178:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 801e17c:	bf02      	ittt	eq
 801e17e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 801e182:	4313      	orreq	r3, r2
 801e184:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 801e188:	6863      	ldr	r3, [r4, #4]
 801e18a:	6828      	ldr	r0, [r5, #0]
 801e18c:	1c5a      	adds	r2, r3, #1
 801e18e:	3302      	adds	r3, #2
 801e190:	6062      	str	r2, [r4, #4]
 801e192:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 801e196:	f7ff ffa1 	bl	801e0dc <__retarget_lock_release_recursive>
 801e19a:	2000      	movs	r0, #0
 801e19c:	e7cb      	b.n	801e136 <__register_exitproc+0x3a>
 801e19e:	bf00      	nop
 801e1a0:	20000160 	.word	0x20000160
 801e1a4:	20012520 	.word	0x20012520
 801e1a8:	20012494 	.word	0x20012494
 801e1ac:	08020a44 	.word	0x08020a44
 801e1b0:	0801dacd 	.word	0x0801dacd

0801e1b4 <_free_r>:
 801e1b4:	b538      	push	{r3, r4, r5, lr}
 801e1b6:	4605      	mov	r5, r0
 801e1b8:	2900      	cmp	r1, #0
 801e1ba:	d041      	beq.n	801e240 <_free_r+0x8c>
 801e1bc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801e1c0:	1f0c      	subs	r4, r1, #4
 801e1c2:	2b00      	cmp	r3, #0
 801e1c4:	bfb8      	it	lt
 801e1c6:	18e4      	addlt	r4, r4, r3
 801e1c8:	f7ff fd32 	bl	801dc30 <__malloc_lock>
 801e1cc:	4a1d      	ldr	r2, [pc, #116]	@ (801e244 <_free_r+0x90>)
 801e1ce:	6813      	ldr	r3, [r2, #0]
 801e1d0:	b933      	cbnz	r3, 801e1e0 <_free_r+0x2c>
 801e1d2:	6063      	str	r3, [r4, #4]
 801e1d4:	6014      	str	r4, [r2, #0]
 801e1d6:	4628      	mov	r0, r5
 801e1d8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801e1dc:	f7ff bd2e 	b.w	801dc3c <__malloc_unlock>
 801e1e0:	42a3      	cmp	r3, r4
 801e1e2:	d908      	bls.n	801e1f6 <_free_r+0x42>
 801e1e4:	6820      	ldr	r0, [r4, #0]
 801e1e6:	1821      	adds	r1, r4, r0
 801e1e8:	428b      	cmp	r3, r1
 801e1ea:	bf01      	itttt	eq
 801e1ec:	6819      	ldreq	r1, [r3, #0]
 801e1ee:	685b      	ldreq	r3, [r3, #4]
 801e1f0:	1809      	addeq	r1, r1, r0
 801e1f2:	6021      	streq	r1, [r4, #0]
 801e1f4:	e7ed      	b.n	801e1d2 <_free_r+0x1e>
 801e1f6:	461a      	mov	r2, r3
 801e1f8:	685b      	ldr	r3, [r3, #4]
 801e1fa:	b10b      	cbz	r3, 801e200 <_free_r+0x4c>
 801e1fc:	42a3      	cmp	r3, r4
 801e1fe:	d9fa      	bls.n	801e1f6 <_free_r+0x42>
 801e200:	6811      	ldr	r1, [r2, #0]
 801e202:	1850      	adds	r0, r2, r1
 801e204:	42a0      	cmp	r0, r4
 801e206:	d10b      	bne.n	801e220 <_free_r+0x6c>
 801e208:	6820      	ldr	r0, [r4, #0]
 801e20a:	4401      	add	r1, r0
 801e20c:	1850      	adds	r0, r2, r1
 801e20e:	4283      	cmp	r3, r0
 801e210:	6011      	str	r1, [r2, #0]
 801e212:	d1e0      	bne.n	801e1d6 <_free_r+0x22>
 801e214:	6818      	ldr	r0, [r3, #0]
 801e216:	685b      	ldr	r3, [r3, #4]
 801e218:	6053      	str	r3, [r2, #4]
 801e21a:	4408      	add	r0, r1
 801e21c:	6010      	str	r0, [r2, #0]
 801e21e:	e7da      	b.n	801e1d6 <_free_r+0x22>
 801e220:	d902      	bls.n	801e228 <_free_r+0x74>
 801e222:	230c      	movs	r3, #12
 801e224:	602b      	str	r3, [r5, #0]
 801e226:	e7d6      	b.n	801e1d6 <_free_r+0x22>
 801e228:	6820      	ldr	r0, [r4, #0]
 801e22a:	1821      	adds	r1, r4, r0
 801e22c:	428b      	cmp	r3, r1
 801e22e:	bf04      	itt	eq
 801e230:	6819      	ldreq	r1, [r3, #0]
 801e232:	685b      	ldreq	r3, [r3, #4]
 801e234:	6063      	str	r3, [r4, #4]
 801e236:	bf04      	itt	eq
 801e238:	1809      	addeq	r1, r1, r0
 801e23a:	6021      	streq	r1, [r4, #0]
 801e23c:	6054      	str	r4, [r2, #4]
 801e23e:	e7ca      	b.n	801e1d6 <_free_r+0x22>
 801e240:	bd38      	pop	{r3, r4, r5, pc}
 801e242:	bf00      	nop
 801e244:	2001234c 	.word	0x2001234c

0801e248 <__sfputc_r>:
 801e248:	6893      	ldr	r3, [r2, #8]
 801e24a:	3b01      	subs	r3, #1
 801e24c:	2b00      	cmp	r3, #0
 801e24e:	b410      	push	{r4}
 801e250:	6093      	str	r3, [r2, #8]
 801e252:	da08      	bge.n	801e266 <__sfputc_r+0x1e>
 801e254:	6994      	ldr	r4, [r2, #24]
 801e256:	42a3      	cmp	r3, r4
 801e258:	db01      	blt.n	801e25e <__sfputc_r+0x16>
 801e25a:	290a      	cmp	r1, #10
 801e25c:	d103      	bne.n	801e266 <__sfputc_r+0x1e>
 801e25e:	f85d 4b04 	ldr.w	r4, [sp], #4
 801e262:	f000 bb6d 	b.w	801e940 <__swbuf_r>
 801e266:	6813      	ldr	r3, [r2, #0]
 801e268:	1c58      	adds	r0, r3, #1
 801e26a:	6010      	str	r0, [r2, #0]
 801e26c:	7019      	strb	r1, [r3, #0]
 801e26e:	4608      	mov	r0, r1
 801e270:	f85d 4b04 	ldr.w	r4, [sp], #4
 801e274:	4770      	bx	lr

0801e276 <__sfputs_r>:
 801e276:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801e278:	4606      	mov	r6, r0
 801e27a:	460f      	mov	r7, r1
 801e27c:	4614      	mov	r4, r2
 801e27e:	18d5      	adds	r5, r2, r3
 801e280:	42ac      	cmp	r4, r5
 801e282:	d101      	bne.n	801e288 <__sfputs_r+0x12>
 801e284:	2000      	movs	r0, #0
 801e286:	e007      	b.n	801e298 <__sfputs_r+0x22>
 801e288:	f814 1b01 	ldrb.w	r1, [r4], #1
 801e28c:	463a      	mov	r2, r7
 801e28e:	4630      	mov	r0, r6
 801e290:	f7ff ffda 	bl	801e248 <__sfputc_r>
 801e294:	1c43      	adds	r3, r0, #1
 801e296:	d1f3      	bne.n	801e280 <__sfputs_r+0xa>
 801e298:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801e29c <_vfiprintf_r>:
 801e29c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e2a0:	460d      	mov	r5, r1
 801e2a2:	b09d      	sub	sp, #116	@ 0x74
 801e2a4:	4614      	mov	r4, r2
 801e2a6:	4698      	mov	r8, r3
 801e2a8:	4606      	mov	r6, r0
 801e2aa:	b118      	cbz	r0, 801e2b4 <_vfiprintf_r+0x18>
 801e2ac:	6a03      	ldr	r3, [r0, #32]
 801e2ae:	b90b      	cbnz	r3, 801e2b4 <_vfiprintf_r+0x18>
 801e2b0:	f7ff fd64 	bl	801dd7c <__sinit>
 801e2b4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 801e2b6:	07d9      	lsls	r1, r3, #31
 801e2b8:	d405      	bmi.n	801e2c6 <_vfiprintf_r+0x2a>
 801e2ba:	89ab      	ldrh	r3, [r5, #12]
 801e2bc:	059a      	lsls	r2, r3, #22
 801e2be:	d402      	bmi.n	801e2c6 <_vfiprintf_r+0x2a>
 801e2c0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 801e2c2:	f7ff ff0a 	bl	801e0da <__retarget_lock_acquire_recursive>
 801e2c6:	89ab      	ldrh	r3, [r5, #12]
 801e2c8:	071b      	lsls	r3, r3, #28
 801e2ca:	d501      	bpl.n	801e2d0 <_vfiprintf_r+0x34>
 801e2cc:	692b      	ldr	r3, [r5, #16]
 801e2ce:	b99b      	cbnz	r3, 801e2f8 <_vfiprintf_r+0x5c>
 801e2d0:	4629      	mov	r1, r5
 801e2d2:	4630      	mov	r0, r6
 801e2d4:	f000 fb72 	bl	801e9bc <__swsetup_r>
 801e2d8:	b170      	cbz	r0, 801e2f8 <_vfiprintf_r+0x5c>
 801e2da:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 801e2dc:	07dc      	lsls	r4, r3, #31
 801e2de:	d504      	bpl.n	801e2ea <_vfiprintf_r+0x4e>
 801e2e0:	f04f 30ff 	mov.w	r0, #4294967295
 801e2e4:	b01d      	add	sp, #116	@ 0x74
 801e2e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e2ea:	89ab      	ldrh	r3, [r5, #12]
 801e2ec:	0598      	lsls	r0, r3, #22
 801e2ee:	d4f7      	bmi.n	801e2e0 <_vfiprintf_r+0x44>
 801e2f0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 801e2f2:	f7ff fef3 	bl	801e0dc <__retarget_lock_release_recursive>
 801e2f6:	e7f3      	b.n	801e2e0 <_vfiprintf_r+0x44>
 801e2f8:	2300      	movs	r3, #0
 801e2fa:	9309      	str	r3, [sp, #36]	@ 0x24
 801e2fc:	2320      	movs	r3, #32
 801e2fe:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 801e302:	f8cd 800c 	str.w	r8, [sp, #12]
 801e306:	2330      	movs	r3, #48	@ 0x30
 801e308:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 801e4b8 <_vfiprintf_r+0x21c>
 801e30c:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 801e310:	f04f 0901 	mov.w	r9, #1
 801e314:	4623      	mov	r3, r4
 801e316:	469a      	mov	sl, r3
 801e318:	f813 2b01 	ldrb.w	r2, [r3], #1
 801e31c:	b10a      	cbz	r2, 801e322 <_vfiprintf_r+0x86>
 801e31e:	2a25      	cmp	r2, #37	@ 0x25
 801e320:	d1f9      	bne.n	801e316 <_vfiprintf_r+0x7a>
 801e322:	ebba 0b04 	subs.w	fp, sl, r4
 801e326:	d00b      	beq.n	801e340 <_vfiprintf_r+0xa4>
 801e328:	465b      	mov	r3, fp
 801e32a:	4622      	mov	r2, r4
 801e32c:	4629      	mov	r1, r5
 801e32e:	4630      	mov	r0, r6
 801e330:	f7ff ffa1 	bl	801e276 <__sfputs_r>
 801e334:	3001      	adds	r0, #1
 801e336:	f000 80a7 	beq.w	801e488 <_vfiprintf_r+0x1ec>
 801e33a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e33c:	445a      	add	r2, fp
 801e33e:	9209      	str	r2, [sp, #36]	@ 0x24
 801e340:	f89a 3000 	ldrb.w	r3, [sl]
 801e344:	2b00      	cmp	r3, #0
 801e346:	f000 809f 	beq.w	801e488 <_vfiprintf_r+0x1ec>
 801e34a:	2300      	movs	r3, #0
 801e34c:	f04f 32ff 	mov.w	r2, #4294967295
 801e350:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801e354:	f10a 0a01 	add.w	sl, sl, #1
 801e358:	9304      	str	r3, [sp, #16]
 801e35a:	9307      	str	r3, [sp, #28]
 801e35c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 801e360:	931a      	str	r3, [sp, #104]	@ 0x68
 801e362:	4654      	mov	r4, sl
 801e364:	2205      	movs	r2, #5
 801e366:	f814 1b01 	ldrb.w	r1, [r4], #1
 801e36a:	4853      	ldr	r0, [pc, #332]	@ (801e4b8 <_vfiprintf_r+0x21c>)
 801e36c:	f7e1 ff40 	bl	80001f0 <memchr>
 801e370:	9a04      	ldr	r2, [sp, #16]
 801e372:	b9d8      	cbnz	r0, 801e3ac <_vfiprintf_r+0x110>
 801e374:	06d1      	lsls	r1, r2, #27
 801e376:	bf44      	itt	mi
 801e378:	2320      	movmi	r3, #32
 801e37a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 801e37e:	0713      	lsls	r3, r2, #28
 801e380:	bf44      	itt	mi
 801e382:	232b      	movmi	r3, #43	@ 0x2b
 801e384:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 801e388:	f89a 3000 	ldrb.w	r3, [sl]
 801e38c:	2b2a      	cmp	r3, #42	@ 0x2a
 801e38e:	d015      	beq.n	801e3bc <_vfiprintf_r+0x120>
 801e390:	9a07      	ldr	r2, [sp, #28]
 801e392:	4654      	mov	r4, sl
 801e394:	2000      	movs	r0, #0
 801e396:	f04f 0c0a 	mov.w	ip, #10
 801e39a:	4621      	mov	r1, r4
 801e39c:	f811 3b01 	ldrb.w	r3, [r1], #1
 801e3a0:	3b30      	subs	r3, #48	@ 0x30
 801e3a2:	2b09      	cmp	r3, #9
 801e3a4:	d94b      	bls.n	801e43e <_vfiprintf_r+0x1a2>
 801e3a6:	b1b0      	cbz	r0, 801e3d6 <_vfiprintf_r+0x13a>
 801e3a8:	9207      	str	r2, [sp, #28]
 801e3aa:	e014      	b.n	801e3d6 <_vfiprintf_r+0x13a>
 801e3ac:	eba0 0308 	sub.w	r3, r0, r8
 801e3b0:	fa09 f303 	lsl.w	r3, r9, r3
 801e3b4:	4313      	orrs	r3, r2
 801e3b6:	9304      	str	r3, [sp, #16]
 801e3b8:	46a2      	mov	sl, r4
 801e3ba:	e7d2      	b.n	801e362 <_vfiprintf_r+0xc6>
 801e3bc:	9b03      	ldr	r3, [sp, #12]
 801e3be:	1d19      	adds	r1, r3, #4
 801e3c0:	681b      	ldr	r3, [r3, #0]
 801e3c2:	9103      	str	r1, [sp, #12]
 801e3c4:	2b00      	cmp	r3, #0
 801e3c6:	bfbb      	ittet	lt
 801e3c8:	425b      	neglt	r3, r3
 801e3ca:	f042 0202 	orrlt.w	r2, r2, #2
 801e3ce:	9307      	strge	r3, [sp, #28]
 801e3d0:	9307      	strlt	r3, [sp, #28]
 801e3d2:	bfb8      	it	lt
 801e3d4:	9204      	strlt	r2, [sp, #16]
 801e3d6:	7823      	ldrb	r3, [r4, #0]
 801e3d8:	2b2e      	cmp	r3, #46	@ 0x2e
 801e3da:	d10a      	bne.n	801e3f2 <_vfiprintf_r+0x156>
 801e3dc:	7863      	ldrb	r3, [r4, #1]
 801e3de:	2b2a      	cmp	r3, #42	@ 0x2a
 801e3e0:	d132      	bne.n	801e448 <_vfiprintf_r+0x1ac>
 801e3e2:	9b03      	ldr	r3, [sp, #12]
 801e3e4:	1d1a      	adds	r2, r3, #4
 801e3e6:	681b      	ldr	r3, [r3, #0]
 801e3e8:	9203      	str	r2, [sp, #12]
 801e3ea:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 801e3ee:	3402      	adds	r4, #2
 801e3f0:	9305      	str	r3, [sp, #20]
 801e3f2:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 801e4c8 <_vfiprintf_r+0x22c>
 801e3f6:	7821      	ldrb	r1, [r4, #0]
 801e3f8:	2203      	movs	r2, #3
 801e3fa:	4650      	mov	r0, sl
 801e3fc:	f7e1 fef8 	bl	80001f0 <memchr>
 801e400:	b138      	cbz	r0, 801e412 <_vfiprintf_r+0x176>
 801e402:	9b04      	ldr	r3, [sp, #16]
 801e404:	eba0 000a 	sub.w	r0, r0, sl
 801e408:	2240      	movs	r2, #64	@ 0x40
 801e40a:	4082      	lsls	r2, r0
 801e40c:	4313      	orrs	r3, r2
 801e40e:	3401      	adds	r4, #1
 801e410:	9304      	str	r3, [sp, #16]
 801e412:	f814 1b01 	ldrb.w	r1, [r4], #1
 801e416:	4829      	ldr	r0, [pc, #164]	@ (801e4bc <_vfiprintf_r+0x220>)
 801e418:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 801e41c:	2206      	movs	r2, #6
 801e41e:	f7e1 fee7 	bl	80001f0 <memchr>
 801e422:	2800      	cmp	r0, #0
 801e424:	d03f      	beq.n	801e4a6 <_vfiprintf_r+0x20a>
 801e426:	4b26      	ldr	r3, [pc, #152]	@ (801e4c0 <_vfiprintf_r+0x224>)
 801e428:	bb1b      	cbnz	r3, 801e472 <_vfiprintf_r+0x1d6>
 801e42a:	9b03      	ldr	r3, [sp, #12]
 801e42c:	3307      	adds	r3, #7
 801e42e:	f023 0307 	bic.w	r3, r3, #7
 801e432:	3308      	adds	r3, #8
 801e434:	9303      	str	r3, [sp, #12]
 801e436:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e438:	443b      	add	r3, r7
 801e43a:	9309      	str	r3, [sp, #36]	@ 0x24
 801e43c:	e76a      	b.n	801e314 <_vfiprintf_r+0x78>
 801e43e:	fb0c 3202 	mla	r2, ip, r2, r3
 801e442:	460c      	mov	r4, r1
 801e444:	2001      	movs	r0, #1
 801e446:	e7a8      	b.n	801e39a <_vfiprintf_r+0xfe>
 801e448:	2300      	movs	r3, #0
 801e44a:	3401      	adds	r4, #1
 801e44c:	9305      	str	r3, [sp, #20]
 801e44e:	4619      	mov	r1, r3
 801e450:	f04f 0c0a 	mov.w	ip, #10
 801e454:	4620      	mov	r0, r4
 801e456:	f810 2b01 	ldrb.w	r2, [r0], #1
 801e45a:	3a30      	subs	r2, #48	@ 0x30
 801e45c:	2a09      	cmp	r2, #9
 801e45e:	d903      	bls.n	801e468 <_vfiprintf_r+0x1cc>
 801e460:	2b00      	cmp	r3, #0
 801e462:	d0c6      	beq.n	801e3f2 <_vfiprintf_r+0x156>
 801e464:	9105      	str	r1, [sp, #20]
 801e466:	e7c4      	b.n	801e3f2 <_vfiprintf_r+0x156>
 801e468:	fb0c 2101 	mla	r1, ip, r1, r2
 801e46c:	4604      	mov	r4, r0
 801e46e:	2301      	movs	r3, #1
 801e470:	e7f0      	b.n	801e454 <_vfiprintf_r+0x1b8>
 801e472:	ab03      	add	r3, sp, #12
 801e474:	9300      	str	r3, [sp, #0]
 801e476:	462a      	mov	r2, r5
 801e478:	4b12      	ldr	r3, [pc, #72]	@ (801e4c4 <_vfiprintf_r+0x228>)
 801e47a:	a904      	add	r1, sp, #16
 801e47c:	4630      	mov	r0, r6
 801e47e:	f3af 8000 	nop.w
 801e482:	4607      	mov	r7, r0
 801e484:	1c78      	adds	r0, r7, #1
 801e486:	d1d6      	bne.n	801e436 <_vfiprintf_r+0x19a>
 801e488:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 801e48a:	07d9      	lsls	r1, r3, #31
 801e48c:	d405      	bmi.n	801e49a <_vfiprintf_r+0x1fe>
 801e48e:	89ab      	ldrh	r3, [r5, #12]
 801e490:	059a      	lsls	r2, r3, #22
 801e492:	d402      	bmi.n	801e49a <_vfiprintf_r+0x1fe>
 801e494:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 801e496:	f7ff fe21 	bl	801e0dc <__retarget_lock_release_recursive>
 801e49a:	89ab      	ldrh	r3, [r5, #12]
 801e49c:	065b      	lsls	r3, r3, #25
 801e49e:	f53f af1f 	bmi.w	801e2e0 <_vfiprintf_r+0x44>
 801e4a2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801e4a4:	e71e      	b.n	801e2e4 <_vfiprintf_r+0x48>
 801e4a6:	ab03      	add	r3, sp, #12
 801e4a8:	9300      	str	r3, [sp, #0]
 801e4aa:	462a      	mov	r2, r5
 801e4ac:	4b05      	ldr	r3, [pc, #20]	@ (801e4c4 <_vfiprintf_r+0x228>)
 801e4ae:	a904      	add	r1, sp, #16
 801e4b0:	4630      	mov	r0, r6
 801e4b2:	f000 f879 	bl	801e5a8 <_printf_i>
 801e4b6:	e7e4      	b.n	801e482 <_vfiprintf_r+0x1e6>
 801e4b8:	08020a48 	.word	0x08020a48
 801e4bc:	08020a52 	.word	0x08020a52
 801e4c0:	00000000 	.word	0x00000000
 801e4c4:	0801e277 	.word	0x0801e277
 801e4c8:	08020a4e 	.word	0x08020a4e

0801e4cc <_printf_common>:
 801e4cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e4d0:	4616      	mov	r6, r2
 801e4d2:	4698      	mov	r8, r3
 801e4d4:	688a      	ldr	r2, [r1, #8]
 801e4d6:	690b      	ldr	r3, [r1, #16]
 801e4d8:	f8dd 9020 	ldr.w	r9, [sp, #32]
 801e4dc:	4293      	cmp	r3, r2
 801e4de:	bfb8      	it	lt
 801e4e0:	4613      	movlt	r3, r2
 801e4e2:	6033      	str	r3, [r6, #0]
 801e4e4:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 801e4e8:	4607      	mov	r7, r0
 801e4ea:	460c      	mov	r4, r1
 801e4ec:	b10a      	cbz	r2, 801e4f2 <_printf_common+0x26>
 801e4ee:	3301      	adds	r3, #1
 801e4f0:	6033      	str	r3, [r6, #0]
 801e4f2:	6823      	ldr	r3, [r4, #0]
 801e4f4:	0699      	lsls	r1, r3, #26
 801e4f6:	bf42      	ittt	mi
 801e4f8:	6833      	ldrmi	r3, [r6, #0]
 801e4fa:	3302      	addmi	r3, #2
 801e4fc:	6033      	strmi	r3, [r6, #0]
 801e4fe:	6825      	ldr	r5, [r4, #0]
 801e500:	f015 0506 	ands.w	r5, r5, #6
 801e504:	d106      	bne.n	801e514 <_printf_common+0x48>
 801e506:	f104 0a19 	add.w	sl, r4, #25
 801e50a:	68e3      	ldr	r3, [r4, #12]
 801e50c:	6832      	ldr	r2, [r6, #0]
 801e50e:	1a9b      	subs	r3, r3, r2
 801e510:	42ab      	cmp	r3, r5
 801e512:	dc26      	bgt.n	801e562 <_printf_common+0x96>
 801e514:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 801e518:	6822      	ldr	r2, [r4, #0]
 801e51a:	3b00      	subs	r3, #0
 801e51c:	bf18      	it	ne
 801e51e:	2301      	movne	r3, #1
 801e520:	0692      	lsls	r2, r2, #26
 801e522:	d42b      	bmi.n	801e57c <_printf_common+0xb0>
 801e524:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 801e528:	4641      	mov	r1, r8
 801e52a:	4638      	mov	r0, r7
 801e52c:	47c8      	blx	r9
 801e52e:	3001      	adds	r0, #1
 801e530:	d01e      	beq.n	801e570 <_printf_common+0xa4>
 801e532:	6823      	ldr	r3, [r4, #0]
 801e534:	6922      	ldr	r2, [r4, #16]
 801e536:	f003 0306 	and.w	r3, r3, #6
 801e53a:	2b04      	cmp	r3, #4
 801e53c:	bf02      	ittt	eq
 801e53e:	68e5      	ldreq	r5, [r4, #12]
 801e540:	6833      	ldreq	r3, [r6, #0]
 801e542:	1aed      	subeq	r5, r5, r3
 801e544:	68a3      	ldr	r3, [r4, #8]
 801e546:	bf0c      	ite	eq
 801e548:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801e54c:	2500      	movne	r5, #0
 801e54e:	4293      	cmp	r3, r2
 801e550:	bfc4      	itt	gt
 801e552:	1a9b      	subgt	r3, r3, r2
 801e554:	18ed      	addgt	r5, r5, r3
 801e556:	2600      	movs	r6, #0
 801e558:	341a      	adds	r4, #26
 801e55a:	42b5      	cmp	r5, r6
 801e55c:	d11a      	bne.n	801e594 <_printf_common+0xc8>
 801e55e:	2000      	movs	r0, #0
 801e560:	e008      	b.n	801e574 <_printf_common+0xa8>
 801e562:	2301      	movs	r3, #1
 801e564:	4652      	mov	r2, sl
 801e566:	4641      	mov	r1, r8
 801e568:	4638      	mov	r0, r7
 801e56a:	47c8      	blx	r9
 801e56c:	3001      	adds	r0, #1
 801e56e:	d103      	bne.n	801e578 <_printf_common+0xac>
 801e570:	f04f 30ff 	mov.w	r0, #4294967295
 801e574:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e578:	3501      	adds	r5, #1
 801e57a:	e7c6      	b.n	801e50a <_printf_common+0x3e>
 801e57c:	18e1      	adds	r1, r4, r3
 801e57e:	1c5a      	adds	r2, r3, #1
 801e580:	2030      	movs	r0, #48	@ 0x30
 801e582:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 801e586:	4422      	add	r2, r4
 801e588:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 801e58c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 801e590:	3302      	adds	r3, #2
 801e592:	e7c7      	b.n	801e524 <_printf_common+0x58>
 801e594:	2301      	movs	r3, #1
 801e596:	4622      	mov	r2, r4
 801e598:	4641      	mov	r1, r8
 801e59a:	4638      	mov	r0, r7
 801e59c:	47c8      	blx	r9
 801e59e:	3001      	adds	r0, #1
 801e5a0:	d0e6      	beq.n	801e570 <_printf_common+0xa4>
 801e5a2:	3601      	adds	r6, #1
 801e5a4:	e7d9      	b.n	801e55a <_printf_common+0x8e>
	...

0801e5a8 <_printf_i>:
 801e5a8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801e5ac:	7e0f      	ldrb	r7, [r1, #24]
 801e5ae:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801e5b0:	2f78      	cmp	r7, #120	@ 0x78
 801e5b2:	4691      	mov	r9, r2
 801e5b4:	4680      	mov	r8, r0
 801e5b6:	460c      	mov	r4, r1
 801e5b8:	469a      	mov	sl, r3
 801e5ba:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 801e5be:	d807      	bhi.n	801e5d0 <_printf_i+0x28>
 801e5c0:	2f62      	cmp	r7, #98	@ 0x62
 801e5c2:	d80a      	bhi.n	801e5da <_printf_i+0x32>
 801e5c4:	2f00      	cmp	r7, #0
 801e5c6:	f000 80d2 	beq.w	801e76e <_printf_i+0x1c6>
 801e5ca:	2f58      	cmp	r7, #88	@ 0x58
 801e5cc:	f000 80b9 	beq.w	801e742 <_printf_i+0x19a>
 801e5d0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 801e5d4:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 801e5d8:	e03a      	b.n	801e650 <_printf_i+0xa8>
 801e5da:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 801e5de:	2b15      	cmp	r3, #21
 801e5e0:	d8f6      	bhi.n	801e5d0 <_printf_i+0x28>
 801e5e2:	a101      	add	r1, pc, #4	@ (adr r1, 801e5e8 <_printf_i+0x40>)
 801e5e4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801e5e8:	0801e641 	.word	0x0801e641
 801e5ec:	0801e655 	.word	0x0801e655
 801e5f0:	0801e5d1 	.word	0x0801e5d1
 801e5f4:	0801e5d1 	.word	0x0801e5d1
 801e5f8:	0801e5d1 	.word	0x0801e5d1
 801e5fc:	0801e5d1 	.word	0x0801e5d1
 801e600:	0801e655 	.word	0x0801e655
 801e604:	0801e5d1 	.word	0x0801e5d1
 801e608:	0801e5d1 	.word	0x0801e5d1
 801e60c:	0801e5d1 	.word	0x0801e5d1
 801e610:	0801e5d1 	.word	0x0801e5d1
 801e614:	0801e755 	.word	0x0801e755
 801e618:	0801e67f 	.word	0x0801e67f
 801e61c:	0801e70f 	.word	0x0801e70f
 801e620:	0801e5d1 	.word	0x0801e5d1
 801e624:	0801e5d1 	.word	0x0801e5d1
 801e628:	0801e777 	.word	0x0801e777
 801e62c:	0801e5d1 	.word	0x0801e5d1
 801e630:	0801e67f 	.word	0x0801e67f
 801e634:	0801e5d1 	.word	0x0801e5d1
 801e638:	0801e5d1 	.word	0x0801e5d1
 801e63c:	0801e717 	.word	0x0801e717
 801e640:	6833      	ldr	r3, [r6, #0]
 801e642:	1d1a      	adds	r2, r3, #4
 801e644:	681b      	ldr	r3, [r3, #0]
 801e646:	6032      	str	r2, [r6, #0]
 801e648:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 801e64c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 801e650:	2301      	movs	r3, #1
 801e652:	e09d      	b.n	801e790 <_printf_i+0x1e8>
 801e654:	6833      	ldr	r3, [r6, #0]
 801e656:	6820      	ldr	r0, [r4, #0]
 801e658:	1d19      	adds	r1, r3, #4
 801e65a:	6031      	str	r1, [r6, #0]
 801e65c:	0606      	lsls	r6, r0, #24
 801e65e:	d501      	bpl.n	801e664 <_printf_i+0xbc>
 801e660:	681d      	ldr	r5, [r3, #0]
 801e662:	e003      	b.n	801e66c <_printf_i+0xc4>
 801e664:	0645      	lsls	r5, r0, #25
 801e666:	d5fb      	bpl.n	801e660 <_printf_i+0xb8>
 801e668:	f9b3 5000 	ldrsh.w	r5, [r3]
 801e66c:	2d00      	cmp	r5, #0
 801e66e:	da03      	bge.n	801e678 <_printf_i+0xd0>
 801e670:	232d      	movs	r3, #45	@ 0x2d
 801e672:	426d      	negs	r5, r5
 801e674:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 801e678:	4859      	ldr	r0, [pc, #356]	@ (801e7e0 <_printf_i+0x238>)
 801e67a:	230a      	movs	r3, #10
 801e67c:	e011      	b.n	801e6a2 <_printf_i+0xfa>
 801e67e:	6821      	ldr	r1, [r4, #0]
 801e680:	6833      	ldr	r3, [r6, #0]
 801e682:	0608      	lsls	r0, r1, #24
 801e684:	f853 5b04 	ldr.w	r5, [r3], #4
 801e688:	d402      	bmi.n	801e690 <_printf_i+0xe8>
 801e68a:	0649      	lsls	r1, r1, #25
 801e68c:	bf48      	it	mi
 801e68e:	b2ad      	uxthmi	r5, r5
 801e690:	2f6f      	cmp	r7, #111	@ 0x6f
 801e692:	4853      	ldr	r0, [pc, #332]	@ (801e7e0 <_printf_i+0x238>)
 801e694:	6033      	str	r3, [r6, #0]
 801e696:	bf14      	ite	ne
 801e698:	230a      	movne	r3, #10
 801e69a:	2308      	moveq	r3, #8
 801e69c:	2100      	movs	r1, #0
 801e69e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 801e6a2:	6866      	ldr	r6, [r4, #4]
 801e6a4:	60a6      	str	r6, [r4, #8]
 801e6a6:	2e00      	cmp	r6, #0
 801e6a8:	bfa2      	ittt	ge
 801e6aa:	6821      	ldrge	r1, [r4, #0]
 801e6ac:	f021 0104 	bicge.w	r1, r1, #4
 801e6b0:	6021      	strge	r1, [r4, #0]
 801e6b2:	b90d      	cbnz	r5, 801e6b8 <_printf_i+0x110>
 801e6b4:	2e00      	cmp	r6, #0
 801e6b6:	d04b      	beq.n	801e750 <_printf_i+0x1a8>
 801e6b8:	4616      	mov	r6, r2
 801e6ba:	fbb5 f1f3 	udiv	r1, r5, r3
 801e6be:	fb03 5711 	mls	r7, r3, r1, r5
 801e6c2:	5dc7      	ldrb	r7, [r0, r7]
 801e6c4:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801e6c8:	462f      	mov	r7, r5
 801e6ca:	42bb      	cmp	r3, r7
 801e6cc:	460d      	mov	r5, r1
 801e6ce:	d9f4      	bls.n	801e6ba <_printf_i+0x112>
 801e6d0:	2b08      	cmp	r3, #8
 801e6d2:	d10b      	bne.n	801e6ec <_printf_i+0x144>
 801e6d4:	6823      	ldr	r3, [r4, #0]
 801e6d6:	07df      	lsls	r7, r3, #31
 801e6d8:	d508      	bpl.n	801e6ec <_printf_i+0x144>
 801e6da:	6923      	ldr	r3, [r4, #16]
 801e6dc:	6861      	ldr	r1, [r4, #4]
 801e6de:	4299      	cmp	r1, r3
 801e6e0:	bfde      	ittt	le
 801e6e2:	2330      	movle	r3, #48	@ 0x30
 801e6e4:	f806 3c01 	strble.w	r3, [r6, #-1]
 801e6e8:	f106 36ff 	addle.w	r6, r6, #4294967295
 801e6ec:	1b92      	subs	r2, r2, r6
 801e6ee:	6122      	str	r2, [r4, #16]
 801e6f0:	f8cd a000 	str.w	sl, [sp]
 801e6f4:	464b      	mov	r3, r9
 801e6f6:	aa03      	add	r2, sp, #12
 801e6f8:	4621      	mov	r1, r4
 801e6fa:	4640      	mov	r0, r8
 801e6fc:	f7ff fee6 	bl	801e4cc <_printf_common>
 801e700:	3001      	adds	r0, #1
 801e702:	d14a      	bne.n	801e79a <_printf_i+0x1f2>
 801e704:	f04f 30ff 	mov.w	r0, #4294967295
 801e708:	b004      	add	sp, #16
 801e70a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e70e:	6823      	ldr	r3, [r4, #0]
 801e710:	f043 0320 	orr.w	r3, r3, #32
 801e714:	6023      	str	r3, [r4, #0]
 801e716:	4833      	ldr	r0, [pc, #204]	@ (801e7e4 <_printf_i+0x23c>)
 801e718:	2778      	movs	r7, #120	@ 0x78
 801e71a:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 801e71e:	6823      	ldr	r3, [r4, #0]
 801e720:	6831      	ldr	r1, [r6, #0]
 801e722:	061f      	lsls	r7, r3, #24
 801e724:	f851 5b04 	ldr.w	r5, [r1], #4
 801e728:	d402      	bmi.n	801e730 <_printf_i+0x188>
 801e72a:	065f      	lsls	r7, r3, #25
 801e72c:	bf48      	it	mi
 801e72e:	b2ad      	uxthmi	r5, r5
 801e730:	6031      	str	r1, [r6, #0]
 801e732:	07d9      	lsls	r1, r3, #31
 801e734:	bf44      	itt	mi
 801e736:	f043 0320 	orrmi.w	r3, r3, #32
 801e73a:	6023      	strmi	r3, [r4, #0]
 801e73c:	b11d      	cbz	r5, 801e746 <_printf_i+0x19e>
 801e73e:	2310      	movs	r3, #16
 801e740:	e7ac      	b.n	801e69c <_printf_i+0xf4>
 801e742:	4827      	ldr	r0, [pc, #156]	@ (801e7e0 <_printf_i+0x238>)
 801e744:	e7e9      	b.n	801e71a <_printf_i+0x172>
 801e746:	6823      	ldr	r3, [r4, #0]
 801e748:	f023 0320 	bic.w	r3, r3, #32
 801e74c:	6023      	str	r3, [r4, #0]
 801e74e:	e7f6      	b.n	801e73e <_printf_i+0x196>
 801e750:	4616      	mov	r6, r2
 801e752:	e7bd      	b.n	801e6d0 <_printf_i+0x128>
 801e754:	6833      	ldr	r3, [r6, #0]
 801e756:	6825      	ldr	r5, [r4, #0]
 801e758:	6961      	ldr	r1, [r4, #20]
 801e75a:	1d18      	adds	r0, r3, #4
 801e75c:	6030      	str	r0, [r6, #0]
 801e75e:	062e      	lsls	r6, r5, #24
 801e760:	681b      	ldr	r3, [r3, #0]
 801e762:	d501      	bpl.n	801e768 <_printf_i+0x1c0>
 801e764:	6019      	str	r1, [r3, #0]
 801e766:	e002      	b.n	801e76e <_printf_i+0x1c6>
 801e768:	0668      	lsls	r0, r5, #25
 801e76a:	d5fb      	bpl.n	801e764 <_printf_i+0x1bc>
 801e76c:	8019      	strh	r1, [r3, #0]
 801e76e:	2300      	movs	r3, #0
 801e770:	6123      	str	r3, [r4, #16]
 801e772:	4616      	mov	r6, r2
 801e774:	e7bc      	b.n	801e6f0 <_printf_i+0x148>
 801e776:	6833      	ldr	r3, [r6, #0]
 801e778:	1d1a      	adds	r2, r3, #4
 801e77a:	6032      	str	r2, [r6, #0]
 801e77c:	681e      	ldr	r6, [r3, #0]
 801e77e:	6862      	ldr	r2, [r4, #4]
 801e780:	2100      	movs	r1, #0
 801e782:	4630      	mov	r0, r6
 801e784:	f7e1 fd34 	bl	80001f0 <memchr>
 801e788:	b108      	cbz	r0, 801e78e <_printf_i+0x1e6>
 801e78a:	1b80      	subs	r0, r0, r6
 801e78c:	6060      	str	r0, [r4, #4]
 801e78e:	6863      	ldr	r3, [r4, #4]
 801e790:	6123      	str	r3, [r4, #16]
 801e792:	2300      	movs	r3, #0
 801e794:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 801e798:	e7aa      	b.n	801e6f0 <_printf_i+0x148>
 801e79a:	6923      	ldr	r3, [r4, #16]
 801e79c:	4632      	mov	r2, r6
 801e79e:	4649      	mov	r1, r9
 801e7a0:	4640      	mov	r0, r8
 801e7a2:	47d0      	blx	sl
 801e7a4:	3001      	adds	r0, #1
 801e7a6:	d0ad      	beq.n	801e704 <_printf_i+0x15c>
 801e7a8:	6823      	ldr	r3, [r4, #0]
 801e7aa:	079b      	lsls	r3, r3, #30
 801e7ac:	d413      	bmi.n	801e7d6 <_printf_i+0x22e>
 801e7ae:	68e0      	ldr	r0, [r4, #12]
 801e7b0:	9b03      	ldr	r3, [sp, #12]
 801e7b2:	4298      	cmp	r0, r3
 801e7b4:	bfb8      	it	lt
 801e7b6:	4618      	movlt	r0, r3
 801e7b8:	e7a6      	b.n	801e708 <_printf_i+0x160>
 801e7ba:	2301      	movs	r3, #1
 801e7bc:	4632      	mov	r2, r6
 801e7be:	4649      	mov	r1, r9
 801e7c0:	4640      	mov	r0, r8
 801e7c2:	47d0      	blx	sl
 801e7c4:	3001      	adds	r0, #1
 801e7c6:	d09d      	beq.n	801e704 <_printf_i+0x15c>
 801e7c8:	3501      	adds	r5, #1
 801e7ca:	68e3      	ldr	r3, [r4, #12]
 801e7cc:	9903      	ldr	r1, [sp, #12]
 801e7ce:	1a5b      	subs	r3, r3, r1
 801e7d0:	42ab      	cmp	r3, r5
 801e7d2:	dcf2      	bgt.n	801e7ba <_printf_i+0x212>
 801e7d4:	e7eb      	b.n	801e7ae <_printf_i+0x206>
 801e7d6:	2500      	movs	r5, #0
 801e7d8:	f104 0619 	add.w	r6, r4, #25
 801e7dc:	e7f5      	b.n	801e7ca <_printf_i+0x222>
 801e7de:	bf00      	nop
 801e7e0:	08020a59 	.word	0x08020a59
 801e7e4:	08020a6a 	.word	0x08020a6a

0801e7e8 <__sflush_r>:
 801e7e8:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 801e7ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801e7f0:	0716      	lsls	r6, r2, #28
 801e7f2:	4605      	mov	r5, r0
 801e7f4:	460c      	mov	r4, r1
 801e7f6:	d454      	bmi.n	801e8a2 <__sflush_r+0xba>
 801e7f8:	684b      	ldr	r3, [r1, #4]
 801e7fa:	2b00      	cmp	r3, #0
 801e7fc:	dc02      	bgt.n	801e804 <__sflush_r+0x1c>
 801e7fe:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 801e800:	2b00      	cmp	r3, #0
 801e802:	dd48      	ble.n	801e896 <__sflush_r+0xae>
 801e804:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 801e806:	2e00      	cmp	r6, #0
 801e808:	d045      	beq.n	801e896 <__sflush_r+0xae>
 801e80a:	2300      	movs	r3, #0
 801e80c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 801e810:	682f      	ldr	r7, [r5, #0]
 801e812:	6a21      	ldr	r1, [r4, #32]
 801e814:	602b      	str	r3, [r5, #0]
 801e816:	d030      	beq.n	801e87a <__sflush_r+0x92>
 801e818:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 801e81a:	89a3      	ldrh	r3, [r4, #12]
 801e81c:	0759      	lsls	r1, r3, #29
 801e81e:	d505      	bpl.n	801e82c <__sflush_r+0x44>
 801e820:	6863      	ldr	r3, [r4, #4]
 801e822:	1ad2      	subs	r2, r2, r3
 801e824:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 801e826:	b10b      	cbz	r3, 801e82c <__sflush_r+0x44>
 801e828:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 801e82a:	1ad2      	subs	r2, r2, r3
 801e82c:	2300      	movs	r3, #0
 801e82e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 801e830:	6a21      	ldr	r1, [r4, #32]
 801e832:	4628      	mov	r0, r5
 801e834:	47b0      	blx	r6
 801e836:	1c43      	adds	r3, r0, #1
 801e838:	89a3      	ldrh	r3, [r4, #12]
 801e83a:	d106      	bne.n	801e84a <__sflush_r+0x62>
 801e83c:	6829      	ldr	r1, [r5, #0]
 801e83e:	291d      	cmp	r1, #29
 801e840:	d82b      	bhi.n	801e89a <__sflush_r+0xb2>
 801e842:	4a2a      	ldr	r2, [pc, #168]	@ (801e8ec <__sflush_r+0x104>)
 801e844:	410a      	asrs	r2, r1
 801e846:	07d6      	lsls	r6, r2, #31
 801e848:	d427      	bmi.n	801e89a <__sflush_r+0xb2>
 801e84a:	2200      	movs	r2, #0
 801e84c:	6062      	str	r2, [r4, #4]
 801e84e:	04d9      	lsls	r1, r3, #19
 801e850:	6922      	ldr	r2, [r4, #16]
 801e852:	6022      	str	r2, [r4, #0]
 801e854:	d504      	bpl.n	801e860 <__sflush_r+0x78>
 801e856:	1c42      	adds	r2, r0, #1
 801e858:	d101      	bne.n	801e85e <__sflush_r+0x76>
 801e85a:	682b      	ldr	r3, [r5, #0]
 801e85c:	b903      	cbnz	r3, 801e860 <__sflush_r+0x78>
 801e85e:	6560      	str	r0, [r4, #84]	@ 0x54
 801e860:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 801e862:	602f      	str	r7, [r5, #0]
 801e864:	b1b9      	cbz	r1, 801e896 <__sflush_r+0xae>
 801e866:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 801e86a:	4299      	cmp	r1, r3
 801e86c:	d002      	beq.n	801e874 <__sflush_r+0x8c>
 801e86e:	4628      	mov	r0, r5
 801e870:	f7ff fca0 	bl	801e1b4 <_free_r>
 801e874:	2300      	movs	r3, #0
 801e876:	6363      	str	r3, [r4, #52]	@ 0x34
 801e878:	e00d      	b.n	801e896 <__sflush_r+0xae>
 801e87a:	2301      	movs	r3, #1
 801e87c:	4628      	mov	r0, r5
 801e87e:	47b0      	blx	r6
 801e880:	4602      	mov	r2, r0
 801e882:	1c50      	adds	r0, r2, #1
 801e884:	d1c9      	bne.n	801e81a <__sflush_r+0x32>
 801e886:	682b      	ldr	r3, [r5, #0]
 801e888:	2b00      	cmp	r3, #0
 801e88a:	d0c6      	beq.n	801e81a <__sflush_r+0x32>
 801e88c:	2b1d      	cmp	r3, #29
 801e88e:	d001      	beq.n	801e894 <__sflush_r+0xac>
 801e890:	2b16      	cmp	r3, #22
 801e892:	d11e      	bne.n	801e8d2 <__sflush_r+0xea>
 801e894:	602f      	str	r7, [r5, #0]
 801e896:	2000      	movs	r0, #0
 801e898:	e022      	b.n	801e8e0 <__sflush_r+0xf8>
 801e89a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801e89e:	b21b      	sxth	r3, r3
 801e8a0:	e01b      	b.n	801e8da <__sflush_r+0xf2>
 801e8a2:	690f      	ldr	r7, [r1, #16]
 801e8a4:	2f00      	cmp	r7, #0
 801e8a6:	d0f6      	beq.n	801e896 <__sflush_r+0xae>
 801e8a8:	0793      	lsls	r3, r2, #30
 801e8aa:	680e      	ldr	r6, [r1, #0]
 801e8ac:	bf08      	it	eq
 801e8ae:	694b      	ldreq	r3, [r1, #20]
 801e8b0:	600f      	str	r7, [r1, #0]
 801e8b2:	bf18      	it	ne
 801e8b4:	2300      	movne	r3, #0
 801e8b6:	eba6 0807 	sub.w	r8, r6, r7
 801e8ba:	608b      	str	r3, [r1, #8]
 801e8bc:	f1b8 0f00 	cmp.w	r8, #0
 801e8c0:	dde9      	ble.n	801e896 <__sflush_r+0xae>
 801e8c2:	6a21      	ldr	r1, [r4, #32]
 801e8c4:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 801e8c6:	4643      	mov	r3, r8
 801e8c8:	463a      	mov	r2, r7
 801e8ca:	4628      	mov	r0, r5
 801e8cc:	47b0      	blx	r6
 801e8ce:	2800      	cmp	r0, #0
 801e8d0:	dc08      	bgt.n	801e8e4 <__sflush_r+0xfc>
 801e8d2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801e8d6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801e8da:	81a3      	strh	r3, [r4, #12]
 801e8dc:	f04f 30ff 	mov.w	r0, #4294967295
 801e8e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801e8e4:	4407      	add	r7, r0
 801e8e6:	eba8 0800 	sub.w	r8, r8, r0
 801e8ea:	e7e7      	b.n	801e8bc <__sflush_r+0xd4>
 801e8ec:	dfbffffe 	.word	0xdfbffffe

0801e8f0 <_fflush_r>:
 801e8f0:	b538      	push	{r3, r4, r5, lr}
 801e8f2:	690b      	ldr	r3, [r1, #16]
 801e8f4:	4605      	mov	r5, r0
 801e8f6:	460c      	mov	r4, r1
 801e8f8:	b913      	cbnz	r3, 801e900 <_fflush_r+0x10>
 801e8fa:	2500      	movs	r5, #0
 801e8fc:	4628      	mov	r0, r5
 801e8fe:	bd38      	pop	{r3, r4, r5, pc}
 801e900:	b118      	cbz	r0, 801e90a <_fflush_r+0x1a>
 801e902:	6a03      	ldr	r3, [r0, #32]
 801e904:	b90b      	cbnz	r3, 801e90a <_fflush_r+0x1a>
 801e906:	f7ff fa39 	bl	801dd7c <__sinit>
 801e90a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801e90e:	2b00      	cmp	r3, #0
 801e910:	d0f3      	beq.n	801e8fa <_fflush_r+0xa>
 801e912:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 801e914:	07d0      	lsls	r0, r2, #31
 801e916:	d404      	bmi.n	801e922 <_fflush_r+0x32>
 801e918:	0599      	lsls	r1, r3, #22
 801e91a:	d402      	bmi.n	801e922 <_fflush_r+0x32>
 801e91c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801e91e:	f7ff fbdc 	bl	801e0da <__retarget_lock_acquire_recursive>
 801e922:	4628      	mov	r0, r5
 801e924:	4621      	mov	r1, r4
 801e926:	f7ff ff5f 	bl	801e7e8 <__sflush_r>
 801e92a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801e92c:	07da      	lsls	r2, r3, #31
 801e92e:	4605      	mov	r5, r0
 801e930:	d4e4      	bmi.n	801e8fc <_fflush_r+0xc>
 801e932:	89a3      	ldrh	r3, [r4, #12]
 801e934:	059b      	lsls	r3, r3, #22
 801e936:	d4e1      	bmi.n	801e8fc <_fflush_r+0xc>
 801e938:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801e93a:	f7ff fbcf 	bl	801e0dc <__retarget_lock_release_recursive>
 801e93e:	e7dd      	b.n	801e8fc <_fflush_r+0xc>

0801e940 <__swbuf_r>:
 801e940:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801e942:	460e      	mov	r6, r1
 801e944:	4614      	mov	r4, r2
 801e946:	4605      	mov	r5, r0
 801e948:	b118      	cbz	r0, 801e952 <__swbuf_r+0x12>
 801e94a:	6a03      	ldr	r3, [r0, #32]
 801e94c:	b90b      	cbnz	r3, 801e952 <__swbuf_r+0x12>
 801e94e:	f7ff fa15 	bl	801dd7c <__sinit>
 801e952:	69a3      	ldr	r3, [r4, #24]
 801e954:	60a3      	str	r3, [r4, #8]
 801e956:	89a3      	ldrh	r3, [r4, #12]
 801e958:	071a      	lsls	r2, r3, #28
 801e95a:	d501      	bpl.n	801e960 <__swbuf_r+0x20>
 801e95c:	6923      	ldr	r3, [r4, #16]
 801e95e:	b943      	cbnz	r3, 801e972 <__swbuf_r+0x32>
 801e960:	4621      	mov	r1, r4
 801e962:	4628      	mov	r0, r5
 801e964:	f000 f82a 	bl	801e9bc <__swsetup_r>
 801e968:	b118      	cbz	r0, 801e972 <__swbuf_r+0x32>
 801e96a:	f04f 37ff 	mov.w	r7, #4294967295
 801e96e:	4638      	mov	r0, r7
 801e970:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801e972:	6823      	ldr	r3, [r4, #0]
 801e974:	6922      	ldr	r2, [r4, #16]
 801e976:	1a98      	subs	r0, r3, r2
 801e978:	6963      	ldr	r3, [r4, #20]
 801e97a:	b2f6      	uxtb	r6, r6
 801e97c:	4283      	cmp	r3, r0
 801e97e:	4637      	mov	r7, r6
 801e980:	dc05      	bgt.n	801e98e <__swbuf_r+0x4e>
 801e982:	4621      	mov	r1, r4
 801e984:	4628      	mov	r0, r5
 801e986:	f7ff ffb3 	bl	801e8f0 <_fflush_r>
 801e98a:	2800      	cmp	r0, #0
 801e98c:	d1ed      	bne.n	801e96a <__swbuf_r+0x2a>
 801e98e:	68a3      	ldr	r3, [r4, #8]
 801e990:	3b01      	subs	r3, #1
 801e992:	60a3      	str	r3, [r4, #8]
 801e994:	6823      	ldr	r3, [r4, #0]
 801e996:	1c5a      	adds	r2, r3, #1
 801e998:	6022      	str	r2, [r4, #0]
 801e99a:	701e      	strb	r6, [r3, #0]
 801e99c:	6962      	ldr	r2, [r4, #20]
 801e99e:	1c43      	adds	r3, r0, #1
 801e9a0:	429a      	cmp	r2, r3
 801e9a2:	d004      	beq.n	801e9ae <__swbuf_r+0x6e>
 801e9a4:	89a3      	ldrh	r3, [r4, #12]
 801e9a6:	07db      	lsls	r3, r3, #31
 801e9a8:	d5e1      	bpl.n	801e96e <__swbuf_r+0x2e>
 801e9aa:	2e0a      	cmp	r6, #10
 801e9ac:	d1df      	bne.n	801e96e <__swbuf_r+0x2e>
 801e9ae:	4621      	mov	r1, r4
 801e9b0:	4628      	mov	r0, r5
 801e9b2:	f7ff ff9d 	bl	801e8f0 <_fflush_r>
 801e9b6:	2800      	cmp	r0, #0
 801e9b8:	d0d9      	beq.n	801e96e <__swbuf_r+0x2e>
 801e9ba:	e7d6      	b.n	801e96a <__swbuf_r+0x2a>

0801e9bc <__swsetup_r>:
 801e9bc:	b538      	push	{r3, r4, r5, lr}
 801e9be:	4b29      	ldr	r3, [pc, #164]	@ (801ea64 <__swsetup_r+0xa8>)
 801e9c0:	4605      	mov	r5, r0
 801e9c2:	6818      	ldr	r0, [r3, #0]
 801e9c4:	460c      	mov	r4, r1
 801e9c6:	b118      	cbz	r0, 801e9d0 <__swsetup_r+0x14>
 801e9c8:	6a03      	ldr	r3, [r0, #32]
 801e9ca:	b90b      	cbnz	r3, 801e9d0 <__swsetup_r+0x14>
 801e9cc:	f7ff f9d6 	bl	801dd7c <__sinit>
 801e9d0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801e9d4:	0719      	lsls	r1, r3, #28
 801e9d6:	d422      	bmi.n	801ea1e <__swsetup_r+0x62>
 801e9d8:	06da      	lsls	r2, r3, #27
 801e9da:	d407      	bmi.n	801e9ec <__swsetup_r+0x30>
 801e9dc:	2209      	movs	r2, #9
 801e9de:	602a      	str	r2, [r5, #0]
 801e9e0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801e9e4:	81a3      	strh	r3, [r4, #12]
 801e9e6:	f04f 30ff 	mov.w	r0, #4294967295
 801e9ea:	e033      	b.n	801ea54 <__swsetup_r+0x98>
 801e9ec:	0758      	lsls	r0, r3, #29
 801e9ee:	d512      	bpl.n	801ea16 <__swsetup_r+0x5a>
 801e9f0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 801e9f2:	b141      	cbz	r1, 801ea06 <__swsetup_r+0x4a>
 801e9f4:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 801e9f8:	4299      	cmp	r1, r3
 801e9fa:	d002      	beq.n	801ea02 <__swsetup_r+0x46>
 801e9fc:	4628      	mov	r0, r5
 801e9fe:	f7ff fbd9 	bl	801e1b4 <_free_r>
 801ea02:	2300      	movs	r3, #0
 801ea04:	6363      	str	r3, [r4, #52]	@ 0x34
 801ea06:	89a3      	ldrh	r3, [r4, #12]
 801ea08:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 801ea0c:	81a3      	strh	r3, [r4, #12]
 801ea0e:	2300      	movs	r3, #0
 801ea10:	6063      	str	r3, [r4, #4]
 801ea12:	6923      	ldr	r3, [r4, #16]
 801ea14:	6023      	str	r3, [r4, #0]
 801ea16:	89a3      	ldrh	r3, [r4, #12]
 801ea18:	f043 0308 	orr.w	r3, r3, #8
 801ea1c:	81a3      	strh	r3, [r4, #12]
 801ea1e:	6923      	ldr	r3, [r4, #16]
 801ea20:	b94b      	cbnz	r3, 801ea36 <__swsetup_r+0x7a>
 801ea22:	89a3      	ldrh	r3, [r4, #12]
 801ea24:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 801ea28:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 801ea2c:	d003      	beq.n	801ea36 <__swsetup_r+0x7a>
 801ea2e:	4621      	mov	r1, r4
 801ea30:	4628      	mov	r0, r5
 801ea32:	f000 f83f 	bl	801eab4 <__smakebuf_r>
 801ea36:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801ea3a:	f013 0201 	ands.w	r2, r3, #1
 801ea3e:	d00a      	beq.n	801ea56 <__swsetup_r+0x9a>
 801ea40:	2200      	movs	r2, #0
 801ea42:	60a2      	str	r2, [r4, #8]
 801ea44:	6962      	ldr	r2, [r4, #20]
 801ea46:	4252      	negs	r2, r2
 801ea48:	61a2      	str	r2, [r4, #24]
 801ea4a:	6922      	ldr	r2, [r4, #16]
 801ea4c:	b942      	cbnz	r2, 801ea60 <__swsetup_r+0xa4>
 801ea4e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 801ea52:	d1c5      	bne.n	801e9e0 <__swsetup_r+0x24>
 801ea54:	bd38      	pop	{r3, r4, r5, pc}
 801ea56:	0799      	lsls	r1, r3, #30
 801ea58:	bf58      	it	pl
 801ea5a:	6962      	ldrpl	r2, [r4, #20]
 801ea5c:	60a2      	str	r2, [r4, #8]
 801ea5e:	e7f4      	b.n	801ea4a <__swsetup_r+0x8e>
 801ea60:	2000      	movs	r0, #0
 801ea62:	e7f7      	b.n	801ea54 <__swsetup_r+0x98>
 801ea64:	20000110 	.word	0x20000110

0801ea68 <__swhatbuf_r>:
 801ea68:	b570      	push	{r4, r5, r6, lr}
 801ea6a:	460c      	mov	r4, r1
 801ea6c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801ea70:	2900      	cmp	r1, #0
 801ea72:	b096      	sub	sp, #88	@ 0x58
 801ea74:	4615      	mov	r5, r2
 801ea76:	461e      	mov	r6, r3
 801ea78:	da0d      	bge.n	801ea96 <__swhatbuf_r+0x2e>
 801ea7a:	89a3      	ldrh	r3, [r4, #12]
 801ea7c:	f013 0f80 	tst.w	r3, #128	@ 0x80
 801ea80:	f04f 0100 	mov.w	r1, #0
 801ea84:	bf14      	ite	ne
 801ea86:	2340      	movne	r3, #64	@ 0x40
 801ea88:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 801ea8c:	2000      	movs	r0, #0
 801ea8e:	6031      	str	r1, [r6, #0]
 801ea90:	602b      	str	r3, [r5, #0]
 801ea92:	b016      	add	sp, #88	@ 0x58
 801ea94:	bd70      	pop	{r4, r5, r6, pc}
 801ea96:	466a      	mov	r2, sp
 801ea98:	f000 f848 	bl	801eb2c <_fstat_r>
 801ea9c:	2800      	cmp	r0, #0
 801ea9e:	dbec      	blt.n	801ea7a <__swhatbuf_r+0x12>
 801eaa0:	9901      	ldr	r1, [sp, #4]
 801eaa2:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 801eaa6:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 801eaaa:	4259      	negs	r1, r3
 801eaac:	4159      	adcs	r1, r3
 801eaae:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801eab2:	e7eb      	b.n	801ea8c <__swhatbuf_r+0x24>

0801eab4 <__smakebuf_r>:
 801eab4:	898b      	ldrh	r3, [r1, #12]
 801eab6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801eab8:	079d      	lsls	r5, r3, #30
 801eaba:	4606      	mov	r6, r0
 801eabc:	460c      	mov	r4, r1
 801eabe:	d507      	bpl.n	801ead0 <__smakebuf_r+0x1c>
 801eac0:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 801eac4:	6023      	str	r3, [r4, #0]
 801eac6:	6123      	str	r3, [r4, #16]
 801eac8:	2301      	movs	r3, #1
 801eaca:	6163      	str	r3, [r4, #20]
 801eacc:	b003      	add	sp, #12
 801eace:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801ead0:	ab01      	add	r3, sp, #4
 801ead2:	466a      	mov	r2, sp
 801ead4:	f7ff ffc8 	bl	801ea68 <__swhatbuf_r>
 801ead8:	9f00      	ldr	r7, [sp, #0]
 801eada:	4605      	mov	r5, r0
 801eadc:	4639      	mov	r1, r7
 801eade:	4630      	mov	r0, r6
 801eae0:	f7ff f826 	bl	801db30 <_malloc_r>
 801eae4:	b948      	cbnz	r0, 801eafa <__smakebuf_r+0x46>
 801eae6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801eaea:	059a      	lsls	r2, r3, #22
 801eaec:	d4ee      	bmi.n	801eacc <__smakebuf_r+0x18>
 801eaee:	f023 0303 	bic.w	r3, r3, #3
 801eaf2:	f043 0302 	orr.w	r3, r3, #2
 801eaf6:	81a3      	strh	r3, [r4, #12]
 801eaf8:	e7e2      	b.n	801eac0 <__smakebuf_r+0xc>
 801eafa:	89a3      	ldrh	r3, [r4, #12]
 801eafc:	6020      	str	r0, [r4, #0]
 801eafe:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 801eb02:	81a3      	strh	r3, [r4, #12]
 801eb04:	9b01      	ldr	r3, [sp, #4]
 801eb06:	e9c4 0704 	strd	r0, r7, [r4, #16]
 801eb0a:	b15b      	cbz	r3, 801eb24 <__smakebuf_r+0x70>
 801eb0c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801eb10:	4630      	mov	r0, r6
 801eb12:	f000 f81d 	bl	801eb50 <_isatty_r>
 801eb16:	b128      	cbz	r0, 801eb24 <__smakebuf_r+0x70>
 801eb18:	89a3      	ldrh	r3, [r4, #12]
 801eb1a:	f023 0303 	bic.w	r3, r3, #3
 801eb1e:	f043 0301 	orr.w	r3, r3, #1
 801eb22:	81a3      	strh	r3, [r4, #12]
 801eb24:	89a3      	ldrh	r3, [r4, #12]
 801eb26:	431d      	orrs	r5, r3
 801eb28:	81a5      	strh	r5, [r4, #12]
 801eb2a:	e7cf      	b.n	801eacc <__smakebuf_r+0x18>

0801eb2c <_fstat_r>:
 801eb2c:	b538      	push	{r3, r4, r5, lr}
 801eb2e:	4d07      	ldr	r5, [pc, #28]	@ (801eb4c <_fstat_r+0x20>)
 801eb30:	2300      	movs	r3, #0
 801eb32:	4604      	mov	r4, r0
 801eb34:	4608      	mov	r0, r1
 801eb36:	4611      	mov	r1, r2
 801eb38:	602b      	str	r3, [r5, #0]
 801eb3a:	f7e3 f96e 	bl	8001e1a <_fstat>
 801eb3e:	1c43      	adds	r3, r0, #1
 801eb40:	d102      	bne.n	801eb48 <_fstat_r+0x1c>
 801eb42:	682b      	ldr	r3, [r5, #0]
 801eb44:	b103      	cbz	r3, 801eb48 <_fstat_r+0x1c>
 801eb46:	6023      	str	r3, [r4, #0]
 801eb48:	bd38      	pop	{r3, r4, r5, pc}
 801eb4a:	bf00      	nop
 801eb4c:	2001248c 	.word	0x2001248c

0801eb50 <_isatty_r>:
 801eb50:	b538      	push	{r3, r4, r5, lr}
 801eb52:	4d06      	ldr	r5, [pc, #24]	@ (801eb6c <_isatty_r+0x1c>)
 801eb54:	2300      	movs	r3, #0
 801eb56:	4604      	mov	r4, r0
 801eb58:	4608      	mov	r0, r1
 801eb5a:	602b      	str	r3, [r5, #0]
 801eb5c:	f7e3 f962 	bl	8001e24 <_isatty>
 801eb60:	1c43      	adds	r3, r0, #1
 801eb62:	d102      	bne.n	801eb6a <_isatty_r+0x1a>
 801eb64:	682b      	ldr	r3, [r5, #0]
 801eb66:	b103      	cbz	r3, 801eb6a <_isatty_r+0x1a>
 801eb68:	6023      	str	r3, [r4, #0]
 801eb6a:	bd38      	pop	{r3, r4, r5, pc}
 801eb6c:	2001248c 	.word	0x2001248c

0801eb70 <_init>:
 801eb70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801eb72:	bf00      	nop
 801eb74:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801eb76:	bc08      	pop	{r3}
 801eb78:	469e      	mov	lr, r3
 801eb7a:	4770      	bx	lr

0801eb7c <_fini>:
 801eb7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801eb7e:	bf00      	nop
 801eb80:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801eb82:	bc08      	pop	{r3}
 801eb84:	469e      	mov	lr, r3
 801eb86:	4770      	bx	lr
