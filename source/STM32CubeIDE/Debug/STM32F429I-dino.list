
STM32F429I-dino.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001e284  080001b0  080001b0  000011b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001ce4  0801e434  0801e434  0001f434  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00000aba  08020118  08020118  00021118  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000020  08020bd4  08020bd4  00021bd4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000009a  08020bf4  08020bf4  00021bf4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00051380  08020c90  08020c90  00021c90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  08072010  08072010  00074164  2**0
                  CONTENTS
  8 .ARM          00000008  08072010  08072010  00073010  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  08072018  08072018  00074164  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  08072018  08072018  00073018  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  0807202c  0807202c  0007302c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000164  20000000  08072030  00074000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          000124a0  20000164  08072194  00074164  2**2
                  ALLOC
 14 ._user_heap_stack 00001404  20012604  08072194  00074604  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00074164  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00025800  d0000000  d0000000  00075000  2**2
                  ALLOC
 17 .debug_line   000545d7  00000000  00000000  00074194  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line_str 00000068  00000000  00000000  000c876b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_info   000ae5b7  00000000  00000000  000c87d3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_abbrev 00014c1e  00000000  00000000  00176d8a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_aranges 00003310  00000000  00000000  0018b9a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_str    0011e854  00000000  00000000  0018ecb8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_rnglists 000036e0  00000000  00000000  002ad50c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_loclists 0001aa29  00000000  00000000  002b0bec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_macro  00031941  00000000  00000000  002cb615  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .comment      000000c2  00000000  00000000  002fcf56  2**0
                  CONTENTS, READONLY
 27 .debug_frame  00008af0  00000000  00000000  002fd018  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	@ (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	@ (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000164 	.word	0x20000164
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0801e41c 	.word	0x0801e41c

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	@ (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	@ (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	@ (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000168 	.word	0x20000168
 80001ec:	0801e41c 	.word	0x0801e41c

080001f0 <strlen>:
 80001f0:	4603      	mov	r3, r0
 80001f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f6:	2a00      	cmp	r2, #0
 80001f8:	d1fb      	bne.n	80001f2 <strlen+0x2>
 80001fa:	1a18      	subs	r0, r3, r0
 80001fc:	3801      	subs	r0, #1
 80001fe:	4770      	bx	lr

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_uldivmod>:
 80002a0:	b953      	cbnz	r3, 80002b8 <__aeabi_uldivmod+0x18>
 80002a2:	b94a      	cbnz	r2, 80002b8 <__aeabi_uldivmod+0x18>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bf08      	it	eq
 80002a8:	2800      	cmpeq	r0, #0
 80002aa:	bf1c      	itt	ne
 80002ac:	f04f 31ff 	movne.w	r1, #4294967295
 80002b0:	f04f 30ff 	movne.w	r0, #4294967295
 80002b4:	f000 b96a 	b.w	800058c <__aeabi_idiv0>
 80002b8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002bc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002c0:	f000 f806 	bl	80002d0 <__udivmoddi4>
 80002c4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002c8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002cc:	b004      	add	sp, #16
 80002ce:	4770      	bx	lr

080002d0 <__udivmoddi4>:
 80002d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002d4:	9d08      	ldr	r5, [sp, #32]
 80002d6:	460c      	mov	r4, r1
 80002d8:	2b00      	cmp	r3, #0
 80002da:	d14e      	bne.n	800037a <__udivmoddi4+0xaa>
 80002dc:	4694      	mov	ip, r2
 80002de:	458c      	cmp	ip, r1
 80002e0:	4686      	mov	lr, r0
 80002e2:	fab2 f282 	clz	r2, r2
 80002e6:	d962      	bls.n	80003ae <__udivmoddi4+0xde>
 80002e8:	b14a      	cbz	r2, 80002fe <__udivmoddi4+0x2e>
 80002ea:	f1c2 0320 	rsb	r3, r2, #32
 80002ee:	4091      	lsls	r1, r2
 80002f0:	fa20 f303 	lsr.w	r3, r0, r3
 80002f4:	fa0c fc02 	lsl.w	ip, ip, r2
 80002f8:	4319      	orrs	r1, r3
 80002fa:	fa00 fe02 	lsl.w	lr, r0, r2
 80002fe:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000302:	fa1f f68c 	uxth.w	r6, ip
 8000306:	fbb1 f4f7 	udiv	r4, r1, r7
 800030a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 800030e:	fb07 1114 	mls	r1, r7, r4, r1
 8000312:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000316:	fb04 f106 	mul.w	r1, r4, r6
 800031a:	4299      	cmp	r1, r3
 800031c:	d90a      	bls.n	8000334 <__udivmoddi4+0x64>
 800031e:	eb1c 0303 	adds.w	r3, ip, r3
 8000322:	f104 30ff 	add.w	r0, r4, #4294967295
 8000326:	f080 8112 	bcs.w	800054e <__udivmoddi4+0x27e>
 800032a:	4299      	cmp	r1, r3
 800032c:	f240 810f 	bls.w	800054e <__udivmoddi4+0x27e>
 8000330:	3c02      	subs	r4, #2
 8000332:	4463      	add	r3, ip
 8000334:	1a59      	subs	r1, r3, r1
 8000336:	fa1f f38e 	uxth.w	r3, lr
 800033a:	fbb1 f0f7 	udiv	r0, r1, r7
 800033e:	fb07 1110 	mls	r1, r7, r0, r1
 8000342:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000346:	fb00 f606 	mul.w	r6, r0, r6
 800034a:	429e      	cmp	r6, r3
 800034c:	d90a      	bls.n	8000364 <__udivmoddi4+0x94>
 800034e:	eb1c 0303 	adds.w	r3, ip, r3
 8000352:	f100 31ff 	add.w	r1, r0, #4294967295
 8000356:	f080 80fc 	bcs.w	8000552 <__udivmoddi4+0x282>
 800035a:	429e      	cmp	r6, r3
 800035c:	f240 80f9 	bls.w	8000552 <__udivmoddi4+0x282>
 8000360:	4463      	add	r3, ip
 8000362:	3802      	subs	r0, #2
 8000364:	1b9b      	subs	r3, r3, r6
 8000366:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800036a:	2100      	movs	r1, #0
 800036c:	b11d      	cbz	r5, 8000376 <__udivmoddi4+0xa6>
 800036e:	40d3      	lsrs	r3, r2
 8000370:	2200      	movs	r2, #0
 8000372:	e9c5 3200 	strd	r3, r2, [r5]
 8000376:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800037a:	428b      	cmp	r3, r1
 800037c:	d905      	bls.n	800038a <__udivmoddi4+0xba>
 800037e:	b10d      	cbz	r5, 8000384 <__udivmoddi4+0xb4>
 8000380:	e9c5 0100 	strd	r0, r1, [r5]
 8000384:	2100      	movs	r1, #0
 8000386:	4608      	mov	r0, r1
 8000388:	e7f5      	b.n	8000376 <__udivmoddi4+0xa6>
 800038a:	fab3 f183 	clz	r1, r3
 800038e:	2900      	cmp	r1, #0
 8000390:	d146      	bne.n	8000420 <__udivmoddi4+0x150>
 8000392:	42a3      	cmp	r3, r4
 8000394:	d302      	bcc.n	800039c <__udivmoddi4+0xcc>
 8000396:	4290      	cmp	r0, r2
 8000398:	f0c0 80f0 	bcc.w	800057c <__udivmoddi4+0x2ac>
 800039c:	1a86      	subs	r6, r0, r2
 800039e:	eb64 0303 	sbc.w	r3, r4, r3
 80003a2:	2001      	movs	r0, #1
 80003a4:	2d00      	cmp	r5, #0
 80003a6:	d0e6      	beq.n	8000376 <__udivmoddi4+0xa6>
 80003a8:	e9c5 6300 	strd	r6, r3, [r5]
 80003ac:	e7e3      	b.n	8000376 <__udivmoddi4+0xa6>
 80003ae:	2a00      	cmp	r2, #0
 80003b0:	f040 8090 	bne.w	80004d4 <__udivmoddi4+0x204>
 80003b4:	eba1 040c 	sub.w	r4, r1, ip
 80003b8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80003bc:	fa1f f78c 	uxth.w	r7, ip
 80003c0:	2101      	movs	r1, #1
 80003c2:	fbb4 f6f8 	udiv	r6, r4, r8
 80003c6:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80003ca:	fb08 4416 	mls	r4, r8, r6, r4
 80003ce:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003d2:	fb07 f006 	mul.w	r0, r7, r6
 80003d6:	4298      	cmp	r0, r3
 80003d8:	d908      	bls.n	80003ec <__udivmoddi4+0x11c>
 80003da:	eb1c 0303 	adds.w	r3, ip, r3
 80003de:	f106 34ff 	add.w	r4, r6, #4294967295
 80003e2:	d202      	bcs.n	80003ea <__udivmoddi4+0x11a>
 80003e4:	4298      	cmp	r0, r3
 80003e6:	f200 80cd 	bhi.w	8000584 <__udivmoddi4+0x2b4>
 80003ea:	4626      	mov	r6, r4
 80003ec:	1a1c      	subs	r4, r3, r0
 80003ee:	fa1f f38e 	uxth.w	r3, lr
 80003f2:	fbb4 f0f8 	udiv	r0, r4, r8
 80003f6:	fb08 4410 	mls	r4, r8, r0, r4
 80003fa:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003fe:	fb00 f707 	mul.w	r7, r0, r7
 8000402:	429f      	cmp	r7, r3
 8000404:	d908      	bls.n	8000418 <__udivmoddi4+0x148>
 8000406:	eb1c 0303 	adds.w	r3, ip, r3
 800040a:	f100 34ff 	add.w	r4, r0, #4294967295
 800040e:	d202      	bcs.n	8000416 <__udivmoddi4+0x146>
 8000410:	429f      	cmp	r7, r3
 8000412:	f200 80b0 	bhi.w	8000576 <__udivmoddi4+0x2a6>
 8000416:	4620      	mov	r0, r4
 8000418:	1bdb      	subs	r3, r3, r7
 800041a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800041e:	e7a5      	b.n	800036c <__udivmoddi4+0x9c>
 8000420:	f1c1 0620 	rsb	r6, r1, #32
 8000424:	408b      	lsls	r3, r1
 8000426:	fa22 f706 	lsr.w	r7, r2, r6
 800042a:	431f      	orrs	r7, r3
 800042c:	fa20 fc06 	lsr.w	ip, r0, r6
 8000430:	fa04 f301 	lsl.w	r3, r4, r1
 8000434:	ea43 030c 	orr.w	r3, r3, ip
 8000438:	40f4      	lsrs	r4, r6
 800043a:	fa00 f801 	lsl.w	r8, r0, r1
 800043e:	0c38      	lsrs	r0, r7, #16
 8000440:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000444:	fbb4 fef0 	udiv	lr, r4, r0
 8000448:	fa1f fc87 	uxth.w	ip, r7
 800044c:	fb00 441e 	mls	r4, r0, lr, r4
 8000450:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000454:	fb0e f90c 	mul.w	r9, lr, ip
 8000458:	45a1      	cmp	r9, r4
 800045a:	fa02 f201 	lsl.w	r2, r2, r1
 800045e:	d90a      	bls.n	8000476 <__udivmoddi4+0x1a6>
 8000460:	193c      	adds	r4, r7, r4
 8000462:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000466:	f080 8084 	bcs.w	8000572 <__udivmoddi4+0x2a2>
 800046a:	45a1      	cmp	r9, r4
 800046c:	f240 8081 	bls.w	8000572 <__udivmoddi4+0x2a2>
 8000470:	f1ae 0e02 	sub.w	lr, lr, #2
 8000474:	443c      	add	r4, r7
 8000476:	eba4 0409 	sub.w	r4, r4, r9
 800047a:	fa1f f983 	uxth.w	r9, r3
 800047e:	fbb4 f3f0 	udiv	r3, r4, r0
 8000482:	fb00 4413 	mls	r4, r0, r3, r4
 8000486:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 800048a:	fb03 fc0c 	mul.w	ip, r3, ip
 800048e:	45a4      	cmp	ip, r4
 8000490:	d907      	bls.n	80004a2 <__udivmoddi4+0x1d2>
 8000492:	193c      	adds	r4, r7, r4
 8000494:	f103 30ff 	add.w	r0, r3, #4294967295
 8000498:	d267      	bcs.n	800056a <__udivmoddi4+0x29a>
 800049a:	45a4      	cmp	ip, r4
 800049c:	d965      	bls.n	800056a <__udivmoddi4+0x29a>
 800049e:	3b02      	subs	r3, #2
 80004a0:	443c      	add	r4, r7
 80004a2:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 80004a6:	fba0 9302 	umull	r9, r3, r0, r2
 80004aa:	eba4 040c 	sub.w	r4, r4, ip
 80004ae:	429c      	cmp	r4, r3
 80004b0:	46ce      	mov	lr, r9
 80004b2:	469c      	mov	ip, r3
 80004b4:	d351      	bcc.n	800055a <__udivmoddi4+0x28a>
 80004b6:	d04e      	beq.n	8000556 <__udivmoddi4+0x286>
 80004b8:	b155      	cbz	r5, 80004d0 <__udivmoddi4+0x200>
 80004ba:	ebb8 030e 	subs.w	r3, r8, lr
 80004be:	eb64 040c 	sbc.w	r4, r4, ip
 80004c2:	fa04 f606 	lsl.w	r6, r4, r6
 80004c6:	40cb      	lsrs	r3, r1
 80004c8:	431e      	orrs	r6, r3
 80004ca:	40cc      	lsrs	r4, r1
 80004cc:	e9c5 6400 	strd	r6, r4, [r5]
 80004d0:	2100      	movs	r1, #0
 80004d2:	e750      	b.n	8000376 <__udivmoddi4+0xa6>
 80004d4:	f1c2 0320 	rsb	r3, r2, #32
 80004d8:	fa20 f103 	lsr.w	r1, r0, r3
 80004dc:	fa0c fc02 	lsl.w	ip, ip, r2
 80004e0:	fa24 f303 	lsr.w	r3, r4, r3
 80004e4:	4094      	lsls	r4, r2
 80004e6:	430c      	orrs	r4, r1
 80004e8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80004ec:	fa00 fe02 	lsl.w	lr, r0, r2
 80004f0:	fa1f f78c 	uxth.w	r7, ip
 80004f4:	fbb3 f0f8 	udiv	r0, r3, r8
 80004f8:	fb08 3110 	mls	r1, r8, r0, r3
 80004fc:	0c23      	lsrs	r3, r4, #16
 80004fe:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000502:	fb00 f107 	mul.w	r1, r0, r7
 8000506:	4299      	cmp	r1, r3
 8000508:	d908      	bls.n	800051c <__udivmoddi4+0x24c>
 800050a:	eb1c 0303 	adds.w	r3, ip, r3
 800050e:	f100 36ff 	add.w	r6, r0, #4294967295
 8000512:	d22c      	bcs.n	800056e <__udivmoddi4+0x29e>
 8000514:	4299      	cmp	r1, r3
 8000516:	d92a      	bls.n	800056e <__udivmoddi4+0x29e>
 8000518:	3802      	subs	r0, #2
 800051a:	4463      	add	r3, ip
 800051c:	1a5b      	subs	r3, r3, r1
 800051e:	b2a4      	uxth	r4, r4
 8000520:	fbb3 f1f8 	udiv	r1, r3, r8
 8000524:	fb08 3311 	mls	r3, r8, r1, r3
 8000528:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800052c:	fb01 f307 	mul.w	r3, r1, r7
 8000530:	42a3      	cmp	r3, r4
 8000532:	d908      	bls.n	8000546 <__udivmoddi4+0x276>
 8000534:	eb1c 0404 	adds.w	r4, ip, r4
 8000538:	f101 36ff 	add.w	r6, r1, #4294967295
 800053c:	d213      	bcs.n	8000566 <__udivmoddi4+0x296>
 800053e:	42a3      	cmp	r3, r4
 8000540:	d911      	bls.n	8000566 <__udivmoddi4+0x296>
 8000542:	3902      	subs	r1, #2
 8000544:	4464      	add	r4, ip
 8000546:	1ae4      	subs	r4, r4, r3
 8000548:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800054c:	e739      	b.n	80003c2 <__udivmoddi4+0xf2>
 800054e:	4604      	mov	r4, r0
 8000550:	e6f0      	b.n	8000334 <__udivmoddi4+0x64>
 8000552:	4608      	mov	r0, r1
 8000554:	e706      	b.n	8000364 <__udivmoddi4+0x94>
 8000556:	45c8      	cmp	r8, r9
 8000558:	d2ae      	bcs.n	80004b8 <__udivmoddi4+0x1e8>
 800055a:	ebb9 0e02 	subs.w	lr, r9, r2
 800055e:	eb63 0c07 	sbc.w	ip, r3, r7
 8000562:	3801      	subs	r0, #1
 8000564:	e7a8      	b.n	80004b8 <__udivmoddi4+0x1e8>
 8000566:	4631      	mov	r1, r6
 8000568:	e7ed      	b.n	8000546 <__udivmoddi4+0x276>
 800056a:	4603      	mov	r3, r0
 800056c:	e799      	b.n	80004a2 <__udivmoddi4+0x1d2>
 800056e:	4630      	mov	r0, r6
 8000570:	e7d4      	b.n	800051c <__udivmoddi4+0x24c>
 8000572:	46d6      	mov	lr, sl
 8000574:	e77f      	b.n	8000476 <__udivmoddi4+0x1a6>
 8000576:	4463      	add	r3, ip
 8000578:	3802      	subs	r0, #2
 800057a:	e74d      	b.n	8000418 <__udivmoddi4+0x148>
 800057c:	4606      	mov	r6, r0
 800057e:	4623      	mov	r3, r4
 8000580:	4608      	mov	r0, r1
 8000582:	e70f      	b.n	80003a4 <__udivmoddi4+0xd4>
 8000584:	3e02      	subs	r6, #2
 8000586:	4463      	add	r3, ip
 8000588:	e730      	b.n	80003ec <__udivmoddi4+0x11c>
 800058a:	bf00      	nop

0800058c <__aeabi_idiv0>:
 800058c:	4770      	bx	lr
 800058e:	bf00      	nop

08000590 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000590:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80005c8 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000594:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000596:	e003      	b.n	80005a0 <LoopCopyDataInit>

08000598 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000598:	4b0c      	ldr	r3, [pc, #48]	@ (80005cc <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800059a:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 800059c:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800059e:	3104      	adds	r1, #4

080005a0 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a0:	480b      	ldr	r0, [pc, #44]	@ (80005d0 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005a2:	4b0c      	ldr	r3, [pc, #48]	@ (80005d4 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a4:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005a6:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005a8:	d3f6      	bcc.n	8000598 <CopyDataInit>
  ldr  r2, =_sbss
 80005aa:	4a0b      	ldr	r2, [pc, #44]	@ (80005d8 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005ac:	e002      	b.n	80005b4 <LoopFillZerobss>

080005ae <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005ae:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b0:	f842 3b04 	str.w	r3, [r2], #4

080005b4 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b4:	4b09      	ldr	r3, [pc, #36]	@ (80005dc <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005b6:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005b8:	d3f9      	bcc.n	80005ae <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005ba:	f003 fceb 	bl	8003f94 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005be:	f01d f815 	bl	801d5ec <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005c2:	f000 fddd 	bl	8001180 <main>
  bx  lr    
 80005c6:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005c8:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005cc:	08072030 	.word	0x08072030
  ldr  r0, =_sdata
 80005d0:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d4:	20000164 	.word	0x20000164
  ldr  r2, =_sbss
 80005d8:	20000164 	.word	0x20000164
  ldr  r3, = _ebss
 80005dc:	20012604 	.word	0x20012604

080005e0 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e0:	e7fe      	b.n	80005e0 <ADC_IRQHandler>

080005e2 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80005e2:	4770      	bx	lr

080005e4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80005e4:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 80005e6:	f000 fbcf 	bl	8000d88 <touchgfx_components_init>
    touchgfx_init();
}
 80005ea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 80005ee:	f000 bb5b 	b.w	8000ca8 <touchgfx_init>

080005f2 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 80005f2:	f000 bbcb 	b.w	8000d8c <touchgfx_taskEntry>

080005f6 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005f6:	4770      	bx	lr

080005f8 <_ZN20STM32TouchControllerD0Ev>:
 80005f8:	b510      	push	{r4, lr}
 80005fa:	2104      	movs	r1, #4
 80005fc:	4604      	mov	r4, r0
 80005fe:	f01c fca1 	bl	801cf44 <_ZdlPvj>
 8000602:	4620      	mov	r0, r4
 8000604:	bd10      	pop	{r4, pc}
	...

08000608 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000608:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 800060a:	4b0c      	ldr	r3, [pc, #48]	@ (800063c <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060c:	4c0c      	ldr	r4, [pc, #48]	@ (8000640 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 800060e:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000610:	4b0c      	ldr	r3, [pc, #48]	@ (8000644 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000612:	2082      	movs	r0, #130	@ 0x82
    TsYBoundary = YSize;
 8000614:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000616:	6863      	ldr	r3, [r4, #4]
 8000618:	4798      	blx	r3
 800061a:	f640 0311 	movw	r3, #2065	@ 0x811
 800061e:	4298      	cmp	r0, r3
 8000620:	d10a      	bne.n	8000638 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000622:	4d09      	ldr	r5, [pc, #36]	@ (8000648 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000624:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8000626:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000628:	2082      	movs	r0, #130	@ 0x82
 800062a:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 800062c:	682b      	ldr	r3, [r5, #0]
 800062e:	2082      	movs	r0, #130	@ 0x82
 8000630:	68db      	ldr	r3, [r3, #12]
 8000632:	4798      	blx	r3
 8000634:	2000      	movs	r0, #0
    }

    return ret;
}
 8000636:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000638:	2001      	movs	r0, #1
 800063a:	e7fc      	b.n	8000636 <_Z11BSP_TS_Inittt+0x2e>
 800063c:	2000018a 	.word	0x2000018a
 8000640:	2000004c 	.word	0x2000004c
 8000644:	20000188 	.word	0x20000188
 8000648:	2000018c 	.word	0x2000018c

0800064c <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 800064c:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8000650:	20f0      	movs	r0, #240	@ 0xf0
 8000652:	f7ff bfd9 	b.w	8000608 <_Z11BSP_TS_Inittt>
	...

08000658 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000658:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800065a:	4d33      	ldr	r5, [pc, #204]	@ (8000728 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 800065c:	682b      	ldr	r3, [r5, #0]
{
 800065e:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000660:	691b      	ldr	r3, [r3, #16]
 8000662:	2082      	movs	r0, #130	@ 0x82
 8000664:	4798      	blx	r3
 8000666:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000668:	2800      	cmp	r0, #0
 800066a:	d04a      	beq.n	8000702 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xaa>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 800066c:	682b      	ldr	r3, [r5, #0]
 800066e:	f10d 0206 	add.w	r2, sp, #6
 8000672:	695b      	ldr	r3, [r3, #20]
 8000674:	a901      	add	r1, sp, #4
 8000676:	2082      	movs	r0, #130	@ 0x82
 8000678:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 800067a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800067e:	f640 6274 	movw	r2, #3700	@ 0xe74
 8000682:	4293      	cmp	r3, r2
 8000684:	d93f      	bls.n	8000706 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xae>
        {
            y = 3700;
 8000686:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 800068a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800068e:	1ad2      	subs	r2, r2, r3
 8000690:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000692:	2a0a      	cmp	r2, #10
 8000694:	d93d      	bls.n	8000712 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xba>
        yr = y / 11;
 8000696:	230b      	movs	r3, #11
 8000698:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 800069c:	4b23      	ldr	r3, [pc, #140]	@ (800072c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 800069e:	881b      	ldrh	r3, [r3, #0]
 80006a0:	429a      	cmp	r2, r3
 80006a2:	d901      	bls.n	80006a8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x50>
        {
            yr = TsYBoundary - 1;
 80006a4:	3b01      	subs	r3, #1
 80006a6:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 80006a8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80006ac:	f640 31b8 	movw	r1, #3000	@ 0xbb8
 80006b0:	428b      	cmp	r3, r1
 80006b2:	d830      	bhi.n	8000716 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbe>
        {
            x = 3870 - x;
 80006b4:	f5c3 6371 	rsb	r3, r3, #3856	@ 0xf10
 80006b8:	330e      	adds	r3, #14
 80006ba:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006bc:	210f      	movs	r1, #15
 80006be:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006c2:	491b      	ldr	r1, [pc, #108]	@ (8000730 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 80006c4:	8809      	ldrh	r1, [r1, #0]
 80006c6:	428b      	cmp	r3, r1
 80006c8:	d901      	bls.n	80006ce <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x76>
        {
            xr = TsXBoundary - 1;
 80006ca:	3901      	subs	r1, #1
 80006cc:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ce:	4e19      	ldr	r6, [pc, #100]	@ (8000734 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d0:	4d19      	ldr	r5, [pc, #100]	@ (8000738 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d2:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d4:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d6:	4283      	cmp	r3, r0
 80006d8:	b281      	uxth	r1, r0
 80006da:	bf8c      	ite	hi
 80006dc:	1a59      	subhi	r1, r3, r1
 80006de:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006e0:	b2b8      	uxth	r0, r7
 80006e2:	42ba      	cmp	r2, r7
 80006e4:	bf8c      	ite	hi
 80006e6:	1a10      	subhi	r0, r2, r0
 80006e8:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ea:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006ec:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006ee:	4401      	add	r1, r0
 80006f0:	2905      	cmp	r1, #5
        {
            _x = x;
 80006f2:	bfc8      	it	gt
 80006f4:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006f6:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006f8:	bfc8      	it	gt
 80006fa:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006fc:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80006fe:	682b      	ldr	r3, [r5, #0]
 8000700:	80a3      	strh	r3, [r4, #4]
    }
}
 8000702:	b003      	add	sp, #12
 8000704:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8000706:	2bb3      	cmp	r3, #179	@ 0xb3
            y = 180;
 8000708:	bf9c      	itt	ls
 800070a:	23b4      	movls	r3, #180	@ 0xb4
 800070c:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8000710:	e7bb      	b.n	800068a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x32>
            yr = 0;
 8000712:	2200      	movs	r2, #0
 8000714:	e7c8      	b.n	80006a8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x50>
            x = 3800 - x;
 8000716:	f5c3 636d 	rsb	r3, r3, #3792	@ 0xed0
 800071a:	3308      	adds	r3, #8
 800071c:	b29b      	uxth	r3, r3
        if (xr <= 0)
 800071e:	2b0e      	cmp	r3, #14
 8000720:	d8cc      	bhi.n	80006bc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x64>
            xr = 0;
 8000722:	2300      	movs	r3, #0
 8000724:	e7d3      	b.n	80006ce <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x76>
 8000726:	bf00      	nop
 8000728:	2000018c 	.word	0x2000018c
 800072c:	20000188 	.word	0x20000188
 8000730:	2000018a 	.word	0x2000018a
 8000734:	20000184 	.word	0x20000184
 8000738:	20000180 	.word	0x20000180

0800073c <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 800073c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800073e:	4668      	mov	r0, sp
{
 8000740:	460d      	mov	r5, r1
 8000742:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000744:	f7ff ff88 	bl	8000658 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000748:	f8bd 0000 	ldrh.w	r0, [sp]
 800074c:	b130      	cbz	r0, 800075c <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 800074e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000752:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000754:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000758:	6023      	str	r3, [r4, #0]
        return true;
 800075a:	2001      	movs	r0, #1
}
 800075c:	b003      	add	sp, #12
 800075e:	bd30      	pop	{r4, r5, pc}

08000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000760:	2803      	cmp	r0, #3
 8000762:	d821      	bhi.n	80007a8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>
 8000764:	e8df f000 	tbb	[pc, r0]
 8000768:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 800076c:	4b0f      	ldr	r3, [pc, #60]	@ (80007ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 800076e:	681a      	ldr	r2, [r3, #0]
 8000770:	fab2 f282 	clz	r2, r2
 8000774:	0952      	lsrs	r2, r2, #5
 8000776:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000778:	480d      	ldr	r0, [pc, #52]	@ (80007b0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 800077a:	f004 b8b7 	b.w	80048ec <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 800077e:	4b0b      	ldr	r3, [pc, #44]	@ (80007ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000780:	685a      	ldr	r2, [r3, #4]
 8000782:	fab2 f282 	clz	r2, r2
 8000786:	0952      	lsrs	r2, r2, #5
 8000788:	2108      	movs	r1, #8
 800078a:	e7f5      	b.n	8000778 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 800078c:	4b07      	ldr	r3, [pc, #28]	@ (80007ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 800078e:	689a      	ldr	r2, [r3, #8]
 8000790:	fab2 f282 	clz	r2, r2
 8000794:	0952      	lsrs	r2, r2, #5
 8000796:	2110      	movs	r1, #16
 8000798:	e7ee      	b.n	8000778 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 800079a:	4b04      	ldr	r3, [pc, #16]	@ (80007ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 800079c:	68da      	ldr	r2, [r3, #12]
 800079e:	fab2 f282 	clz	r2, r2
 80007a2:	0952      	lsrs	r2, r2, #5
 80007a4:	2120      	movs	r1, #32
 80007a6:	e7e7      	b.n	8000778 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80007a8:	4770      	bx	lr
 80007aa:	bf00      	nop
 80007ac:	20000190 	.word	0x20000190
 80007b0:	40021000 	.word	0x40021000

080007b4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 80007b4:	2803      	cmp	r0, #3
 80007b6:	d821      	bhi.n	80007fc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>
 80007b8:	e8df f000 	tbb	[pc, r0]
 80007bc:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80007c0:	4b0f      	ldr	r3, [pc, #60]	@ (8000800 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80007c2:	681a      	ldr	r2, [r3, #0]
 80007c4:	3a00      	subs	r2, #0
 80007c6:	bf18      	it	ne
 80007c8:	2201      	movne	r2, #1
 80007ca:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80007cc:	480d      	ldr	r0, [pc, #52]	@ (8000804 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 80007ce:	f004 b88d 	b.w	80048ec <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80007d2:	4b0b      	ldr	r3, [pc, #44]	@ (8000800 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80007d4:	685a      	ldr	r2, [r3, #4]
 80007d6:	3a00      	subs	r2, #0
 80007d8:	bf18      	it	ne
 80007da:	2201      	movne	r2, #1
 80007dc:	2108      	movs	r1, #8
 80007de:	e7f5      	b.n	80007cc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 80007e0:	4b07      	ldr	r3, [pc, #28]	@ (8000800 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80007e2:	689a      	ldr	r2, [r3, #8]
 80007e4:	3a00      	subs	r2, #0
 80007e6:	bf18      	it	ne
 80007e8:	2201      	movne	r2, #1
 80007ea:	2110      	movs	r1, #16
 80007ec:	e7ee      	b.n	80007cc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80007ee:	4b04      	ldr	r3, [pc, #16]	@ (8000800 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80007f0:	68da      	ldr	r2, [r3, #12]
 80007f2:	3a00      	subs	r2, #0
 80007f4:	bf18      	it	ne
 80007f6:	2201      	movne	r2, #1
 80007f8:	2120      	movs	r1, #32
 80007fa:	e7e7      	b.n	80007cc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80007fc:	4770      	bx	lr
 80007fe:	bf00      	nop
 8000800:	20000190 	.word	0x20000190
 8000804:	40021000 	.word	0x40021000

08000808 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8000808:	2803      	cmp	r0, #3
 800080a:	d80d      	bhi.n	8000828 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>
 800080c:	e8df f000 	tbb	[pc, r0]
 8000810:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000814:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000816:	4805      	ldr	r0, [pc, #20]	@ (800082c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 8000818:	f004 b86d 	b.w	80048f6 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800081c:	2108      	movs	r1, #8
 800081e:	e7fa      	b.n	8000816 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000820:	2110      	movs	r1, #16
 8000822:	e7f8      	b.n	8000816 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000824:	2120      	movs	r1, #32
 8000826:	e7f6      	b.n	8000816 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 8000828:	4770      	bx	lr
 800082a:	bf00      	nop
 800082c:	40021000 	.word	0x40021000

08000830 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8000830:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8000832:	2803      	cmp	r0, #3
 8000834:	d811      	bhi.n	800085a <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2a>
 8000836:	e8df f000 	tbb	[pc, r0]
 800083a:	0a02      	.short	0x0a02
 800083c:	0e0c      	.short	0x0e0c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 800083e:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000840:	4807      	ldr	r0, [pc, #28]	@ (8000860 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 8000842:	f004 f84d 	bl	80048e0 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8000846:	1e43      	subs	r3, r0, #1
 8000848:	4258      	negs	r0, r3
 800084a:	4158      	adcs	r0, r3
 800084c:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800084e:	2108      	movs	r1, #8
 8000850:	e7f6      	b.n	8000840 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000852:	2110      	movs	r1, #16
 8000854:	e7f4      	b.n	8000840 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000856:	2120      	movs	r1, #32
 8000858:	e7f2      	b.n	8000840 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 800085a:	2000      	movs	r0, #0
 800085c:	e7f3      	b.n	8000846 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 800085e:	bf00      	nop
 8000860:	40021000 	.word	0x40021000

08000864 <_ZN8touchgfx4GPIO4initEv>:
{
 8000864:	b570      	push	{r4, r5, r6, lr}
 8000866:	4d08      	ldr	r5, [pc, #32]	@ (8000888 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000868:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 800086a:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 800086c:	b2e0      	uxtb	r0, r4
 800086e:	f7ff ffdf 	bl	8000830 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8000872:	b118      	cbz	r0, 800087c <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000874:	682b      	ldr	r3, [r5, #0]
 8000876:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000878:	bf18      	it	ne
 800087a:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 800087c:	3401      	adds	r4, #1
 800087e:	2c05      	cmp	r4, #5
 8000880:	f105 0504 	add.w	r5, r5, #4
 8000884:	d1f2      	bne.n	800086c <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000886:	bd70      	pop	{r4, r5, r6, pc}
 8000888:	20000190 	.word	0x20000190

0800088c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 800088c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800088e:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 8000892:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 8000896:	4770      	bx	lr

08000898 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000898:	2000      	movs	r0, #0
 800089a:	4770      	bx	lr

0800089c <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800089c:	4b03      	ldr	r3, [pc, #12]	@ (80008ac <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800089e:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80008a0:	3900      	subs	r1, #0
 80008a2:	bf18      	it	ne
 80008a4:	2101      	movne	r1, #1
 80008a6:	7019      	strb	r1, [r3, #0]
    }
 80008a8:	4770      	bx	lr
 80008aa:	bf00      	nop
 80008ac:	200119d3 	.word	0x200119d3

080008b0 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 80008b0:	2000      	movs	r0, #0
 80008b2:	4770      	bx	lr

080008b4 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80008b4:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 80008b6:	b10b      	cbz	r3, 80008bc <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 80008b8:	4608      	mov	r0, r1
 80008ba:	4718      	bx	r3
        }
    }
 80008bc:	4770      	bx	lr

080008be <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 80008be:	6840      	ldr	r0, [r0, #4]
 80008c0:	6803      	ldr	r3, [r0, #0]
 80008c2:	699b      	ldr	r3, [r3, #24]
 80008c4:	4718      	bx	r3

080008c6 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 80008c6:	4770      	bx	lr

080008c8 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 80008c8:	4770      	bx	lr

080008ca <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80008ca:	4770      	bx	lr

080008cc <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA_NOLOAD("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE_NOLOAD("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 80008cc:	b510      	push	{r4, lr}
 80008ce:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 80008d0:	f000 fb20 	bl	8000f14 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 80008d4:	6823      	ldr	r3, [r4, #0]
 80008d6:	4903      	ldr	r1, [pc, #12]	@ (80008e4 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 80008d8:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80008dc:	4620      	mov	r0, r4
}
 80008de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 80008e2:	4718      	bx	r3
 80008e4:	d0000000 	.word	0xd0000000

080008e8 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 80008e8:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 80008ea:	6803      	ldr	r3, [r0, #0]
{
 80008ec:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 80008ee:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80008f2:	4798      	blx	r3
    enableInterrupts();
 80008f4:	6823      	ldr	r3, [r4, #0]
 80008f6:	4620      	mov	r0, r4
 80008f8:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 80008fa:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80008fc:	f000 f8ec 	bl	8000ad8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8000900:	6823      	ldr	r3, [r4, #0]
 8000902:	4620      	mov	r0, r4
 8000904:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8000906:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8000908:	2029      	movs	r0, #41	@ 0x29
 800090a:	f000 ff1f 	bl	800174c <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 800090e:	f000 f8e3 	bl	8000ad8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000912:	6823      	ldr	r3, [r4, #0]
 8000914:	4620      	mov	r0, r4
 8000916:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8000918:	4798      	blx	r3
    for (;;)
 800091a:	e7f8      	b.n	800090e <_ZN11TouchGFXHAL9taskEntryEv+0x26>

0800091c <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 800091c:	b510      	push	{r4, lr}
 800091e:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000920:	f009 fa8c 	bl	8009e3c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000924:	6823      	ldr	r3, [r4, #0]
 8000926:	4620      	mov	r0, r4
 8000928:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
    }
 800092c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000930:	4718      	bx	r3

08000932 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8000932:	f000 bab5 	b.w	8000ea0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08000936 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000936:	f000 bab9 	b.w	8000eac <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

0800093a <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800093a:	f000 bad3 	b.w	8000ee4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

0800093e <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800093e:	f000 ba8d 	b.w	8000e5c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000942 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000942:	f000 badf 	b.w	8000f04 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08000946 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8000946:	f000 bad1 	b.w	8000eec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

0800094a <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800094a:	f000 ba8f 	b.w	8000e6c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

0800094e <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 800094e:	f008 bce1 	b.w	8009314 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08000952 <_ZN11TouchGFXHALD0Ev>:
 8000952:	b510      	push	{r4, lr}
 8000954:	217c      	movs	r1, #124	@ 0x7c
 8000956:	4604      	mov	r4, r0
 8000958:	f01c faf4 	bl	801cf44 <_ZdlPvj>
 800095c:	4620      	mov	r0, r4
 800095e:	bd10      	pop	{r4, pc}

08000960 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000960:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000962:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
 8000966:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 800096a:	4b0c      	ldr	r3, [pc, #48]	@ (800099c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 800096c:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800096e:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000970:	d009      	beq.n	8000986 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8000972:	b93a      	cbnz	r2, 8000984 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000974:	4a0a      	ldr	r2, [pc, #40]	@ (80009a0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000976:	490b      	ldr	r1, [pc, #44]	@ (80009a4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000978:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 800097a:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 800097c:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800097e:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000980:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000982:	701a      	strb	r2, [r3, #0]
    }
 8000984:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000986:	2a00      	cmp	r2, #0
 8000988:	d0fc      	beq.n	8000984 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800098a:	4a05      	ldr	r2, [pc, #20]	@ (80009a0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 800098c:	4905      	ldr	r1, [pc, #20]	@ (80009a4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800098e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000990:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000992:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000994:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000996:	2200      	movs	r2, #0
 8000998:	e7f3      	b.n	8000982 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 800099a:	bf00      	nop
 800099c:	200119cc 	.word	0x200119cc
 80009a0:	200119c8 	.word	0x200119c8
 80009a4:	200119ca 	.word	0x200119ca

080009a8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 80009a8:	b570      	push	{r4, r5, r6, lr}
 80009aa:	460d      	mov	r5, r1
 80009ac:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80009ae:	b935      	cbnz	r5, 80009be <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 80009b0:	4b09      	ldr	r3, [pc, #36]	@ (80009d8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 80009b2:	4a0a      	ldr	r2, [pc, #40]	@ (80009dc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 80009b4:	480a      	ldr	r0, [pc, #40]	@ (80009e0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 80009b6:	f240 21d2 	movw	r1, #722	@ 0x2d2
 80009ba:	f01c faf1 	bl	801cfa0 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80009be:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80009c2:	4b08      	ldr	r3, [pc, #32]	@ (80009e4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 80009c4:	3a00      	subs	r2, #0
 80009c6:	bf18      	it	ne
 80009c8:	2201      	movne	r2, #1
 80009ca:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 80009cc:	6803      	ldr	r3, [r0, #0]
    }
 80009ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 80009d2:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80009d6:	4718      	bx	r3
 80009d8:	0801e48c 	.word	0x0801e48c
 80009dc:	0801e4c4 	.word	0x0801e4c4
 80009e0:	0801e512 	.word	0x0801e512
 80009e4:	200119d2 	.word	0x200119d2

080009e8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80009e8:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80009ea:	4b09      	ldr	r3, [pc, #36]	@ (8000a10 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80009ec:	881b      	ldrh	r3, [r3, #0]
 80009ee:	428b      	cmp	r3, r1
 80009f0:	d803      	bhi.n	80009fa <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80009f2:	4b08      	ldr	r3, [pc, #32]	@ (8000a14 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80009f4:	881b      	ldrh	r3, [r3, #0]
 80009f6:	4293      	cmp	r3, r2
 80009f8:	d905      	bls.n	8000a06 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80009fa:	4b07      	ldr	r3, [pc, #28]	@ (8000a18 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80009fc:	4a07      	ldr	r2, [pc, #28]	@ (8000a1c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80009fe:	4808      	ldr	r0, [pc, #32]	@ (8000a20 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000a00:	219e      	movs	r1, #158	@ 0x9e
 8000a02:	f01c facd 	bl	801cfa0 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000a06:	4b07      	ldr	r3, [pc, #28]	@ (8000a24 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000a08:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000a0a:	4b07      	ldr	r3, [pc, #28]	@ (8000a28 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000a0c:	801a      	strh	r2, [r3, #0]
    }
 8000a0e:	bd08      	pop	{r3, pc}
 8000a10:	200119c8 	.word	0x200119c8
 8000a14:	200119ca 	.word	0x200119ca
 8000a18:	0801e557 	.word	0x0801e557
 8000a1c:	0801e5ba 	.word	0x0801e5ba
 8000a20:	0801e512 	.word	0x0801e512
 8000a24:	200119ce 	.word	0x200119ce
 8000a28:	200119d0 	.word	0x200119d0

08000a2c <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 8000a2c:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 8000a2e:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 8000a32:	b118      	cbz	r0, 8000a3c <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 8000a34:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 8000a36:	6803      	ldr	r3, [r0, #0]
 8000a38:	681b      	ldr	r3, [r3, #0]
 8000a3a:	4718      	bx	r3
    }
 8000a3c:	4770      	bx	lr
	...

08000a40 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000a40:	2101      	movs	r1, #1
{
 8000a42:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000a44:	2200      	movs	r2, #0
 8000a46:	4608      	mov	r0, r1
 8000a48:	f006 f8f9 	bl	8006c3e <osSemaphoreNew>
 8000a4c:	4b0a      	ldr	r3, [pc, #40]	@ (8000a78 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000a4e:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000a50:	b928      	cbnz	r0, 8000a5e <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000a52:	4b0a      	ldr	r3, [pc, #40]	@ (8000a7c <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000a54:	4a0a      	ldr	r2, [pc, #40]	@ (8000a80 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000a56:	2128      	movs	r1, #40	@ 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000a58:	480a      	ldr	r0, [pc, #40]	@ (8000a84 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000a5a:	f01c faa1 	bl	801cfa0 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000a5e:	2200      	movs	r2, #0
 8000a60:	2104      	movs	r1, #4
 8000a62:	2001      	movs	r0, #1
 8000a64:	f006 f993 	bl	8006d8e <osMessageQueueNew>
 8000a68:	4b07      	ldr	r3, [pc, #28]	@ (8000a88 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000a6a:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000a6c:	b918      	cbnz	r0, 8000a76 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000a6e:	4b07      	ldr	r3, [pc, #28]	@ (8000a8c <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000a70:	4a03      	ldr	r2, [pc, #12]	@ (8000a80 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000a72:	212c      	movs	r1, #44	@ 0x2c
 8000a74:	e7f0      	b.n	8000a58 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000a76:	bd08      	pop	{r3, pc}
 8000a78:	200001a4 	.word	0x200001a4
 8000a7c:	0801e6d8 	.word	0x0801e6d8
 8000a80:	0801e721 	.word	0x0801e721
 8000a84:	0801e750 	.word	0x0801e750
 8000a88:	200001a0 	.word	0x200001a0
 8000a8c:	0801e79f 	.word	0x0801e79f

08000a90 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000a90:	4b02      	ldr	r3, [pc, #8]	@ (8000a9c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000a92:	f04f 31ff 	mov.w	r1, #4294967295
 8000a96:	6818      	ldr	r0, [r3, #0]
 8000a98:	f006 b91b 	b.w	8006cd2 <osSemaphoreAcquire>
 8000a9c:	200001a4 	.word	0x200001a4

08000aa0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000aa0:	4b01      	ldr	r3, [pc, #4]	@ (8000aa8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000aa2:	6818      	ldr	r0, [r3, #0]
 8000aa4:	f006 b941 	b.w	8006d2a <osSemaphoreRelease>
 8000aa8:	200001a4 	.word	0x200001a4

08000aac <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000aac:	4b02      	ldr	r3, [pc, #8]	@ (8000ab8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000aae:	2100      	movs	r1, #0
 8000ab0:	6818      	ldr	r0, [r3, #0]
 8000ab2:	f006 b90e 	b.w	8006cd2 <osSemaphoreAcquire>
 8000ab6:	bf00      	nop
 8000ab8:	200001a4 	.word	0x200001a4

08000abc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 8000abc:	f7ff bff0 	b.w	8000aa0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000ac0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000ac0:	4803      	ldr	r0, [pc, #12]	@ (8000ad0 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000ac2:	4904      	ldr	r1, [pc, #16]	@ (8000ad4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000ac4:	6800      	ldr	r0, [r0, #0]
 8000ac6:	2300      	movs	r3, #0
 8000ac8:	461a      	mov	r2, r3
 8000aca:	f006 b99b 	b.w	8006e04 <osMessageQueuePut>
 8000ace:	bf00      	nop
 8000ad0:	200001a0 	.word	0x200001a0
 8000ad4:	20000004 	.word	0x20000004

08000ad8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000ad8:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000ada:	4c08      	ldr	r4, [pc, #32]	@ (8000afc <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000adc:	2300      	movs	r3, #0
 8000ade:	461a      	mov	r2, r3
 8000ae0:	a901      	add	r1, sp, #4
 8000ae2:	6820      	ldr	r0, [r4, #0]
 8000ae4:	f006 f9bf 	bl	8006e66 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000ae8:	6820      	ldr	r0, [r4, #0]
 8000aea:	f04f 33ff 	mov.w	r3, #4294967295
 8000aee:	2200      	movs	r2, #0
 8000af0:	a901      	add	r1, sp, #4
 8000af2:	f006 f9b8 	bl	8006e66 <osMessageQueueGet>
}
 8000af6:	b002      	add	sp, #8
 8000af8:	bd10      	pop	{r4, pc}
 8000afa:	bf00      	nop
 8000afc:	200001a0 	.word	0x200001a0

08000b00 <_ZN8touchgfx10OSWrappers9taskDelayEt>:
 * see HAL::setFrameRefreshStrategy(FrameRefreshStrategy s)
 * see HAL::registerTaskDelayFunction(void (*delayF)(uint16_t))
 */
void OSWrappers::taskDelay(uint16_t ms)
{
    osDelay(static_cast<uint32_t>(ms));
 8000b00:	f006 b891 	b.w	8006c26 <osDelay>

08000b04 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 8000b04:	4770      	bx	lr

08000b06 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 8000b06:	2000      	movs	r0, #0
 8000b08:	4770      	bx	lr

08000b0a <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 8000b0a:	4770      	bx	lr

08000b0c <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 8000b0c:	4770      	bx	lr

08000b0e <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 8000b0e:	2000      	movs	r0, #0
 8000b10:	4770      	bx	lr

08000b12 <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 8000b12:	4770      	bx	lr

08000b14 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 8000b14:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8000b16:	4a03      	ldr	r2, [pc, #12]	@ (8000b24 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 8000b18:	4b03      	ldr	r3, [pc, #12]	@ (8000b28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 8000b1a:	4804      	ldr	r0, [pc, #16]	@ (8000b2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 8000b1c:	2122      	movs	r1, #34	@ 0x22
 8000b1e:	f01c fa3f 	bl	801cfa0 <__assert_func>
 8000b22:	bf00      	nop
 8000b24:	0801e804 	.word	0x0801e804
 8000b28:	0801e7e1 	.word	0x0801e7e1
 8000b2c:	0801e842 	.word	0x0801e842

08000b30 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 8000b30:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8000b32:	4a03      	ldr	r2, [pc, #12]	@ (8000b40 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 8000b34:	4b03      	ldr	r3, [pc, #12]	@ (8000b44 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 8000b36:	4804      	ldr	r0, [pc, #16]	@ (8000b48 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 8000b38:	2127      	movs	r1, #39	@ 0x27
 8000b3a:	f01c fa31 	bl	801cfa0 <__assert_func>
 8000b3e:	bf00      	nop
 8000b40:	0801e88f 	.word	0x0801e88f
 8000b44:	0801e7e1 	.word	0x0801e7e1
 8000b48:	0801e842 	.word	0x0801e842

08000b4c <_ZN8STM32DMAD0Ev>:
 8000b4c:	b510      	push	{r4, lr}
 8000b4e:	2144      	movs	r1, #68	@ 0x44
 8000b50:	4604      	mov	r4, r0
 8000b52:	f01c f9f7 	bl	801cf44 <_ZdlPvj>
 8000b56:	4620      	mov	r0, r4
 8000b58:	bd10      	pop	{r4, pc}
	...

08000b5c <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000b5c:	b538      	push	{r3, r4, r5, lr}
 8000b5e:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 8000b60:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000b62:	2500      	movs	r5, #0
 8000b64:	4b06      	ldr	r3, [pc, #24]	@ (8000b80 <_ZN8STM32DMAC1Ev+0x24>)
 8000b66:	7225      	strb	r5, [r4, #8]
 8000b68:	300c      	adds	r0, #12
 8000b6a:	6060      	str	r0, [r4, #4]
 8000b6c:	7265      	strb	r5, [r4, #9]
 8000b6e:	2201      	movs	r2, #1
 8000b70:	f841 3b20 	str.w	r3, [r1], #32
 8000b74:	f009 faa0 	bl	800a0b8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000b78:	62e5      	str	r5, [r4, #44]	@ 0x2c
}
 8000b7a:	4620      	mov	r0, r4
 8000b7c:	bd38      	pop	{r3, r4, r5, pc}
 8000b7e:	bf00      	nop
 8000b80:	0801e8d8 	.word	0x0801e8d8

08000b84 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000b84:	2001      	movs	r0, #1
 8000b86:	4770      	bx	lr

08000b88 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000b88:	2040      	movs	r0, #64	@ 0x40
 8000b8a:	4770      	bx	lr

08000b8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000b8c:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
 8000b90:	3008      	adds	r0, #8
 8000b92:	4770      	bx	lr

08000b94 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000b94:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
 8000b98:	3008      	adds	r0, #8
 8000b9a:	4770      	bx	lr

08000b9c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000b9c:	2001      	movs	r0, #1
 8000b9e:	4770      	bx	lr

08000ba0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000ba0:	f44f 703e 	mov.w	r0, #760	@ 0x2f8
 8000ba4:	4770      	bx	lr

08000ba6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000ba6:	f44f 733e 	mov.w	r3, #760	@ 0x2f8
 8000baa:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000bae:	3008      	adds	r0, #8
 8000bb0:	4770      	bx	lr

08000bb2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000bb2:	f44f 733e 	mov.w	r3, #760	@ 0x2f8
 8000bb6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000bba:	3008      	adds	r0, #8
 8000bbc:	4770      	bx	lr

08000bbe <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000bbe:	2001      	movs	r0, #1
 8000bc0:	4770      	bx	lr

08000bc2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000bc2:	2010      	movs	r0, #16
 8000bc4:	4770      	bx	lr

08000bc6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000bc6:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000bca:	3008      	adds	r0, #8
 8000bcc:	4770      	bx	lr

08000bce <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000bce:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000bd2:	3008      	adds	r0, #8
 8000bd4:	4770      	bx	lr

08000bd6 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8000bd6:	4608      	mov	r0, r1
 8000bd8:	f001 bc5e 	b.w	8002498 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08000bdc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000bdc:	b510      	push	{r4, lr}
 8000bde:	4b03      	ldr	r3, [pc, #12]	@ (8000bec <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000be0:	6003      	str	r3, [r0, #0]
 8000be2:	4604      	mov	r4, r0
 8000be4:	f008 f8eb 	bl	8008dbe <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000be8:	4620      	mov	r0, r4
 8000bea:	bd10      	pop	{r4, pc}
 8000bec:	0801e990 	.word	0x0801e990

08000bf0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000bf0:	b510      	push	{r4, lr}
 8000bf2:	4604      	mov	r4, r0
 8000bf4:	f7ff fff2 	bl	8000bdc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000bf8:	4620      	mov	r0, r4
 8000bfa:	2148      	movs	r1, #72	@ 0x48
 8000bfc:	f01c f9a2 	bl	801cf44 <_ZdlPvj>
 8000c00:	4620      	mov	r0, r4
 8000c02:	bd10      	pop	{r4, pc}

08000c04 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000c04:	b510      	push	{r4, lr}
 8000c06:	4b03      	ldr	r3, [pc, #12]	@ (8000c14 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000c08:	6003      	str	r3, [r0, #0]
 8000c0a:	4604      	mov	r4, r0
 8000c0c:	f008 f8d7 	bl	8008dbe <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000c10:	4620      	mov	r0, r4
 8000c12:	bd10      	pop	{r4, pc}
 8000c14:	0801e95c 	.word	0x0801e95c

08000c18 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000c18:	b510      	push	{r4, lr}
 8000c1a:	4604      	mov	r4, r0
 8000c1c:	f7ff fff2 	bl	8000c04 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000c20:	4620      	mov	r0, r4
 8000c22:	f44f 7140 	mov.w	r1, #768	@ 0x300
 8000c26:	f01c f98d 	bl	801cf44 <_ZdlPvj>
 8000c2a:	4620      	mov	r0, r4
 8000c2c:	bd10      	pop	{r4, pc}
	...

08000c30 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000c30:	b510      	push	{r4, lr}
 8000c32:	4b03      	ldr	r3, [pc, #12]	@ (8000c40 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000c34:	6003      	str	r3, [r0, #0]
 8000c36:	4604      	mov	r4, r0
 8000c38:	f008 f8c1 	bl	8008dbe <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000c3c:	4620      	mov	r0, r4
 8000c3e:	bd10      	pop	{r4, pc}
 8000c40:	0801e928 	.word	0x0801e928

08000c44 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000c44:	b510      	push	{r4, lr}
 8000c46:	4604      	mov	r4, r0
 8000c48:	f7ff fff2 	bl	8000c30 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000c4c:	4620      	mov	r0, r4
 8000c4e:	2118      	movs	r1, #24
 8000c50:	f01c f978 	bl	801cf44 <_ZdlPvj>
 8000c54:	4620      	mov	r0, r4
 8000c56:	bd10      	pop	{r4, pc}

08000c58 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000c58:	b510      	push	{r4, lr}
 8000c5a:	4b08      	ldr	r3, [pc, #32]	@ (8000c7c <_ZN12FrontendHeapD1Ev+0x24>)
 8000c5c:	6003      	str	r3, [r0, #0]
 8000c5e:	4604      	mov	r4, r0
 8000c60:	f500 704b 	add.w	r0, r0, #812	@ 0x32c
 8000c64:	f7ff ffba 	bl	8000bdc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000c68:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 8000c6c:	f7ff ffca 	bl	8000c04 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000c70:	f104 0014 	add.w	r0, r4, #20
 8000c74:	f7ff ffdc 	bl	8000c30 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000c78:	4620      	mov	r0, r4
 8000c7a:	bd10      	pop	{r4, pc}
 8000c7c:	0801e9c4 	.word	0x0801e9c4

08000c80 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000c80:	b508      	push	{r3, lr}
 8000c82:	4802      	ldr	r0, [pc, #8]	@ (8000c8c <__tcf_0+0xc>)
 8000c84:	f7ff ffe8 	bl	8000c58 <_ZN12FrontendHeapD1Ev>
 8000c88:	bd08      	pop	{r3, pc}
 8000c8a:	bf00      	nop
 8000c8c:	200002fc 	.word	0x200002fc

08000c90 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000c90:	b510      	push	{r4, lr}
 8000c92:	4604      	mov	r4, r0
 8000c94:	f7ff ffe0 	bl	8000c58 <_ZN12FrontendHeapD1Ev>
 8000c98:	4620      	mov	r0, r4
 8000c9a:	f240 41dc 	movw	r1, #1244	@ 0x4dc
 8000c9e:	f01c f951 	bl	801cf44 <_ZdlPvj>
 8000ca2:	4620      	mov	r0, r4
 8000ca4:	bd10      	pop	{r4, pc}
	...

08000ca8 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000ca8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000cac:	f001 f948 	bl	8001f40 <_ZN14BitmapDatabase11getInstanceEv>
 8000cb0:	4605      	mov	r5, r0
 8000cb2:	f001 f949 	bl	8001f48 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000cb6:	2400      	movs	r4, #0
 8000cb8:	4601      	mov	r1, r0
 8000cba:	4623      	mov	r3, r4
 8000cbc:	4628      	mov	r0, r5
 8000cbe:	4622      	mov	r2, r4
 8000cc0:	9400      	str	r4, [sp, #0]
 8000cc2:	f00e fcab 	bl	800f61c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000cc6:	4b25      	ldr	r3, [pc, #148]	@ (8000d5c <touchgfx_init+0xb4>)
 8000cc8:	4a25      	ldr	r2, [pc, #148]	@ (8000d60 <touchgfx_init+0xb8>)
        static FrontendHeap instance;
 8000cca:	4d26      	ldr	r5, [pc, #152]	@ (8000d64 <touchgfx_init+0xbc>)
 8000ccc:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000cce:	4620      	mov	r0, r4
 8000cd0:	f002 fb86 	bl	80033e0 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000cd4:	4824      	ldr	r0, [pc, #144]	@ (8000d68 <touchgfx_init+0xc0>)
 8000cd6:	f00e fc09 	bl	800f4ec <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000cda:	682b      	ldr	r3, [r5, #0]
 8000cdc:	f3bf 8f5b 	dmb	ish
 8000ce0:	07db      	lsls	r3, r3, #31
 8000ce2:	d435      	bmi.n	8000d50 <touchgfx_init+0xa8>
 8000ce4:	4628      	mov	r0, r5
 8000ce6:	f01c f92f 	bl	801cf48 <__cxa_guard_acquire>
 8000cea:	b388      	cbz	r0, 8000d50 <touchgfx_init+0xa8>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8000cec:	4c1f      	ldr	r4, [pc, #124]	@ (8000d6c <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000cee:	4b20      	ldr	r3, [pc, #128]	@ (8000d70 <touchgfx_init+0xc8>)
 8000cf0:	6023      	str	r3, [r4, #0]
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8000cf2:	f504 7660 	add.w	r6, r4, #896	@ 0x380
        : presenterStorage(pres),
 8000cf6:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8000cfa:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
          transitionStorage(tra),
 8000cfe:	f504 774b 	add.w	r7, r4, #812	@ 0x32c
        : presenterStorage(pres),
 8000d02:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8000d04:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8000d08:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8000d0a:	6126      	str	r6, [r4, #16]
 8000d0c:	f008 f858 	bl	8008dc0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000d10:	4b18      	ldr	r3, [pc, #96]	@ (8000d74 <touchgfx_init+0xcc>)
 8000d12:	6163      	str	r3, [r4, #20]
 8000d14:	4640      	mov	r0, r8
 8000d16:	f008 f853 	bl	8008dc0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000d1a:	4b17      	ldr	r3, [pc, #92]	@ (8000d78 <touchgfx_init+0xd0>)
 8000d1c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000d1e:	4638      	mov	r0, r7
 8000d20:	f008 f84e 	bl	8008dc0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000d24:	4b15      	ldr	r3, [pc, #84]	@ (8000d7c <touchgfx_init+0xd4>)
 8000d26:	f8c4 332c 	str.w	r3, [r4, #812]	@ 0x32c
 8000d2a:	f504 705d 	add.w	r0, r4, #884	@ 0x374
 8000d2e:	f002 fbd7 	bl	80034e0 <_ZN5ModelC1Ev>
 8000d32:	4622      	mov	r2, r4
 8000d34:	f504 715d 	add.w	r1, r4, #884	@ 0x374
 8000d38:	4630      	mov	r0, r6
 8000d3a:	f002 fbc7 	bl	80034cc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000d3e:	4630      	mov	r0, r6
 8000d40:	f001 fbaa 	bl	8002498 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8000d44:	480e      	ldr	r0, [pc, #56]	@ (8000d80 <touchgfx_init+0xd8>)
 8000d46:	f01c f949 	bl	801cfdc <atexit>
 8000d4a:	4628      	mov	r0, r5
 8000d4c:	f01c f908 	bl	801cf60 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000d50:	480c      	ldr	r0, [pc, #48]	@ (8000d84 <touchgfx_init+0xdc>)
}
 8000d52:	b002      	add	sp, #8
 8000d54:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000d58:	f7ff bdb8 	b.w	80008cc <_ZN11TouchGFXHAL10initializeEv>
 8000d5c:	20011a30 	.word	0x20011a30
 8000d60:	20000224 	.word	0x20000224
 8000d64:	200002f8 	.word	0x200002f8
 8000d68:	20000008 	.word	0x20000008
 8000d6c:	200002fc 	.word	0x200002fc
 8000d70:	0801e9c4 	.word	0x0801e9c4
 8000d74:	0801e928 	.word	0x0801e928
 8000d78:	0801e95c 	.word	0x0801e95c
 8000d7c:	0801e990 	.word	0x0801e990
 8000d80:	08000c81 	.word	0x08000c81
 8000d84:	200001a8 	.word	0x200001a8

08000d88 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8000d88:	4770      	bx	lr
	...

08000d8c <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000d8c:	4801      	ldr	r0, [pc, #4]	@ (8000d94 <touchgfx_taskEntry+0x8>)
 8000d8e:	f7ff bdab 	b.w	80008e8 <_ZN11TouchGFXHAL9taskEntryEv>
 8000d92:	bf00      	nop
 8000d94:	200001a8 	.word	0x200001a8

08000d98 <_GLOBAL__sub_I_touchgfx_init>:
}
 8000d98:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8000d9a:	4e22      	ldr	r6, [pc, #136]	@ (8000e24 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8000d9c:	4c22      	ldr	r4, [pc, #136]	@ (8000e28 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 8000d9e:	4d23      	ldr	r5, [pc, #140]	@ (8000e2c <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8000da0:	4b23      	ldr	r3, [pc, #140]	@ (8000e30 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8000da2:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000da4:	4630      	mov	r0, r6
 8000da6:	f7ff fed9 	bl	8000b5c <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000daa:	4628      	mov	r0, r5
 8000dac:	f012 ff08 	bl	8013bc0 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8000db0:	4b20      	ldr	r3, [pc, #128]	@ (8000e34 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000db2:	4821      	ldr	r0, [pc, #132]	@ (8000e38 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8000db4:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8000db6:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8000db8:	f44f 7180 	mov.w	r1, #256	@ 0x100
          auxiliaryLCD(0),
 8000dbc:	e9c3 1212 	strd	r1, r2, [r3, #72]	@ 0x48
          touchSampleRate(1),
 8000dc0:	491e      	ldr	r1, [pc, #120]	@ (8000e3c <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000dc2:	861a      	strh	r2, [r3, #48]	@ 0x30
          vSyncCompensationEnabled(false),
 8000dc4:	e9c3 121a 	strd	r1, r2, [r3, #104]	@ 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8000dc8:	491d      	ldr	r1, [pc, #116]	@ (8000e40 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8000dca:	6799      	str	r1, [r3, #120]	@ 0x78
        instance = this;
 8000dcc:	491d      	ldr	r1, [pc, #116]	@ (8000e44 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 8000dce:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
        instance = this;
 8000dd2:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000dd4:	21f0      	movs	r1, #240	@ 0xf0
 8000dd6:	8001      	strh	r1, [r0, #0]
 8000dd8:	481b      	ldr	r0, [pc, #108]	@ (8000e48 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 8000dda:	665a      	str	r2, [r3, #100]	@ 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000ddc:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000dde:	481b      	ldr	r0, [pc, #108]	@ (8000e4c <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 8000de0:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000de4:	f44f 71a0 	mov.w	r1, #320	@ 0x140
          buttonController(0),
 8000de8:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8000dec:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000df0:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000df4:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
          frameBuffer0(0),
 8000df8:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
 8000dfc:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000e00:	e9c3 2214 	strd	r2, r2, [r3, #80]	@ 0x50
          lastX(0),
 8000e04:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
          cc_begin(0),
 8000e08:	675a      	str	r2, [r3, #116]	@ 0x74
          lcdRef(display),
 8000e0a:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000e0e:	8001      	strh	r1, [r0, #0]
 8000e10:	480f      	ldr	r0, [pc, #60]	@ (8000e50 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8000e12:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8000e14:	490f      	ldr	r1, [pc, #60]	@ (8000e54 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000e16:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000e18:	2201      	movs	r2, #1
 8000e1a:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000e1e:	4a0e      	ldr	r2, [pc, #56]	@ (8000e58 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000e20:	601a      	str	r2, [r3, #0]
}
 8000e22:	bd70      	pop	{r4, r5, r6, pc}
 8000e24:	200002b0 	.word	0x200002b0
 8000e28:	200002f4 	.word	0x200002f4
 8000e2c:	20000228 	.word	0x20000228
 8000e30:	0801e47c 	.word	0x0801e47c
 8000e34:	200001a8 	.word	0x200001a8
 8000e38:	200119c8 	.word	0x200119c8
 8000e3c:	01000001 	.word	0x01000001
 8000e40:	01010000 	.word	0x01010000
 8000e44:	200119d4 	.word	0x200119d4
 8000e48:	200119ce 	.word	0x200119ce
 8000e4c:	200119ca 	.word	0x200119ca
 8000e50:	200119d0 	.word	0x200119d0
 8000e54:	200119cc 	.word	0x200119cc
 8000e58:	0801e608 	.word	0x0801e608

08000e5c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000e5c:	4b02      	ldr	r3, [pc, #8]	@ (8000e68 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8000e5e:	2290      	movs	r2, #144	@ 0x90
 8000e60:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8000e64:	4770      	bx	lr
 8000e66:	bf00      	nop
 8000e68:	e000e100 	.word	0xe000e100

08000e6c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8000e6c:	4a09      	ldr	r2, [pc, #36]	@ (8000e94 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8000e6e:	490a      	ldr	r1, [pc, #40]	@ (8000e98 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8000e70:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8000e72:	480a      	ldr	r0, [pc, #40]	@ (8000e9c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8000e74:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8000e78:	3b01      	subs	r3, #1
 8000e7a:	b29b      	uxth	r3, r3
 8000e7c:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8000e7e:	6911      	ldr	r1, [r2, #16]
 8000e80:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8000e84:	3901      	subs	r1, #1
 8000e86:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8000e88:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8000e8a:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8000e8c:	f043 0301 	orr.w	r3, r3, #1
 8000e90:	6353      	str	r3, [r2, #52]	@ 0x34
}
 8000e92:	4770      	bx	lr
 8000e94:	40016800 	.word	0x40016800
 8000e98:	200007da 	.word	0x200007da
 8000e9c:	200007d8 	.word	0x200007d8

08000ea0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8000ea0:	4b01      	ldr	r3, [pc, #4]	@ (8000ea8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8000ea2:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 8000ea6:	4770      	bx	lr
 8000ea8:	40016800 	.word	0x40016800

08000eac <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8000eac:	4b02      	ldr	r3, [pc, #8]	@ (8000eb8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000eae:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8000eb0:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000eb4:	625a      	str	r2, [r3, #36]	@ 0x24
}
 8000eb6:	4770      	bx	lr
 8000eb8:	40016800 	.word	0x40016800

08000ebc <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv>:
{
    // This function only requires an implementation if single buffering
    // on LTDC display is being used (REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL).

    // The CPSR register (bits 15:0) specify current line of TFT controller.
    uint16_t curr = (uint16_t)(LTDC->CPSR & 0xffff);
 8000ebc:	4b06      	ldr	r3, [pc, #24]	@ (8000ed8 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x1c>)
 8000ebe:	6c58      	ldr	r0, [r3, #68]	@ 0x44
    uint16_t backPorchY = (uint16_t)(LTDC->BPCR & 0x7FF) + 1;
 8000ec0:	68db      	ldr	r3, [r3, #12]
 8000ec2:	f3c3 030a 	ubfx	r3, r3, #0, #11
    uint16_t curr = (uint16_t)(LTDC->CPSR & 0xffff);
 8000ec6:	b280      	uxth	r0, r0
    uint16_t backPorchY = (uint16_t)(LTDC->BPCR & 0x7FF) + 1;
 8000ec8:	3301      	adds	r3, #1

    // The semantics of the getTFTCurrentLine() function is to return a value
    // in the range of 0-totalheight. If we are still in back porch area, return 0.
    return (curr < backPorchY) ? 0 : (curr - backPorchY);
 8000eca:	4298      	cmp	r0, r3
 8000ecc:	bf26      	itte	cs
 8000ece:	1ac0      	subcs	r0, r0, r3
 8000ed0:	b280      	uxthcs	r0, r0
 8000ed2:	2000      	movcc	r0, #0
}
 8000ed4:	4770      	bx	lr
 8000ed6:	bf00      	nop
 8000ed8:	40016800 	.word	0x40016800

08000edc <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8000edc:	f008 ba56 	b.w	800938c <_ZN8touchgfx3HAL10beginFrameEv>

08000ee0 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8000ee0:	f008 ba60 	b.w	80093a4 <_ZN8touchgfx3HAL8endFrameEv>

08000ee4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:
    HAL::flushFrameBuffer(rect);
 8000ee4:	f008 ba1c 	b.w	8009320 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08000ee8 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
    return HAL::blockCopy(dest, src, numBytes);
 8000ee8:	f008 bb7d 	b.w	80095e6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08000eec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000eec:	4b04      	ldr	r3, [pc, #16]	@ (8000f00 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 8000eee:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8000ef2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000ef6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000efa:	f3bf 8f6f 	isb	sy
}
 8000efe:	4770      	bx	lr
 8000f00:	e000e100 	.word	0xe000e100

08000f04 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000f04:	4b02      	ldr	r3, [pc, #8]	@ (8000f10 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 8000f06:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8000f0a:	609a      	str	r2, [r3, #8]
}
 8000f0c:	4770      	bx	lr
 8000f0e:	bf00      	nop
 8000f10:	e000e100 	.word	0xe000e100

08000f14 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8000f14:	b570      	push	{r4, r5, r6, lr}
 8000f16:	4604      	mov	r4, r0
    HAL::initialize();
 8000f18:	f008 fa51 	bl	80093be <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8000f1c:	6823      	ldr	r3, [r4, #0]
 8000f1e:	6e5d      	ldr	r5, [r3, #100]	@ 0x64
 8000f20:	f00b faa8 	bl	800c474 <_ZN8touchgfx11Application11getInstanceEv>
 8000f24:	4601      	mov	r1, r0
 8000f26:	4620      	mov	r0, r4
 8000f28:	47a8      	blx	r5
        taskDelayFunc = delayF;
 8000f2a:	4b0e      	ldr	r3, [pc, #56]	@ (8000f64 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x50>)
 8000f2c:	63a3      	str	r3, [r4, #56]	@ 0x38
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 8000f2e:	6823      	ldr	r3, [r4, #0]
 8000f30:	4620      	mov	r0, r4
 8000f32:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8000f36:	4798      	blx	r3
 8000f38:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8000f3c:	4298      	cmp	r0, r3
 8000f3e:	d005      	beq.n	8000f4c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x38>
 8000f40:	4b09      	ldr	r3, [pc, #36]	@ (8000f68 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x54>)
 8000f42:	781b      	ldrb	r3, [r3, #0]
 8000f44:	b913      	cbnz	r3, 8000f4c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x38>
                refreshStrategy = s;
 8000f46:	2301      	movs	r3, #1
 8000f48:	f884 3048 	strb.w	r3, [r4, #72]	@ 0x48
    setFrameBufferStartAddresses((void*)0xD0000000, (void*)0, (void*)0);
 8000f4c:	6823      	ldr	r3, [r4, #0]
 8000f4e:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
 8000f52:	2300      	movs	r3, #0
 8000f54:	4620      	mov	r0, r4
 8000f56:	46ac      	mov	ip, r5
 8000f58:	461a      	mov	r2, r3
}
 8000f5a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)0xD0000000, (void*)0, (void*)0);
 8000f5e:	f04f 4150 	mov.w	r1, #3489660928	@ 0xd0000000
 8000f62:	4760      	bx	ip
 8000f64:	08000b01 	.word	0x08000b01
 8000f68:	200119d2 	.word	0x200119d2

08000f6c <HAL_LTDC_LineEventCallback>:

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8000f6c:	b510      	push	{r4, lr}
        return instance;
 8000f6e:	4c14      	ldr	r4, [pc, #80]	@ (8000fc0 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8000f70:	6823      	ldr	r3, [r4, #0]
 8000f72:	b323      	cbz	r3, 8000fbe <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8000f74:	4b13      	ldr	r3, [pc, #76]	@ (8000fc4 <HAL_LTDC_LineEventCallback+0x58>)
 8000f76:	4a14      	ldr	r2, [pc, #80]	@ (8000fc8 <HAL_LTDC_LineEventCallback+0x5c>)
 8000f78:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000f7a:	8811      	ldrh	r1, [r2, #0]
 8000f7c:	428b      	cmp	r3, r1
 8000f7e:	d113      	bne.n	8000fa8 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8000f80:	4b12      	ldr	r3, [pc, #72]	@ (8000fcc <HAL_LTDC_LineEventCallback+0x60>)
 8000f82:	8819      	ldrh	r1, [r3, #0]
 8000f84:	f004 fac4 	bl	8005510 <HAL_LTDC_ProgramLineEvent>
 8000f88:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8000f8a:	f892 306a 	ldrb.w	r3, [r2, #106]	@ 0x6a
 8000f8e:	3301      	adds	r3, #1
 8000f90:	f882 306a 	strb.w	r3, [r2, #106]	@ 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8000f94:	f7ff fd94 	bl	8000ac0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8000f98:	6820      	ldr	r0, [r4, #0]
 8000f9a:	f008 ff4f 	bl	8009e3c <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8000f9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8000fa2:	2000      	movs	r0, #0
 8000fa4:	f7ff bbdc 	b.w	8000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8000fa8:	f004 fab2 	bl	8005510 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8000fac:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8000fae:	6803      	ldr	r3, [r0, #0]
 8000fb0:	6a1b      	ldr	r3, [r3, #32]
 8000fb2:	4798      	blx	r3
    }
 8000fb4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000fb8:	2000      	movs	r0, #0
 8000fba:	f7ff bbfb 	b.w	80007b4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8000fbe:	bd10      	pop	{r4, pc}
 8000fc0:	200119d4 	.word	0x200119d4
 8000fc4:	40016800 	.word	0x40016800
 8000fc8:	200007da 	.word	0x200007da
 8000fcc:	200007d8 	.word	0x200007d8

08000fd0 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8000fd0:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;

  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8000fd2:	4b06      	ldr	r3, [pc, #24]	@ (8000fec <SPI5_Write+0x1c>)
{
 8000fd4:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8000fd8:	681b      	ldr	r3, [r3, #0]
 8000fda:	4805      	ldr	r0, [pc, #20]	@ (8000ff0 <SPI5_Write+0x20>)
 8000fdc:	2201      	movs	r2, #1
 8000fde:	f10d 0106 	add.w	r1, sp, #6
 8000fe2:	f005 f80b 	bl	8005ffc <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 8000fe6:	b003      	add	sp, #12
 8000fe8:	f85d fb04 	ldr.w	pc, [sp], #4
 8000fec:	2000000c 	.word	0x2000000c
 8000ff0:	20000874 	.word	0x20000874

08000ff4 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8000ff4:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
	for(;;)
	{
		HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 8000ff6:	4c05      	ldr	r4, [pc, #20]	@ (800100c <StartDefaultTask+0x18>)
 8000ff8:	4620      	mov	r0, r4
 8000ffa:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000ffe:	f003 fc7a 	bl	80048f6 <HAL_GPIO_TogglePin>
		osDelay(500);
 8001002:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 8001006:	f005 fe0e 	bl	8006c26 <osDelay>
	for(;;)
 800100a:	e7f5      	b.n	8000ff8 <StartDefaultTask+0x4>
 800100c:	40021800 	.word	0x40021800

08001010 <start_hardware_polling_task>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_start_hardware_polling_task */
void start_hardware_polling_task(void *argument)
{
 8001010:	b573      	push	{r0, r1, r4, r5, r6, lr}
  /* USER CODE BEGIN start_hardware_polling_task */
  /* Infinite loop */
	uint8_t data[] = {0, 0, 0, 0};
	uint16_t JoystickX, JoystickY;
	uint32_t Joystick;
  uint16_t buttonPressed = 1;
 8001012:	2301      	movs	r3, #1
		{
		  osMessageQueuePut(buttonPressQueueHandle, &buttonPressed, 0, 10);
      osDelay(200); // Debounce delay
		}

		HAL_ADC_Start(&hadc1);
 8001014:	4e1c      	ldr	r6, [pc, #112]	@ (8001088 <start_hardware_polling_task+0x78>)
		HAL_ADC_Start(&hadc2);
 8001016:	4d1d      	ldr	r5, [pc, #116]	@ (800108c <start_hardware_polling_task+0x7c>)
  uint16_t buttonPressed = 1;
 8001018:	f8ad 3002 	strh.w	r3, [sp, #2]
		if (HAL_GPIO_ReadPin(B1_GPIO_Port, B1_Pin) == GPIO_PIN_SET)
 800101c:	481c      	ldr	r0, [pc, #112]	@ (8001090 <start_hardware_polling_task+0x80>)
 800101e:	2101      	movs	r1, #1
 8001020:	f003 fc5e 	bl	80048e0 <HAL_GPIO_ReadPin>
 8001024:	2801      	cmp	r0, #1
 8001026:	d10a      	bne.n	800103e <start_hardware_polling_task+0x2e>
		  osMessageQueuePut(buttonPressQueueHandle, &buttonPressed, 0, 10);
 8001028:	481a      	ldr	r0, [pc, #104]	@ (8001094 <start_hardware_polling_task+0x84>)
 800102a:	230a      	movs	r3, #10
 800102c:	6800      	ldr	r0, [r0, #0]
 800102e:	2200      	movs	r2, #0
 8001030:	f10d 0102 	add.w	r1, sp, #2
 8001034:	f005 fee6 	bl	8006e04 <osMessageQueuePut>
      osDelay(200); // Debounce delay
 8001038:	20c8      	movs	r0, #200	@ 0xc8
 800103a:	f005 fdf4 	bl	8006c26 <osDelay>
		HAL_ADC_Start(&hadc1);
 800103e:	4630      	mov	r0, r6
 8001040:	f003 f89c 	bl	800417c <HAL_ADC_Start>
		HAL_ADC_Start(&hadc2);
 8001044:	4628      	mov	r0, r5
 8001046:	f003 f899 	bl	800417c <HAL_ADC_Start>
		HAL_ADC_PollForConversion(&hadc1, 1);
 800104a:	2101      	movs	r1, #1
 800104c:	4630      	mov	r0, r6
 800104e:	f003 f913 	bl	8004278 <HAL_ADC_PollForConversion>
		HAL_ADC_PollForConversion(&hadc2, 1);
 8001052:	2101      	movs	r1, #1
 8001054:	4628      	mov	r0, r5
 8001056:	f003 f90f 	bl	8004278 <HAL_ADC_PollForConversion>
		JoystickX = HAL_ADC_GetValue(&hadc1);
 800105a:	4630      	mov	r0, r6
 800105c:	f003 f95f 	bl	800431e <HAL_ADC_GetValue>
 8001060:	4604      	mov	r4, r0
		JoystickY = HAL_ADC_GetValue(&hadc2);
 8001062:	4628      	mov	r0, r5
 8001064:	f003 f95b 	bl	800431e <HAL_ADC_GetValue>
		Joystick = (JoystickY << 16) | JoystickX;
 8001068:	b2a4      	uxth	r4, r4
 800106a:	ea44 4400 	orr.w	r4, r4, r0, lsl #16
		osMessageQueuePut(joyStickQueueHandle, &Joystick, 0, 10);
 800106e:	480a      	ldr	r0, [pc, #40]	@ (8001098 <start_hardware_polling_task+0x88>)
		Joystick = (JoystickY << 16) | JoystickX;
 8001070:	9401      	str	r4, [sp, #4]
		osMessageQueuePut(joyStickQueueHandle, &Joystick, 0, 10);
 8001072:	230a      	movs	r3, #10
 8001074:	2200      	movs	r2, #0
 8001076:	a901      	add	r1, sp, #4
 8001078:	6800      	ldr	r0, [r0, #0]
 800107a:	f005 fec3 	bl	8006e04 <osMessageQueuePut>
		osDelay(100);
 800107e:	2064      	movs	r0, #100	@ 0x64
 8001080:	f005 fdd1 	bl	8006c26 <osDelay>
		if (HAL_GPIO_ReadPin(B1_GPIO_Port, B1_Pin) == GPIO_PIN_SET)
 8001084:	e7ca      	b.n	800101c <start_hardware_polling_task+0xc>
 8001086:	bf00      	nop
 8001088:	20000a58 	.word	0x20000a58
 800108c:	20000a10 	.word	0x20000a10
 8001090:	40020000 	.word	0x40020000
 8001094:	200007e0 	.word	0x200007e0
 8001098:	200007e4 	.word	0x200007e4

0800109c <start_uart_task>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_start_uart_task */
void start_uart_task(void *argument)
{
 800109c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  /* USER CODE BEGIN start_uart_task */
  /* Infinite loop */
  for(;;)
  {
	  char mess[20];
	  if (osMessageQueueGetCount(joyStickQueueHandle) > 0)
 800109e:	4c0f      	ldr	r4, [pc, #60]	@ (80010dc <start_uart_task+0x40>)
	  {
		  uint32_t x;
		  osMessageQueueGet(joyStickQueueHandle, &x, 0, 10);
		  sprintf(mess, "%3d, %3d\n", x>>16, x&0xFFFF);
 80010a0:	4e0f      	ldr	r6, [pc, #60]	@ (80010e0 <start_uart_task+0x44>)
		  HAL_UART_Transmit(&huart1, mess, strlen(mess), 10);
 80010a2:	4d10      	ldr	r5, [pc, #64]	@ (80010e4 <start_uart_task+0x48>)
	  if (osMessageQueueGetCount(joyStickQueueHandle) > 0)
 80010a4:	6820      	ldr	r0, [r4, #0]
 80010a6:	f005 ff0e 	bl	8006ec6 <osMessageQueueGetCount>
 80010aa:	2800      	cmp	r0, #0
 80010ac:	d0fa      	beq.n	80010a4 <start_uart_task+0x8>
		  osMessageQueueGet(joyStickQueueHandle, &x, 0, 10);
 80010ae:	4669      	mov	r1, sp
 80010b0:	6820      	ldr	r0, [r4, #0]
 80010b2:	230a      	movs	r3, #10
 80010b4:	2200      	movs	r2, #0
 80010b6:	f005 fed6 	bl	8006e66 <osMessageQueueGet>
		  sprintf(mess, "%3d, %3d\n", x>>16, x&0xFFFF);
 80010ba:	9a00      	ldr	r2, [sp, #0]
 80010bc:	4631      	mov	r1, r6
 80010be:	b293      	uxth	r3, r2
 80010c0:	a801      	add	r0, sp, #4
 80010c2:	0c12      	lsrs	r2, r2, #16
 80010c4:	f01c f930 	bl	801d328 <siprintf>
		  HAL_UART_Transmit(&huart1, mess, strlen(mess), 10);
 80010c8:	a801      	add	r0, sp, #4
 80010ca:	f7ff f891 	bl	80001f0 <strlen>
 80010ce:	230a      	movs	r3, #10
 80010d0:	b282      	uxth	r2, r0
 80010d2:	a901      	add	r1, sp, #4
 80010d4:	4628      	mov	r0, r5
 80010d6:	f005 fc3c 	bl	8006952 <HAL_UART_Transmit>
  {
 80010da:	e7e3      	b.n	80010a4 <start_uart_task+0x8>
 80010dc:	200007e4 	.word	0x200007e4
 80010e0:	0801e9d0 	.word	0x0801e9d0
 80010e4:	2000082c 	.word	0x2000082c

080010e8 <SystemClock_Config>:
{
 80010e8:	b530      	push	{r4, r5, lr}
 80010ea:	b095      	sub	sp, #84	@ 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80010ec:	2210      	movs	r2, #16
 80010ee:	2100      	movs	r1, #0
 80010f0:	a80a      	add	r0, sp, #40	@ 0x28
 80010f2:	f01c f97c 	bl	801d3ee <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80010f6:	2214      	movs	r2, #20
 80010f8:	2100      	movs	r1, #0
 80010fa:	a803      	add	r0, sp, #12
 80010fc:	f01c f977 	bl	801d3ee <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001100:	2400      	movs	r4, #0
 8001102:	4b1d      	ldr	r3, [pc, #116]	@ (8001178 <SystemClock_Config+0x90>)
 8001104:	9401      	str	r4, [sp, #4]
 8001106:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001108:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 800110c:	641a      	str	r2, [r3, #64]	@ 0x40
 800110e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001110:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001114:	9301      	str	r3, [sp, #4]
 8001116:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001118:	4b18      	ldr	r3, [pc, #96]	@ (800117c <SystemClock_Config+0x94>)
 800111a:	9402      	str	r4, [sp, #8]
 800111c:	681a      	ldr	r2, [r3, #0]
 800111e:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 8001122:	601a      	str	r2, [r3, #0]
 8001124:	681b      	ldr	r3, [r3, #0]
 8001126:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 800112a:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800112c:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800112e:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001130:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8001134:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001138:	2502      	movs	r5, #2
 800113a:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 800113e:	e9cd 530e 	strd	r5, r3, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001142:	2108      	movs	r1, #8
 8001144:	f44f 73a8 	mov.w	r3, #336	@ 0x150
 8001148:	e9cd 1310 	strd	r1, r3, [sp, #64]	@ 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800114c:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 4;
 800114e:	2304      	movs	r3, #4
 8001150:	9313      	str	r3, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001152:	9512      	str	r5, [sp, #72]	@ 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001154:	f004 f9fa 	bl	800554c <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001158:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800115a:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800115e:	f44f 50a0 	mov.w	r0, #5120	@ 0x1400
 8001162:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001166:	e9cd 0306 	strd	r0, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800116a:	2105      	movs	r1, #5
 800116c:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800116e:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001170:	f004 fbc8 	bl	8005904 <HAL_RCC_ClockConfig>
}
 8001174:	b015      	add	sp, #84	@ 0x54
 8001176:	bd30      	pop	{r4, r5, pc}
 8001178:	40023800 	.word	0x40023800
 800117c:	40007000 	.word	0x40007000

08001180 <main>:
{
 8001180:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001184:	b09b      	sub	sp, #108	@ 0x6c
  HAL_Init();
 8001186:	f002 ff13 	bl	8003fb0 <HAL_Init>
  SystemClock_Config();
 800118a:	f7ff ffad 	bl	80010e8 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800118e:	2214      	movs	r2, #20
 8001190:	2100      	movs	r1, #0
 8001192:	a80d      	add	r0, sp, #52	@ 0x34
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001194:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001196:	f01c f92a 	bl	801d3ee <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800119a:	4bc7      	ldr	r3, [pc, #796]	@ (80014b8 <main+0x338>)
 800119c:	9400      	str	r4, [sp, #0]
 800119e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80011a0:	48c6      	ldr	r0, [pc, #792]	@ (80014bc <main+0x33c>)
  hi2c3.Instance = I2C3;
 80011a2:	4ec7      	ldr	r6, [pc, #796]	@ (80014c0 <main+0x340>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80011a4:	f042 0210 	orr.w	r2, r2, #16
 80011a8:	631a      	str	r2, [r3, #48]	@ 0x30
 80011aa:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80011ac:	f002 0210 	and.w	r2, r2, #16
 80011b0:	9200      	str	r2, [sp, #0]
 80011b2:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80011b4:	9401      	str	r4, [sp, #4]
 80011b6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80011b8:	f042 0220 	orr.w	r2, r2, #32
 80011bc:	631a      	str	r2, [r3, #48]	@ 0x30
 80011be:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80011c0:	f002 0220 	and.w	r2, r2, #32
 80011c4:	9201      	str	r2, [sp, #4]
 80011c6:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80011c8:	9402      	str	r4, [sp, #8]
 80011ca:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80011cc:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 80011d0:	631a      	str	r2, [r3, #48]	@ 0x30
 80011d2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80011d4:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 80011d8:	9202      	str	r2, [sp, #8]
 80011da:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80011dc:	9403      	str	r4, [sp, #12]
 80011de:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80011e0:	f042 0204 	orr.w	r2, r2, #4
 80011e4:	631a      	str	r2, [r3, #48]	@ 0x30
 80011e6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80011e8:	f002 0204 	and.w	r2, r2, #4
 80011ec:	9203      	str	r2, [sp, #12]
 80011ee:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80011f0:	9404      	str	r4, [sp, #16]
 80011f2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80011f4:	f042 0201 	orr.w	r2, r2, #1
 80011f8:	631a      	str	r2, [r3, #48]	@ 0x30
 80011fa:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80011fc:	f002 0201 	and.w	r2, r2, #1
 8001200:	9204      	str	r2, [sp, #16]
 8001202:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001204:	9405      	str	r4, [sp, #20]
 8001206:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001208:	f042 0202 	orr.w	r2, r2, #2
 800120c:	631a      	str	r2, [r3, #48]	@ 0x30
 800120e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001210:	f002 0202 	and.w	r2, r2, #2
 8001214:	9205      	str	r2, [sp, #20]
 8001216:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001218:	9406      	str	r4, [sp, #24]
 800121a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800121c:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8001220:	631a      	str	r2, [r3, #48]	@ 0x30
 8001222:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001224:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 8001228:	9206      	str	r2, [sp, #24]
 800122a:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800122c:	9407      	str	r4, [sp, #28]
 800122e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001230:	f042 0208 	orr.w	r2, r2, #8
 8001234:	631a      	str	r2, [r3, #48]	@ 0x30
 8001236:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001238:	f003 0308 	and.w	r3, r3, #8
 800123c:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 800123e:	4622      	mov	r2, r4
 8001240:	213c      	movs	r1, #60	@ 0x3c
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001242:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001244:	f003 fb52 	bl	80048ec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001248:	489e      	ldr	r0, [pc, #632]	@ (80014c4 <main+0x344>)
 800124a:	4622      	mov	r2, r4
 800124c:	2104      	movs	r1, #4
 800124e:	f003 fb4d 	bl	80048ec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001252:	489d      	ldr	r0, [pc, #628]	@ (80014c8 <main+0x348>)
 8001254:	4622      	mov	r2, r4
 8001256:	f44f 5140 	mov.w	r1, #12288	@ 0x3000
 800125a:	f003 fb47 	bl	80048ec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 800125e:	4622      	mov	r2, r4
 8001260:	489a      	ldr	r0, [pc, #616]	@ (80014cc <main+0x34c>)
 8001262:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001266:	2501      	movs	r5, #1
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 8001268:	f003 fb40 	bl	80048ec <HAL_GPIO_WritePin>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800126c:	f04f 0a03 	mov.w	sl, #3
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001270:	233c      	movs	r3, #60	@ 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001272:	4892      	ldr	r0, [pc, #584]	@ (80014bc <main+0x33c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001274:	f8cd a040 	str.w	sl, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001278:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800127a:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 800127c:	f04f 0804 	mov.w	r8, #4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001280:	e9cd 350d 	strd	r3, r5, [sp, #52]	@ 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001284:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001286:	f003 fa47 	bl	8004718 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800128a:	488e      	ldr	r0, [pc, #568]	@ (80014c4 <main+0x344>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800128c:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800128e:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001290:	e9cd 850d 	strd	r8, r5, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001294:	9710      	str	r7, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001296:	f003 fa3f 	bl	8004718 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 800129a:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800129e:	488a      	ldr	r0, [pc, #552]	@ (80014c8 <main+0x348>)
 80012a0:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80012a2:	e9cd 350d 	strd	r3, r5, [sp, #52]	@ 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_13;
 80012a6:	f44f 5b00 	mov.w	fp, #8192	@ 0x2000
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80012aa:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80012ae:	f003 fa33 	bl	8004718 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80012b2:	a90d      	add	r1, sp, #52	@ 0x34
 80012b4:	4885      	ldr	r0, [pc, #532]	@ (80014cc <main+0x34c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80012b6:	e9cd b50d 	strd	fp, r5, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80012ba:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80012be:	f003 fa2b 	bl	8004718 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 80012c2:	4883      	ldr	r0, [pc, #524]	@ (80014d0 <main+0x350>)
 80012c4:	4b83      	ldr	r3, [pc, #524]	@ (80014d4 <main+0x354>)
 80012c6:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80012c8:	f003 f91a 	bl	8004500 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 80012cc:	4a82      	ldr	r2, [pc, #520]	@ (80014d8 <main+0x358>)
 80012ce:	4b83      	ldr	r3, [pc, #524]	@ (80014dc <main+0x35c>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80012d0:	6234      	str	r4, [r6, #32]
  hi2c3.Init.ClockSpeed = 100000;
 80012d2:	e9c6 2300 	strd	r2, r3, [r6]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80012d6:	4630      	mov	r0, r6
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80012d8:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80012dc:	e9c6 3404 	strd	r3, r4, [r6, #16]
  hi2c3.Init.OwnAddress1 = 0;
 80012e0:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80012e4:	e9c6 4406 	strd	r4, r4, [r6, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80012e8:	f003 fd0e 	bl	8004d08 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 80012ec:	2110      	movs	r1, #16
 80012ee:	4630      	mov	r0, r6
 80012f0:	f003 ff52 	bl	8005198 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 80012f4:	4621      	mov	r1, r4
 80012f6:	4630      	mov	r0, r6
 80012f8:	f003 ff6d 	bl	80051d6 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 80012fc:	4878      	ldr	r0, [pc, #480]	@ (80014e0 <main+0x360>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80012fe:	4979      	ldr	r1, [pc, #484]	@ (80014e4 <main+0x364>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001300:	6284      	str	r4, [r0, #40]	@ 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001302:	f44f 7382 	mov.w	r3, #260	@ 0x104
 8001306:	e9c0 1300 	strd	r1, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 800130a:	f44f 7600 	mov.w	r6, #512	@ 0x200
 800130e:	2318      	movs	r3, #24
 8001310:	e9c0 6306 	strd	r6, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001314:	230a      	movs	r3, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001316:	4e74      	ldr	r6, [pc, #464]	@ (80014e8 <main+0x368>)
  hspi5.Init.CRCPolynomial = 10;
 8001318:	62c3      	str	r3, [r0, #44]	@ 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 800131a:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 800131e:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001322:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001326:	f004 fe0d 	bl	8005f44 <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800132a:	4b70      	ldr	r3, [pc, #448]	@ (80014ec <main+0x36c>)
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 800132c:	f8c6 b028 	str.w	fp, [r6, #40]	@ 0x28
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001330:	f04f 0910 	mov.w	r9, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001334:	e9c6 3500 	strd	r3, r5, [r6]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001338:	2340      	movs	r3, #64	@ 0x40
 800133a:	e9c6 9304 	strd	r9, r3, [r6, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800133e:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001342:	e9c6 3406 	strd	r3, r4, [r6, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001346:	f44f 6300 	mov.w	r3, #2048	@ 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 800134a:	e9c6 3408 	strd	r3, r4, [r6, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800134e:	a90d      	add	r1, sp, #52	@ 0x34
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001350:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001352:	4630      	mov	r0, r6
  SdramTiming.WriteRecoveryTime = 3;
 8001354:	e9cd 3a10 	strd	r3, sl, [sp, #64]	@ 0x40
  SdramTiming.SelfRefreshTime = 4;
 8001358:	e9cd 380e 	strd	r3, r8, [sp, #56]	@ 0x38
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800135c:	f04f 0b08 	mov.w	fp, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001360:	e9c6 4802 	strd	r4, r8, [r6, #8]
  SdramTiming.RCDDelay = 2;
 8001364:	e9cd 7712 	strd	r7, r7, [sp, #72]	@ 0x48
  SdramTiming.LoadToActiveDelay = 2;
 8001368:	970d      	str	r7, [sp, #52]	@ 0x34
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800136a:	f004 fccf 	bl	8005d0c <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800136e:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001372:	a909      	add	r1, sp, #36	@ 0x24
 8001374:	4630      	mov	r0, r6
  Command->AutoRefreshNumber       = 1;
 8001376:	e9cd b50a 	strd	fp, r5, [sp, #40]	@ 0x28
 __IO uint32_t tmpmrd =0;
 800137a:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 800137c:	9509      	str	r5, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 800137e:	940c      	str	r4, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001380:	f004 fce4 	bl	8005d4c <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8001384:	4628      	mov	r0, r5
 8001386:	f002 fe3f 	bl	8004008 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800138a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800138e:	a909      	add	r1, sp, #36	@ 0x24
 8001390:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001392:	e9cd 7b09 	strd	r7, fp, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8001396:	e9cd 540b 	strd	r5, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800139a:	f004 fcd7 	bl	8005d4c <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800139e:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80013a2:	a909      	add	r1, sp, #36	@ 0x24
 80013a4:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80013a6:	e9cd ab09 	strd	sl, fp, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 80013aa:	e9cd 840b 	strd	r8, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80013ae:	f004 fccd 	bl	8005d4c <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 80013b2:	f44f 730c 	mov.w	r3, #560	@ 0x230
 80013b6:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 80013b8:	9b08      	ldr	r3, [sp, #32]
 80013ba:	930c      	str	r3, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80013bc:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80013c0:	a909      	add	r1, sp, #36	@ 0x24
 80013c2:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80013c4:	e9cd 8b09 	strd	r8, fp, [sp, #36]	@ 0x24
  Command->AutoRefreshNumber       = 1;
 80013c8:	950b      	str	r5, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80013ca:	f004 fcbf 	bl	8005d4c <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 80013ce:	f240 516a 	movw	r1, #1386	@ 0x56a
 80013d2:	4630      	mov	r0, r6
 80013d4:	f004 fcd8 	bl	8005d88 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80013d8:	2234      	movs	r2, #52	@ 0x34
 80013da:	4621      	mov	r1, r4
 80013dc:	eb0d 0002 	add.w	r0, sp, r2
 80013e0:	f01c f805 	bl	801d3ee <memset>
  hltdc.Instance = LTDC;
 80013e4:	4e42      	ldr	r6, [pc, #264]	@ (80014f0 <main+0x370>)
 80013e6:	4b43      	ldr	r3, [pc, #268]	@ (80014f4 <main+0x374>)
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80013e8:	6134      	str	r4, [r6, #16]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80013ea:	e9c6 3400 	strd	r3, r4, [r6]
  hltdc.Init.HorizontalSync = 9;
 80013ee:	2309      	movs	r3, #9
  hltdc.Init.VerticalSync = 1;
 80013f0:	e9c6 3505 	strd	r3, r5, [r6, #20]
  hltdc.Init.AccumulatedHBP = 29;
 80013f4:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedActiveH = 323;
 80013f6:	f240 1c0d 	movw	ip, #269	@ 0x10d
  hltdc.Init.AccumulatedVBP = 3;
 80013fa:	e9c6 3a07 	strd	r3, sl, [r6, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 80013fe:	f240 1343 	movw	r3, #323	@ 0x143
 8001402:	e9c6 c309 	strd	ip, r3, [r6, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 327;
 8001406:	f240 1e17 	movw	lr, #279	@ 0x117
 800140a:	f240 1347 	movw	r3, #327	@ 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800140e:	4630      	mov	r0, r6
  hltdc.Init.TotalHeigh = 327;
 8001410:	e9c6 e30b 	strd	lr, r3, [r6, #44]	@ 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001414:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hltdc.Init.Backcolor.Blue = 0;
 8001418:	86b4      	strh	r4, [r6, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 800141a:	f886 4036 	strb.w	r4, [r6, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800141e:	f003 ff7f 	bl	8005320 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001422:	21ff      	movs	r1, #255	@ 0xff
  pLayerCfg.WindowX1 = 240;
 8001424:	22f0      	movs	r2, #240	@ 0xf0
  pLayerCfg.Alpha0 = 0;
 8001426:	e9cd 1412 	strd	r1, r4, [sp, #72]	@ 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800142a:	f04f 0a05 	mov.w	sl, #5
 800142e:	f44f 6180 	mov.w	r1, #1024	@ 0x400
  pLayerCfg.WindowY1 = 320;
 8001432:	f44f 73a0 	mov.w	r3, #320	@ 0x140
  pLayerCfg.WindowY0 = 0;
 8001436:	e9cd 240e 	strd	r2, r4, [sp, #56]	@ 0x38
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800143a:	e9cd 1a14 	strd	r1, sl, [sp, #80]	@ 0x50
  pLayerCfg.ImageWidth = 240;
 800143e:	e9cd 4216 	strd	r4, r2, [sp, #88]	@ 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001442:	a90d      	add	r1, sp, #52	@ 0x34
 8001444:	4622      	mov	r2, r4
 8001446:	4630      	mov	r0, r6
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001448:	e9cd 3710 	strd	r3, r7, [sp, #64]	@ 0x40
  LcdDrv = &ili9341_drv;
 800144c:	4e2a      	ldr	r6, [pc, #168]	@ (80014f8 <main+0x378>)
  pLayerCfg.ImageHeight = 320;
 800144e:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.WindowX0 = 0;
 8001450:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.Backcolor.Blue = 0;
 8001452:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
 8001456:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800145a:	f004 f82c 	bl	80054b6 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 800145e:	4b27      	ldr	r3, [pc, #156]	@ (80014fc <main+0x37c>)
 8001460:	6033      	str	r3, [r6, #0]
  LcdDrv->Init();
 8001462:	681b      	ldr	r3, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001464:	f8df b0a8 	ldr.w	fp, [pc, #168]	@ 8001510 <main+0x390>
  LcdDrv->Init();
 8001468:	4798      	blx	r3
  LcdDrv->DisplayOff();
 800146a:	6833      	ldr	r3, [r6, #0]
  hdma2d.Instance = DMA2D;
 800146c:	4e24      	ldr	r6, [pc, #144]	@ (8001500 <main+0x380>)
  LcdDrv->DisplayOff();
 800146e:	68db      	ldr	r3, [r3, #12]
 8001470:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8001472:	4b24      	ldr	r3, [pc, #144]	@ (8001504 <main+0x384>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001474:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 8001476:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 800147a:	e9c6 7402 	strd	r7, r4, [r6, #8]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 800147e:	e9c6 470a 	strd	r4, r7, [r6, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001482:	e9c6 440c 	strd	r4, r4, [r6, #48]	@ 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001486:	f003 f84b 	bl	8004520 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 800148a:	4629      	mov	r1, r5
 800148c:	4630      	mov	r0, r6
 800148e:	f003 f8ff 	bl	8004690 <HAL_DMA2D_ConfigLayer>
  ADC_ChannelConfTypeDef sConfig = {0};
 8001492:	4621      	mov	r1, r4
 8001494:	464a      	mov	r2, r9
 8001496:	a80d      	add	r0, sp, #52	@ 0x34
 8001498:	f01b ffa9 	bl	801d3ee <memset>
  hadc1.Instance = ADC1;
 800149c:	4a1a      	ldr	r2, [pc, #104]	@ (8001508 <main+0x388>)
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800149e:	4e1b      	ldr	r6, [pc, #108]	@ (800150c <main+0x38c>)
  hadc1.Init.ScanConvMode = DISABLE;
 80014a0:	6114      	str	r4, [r2, #16]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80014a2:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80014a6:	e9c2 b300 	strd	fp, r3, [r2]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80014aa:	4610      	mov	r0, r2
  hadc1.Init.Resolution = ADC_RESOLUTION_8B;
 80014ac:	f04f 7b00 	mov.w	fp, #33554432	@ 0x2000000
 80014b0:	f8c2 b008 	str.w	fp, [r2, #8]
 80014b4:	e02e      	b.n	8001514 <main+0x394>
 80014b6:	bf00      	nop
 80014b8:	40023800 	.word	0x40023800
 80014bc:	40021000 	.word	0x40021000
 80014c0:	20000974 	.word	0x20000974
 80014c4:	40020800 	.word	0x40020800
 80014c8:	40020c00 	.word	0x40020c00
 80014cc:	40021800 	.word	0x40021800
 80014d0:	20000a08 	.word	0x20000a08
 80014d4:	40023000 	.word	0x40023000
 80014d8:	40005c00 	.word	0x40005c00
 80014dc:	000186a0 	.word	0x000186a0
 80014e0:	20000874 	.word	0x20000874
 80014e4:	40015000 	.word	0x40015000
 80014e8:	200007f8 	.word	0x200007f8
 80014ec:	a0000140 	.word	0xa0000140
 80014f0:	200008cc 	.word	0x200008cc
 80014f4:	40016800 	.word	0x40016800
 80014f8:	200007dc 	.word	0x200007dc
 80014fc:	20000014 	.word	0x20000014
 8001500:	200009c8 	.word	0x200009c8
 8001504:	4002b000 	.word	0x4002b000
 8001508:	20000a58 	.word	0x20000a58
 800150c:	0f000001 	.word	0x0f000001
 8001510:	40012000 	.word	0x40012000
  hadc1.Init.ContinuousConvMode = DISABLE;
 8001514:	7614      	strb	r4, [r2, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8001516:	f882 4020 	strb.w	r4, [r2, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 800151a:	62d4      	str	r4, [r2, #44]	@ 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800151c:	6296      	str	r6, [r2, #40]	@ 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800151e:	60d4      	str	r4, [r2, #12]
  hadc1.Init.NbrOfConversion = 1;
 8001520:	61d5      	str	r5, [r2, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8001522:	f882 4030 	strb.w	r4, [r2, #48]	@ 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001526:	6155      	str	r5, [r2, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001528:	f002 fd82 	bl	8004030 <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800152c:	4a36      	ldr	r2, [pc, #216]	@ (8001608 <main+0x488>)
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 800152e:	940f      	str	r4, [sp, #60]	@ 0x3c
  sConfig.Channel = ADC_CHANNEL_13;
 8001530:	210d      	movs	r1, #13
  sConfig.Rank = 1;
 8001532:	e9cd 150d 	strd	r1, r5, [sp, #52]	@ 0x34
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001536:	4610      	mov	r0, r2
 8001538:	a90d      	add	r1, sp, #52	@ 0x34
 800153a:	f002 fef3 	bl	8004324 <HAL_ADC_ConfigChannel>
  ADC_ChannelConfTypeDef sConfig = {0};
 800153e:	464a      	mov	r2, r9
 8001540:	4621      	mov	r1, r4
 8001542:	a80d      	add	r0, sp, #52	@ 0x34
 8001544:	f01b ff53 	bl	801d3ee <memset>
  hadc2.Instance = ADC2;
 8001548:	4a30      	ldr	r2, [pc, #192]	@ (800160c <main+0x48c>)
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 800154a:	4931      	ldr	r1, [pc, #196]	@ (8001610 <main+0x490>)
  hadc2.Init.Resolution = ADC_RESOLUTION_8B;
 800154c:	f8c2 b008 	str.w	fp, [r2, #8]
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001550:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 8001554:	4610      	mov	r0, r2
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001556:	e9c2 1300 	strd	r1, r3, [r2]
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800155a:	e9c2 640a 	strd	r6, r4, [r2, #40]	@ 0x28
  hadc2.Init.ScanConvMode = DISABLE;
 800155e:	6114      	str	r4, [r2, #16]
  hadc2.Init.ContinuousConvMode = DISABLE;
 8001560:	7614      	strb	r4, [r2, #24]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 8001562:	f882 4020 	strb.w	r4, [r2, #32]
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001566:	60d4      	str	r4, [r2, #12]
  hadc2.Init.NbrOfConversion = 1;
 8001568:	61d5      	str	r5, [r2, #28]
  hadc2.Init.DMAContinuousRequests = DISABLE;
 800156a:	f882 4030 	strb.w	r4, [r2, #48]	@ 0x30
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 800156e:	6155      	str	r5, [r2, #20]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 8001570:	f002 fd5e 	bl	8004030 <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8001574:	4a25      	ldr	r2, [pc, #148]	@ (800160c <main+0x48c>)
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8001576:	940f      	str	r4, [sp, #60]	@ 0x3c
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8001578:	a90d      	add	r1, sp, #52	@ 0x34
 800157a:	4610      	mov	r0, r2
  sConfig.Rank = 1;
 800157c:	e9cd a50d 	strd	sl, r5, [sp, #52]	@ 0x34
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8001580:	f002 fed0 	bl	8004324 <HAL_ADC_ConfigChannel>
  huart1.Instance = USART1;
 8001584:	4823      	ldr	r0, [pc, #140]	@ (8001614 <main+0x494>)
  huart1.Init.BaudRate = 115200;
 8001586:	4a24      	ldr	r2, [pc, #144]	@ (8001618 <main+0x498>)
  huart1.Init.Parity = UART_PARITY_NONE;
 8001588:	6104      	str	r4, [r0, #16]
  huart1.Init.BaudRate = 115200;
 800158a:	f44f 33e1 	mov.w	r3, #115200	@ 0x1c200
 800158e:	e9c0 2300 	strd	r2, r3, [r0]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8001592:	230c      	movs	r3, #12
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001594:	e9c0 3405 	strd	r3, r4, [r0, #20]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8001598:	e9c0 4402 	strd	r4, r4, [r0, #8]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 800159c:	61c4      	str	r4, [r0, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 800159e:	f005 f9a9 	bl	80068f4 <HAL_UART_Init>
  MX_TouchGFX_Init();
 80015a2:	f7ff f81f 	bl	80005e4 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 80015a6:	f7ff f81c 	bl	80005e2 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 80015aa:	f005 fac9 	bl	8006b40 <osKernelInitialize>
  joyStickQueueHandle = osMessageQueueNew (16, sizeof(uint32_t), &joyStickQueue_attributes);
 80015ae:	4a1b      	ldr	r2, [pc, #108]	@ (800161c <main+0x49c>)
 80015b0:	4641      	mov	r1, r8
 80015b2:	4648      	mov	r0, r9
 80015b4:	f005 fbeb 	bl	8006d8e <osMessageQueueNew>
 80015b8:	4b19      	ldr	r3, [pc, #100]	@ (8001620 <main+0x4a0>)
  buttonPressQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &buttonPressQueue_attributes);
 80015ba:	4a1a      	ldr	r2, [pc, #104]	@ (8001624 <main+0x4a4>)
  joyStickQueueHandle = osMessageQueueNew (16, sizeof(uint32_t), &joyStickQueue_attributes);
 80015bc:	6018      	str	r0, [r3, #0]
  buttonPressQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &buttonPressQueue_attributes);
 80015be:	4639      	mov	r1, r7
 80015c0:	4648      	mov	r0, r9
 80015c2:	f005 fbe4 	bl	8006d8e <osMessageQueueNew>
 80015c6:	4b18      	ldr	r3, [pc, #96]	@ (8001628 <main+0x4a8>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80015c8:	4a18      	ldr	r2, [pc, #96]	@ (800162c <main+0x4ac>)
  buttonPressQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &buttonPressQueue_attributes);
 80015ca:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80015cc:	4621      	mov	r1, r4
 80015ce:	4818      	ldr	r0, [pc, #96]	@ (8001630 <main+0x4b0>)
 80015d0:	f005 fae2 	bl	8006b98 <osThreadNew>
 80015d4:	4b17      	ldr	r3, [pc, #92]	@ (8001634 <main+0x4b4>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80015d6:	4a18      	ldr	r2, [pc, #96]	@ (8001638 <main+0x4b8>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80015d8:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80015da:	4621      	mov	r1, r4
 80015dc:	4817      	ldr	r0, [pc, #92]	@ (800163c <main+0x4bc>)
 80015de:	f005 fadb 	bl	8006b98 <osThreadNew>
 80015e2:	4b17      	ldr	r3, [pc, #92]	@ (8001640 <main+0x4c0>)
  hardware_pollinHandle = osThreadNew(start_hardware_polling_task, NULL, &hardware_pollin_attributes);
 80015e4:	4a17      	ldr	r2, [pc, #92]	@ (8001644 <main+0x4c4>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80015e6:	6018      	str	r0, [r3, #0]
  hardware_pollinHandle = osThreadNew(start_hardware_polling_task, NULL, &hardware_pollin_attributes);
 80015e8:	4621      	mov	r1, r4
 80015ea:	4817      	ldr	r0, [pc, #92]	@ (8001648 <main+0x4c8>)
 80015ec:	f005 fad4 	bl	8006b98 <osThreadNew>
 80015f0:	4b16      	ldr	r3, [pc, #88]	@ (800164c <main+0x4cc>)
  uart_taskHandle = osThreadNew(start_uart_task, NULL, &uart_task_attributes);
 80015f2:	4a17      	ldr	r2, [pc, #92]	@ (8001650 <main+0x4d0>)
  hardware_pollinHandle = osThreadNew(start_hardware_polling_task, NULL, &hardware_pollin_attributes);
 80015f4:	6018      	str	r0, [r3, #0]
  uart_taskHandle = osThreadNew(start_uart_task, NULL, &uart_task_attributes);
 80015f6:	4621      	mov	r1, r4
 80015f8:	4816      	ldr	r0, [pc, #88]	@ (8001654 <main+0x4d4>)
 80015fa:	f005 facd 	bl	8006b98 <osThreadNew>
 80015fe:	4b16      	ldr	r3, [pc, #88]	@ (8001658 <main+0x4d8>)
 8001600:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001602:	f005 faaf 	bl	8006b64 <osKernelStart>
  while (1)
 8001606:	e7fe      	b.n	8001606 <main+0x486>
 8001608:	20000a58 	.word	0x20000a58
 800160c:	20000a10 	.word	0x20000a10
 8001610:	40012100 	.word	0x40012100
 8001614:	2000082c 	.word	0x2000082c
 8001618:	40011000 	.word	0x40011000
 800161c:	0801ea40 	.word	0x0801ea40
 8001620:	200007e4 	.word	0x200007e4
 8001624:	0801ea28 	.word	0x0801ea28
 8001628:	200007e0 	.word	0x200007e0
 800162c:	0801eac4 	.word	0x0801eac4
 8001630:	08000ff5 	.word	0x08000ff5
 8001634:	200007f4 	.word	0x200007f4
 8001638:	0801eaa0 	.word	0x0801eaa0
 800163c:	080005f3 	.word	0x080005f3
 8001640:	200007f0 	.word	0x200007f0
 8001644:	0801ea7c 	.word	0x0801ea7c
 8001648:	08001011 	.word	0x08001011
 800164c:	200007ec 	.word	0x200007ec
 8001650:	0801ea58 	.word	0x0801ea58
 8001654:	0800109d 	.word	0x0800109d
 8001658:	200007e8 	.word	0x200007e8

0800165c <IOE_Init>:
void IOE_Init(void)
 800165c:	4770      	bx	lr

0800165e <IOE_ITConfig>:
void IOE_ITConfig(void)
 800165e:	4770      	bx	lr

08001660 <IOE_Write>:
{
 8001660:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001662:	4b09      	ldr	r3, [pc, #36]	@ (8001688 <IOE_Write+0x28>)
 8001664:	f88d 2017 	strb.w	r2, [sp, #23]
 8001668:	681b      	ldr	r3, [r3, #0]
 800166a:	9302      	str	r3, [sp, #8]
 800166c:	f10d 0217 	add.w	r2, sp, #23
 8001670:	2301      	movs	r3, #1
 8001672:	9200      	str	r2, [sp, #0]
 8001674:	9301      	str	r3, [sp, #4]
 8001676:	460a      	mov	r2, r1
 8001678:	4601      	mov	r1, r0
 800167a:	4804      	ldr	r0, [pc, #16]	@ (800168c <IOE_Write+0x2c>)
 800167c:	f003 fbec 	bl	8004e58 <HAL_I2C_Mem_Write>
}
 8001680:	b007      	add	sp, #28
 8001682:	f85d fb04 	ldr.w	pc, [sp], #4
 8001686:	bf00      	nop
 8001688:	20000010 	.word	0x20000010
 800168c:	20000974 	.word	0x20000974

08001690 <IOE_Read>:
{
 8001690:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8001692:	2300      	movs	r3, #0
 8001694:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001698:	4b08      	ldr	r3, [pc, #32]	@ (80016bc <IOE_Read+0x2c>)
 800169a:	681b      	ldr	r3, [r3, #0]
 800169c:	9302      	str	r3, [sp, #8]
{
 800169e:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80016a0:	2301      	movs	r3, #1
 80016a2:	f10d 0117 	add.w	r1, sp, #23
 80016a6:	9100      	str	r1, [sp, #0]
 80016a8:	9301      	str	r3, [sp, #4]
 80016aa:	4601      	mov	r1, r0
 80016ac:	4804      	ldr	r0, [pc, #16]	@ (80016c0 <IOE_Read+0x30>)
 80016ae:	f003 fc63 	bl	8004f78 <HAL_I2C_Mem_Read>
}
 80016b2:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80016b6:	b007      	add	sp, #28
 80016b8:	f85d fb04 	ldr.w	pc, [sp], #4
 80016bc:	20000010 	.word	0x20000010
 80016c0:	20000974 	.word	0x20000974

080016c4 <IOE_ReadMultiple>:
{
 80016c4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80016c6:	4c08      	ldr	r4, [pc, #32]	@ (80016e8 <IOE_ReadMultiple+0x24>)
 80016c8:	6824      	ldr	r4, [r4, #0]
 80016ca:	9200      	str	r2, [sp, #0]
 80016cc:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80016d0:	460a      	mov	r2, r1
 80016d2:	2301      	movs	r3, #1
 80016d4:	4601      	mov	r1, r0
 80016d6:	4805      	ldr	r0, [pc, #20]	@ (80016ec <IOE_ReadMultiple+0x28>)
 80016d8:	f003 fc4e 	bl	8004f78 <HAL_I2C_Mem_Read>
}
 80016dc:	3800      	subs	r0, #0
 80016de:	bf18      	it	ne
 80016e0:	2001      	movne	r0, #1
 80016e2:	b004      	add	sp, #16
 80016e4:	bd10      	pop	{r4, pc}
 80016e6:	bf00      	nop
 80016e8:	20000010 	.word	0x20000010
 80016ec:	20000974 	.word	0x20000974

080016f0 <IOE_Delay>:
void IOE_Delay(uint32_t Delay)
 80016f0:	f002 bc8a 	b.w	8004008 <HAL_Delay>

080016f4 <LCD_IO_Init>:
{
 80016f4:	b510      	push	{r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80016f6:	4c06      	ldr	r4, [pc, #24]	@ (8001710 <LCD_IO_Init+0x1c>)
 80016f8:	2200      	movs	r2, #0
 80016fa:	4620      	mov	r0, r4
 80016fc:	2104      	movs	r1, #4
 80016fe:	f003 f8f5 	bl	80048ec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001702:	4620      	mov	r0, r4
 8001704:	2201      	movs	r2, #1
}
 8001706:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800170a:	2104      	movs	r1, #4
 800170c:	f003 b8ee 	b.w	80048ec <HAL_GPIO_WritePin>
 8001710:	40020800 	.word	0x40020800

08001714 <LCD_IO_WriteData>:
{
 8001714:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001716:	4d0b      	ldr	r5, [pc, #44]	@ (8001744 <LCD_IO_WriteData+0x30>)
{
 8001718:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800171a:	2201      	movs	r2, #1
 800171c:	480a      	ldr	r0, [pc, #40]	@ (8001748 <LCD_IO_WriteData+0x34>)
 800171e:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001722:	f003 f8e3 	bl	80048ec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001726:	2200      	movs	r2, #0
 8001728:	2104      	movs	r1, #4
 800172a:	4628      	mov	r0, r5
 800172c:	f003 f8de 	bl	80048ec <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001730:	4620      	mov	r0, r4
 8001732:	f7ff fc4d 	bl	8000fd0 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001736:	4628      	mov	r0, r5
 8001738:	2201      	movs	r2, #1
}
 800173a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800173e:	2104      	movs	r1, #4
 8001740:	f003 b8d4 	b.w	80048ec <HAL_GPIO_WritePin>
 8001744:	40020800 	.word	0x40020800
 8001748:	40020c00 	.word	0x40020c00

0800174c <LCD_IO_WriteReg>:
{
 800174c:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800174e:	4d0b      	ldr	r5, [pc, #44]	@ (800177c <LCD_IO_WriteReg+0x30>)
{
 8001750:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001752:	2200      	movs	r2, #0
 8001754:	480a      	ldr	r0, [pc, #40]	@ (8001780 <LCD_IO_WriteReg+0x34>)
 8001756:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800175a:	f003 f8c7 	bl	80048ec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800175e:	2200      	movs	r2, #0
 8001760:	2104      	movs	r1, #4
 8001762:	4628      	mov	r0, r5
 8001764:	f003 f8c2 	bl	80048ec <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8001768:	4620      	mov	r0, r4
 800176a:	f7ff fc31 	bl	8000fd0 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800176e:	4628      	mov	r0, r5
 8001770:	2201      	movs	r2, #1
}
 8001772:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001776:	2104      	movs	r1, #4
 8001778:	f003 b8b8 	b.w	80048ec <HAL_GPIO_WritePin>
 800177c:	40020800 	.word	0x40020800
 8001780:	40020c00 	.word	0x40020c00

08001784 <LCD_IO_ReadData>:
{
 8001784:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001786:	4e14      	ldr	r6, [pc, #80]	@ (80017d8 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001788:	4f14      	ldr	r7, [pc, #80]	@ (80017dc <LCD_IO_ReadData+0x58>)
{
 800178a:	4605      	mov	r5, r0
 800178c:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800178e:	4630      	mov	r0, r6
 8001790:	2200      	movs	r2, #0
 8001792:	2104      	movs	r1, #4
 8001794:	f003 f8aa 	bl	80048ec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001798:	2200      	movs	r2, #0
 800179a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800179e:	4638      	mov	r0, r7
 80017a0:	f003 f8a4 	bl	80048ec <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80017a4:	4628      	mov	r0, r5
 80017a6:	f7ff fc13 	bl	8000fd0 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 80017aa:	4b0d      	ldr	r3, [pc, #52]	@ (80017e0 <LCD_IO_ReadData+0x5c>)
 80017ac:	480d      	ldr	r0, [pc, #52]	@ (80017e4 <LCD_IO_ReadData+0x60>)
 80017ae:	681b      	ldr	r3, [r3, #0]
 80017b0:	4622      	mov	r2, r4
 80017b2:	a901      	add	r1, sp, #4
 80017b4:	f004 fdcd 	bl	8006352 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80017b8:	4638      	mov	r0, r7
 80017ba:	2201      	movs	r2, #1
 80017bc:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
  return readvalue;
 80017c0:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80017c2:	f003 f893 	bl	80048ec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80017c6:	4630      	mov	r0, r6
 80017c8:	2201      	movs	r2, #1
 80017ca:	2104      	movs	r1, #4
 80017cc:	f003 f88e 	bl	80048ec <HAL_GPIO_WritePin>
}
 80017d0:	4620      	mov	r0, r4
 80017d2:	b003      	add	sp, #12
 80017d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80017d6:	bf00      	nop
 80017d8:	40020800 	.word	0x40020800
 80017dc:	40020c00 	.word	0x40020c00
 80017e0:	2000000c 	.word	0x2000000c
 80017e4:	20000874 	.word	0x20000874

080017e8 <LCD_Delay>:
  HAL_Delay(Delay);
 80017e8:	f002 bc0e 	b.w	8004008 <HAL_Delay>

080017ec <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 80017ec:	6802      	ldr	r2, [r0, #0]
 80017ee:	4b03      	ldr	r3, [pc, #12]	@ (80017fc <HAL_TIM_PeriodElapsedCallback+0x10>)
 80017f0:	429a      	cmp	r2, r3
 80017f2:	d101      	bne.n	80017f8 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 80017f4:	f002 bbf6 	b.w	8003fe4 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80017f8:	4770      	bx	lr
 80017fa:	bf00      	nop
 80017fc:	40001000 	.word	0x40001000

08001800 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001800:	4770      	bx	lr
	...

08001804 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001804:	b082      	sub	sp, #8

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001806:	4b0e      	ldr	r3, [pc, #56]	@ (8001840 <HAL_MspInit+0x3c>)
 8001808:	2200      	movs	r2, #0
 800180a:	9200      	str	r2, [sp, #0]
 800180c:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 800180e:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 8001812:	6459      	str	r1, [r3, #68]	@ 0x44
 8001814:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 8001816:	f401 4180 	and.w	r1, r1, #16384	@ 0x4000
 800181a:	9100      	str	r1, [sp, #0]
 800181c:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 800181e:	9201      	str	r2, [sp, #4]
 8001820:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 8001822:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
 8001826:	6419      	str	r1, [r3, #64]	@ 0x40
 8001828:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800182a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800182e:	9301      	str	r3, [sp, #4]
 8001830:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001832:	210f      	movs	r1, #15
 8001834:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001838:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800183a:	f002 be21 	b.w	8004480 <HAL_NVIC_SetPriority>
 800183e:	bf00      	nop
 8001840:	40023800 	.word	0x40023800

08001844 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001844:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001846:	2214      	movs	r2, #20
{
 8001848:	b08a      	sub	sp, #40	@ 0x28
 800184a:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800184c:	2100      	movs	r1, #0
 800184e:	eb0d 0002 	add.w	r0, sp, r2
 8001852:	f01b fdcc 	bl	801d3ee <memset>
  if(hadc->Instance==ADC1)
 8001856:	6823      	ldr	r3, [r4, #0]
 8001858:	4a21      	ldr	r2, [pc, #132]	@ (80018e0 <HAL_ADC_MspInit+0x9c>)
 800185a:	4293      	cmp	r3, r2
 800185c:	d11f      	bne.n	800189e <HAL_ADC_MspInit+0x5a>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 800185e:	4b21      	ldr	r3, [pc, #132]	@ (80018e4 <HAL_ADC_MspInit+0xa0>)
    PC3     ------> ADC1_IN13
    */
    GPIO_InitStruct.Pin = GPIO_PIN_3;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001860:	4821      	ldr	r0, [pc, #132]	@ (80018e8 <HAL_ADC_MspInit+0xa4>)
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001862:	2100      	movs	r1, #0
 8001864:	9101      	str	r1, [sp, #4]
 8001866:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001868:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800186c:	645a      	str	r2, [r3, #68]	@ 0x44
 800186e:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001870:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8001874:	9201      	str	r2, [sp, #4]
 8001876:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001878:	9102      	str	r1, [sp, #8]
 800187a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800187c:	f042 0204 	orr.w	r2, r2, #4
 8001880:	631a      	str	r2, [r3, #48]	@ 0x30
 8001882:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001884:	f003 0304 	and.w	r3, r3, #4
 8001888:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800188a:	2108      	movs	r1, #8
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800188c:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800188e:	2303      	movs	r3, #3
 8001890:	e9cd 1305 	strd	r1, r3, [sp, #20]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001894:	a905      	add	r1, sp, #20
    PA5     ------> ADC2_IN5
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001896:	f002 ff3f 	bl	8004718 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC2_MspInit 1 */

  /* USER CODE END ADC2_MspInit 1 */
  }

}
 800189a:	b00a      	add	sp, #40	@ 0x28
 800189c:	bd10      	pop	{r4, pc}
  else if(hadc->Instance==ADC2)
 800189e:	4a13      	ldr	r2, [pc, #76]	@ (80018ec <HAL_ADC_MspInit+0xa8>)
 80018a0:	4293      	cmp	r3, r2
 80018a2:	d1fa      	bne.n	800189a <HAL_ADC_MspInit+0x56>
    __HAL_RCC_ADC2_CLK_ENABLE();
 80018a4:	4b0f      	ldr	r3, [pc, #60]	@ (80018e4 <HAL_ADC_MspInit+0xa0>)
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80018a6:	4812      	ldr	r0, [pc, #72]	@ (80018f0 <HAL_ADC_MspInit+0xac>)
    __HAL_RCC_ADC2_CLK_ENABLE();
 80018a8:	2100      	movs	r1, #0
 80018aa:	9103      	str	r1, [sp, #12]
 80018ac:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80018ae:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80018b2:	645a      	str	r2, [r3, #68]	@ 0x44
 80018b4:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80018b6:	f402 7200 	and.w	r2, r2, #512	@ 0x200
 80018ba:	9203      	str	r2, [sp, #12]
 80018bc:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80018be:	9104      	str	r1, [sp, #16]
 80018c0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80018c2:	f042 0201 	orr.w	r2, r2, #1
 80018c6:	631a      	str	r2, [r3, #48]	@ 0x30
 80018c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80018ca:	f003 0301 	and.w	r3, r3, #1
 80018ce:	9304      	str	r3, [sp, #16]
 80018d0:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80018d2:	2220      	movs	r2, #32
 80018d4:	2303      	movs	r3, #3
 80018d6:	e9cd 2305 	strd	r2, r3, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80018da:	a905      	add	r1, sp, #20
 80018dc:	e7db      	b.n	8001896 <HAL_ADC_MspInit+0x52>
 80018de:	bf00      	nop
 80018e0:	40012000 	.word	0x40012000
 80018e4:	40023800 	.word	0x40023800
 80018e8:	40020800 	.word	0x40020800
 80018ec:	40012100 	.word	0x40012100
 80018f0:	40020000 	.word	0x40020000

080018f4 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80018f4:	6802      	ldr	r2, [r0, #0]
 80018f6:	4b09      	ldr	r3, [pc, #36]	@ (800191c <HAL_CRC_MspInit+0x28>)
 80018f8:	429a      	cmp	r2, r3
{
 80018fa:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 80018fc:	d10b      	bne.n	8001916 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80018fe:	2300      	movs	r3, #0
 8001900:	9301      	str	r3, [sp, #4]
 8001902:	4b07      	ldr	r3, [pc, #28]	@ (8001920 <HAL_CRC_MspInit+0x2c>)
 8001904:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001906:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 800190a:	631a      	str	r2, [r3, #48]	@ 0x30
 800190c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800190e:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001912:	9301      	str	r3, [sp, #4]
 8001914:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001916:	b002      	add	sp, #8
 8001918:	4770      	bx	lr
 800191a:	bf00      	nop
 800191c:	40023000 	.word	0x40023000
 8001920:	40023800 	.word	0x40023800

08001924 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001924:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001926:	4b0f      	ldr	r3, [pc, #60]	@ (8001964 <HAL_DMA2D_MspInit+0x40>)
 8001928:	6802      	ldr	r2, [r0, #0]
 800192a:	429a      	cmp	r2, r3
 800192c:	d116      	bne.n	800195c <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800192e:	2200      	movs	r2, #0
 8001930:	f5a3 43f0 	sub.w	r3, r3, #30720	@ 0x7800
 8001934:	9201      	str	r2, [sp, #4]
 8001936:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8001938:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 800193c:	6319      	str	r1, [r3, #48]	@ 0x30
 800193e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001940:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8001944:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001946:	2105      	movs	r1, #5
 8001948:	205a      	movs	r0, #90	@ 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800194a:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 800194c:	f002 fd98 	bl	8004480 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001950:	205a      	movs	r0, #90	@ 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001952:	b003      	add	sp, #12
 8001954:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001958:	f002 bdc4 	b.w	80044e4 <HAL_NVIC_EnableIRQ>
}
 800195c:	b003      	add	sp, #12
 800195e:	f85d fb04 	ldr.w	pc, [sp], #4
 8001962:	bf00      	nop
 8001964:	4002b000 	.word	0x4002b000

08001968 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001968:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800196c:	4604      	mov	r4, r0
 800196e:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001970:	2214      	movs	r2, #20
 8001972:	2100      	movs	r1, #0
 8001974:	a803      	add	r0, sp, #12
 8001976:	f01b fd3a 	bl	801d3ee <memset>
  if(hi2c->Instance==I2C3)
 800197a:	6822      	ldr	r2, [r4, #0]
 800197c:	4b24      	ldr	r3, [pc, #144]	@ (8001a10 <HAL_I2C_MspInit+0xa8>)
 800197e:	429a      	cmp	r2, r3
 8001980:	d143      	bne.n	8001a0a <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001982:	4c24      	ldr	r4, [pc, #144]	@ (8001a14 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001984:	4824      	ldr	r0, [pc, #144]	@ (8001a18 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001986:	2500      	movs	r5, #0
 8001988:	9500      	str	r5, [sp, #0]
 800198a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800198c:	f043 0304 	orr.w	r3, r3, #4
 8001990:	6323      	str	r3, [r4, #48]	@ 0x30
 8001992:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001994:	f003 0304 	and.w	r3, r3, #4
 8001998:	9300      	str	r3, [sp, #0]
 800199a:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800199c:	9501      	str	r5, [sp, #4]
 800199e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80019a0:	f043 0301 	orr.w	r3, r3, #1
 80019a4:	6323      	str	r3, [r4, #48]	@ 0x30
 80019a6:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80019a8:	f003 0301 	and.w	r3, r3, #1
 80019ac:	9301      	str	r3, [sp, #4]
 80019ae:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80019b0:	f04f 0912 	mov.w	r9, #18
 80019b4:	f44f 7300 	mov.w	r3, #512	@ 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80019b8:	f04f 0801 	mov.w	r8, #1
 80019bc:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80019be:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80019c0:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80019c2:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80019c6:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80019ca:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80019cc:	f002 fea4 	bl	8004718 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80019d0:	f44f 7380 	mov.w	r3, #256	@ 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80019d4:	4811      	ldr	r0, [pc, #68]	@ (8001a1c <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80019d6:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80019d8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80019da:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80019de:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80019e2:	f002 fe99 	bl	8004718 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 80019e6:	9502      	str	r5, [sp, #8]
 80019e8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80019ea:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80019ee:	6423      	str	r3, [r4, #64]	@ 0x40
 80019f0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80019f2:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80019f6:	9302      	str	r3, [sp, #8]
 80019f8:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 80019fa:	6a23      	ldr	r3, [r4, #32]
 80019fc:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8001a00:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001a02:	6a23      	ldr	r3, [r4, #32]
 8001a04:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8001a08:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001a0a:	b009      	add	sp, #36	@ 0x24
 8001a0c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001a10:	40005c00 	.word	0x40005c00
 8001a14:	40023800 	.word	0x40023800
 8001a18:	40020800 	.word	0x40020800
 8001a1c:	40020000 	.word	0x40020000

08001a20 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001a20:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001a22:	b099      	sub	sp, #100	@ 0x64
 8001a24:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a26:	2214      	movs	r2, #20
 8001a28:	2100      	movs	r1, #0
 8001a2a:	a807      	add	r0, sp, #28
 8001a2c:	f01b fcdf 	bl	801d3ee <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001a30:	2230      	movs	r2, #48	@ 0x30
 8001a32:	eb0d 0002 	add.w	r0, sp, r2
 8001a36:	2100      	movs	r1, #0
 8001a38:	f01b fcd9 	bl	801d3ee <memset>
  if(hltdc->Instance==LTDC)
 8001a3c:	6822      	ldr	r2, [r4, #0]
 8001a3e:	4b5e      	ldr	r3, [pc, #376]	@ (8001bb8 <HAL_LTDC_MspInit+0x198>)
 8001a40:	429a      	cmp	r2, r3
 8001a42:	f040 80b7 	bne.w	8001bb4 <HAL_LTDC_MspInit+0x194>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001a46:	2308      	movs	r3, #8
 8001a48:	930c      	str	r3, [sp, #48]	@ 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001a4a:	23c0      	movs	r3, #192	@ 0xc0
 8001a4c:	9310      	str	r3, [sp, #64]	@ 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001a4e:	2304      	movs	r3, #4
 8001a50:	9312      	str	r3, [sp, #72]	@ 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001a52:	a80c      	add	r0, sp, #48	@ 0x30
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001a54:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8001a58:	9315      	str	r3, [sp, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001a5a:	f004 f82b 	bl	8005ab4 <HAL_RCCEx_PeriphCLKConfig>
 8001a5e:	b108      	cbz	r0, 8001a64 <HAL_LTDC_MspInit+0x44>
    {
      Error_Handler();
 8001a60:	f7ff fece 	bl	8001800 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001a64:	4b55      	ldr	r3, [pc, #340]	@ (8001bbc <HAL_LTDC_MspInit+0x19c>)
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001a66:	4856      	ldr	r0, [pc, #344]	@ (8001bc0 <HAL_LTDC_MspInit+0x1a0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001a68:	2400      	movs	r4, #0
 8001a6a:	9400      	str	r4, [sp, #0]
 8001a6c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001a6e:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8001a72:	645a      	str	r2, [r3, #68]	@ 0x44
 8001a74:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001a76:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 8001a7a:	9200      	str	r2, [sp, #0]
 8001a7c:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001a7e:	9401      	str	r4, [sp, #4]
 8001a80:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001a82:	f042 0220 	orr.w	r2, r2, #32
 8001a86:	631a      	str	r2, [r3, #48]	@ 0x30
 8001a88:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001a8a:	f002 0220 	and.w	r2, r2, #32
 8001a8e:	9201      	str	r2, [sp, #4]
 8001a90:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001a92:	9402      	str	r4, [sp, #8]
 8001a94:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001a96:	f042 0201 	orr.w	r2, r2, #1
 8001a9a:	631a      	str	r2, [r3, #48]	@ 0x30
 8001a9c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001a9e:	f002 0201 	and.w	r2, r2, #1
 8001aa2:	9202      	str	r2, [sp, #8]
 8001aa4:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001aa6:	9403      	str	r4, [sp, #12]
 8001aa8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001aaa:	f042 0202 	orr.w	r2, r2, #2
 8001aae:	631a      	str	r2, [r3, #48]	@ 0x30
 8001ab0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001ab2:	f002 0202 	and.w	r2, r2, #2
 8001ab6:	9203      	str	r2, [sp, #12]
 8001ab8:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001aba:	9404      	str	r4, [sp, #16]
 8001abc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001abe:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8001ac2:	631a      	str	r2, [r3, #48]	@ 0x30
 8001ac4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001ac6:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 8001aca:	9204      	str	r2, [sp, #16]
 8001acc:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001ace:	9405      	str	r4, [sp, #20]
 8001ad0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001ad2:	f042 0204 	orr.w	r2, r2, #4
 8001ad6:	631a      	str	r2, [r3, #48]	@ 0x30
 8001ad8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001ada:	f002 0204 	and.w	r2, r2, #4
 8001ade:	9205      	str	r2, [sp, #20]
 8001ae0:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001ae2:	9406      	str	r4, [sp, #24]
 8001ae4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001ae6:	f042 0208 	orr.w	r2, r2, #8
 8001aea:	631a      	str	r2, [r3, #48]	@ 0x30
 8001aec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001aee:	f003 0308 	and.w	r3, r3, #8
 8001af2:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001af4:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001af6:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001af8:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001afa:	960b      	str	r6, [sp, #44]	@ 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001afc:	f44f 6380 	mov.w	r3, #1024	@ 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001b00:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b02:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001b06:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001b0a:	f002 fe05 	bl	8004718 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001b0e:	f641 0358 	movw	r3, #6232	@ 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b12:	482c      	ldr	r0, [pc, #176]	@ (8001bc4 <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001b14:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b16:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b18:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001b1c:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001b1e:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b22:	f002 fdf9 	bl	8004718 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001b26:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b28:	4827      	ldr	r0, [pc, #156]	@ (8001bc8 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001b2a:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b2c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b2e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001b32:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b36:	f002 fdef 	bl	8004718 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001b3a:	f44f 6370 	mov.w	r3, #3840	@ 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b3e:	4822      	ldr	r0, [pc, #136]	@ (8001bc8 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001b40:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b42:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b44:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001b48:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b4c:	f002 fde4 	bl	8004718 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001b50:	f44f 630c 	mov.w	r3, #2240	@ 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001b54:	481d      	ldr	r0, [pc, #116]	@ (8001bcc <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001b56:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001b58:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b5a:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001b5e:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001b62:	f002 fdd9 	bl	8004718 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001b66:	23c0      	movs	r3, #192	@ 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b68:	4819      	ldr	r0, [pc, #100]	@ (8001bd0 <HAL_LTDC_MspInit+0x1b0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001b6a:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b6c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b6e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001b72:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b76:	f002 fdcf 	bl	8004718 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001b7a:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001b7c:	4815      	ldr	r0, [pc, #84]	@ (8001bd4 <HAL_LTDC_MspInit+0x1b4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001b7e:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001b80:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b82:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001b86:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001b8a:	f002 fdc5 	bl	8004718 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001b8e:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001b92:	480e      	ldr	r0, [pc, #56]	@ (8001bcc <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001b94:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001b96:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b98:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001b9c:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ba0:	f002 fdba 	bl	8004718 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001ba4:	2058      	movs	r0, #88	@ 0x58
 8001ba6:	4622      	mov	r2, r4
 8001ba8:	2105      	movs	r1, #5
 8001baa:	f002 fc69 	bl	8004480 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001bae:	2058      	movs	r0, #88	@ 0x58
 8001bb0:	f002 fc98 	bl	80044e4 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001bb4:	b019      	add	sp, #100	@ 0x64
 8001bb6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001bb8:	40016800 	.word	0x40016800
 8001bbc:	40023800 	.word	0x40023800
 8001bc0:	40021400 	.word	0x40021400
 8001bc4:	40020000 	.word	0x40020000
 8001bc8:	40020400 	.word	0x40020400
 8001bcc:	40021800 	.word	0x40021800
 8001bd0:	40020800 	.word	0x40020800
 8001bd4:	40020c00 	.word	0x40020c00

08001bd8 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001bd8:	b510      	push	{r4, lr}
 8001bda:	4604      	mov	r4, r0
 8001bdc:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001bde:	2214      	movs	r2, #20
 8001be0:	2100      	movs	r1, #0
 8001be2:	a803      	add	r0, sp, #12
 8001be4:	f01b fc03 	bl	801d3ee <memset>
  if(hspi->Instance==SPI5)
 8001be8:	6822      	ldr	r2, [r4, #0]
 8001bea:	4b14      	ldr	r3, [pc, #80]	@ (8001c3c <HAL_SPI_MspInit+0x64>)
 8001bec:	429a      	cmp	r2, r3
 8001bee:	d123      	bne.n	8001c38 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001bf0:	f503 4368 	add.w	r3, r3, #59392	@ 0xe800
 8001bf4:	2100      	movs	r1, #0
 8001bf6:	9101      	str	r1, [sp, #4]
 8001bf8:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001bfa:	4811      	ldr	r0, [pc, #68]	@ (8001c40 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001bfc:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 8001c00:	645a      	str	r2, [r3, #68]	@ 0x44
 8001c02:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001c04:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 8001c08:	9201      	str	r2, [sp, #4]
 8001c0a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c0c:	9102      	str	r1, [sp, #8]
 8001c0e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001c10:	f042 0220 	orr.w	r2, r2, #32
 8001c14:	631a      	str	r2, [r3, #48]	@ 0x30
 8001c16:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001c18:	f003 0320 	and.w	r3, r3, #32
 8001c1c:	9302      	str	r3, [sp, #8]
 8001c1e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c20:	f44f 7260 	mov.w	r2, #896	@ 0x380
 8001c24:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001c26:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c28:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001c2c:	2305      	movs	r3, #5
 8001c2e:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c32:	a903      	add	r1, sp, #12
 8001c34:	f002 fd70 	bl	8004718 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001c38:	b008      	add	sp, #32
 8001c3a:	bd10      	pop	{r4, pc}
 8001c3c:	40015000 	.word	0x40015000
 8001c40:	40021400 	.word	0x40021400

08001c44 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8001c44:	b510      	push	{r4, lr}
 8001c46:	4604      	mov	r4, r0
 8001c48:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c4a:	2214      	movs	r2, #20
 8001c4c:	2100      	movs	r1, #0
 8001c4e:	a803      	add	r0, sp, #12
 8001c50:	f01b fbcd 	bl	801d3ee <memset>
  if(huart->Instance==USART1)
 8001c54:	6822      	ldr	r2, [r4, #0]
 8001c56:	4b14      	ldr	r3, [pc, #80]	@ (8001ca8 <HAL_UART_MspInit+0x64>)
 8001c58:	429a      	cmp	r2, r3
 8001c5a:	d123      	bne.n	8001ca4 <HAL_UART_MspInit+0x60>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8001c5c:	f503 3394 	add.w	r3, r3, #75776	@ 0x12800
 8001c60:	2100      	movs	r1, #0
 8001c62:	9101      	str	r1, [sp, #4]
 8001c64:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c66:	4811      	ldr	r0, [pc, #68]	@ (8001cac <HAL_UART_MspInit+0x68>)
    __HAL_RCC_USART1_CLK_ENABLE();
 8001c68:	f042 0210 	orr.w	r2, r2, #16
 8001c6c:	645a      	str	r2, [r3, #68]	@ 0x44
 8001c6e:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001c70:	f002 0210 	and.w	r2, r2, #16
 8001c74:	9201      	str	r2, [sp, #4]
 8001c76:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c78:	9102      	str	r1, [sp, #8]
 8001c7a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001c7c:	f042 0201 	orr.w	r2, r2, #1
 8001c80:	631a      	str	r2, [r3, #48]	@ 0x30
 8001c82:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001c84:	f003 0301 	and.w	r3, r3, #1
 8001c88:	9302      	str	r3, [sp, #8]
 8001c8a:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c8c:	f44f 62c0 	mov.w	r2, #1536	@ 0x600
 8001c90:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8001c92:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c94:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8001c98:	2307      	movs	r3, #7
 8001c9a:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c9e:	a903      	add	r1, sp, #12
 8001ca0:	f002 fd3a 	bl	8004718 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 8001ca4:	b008      	add	sp, #32
 8001ca6:	bd10      	pop	{r4, pc}
 8001ca8:	40011000 	.word	0x40011000
 8001cac:	40020000 	.word	0x40020000

08001cb0 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001cb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001cb4:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001cb6:	2300      	movs	r3, #0
 8001cb8:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001cba:	4b2b      	ldr	r3, [pc, #172]	@ (8001d68 <HAL_SDRAM_MspInit+0xb8>)
 8001cbc:	681c      	ldr	r4, [r3, #0]
 8001cbe:	2c00      	cmp	r4, #0
 8001cc0:	d14f      	bne.n	8001d62 <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8001cc2:	f04f 0801 	mov.w	r8, #1
 8001cc6:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001cca:	4b28      	ldr	r3, [pc, #160]	@ (8001d6c <HAL_SDRAM_MspInit+0xbc>)
 8001ccc:	9400      	str	r4, [sp, #0]
 8001cce:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cd0:	4827      	ldr	r0, [pc, #156]	@ (8001d70 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001cd2:	ea42 0208 	orr.w	r2, r2, r8
 8001cd6:	639a      	str	r2, [r3, #56]	@ 0x38
 8001cd8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001cda:	ea03 0308 	and.w	r3, r3, r8
 8001cde:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ce0:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ce2:	2603      	movs	r6, #3
 8001ce4:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001ce6:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ce8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cea:	f64f 033f 	movw	r3, #63551	@ 0xf83f
 8001cee:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001cf2:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cf6:	f002 fd0f 	bl	8004718 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001cfa:	481e      	ldr	r0, [pc, #120]	@ (8001d74 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001cfc:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001cfe:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d00:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d04:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d08:	f002 fd06 	bl	8004718 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001d0c:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d10:	4819      	ldr	r0, [pc, #100]	@ (8001d78 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d12:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d14:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d16:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d1a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d1e:	f002 fcfb 	bl	8004718 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001d22:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d26:	4815      	ldr	r0, [pc, #84]	@ (8001d7c <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d28:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d2a:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d2c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d30:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d34:	f002 fcf0 	bl	8004718 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001d38:	f24c 7303 	movw	r3, #50947	@ 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d3c:	4810      	ldr	r0, [pc, #64]	@ (8001d80 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d3e:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d40:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d42:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d46:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d4a:	f002 fce5 	bl	8004718 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001d4e:	2360      	movs	r3, #96	@ 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d50:	480c      	ldr	r0, [pc, #48]	@ (8001d84 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d52:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d54:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d56:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d5a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d5e:	f002 fcdb 	bl	8004718 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001d62:	b006      	add	sp, #24
 8001d64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001d68:	20000aa0 	.word	0x20000aa0
 8001d6c:	40023800 	.word	0x40023800
 8001d70:	40021400 	.word	0x40021400
 8001d74:	40020800 	.word	0x40020800
 8001d78:	40021800 	.word	0x40021800
 8001d7c:	40021000 	.word	0x40021000
 8001d80:	40020c00 	.word	0x40020c00
 8001d84:	40020400 	.word	0x40020400

08001d88 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001d88:	b570      	push	{r4, r5, r6, lr}
 8001d8a:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001d8c:	2300      	movs	r3, #0
 8001d8e:	9302      	str	r3, [sp, #8]
 8001d90:	4b20      	ldr	r3, [pc, #128]	@ (8001e14 <HAL_InitTick+0x8c>)
 8001d92:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001d94:	f042 0210 	orr.w	r2, r2, #16
 8001d98:	641a      	str	r2, [r3, #64]	@ 0x40
 8001d9a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001d9c:	f003 0310 	and.w	r3, r3, #16
 8001da0:	9302      	str	r3, [sp, #8]
{
 8001da2:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001da4:	a901      	add	r1, sp, #4
 8001da6:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001da8:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001daa:	f003 fe65 	bl	8005a78 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8001dae:	9b06      	ldr	r3, [sp, #24]
 8001db0:	bb4b      	cbnz	r3, 8001e06 <HAL_InitTick+0x7e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8001db2:	f003 fe41 	bl	8005a38 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001db6:	4e18      	ldr	r6, [pc, #96]	@ (8001e18 <HAL_InitTick+0x90>)
 8001db8:	4b18      	ldr	r3, [pc, #96]	@ (8001e1c <HAL_InitTick+0x94>)
 8001dba:	6033      	str	r3, [r6, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001dbc:	f240 33e7 	movw	r3, #999	@ 0x3e7
 8001dc0:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001dc2:	4b17      	ldr	r3, [pc, #92]	@ (8001e20 <HAL_InitTick+0x98>)
 8001dc4:	fbb0 f3f3 	udiv	r3, r0, r3
 8001dc8:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001dca:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8001dcc:	4630      	mov	r0, r6
  htim6.Init.ClockDivision = 0;
 8001dce:	2300      	movs	r3, #0
 8001dd0:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001dd2:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001dd4:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 8001dd6:	f004 fca1 	bl	800671c <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8001dda:	4604      	mov	r4, r0
 8001ddc:	b980      	cbnz	r0, 8001e00 <HAL_InitTick+0x78>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 8001dde:	4630      	mov	r0, r6
 8001de0:	f004 fb5e 	bl	80064a0 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8001de4:	4604      	mov	r4, r0
 8001de6:	b958      	cbnz	r0, 8001e00 <HAL_InitTick+0x78>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001de8:	2036      	movs	r0, #54	@ 0x36
 8001dea:	f002 fb7b 	bl	80044e4 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001dee:	2d0f      	cmp	r5, #15
 8001df0:	d80d      	bhi.n	8001e0e <HAL_InitTick+0x86>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8001df2:	4622      	mov	r2, r4
 8001df4:	4629      	mov	r1, r5
 8001df6:	2036      	movs	r0, #54	@ 0x36
 8001df8:	f002 fb42 	bl	8004480 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8001dfc:	4b09      	ldr	r3, [pc, #36]	@ (8001e24 <HAL_InitTick+0x9c>)
 8001dfe:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 8001e00:	4620      	mov	r0, r4
 8001e02:	b008      	add	sp, #32
 8001e04:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8001e06:	f003 fe17 	bl	8005a38 <HAL_RCC_GetPCLK1Freq>
 8001e0a:	0040      	lsls	r0, r0, #1
 8001e0c:	e7d3      	b.n	8001db6 <HAL_InitTick+0x2e>
        status = HAL_ERROR;
 8001e0e:	2401      	movs	r4, #1
 8001e10:	e7f6      	b.n	8001e00 <HAL_InitTick+0x78>
 8001e12:	bf00      	nop
 8001e14:	40023800 	.word	0x40023800
 8001e18:	20000aa4 	.word	0x20000aa4
 8001e1c:	40001000 	.word	0x40001000
 8001e20:	000f4240 	.word	0x000f4240
 8001e24:	2000007c 	.word	0x2000007c

08001e28 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001e28:	4770      	bx	lr

08001e2a <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001e2a:	e7fe      	b.n	8001e2a <HardFault_Handler>

08001e2c <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001e2c:	e7fe      	b.n	8001e2c <MemManage_Handler>

08001e2e <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001e2e:	e7fe      	b.n	8001e2e <BusFault_Handler>

08001e30 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001e30:	e7fe      	b.n	8001e30 <UsageFault_Handler>

08001e32 <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 8001e32:	4770      	bx	lr

08001e34 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001e34:	4801      	ldr	r0, [pc, #4]	@ (8001e3c <TIM6_DAC_IRQHandler+0x8>)
 8001e36:	f004 bb71 	b.w	800651c <HAL_TIM_IRQHandler>
 8001e3a:	bf00      	nop
 8001e3c:	20000aa4 	.word	0x20000aa4

08001e40 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001e40:	4801      	ldr	r0, [pc, #4]	@ (8001e48 <LTDC_IRQHandler+0x8>)
 8001e42:	f003 badb 	b.w	80053fc <HAL_LTDC_IRQHandler>
 8001e46:	bf00      	nop
 8001e48:	200008cc 	.word	0x200008cc

08001e4c <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001e4c:	4801      	ldr	r0, [pc, #4]	@ (8001e54 <DMA2D_IRQHandler+0x8>)
 8001e4e:	f002 bb95 	b.w	800457c <HAL_DMA2D_IRQHandler>
 8001e52:	bf00      	nop
 8001e54:	200009c8 	.word	0x200009c8

08001e58 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001e58:	2001      	movs	r0, #1
 8001e5a:	4770      	bx	lr

08001e5c <_kill>:

int _kill(int pid, int sig)
{
 8001e5c:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001e5e:	f01b fbbf 	bl	801d5e0 <__errno>
 8001e62:	2316      	movs	r3, #22
 8001e64:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001e66:	f04f 30ff 	mov.w	r0, #4294967295
 8001e6a:	bd08      	pop	{r3, pc}

08001e6c <_exit>:

void _exit (int status)
{
 8001e6c:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001e6e:	f01b fbb7 	bl	801d5e0 <__errno>
 8001e72:	2316      	movs	r3, #22
 8001e74:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001e76:	e7fe      	b.n	8001e76 <_exit+0xa>

08001e78 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001e78:	b570      	push	{r4, r5, r6, lr}
 8001e7a:	460d      	mov	r5, r1
 8001e7c:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001e7e:	460e      	mov	r6, r1
 8001e80:	1b73      	subs	r3, r6, r5
 8001e82:	429c      	cmp	r4, r3
 8001e84:	dc01      	bgt.n	8001e8a <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001e86:	4620      	mov	r0, r4
 8001e88:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001e8a:	f3af 8000 	nop.w
 8001e8e:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001e92:	e7f5      	b.n	8001e80 <_read+0x8>

08001e94 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001e94:	b570      	push	{r4, r5, r6, lr}
 8001e96:	460d      	mov	r5, r1
 8001e98:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001e9a:	460e      	mov	r6, r1
 8001e9c:	1b73      	subs	r3, r6, r5
 8001e9e:	429c      	cmp	r4, r3
 8001ea0:	dc01      	bgt.n	8001ea6 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001ea2:	4620      	mov	r0, r4
 8001ea4:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001ea6:	f816 0b01 	ldrb.w	r0, [r6], #1
 8001eaa:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001eae:	e7f5      	b.n	8001e9c <_write+0x8>

08001eb0 <_close>:

int _close(int file)
{
	return -1;
}
 8001eb0:	f04f 30ff 	mov.w	r0, #4294967295
 8001eb4:	4770      	bx	lr

08001eb6 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001eb6:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001eba:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001ebc:	2000      	movs	r0, #0
 8001ebe:	4770      	bx	lr

08001ec0 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001ec0:	2001      	movs	r0, #1
 8001ec2:	4770      	bx	lr

08001ec4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001ec4:	2000      	movs	r0, #0
 8001ec6:	4770      	bx	lr

08001ec8 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001ec8:	4a0a      	ldr	r2, [pc, #40]	@ (8001ef4 <_sbrk+0x2c>)
 8001eca:	6811      	ldr	r1, [r2, #0]
{
 8001ecc:	b508      	push	{r3, lr}
 8001ece:	4603      	mov	r3, r0
	if (heap_end == 0)
 8001ed0:	b909      	cbnz	r1, 8001ed6 <_sbrk+0xe>
		heap_end = &end;
 8001ed2:	4909      	ldr	r1, [pc, #36]	@ (8001ef8 <_sbrk+0x30>)
 8001ed4:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8001ed6:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8001ed8:	4669      	mov	r1, sp
 8001eda:	4403      	add	r3, r0
 8001edc:	428b      	cmp	r3, r1
 8001ede:	d906      	bls.n	8001eee <_sbrk+0x26>
	{
		errno = ENOMEM;
 8001ee0:	f01b fb7e 	bl	801d5e0 <__errno>
 8001ee4:	230c      	movs	r3, #12
 8001ee6:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001ee8:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8001eec:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8001eee:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8001ef0:	e7fc      	b.n	8001eec <_sbrk+0x24>
 8001ef2:	bf00      	nop
 8001ef4:	20000aec 	.word	0x20000aec
 8001ef8:	20012608 	.word	0x20012608

08001efc <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const touchgfx::FontId COUNTER = 3; // verdanab_15_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8001efc:	4770      	bx	lr

08001efe <_ZN23ApplicationFontProviderD0Ev>:
 8001efe:	b510      	push	{r4, lr}
 8001f00:	2104      	movs	r1, #4
 8001f02:	4604      	mov	r4, r0
 8001f04:	f01b f81e 	bl	801cf44 <_ZdlPvj>
 8001f08:	4620      	mov	r0, r4
 8001f0a:	bd10      	pop	{r4, pc}

08001f0c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8001f0c:	b508      	push	{r3, lr}
    switch (typography)
 8001f0e:	2903      	cmp	r1, #3
 8001f10:	d813      	bhi.n	8001f3a <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 8001f12:	e8df f001 	tbb	[pc, r1]
 8001f16:	0602      	.short	0x0602
 8001f18:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_15_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8001f1a:	f001 faad 	bl	8003478 <_ZN17TypedTextDatabase8getFontsEv>
 8001f1e:	6800      	ldr	r0, [r0, #0]
        // verdanab_15_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8001f20:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8001f22:	f001 faa9 	bl	8003478 <_ZN17TypedTextDatabase8getFontsEv>
 8001f26:	6840      	ldr	r0, [r0, #4]
 8001f28:	e7fa      	b.n	8001f20 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8001f2a:	f001 faa5 	bl	8003478 <_ZN17TypedTextDatabase8getFontsEv>
 8001f2e:	6880      	ldr	r0, [r0, #8]
 8001f30:	e7f6      	b.n	8001f20 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8001f32:	f001 faa1 	bl	8003478 <_ZN17TypedTextDatabase8getFontsEv>
 8001f36:	68c0      	ldr	r0, [r0, #12]
 8001f38:	e7f2      	b.n	8001f20 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 8001f3a:	2000      	movs	r0, #0
 8001f3c:	e7f0      	b.n	8001f20 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08001f40 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8001f40:	4800      	ldr	r0, [pc, #0]	@ (8001f44 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8001f42:	4770      	bx	lr
 8001f44:	0801eafc 	.word	0x0801eafc

08001f48 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8001f48:	2020      	movs	r0, #32
 8001f4a:	4770      	bx	lr

08001f4c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8001f4c:	b513      	push	{r0, r1, r4, lr}
 8001f4e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8001f50:	b151      	cbz	r1, 8001f68 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8001f52:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8001f54:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8001f56:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8001f5a:	aa01      	add	r2, sp, #4
 8001f5c:	689c      	ldr	r4, [r3, #8]
 8001f5e:	f10d 0303 	add.w	r3, sp, #3
 8001f62:	47a0      	blx	r4
        return glyph;
    }
 8001f64:	b002      	add	sp, #8
 8001f66:	bd10      	pop	{r4, pc}
            return 0;
 8001f68:	4608      	mov	r0, r1
 8001f6a:	e7fb      	b.n	8001f64 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08001f6c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8001f6c:	89c0      	ldrh	r0, [r0, #14]
 8001f6e:	4770      	bx	lr

08001f70 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8001f70:	8a00      	ldrh	r0, [r0, #16]
 8001f72:	4770      	bx	lr

08001f74 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8001f74:	88c0      	ldrh	r0, [r0, #6]
 8001f76:	4770      	bx	lr

08001f78 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8001f78:	8880      	ldrh	r0, [r0, #4]
 8001f7a:	4770      	bx	lr

08001f7c <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8001f7c:	7a80      	ldrb	r0, [r0, #10]
    }
 8001f7e:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 8001f82:	4770      	bx	lr

08001f84 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8001f84:	7a80      	ldrb	r0, [r0, #10]
    }
 8001f86:	09c0      	lsrs	r0, r0, #7
 8001f88:	4770      	bx	lr

08001f8a <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 8001f8a:	2000      	movs	r0, #0
 8001f8c:	4770      	bx	lr
	...

08001f90 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 8001f90:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8001f98 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 8001f94:	4770      	bx	lr
 8001f96:	bf00      	nop
 8001f98:	00000000 	.word	0x00000000

08001f9c <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8001f9c:	4770      	bx	lr

08001f9e <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8001f9e:	b510      	push	{r4, lr}
    }
 8001fa0:	2108      	movs	r1, #8
    virtual ~TypedText()
 8001fa2:	4604      	mov	r4, r0
    }
 8001fa4:	f01a ffce 	bl	801cf44 <_ZdlPvj>
 8001fa8:	4620      	mov	r0, r4
 8001faa:	bd10      	pop	{r4, pc}

08001fac <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8001fac:	2000      	movs	r0, #0
 8001fae:	4770      	bx	lr

08001fb0 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8001fb0:	8081      	strh	r1, [r0, #4]
    }
 8001fb2:	4770      	bx	lr

08001fb4 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8001fb4:	80c1      	strh	r1, [r0, #6]
    }
 8001fb6:	4770      	bx	lr

08001fb8 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001fb8:	8101      	strh	r1, [r0, #8]
    }
 8001fba:	4770      	bx	lr

08001fbc <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001fbc:	8141      	strh	r1, [r0, #10]
    }
 8001fbe:	4770      	bx	lr

08001fc0 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001fc0:	4770      	bx	lr

08001fc2 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8001fc2:	4770      	bx	lr

08001fc4 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8001fc4:	4770      	bx	lr

08001fc6 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8001fc6:	4770      	bx	lr

08001fc8 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001fc8:	4770      	bx	lr

08001fca <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8001fca:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001fcc:	88c4      	ldrh	r4, [r0, #6]
 8001fce:	6803      	ldr	r3, [r0, #0]
 8001fd0:	1b12      	subs	r2, r2, r4
 8001fd2:	8884      	ldrh	r4, [r0, #4]
 8001fd4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8001fd6:	1b09      	subs	r1, r1, r4
 8001fd8:	b212      	sxth	r2, r2
    }
 8001fda:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8001fde:	b209      	sxth	r1, r1
 8001fe0:	4718      	bx	r3

08001fe2 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8001fe2:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8001fe6:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001fe8:	f04f 33ff 	mov.w	r3, #4294967295
 8001fec:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8001fee:	6813      	ldr	r3, [r2, #0]
 8001ff0:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8001ff2:	6010      	str	r0, [r2, #0]
    }
 8001ff4:	4770      	bx	lr

08001ff6 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8001ff6:	4770      	bx	lr

08001ff8 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8001ff8:	4770      	bx	lr

08001ffa <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8001ffa:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 8001ffe:	6808      	ldr	r0, [r1, #0]
 8002000:	6849      	ldr	r1, [r1, #4]
 8002002:	c303      	stmia	r3!, {r0, r1}
    }
 8002004:	4770      	bx	lr

08002006 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002006:	4770      	bx	lr

08002008 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002008:	4770      	bx	lr

0800200a <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 800200a:	6041      	str	r1, [r0, #4]
    }
 800200c:	4770      	bx	lr

0800200e <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 800200e:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002010:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 8002012:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8002016:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800201a:	8002      	strh	r2, [r0, #0]
 800201c:	8042      	strh	r2, [r0, #2]
 800201e:	8084      	strh	r4, [r0, #4]
 8002020:	80c1      	strh	r1, [r0, #6]
        }
 8002022:	bd10      	pop	{r4, pc}

08002024 <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 8002024:	4770      	bx	lr

08002026 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002026:	4770      	bx	lr

08002028 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002028:	4b06      	ldr	r3, [pc, #24]	@ (8002044 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 800202a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800202e:	2300      	movs	r3, #0
 8002030:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002034:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002038:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800203c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 8002040:	4770      	bx	lr
 8002042:	bf00      	nop
 8002044:	0800229d 	.word	0x0800229d

08002048 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002048:	2301      	movs	r3, #1
 800204a:	7203      	strb	r3, [r0, #8]
    }
 800204c:	4770      	bx	lr

0800204e <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 800204e:	4770      	bx	lr

08002050 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE1EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 8002050:	4770      	bx	lr

08002052 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 8002052:	4770      	bx	lr

08002054 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002054:	4770      	bx	lr

08002056 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8002056:	4770      	bx	lr

08002058 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE1EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8002058:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 800205a:	6840      	ldr	r0, [r0, #4]
 800205c:	6803      	ldr	r3, [r0, #0]
 800205e:	3110      	adds	r1, #16
 8002060:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8002062:	4718      	bx	r3

08002064 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE1EE4initEv>:
    }

    virtual void init()
 8002064:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8002066:	6840      	ldr	r0, [r0, #4]
 8002068:	6803      	ldr	r3, [r0, #0]
 800206a:	3110      	adds	r1, #16
 800206c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800206e:	4718      	bx	r3

08002070 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE1EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8002070:	4770      	bx	lr

08002072 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 8002072:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 8002074:	6840      	ldr	r0, [r0, #4]
 8002076:	6803      	ldr	r3, [r0, #0]
 8002078:	3110      	adds	r1, #16
 800207a:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800207c:	4718      	bx	r3

0800207e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 800207e:	4601      	mov	r1, r0
        screenContainer->add(solid);
 8002080:	6840      	ldr	r0, [r0, #4]
 8002082:	6803      	ldr	r3, [r0, #0]
 8002084:	3110      	adds	r1, #16
 8002086:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8002088:	4718      	bx	r3

0800208a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 800208a:	4770      	bx	lr

0800208c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800208c:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 800208e:	68c2      	ldr	r2, [r0, #12]
 8002090:	6841      	ldr	r1, [r0, #4]
 8002092:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002094:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8002096:	eb01 0062 	add.w	r0, r1, r2, asr #1
 800209a:	07d2      	lsls	r2, r2, #31
 800209c:	bf48      	it	mi
 800209e:	590a      	ldrmi	r2, [r1, r4]
 80020a0:	689b      	ldr	r3, [r3, #8]
    }
 80020a2:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 80020a6:	bf48      	it	mi
 80020a8:	58d3      	ldrmi	r3, [r2, r3]
 80020aa:	4718      	bx	r3

080020ac <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 80020ac:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 80020ae:	6840      	ldr	r0, [r0, #4]
 80020b0:	b130      	cbz	r0, 80020c0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80020b2:	689a      	ldr	r2, [r3, #8]
 80020b4:	b91a      	cbnz	r2, 80020be <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 80020b6:	68d8      	ldr	r0, [r3, #12]
 80020b8:	f000 0001 	and.w	r0, r0, #1
 80020bc:	4770      	bx	lr
 80020be:	2001      	movs	r0, #1
    }
 80020c0:	4770      	bx	lr

080020c2 <_ZN8touchgfx12NoTransitionD0Ev>:
 80020c2:	b510      	push	{r4, lr}
 80020c4:	210c      	movs	r1, #12
 80020c6:	4604      	mov	r4, r0
 80020c8:	f01a ff3c 	bl	801cf44 <_ZdlPvj>
 80020cc:	4620      	mov	r0, r4
 80020ce:	bd10      	pop	{r4, pc}

080020d0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80020d0:	b510      	push	{r4, lr}
 80020d2:	2110      	movs	r1, #16
 80020d4:	4604      	mov	r4, r0
 80020d6:	f01a ff35 	bl	801cf44 <_ZdlPvj>
 80020da:	4620      	mov	r0, r4
 80020dc:	bd10      	pop	{r4, pc}

080020de <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80020de:	b510      	push	{r4, lr}
 80020e0:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 80020e4:	4604      	mov	r4, r0
 80020e6:	f01a ff2d 	bl	801cf44 <_ZdlPvj>
 80020ea:	4620      	mov	r0, r4
 80020ec:	bd10      	pop	{r4, pc}

080020ee <_ZN8touchgfx14WipeTransitionILNS_9DirectionE1EED0Ev>:
class WipeTransition : public Transition
 80020ee:	b510      	push	{r4, lr}
 80020f0:	2138      	movs	r1, #56	@ 0x38
 80020f2:	4604      	mov	r4, r0
 80020f4:	f01a ff26 	bl	801cf44 <_ZdlPvj>
 80020f8:	4620      	mov	r0, r4
 80020fa:	bd10      	pop	{r4, pc}

080020fc <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 80020fc:	b510      	push	{r4, lr}
 80020fe:	2128      	movs	r1, #40	@ 0x28
 8002100:	4604      	mov	r4, r0
 8002102:	f01a ff1f 	bl	801cf44 <_ZdlPvj>
 8002106:	4620      	mov	r0, r4
 8002108:	bd10      	pop	{r4, pc}

0800210a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 800210a:	b510      	push	{r4, lr}
 800210c:	2138      	movs	r1, #56	@ 0x38
 800210e:	4604      	mov	r4, r0
 8002110:	f01a ff18 	bl	801cf44 <_ZdlPvj>
 8002114:	4620      	mov	r0, r4
 8002116:	bd10      	pop	{r4, pc}

08002118 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002118:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 800211a:	f00a f9ab 	bl	800c474 <_ZN8touchgfx11Application11getInstanceEv>
 800211e:	6803      	ldr	r3, [r0, #0]
    }
 8002120:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8002124:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002126:	4718      	bx	r3

08002128 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8002128:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800212c:	b112      	cbz	r2, 8002134 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800212e:	6803      	ldr	r3, [r0, #0]
 8002130:	695b      	ldr	r3, [r3, #20]
 8002132:	4718      	bx	r3
    }
 8002134:	4770      	bx	lr
	...

08002138 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE1EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8002138:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800213a:	4604      	mov	r4, r0
        animationCounter++;
 800213c:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 800213e:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8002140:	3001      	adds	r0, #1
 8002142:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8002144:	4298      	cmp	r0, r3
        animationCounter++;
 8002146:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8002148:	d905      	bls.n	8002156 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE1EE15handleTickEventEv+0x1e>
            done = true;
 800214a:	2301      	movs	r3, #1
 800214c:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800214e:	2300      	movs	r3, #0
 8002150:	72a3      	strb	r3, [r4, #10]
    }
 8002152:	b002      	add	sp, #8
 8002154:	bd70      	pop	{r4, r5, r6, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002156:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800215a:	2100      	movs	r1, #0
 800215c:	f00b fecc 	bl	800def8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8002160:	07c3      	lsls	r3, r0, #31
 8002162:	d506      	bpl.n	8002172 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE1EE15handleTickEventEv+0x3a>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002164:	2800      	cmp	r0, #0
 8002166:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800216a:	bfc8      	it	gt
 800216c:	2301      	movgt	r3, #1
 800216e:	4418      	add	r0, r3
 8002170:	b200      	sxth	r0, r0
                solid.setHeight(HAL::DISPLAY_HEIGHT - calculatedValue);
 8002172:	4a14      	ldr	r2, [pc, #80]	@ (80021c4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE1EE15handleTickEventEv+0x8c>)
                const uint16_t prevSolidHeight = solid.getHeight();
 8002174:	8b63      	ldrh	r3, [r4, #26]
                solid.setHeight(HAL::DISPLAY_HEIGHT - calculatedValue);
 8002176:	8811      	ldrh	r1, [r2, #0]
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002178:	81e0      	strh	r0, [r4, #14]
                solid.setHeight(HAL::DISPLAY_HEIGHT - calculatedValue);
 800217a:	b280      	uxth	r0, r0
 800217c:	1a0a      	subs	r2, r1, r0
                const uint16_t delta = prevSolidHeight - solid.getHeight();
 800217e:	4403      	add	r3, r0
                screenContainer->invalidateRect(r);
 8002180:	6860      	ldr	r0, [r4, #4]
                Rect r(0, solid.getHeight(), HAL::DISPLAY_WIDTH, delta);
 8002182:	4d11      	ldr	r5, [pc, #68]	@ (80021c8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE1EE15handleTickEventEv+0x90>)
                const uint16_t delta = prevSolidHeight - solid.getHeight();
 8002184:	1a5b      	subs	r3, r3, r1
 8002186:	f8ad 3006 	strh.w	r3, [sp, #6]
                screenContainer->invalidateRect(r);
 800218a:	6803      	ldr	r3, [r0, #0]
                Rect r(0, solid.getHeight(), HAL::DISPLAY_WIDTH, delta);
 800218c:	f9b5 5000 	ldrsh.w	r5, [r5]
                screenContainer->invalidateRect(r);
 8002190:	691b      	ldr	r3, [r3, #16]
 8002192:	f8ad 5004 	strh.w	r5, [sp, #4]
                solid.setHeight(HAL::DISPLAY_HEIGHT - calculatedValue);
 8002196:	b212      	sxth	r2, r2
 8002198:	2600      	movs	r6, #0
        rect.height = height;
 800219a:	8362      	strh	r2, [r4, #26]
 800219c:	f8ad 6000 	strh.w	r6, [sp]
 80021a0:	f8ad 2002 	strh.w	r2, [sp, #2]
                screenContainer->invalidateRect(r);
 80021a4:	4669      	mov	r1, sp
 80021a6:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 80021a8:	7aa3      	ldrb	r3, [r4, #10]
 80021aa:	2b01      	cmp	r3, #1
 80021ac:	d1d1      	bne.n	8002152 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE1EE15handleTickEventEv+0x1a>
 80021ae:	4b07      	ldr	r3, [pc, #28]	@ (80021cc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE1EE15handleTickEventEv+0x94>)
 80021b0:	781b      	ldrb	r3, [r3, #0]
 80021b2:	2b00      	cmp	r3, #0
 80021b4:	d0cd      	beq.n	8002152 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE1EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80021b6:	f00a f95d 	bl	800c474 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80021ba:	b002      	add	sp, #8
 80021bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80021c0:	f00a b95e 	b.w	800c480 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
 80021c4:	200119ca 	.word	0x200119ca
 80021c8:	200119c8 	.word	0x200119c8
 80021cc:	200119d2 	.word	0x200119d2

080021d0 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 80021d0:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80021d4:	b11a      	cbz	r2, 80021de <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80021d6:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 80021da:	b102      	cbz	r2, 80021de <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80021dc:	6018      	str	r0, [r3, #0]
        }
    }
 80021de:	4770      	bx	lr

080021e0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80021e0:	b510      	push	{r4, lr}
 80021e2:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80021e4:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 80021e8:	b158      	cbz	r0, 8002202 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80021ea:	6803      	ldr	r3, [r0, #0]
 80021ec:	68db      	ldr	r3, [r3, #12]
 80021ee:	4798      	blx	r3
 80021f0:	b138      	cbz	r0, 8002202 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80021f2:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 80021f6:	6803      	ldr	r3, [r0, #0]
 80021f8:	689b      	ldr	r3, [r3, #8]
 80021fa:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80021fc:	2300      	movs	r3, #0
 80021fe:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 8002202:	bd10      	pop	{r4, pc}

08002204 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8002204:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002206:	4604      	mov	r4, r0
        animationCounter++;
 8002208:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 800220a:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 800220c:	3001      	adds	r0, #1
 800220e:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8002210:	4298      	cmp	r0, r3
        animationCounter++;
 8002212:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8002214:	d905      	bls.n	8002222 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 8002216:	2301      	movs	r3, #1
 8002218:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800221a:	2300      	movs	r3, #0
 800221c:	72a3      	strb	r3, [r4, #10]
    }
 800221e:	b003      	add	sp, #12
 8002220:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002222:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002226:	2100      	movs	r1, #0
 8002228:	f00b fe66 	bl	800def8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 800222c:	07c3      	lsls	r3, r0, #31
 800222e:	d506      	bpl.n	800223e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x3a>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002230:	2800      	cmp	r0, #0
 8002232:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002236:	bfc8      	it	gt
 8002238:	2301      	movgt	r3, #1
 800223a:	4418      	add	r0, r3
 800223c:	b200      	sxth	r0, r0
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800223e:	4b14      	ldr	r3, [pc, #80]	@ (8002290 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x8c>)
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002240:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002242:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8002244:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002246:	b283      	uxth	r3, r0
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8002248:	4812      	ldr	r0, [pc, #72]	@ (8002294 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x90>)
 800224a:	f9b0 0000 	ldrsh.w	r0, [r0]
 800224e:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002252:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 8002254:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8002256:	442b      	add	r3, r5
 8002258:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800225a:	b212      	sxth	r2, r2
 800225c:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8002260:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8002262:	8322      	strh	r2, [r4, #24]
 8002264:	f8ad 2000 	strh.w	r2, [sp]
 8002268:	2200      	movs	r2, #0
 800226a:	691b      	ldr	r3, [r3, #16]
 800226c:	f8ad 2002 	strh.w	r2, [sp, #2]
 8002270:	4669      	mov	r1, sp
 8002272:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8002274:	7aa3      	ldrb	r3, [r4, #10]
 8002276:	2b01      	cmp	r3, #1
 8002278:	d1d1      	bne.n	800221e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 800227a:	4b07      	ldr	r3, [pc, #28]	@ (8002298 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
 800227c:	781b      	ldrb	r3, [r3, #0]
 800227e:	2b00      	cmp	r3, #0
 8002280:	d0cd      	beq.n	800221e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8002282:	f00a f8f7 	bl	800c474 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8002286:	b003      	add	sp, #12
 8002288:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800228c:	f00a b8f8 	b.w	800c480 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
 8002290:	200119c8 	.word	0x200119c8
 8002294:	200119ca 	.word	0x200119ca
 8002298:	200119d2 	.word	0x200119d2

0800229c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 800229c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80022a0:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80022a4:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80022a6:	68b0      	ldr	r0, [r6, #8]
 80022a8:	6803      	ldr	r3, [r0, #0]
 80022aa:	6a1b      	ldr	r3, [r3, #32]
 80022ac:	4798      	blx	r3
 80022ae:	f5b0 7fb4 	cmp.w	r0, #360	@ 0x168
 80022b2:	d205      	bcs.n	80022c0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 80022b4:	4b44      	ldr	r3, [pc, #272]	@ (80023c8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12c>)
 80022b6:	4a45      	ldr	r2, [pc, #276]	@ (80023cc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 80022b8:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80022ba:	4845      	ldr	r0, [pc, #276]	@ (80023d0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 80022bc:	f01a fe70 	bl	801cfa0 <__assert_func>
 80022c0:	6870      	ldr	r0, [r6, #4]
 80022c2:	6803      	ldr	r3, [r0, #0]
 80022c4:	6a1b      	ldr	r3, [r3, #32]
 80022c6:	4798      	blx	r3
 80022c8:	280f      	cmp	r0, #15
 80022ca:	d803      	bhi.n	80022d4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 80022cc:	4b41      	ldr	r3, [pc, #260]	@ (80023d4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 80022ce:	4a3f      	ldr	r2, [pc, #252]	@ (80023cc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 80022d0:	21a4      	movs	r1, #164	@ 0xa4
 80022d2:	e7f2      	b.n	80022ba <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80022d4:	68f0      	ldr	r0, [r6, #12]
 80022d6:	6803      	ldr	r3, [r0, #0]
 80022d8:	6a1b      	ldr	r3, [r3, #32]
 80022da:	4798      	blx	r3
 80022dc:	280b      	cmp	r0, #11
 80022de:	d803      	bhi.n	80022e8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 80022e0:	4b3d      	ldr	r3, [pc, #244]	@ (80023d8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 80022e2:	4a3a      	ldr	r2, [pc, #232]	@ (80023cc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 80022e4:	21a5      	movs	r1, #165	@ 0xa5
 80022e6:	e7e8      	b.n	80022ba <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80022e8:	f00a f8c4 	bl	800c474 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80022ec:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 80023e0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80022f0:	3004      	adds	r0, #4
 80022f2:	f00a f925 	bl	800c540 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80022f6:	f8d9 0000 	ldr.w	r0, [r9]
 80022fa:	b110      	cbz	r0, 8002302 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 80022fc:	6803      	ldr	r3, [r0, #0]
 80022fe:	68db      	ldr	r3, [r3, #12]
 8002300:	4798      	blx	r3
    if (*currentTrans)
 8002302:	f8d9 0000 	ldr.w	r0, [r9]
 8002306:	b110      	cbz	r0, 800230e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8002308:	6803      	ldr	r3, [r0, #0]
 800230a:	681b      	ldr	r3, [r3, #0]
 800230c:	4798      	blx	r3
    if (*currentScreen)
 800230e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80023e4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
 8002312:	f8d8 0000 	ldr.w	r0, [r8]
 8002316:	b110      	cbz	r0, 800231e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8002318:	6803      	ldr	r3, [r0, #0]
 800231a:	695b      	ldr	r3, [r3, #20]
 800231c:	4798      	blx	r3
    if (*currentPresenter)
 800231e:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002322:	b110      	cbz	r0, 800232a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8002324:	6803      	ldr	r3, [r0, #0]
 8002326:	685b      	ldr	r3, [r3, #4]
 8002328:	4798      	blx	r3
    if (*currentScreen)
 800232a:	f8d8 0000 	ldr.w	r0, [r8]
 800232e:	b110      	cbz	r0, 8002336 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8002330:	6803      	ldr	r3, [r0, #0]
 8002332:	681b      	ldr	r3, [r3, #0]
 8002334:	4798      	blx	r3
    if (*currentPresenter)
 8002336:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800233a:	b110      	cbz	r0, 8002342 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800233c:	6803      	ldr	r3, [r0, #0]
 800233e:	689b      	ldr	r3, [r3, #8]
 8002340:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002342:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002344:	6803      	ldr	r3, [r0, #0]
 8002346:	2100      	movs	r1, #0
 8002348:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800234a:	4798      	blx	r3
        : screenContainer(0), done(false)
 800234c:	f04f 0b00 	mov.w	fp, #0
 8002350:	4b22      	ldr	r3, [pc, #136]	@ (80023dc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 8002352:	f8c0 b004 	str.w	fp, [r0, #4]
 8002356:	4604      	mov	r4, r0
 8002358:	f880 b008 	strb.w	fp, [r0, #8]
 800235c:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800235e:	68b0      	ldr	r0, [r6, #8]
 8002360:	6803      	ldr	r3, [r0, #0]
 8002362:	4659      	mov	r1, fp
 8002364:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002366:	4798      	blx	r3
 8002368:	4605      	mov	r5, r0
 800236a:	f001 f903 	bl	8003574 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800236e:	6870      	ldr	r0, [r6, #4]
 8002370:	6803      	ldr	r3, [r0, #0]
 8002372:	4659      	mov	r1, fp
 8002374:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002376:	4798      	blx	r3
 8002378:	4629      	mov	r1, r5
 800237a:	4606      	mov	r6, r0
 800237c:	f001 f8c4 	bl	8003508 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 8002380:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8002382:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8002386:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 800238a:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800238e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002392:	682b      	ldr	r3, [r5, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002394:	f8c6 a008 	str.w	sl, [r6, #8]
 8002398:	4628      	mov	r0, r5
 800239a:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 800239c:	63ee      	str	r6, [r5, #60]	@ 0x3c
 800239e:	4798      	blx	r3
    newPresenter->activate();
 80023a0:	6833      	ldr	r3, [r6, #0]
 80023a2:	4630      	mov	r0, r6
 80023a4:	681b      	ldr	r3, [r3, #0]
 80023a6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80023a8:	4621      	mov	r1, r4
 80023aa:	4628      	mov	r0, r5
 80023ac:	f00b fd9e 	bl	800deec <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80023b0:	6823      	ldr	r3, [r4, #0]
 80023b2:	4620      	mov	r0, r4
 80023b4:	691b      	ldr	r3, [r3, #16]
 80023b6:	4798      	blx	r3
    newTransition->invalidate();
 80023b8:	6823      	ldr	r3, [r4, #0]
 80023ba:	695b      	ldr	r3, [r3, #20]
 80023bc:	4620      	mov	r0, r4
}
 80023be:	b001      	add	sp, #4
 80023c0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80023c4:	4718      	bx	r3
 80023c6:	bf00      	nop
 80023c8:	0801ed8c 	.word	0x0801ed8c
 80023cc:	0801ee1a 	.word	0x0801ee1a
 80023d0:	0801eeec 	.word	0x0801eeec
 80023d4:	0801ef33 	.word	0x0801ef33
 80023d8:	0801efd6 	.word	0x0801efd6
 80023dc:	0801f320 	.word	0x0801f320
 80023e0:	20011a14 	.word	0x20011a14
 80023e4:	20011a10 	.word	0x20011a10

080023e8 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80023e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80023ec:	461d      	mov	r5, r3
        setX(x);
 80023ee:	6803      	ldr	r3, [r0, #0]
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80023f0:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
        setX(x);
 80023f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80023f6:	4604      	mov	r4, r0
 80023f8:	4616      	mov	r6, r2
        setX(x);
 80023fa:	4798      	blx	r3
        setY(y);
 80023fc:	6823      	ldr	r3, [r4, #0]
 80023fe:	4631      	mov	r1, r6
 8002400:	4620      	mov	r0, r4
 8002402:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002404:	4798      	blx	r3
        setWidth(width);
 8002406:	6823      	ldr	r3, [r4, #0]
 8002408:	4629      	mov	r1, r5
 800240a:	4620      	mov	r0, r4
 800240c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800240e:	4798      	blx	r3
        setHeight(height);
 8002410:	6823      	ldr	r3, [r4, #0]
 8002412:	4639      	mov	r1, r7
 8002414:	4620      	mov	r0, r4
 8002416:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
    }
 8002418:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setHeight(height);
 800241c:	4718      	bx	r3
	...

08002420 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002420:	4b04      	ldr	r3, [pc, #16]	@ (8002434 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8002422:	681b      	ldr	r3, [r3, #0]
 8002424:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8002428:	b10a      	cbz	r2, 800242e <_ZN8touchgfx3HAL3lcdEv+0xe>
 800242a:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800242c:	b900      	cbnz	r0, 8002430 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 800242e:	6898      	ldr	r0, [r3, #8]
    }
 8002430:	4770      	bx	lr
 8002432:	bf00      	nop
 8002434:	200119d4 	.word	0x200119d4

08002438 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002438:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800243a:	4604      	mov	r4, r0
 800243c:	4617      	mov	r7, r2
 800243e:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002440:	f00a f94c 	bl	800c6dc <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002444:	4b10      	ldr	r3, [pc, #64]	@ (8002488 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8002446:	601c      	str	r4, [r3, #0]
      model(m)
 8002448:	4b10      	ldr	r3, [pc, #64]	@ (800248c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 800244a:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 800244c:	4b10      	ldr	r3, [pc, #64]	@ (8002490 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 800244e:	2500      	movs	r5, #0
 8002450:	e9c4 3551 	strd	r3, r5, [r4, #324]	@ 0x144
        return instance;
 8002454:	4b0f      	ldr	r3, [pc, #60]	@ (8002494 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8002456:	e9c4 5553 	strd	r5, r5, [r4, #332]	@ 0x14c
 800245a:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800245c:	6803      	ldr	r3, [r0, #0]
 800245e:	4629      	mov	r1, r5
 8002460:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8002462:	e9c4 554f 	strd	r5, r5, [r4, #316]	@ 0x13c
      model(m)
 8002466:	e9c4 7655 	strd	r7, r6, [r4, #340]	@ 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800246a:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 800246c:	4628      	mov	r0, r5
 800246e:	f000 ffb7 	bl	80033e0 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002472:	f7ff ffd5 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 8002476:	f013 f9d4 	bl	8015822 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800247a:	f7ff ffd1 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 800247e:	f013 fa4b 	bl	8015918 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8002482:	4620      	mov	r0, r4
 8002484:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002486:	bf00      	nop
 8002488:	20011a20 	.word	0x20011a20
 800248c:	0801f2cc 	.word	0x0801f2cc
 8002490:	0801f2b4 	.word	0x0801f2b4
 8002494:	200119d4 	.word	0x200119d4

08002498 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002498:	4b06      	ldr	r3, [pc, #24]	@ (80024b4 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 800249a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800249e:	2300      	movs	r3, #0
 80024a0:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80024a4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80024a8:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80024ac:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80024b0:	4770      	bx	lr
 80024b2:	bf00      	nop
 80024b4:	0800229d 	.word	0x0800229d

080024b8 <_ZN23FrontendApplicationBase36gotoScreen2ScreenWipeTransitionSouthEv>:
 80024b8:	4b06      	ldr	r3, [pc, #24]	@ (80024d4 <_ZN23FrontendApplicationBase36gotoScreen2ScreenWipeTransitionSouthEv+0x1c>)
 80024ba:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80024be:	2300      	movs	r3, #0
 80024c0:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Screen2

void FrontendApplicationBase::gotoScreen2ScreenWipeTransitionSouth()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen2ScreenWipeTransitionSouthImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80024c4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80024c8:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80024cc:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80024d0:	4770      	bx	lr
 80024d2:	bf00      	nop
 80024d4:	08002699 	.word	0x08002699

080024d8 <_ZN23FrontendApplicationBase35gotoScreen2ScreenWipeTransitionEastEv>:
 80024d8:	4b06      	ldr	r3, [pc, #24]	@ (80024f4 <_ZN23FrontendApplicationBase35gotoScreen2ScreenWipeTransitionEastEv+0x1c>)
 80024da:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80024de:	2300      	movs	r3, #0
 80024e0:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
}

void FrontendApplicationBase::gotoScreen2ScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen2ScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80024e4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80024e8:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80024ec:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80024f0:	4770      	bx	lr
 80024f2:	bf00      	nop
 80024f4:	08002505 	.word	0x08002505

080024f8 <_ZN8touchgfx17AbstractPartition2atI11Screen2ViewEERT_t>:
 80024f8:	6803      	ldr	r3, [r0, #0]
 80024fa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80024fc:	4718      	bx	r3

080024fe <_ZN8touchgfx17AbstractPartition2atI16Screen2PresenterEERT_t>:
 80024fe:	6803      	ldr	r3, [r0, #0]
 8002500:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002502:	4718      	bx	r3

08002504 <_ZN23FrontendApplicationBase39gotoScreen2ScreenWipeTransitionEastImplEv>:

void FrontendApplicationBase::gotoScreen2ScreenWipeTransitionEastImpl()
{
 8002504:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen2View, Screen2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002508:	e9d0 ba55 	ldrd	fp, sl, [r0, #340]	@ 0x154
{
 800250c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800250e:	f8db 0008 	ldr.w	r0, [fp, #8]
 8002512:	6803      	ldr	r3, [r0, #0]
 8002514:	6a1b      	ldr	r3, [r3, #32]
 8002516:	4798      	blx	r3
 8002518:	f5b0 7f32 	cmp.w	r0, #712	@ 0x2c8
 800251c:	d205      	bcs.n	800252a <_ZN23FrontendApplicationBase39gotoScreen2ScreenWipeTransitionEastImplEv+0x26>
 800251e:	4b53      	ldr	r3, [pc, #332]	@ (800266c <_ZN23FrontendApplicationBase39gotoScreen2ScreenWipeTransitionEastImplEv+0x168>)
 8002520:	4a53      	ldr	r2, [pc, #332]	@ (8002670 <_ZN23FrontendApplicationBase39gotoScreen2ScreenWipeTransitionEastImplEv+0x16c>)
 8002522:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002524:	4853      	ldr	r0, [pc, #332]	@ (8002674 <_ZN23FrontendApplicationBase39gotoScreen2ScreenWipeTransitionEastImplEv+0x170>)
 8002526:	f01a fd3b 	bl	801cfa0 <__assert_func>
 800252a:	f8db 0004 	ldr.w	r0, [fp, #4]
 800252e:	6803      	ldr	r3, [r0, #0]
 8002530:	6a1b      	ldr	r3, [r3, #32]
 8002532:	4798      	blx	r3
 8002534:	280f      	cmp	r0, #15
 8002536:	d803      	bhi.n	8002540 <_ZN23FrontendApplicationBase39gotoScreen2ScreenWipeTransitionEastImplEv+0x3c>
 8002538:	4b4f      	ldr	r3, [pc, #316]	@ (8002678 <_ZN23FrontendApplicationBase39gotoScreen2ScreenWipeTransitionEastImplEv+0x174>)
 800253a:	4a4d      	ldr	r2, [pc, #308]	@ (8002670 <_ZN23FrontendApplicationBase39gotoScreen2ScreenWipeTransitionEastImplEv+0x16c>)
 800253c:	21a4      	movs	r1, #164	@ 0xa4
 800253e:	e7f1      	b.n	8002524 <_ZN23FrontendApplicationBase39gotoScreen2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002540:	f8db 000c 	ldr.w	r0, [fp, #12]
 8002544:	6803      	ldr	r3, [r0, #0]
 8002546:	6a1b      	ldr	r3, [r3, #32]
 8002548:	4798      	blx	r3
 800254a:	2837      	cmp	r0, #55	@ 0x37
 800254c:	d803      	bhi.n	8002556 <_ZN23FrontendApplicationBase39gotoScreen2ScreenWipeTransitionEastImplEv+0x52>
 800254e:	4b4b      	ldr	r3, [pc, #300]	@ (800267c <_ZN23FrontendApplicationBase39gotoScreen2ScreenWipeTransitionEastImplEv+0x178>)
 8002550:	4a47      	ldr	r2, [pc, #284]	@ (8002670 <_ZN23FrontendApplicationBase39gotoScreen2ScreenWipeTransitionEastImplEv+0x16c>)
 8002552:	21a5      	movs	r1, #165	@ 0xa5
 8002554:	e7e6      	b.n	8002524 <_ZN23FrontendApplicationBase39gotoScreen2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8002556:	f009 ff8d 	bl	800c474 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800255a:	f8df 9134 	ldr.w	r9, [pc, #308]	@ 8002690 <_ZN23FrontendApplicationBase39gotoScreen2ScreenWipeTransitionEastImplEv+0x18c>
 800255e:	3004      	adds	r0, #4
 8002560:	f009 ffee 	bl	800c540 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002564:	f8d9 0000 	ldr.w	r0, [r9]
 8002568:	b110      	cbz	r0, 8002570 <_ZN23FrontendApplicationBase39gotoScreen2ScreenWipeTransitionEastImplEv+0x6c>
        (*currentTrans)->tearDown();
 800256a:	6803      	ldr	r3, [r0, #0]
 800256c:	68db      	ldr	r3, [r3, #12]
 800256e:	4798      	blx	r3
    if (*currentTrans)
 8002570:	f8d9 0000 	ldr.w	r0, [r9]
 8002574:	b110      	cbz	r0, 800257c <_ZN23FrontendApplicationBase39gotoScreen2ScreenWipeTransitionEastImplEv+0x78>
        (*currentTrans)->~Transition();
 8002576:	6803      	ldr	r3, [r0, #0]
 8002578:	681b      	ldr	r3, [r3, #0]
 800257a:	4798      	blx	r3
    if (*currentScreen)
 800257c:	f8df 8114 	ldr.w	r8, [pc, #276]	@ 8002694 <_ZN23FrontendApplicationBase39gotoScreen2ScreenWipeTransitionEastImplEv+0x190>
 8002580:	f8d8 0000 	ldr.w	r0, [r8]
 8002584:	b110      	cbz	r0, 800258c <_ZN23FrontendApplicationBase39gotoScreen2ScreenWipeTransitionEastImplEv+0x88>
        (*currentScreen)->tearDownScreen();
 8002586:	6803      	ldr	r3, [r0, #0]
 8002588:	695b      	ldr	r3, [r3, #20]
 800258a:	4798      	blx	r3
    if (*currentPresenter)
 800258c:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002590:	b110      	cbz	r0, 8002598 <_ZN23FrontendApplicationBase39gotoScreen2ScreenWipeTransitionEastImplEv+0x94>
        (*currentPresenter)->deactivate();
 8002592:	6803      	ldr	r3, [r0, #0]
 8002594:	685b      	ldr	r3, [r3, #4]
 8002596:	4798      	blx	r3
    if (*currentScreen)
 8002598:	f8d8 0000 	ldr.w	r0, [r8]
 800259c:	b110      	cbz	r0, 80025a4 <_ZN23FrontendApplicationBase39gotoScreen2ScreenWipeTransitionEastImplEv+0xa0>
        (*currentScreen)->~Screen();
 800259e:	6803      	ldr	r3, [r0, #0]
 80025a0:	681b      	ldr	r3, [r3, #0]
 80025a2:	4798      	blx	r3
    if (*currentPresenter)
 80025a4:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80025a8:	b110      	cbz	r0, 80025b0 <_ZN23FrontendApplicationBase39gotoScreen2ScreenWipeTransitionEastImplEv+0xac>
        (*currentPresenter)->~Presenter();
 80025aa:	6803      	ldr	r3, [r0, #0]
 80025ac:	689b      	ldr	r3, [r3, #8]
 80025ae:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80025b0:	f8db 000c 	ldr.w	r0, [fp, #12]
 80025b4:	6803      	ldr	r3, [r0, #0]
 80025b6:	2100      	movs	r1, #0
 80025b8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80025ba:	4798      	blx	r3
          solid()
 80025bc:	4b30      	ldr	r3, [pc, #192]	@ (8002680 <_ZN23FrontendApplicationBase39gotoScreen2ScreenWipeTransitionEastImplEv+0x17c>)
 80025be:	6003      	str	r3, [r0, #0]
 80025c0:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 80025c4:	8103      	strh	r3, [r0, #8]
 80025c6:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80025ca:	6343      	str	r3, [r0, #52]	@ 0x34
    class FullSolidRect : public Widget
 80025cc:	4b2d      	ldr	r3, [pc, #180]	@ (8002684 <_ZN23FrontendApplicationBase39gotoScreen2ScreenWipeTransitionEastImplEv+0x180>)
 80025ce:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80025d0:	4a2d      	ldr	r2, [pc, #180]	@ (8002688 <_ZN23FrontendApplicationBase39gotoScreen2ScreenWipeTransitionEastImplEv+0x184>)
            targetValue = HAL::DISPLAY_WIDTH;
 80025d2:	4b2e      	ldr	r3, [pc, #184]	@ (800268c <_ZN23FrontendApplicationBase39gotoScreen2ScreenWipeTransitionEastImplEv+0x188>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80025d4:	f9b2 2000 	ldrsh.w	r2, [r2]
            targetValue = HAL::DISPLAY_WIDTH;
 80025d8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80025dc:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 80025de:	2500      	movs	r5, #0
 80025e0:	4604      	mov	r4, r0
 80025e2:	6045      	str	r5, [r0, #4]
          animationCounter(0),
 80025e4:	7285      	strb	r5, [r0, #10]
          calculatedValue(0),
 80025e6:	81c5      	strh	r5, [r0, #14]
          solid()
 80025e8:	e9c0 5505 	strd	r5, r5, [r0, #20]
 80025ec:	e9c0 5507 	strd	r5, r5, [r0, #28]
 80025f0:	e9c0 5509 	strd	r5, r5, [r0, #36]	@ 0x24
 80025f4:	e9c0 550b 	strd	r5, r5, [r0, #44]	@ 0x2c
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80025f8:	4629      	mov	r1, r5
 80025fa:	9200      	str	r2, [sp, #0]
 80025fc:	3010      	adds	r0, #16
 80025fe:	462a      	mov	r2, r5
 8002600:	f7ff fef2 	bl	80023e8 <_ZN8touchgfx8Drawable11setPositionEssss>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002604:	4629      	mov	r1, r5
 8002606:	f8db 0008 	ldr.w	r0, [fp, #8]
 800260a:	f7ff ff75 	bl	80024f8 <_ZN8touchgfx17AbstractPartition2atI11Screen2ViewEERT_t>
 800260e:	4606      	mov	r6, r0
 8002610:	f001 f88c 	bl	800372c <_ZN11Screen2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002614:	4629      	mov	r1, r5
 8002616:	f8db 0004 	ldr.w	r0, [fp, #4]
 800261a:	f7ff ff70 	bl	80024fe <_ZN8touchgfx17AbstractPartition2atI16Screen2PresenterEERT_t>
 800261e:	4631      	mov	r1, r6
 8002620:	4605      	mov	r5, r0
 8002622:	f000 ffc1 	bl	80035a8 <_ZN16Screen2PresenterC1ER11Screen2View>
    model->bind(newPresenter);
 8002626:	1d2b      	adds	r3, r5, #4
    *currentPresenter = newPresenter;
 8002628:	f8c7 513c 	str.w	r5, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 800262c:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8002630:	f8c8 6000 	str.w	r6, [r8]
 8002634:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002638:	6833      	ldr	r3, [r6, #0]
 800263a:	f8c5 a008 	str.w	sl, [r5, #8]
 800263e:	4630      	mov	r0, r6
 8002640:	68db      	ldr	r3, [r3, #12]
 8002642:	63f5      	str	r5, [r6, #60]	@ 0x3c
 8002644:	4798      	blx	r3
    newPresenter->activate();
 8002646:	682b      	ldr	r3, [r5, #0]
 8002648:	4628      	mov	r0, r5
 800264a:	681b      	ldr	r3, [r3, #0]
 800264c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800264e:	4621      	mov	r1, r4
 8002650:	4630      	mov	r0, r6
 8002652:	f00b fc4b 	bl	800deec <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002656:	6823      	ldr	r3, [r4, #0]
 8002658:	4620      	mov	r0, r4
 800265a:	691b      	ldr	r3, [r3, #16]
 800265c:	4798      	blx	r3
    newTransition->invalidate();
 800265e:	6823      	ldr	r3, [r4, #0]
 8002660:	695b      	ldr	r3, [r3, #20]
 8002662:	4620      	mov	r0, r4
}
 8002664:	b003      	add	sp, #12
 8002666:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800266a:	4718      	bx	r3
 800266c:	0801ed8c 	.word	0x0801ed8c
 8002670:	0801f079 	.word	0x0801f079
 8002674:	0801eeec 	.word	0x0801eeec
 8002678:	0801ef33 	.word	0x0801ef33
 800267c:	0801efd6 	.word	0x0801efd6
 8002680:	0801f344 	.word	0x0801f344
 8002684:	0801f24c 	.word	0x0801f24c
 8002688:	200119ca 	.word	0x200119ca
 800268c:	200119c8 	.word	0x200119c8
 8002690:	20011a14 	.word	0x20011a14
 8002694:	20011a10 	.word	0x20011a10

08002698 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv>:
{
 8002698:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen2View, Screen2Presenter, touchgfx::WipeTransition<SOUTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800269c:	e9d0 ba55 	ldrd	fp, sl, [r0, #340]	@ 0x154
{
 80026a0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80026a2:	f8db 0008 	ldr.w	r0, [fp, #8]
 80026a6:	6803      	ldr	r3, [r0, #0]
 80026a8:	6a1b      	ldr	r3, [r3, #32]
 80026aa:	4798      	blx	r3
 80026ac:	f5b0 7f32 	cmp.w	r0, #712	@ 0x2c8
 80026b0:	d205      	bcs.n	80026be <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x26>
 80026b2:	4b53      	ldr	r3, [pc, #332]	@ (8002800 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x168>)
 80026b4:	4a53      	ldr	r2, [pc, #332]	@ (8002804 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x16c>)
 80026b6:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80026b8:	4853      	ldr	r0, [pc, #332]	@ (8002808 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x170>)
 80026ba:	f01a fc71 	bl	801cfa0 <__assert_func>
 80026be:	f8db 0004 	ldr.w	r0, [fp, #4]
 80026c2:	6803      	ldr	r3, [r0, #0]
 80026c4:	6a1b      	ldr	r3, [r3, #32]
 80026c6:	4798      	blx	r3
 80026c8:	280f      	cmp	r0, #15
 80026ca:	d803      	bhi.n	80026d4 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x3c>
 80026cc:	4b4f      	ldr	r3, [pc, #316]	@ (800280c <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x174>)
 80026ce:	4a4d      	ldr	r2, [pc, #308]	@ (8002804 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x16c>)
 80026d0:	21a4      	movs	r1, #164	@ 0xa4
 80026d2:	e7f1      	b.n	80026b8 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80026d4:	f8db 000c 	ldr.w	r0, [fp, #12]
 80026d8:	6803      	ldr	r3, [r0, #0]
 80026da:	6a1b      	ldr	r3, [r3, #32]
 80026dc:	4798      	blx	r3
 80026de:	2837      	cmp	r0, #55	@ 0x37
 80026e0:	d803      	bhi.n	80026ea <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x52>
 80026e2:	4b4b      	ldr	r3, [pc, #300]	@ (8002810 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x178>)
 80026e4:	4a47      	ldr	r2, [pc, #284]	@ (8002804 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x16c>)
 80026e6:	21a5      	movs	r1, #165	@ 0xa5
 80026e8:	e7e6      	b.n	80026b8 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80026ea:	f009 fec3 	bl	800c474 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80026ee:	f8df 9134 	ldr.w	r9, [pc, #308]	@ 8002824 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x18c>
 80026f2:	3004      	adds	r0, #4
 80026f4:	f009 ff24 	bl	800c540 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80026f8:	f8d9 0000 	ldr.w	r0, [r9]
 80026fc:	b110      	cbz	r0, 8002704 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x6c>
        (*currentTrans)->tearDown();
 80026fe:	6803      	ldr	r3, [r0, #0]
 8002700:	68db      	ldr	r3, [r3, #12]
 8002702:	4798      	blx	r3
    if (*currentTrans)
 8002704:	f8d9 0000 	ldr.w	r0, [r9]
 8002708:	b110      	cbz	r0, 8002710 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x78>
        (*currentTrans)->~Transition();
 800270a:	6803      	ldr	r3, [r0, #0]
 800270c:	681b      	ldr	r3, [r3, #0]
 800270e:	4798      	blx	r3
    if (*currentScreen)
 8002710:	f8df 8114 	ldr.w	r8, [pc, #276]	@ 8002828 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x190>
 8002714:	f8d8 0000 	ldr.w	r0, [r8]
 8002718:	b110      	cbz	r0, 8002720 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x88>
        (*currentScreen)->tearDownScreen();
 800271a:	6803      	ldr	r3, [r0, #0]
 800271c:	695b      	ldr	r3, [r3, #20]
 800271e:	4798      	blx	r3
    if (*currentPresenter)
 8002720:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002724:	b110      	cbz	r0, 800272c <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x94>
        (*currentPresenter)->deactivate();
 8002726:	6803      	ldr	r3, [r0, #0]
 8002728:	685b      	ldr	r3, [r3, #4]
 800272a:	4798      	blx	r3
    if (*currentScreen)
 800272c:	f8d8 0000 	ldr.w	r0, [r8]
 8002730:	b110      	cbz	r0, 8002738 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0xa0>
        (*currentScreen)->~Screen();
 8002732:	6803      	ldr	r3, [r0, #0]
 8002734:	681b      	ldr	r3, [r3, #0]
 8002736:	4798      	blx	r3
    if (*currentPresenter)
 8002738:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800273c:	b110      	cbz	r0, 8002744 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0xac>
        (*currentPresenter)->~Presenter();
 800273e:	6803      	ldr	r3, [r0, #0]
 8002740:	689b      	ldr	r3, [r3, #8]
 8002742:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002744:	f8db 000c 	ldr.w	r0, [fp, #12]
 8002748:	6803      	ldr	r3, [r0, #0]
 800274a:	2100      	movs	r1, #0
 800274c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800274e:	4798      	blx	r3
          solid()
 8002750:	4b30      	ldr	r3, [pc, #192]	@ (8002814 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x17c>)
 8002752:	6003      	str	r3, [r0, #0]
 8002754:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 8002758:	8103      	strh	r3, [r0, #8]
 800275a:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800275e:	6343      	str	r3, [r0, #52]	@ 0x34
    class FullSolidRect : public Widget
 8002760:	4b2d      	ldr	r3, [pc, #180]	@ (8002818 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x180>)
 8002762:	6103      	str	r3, [r0, #16]
            targetValue = HAL::DISPLAY_HEIGHT;
 8002764:	4b2d      	ldr	r3, [pc, #180]	@ (800281c <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x184>)
        : screenContainer(0), done(false)
 8002766:	2500      	movs	r5, #0
 8002768:	f9b3 3000 	ldrsh.w	r3, [r3]
 800276c:	6045      	str	r5, [r0, #4]
          animationCounter(0),
 800276e:	7285      	strb	r5, [r0, #10]
          calculatedValue(0),
 8002770:	81c5      	strh	r5, [r0, #14]
            targetValue = HAL::DISPLAY_HEIGHT;
 8002772:	8183      	strh	r3, [r0, #12]
          solid()
 8002774:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8002778:	e9c0 5507 	strd	r5, r5, [r0, #28]
 800277c:	e9c0 5509 	strd	r5, r5, [r0, #36]	@ 0x24
 8002780:	e9c0 550b 	strd	r5, r5, [r0, #44]	@ 0x2c
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002784:	9300      	str	r3, [sp, #0]
 8002786:	4b26      	ldr	r3, [pc, #152]	@ (8002820 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionSouthImplEv+0x188>)
 8002788:	462a      	mov	r2, r5
 800278a:	4604      	mov	r4, r0
 800278c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8002790:	4629      	mov	r1, r5
 8002792:	3010      	adds	r0, #16
 8002794:	f7ff fe28 	bl	80023e8 <_ZN8touchgfx8Drawable11setPositionEssss>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002798:	4629      	mov	r1, r5
 800279a:	f8db 0008 	ldr.w	r0, [fp, #8]
 800279e:	f7ff feab 	bl	80024f8 <_ZN8touchgfx17AbstractPartition2atI11Screen2ViewEERT_t>
 80027a2:	4606      	mov	r6, r0
 80027a4:	f000 ffc2 	bl	800372c <_ZN11Screen2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80027a8:	4629      	mov	r1, r5
 80027aa:	f8db 0004 	ldr.w	r0, [fp, #4]
 80027ae:	f7ff fea6 	bl	80024fe <_ZN8touchgfx17AbstractPartition2atI16Screen2PresenterEERT_t>
 80027b2:	4631      	mov	r1, r6
 80027b4:	4605      	mov	r5, r0
 80027b6:	f000 fef7 	bl	80035a8 <_ZN16Screen2PresenterC1ER11Screen2View>
    model->bind(newPresenter);
 80027ba:	1d2b      	adds	r3, r5, #4
    *currentPresenter = newPresenter;
 80027bc:	f8c7 513c 	str.w	r5, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 80027c0:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 80027c4:	f8c8 6000 	str.w	r6, [r8]
 80027c8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80027cc:	6833      	ldr	r3, [r6, #0]
 80027ce:	f8c5 a008 	str.w	sl, [r5, #8]
 80027d2:	4630      	mov	r0, r6
 80027d4:	68db      	ldr	r3, [r3, #12]
 80027d6:	63f5      	str	r5, [r6, #60]	@ 0x3c
 80027d8:	4798      	blx	r3
    newPresenter->activate();
 80027da:	682b      	ldr	r3, [r5, #0]
 80027dc:	4628      	mov	r0, r5
 80027de:	681b      	ldr	r3, [r3, #0]
 80027e0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80027e2:	4621      	mov	r1, r4
 80027e4:	4630      	mov	r0, r6
 80027e6:	f00b fb81 	bl	800deec <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80027ea:	6823      	ldr	r3, [r4, #0]
 80027ec:	4620      	mov	r0, r4
 80027ee:	691b      	ldr	r3, [r3, #16]
 80027f0:	4798      	blx	r3
    newTransition->invalidate();
 80027f2:	6823      	ldr	r3, [r4, #0]
 80027f4:	695b      	ldr	r3, [r3, #20]
 80027f6:	4620      	mov	r0, r4
}
 80027f8:	b003      	add	sp, #12
 80027fa:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80027fe:	4718      	bx	r3
 8002800:	0801ed8c 	.word	0x0801ed8c
 8002804:	0801f15d 	.word	0x0801f15d
 8002808:	0801eeec 	.word	0x0801eeec
 800280c:	0801ef33 	.word	0x0801ef33
 8002810:	0801efd6 	.word	0x0801efd6
 8002814:	0801f368 	.word	0x0801f368
 8002818:	0801f24c 	.word	0x0801f24c
 800281c:	200119ca 	.word	0x200119ca
 8002820:	200119c8 	.word	0x200119c8
 8002824:	20011a14 	.word	0x20011a14
 8002828:	20011a10 	.word	0x20011a10

0800282c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 800282c:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 800282e:	4770      	bx	lr

08002830 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002830:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8002832:	4770      	bx	lr

08002834 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002834:	4770      	bx	lr

08002836 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8002836:	888b      	ldrh	r3, [r1, #4]
 8002838:	69c0      	ldr	r0, [r0, #28]
 800283a:	680a      	ldr	r2, [r1, #0]
 800283c:	0adb      	lsrs	r3, r3, #11
 800283e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8002842:	4410      	add	r0, r2
 8002844:	4770      	bx	lr

08002846 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8002846:	b510      	push	{r4, lr}
 8002848:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 800284a:	b1ba      	cbz	r2, 800287c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800284c:	7b10      	ldrb	r0, [r2, #12]
 800284e:	b168      	cbz	r0, 800286c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002850:	7b53      	ldrb	r3, [r2, #13]
 8002852:	7ad2      	ldrb	r2, [r2, #11]
 8002854:	021b      	lsls	r3, r3, #8
 8002856:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800285a:	431a      	orrs	r2, r3
 800285c:	6a23      	ldr	r3, [r4, #32]
 800285e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002862:	881a      	ldrh	r2, [r3, #0]
 8002864:	428a      	cmp	r2, r1
 8002866:	d102      	bne.n	800286e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002868:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 800286c:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800286e:	d805      	bhi.n	800287c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002870:	3801      	subs	r0, #1
 8002872:	b280      	uxth	r0, r0
 8002874:	3304      	adds	r3, #4
 8002876:	2800      	cmp	r0, #0
 8002878:	d1f3      	bne.n	8002862 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800287a:	e7f7      	b.n	800286c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 800287c:	2000      	movs	r0, #0
 800287e:	e7f5      	b.n	800286c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002880 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002880:	b510      	push	{r4, lr}
 8002882:	212c      	movs	r1, #44	@ 0x2c
 8002884:	4604      	mov	r4, r0
 8002886:	f01a fb5d 	bl	801cf44 <_ZdlPvj>
 800288a:	4620      	mov	r0, r4
 800288c:	bd10      	pop	{r4, pc}
	...

08002890 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002890:	b530      	push	{r4, r5, lr}
 8002892:	b08b      	sub	sp, #44	@ 0x2c
 8002894:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8002896:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 800289a:	9508      	str	r5, [sp, #32]
 800289c:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 80028a0:	9507      	str	r5, [sp, #28]
 80028a2:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 80028a6:	9506      	str	r5, [sp, #24]
 80028a8:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 80028ac:	9505      	str	r5, [sp, #20]
 80028ae:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 80028b2:	9504      	str	r5, [sp, #16]
 80028b4:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 80028b8:	9503      	str	r5, [sp, #12]
 80028ba:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 80028be:	9502      	str	r5, [sp, #8]
 80028c0:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 80028c4:	9501      	str	r5, [sp, #4]
 80028c6:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 80028ca:	9500      	str	r5, [sp, #0]
 80028cc:	f00a ff68 	bl	800d7a0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 80028d0:	4b06      	ldr	r3, [pc, #24]	@ (80028ec <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 80028d2:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 80028d4:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80028d6:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 80028d8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80028da:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 80028dc:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80028de:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 80028e0:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80028e2:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 80028e4:	4620      	mov	r0, r4
 80028e6:	b00b      	add	sp, #44	@ 0x2c
 80028e8:	bd30      	pop	{r4, r5, pc}
 80028ea:	bf00      	nop
 80028ec:	0801f38c 	.word	0x0801f38c

080028f0 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80028f0:	4770      	bx	lr

080028f2 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80028f2:	4770      	bx	lr

080028f4 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80028f4:	4770      	bx	lr

080028f6 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80028f6:	4770      	bx	lr

080028f8 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 80028f8:	4770      	bx	lr

080028fa <_ZN15Screen1ViewBaseD1Ev>:
}

Screen1ViewBase::~Screen1ViewBase()
{

}
 80028fa:	4770      	bx	lr

080028fc <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{

}
 80028fc:	4770      	bx	lr

080028fe <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80028fe:	4770      	bx	lr

08002900 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002900:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002902:	68c2      	ldr	r2, [r0, #12]
 8002904:	6844      	ldr	r4, [r0, #4]
 8002906:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002908:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800290a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800290e:	07d2      	lsls	r2, r2, #31
 8002910:	bf48      	it	mi
 8002912:	5962      	ldrmi	r2, [r4, r5]
 8002914:	689b      	ldr	r3, [r3, #8]
    }
 8002916:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002918:	bf48      	it	mi
 800291a:	58d3      	ldrmi	r3, [r2, r3]
 800291c:	4718      	bx	r3

0800291e <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800291e:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8002920:	6840      	ldr	r0, [r0, #4]
 8002922:	b130      	cbz	r0, 8002932 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002924:	689a      	ldr	r2, [r3, #8]
 8002926:	b91a      	cbnz	r2, 8002930 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 8002928:	68d8      	ldr	r0, [r3, #12]
 800292a:	f000 0001 	and.w	r0, r0, #1
 800292e:	4770      	bx	lr
 8002930:	2001      	movs	r0, #1
    }
 8002932:	4770      	bx	lr

08002934 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002934:	b510      	push	{r4, lr}
 8002936:	2110      	movs	r1, #16
 8002938:	4604      	mov	r4, r0
 800293a:	f01a fb03 	bl	801cf44 <_ZdlPvj>
 800293e:	4620      	mov	r0, r4
 8002940:	bd10      	pop	{r4, pc}

08002942 <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
 8002942:	b510      	push	{r4, lr}
}
 8002944:	f44f 71b4 	mov.w	r1, #360	@ 0x168
Screen1ViewBase::~Screen1ViewBase()
 8002948:	4604      	mov	r4, r0
}
 800294a:	f01a fafb 	bl	801cf44 <_ZdlPvj>
 800294e:	4620      	mov	r0, r4
 8002950:	bd10      	pop	{r4, pc}

08002952 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &start)
 8002952:	3098      	adds	r0, #152	@ 0x98
 8002954:	4288      	cmp	r0, r1
{
 8002956:	b508      	push	{r3, lr}
    if (&src == &start)
 8002958:	d105      	bne.n	8002966 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Screen1ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800295a:	f009 fd8b 	bl	800c474 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When start clicked change screen to Screen2
        //Go to Screen2 with screen transition towards South
        application().gotoScreen2ScreenWipeTransitionSouth();
    }
}
 800295e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen2ScreenWipeTransitionSouth();
 8002962:	f7ff bda9 	b.w	80024b8 <_ZN23FrontendApplicationBase36gotoScreen2ScreenWipeTransitionSouthEv>
}
 8002966:	bd08      	pop	{r3, pc}

08002968 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002968:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 800296a:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 800296c:	4604      	mov	r4, r0
        setX(x);
 800296e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    void setXY(int16_t x, int16_t y)
 8002970:	4615      	mov	r5, r2
        setX(x);
 8002972:	4798      	blx	r3
        setY(y);
 8002974:	6823      	ldr	r3, [r4, #0]
 8002976:	4629      	mov	r1, r5
 8002978:	4620      	mov	r0, r4
 800297a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
    }
 800297c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002980:	4718      	bx	r3
	...

08002984 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
        : x(0), y(0), width(0), height(0)
 8002984:	2300      	movs	r3, #0
     *
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
 8002986:	b510      	push	{r4, lr}
 8002988:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800298c:	e9c0 3303 	strd	r3, r3, [r0, #12]
          cachedAbsX(0),
 8002990:	e9c0 3307 	strd	r3, r3, [r0, #28]
          nextSibling(0),
 8002994:	e9c0 3305 	strd	r3, r3, [r0, #20]
          touchable(false),
 8002998:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800299c:	8483      	strh	r3, [r0, #36]	@ 0x24
        : Widget(), bitmap(bmp), alpha(255)
 800299e:	4b06      	ldr	r3, [pc, #24]	@ (80029b8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x34>)
 80029a0:	6003      	str	r3, [r0, #0]
 80029a2:	880b      	ldrh	r3, [r1, #0]
 80029a4:	84c3      	strh	r3, [r0, #38]	@ 0x26
 80029a6:	23ff      	movs	r3, #255	@ 0xff
    Image(const Bitmap& bmp = Bitmap())
 80029a8:	4604      	mov	r4, r0
        : Widget(), bitmap(bmp), alpha(255)
 80029aa:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
    {
        Image::setBitmap(bmp);
 80029ae:	f007 ff18 	bl	800a7e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 80029b2:	4620      	mov	r0, r4
 80029b4:	bd10      	pop	{r4, pc}
 80029b6:	bf00      	nop
 80029b8:	0801fbc4 	.word	0x0801fbc4

080029bc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 80029bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        return typedTextId < numberOfTypedTexts;
 80029be:	4b19      	ldr	r3, [pc, #100]	@ (8002a24 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x68>)
 80029c0:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
    {
        if (typedText.hasValidId())
 80029c2:	881b      	ldrh	r3, [r3, #0]
 80029c4:	428b      	cmp	r3, r1
    void updateTextPosition()
 80029c6:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 80029c8:	d92a      	bls.n	8002a20 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x64>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80029ca:	4b17      	ldr	r3, [pc, #92]	@ (8002a28 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
 80029cc:	681b      	ldr	r3, [r3, #0]
 80029ce:	b92b      	cbnz	r3, 80029dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 80029d0:	4b16      	ldr	r3, [pc, #88]	@ (8002a2c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 80029d2:	4a17      	ldr	r2, [pc, #92]	@ (8002a30 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 80029d4:	4817      	ldr	r0, [pc, #92]	@ (8002a34 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 80029d6:	216c      	movs	r1, #108	@ 0x6c
 80029d8:	f01a fae2 	bl	801cfa0 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 80029dc:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 80029e0:	4b15      	ldr	r3, [pc, #84]	@ (8002a38 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 80029e2:	681b      	ldr	r3, [r3, #0]
 80029e4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 80029e8:	4b14      	ldr	r3, [pc, #80]	@ (8002a3c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 80029ea:	6818      	ldr	r0, [r3, #0]
 80029ec:	f000 fd34 	bl	8003458 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80029f0:	682b      	ldr	r3, [r5, #0]
 80029f2:	4607      	mov	r7, r0
 80029f4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80029f6:	4628      	mov	r0, r5
 80029f8:	4798      	blx	r3
 80029fa:	682b      	ldr	r3, [r5, #0]
 80029fc:	4604      	mov	r4, r0
 80029fe:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002a00:	4639      	mov	r1, r7
 8002a02:	4628      	mov	r0, r5
 8002a04:	4798      	blx	r3
 8002a06:	682b      	ldr	r3, [r5, #0]
 8002a08:	fb14 f400 	smulbb	r4, r4, r0
 8002a0c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002a0e:	4639      	mov	r1, r7
 8002a10:	4628      	mov	r0, r5
 8002a12:	4798      	blx	r3
 8002a14:	b2a4      	uxth	r4, r4
 8002a16:	1823      	adds	r3, r4, r0
 8002a18:	b21b      	sxth	r3, r3
 8002a1a:	f8a6 3046 	strh.w	r3, [r6, #70]	@ 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002a1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002a20:	2300      	movs	r3, #0
 8002a22:	e7fa      	b.n	8002a1a <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 8002a24:	20011a28 	.word	0x20011a28
 8002a28:	20011a24 	.word	0x20011a24
 8002a2c:	0801f3ec 	.word	0x0801f3ec
 8002a30:	0801f42e 	.word	0x0801f42e
 8002a34:	0801f469 	.word	0x0801f469
 8002a38:	20011a2c 	.word	0x20011a2c
 8002a3c:	20011a30 	.word	0x20011a30

08002a40 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8002a40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002a44:	4604      	mov	r4, r0
 8002a46:	b085      	sub	sp, #20
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
 8002a48:	46a1      	mov	r9, r4
        : presenter(0)
 8002a4a:	2500      	movs	r5, #0
 8002a4c:	f00b f8a2 	bl	800db94 <_ZN8touchgfx6ScreenC1Ev>
 8002a50:	4b68      	ldr	r3, [pc, #416]	@ (8002bf4 <_ZN15Screen1ViewBaseC1Ev+0x1b4>)
 8002a52:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8002a54:	f849 3b40 	str.w	r3, [r9], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002a58:	4b67      	ldr	r3, [pc, #412]	@ (8002bf8 <_ZN15Screen1ViewBaseC1Ev+0x1b8>)
          cachedAbsX(0),
 8002a5a:	6625      	str	r5, [r4, #96]	@ 0x60
 8002a5c:	e9c4 3510 	strd	r3, r5, [r4, #64]	@ 0x40
          touchable(false),
 8002a60:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8002a64:	f8a4 3064 	strh.w	r3, [r4, #100]	@ 0x64
 8002a68:	23ff      	movs	r3, #255	@ 0xff
 8002a6a:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
 8002a6e:	f104 036c 	add.w	r3, r4, #108	@ 0x6c
 8002a72:	f104 0b98 	add.w	fp, r4, #152	@ 0x98
 8002a76:	a903      	add	r1, sp, #12
 8002a78:	4618      	mov	r0, r3
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002a7a:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8002a7e:	e9c4 5512 	strd	r5, r5, [r4, #72]	@ 0x48
          parent(0),
 8002a82:	e9c4 5514 	strd	r5, r5, [r4, #80]	@ 0x50
          nextDrawChainElement(0),
 8002a86:	e9c4 5516 	strd	r5, r5, [r4, #88]	@ 0x58
        : color(col)
 8002a8a:	66a5      	str	r5, [r4, #104]	@ 0x68
 8002a8c:	f104 08e0 	add.w	r8, r4, #224	@ 0xe0
 8002a90:	9301      	str	r3, [sp, #4]
 8002a92:	f8ad 600c 	strh.w	r6, [sp, #12]
 8002a96:	f7ff ff75 	bl	8002984 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002a9a:	4658      	mov	r0, fp
 8002a9c:	f007 ffd8 	bl	800aa50 <_ZN8touchgfx15ButtonWithLabelC1Ev>
          endId(BITMAP_INVALID),
          updateTicksInterval(updateInterval),
          ticksSinceUpdate(0),
          reverse(false),
          loopAnimation(false),
          running(false)
 8002aa0:	a903      	add	r1, sp, #12
 8002aa2:	4640      	mov	r0, r8
 8002aa4:	f504 778e 	add.w	r7, r4, #284	@ 0x11c
 8002aa8:	f8df a158 	ldr.w	sl, [pc, #344]	@ 8002c04 <_ZN15Screen1ViewBaseC1Ev+0x1c4>
 8002aac:	f8ad 600c 	strh.w	r6, [sp, #12]
 8002ab0:	f7ff ff68 	bl	8002984 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
          updateTicksInterval(updateInterval),
 8002ab4:	2601      	movs	r6, #1
 8002ab6:	f04f 33ff 	mov.w	r3, #4294967295
 8002aba:	e9c4 3644 	strd	r3, r6, [r4, #272]	@ 0x110
          running(false)
 8002abe:	f8c4 a0e0 	str.w	sl, [r4, #224]	@ 0xe0
 8002ac2:	a903      	add	r1, sp, #12
        : animationDoneAction(0),
 8002ac4:	f8c4 510c 	str.w	r5, [r4, #268]	@ 0x10c
          running(false)
 8002ac8:	f884 5118 	strb.w	r5, [r4, #280]	@ 0x118
 8002acc:	4638      	mov	r0, r7
 8002ace:	f8ad 300c 	strh.w	r3, [sp, #12]
 8002ad2:	f7ff ff57 	bl	8002984 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002ad6:	4a49      	ldr	r2, [pc, #292]	@ (8002bfc <_ZN15Screen1ViewBaseC1Ev+0x1bc>)
 8002ad8:	f8c4 a11c 	str.w	sl, [r4, #284]	@ 0x11c
 8002adc:	e9c4 2456 	strd	r2, r4, [r4, #344]	@ 0x158
 8002ae0:	4a47      	ldr	r2, [pc, #284]	@ (8002c00 <_ZN15Screen1ViewBaseC1Ev+0x1c0>)
        : animationDoneAction(0),
 8002ae2:	f8c4 5148 	str.w	r5, [r4, #328]	@ 0x148
          startId(BITMAP_INVALID),
 8002ae6:	f04f 33ff 	mov.w	r3, #4294967295
          updateTicksInterval(updateInterval),
 8002aea:	e9c4 3653 	strd	r3, r6, [r4, #332]	@ 0x14c
 8002aee:	e9c4 2558 	strd	r2, r5, [r4, #352]	@ 0x160
        setXY(x, y);
 8002af2:	4629      	mov	r1, r5
 8002af4:	462a      	mov	r2, r5
 8002af6:	4648      	mov	r0, r9
          running(false)
 8002af8:	f884 5154 	strb.w	r5, [r4, #340]	@ 0x154
 8002afc:	f7ff ff34 	bl	8002968 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002b00:	4648      	mov	r0, r9
 8002b02:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8002b06:	f7ff fa57 	bl	8001fb8 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8002b0a:	4648      	mov	r0, r9
 8002b0c:	21f0      	movs	r1, #240	@ 0xf0
 8002b0e:	f7ff fa55 	bl	8001fbc <_ZN8touchgfx8Drawable9setHeightEs>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002b12:	f104 0a04 	add.w	sl, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002b16:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8002b1a:	66a3      	str	r3, [r4, #104]	@ 0x68
 8002b1c:	4649      	mov	r1, r9
 8002b1e:	4650      	mov	r0, sl
 8002b20:	f006 f962 	bl	8008de8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bg.setXY(-17, 0);
 8002b24:	9801      	ldr	r0, [sp, #4]
 8002b26:	462a      	mov	r2, r5
 8002b28:	f06f 0110 	mvn.w	r1, #16
 8002b2c:	f7ff ff1c 	bl	8002968 <_ZN8touchgfx8Drawable5setXYEss>
 8002b30:	2202      	movs	r2, #2
    bg.setBitmap(touchgfx::Bitmap(BITMAP_BG_ID));
 8002b32:	9801      	ldr	r0, [sp, #4]
 8002b34:	f8ad 200c 	strh.w	r2, [sp, #12]
 8002b38:	a903      	add	r1, sp, #12
 8002b3a:	f007 fe52 	bl	800a7e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002b3e:	9901      	ldr	r1, [sp, #4]
 8002b40:	4650      	mov	r0, sl
 8002b42:	f006 f951 	bl	8008de8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    start.setXY(40, 63);
 8002b46:	4658      	mov	r0, fp
 8002b48:	223f      	movs	r2, #63	@ 0x3f
 8002b4a:	2128      	movs	r1, #40	@ 0x28
 8002b4c:	f7ff ff0c 	bl	8002968 <_ZN8touchgfx8Drawable5setXYEss>
    start.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_INACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_INACTIVE_ID));
 8002b50:	a902      	add	r1, sp, #8
 8002b52:	aa03      	add	r2, sp, #12
 8002b54:	4658      	mov	r0, fp
 8002b56:	f8ad 6008 	strh.w	r6, [sp, #8]
 8002b5a:	f8ad 600c 	strh.w	r6, [sp, #12]
 8002b5e:	f007 fd0e 	bl	800a57e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8002b62:	2206      	movs	r2, #6
 8002b64:	f8a4 20d0 	strh.w	r2, [r4, #208]	@ 0xd0
        updateTextPosition();
 8002b68:	4658      	mov	r0, fp
 8002b6a:	f7ff ff27 	bl	80029bc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        colorPressed = col;
 8002b6e:	f04f 427f 	mov.w	r2, #4278190080	@ 0xff000000
 8002b72:	f04f 33ff 	mov.w	r3, #4294967295
 8002b76:	e9c4 2335 	strd	r2, r3, [r4, #212]	@ 0xd4
    start.setAction(buttonCallback);
 8002b7a:	f504 73ac 	add.w	r3, r4, #344	@ 0x158
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002b7e:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 8002b82:	4659      	mov	r1, fp
 8002b84:	4650      	mov	r0, sl
 8002b86:	f006 f92f 	bl	8008de8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ground.setXY(0, 180);
 8002b8a:	4629      	mov	r1, r5
 8002b8c:	4640      	mov	r0, r8
 8002b8e:	22b4      	movs	r2, #180	@ 0xb4
 8002b90:	f7ff feea 	bl	8002968 <_ZN8touchgfx8Drawable5setXYEss>
    ground.setBitmaps(BITMAP_GROUND0_ID, BITMAP_GROUND2_ID);
 8002b94:	221a      	movs	r2, #26
 8002b96:	4640      	mov	r0, r8
 8002b98:	2118      	movs	r1, #24
 8002b9a:	f007 fb6d 	bl	800a278 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>
    ground.setUpdateTicksInterval(1);
 8002b9e:	4631      	mov	r1, r6
 8002ba0:	4640      	mov	r0, r8
 8002ba2:	f007 fb7c 	bl	800a29e <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
    ground.startAnimation(false, true, false);
 8002ba6:	462b      	mov	r3, r5
 8002ba8:	4632      	mov	r2, r6
 8002baa:	4629      	mov	r1, r5
 8002bac:	4640      	mov	r0, r8
 8002bae:	f007 fabb 	bl	800a128 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
 8002bb2:	4641      	mov	r1, r8
 8002bb4:	4650      	mov	r0, sl
 8002bb6:	f006 f917 	bl	8008de8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    dino.setXY(12, 140);
 8002bba:	4638      	mov	r0, r7
 8002bbc:	228c      	movs	r2, #140	@ 0x8c
 8002bbe:	210c      	movs	r1, #12
 8002bc0:	f7ff fed2 	bl	8002968 <_ZN8touchgfx8Drawable5setXYEss>
    dino.setBitmaps(BITMAP_DINO1_ID, BITMAP_DINO3_ID);
 8002bc4:	2213      	movs	r2, #19
 8002bc6:	4638      	mov	r0, r7
 8002bc8:	2111      	movs	r1, #17
 8002bca:	f007 fb55 	bl	800a278 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>
    dino.setUpdateTicksInterval(1);
 8002bce:	4631      	mov	r1, r6
 8002bd0:	4638      	mov	r0, r7
 8002bd2:	f007 fb64 	bl	800a29e <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
    dino.startAnimation(false, true, false);
 8002bd6:	462b      	mov	r3, r5
 8002bd8:	4632      	mov	r2, r6
 8002bda:	4629      	mov	r1, r5
 8002bdc:	4638      	mov	r0, r7
 8002bde:	f007 faa3 	bl	800a128 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
 8002be2:	4650      	mov	r0, sl
 8002be4:	4639      	mov	r1, r7
 8002be6:	f006 f8ff 	bl	8008de8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002bea:	4620      	mov	r0, r4
 8002bec:	b005      	add	sp, #20
 8002bee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002bf2:	bf00      	nop
 8002bf4:	0801f4d0 	.word	0x0801f4d0
 8002bf8:	0801fb5c 	.word	0x0801fb5c
 8002bfc:	0801f4b8 	.word	0x0801f4b8
 8002c00:	08002953 	.word	0x08002953
 8002c04:	0801fae0 	.word	0x0801fae0

08002c08 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002c08:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002c0a:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8002c0c:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002c0e:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002c10:	466d      	mov	r5, sp
 8002c12:	4601      	mov	r1, r0
 8002c14:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
    virtual void setWidth(int16_t width)
 8002c18:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002c1a:	4628      	mov	r0, r5
 8002c1c:	4798      	blx	r3
 8002c1e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002c22:	343c      	adds	r4, #60	@ 0x3c
 8002c24:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002c28:	b005      	add	sp, #20
 8002c2a:	bd30      	pop	{r4, r5, pc}

08002c2c <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8002c2c:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002c2e:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8002c30:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002c32:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002c34:	466d      	mov	r5, sp
 8002c36:	4601      	mov	r1, r0
 8002c38:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
    virtual void setHeight(int16_t height)
 8002c3c:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002c3e:	4628      	mov	r0, r5
 8002c40:	4798      	blx	r3
 8002c42:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002c46:	343c      	adds	r4, #60	@ 0x3c
 8002c48:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002c4c:	b005      	add	sp, #20
 8002c4e:	bd30      	pop	{r4, r5, pc}

08002c50 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8002c50:	2200      	movs	r2, #0
 8002c52:	8002      	strh	r2, [r0, #0]
 8002c54:	8042      	strh	r2, [r0, #2]
 8002c56:	8082      	strh	r2, [r0, #4]
 8002c58:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002c5a:	4770      	bx	lr

08002c5c <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002c5c:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
    }
 8002c60:	4770      	bx	lr

08002c62 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002c62:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002c64:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002c66:	4604      	mov	r4, r0
        setX(x);
 8002c68:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002c6a:	4615      	mov	r5, r2
        setX(x);
 8002c6c:	4798      	blx	r3
        setBaselineY(baselineY);
 8002c6e:	6823      	ldr	r3, [r4, #0]
 8002c70:	4629      	mov	r1, r5
 8002c72:	4620      	mov	r0, r4
 8002c74:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
    }
 8002c76:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002c7a:	4718      	bx	r3

08002c7c <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8002c7c:	2000      	movs	r0, #0
 8002c7e:	4770      	bx	lr

08002c80 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8002c80:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 8002c82:	4770      	bx	lr

08002c84 <_ZN15Screen2ViewBaseD1Ev>:
}

Screen2ViewBase::~Screen2ViewBase()
{

}
 8002c84:	4770      	bx	lr

08002c86 <_ZN15Screen2ViewBase11setupScreenEv>:

void Screen2ViewBase::setupScreen()
{

}
 8002c86:	4770      	bx	lr

08002c88 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002c88:	4770      	bx	lr

08002c8a <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002c8a:	b510      	push	{r4, lr}
 8002c8c:	214c      	movs	r1, #76	@ 0x4c
 8002c8e:	4604      	mov	r4, r0
 8002c90:	f01a f958 	bl	801cf44 <_ZdlPvj>
 8002c94:	4620      	mov	r0, r4
 8002c96:	bd10      	pop	{r4, pc}

08002c98 <_ZN15Screen2ViewBaseD0Ev>:
Screen2ViewBase::~Screen2ViewBase()
 8002c98:	b510      	push	{r4, lr}
}
 8002c9a:	f44f 711d 	mov.w	r1, #628	@ 0x274
Screen2ViewBase::~Screen2ViewBase()
 8002c9e:	4604      	mov	r4, r0
}
 8002ca0:	f01a f950 	bl	801cf44 <_ZdlPvj>
 8002ca4:	4620      	mov	r0, r4
 8002ca6:	bd10      	pop	{r4, pc}

08002ca8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8002ca8:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8002caa:	f7ff fa3d 	bl	8002128 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8002cae:	bd08      	pop	{r3, pc}

08002cb0 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002cb0:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002cb2:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002cb4:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002cb6:	4b12      	ldr	r3, [pc, #72]	@ (8002d00 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002cb8:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002cba:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002cbc:	b28d      	uxth	r5, r1
 8002cbe:	b92b      	cbnz	r3, 8002ccc <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002cc0:	4b10      	ldr	r3, [pc, #64]	@ (8002d04 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8002cc2:	4a11      	ldr	r2, [pc, #68]	@ (8002d08 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002cc4:	216c      	movs	r1, #108	@ 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002cc6:	4811      	ldr	r0, [pc, #68]	@ (8002d0c <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002cc8:	f01a f96a 	bl	801cfa0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002ccc:	4910      	ldr	r1, [pc, #64]	@ (8002d10 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002cce:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002cd0:	8809      	ldrh	r1, [r1, #0]
 8002cd2:	4291      	cmp	r1, r2
 8002cd4:	d803      	bhi.n	8002cde <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002cd6:	4b0f      	ldr	r3, [pc, #60]	@ (8002d14 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002cd8:	4a0b      	ldr	r2, [pc, #44]	@ (8002d08 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002cda:	216d      	movs	r1, #109	@ 0x6d
 8002cdc:	e7f3      	b.n	8002cc6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002cde:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002ce2:	4b0d      	ldr	r3, [pc, #52]	@ (8002d18 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002ce4:	681b      	ldr	r3, [r3, #0]
 8002ce6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002cea:	6803      	ldr	r3, [r0, #0]
 8002cec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002cee:	4798      	blx	r3
 8002cf0:	1a29      	subs	r1, r5, r0
 8002cf2:	4633      	mov	r3, r6
 8002cf4:	4620      	mov	r0, r4
 8002cf6:	b209      	sxth	r1, r1
    }
 8002cf8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002cfc:	4718      	bx	r3
 8002cfe:	bf00      	nop
 8002d00:	20011a24 	.word	0x20011a24
 8002d04:	0801f3ec 	.word	0x0801f3ec
 8002d08:	0801f42e 	.word	0x0801f42e
 8002d0c:	0801f469 	.word	0x0801f469
 8002d10:	20011a28 	.word	0x20011a28
 8002d14:	0801f4fc 	.word	0x0801f4fc
 8002d18:	20011a2c 	.word	0x20011a2c

08002d1c <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002d1c:	2200      	movs	r2, #0
 8002d1e:	f04f 31ff 	mov.w	r1, #4294967295
 8002d22:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002d26:	6082      	str	r2, [r0, #8]
    }
 8002d28:	4770      	bx	lr
	...

08002d2c <_ZN8touchgfx6WidgetC1Ev>:
 8002d2c:	2200      	movs	r2, #0
 8002d2e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002d32:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8002d36:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002d3a:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8002d3e:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8002d42:	8482      	strh	r2, [r0, #36]	@ 0x24
class Widget : public Drawable
 8002d44:	4a01      	ldr	r2, [pc, #4]	@ (8002d4c <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002d46:	6002      	str	r2, [r0, #0]
 8002d48:	4770      	bx	lr
 8002d4a:	bf00      	nop
 8002d4c:	0801f590 	.word	0x0801f590

08002d50 <_ZN8touchgfx13AnimatedImageC1ERKh>:
    AnimatedImage(const uint8_t& updateInterval = 1)
 8002d50:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002d52:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002d56:	4604      	mov	r4, r0
 8002d58:	460d      	mov	r5, r1
          running(false)
 8002d5a:	a901      	add	r1, sp, #4
 8002d5c:	f8ad 3004 	strh.w	r3, [sp, #4]
 8002d60:	f7ff fe10 	bl	8002984 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002d64:	4b08      	ldr	r3, [pc, #32]	@ (8002d88 <_ZN8touchgfx13AnimatedImageC1ERKh+0x38>)
 8002d66:	6023      	str	r3, [r4, #0]
          startId(BITMAP_INVALID),
 8002d68:	f04f 32ff 	mov.w	r2, #4294967295
 8002d6c:	2300      	movs	r3, #0
 8002d6e:	e9c4 320b 	strd	r3, r2, [r4, #44]	@ 0x2c
          updateTicksInterval(updateInterval),
 8002d72:	782a      	ldrb	r2, [r5, #0]
 8002d74:	f884 2034 	strb.w	r2, [r4, #52]	@ 0x34
    {
    }
 8002d78:	4620      	mov	r0, r4
          ticksSinceUpdate(0),
 8002d7a:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
          reverse(false),
 8002d7e:	86e3      	strh	r3, [r4, #54]	@ 0x36
          running(false)
 8002d80:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
    }
 8002d84:	b003      	add	sp, #12
 8002d86:	bd30      	pop	{r4, r5, pc}
 8002d88:	0801fae0 	.word	0x0801fae0

08002d8c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8002d8c:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002d8e:	2226      	movs	r2, #38	@ 0x26
 8002d90:	4604      	mov	r4, r0
 8002d92:	2100      	movs	r1, #0
 8002d94:	f01a fb2b 	bl	801d3ee <memset>
 8002d98:	4620      	mov	r0, r4
 8002d9a:	f7ff ffc7 	bl	8002d2c <_ZN8touchgfx6WidgetC1Ev>
        : typedTextId(id)
 8002d9e:	4b0a      	ldr	r3, [pc, #40]	@ (8002dc8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x3c>)
 8002da0:	62a3      	str	r3, [r4, #40]	@ 0x28
 8002da2:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002da6:	85a3      	strh	r3, [r4, #44]	@ 0x2c
 8002da8:	f44f 027f 	mov.w	r2, #16711680	@ 0xff0000
 8002dac:	2300      	movs	r3, #0
 8002dae:	e9c4 320c 	strd	r3, r2, [r4, #48]	@ 0x30
        : TextAreaWithWildcardBase(), wc1(0)
 8002db2:	4a06      	ldr	r2, [pc, #24]	@ (8002dcc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x40>)
 8002db4:	6022      	str	r2, [r4, #0]
 8002db6:	8723      	strh	r3, [r4, #56]	@ 0x38
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002db8:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 8002dbc:	e9c4 2310 	strd	r2, r3, [r4, #64]	@ 0x40
 8002dc0:	63e3      	str	r3, [r4, #60]	@ 0x3c
 8002dc2:	64a3      	str	r3, [r4, #72]	@ 0x48
    }
 8002dc4:	4620      	mov	r0, r4
 8002dc6:	bd10      	pop	{r4, pc}
 8002dc8:	0801ed84 	.word	0x0801ed84
 8002dcc:	0801f5f8 	.word	0x0801f5f8

08002dd0 <_ZN15Screen2ViewBaseC1Ev>:
Screen2ViewBase::Screen2ViewBase()
 8002dd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002dd4:	4604      	mov	r4, r0
 8002dd6:	b08d      	sub	sp, #52	@ 0x34
 8002dd8:	46a0      	mov	r8, r4
 8002dda:	2500      	movs	r5, #0
 8002ddc:	f00a feda 	bl	800db94 <_ZN8touchgfx6ScreenC1Ev>
 8002de0:	4bc0      	ldr	r3, [pc, #768]	@ (80030e4 <_ZN15Screen2ViewBaseC1Ev+0x314>)
 8002de2:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8002de4:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 8002de8:	2226      	movs	r2, #38	@ 0x26
 8002dea:	4629      	mov	r1, r5
 8002dec:	4640      	mov	r0, r8
 8002dee:	f01a fafe 	bl	801d3ee <memset>
 8002df2:	4640      	mov	r0, r8
 8002df4:	f7ff ff9a 	bl	8002d2c <_ZN8touchgfx6WidgetC1Ev>
 8002df8:	4bbb      	ldr	r3, [pc, #748]	@ (80030e8 <_ZN15Screen2ViewBaseC1Ev+0x318>)
 8002dfa:	6423      	str	r3, [r4, #64]	@ 0x40
 8002dfc:	23ff      	movs	r3, #255	@ 0xff
 8002dfe:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
 8002e02:	f104 036c 	add.w	r3, r4, #108	@ 0x6c
 8002e06:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8002e0a:	a90a      	add	r1, sp, #40	@ 0x28
 8002e0c:	4618      	mov	r0, r3
        : color(col)
 8002e0e:	66a5      	str	r5, [r4, #104]	@ 0x68
 8002e10:	9304      	str	r3, [sp, #16]
 8002e12:	f8ad 6028 	strh.w	r6, [sp, #40]	@ 0x28
 8002e16:	f7ff fdb5 	bl	8002984 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002e1a:	f104 0398 	add.w	r3, r4, #152	@ 0x98
 8002e1e:	f104 09c4 	add.w	r9, r4, #196	@ 0xc4
 8002e22:	4618      	mov	r0, r3
 8002e24:	a90a      	add	r1, sp, #40	@ 0x28
 8002e26:	9305      	str	r3, [sp, #20]
 8002e28:	f8ad 6028 	strh.w	r6, [sp, #40]	@ 0x28
    AnimatedImage(const uint8_t& updateInterval = 1)
 8002e2c:	2601      	movs	r6, #1
 8002e2e:	f7ff fda9 	bl	8002984 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002e32:	a90a      	add	r1, sp, #40	@ 0x28
 8002e34:	4648      	mov	r0, r9
 8002e36:	f88d 6028 	strb.w	r6, [sp, #40]	@ 0x28
 8002e3a:	f7ff ff89 	bl	8002d50 <_ZN8touchgfx13AnimatedImageC1ERKh>
 8002e3e:	f504 7380 	add.w	r3, r4, #256	@ 0x100
 8002e42:	f504 7b9e 	add.w	fp, r4, #316	@ 0x13c
 8002e46:	4618      	mov	r0, r3
 8002e48:	a90a      	add	r1, sp, #40	@ 0x28
 8002e4a:	f504 7abc 	add.w	sl, r4, #376	@ 0x178
 8002e4e:	9301      	str	r3, [sp, #4]
 8002e50:	f88d 6028 	strb.w	r6, [sp, #40]	@ 0x28
 8002e54:	f7ff ff7c 	bl	8002d50 <_ZN8touchgfx13AnimatedImageC1ERKh>
 8002e58:	a90a      	add	r1, sp, #40	@ 0x28
 8002e5a:	4658      	mov	r0, fp
 8002e5c:	f88d 6028 	strb.w	r6, [sp, #40]	@ 0x28
 8002e60:	f7ff ff76 	bl	8002d50 <_ZN8touchgfx13AnimatedImageC1ERKh>
 8002e64:	a90a      	add	r1, sp, #40	@ 0x28
 8002e66:	4650      	mov	r0, sl
 8002e68:	f88d 6028 	strb.w	r6, [sp, #40]	@ 0x28
 8002e6c:	f7ff ff70 	bl	8002d50 <_ZN8touchgfx13AnimatedImageC1ERKh>
 8002e70:	f504 73da 	add.w	r3, r4, #436	@ 0x1b4
 8002e74:	4618      	mov	r0, r3
 8002e76:	9302      	str	r3, [sp, #8]
 8002e78:	f7ff ff88 	bl	8002d8c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002e7c:	f504 7300 	add.w	r3, r4, #512	@ 0x200
 8002e80:	4618      	mov	r0, r3
 8002e82:	9303      	str	r3, [sp, #12]
 8002e84:	f7ff ff82 	bl	8002d8c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
        setXY(x, y);
 8002e88:	462a      	mov	r2, r5
 8002e8a:	4640      	mov	r0, r8
 8002e8c:	4629      	mov	r1, r5
 8002e8e:	f7ff fd6b 	bl	8002968 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002e92:	4640      	mov	r0, r8
 8002e94:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8002e98:	f7ff f88e 	bl	8001fb8 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8002e9c:	4640      	mov	r0, r8
 8002e9e:	21f0      	movs	r1, #240	@ 0xf0
 8002ea0:	f7ff f88c 	bl	8001fbc <_ZN8touchgfx8Drawable9setHeightEs>
 8002ea4:	1d27      	adds	r7, r4, #4
        color = newColor;
 8002ea6:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8002eaa:	66a3      	str	r3, [r4, #104]	@ 0x68
 8002eac:	4641      	mov	r1, r8
 8002eae:	4638      	mov	r0, r7
 8002eb0:	f005 ff9a 	bl	8008de8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bg.setXY(-17, 0);
 8002eb4:	462a      	mov	r2, r5
 8002eb6:	9804      	ldr	r0, [sp, #16]
 8002eb8:	f06f 0110 	mvn.w	r1, #16
 8002ebc:	f7ff fd54 	bl	8002968 <_ZN8touchgfx8Drawable5setXYEss>
 8002ec0:	f04f 0302 	mov.w	r3, #2
    bg.setBitmap(touchgfx::Bitmap(BITMAP_BG_ID));
 8002ec4:	9804      	ldr	r0, [sp, #16]
 8002ec6:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 8002eca:	a90a      	add	r1, sp, #40	@ 0x28
 8002ecc:	f007 fc89 	bl	800a7e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002ed0:	9904      	ldr	r1, [sp, #16]
 8002ed2:	4638      	mov	r0, r7
 8002ed4:	f005 ff88 	bl	8008de8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    cacti1.setXY(213, 157);
 8002ed8:	229d      	movs	r2, #157	@ 0x9d
 8002eda:	9805      	ldr	r0, [sp, #20]
 8002edc:	21d5      	movs	r1, #213	@ 0xd5
 8002ede:	f7ff fd43 	bl	8002968 <_ZN8touchgfx8Drawable5setXYEss>
 8002ee2:	230f      	movs	r3, #15
    cacti1.setBitmap(touchgfx::Bitmap(BITMAP_CACTUS0_ID));
 8002ee4:	9805      	ldr	r0, [sp, #20]
 8002ee6:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 8002eea:	a90a      	add	r1, sp, #40	@ 0x28
 8002eec:	f007 fc79 	bl	800a7e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002ef0:	9905      	ldr	r1, [sp, #20]
 8002ef2:	4638      	mov	r0, r7
 8002ef4:	f005 ff78 	bl	8008de8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ground.setXY(0, 184);
 8002ef8:	4648      	mov	r0, r9
 8002efa:	22b8      	movs	r2, #184	@ 0xb8
 8002efc:	4629      	mov	r1, r5
 8002efe:	f7ff fd33 	bl	8002968 <_ZN8touchgfx8Drawable5setXYEss>
    ground.setBitmaps(BITMAP_GROUND0_ID, BITMAP_GROUND2_ID);
 8002f02:	221a      	movs	r2, #26
 8002f04:	4648      	mov	r0, r9
 8002f06:	2118      	movs	r1, #24
 8002f08:	f007 f9b6 	bl	800a278 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>
    ground.setUpdateTicksInterval(1);
 8002f0c:	4648      	mov	r0, r9
 8002f0e:	4631      	mov	r1, r6
 8002f10:	f007 f9c5 	bl	800a29e <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
    ground.startAnimation(false, true, false);
 8002f14:	462b      	mov	r3, r5
 8002f16:	4632      	mov	r2, r6
 8002f18:	4648      	mov	r0, r9
 8002f1a:	4629      	mov	r1, r5
 8002f1c:	f007 f904 	bl	800a128 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
 8002f20:	4649      	mov	r1, r9
 8002f22:	4638      	mov	r0, r7
 8002f24:	f005 ff60 	bl	8008de8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    dinoc.setXY(11, 159);
 8002f28:	9801      	ldr	r0, [sp, #4]
 8002f2a:	229f      	movs	r2, #159	@ 0x9f
 8002f2c:	210b      	movs	r1, #11
 8002f2e:	f7ff fd1b 	bl	8002968 <_ZN8touchgfx8Drawable5setXYEss>
    dinoc.setBitmaps(BITMAP_DINOC0_ID, BITMAP_DINOC1_ID);
 8002f32:	2215      	movs	r2, #21
 8002f34:	9801      	ldr	r0, [sp, #4]
 8002f36:	2114      	movs	r1, #20
 8002f38:	f007 f99e 	bl	800a278 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>
    dinoc.setUpdateTicksInterval(1);
 8002f3c:	9801      	ldr	r0, [sp, #4]
 8002f3e:	4631      	mov	r1, r6
 8002f40:	f007 f9ad 	bl	800a29e <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
    dinoc.startAnimation(false, true, false);
 8002f44:	462b      	mov	r3, r5
 8002f46:	4632      	mov	r2, r6
 8002f48:	9801      	ldr	r0, [sp, #4]
 8002f4a:	4629      	mov	r1, r5
 8002f4c:	f007 f8ec 	bl	800a128 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
 8002f50:	9901      	ldr	r1, [sp, #4]
        visible = vis;
 8002f52:	f884 5125 	strb.w	r5, [r4, #293]	@ 0x125
 8002f56:	4638      	mov	r0, r7
 8002f58:	f005 ff46 	bl	8008de8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    dino.setXY(18, 140);
 8002f5c:	4658      	mov	r0, fp
 8002f5e:	228c      	movs	r2, #140	@ 0x8c
 8002f60:	2112      	movs	r1, #18
 8002f62:	f7ff fd01 	bl	8002968 <_ZN8touchgfx8Drawable5setXYEss>
    dino.setBitmaps(BITMAP_DINO2_ID, BITMAP_DINO3_ID);
 8002f66:	2213      	movs	r2, #19
 8002f68:	4658      	mov	r0, fp
 8002f6a:	2112      	movs	r1, #18
 8002f6c:	f007 f984 	bl	800a278 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>
    dino.setUpdateTicksInterval(1);
 8002f70:	4658      	mov	r0, fp
 8002f72:	4631      	mov	r1, r6
 8002f74:	f007 f993 	bl	800a29e <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
    dino.startAnimation(false, true, false);
 8002f78:	462b      	mov	r3, r5
 8002f7a:	4632      	mov	r2, r6
 8002f7c:	4658      	mov	r0, fp
 8002f7e:	4629      	mov	r1, r5
 8002f80:	f007 f8d2 	bl	800a128 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
 8002f84:	4659      	mov	r1, fp
 8002f86:	4638      	mov	r0, r7
 8002f88:	f005 ff2e 	bl	8008de8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bird.setXY(243, 120);
 8002f8c:	2278      	movs	r2, #120	@ 0x78
 8002f8e:	21f3      	movs	r1, #243	@ 0xf3
 8002f90:	4650      	mov	r0, sl
 8002f92:	f7ff fce9 	bl	8002968 <_ZN8touchgfx8Drawable5setXYEss>
    bird.setBitmaps(BITMAP_BIRD0_ID, BITMAP_BIRD1_ID);
 8002f96:	2204      	movs	r2, #4
 8002f98:	2103      	movs	r1, #3
 8002f9a:	4650      	mov	r0, sl
 8002f9c:	f007 f96c 	bl	800a278 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>
    bird.setUpdateTicksInterval(1);
 8002fa0:	4631      	mov	r1, r6
 8002fa2:	4650      	mov	r0, sl
 8002fa4:	f007 f97b 	bl	800a29e <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
    bird.startAnimation(false, true, false);
 8002fa8:	462b      	mov	r3, r5
 8002faa:	4632      	mov	r2, r6
 8002fac:	4629      	mov	r1, r5
 8002fae:	4650      	mov	r0, sl
 8002fb0:	f007 f8ba 	bl	800a128 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
 8002fb4:	4651      	mov	r1, sl
 8002fb6:	4638      	mov	r0, r7
 8002fb8:	f005 ff16 	bl	8008de8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    highestScoreTextArea.setXY(34, 18);
 8002fbc:	2212      	movs	r2, #18
 8002fbe:	9802      	ldr	r0, [sp, #8]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002fc0:	f8df b140 	ldr.w	fp, [pc, #320]	@ 8003104 <_ZN15Screen2ViewBaseC1Ev+0x334>
 8002fc4:	2122      	movs	r1, #34	@ 0x22
 8002fc6:	f7ff fccf 	bl	8002968 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8002fca:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8002fce:	f8c4 31e4 	str.w	r3, [r4, #484]	@ 0x1e4
        boundingArea = calculateBoundingArea();
 8002fd2:	f8d4 31b4 	ldr.w	r3, [r4, #436]	@ 0x1b4
 8002fd6:	9902      	ldr	r1, [sp, #8]
 8002fd8:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        linespace = space;
 8002fdc:	f8a4 51e8 	strh.w	r5, [r4, #488]	@ 0x1e8
        boundingArea = calculateBoundingArea();
 8002fe0:	f10d 0818 	add.w	r8, sp, #24
 8002fe4:	4640      	mov	r0, r8
 8002fe6:	4798      	blx	r3
 8002fe8:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002fec:	f504 73f8 	add.w	r3, r4, #496	@ 0x1f0
 8002ff0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002ff4:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(highestScoreTextAreaBuffer, HIGHESTSCORETEXTAREA_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JVXV).getText());
 8002ff8:	f504 7913 	add.w	r9, r4, #588	@ 0x24c
 8002ffc:	b92b      	cbnz	r3, 800300a <_ZN15Screen2ViewBaseC1Ev+0x23a>
 8002ffe:	4b3b      	ldr	r3, [pc, #236]	@ (80030ec <_ZN15Screen2ViewBaseC1Ev+0x31c>)
 8003000:	4a3b      	ldr	r2, [pc, #236]	@ (80030f0 <_ZN15Screen2ViewBaseC1Ev+0x320>)
 8003002:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003004:	483b      	ldr	r0, [pc, #236]	@ (80030f4 <_ZN15Screen2ViewBaseC1Ev+0x324>)
 8003006:	f019 ffcb 	bl	801cfa0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800300a:	f8df a0fc 	ldr.w	sl, [pc, #252]	@ 8003108 <_ZN15Screen2ViewBaseC1Ev+0x338>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800300e:	f8ba 3000 	ldrh.w	r3, [sl]
 8003012:	2b03      	cmp	r3, #3
 8003014:	d803      	bhi.n	800301e <_ZN15Screen2ViewBaseC1Ev+0x24e>
 8003016:	4b38      	ldr	r3, [pc, #224]	@ (80030f8 <_ZN15Screen2ViewBaseC1Ev+0x328>)
 8003018:	4a35      	ldr	r2, [pc, #212]	@ (80030f0 <_ZN15Screen2ViewBaseC1Ev+0x320>)
 800301a:	2161      	movs	r1, #97	@ 0x61
 800301c:	e7f2      	b.n	8003004 <_ZN15Screen2ViewBaseC1Ev+0x234>
        return texts->getText(typedTextId);
 800301e:	4b37      	ldr	r3, [pc, #220]	@ (80030fc <_ZN15Screen2ViewBaseC1Ev+0x32c>)
 8003020:	2103      	movs	r1, #3
 8003022:	6818      	ldr	r0, [r3, #0]
 8003024:	f000 fa18 	bl	8003458 <_ZNK8touchgfx5Texts7getTextEt>
 8003028:	4a35      	ldr	r2, [pc, #212]	@ (8003100 <_ZN15Screen2ViewBaseC1Ev+0x330>)
 800302a:	4603      	mov	r3, r0
 800302c:	210a      	movs	r1, #10
 800302e:	4648      	mov	r0, r9
 8003030:	f00c fa4e 	bl	800f4d0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    highestScoreTextArea.resizeToCurrentText();
 8003034:	9802      	ldr	r0, [sp, #8]
        wc1 = value;
 8003036:	f8c4 91fc 	str.w	r9, [r4, #508]	@ 0x1fc
 800303a:	f007 fa23 	bl	800a484 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800303e:	f8df 90cc 	ldr.w	r9, [pc, #204]	@ 800310c <_ZN15Screen2ViewBaseC1Ev+0x33c>
    highestScoreTextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4RMC));
 8003042:	9802      	ldr	r0, [sp, #8]
 8003044:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 8003048:	2304      	movs	r3, #4
 800304a:	a90a      	add	r1, sp, #40	@ 0x28
 800304c:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8003050:	f007 fa38 	bl	800a4c4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003054:	9902      	ldr	r1, [sp, #8]
 8003056:	4638      	mov	r0, r7
 8003058:	f005 fec6 	bl	8008de8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaPoint.setXY(34, 45);
 800305c:	9803      	ldr	r0, [sp, #12]
 800305e:	222d      	movs	r2, #45	@ 0x2d
 8003060:	2122      	movs	r1, #34	@ 0x22
 8003062:	f7ff fc81 	bl	8002968 <_ZN8touchgfx8Drawable5setXYEss>
 8003066:	f8d4 3200 	ldr.w	r3, [r4, #512]	@ 0x200
 800306a:	9903      	ldr	r1, [sp, #12]
 800306c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        linespace = space;
 8003070:	f8a4 5234 	strh.w	r5, [r4, #564]	@ 0x234
        color = newColor;
 8003074:	f04f 427f 	mov.w	r2, #4278190080	@ 0xff000000
 8003078:	f8c4 2230 	str.w	r2, [r4, #560]	@ 0x230
        boundingArea = calculateBoundingArea();
 800307c:	4640      	mov	r0, r8
 800307e:	4798      	blx	r3
 8003080:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003084:	f504 730f 	add.w	r3, r4, #572	@ 0x23c
 8003088:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800308c:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaPointBuffer, TEXTAREAPOINT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_YKYT).getText());
 8003090:	f504 7518 	add.w	r5, r4, #608	@ 0x260
 8003094:	2b00      	cmp	r3, #0
 8003096:	d0b2      	beq.n	8002ffe <_ZN15Screen2ViewBaseC1Ev+0x22e>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003098:	f8ba 3000 	ldrh.w	r3, [sl]
 800309c:	2b01      	cmp	r3, #1
 800309e:	d9ba      	bls.n	8003016 <_ZN15Screen2ViewBaseC1Ev+0x246>
        return texts->getText(typedTextId);
 80030a0:	4b16      	ldr	r3, [pc, #88]	@ (80030fc <_ZN15Screen2ViewBaseC1Ev+0x32c>)
 80030a2:	4631      	mov	r1, r6
 80030a4:	6818      	ldr	r0, [r3, #0]
 80030a6:	f000 f9d7 	bl	8003458 <_ZNK8touchgfx5Texts7getTextEt>
 80030aa:	4a15      	ldr	r2, [pc, #84]	@ (8003100 <_ZN15Screen2ViewBaseC1Ev+0x330>)
 80030ac:	4603      	mov	r3, r0
 80030ae:	210a      	movs	r1, #10
 80030b0:	4628      	mov	r0, r5
 80030b2:	f00c fa0d 	bl	800f4d0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaPoint.resizeToCurrentText();
 80030b6:	9803      	ldr	r0, [sp, #12]
 80030b8:	f8c4 5248 	str.w	r5, [r4, #584]	@ 0x248
 80030bc:	f007 f9e2 	bl	800a484 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80030c0:	f04f 0302 	mov.w	r3, #2
    textAreaPoint.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0E7D));
 80030c4:	9803      	ldr	r0, [sp, #12]
 80030c6:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 80030ca:	a90a      	add	r1, sp, #40	@ 0x28
 80030cc:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 80030d0:	f007 f9f8 	bl	800a4c4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80030d4:	4638      	mov	r0, r7
 80030d6:	9903      	ldr	r1, [sp, #12]
 80030d8:	f005 fe86 	bl	8008de8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80030dc:	4620      	mov	r0, r4
 80030de:	b00d      	add	sp, #52	@ 0x34
 80030e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80030e4:	0801f688 	.word	0x0801f688
 80030e8:	0801fb5c 	.word	0x0801fb5c
 80030ec:	0801f3ec 	.word	0x0801f3ec
 80030f0:	0801f53a 	.word	0x0801f53a
 80030f4:	0801f469 	.word	0x0801f469
 80030f8:	0801f4fc 	.word	0x0801f4fc
 80030fc:	20011a30 	.word	0x20011a30
 8003100:	0801f585 	.word	0x0801f585
 8003104:	20011a24 	.word	0x20011a24
 8003108:	20011a28 	.word	0x20011a28
 800310c:	0801ed84 	.word	0x0801ed84

08003110 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8003110:	4770      	bx	lr
	...

08003114 <_Z23getFont_verdana_10_4bppv>:
{
 8003114:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8003116:	4d16      	ldr	r5, [pc, #88]	@ (8003170 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8003118:	682c      	ldr	r4, [r5, #0]
 800311a:	f3bf 8f5b 	dmb	ish
 800311e:	f014 0401 	ands.w	r4, r4, #1
{
 8003122:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8003124:	d120      	bne.n	8003168 <_Z23getFont_verdana_10_4bppv+0x54>
 8003126:	4628      	mov	r0, r5
 8003128:	f019 ff0e 	bl	801cf48 <__cxa_guard_acquire>
 800312c:	b1e0      	cbz	r0, 8003168 <_Z23getFont_verdana_10_4bppv+0x54>
 800312e:	233f      	movs	r3, #63	@ 0x3f
 8003130:	9309      	str	r3, [sp, #36]	@ 0x24
 8003132:	4b10      	ldr	r3, [pc, #64]	@ (8003174 <_Z23getFont_verdana_10_4bppv+0x60>)
 8003134:	9308      	str	r3, [sp, #32]
 8003136:	4b10      	ldr	r3, [pc, #64]	@ (8003178 <_Z23getFont_verdana_10_4bppv+0x64>)
 8003138:	4910      	ldr	r1, [pc, #64]	@ (800317c <_Z23getFont_verdana_10_4bppv+0x68>)
 800313a:	4811      	ldr	r0, [pc, #68]	@ (8003180 <_Z23getFont_verdana_10_4bppv+0x6c>)
 800313c:	940a      	str	r4, [sp, #40]	@ 0x28
 800313e:	2201      	movs	r2, #1
 8003140:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8003144:	2304      	movs	r3, #4
 8003146:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800314a:	230a      	movs	r3, #10
 800314c:	9300      	str	r3, [sp, #0]
 800314e:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8003152:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8003156:	9405      	str	r4, [sp, #20]
 8003158:	f7ff fb9a 	bl	8002890 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800315c:	4809      	ldr	r0, [pc, #36]	@ (8003184 <_Z23getFont_verdana_10_4bppv+0x70>)
 800315e:	f019 ff3d 	bl	801cfdc <atexit>
 8003162:	4628      	mov	r0, r5
 8003164:	f019 fefc 	bl	801cf60 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8003168:	4805      	ldr	r0, [pc, #20]	@ (8003180 <_Z23getFont_verdana_10_4bppv+0x6c>)
 800316a:	b00f      	add	sp, #60	@ 0x3c
 800316c:	bd30      	pop	{r4, r5, pc}
 800316e:	bf00      	nop
 8003170:	20000af0 	.word	0x20000af0
 8003174:	08020bd4 	.word	0x08020bd4
 8003178:	08020be4 	.word	0x08020be4
 800317c:	08020990 	.word	0x08020990
 8003180:	20000af4 	.word	0x20000af4
 8003184:	08003111 	.word	0x08003111

08003188 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_15_4bpp();

touchgfx::GeneratedFont& getFont_verdana_15_4bpp()
{
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 18, 18, 15, 0, 0, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8003188:	4770      	bx	lr
	...

0800318c <_Z23getFont_verdana_15_4bppv>:
{
 800318c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 18, 18, 15, 0, 0, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 800318e:	4d17      	ldr	r5, [pc, #92]	@ (80031ec <_Z23getFont_verdana_15_4bppv+0x60>)
 8003190:	682c      	ldr	r4, [r5, #0]
 8003192:	f3bf 8f5b 	dmb	ish
 8003196:	f014 0401 	ands.w	r4, r4, #1
{
 800319a:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 18, 18, 15, 0, 0, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 800319c:	d122      	bne.n	80031e4 <_Z23getFont_verdana_15_4bppv+0x58>
 800319e:	4628      	mov	r0, r5
 80031a0:	f019 fed2 	bl	801cf48 <__cxa_guard_acquire>
 80031a4:	b1f0      	cbz	r0, 80031e4 <_Z23getFont_verdana_15_4bppv+0x58>
 80031a6:	233f      	movs	r3, #63	@ 0x3f
 80031a8:	9309      	str	r3, [sp, #36]	@ 0x24
 80031aa:	4b11      	ldr	r3, [pc, #68]	@ (80031f0 <_Z23getFont_verdana_15_4bppv+0x64>)
 80031ac:	9308      	str	r3, [sp, #32]
 80031ae:	4b11      	ldr	r3, [pc, #68]	@ (80031f4 <_Z23getFont_verdana_15_4bppv+0x68>)
 80031b0:	9307      	str	r3, [sp, #28]
 80031b2:	2301      	movs	r3, #1
 80031b4:	e9cd 4305 	strd	r4, r3, [sp, #20]
 80031b8:	9304      	str	r3, [sp, #16]
 80031ba:	2304      	movs	r3, #4
 80031bc:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80031c0:	230f      	movs	r3, #15
 80031c2:	9300      	str	r3, [sp, #0]
 80031c4:	2312      	movs	r3, #18
 80031c6:	490c      	ldr	r1, [pc, #48]	@ (80031f8 <_Z23getFont_verdana_15_4bppv+0x6c>)
 80031c8:	480c      	ldr	r0, [pc, #48]	@ (80031fc <_Z23getFont_verdana_15_4bppv+0x70>)
 80031ca:	940a      	str	r4, [sp, #40]	@ 0x28
 80031cc:	461a      	mov	r2, r3
 80031ce:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 80031d2:	9401      	str	r4, [sp, #4]
 80031d4:	f7ff fb5c 	bl	8002890 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80031d8:	4809      	ldr	r0, [pc, #36]	@ (8003200 <_Z23getFont_verdana_15_4bppv+0x74>)
 80031da:	f019 feff 	bl	801cfdc <atexit>
 80031de:	4628      	mov	r0, r5
 80031e0:	f019 febe 	bl	801cf60 <__cxa_guard_release>
    return verdana_15_4bpp;
}
 80031e4:	4805      	ldr	r0, [pc, #20]	@ (80031fc <_Z23getFont_verdana_15_4bppv+0x70>)
 80031e6:	b00f      	add	sp, #60	@ 0x3c
 80031e8:	bd30      	pop	{r4, r5, pc}
 80031ea:	bf00      	nop
 80031ec:	20000b20 	.word	0x20000b20
 80031f0:	08020bd8 	.word	0x08020bd8
 80031f4:	08020be8 	.word	0x08020be8
 80031f8:	080209a0 	.word	0x080209a0
 80031fc:	20000b24 	.word	0x20000b24
 8003200:	08003189 	.word	0x08003189

08003204 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8003204:	4770      	bx	lr
	...

08003208 <_Z23getFont_verdana_40_4bppv>:
{
 8003208:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800320a:	4d16      	ldr	r5, [pc, #88]	@ (8003264 <_Z23getFont_verdana_40_4bppv+0x5c>)
 800320c:	682c      	ldr	r4, [r5, #0]
 800320e:	f3bf 8f5b 	dmb	ish
 8003212:	f014 0401 	ands.w	r4, r4, #1
{
 8003216:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8003218:	d120      	bne.n	800325c <_Z23getFont_verdana_40_4bppv+0x54>
 800321a:	4628      	mov	r0, r5
 800321c:	f019 fe94 	bl	801cf48 <__cxa_guard_acquire>
 8003220:	b1e0      	cbz	r0, 800325c <_Z23getFont_verdana_40_4bppv+0x54>
 8003222:	233f      	movs	r3, #63	@ 0x3f
 8003224:	9309      	str	r3, [sp, #36]	@ 0x24
 8003226:	4b10      	ldr	r3, [pc, #64]	@ (8003268 <_Z23getFont_verdana_40_4bppv+0x60>)
 8003228:	9308      	str	r3, [sp, #32]
 800322a:	4b10      	ldr	r3, [pc, #64]	@ (800326c <_Z23getFont_verdana_40_4bppv+0x64>)
 800322c:	4910      	ldr	r1, [pc, #64]	@ (8003270 <_Z23getFont_verdana_40_4bppv+0x68>)
 800322e:	4811      	ldr	r0, [pc, #68]	@ (8003274 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8003230:	940a      	str	r4, [sp, #40]	@ 0x28
 8003232:	2201      	movs	r2, #1
 8003234:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8003238:	2304      	movs	r3, #4
 800323a:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800323e:	2328      	movs	r3, #40	@ 0x28
 8003240:	9300      	str	r3, [sp, #0]
 8003242:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8003246:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800324a:	9405      	str	r4, [sp, #20]
 800324c:	f7ff fb20 	bl	8002890 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003250:	4809      	ldr	r0, [pc, #36]	@ (8003278 <_Z23getFont_verdana_40_4bppv+0x70>)
 8003252:	f019 fec3 	bl	801cfdc <atexit>
 8003256:	4628      	mov	r0, r5
 8003258:	f019 fe82 	bl	801cf60 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 800325c:	4805      	ldr	r0, [pc, #20]	@ (8003274 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800325e:	b00f      	add	sp, #60	@ 0x3c
 8003260:	bd30      	pop	{r4, r5, pc}
 8003262:	bf00      	nop
 8003264:	20000b50 	.word	0x20000b50
 8003268:	08020bdc 	.word	0x08020bdc
 800326c:	08020bec 	.word	0x08020bec
 8003270:	08020a9c 	.word	0x08020a9c
 8003274:	20000b54 	.word	0x20000b54
 8003278:	08003205 	.word	0x08003205

0800327c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdanab_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdanab_15_4bpp();

touchgfx::GeneratedFont& getFont_verdanab_15_4bpp()
{
    static touchgfx::GeneratedFont verdanab_15_4bpp(glyphs_verdanab_15_4bpp, 21, 15, 15, 0, 0, 4, 1, 0, 1, unicodes_verdanab_15_4bpp, kerning_verdanab_15_4bpp, 63, 0, 0, 0);
 800327c:	4770      	bx	lr
	...

08003280 <_Z24getFont_verdanab_15_4bppv>:
{
 8003280:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdanab_15_4bpp(glyphs_verdanab_15_4bpp, 21, 15, 15, 0, 0, 4, 1, 0, 1, unicodes_verdanab_15_4bpp, kerning_verdanab_15_4bpp, 63, 0, 0, 0);
 8003282:	4d16      	ldr	r5, [pc, #88]	@ (80032dc <_Z24getFont_verdanab_15_4bppv+0x5c>)
 8003284:	682c      	ldr	r4, [r5, #0]
 8003286:	f3bf 8f5b 	dmb	ish
 800328a:	f014 0401 	ands.w	r4, r4, #1
{
 800328e:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdanab_15_4bpp(glyphs_verdanab_15_4bpp, 21, 15, 15, 0, 0, 4, 1, 0, 1, unicodes_verdanab_15_4bpp, kerning_verdanab_15_4bpp, 63, 0, 0, 0);
 8003290:	d121      	bne.n	80032d6 <_Z24getFont_verdanab_15_4bppv+0x56>
 8003292:	4628      	mov	r0, r5
 8003294:	f019 fe58 	bl	801cf48 <__cxa_guard_acquire>
 8003298:	b1e8      	cbz	r0, 80032d6 <_Z24getFont_verdanab_15_4bppv+0x56>
 800329a:	233f      	movs	r3, #63	@ 0x3f
 800329c:	9309      	str	r3, [sp, #36]	@ 0x24
 800329e:	4b10      	ldr	r3, [pc, #64]	@ (80032e0 <_Z24getFont_verdanab_15_4bppv+0x60>)
 80032a0:	9308      	str	r3, [sp, #32]
 80032a2:	4b10      	ldr	r3, [pc, #64]	@ (80032e4 <_Z24getFont_verdanab_15_4bppv+0x64>)
 80032a4:	9307      	str	r3, [sp, #28]
 80032a6:	2301      	movs	r3, #1
 80032a8:	e9cd 4305 	strd	r4, r3, [sp, #20]
 80032ac:	9304      	str	r3, [sp, #16]
 80032ae:	2304      	movs	r3, #4
 80032b0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80032b4:	230f      	movs	r3, #15
 80032b6:	490c      	ldr	r1, [pc, #48]	@ (80032e8 <_Z24getFont_verdanab_15_4bppv+0x68>)
 80032b8:	9300      	str	r3, [sp, #0]
 80032ba:	2215      	movs	r2, #21
 80032bc:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 80032c0:	480a      	ldr	r0, [pc, #40]	@ (80032ec <_Z24getFont_verdanab_15_4bppv+0x6c>)
 80032c2:	940a      	str	r4, [sp, #40]	@ 0x28
 80032c4:	9401      	str	r4, [sp, #4]
 80032c6:	f7ff fae3 	bl	8002890 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80032ca:	4809      	ldr	r0, [pc, #36]	@ (80032f0 <_Z24getFont_verdanab_15_4bppv+0x70>)
 80032cc:	f019 fe86 	bl	801cfdc <atexit>
 80032d0:	4628      	mov	r0, r5
 80032d2:	f019 fe45 	bl	801cf60 <__cxa_guard_release>
    return verdanab_15_4bpp;
}
 80032d6:	4805      	ldr	r0, [pc, #20]	@ (80032ec <_Z24getFont_verdanab_15_4bppv+0x6c>)
 80032d8:	b00f      	add	sp, #60	@ 0x3c
 80032da:	bd30      	pop	{r4, r5, pc}
 80032dc:	20000b80 	.word	0x20000b80
 80032e0:	08020be0 	.word	0x08020be0
 80032e4:	08020bf0 	.word	0x08020bf0
 80032e8:	08020aac 	.word	0x08020aac
 80032ec:	20000b84 	.word	0x20000b84
 80032f0:	0800327d 	.word	0x0800327d

080032f4 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 80032f4:	2000      	movs	r0, #0
 80032f6:	4770      	bx	lr

080032f8 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 80032f8:	2000      	movs	r0, #0
 80032fa:	4770      	bx	lr

080032fc <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80032fc:	b40e      	push	{r1, r2, r3}
 80032fe:	b503      	push	{r0, r1, lr}
 8003300:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8003302:	2100      	movs	r1, #0
{
 8003304:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8003308:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800330a:	f00a f871 	bl	800d3f0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800330e:	b002      	add	sp, #8
 8003310:	f85d eb04 	ldr.w	lr, [sp], #4
 8003314:	b003      	add	sp, #12
 8003316:	4770      	bx	lr

08003318 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8003318:	b40c      	push	{r2, r3}
 800331a:	b507      	push	{r0, r1, r2, lr}
 800331c:	ab04      	add	r3, sp, #16
 800331e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8003322:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8003324:	f00a f864 	bl	800d3f0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8003328:	b003      	add	sp, #12
 800332a:	f85d eb04 	ldr.w	lr, [sp], #4
 800332e:	b002      	add	sp, #8
 8003330:	4770      	bx	lr
	...

08003334 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8003334:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 8003336:	b510      	push	{r4, lr}
 8003338:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800333a:	b373      	cbz	r3, 800339a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800333c:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 800333e:	b92b      	cbnz	r3, 800334c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8003340:	4b18      	ldr	r3, [pc, #96]	@ (80033a4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8003342:	4a19      	ldr	r2, [pc, #100]	@ (80033a8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8003344:	21c5      	movs	r1, #197	@ 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8003346:	4819      	ldr	r0, [pc, #100]	@ (80033ac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8003348:	f019 fe2a 	bl	801cfa0 <__assert_func>
            return buffer[pos];
 800334c:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800334e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8003352:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 8003354:	b30b      	cbz	r3, 800339a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8003356:	f00b fb12 	bl	800e97e <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800335a:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800335c:	2b01      	cmp	r3, #1
 800335e:	d803      	bhi.n	8003368 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8003360:	4b13      	ldr	r3, [pc, #76]	@ (80033b0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8003362:	4a14      	ldr	r2, [pc, #80]	@ (80033b4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8003364:	21cb      	movs	r1, #203	@ 0xcb
 8003366:	e7ee      	b.n	8003346 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8003368:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800336a:	1c53      	adds	r3, r2, #1
 800336c:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800336e:	2b09      	cmp	r3, #9
 8003370:	4619      	mov	r1, r3
 8003372:	bf88      	it	hi
 8003374:	f1a3 010a 	subhi.w	r1, r3, #10
 8003378:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800337c:	f640 103f 	movw	r0, #2367	@ 0x93f
 8003380:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 8003382:	4281      	cmp	r1, r0
 8003384:	d109      	bne.n	800339a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8003386:	2b0a      	cmp	r3, #10
 8003388:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800338c:	bf28      	it	cs
 800338e:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8003390:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8003394:	8c50      	ldrh	r0, [r2, #34]	@ 0x22
            buffer[index < size ? index : 0] = newChar;
 8003396:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 8003398:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800339a:	4620      	mov	r0, r4
}
 800339c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 80033a0:	f00b b9f0 	b.w	800e784 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80033a4:	0801f6b4 	.word	0x0801f6b4
 80033a8:	0801f6bd 	.word	0x0801f6bd
 80033ac:	0801f768 	.word	0x0801f768
 80033b0:	0801f7b2 	.word	0x0801f7b2
 80033b4:	0801f7c0 	.word	0x0801f7c0

080033b8 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 80033b8:	f00b b9ab 	b.w	800e712 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080033bc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 80033bc:	b510      	push	{r4, lr}
 80033be:	b086      	sub	sp, #24
 80033c0:	ac02      	add	r4, sp, #8
 80033c2:	e884 0006 	stmia.w	r4, {r1, r2}
 80033c6:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 80033c8:	ab0a      	add	r3, sp, #40	@ 0x28
 80033ca:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80033cc:	9301      	str	r3, [sp, #4]
 80033ce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80033d0:	9300      	str	r3, [sp, #0]
 80033d2:	4621      	mov	r1, r4
 80033d4:	9b08      	ldr	r3, [sp, #32]
 80033d6:	f008 fbeb 	bl	800bbb0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 80033da:	b006      	add	sp, #24
 80033dc:	bd10      	pop	{r4, pc}
	...

080033e0 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 80033e0:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 80033e2:	bb18      	cbnz	r0, 800342c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 80033e4:	4b12      	ldr	r3, [pc, #72]	@ (8003430 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 80033e6:	4813      	ldr	r0, [pc, #76]	@ (8003434 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 80033e8:	681c      	ldr	r4, [r3, #0]
 80033ea:	4913      	ldr	r1, [pc, #76]	@ (8003438 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 80033ec:	b1b4      	cbz	r4, 800341c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80033ee:	6822      	ldr	r2, [r4, #0]
 80033f0:	4422      	add	r2, r4
 80033f2:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80033f4:	6862      	ldr	r2, [r4, #4]
 80033f6:	4422      	add	r2, r4
 80033f8:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80033fa:	68a2      	ldr	r2, [r4, #8]
 80033fc:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80033fe:	4b0f      	ldr	r3, [pc, #60]	@ (800343c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8003400:	2200      	movs	r2, #0
 8003402:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8003404:	f000 f838 	bl	8003478 <_ZN17TypedTextDatabase8getFontsEv>
 8003408:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800340a:	f000 f833 	bl	8003474 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800340e:	4b0c      	ldr	r3, [pc, #48]	@ (8003440 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8003410:	601c      	str	r4, [r3, #0]
        fonts = f;
 8003412:	4b0c      	ldr	r3, [pc, #48]	@ (8003444 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8003414:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8003416:	4b0c      	ldr	r3, [pc, #48]	@ (8003448 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8003418:	8018      	strh	r0, [r3, #0]
    }
}
 800341a:	e007      	b.n	800342c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 800341c:	4b0b      	ldr	r3, [pc, #44]	@ (800344c <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800341e:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8003420:	4b0b      	ldr	r3, [pc, #44]	@ (8003450 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8003422:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8003424:	4b0b      	ldr	r3, [pc, #44]	@ (8003454 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8003426:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8003428:	2c00      	cmp	r4, #0
 800342a:	d1e8      	bne.n	80033fe <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 800342c:	bd38      	pop	{r3, r4, r5, pc}
 800342e:	bf00      	nop
 8003430:	20000bbc 	.word	0x20000bbc
 8003434:	20000bb4 	.word	0x20000bb4
 8003438:	20000bb0 	.word	0x20000bb0
 800343c:	20000bb8 	.word	0x20000bb8
 8003440:	20011a24 	.word	0x20011a24
 8003444:	20011a2c 	.word	0x20011a2c
 8003448:	20011a28 	.word	0x20011a28
 800344c:	08020c10 	.word	0x08020c10
 8003450:	08020bf4 	.word	0x08020bf4
 8003454:	08020c7c 	.word	0x08020c7c

08003458 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8003458:	4b04      	ldr	r3, [pc, #16]	@ (800346c <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800345a:	681b      	ldr	r3, [r3, #0]
 800345c:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8003460:	4b03      	ldr	r3, [pc, #12]	@ (8003470 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8003462:	681b      	ldr	r3, [r3, #0]
}
 8003464:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003468:	4770      	bx	lr
 800346a:	bf00      	nop
 800346c:	20000bb0 	.word	0x20000bb0
 8003470:	20000bb4 	.word	0x20000bb4

08003474 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8003474:	2007      	movs	r0, #7
 8003476:	4770      	bx	lr

08003478 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8003478:	4800      	ldr	r0, [pc, #0]	@ (800347c <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800347a:	4770      	bx	lr
 800347c:	20000bc0 	.word	0x20000bc0

08003480 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdanab_15_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8003480:	b510      	push	{r4, lr}
    &(getFont_verdana_15_4bpp()),
 8003482:	f7ff fe83 	bl	800318c <_Z23getFont_verdana_15_4bppv>
};
 8003486:	4c06      	ldr	r4, [pc, #24]	@ (80034a0 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 8003488:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 800348a:	f7ff febd 	bl	8003208 <_Z23getFont_verdana_40_4bppv>
};
 800348e:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8003490:	f7ff fe40 	bl	8003114 <_Z23getFont_verdana_10_4bppv>
};
 8003494:	60a0      	str	r0, [r4, #8]
    &(getFont_verdanab_15_4bpp())
 8003496:	f7ff fef3 	bl	8003280 <_Z24getFont_verdanab_15_4bppv>
};
 800349a:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 800349c:	bd10      	pop	{r4, pc}
 800349e:	bf00      	nop
 80034a0:	20000bc0 	.word	0x20000bc0

080034a4 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80034a4:	4770      	bx	lr

080034a6 <_ZN19FrontendApplicationD0Ev>:
 80034a6:	b510      	push	{r4, lr}
 80034a8:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 80034ac:	4604      	mov	r4, r0
 80034ae:	f019 fd49 	bl	801cf44 <_ZdlPvj>
 80034b2:	4620      	mov	r0, r4
 80034b4:	bd10      	pop	{r4, pc}

080034b6 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80034b6:	b510      	push	{r4, lr}
 80034b8:	4604      	mov	r4, r0
    {
        model.tick();
 80034ba:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 80034be:	f000 f813 	bl	80034e8 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80034c2:	4620      	mov	r0, r4
    }
 80034c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80034c8:	f009 b898 	b.w	800c5fc <_ZN8touchgfx11Application15handleTickEventEv>

080034cc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendHeap.hpp>
#include <touchgfx/transitions/NoTransition.hpp>
#include <gui/screen3_screen/Screen3View.hpp>
#include <gui/screen3_screen/Screen3Presenter.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80034cc:	b510      	push	{r4, lr}
 80034ce:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80034d0:	f7fe ffb2 	bl	8002438 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80034d4:	4b01      	ldr	r3, [pc, #4]	@ (80034dc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80034d6:	6023      	str	r3, [r4, #0]
{

}
 80034d8:	4620      	mov	r0, r4
 80034da:	bd10      	pop	{r4, pc}
 80034dc:	0801f89c 	.word	0x0801f89c

080034e0 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0), score(0)
 80034e0:	2200      	movs	r2, #0
 80034e2:	e9c0 2200 	strd	r2, r2, [r0]
{

}
 80034e6:	4770      	bx	lr

080034e8 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 80034e8:	4770      	bx	lr

080034ea <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {}
 80034ea:	4770      	bx	lr

080034ec <_ZThn4_N16Screen1PresenterD1Ev>:
 80034ec:	3804      	subs	r0, #4
 80034ee:	4770      	bx	lr

080034f0 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 80034f0:	4770      	bx	lr

080034f2 <_ZN16Screen1PresenterD0Ev>:
 80034f2:	b510      	push	{r4, lr}
 80034f4:	2110      	movs	r1, #16
 80034f6:	4604      	mov	r4, r0
 80034f8:	f019 fd24 	bl	801cf44 <_ZdlPvj>
 80034fc:	4620      	mov	r0, r4
 80034fe:	bd10      	pop	{r4, pc}

08003500 <_ZThn4_N16Screen1PresenterD0Ev>:
 8003500:	f1a0 0004 	sub.w	r0, r0, #4
 8003504:	e7f5      	b.n	80034f2 <_ZN16Screen1PresenterD0Ev>
	...

08003508 <_ZN16Screen1PresenterC1ER11Screen1View>:
    ModelListener() : model(0) {}
 8003508:	2200      	movs	r2, #0
 800350a:	6082      	str	r2, [r0, #8]
    : view(v)
 800350c:	4a02      	ldr	r2, [pc, #8]	@ (8003518 <_ZN16Screen1PresenterC1ER11Screen1View+0x10>)
 800350e:	6002      	str	r2, [r0, #0]
 8003510:	3218      	adds	r2, #24
 8003512:	6042      	str	r2, [r0, #4]
 8003514:	60c1      	str	r1, [r0, #12]
}
 8003516:	4770      	bx	lr
 8003518:	0801f8f0 	.word	0x0801f8f0

0800351c <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 800351c:	4770      	bx	lr
	...

08003520 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8003520:	b510      	push	{r4, lr}
 8003522:	4b03      	ldr	r3, [pc, #12]	@ (8003530 <_ZN11Screen1ViewD1Ev+0x10>)
 8003524:	6003      	str	r3, [r0, #0]
 8003526:	4604      	mov	r4, r0
 8003528:	f7ff f9e7 	bl	80028fa <_ZN15Screen1ViewBaseD1Ev>
 800352c:	4620      	mov	r0, r4
 800352e:	bd10      	pop	{r4, pc}
 8003530:	0801f918 	.word	0x0801f918

08003534 <_ZN11Screen1ViewD0Ev>:
 8003534:	b510      	push	{r4, lr}
 8003536:	4604      	mov	r4, r0
 8003538:	f7ff fff2 	bl	8003520 <_ZN11Screen1ViewD1Ev>
 800353c:	4620      	mov	r0, r4
 800353e:	f44f 71b4 	mov.w	r1, #360	@ 0x168
 8003542:	f019 fcff 	bl	801cf44 <_ZdlPvj>
 8003546:	4620      	mov	r0, r4
 8003548:	bd10      	pop	{r4, pc}
	...

0800354c <_ZN11Screen1View15handleTickEventEv>:
void Screen1View::handleTickEvent() {
 800354c:	b510      	push	{r4, lr}
	uint16_t count = osMessageQueueGetCount(buttonPressQueueHandle);
 800354e:	4c08      	ldr	r4, [pc, #32]	@ (8003570 <_ZN11Screen1View15handleTickEventEv+0x24>)
 8003550:	6820      	ldr	r0, [r4, #0]
 8003552:	f003 fcb8 	bl	8006ec6 <osMessageQueueGetCount>
	if(count > 0){
 8003556:	b280      	uxth	r0, r0
 8003558:	b140      	cbz	r0, 800356c <_ZN11Screen1View15handleTickEventEv+0x20>
        osMessageQueueReset(buttonPressQueueHandle);        
 800355a:	6820      	ldr	r0, [r4, #0]
 800355c:	f003 fcb5 	bl	8006eca <osMessageQueueReset>
        static_cast<FrontendApplication*>(Application::getInstance())->gotoScreen2ScreenWipeTransitionEast();
 8003560:	f008 ff88 	bl	800c474 <_ZN8touchgfx11Application11getInstanceEv>
}
 8003564:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        static_cast<FrontendApplication*>(Application::getInstance())->gotoScreen2ScreenWipeTransitionEast();
 8003568:	f7fe bfb6 	b.w	80024d8 <_ZN23FrontendApplicationBase35gotoScreen2ScreenWipeTransitionEastEv>
}
 800356c:	bd10      	pop	{r4, pc}
 800356e:	bf00      	nop
 8003570:	200007e0 	.word	0x200007e0

08003574 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8003574:	b510      	push	{r4, lr}
 8003576:	4604      	mov	r4, r0
 8003578:	f7ff fa62 	bl	8002a40 <_ZN15Screen1ViewBaseC1Ev>
 800357c:	4b01      	ldr	r3, [pc, #4]	@ (8003584 <_ZN11Screen1ViewC1Ev+0x10>)
 800357e:	6023      	str	r3, [r4, #0]
}
 8003580:	4620      	mov	r0, r4
 8003582:	bd10      	pop	{r4, pc}
 8003584:	0801f918 	.word	0x0801f918

08003588 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8003588:	f7ff b9b8 	b.w	80028fc <_ZN15Screen1ViewBase11setupScreenEv>

0800358c <_ZN16Screen2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen2Presenter() {}
 800358c:	4770      	bx	lr

0800358e <_ZThn4_N16Screen2PresenterD1Ev>:
 800358e:	3804      	subs	r0, #4
 8003590:	4770      	bx	lr

08003592 <_ZN16Screen2Presenter10deactivateEv>:
}

void Screen2Presenter::activate()
{

}
 8003592:	4770      	bx	lr

08003594 <_ZN16Screen2PresenterD0Ev>:
 8003594:	b510      	push	{r4, lr}
 8003596:	2110      	movs	r1, #16
 8003598:	4604      	mov	r4, r0
 800359a:	f019 fcd3 	bl	801cf44 <_ZdlPvj>
 800359e:	4620      	mov	r0, r4
 80035a0:	bd10      	pop	{r4, pc}

080035a2 <_ZThn4_N16Screen2PresenterD0Ev>:
 80035a2:	f1a0 0004 	sub.w	r0, r0, #4
 80035a6:	e7f5      	b.n	8003594 <_ZN16Screen2PresenterD0Ev>

080035a8 <_ZN16Screen2PresenterC1ER11Screen2View>:
 80035a8:	2200      	movs	r2, #0
 80035aa:	6082      	str	r2, [r0, #8]
    : view(v)
 80035ac:	4a02      	ldr	r2, [pc, #8]	@ (80035b8 <_ZN16Screen2PresenterC1ER11Screen2View+0x10>)
 80035ae:	6002      	str	r2, [r0, #0]
 80035b0:	3218      	adds	r2, #24
 80035b2:	6042      	str	r2, [r0, #4]
 80035b4:	60c1      	str	r1, [r0, #12]
}
 80035b6:	4770      	bx	lr
 80035b8:	0801f94c 	.word	0x0801f94c

080035bc <_ZN11Screen2View7randintEv>:


uint32_t Screen2View::randint(void) {
    static uint32_t seed = 0; 

    if (seed == 0) {
 80035bc:	4b09      	ldr	r3, [pc, #36]	@ (80035e4 <_ZN11Screen2View7randintEv+0x28>)
 80035be:	6819      	ldr	r1, [r3, #0]
uint32_t Screen2View::randint(void) {
 80035c0:	b510      	push	{r4, lr}
 80035c2:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
    if (seed == 0) {
 80035c6:	b909      	cbnz	r1, 80035cc <_ZN11Screen2View7randintEv+0x10>
        seed = SysTick->VAL;
 80035c8:	6991      	ldr	r1, [r2, #24]
 80035ca:	6019      	str	r1, [r3, #0]
    }
    seed = (seed * 1103515245 + 12345) & 0x7FFFFFFF; 
 80035cc:	6819      	ldr	r1, [r3, #0]
 80035ce:	4c06      	ldr	r4, [pc, #24]	@ (80035e8 <_ZN11Screen2View7randintEv+0x2c>)
    seed ^= SysTick->VAL;
 80035d0:	6992      	ldr	r2, [r2, #24]
    seed = (seed * 1103515245 + 12345) & 0x7FFFFFFF; 
 80035d2:	f243 0039 	movw	r0, #12345	@ 0x3039
 80035d6:	fb04 0001 	mla	r0, r4, r1, r0
 80035da:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
    seed ^= SysTick->VAL;
 80035de:	4050      	eors	r0, r2
 80035e0:	6018      	str	r0, [r3, #0]

    return seed;
}
 80035e2:	bd10      	pop	{r4, pc}
 80035e4:	20000bd0 	.word	0x20000bd0
 80035e8:	41c64e6d 	.word	0x41c64e6d

080035ec <_ZN11Screen2View14checkCollisionEv>:
	}
}

bool Screen2View::checkCollision(){
	int16_t dinoT, dinoR, dinoB, dinoL;
	if (dino.isVisible()){
 80035ec:	f890 3161 	ldrb.w	r3, [r0, #353]	@ 0x161
bool Screen2View::checkCollision(){
 80035f0:	b5f0      	push	{r4, r5, r6, r7, lr}
	if (dino.isVisible()){
 80035f2:	2b00      	cmp	r3, #0
 80035f4:	d037      	beq.n	8003666 <_ZN11Screen2View14checkCollisionEv+0x7a>
		int deviation = BASE_DINO_Y - dino.getY(); // amount of deviation of the dino from the ground
		if (deviation > 8) deviation = 8; // max deviation is 8, which reaches dino's legs
		dinoL = dino.getX() + 10;
 80035f6:	f8b0 3140 	ldrh.w	r3, [r0, #320]	@ 0x140
		dinoT = dino.getY() + 10;
		// simulate the skew of the dino's lower body using the deviation value
		dinoR = dino.getX() + dino.getWidth() - 10 - deviation;
 80035fa:	f8b0 4144 	ldrh.w	r4, [r0, #324]	@ 0x144
        return rect.y;
 80035fe:	f9b0 6142 	ldrsh.w	r6, [r0, #322]	@ 0x142
		dinoT = dino.getY() + 10;
 8003602:	f8b0 2142 	ldrh.w	r2, [r0, #322]	@ 0x142
		dinoL = dino.getX() + 10;
 8003606:	f103 050a 	add.w	r5, r3, #10
		dinoR = dino.getX() + dino.getWidth() - 10 - deviation;
 800360a:	4423      	add	r3, r4
		int deviation = BASE_DINO_Y - dino.getY(); // amount of deviation of the dino from the ground
 800360c:	f8d0 428c 	ldr.w	r4, [r0, #652]	@ 0x28c
 8003610:	1ba4      	subs	r4, r4, r6
		dinoR = dino.getX() + dino.getWidth() - 10 - deviation;
 8003612:	3b0a      	subs	r3, #10
 8003614:	2c08      	cmp	r4, #8
 8003616:	bfd8      	it	le
 8003618:	1b1b      	suble	r3, r3, r4
		dinoB = dino.getY() + dino.getHeight() - 10;
 800361a:	f8b0 4146 	ldrh.w	r4, [r0, #326]	@ 0x146
		dinoT = dino.getY() + 10;
 800361e:	f102 010a 	add.w	r1, r2, #10
		dinoR = dino.getX() + dino.getWidth() - 10 - deviation;
 8003622:	bfc8      	it	gt
 8003624:	3b08      	subgt	r3, #8
		dinoB = dino.getY() + dino.getHeight() - 10;
 8003626:	4422      	add	r2, r4
		dinoL = dino.getX() + 10;
 8003628:	b22d      	sxth	r5, r5
		dinoT = dino.getY() + 10;
 800362a:	b209      	sxth	r1, r1
		dinoR = dino.getX() + dino.getWidth() - 10 - deviation;
 800362c:	b21b      	sxth	r3, r3
		dinoB = dino.getY() + dino.getHeight() - 10;
 800362e:	3a0a      	subs	r2, #10
		dinoR = dinoc.getX() + dinoc.getWidth();
		dinoB = dinoc.getY() + dinoc.getHeight();
	}

	int16_t obsT, obsR, obsB, obsL;
	if (currentEnemy == 0){
 8003630:	f8d0 42b8 	ldr.w	r4, [r0, #696]	@ 0x2b8
		dinoB = dinoc.getY() + dinoc.getHeight();
 8003634:	b212      	sxth	r2, r2
	if (currentEnemy == 0){
 8003636:	bb2c      	cbnz	r4, 8003684 <_ZN11Screen2View14checkCollisionEv+0x98>
        return rect.x;
 8003638:	f9b0 709c 	ldrsh.w	r7, [r0, #156]	@ 0x9c
		obsL = cacti1.getX();
		obsT = cacti1.getY();
		obsR = cacti1.getX() + cacti1.getWidth();
 800363c:	f8b0 40a0 	ldrh.w	r4, [r0, #160]	@ 0xa0
        return rect.y;
 8003640:	f9b0 609e 	ldrsh.w	r6, [r0, #158]	@ 0x9e
		obsB = cacti1.getY() + cacti1.getHeight();
 8003644:	f8b0 00a2 	ldrh.w	r0, [r0, #162]	@ 0xa2
		obsR = cacti1.getX() + cacti1.getWidth();
 8003648:	443c      	add	r4, r7
 800364a:	b224      	sxth	r4, r4
	} else {
		obsL = bird.getX();
		obsT = bird.getY();
		obsR = bird.getX() + bird.getWidth();
		obsB = bird.getY() + bird.getHeight();
 800364c:	4430      	add	r0, r6
	}

	if (dinoR >= obsL && dinoL <= obsR && dinoB >= obsT && dinoT <= obsB){
 800364e:	42bb      	cmp	r3, r7
		obsB = bird.getY() + bird.getHeight();
 8003650:	b200      	sxth	r0, r0
	if (dinoR >= obsL && dinoL <= obsR && dinoB >= obsT && dinoT <= obsB){
 8003652:	db22      	blt.n	800369a <_ZN11Screen2View14checkCollisionEv+0xae>
 8003654:	42a5      	cmp	r5, r4
 8003656:	dc20      	bgt.n	800369a <_ZN11Screen2View14checkCollisionEv+0xae>
 8003658:	42b2      	cmp	r2, r6
 800365a:	db1e      	blt.n	800369a <_ZN11Screen2View14checkCollisionEv+0xae>
 800365c:	4281      	cmp	r1, r0
 800365e:	bfcc      	ite	gt
 8003660:	2000      	movgt	r0, #0
 8003662:	2001      	movle	r0, #1
		return true;
	}

	return false;
}
 8003664:	bdf0      	pop	{r4, r5, r6, r7, pc}
		dinoT = dinoc.getY() + 10;
 8003666:	f8b0 2106 	ldrh.w	r2, [r0, #262]	@ 0x106
        return rect.x;
 800366a:	f9b0 5104 	ldrsh.w	r5, [r0, #260]	@ 0x104
		dinoR = dinoc.getX() + dinoc.getWidth();
 800366e:	f8b0 3108 	ldrh.w	r3, [r0, #264]	@ 0x108
		dinoB = dinoc.getY() + dinoc.getHeight();
 8003672:	f8b0 410a 	ldrh.w	r4, [r0, #266]	@ 0x10a
		dinoT = dinoc.getY() + 10;
 8003676:	f102 010a 	add.w	r1, r2, #10
		dinoR = dinoc.getX() + dinoc.getWidth();
 800367a:	442b      	add	r3, r5
		dinoT = dinoc.getY() + 10;
 800367c:	b209      	sxth	r1, r1
		dinoR = dinoc.getX() + dinoc.getWidth();
 800367e:	b21b      	sxth	r3, r3
		dinoB = dinoc.getY() + dinoc.getHeight();
 8003680:	4422      	add	r2, r4
 8003682:	e7d5      	b.n	8003630 <_ZN11Screen2View14checkCollisionEv+0x44>
 8003684:	f9b0 717c 	ldrsh.w	r7, [r0, #380]	@ 0x17c
		obsR = bird.getX() + bird.getWidth();
 8003688:	f8b0 4180 	ldrh.w	r4, [r0, #384]	@ 0x180
        return rect.y;
 800368c:	f9b0 617e 	ldrsh.w	r6, [r0, #382]	@ 0x17e
		obsB = bird.getY() + bird.getHeight();
 8003690:	f8b0 0182 	ldrh.w	r0, [r0, #386]	@ 0x182
		obsR = bird.getX() + bird.getWidth();
 8003694:	443c      	add	r4, r7
 8003696:	b224      	sxth	r4, r4
        return rect.height;
 8003698:	e7d8      	b.n	800364c <_ZN11Screen2View14checkCollisionEv+0x60>
	return false;
 800369a:	2000      	movs	r0, #0
 800369c:	e7e2      	b.n	8003664 <_ZN11Screen2View14checkCollisionEv+0x78>

0800369e <_ZN11Screen2View14tearDownScreenEv>:


void Screen2View::tearDownScreen()
{
    Screen2ViewBase::tearDownScreen();
}
 800369e:	4770      	bx	lr

080036a0 <_ZN11Screen2View19handleJoystickEventEm>:
void Screen2View::handleJoystickEvent(uint32_t count){
 80036a0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
        osMessageQueueGet(joyStickQueueHandle, &Joystick, NULL, osWaitForever);
 80036a2:	4f16      	ldr	r7, [pc, #88]	@ (80036fc <_ZN11Screen2View19handleJoystickEventEm+0x5c>)
void Screen2View::handleJoystickEvent(uint32_t count){
 80036a4:	4604      	mov	r4, r0
 80036a6:	460d      	mov	r5, r1
    for(int i = 0; i < count; i++){
 80036a8:	2600      	movs	r6, #0
 80036aa:	42ae      	cmp	r6, r5
 80036ac:	d101      	bne.n	80036b2 <_ZN11Screen2View19handleJoystickEventEm+0x12>
}
 80036ae:	b003      	add	sp, #12
 80036b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
        osMessageQueueGet(joyStickQueueHandle, &Joystick, NULL, osWaitForever);
 80036b2:	f04f 33ff 	mov.w	r3, #4294967295
 80036b6:	6838      	ldr	r0, [r7, #0]
 80036b8:	2200      	movs	r2, #0
 80036ba:	a901      	add	r1, sp, #4
 80036bc:	f003 fbd3 	bl	8006e66 <osMessageQueueGet>
        JoystickY = Joystick & 0xFFFF;
 80036c0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
        if ((JoystickY < 64) && (!isJumping)) {
 80036c4:	2b3f      	cmp	r3, #63	@ 0x3f
 80036c6:	d808      	bhi.n	80036da <_ZN11Screen2View19handleJoystickEventEm+0x3a>
 80036c8:	f894 32a4 	ldrb.w	r3, [r4, #676]	@ 0x2a4
 80036cc:	b98b      	cbnz	r3, 80036f2 <_ZN11Screen2View19handleJoystickEventEm+0x52>
        visible = vis;
 80036ce:	f884 3161 	strb.w	r3, [r4, #353]	@ 0x161
 80036d2:	2301      	movs	r3, #1
 80036d4:	f884 3125 	strb.w	r3, [r4, #293]	@ 0x125
    }
 80036d8:	e009      	b.n	80036ee <_ZN11Screen2View19handleJoystickEventEm+0x4e>
        } else if ((JoystickY > 192) && (!isJumping)) {
 80036da:	2bc0      	cmp	r3, #192	@ 0xc0
 80036dc:	d909      	bls.n	80036f2 <_ZN11Screen2View19handleJoystickEventEm+0x52>
 80036de:	f894 32a4 	ldrb.w	r3, [r4, #676]	@ 0x2a4
 80036e2:	b933      	cbnz	r3, 80036f2 <_ZN11Screen2View19handleJoystickEventEm+0x52>
            timeDinoJump = 0;
 80036e4:	f8c4 32ac 	str.w	r3, [r4, #684]	@ 0x2ac
            isJumping = true;
 80036e8:	2301      	movs	r3, #1
 80036ea:	f884 32a4 	strb.w	r3, [r4, #676]	@ 0x2a4
    for(int i = 0; i < count; i++){
 80036ee:	3601      	adds	r6, #1
 80036f0:	e7db      	b.n	80036aa <_ZN11Screen2View19handleJoystickEventEm+0xa>
        visible = vis;
 80036f2:	2301      	movs	r3, #1
 80036f4:	f884 3161 	strb.w	r3, [r4, #353]	@ 0x161
 80036f8:	2300      	movs	r3, #0
 80036fa:	e7eb      	b.n	80036d4 <_ZN11Screen2View19handleJoystickEventEm+0x34>
 80036fc:	200007e4 	.word	0x200007e4

08003700 <_ZN11Screen2ViewD1Ev>:

class Screen2View : public Screen2ViewBase
{
public:
    Screen2View();
    virtual ~Screen2View() {}
 8003700:	b510      	push	{r4, lr}
 8003702:	4b03      	ldr	r3, [pc, #12]	@ (8003710 <_ZN11Screen2ViewD1Ev+0x10>)
 8003704:	6003      	str	r3, [r0, #0]
 8003706:	4604      	mov	r4, r0
 8003708:	f7ff fabc 	bl	8002c84 <_ZN15Screen2ViewBaseD1Ev>
 800370c:	4620      	mov	r0, r4
 800370e:	bd10      	pop	{r4, pc}
 8003710:	0801f978 	.word	0x0801f978

08003714 <_ZN11Screen2ViewD0Ev>:
 8003714:	b510      	push	{r4, lr}
 8003716:	4604      	mov	r4, r0
 8003718:	f7ff fff2 	bl	8003700 <_ZN11Screen2ViewD1Ev>
 800371c:	4620      	mov	r0, r4
 800371e:	f44f 7132 	mov.w	r1, #712	@ 0x2c8
 8003722:	f019 fc0f 	bl	801cf44 <_ZdlPvj>
 8003726:	4620      	mov	r0, r4
 8003728:	bd10      	pop	{r4, pc}
	...

0800372c <_ZN11Screen2ViewC1Ev>:
Screen2View::Screen2View()
 800372c:	b510      	push	{r4, lr}
 800372e:	4604      	mov	r4, r0
 8003730:	f7ff fb4e 	bl	8002dd0 <_ZN15Screen2ViewBaseC1Ev>
 8003734:	4b0f      	ldr	r3, [pc, #60]	@ (8003774 <_ZN11Screen2ViewC1Ev+0x48>)
 8003736:	6023      	str	r3, [r4, #0]
	BASE_CACTUS_Y = 156;
 8003738:	20a1      	movs	r0, #161	@ 0xa1
 800373a:	219c      	movs	r1, #156	@ 0x9c
 800373c:	e9c4 01a4 	strd	r0, r1, [r4, #656]	@ 0x290
	BASE_DINO_Y = 140;
 8003740:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8003744:	238c      	movs	r3, #140	@ 0x8c
	MIN_BIRD_Y = 106;
 8003746:	216a      	movs	r1, #106	@ 0x6a
	MAX_BIRD_Y = 140;
 8003748:	e9c4 13a6 	strd	r1, r3, [r4, #664]	@ 0x298
	BASE_DINO_Y = 140;
 800374c:	e9c4 23a2 	strd	r2, r3, [r4, #648]	@ 0x288
	currentDinoHeight = 1;
 8003750:	2001      	movs	r0, #1
    isJumping = false;
 8003752:	2300      	movs	r3, #0
	timeDinoJump = 0;
 8003754:	e9c4 03aa 	strd	r0, r3, [r4, #680]	@ 0x2a8
	BASE_ENEMY_SPEED = 3;
 8003758:	2103      	movs	r1, #3
	tick = 0;
 800375a:	e9c4 33ae 	strd	r3, r3, [r4, #696]	@ 0x2b8
    isJumping = false;
 800375e:	f884 32a4 	strb.w	r3, [r4, #676]	@ 0x2a4
	highestScore = 10;
 8003762:	230a      	movs	r3, #10
    enemyPositionX = SCREEN_WIDTH;
 8003764:	e9c4 12ac 	strd	r1, r2, [r4, #688]	@ 0x2b0
	BASE_ENEMY_SPEED = 3;
 8003768:	f8c4 12a0 	str.w	r1, [r4, #672]	@ 0x2a0
	highestScore = 10;
 800376c:	f8c4 32c4 	str.w	r3, [r4, #708]	@ 0x2c4
}
 8003770:	4620      	mov	r0, r4
 8003772:	bd10      	pop	{r4, pc}
 8003774:	0801f978 	.word	0x0801f978

08003778 <_ZN11Screen2View15handleTickEventEv>:
void Screen2View::handleTickEvent() {
 8003778:	b538      	push	{r3, r4, r5, lr}
	tick++;
 800377a:	f8d0 32bc 	ldr.w	r3, [r0, #700]	@ 0x2bc
 800377e:	3301      	adds	r3, #1
 8003780:	f8c0 32bc 	str.w	r3, [r0, #700]	@ 0x2bc
	bool gameOver = checkCollision();
 8003784:	6803      	ldr	r3, [r0, #0]
 8003786:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
void Screen2View::handleTickEvent() {
 8003788:	4604      	mov	r4, r0
	bool gameOver = checkCollision();
 800378a:	4798      	blx	r3
	uint32_t count = osMessageQueueGetCount(joyStickQueueHandle);
 800378c:	4b3a      	ldr	r3, [pc, #232]	@ (8003878 <_ZN11Screen2View15handleTickEventEv+0x100>)
 800378e:	6818      	ldr	r0, [r3, #0]
 8003790:	f003 fb99 	bl	8006ec6 <osMessageQueueGetCount>
	if(count > 0){
 8003794:	4601      	mov	r1, r0
 8003796:	b118      	cbz	r0, 80037a0 <_ZN11Screen2View15handleTickEventEv+0x28>
		handleJoystickEvent(count);
 8003798:	6823      	ldr	r3, [r4, #0]
 800379a:	4620      	mov	r0, r4
 800379c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800379e:	4798      	blx	r3
            cacti1.setX(enemyPositionX);
 80037a0:	e9d4 32ad 	ldrd	r3, r2, [r4, #692]	@ 0x2b4
    switch (currentEnemy) {
 80037a4:	2a00      	cmp	r2, #0
 80037a6:	d042      	beq.n	800382e <_ZN11Screen2View15handleTickEventEv+0xb6>
 80037a8:	2a01      	cmp	r2, #1
 80037aa:	d043      	beq.n	8003834 <_ZN11Screen2View15handleTickEventEv+0xbc>
    enemyPositionX -= enemySpeed;
 80037ac:	f8d4 22b0 	ldr.w	r2, [r4, #688]	@ 0x2b0
 80037b0:	1a9b      	subs	r3, r3, r2
 80037b2:	f8c4 32b4 	str.w	r3, [r4, #692]	@ 0x2b4
    if (enemyPositionX < -50) {
 80037b6:	3332      	adds	r3, #50	@ 0x32
 80037b8:	da29      	bge.n	800380e <_ZN11Screen2View15handleTickEventEv+0x96>
        currentEnemy = randint() % 2;
 80037ba:	6823      	ldr	r3, [r4, #0]
 80037bc:	4620      	mov	r0, r4
 80037be:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80037c0:	4798      	blx	r3
		enemySpeed = BASE_ENEMY_SPEED + randint() % 3; // randomize the speed of the enemy (2 - 4) pixels per tick
 80037c2:	6823      	ldr	r3, [r4, #0]
 80037c4:	f8d4 52a0 	ldr.w	r5, [r4, #672]	@ 0x2a0
 80037c8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
        currentEnemy = randint() % 2;
 80037ca:	f000 0001 	and.w	r0, r0, #1
 80037ce:	f8c4 02b8 	str.w	r0, [r4, #696]	@ 0x2b8
		enemySpeed = BASE_ENEMY_SPEED + randint() % 3; // randomize the speed of the enemy (2 - 4) pixels per tick
 80037d2:	4620      	mov	r0, r4
 80037d4:	4798      	blx	r3
 80037d6:	2303      	movs	r3, #3
 80037d8:	fbb0 f3f3 	udiv	r3, r0, r3
 80037dc:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80037e0:	1ac0      	subs	r0, r0, r3
        enemyPositionX = SCREEN_WIDTH + randint() % 30; // randomize the position of the enemy (320 - 350) pixels from the right edge
 80037e2:	6823      	ldr	r3, [r4, #0]
		enemySpeed = BASE_ENEMY_SPEED + randint() % 3; // randomize the speed of the enemy (2 - 4) pixels per tick
 80037e4:	4428      	add	r0, r5
        enemyPositionX = SCREEN_WIDTH + randint() % 30; // randomize the position of the enemy (320 - 350) pixels from the right edge
 80037e6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
		enemySpeed = BASE_ENEMY_SPEED + randint() % 3; // randomize the speed of the enemy (2 - 4) pixels per tick
 80037e8:	f8c4 02b0 	str.w	r0, [r4, #688]	@ 0x2b0
        enemyPositionX = SCREEN_WIDTH + randint() % 30; // randomize the position of the enemy (320 - 350) pixels from the right edge
 80037ec:	4620      	mov	r0, r4
 80037ee:	f8d4 5288 	ldr.w	r5, [r4, #648]	@ 0x288
 80037f2:	4798      	blx	r3
 80037f4:	231e      	movs	r3, #30
 80037f6:	fbb0 f2f3 	udiv	r2, r0, r3
 80037fa:	fb02 0013 	mls	r0, r2, r3, r0
 80037fe:	4428      	add	r0, r5
        switch (currentEnemy) {
 8003800:	f8d4 52b8 	ldr.w	r5, [r4, #696]	@ 0x2b8
        enemyPositionX = SCREEN_WIDTH + randint() % 30; // randomize the position of the enemy (320 - 350) pixels from the right edge
 8003804:	f8c4 02b4 	str.w	r0, [r4, #692]	@ 0x2b4
        switch (currentEnemy) {
 8003808:	b1bd      	cbz	r5, 800383a <_ZN11Screen2View15handleTickEventEv+0xc2>
 800380a:	2d01      	cmp	r5, #1
 800380c:	d01d      	beq.n	800384a <_ZN11Screen2View15handleTickEventEv+0xd2>
    checkScore();
 800380e:	6823      	ldr	r3, [r4, #0]
 8003810:	4620      	mov	r0, r4
 8003812:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003814:	4798      	blx	r3
    if (isJumping) {
 8003816:	f894 32a4 	ldrb.w	r3, [r4, #676]	@ 0x2a4
 800381a:	b11b      	cbz	r3, 8003824 <_ZN11Screen2View15handleTickEventEv+0xac>
        dinoJump();
 800381c:	6823      	ldr	r3, [r4, #0]
 800381e:	4620      	mov	r0, r4
 8003820:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003822:	4798      	blx	r3
     *
     * @see Container::invalidate
     */
    void invalidate() const
    {
        container.invalidate();
 8003824:	1d20      	adds	r0, r4, #4
}
 8003826:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800382a:	f009 bf0b 	b.w	800d644 <_ZNK8touchgfx8Drawable10invalidateEv>
            cacti1.setX(enemyPositionX);
 800382e:	f8a4 309c 	strh.w	r3, [r4, #156]	@ 0x9c
    }
 8003832:	e7bb      	b.n	80037ac <_ZN11Screen2View15handleTickEventEv+0x34>
            bird.setX(enemyPositionX);
 8003834:	f8a4 317c 	strh.w	r3, [r4, #380]	@ 0x17c
 8003838:	e7b8      	b.n	80037ac <_ZN11Screen2View15handleTickEventEv+0x34>
        visible = vis;
 800383a:	2301      	movs	r3, #1
                cacti1.setX(enemyPositionX);
 800383c:	f8a4 009c 	strh.w	r0, [r4, #156]	@ 0x9c
 8003840:	f884 30bd 	strb.w	r3, [r4, #189]	@ 0xbd
 8003844:	f884 519d 	strb.w	r5, [r4, #413]	@ 0x19d
    }
 8003848:	e7e1      	b.n	800380e <_ZN11Screen2View15handleTickEventEv+0x96>
				bird.setY(randint() % (MAX_BIRD_Y - MIN_BIRD_Y + 1) + MIN_BIRD_Y);
 800384a:	6823      	ldr	r3, [r4, #0]
				bird.setX(enemyPositionX);
 800384c:	f8a4 017c 	strh.w	r0, [r4, #380]	@ 0x17c
				bird.setY(randint() % (MAX_BIRD_Y - MIN_BIRD_Y + 1) + MIN_BIRD_Y);
 8003850:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003852:	4620      	mov	r0, r4
 8003854:	4798      	blx	r3
 8003856:	e9d4 23a6 	ldrd	r2, r3, [r4, #664]	@ 0x298
 800385a:	1a9b      	subs	r3, r3, r2
 800385c:	3301      	adds	r3, #1
 800385e:	fbb0 f1f3 	udiv	r1, r0, r3
 8003862:	fb01 0013 	mls	r0, r1, r3, r0
 8003866:	4410      	add	r0, r2
        visible = vis;
 8003868:	2300      	movs	r3, #0
        rect.y = y;
 800386a:	f8a4 017e 	strh.w	r0, [r4, #382]	@ 0x17e
        visible = vis;
 800386e:	f884 519d 	strb.w	r5, [r4, #413]	@ 0x19d
 8003872:	f884 30bd 	strb.w	r3, [r4, #189]	@ 0xbd
    }
 8003876:	e7ca      	b.n	800380e <_ZN11Screen2View15handleTickEventEv+0x96>
 8003878:	200007e4 	.word	0x200007e4

0800387c <_ZN11Screen2View10checkScoreEv>:
void Screen2View::checkScore(){
 800387c:	4a19      	ldr	r2, [pc, #100]	@ (80038e4 <_ZN11Screen2View10checkScoreEv+0x68>)
 800387e:	f8d0 32bc 	ldr.w	r3, [r0, #700]	@ 0x2bc
 8003882:	4353      	muls	r3, r2
	if(tick % 5 == 0) counter++;
 8003884:	f1b3 3f33 	cmp.w	r3, #858993459	@ 0x33333333
 8003888:	bf98      	it	ls
 800388a:	f8d0 32c0 	ldrls.w	r3, [r0, #704]	@ 0x2c0
	if(counter < highestScore){
 800388e:	f8d0 22c4 	ldr.w	r2, [r0, #708]	@ 0x2c4
	if(tick % 5 == 0) counter++;
 8003892:	bf98      	it	ls
 8003894:	3301      	addls	r3, #1
void Screen2View::checkScore(){
 8003896:	b570      	push	{r4, r5, r6, lr}
	if(tick % 5 == 0) counter++;
 8003898:	bf98      	it	ls
 800389a:	f8c0 32c0 	strls.w	r3, [r0, #704]	@ 0x2c0
	if(counter < highestScore){
 800389e:	f8d0 32c0 	ldr.w	r3, [r0, #704]	@ 0x2c0
 80038a2:	4293      	cmp	r3, r2
void Screen2View::checkScore(){
 80038a4:	4604      	mov	r4, r0
		Unicode::snprintf(highestScoreTextAreaBuffer, HIGHESTSCORETEXTAREA_SIZE, "%d", highestScore);
 80038a6:	f500 7613 	add.w	r6, r0, #588	@ 0x24c
		highestScoreTextArea.invalidate();
 80038aa:	f500 75da 	add.w	r5, r0, #436	@ 0x1b4
	if(counter < highestScore){
 80038ae:	da15      	bge.n	80038dc <_ZN11Screen2View10checkScoreEv+0x60>
		Unicode::snprintf(textAreaPointBuffer, TEXTAREAPOINT_SIZE, "%d", counter);
 80038b0:	4a0d      	ldr	r2, [pc, #52]	@ (80038e8 <_ZN11Screen2View10checkScoreEv+0x6c>)
 80038b2:	210a      	movs	r1, #10
 80038b4:	f500 7018 	add.w	r0, r0, #608	@ 0x260
 80038b8:	f00b fe0a 	bl	800f4d0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		textAreaPoint.invalidate();
 80038bc:	f504 7000 	add.w	r0, r4, #512	@ 0x200
 80038c0:	f009 fec0 	bl	800d644 <_ZNK8touchgfx8Drawable10invalidateEv>
		Unicode::snprintf(highestScoreTextAreaBuffer, HIGHESTSCORETEXTAREA_SIZE, "%d", highestScore);
 80038c4:	f8d4 32c4 	ldr.w	r3, [r4, #708]	@ 0x2c4
		Unicode::snprintf(highestScoreTextAreaBuffer, HIGHESTSCORETEXTAREA_SIZE, "%d", counter);
 80038c8:	4a07      	ldr	r2, [pc, #28]	@ (80038e8 <_ZN11Screen2View10checkScoreEv+0x6c>)
 80038ca:	4630      	mov	r0, r6
 80038cc:	210a      	movs	r1, #10
 80038ce:	f00b fdff 	bl	800f4d0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		highestScoreTextArea.invalidate();
 80038d2:	4628      	mov	r0, r5
}
 80038d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		highestScoreTextArea.invalidate();
 80038d8:	f009 beb4 	b.w	800d644 <_ZNK8touchgfx8Drawable10invalidateEv>
        visible = vis;
 80038dc:	2200      	movs	r2, #0
 80038de:	f880 2225 	strb.w	r2, [r0, #549]	@ 0x225
 80038e2:	e7f1      	b.n	80038c8 <_ZN11Screen2View10checkScoreEv+0x4c>
 80038e4:	cccccccd 	.word	0xcccccccd
 80038e8:	0801f96c 	.word	0x0801f96c

080038ec <_ZN11Screen2View11setupScreenEv>:
{
 80038ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80038ee:	4604      	mov	r4, r0
    Screen2ViewBase::setupScreen();
 80038f0:	f7ff f9c9 	bl	8002c86 <_ZN15Screen2ViewBase11setupScreenEv>
    }
    void saveHighestScore(int savedHighestScore){
    	model->saveHighestScore(savedHighestScore);
    }
    int getHighestScore(){
        	return model->getHighestScore();
 80038f4:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
    Unicode::snprintf(highestScoreTextAreaBuffer, HIGHESTSCORETEXTAREA_SIZE, "%d", highestScore);
 80038f6:	4e38      	ldr	r6, [pc, #224]	@ (80039d8 <_ZN11Screen2View11setupScreenEv+0xec>)
    void saveHighestScore(int savedHighestScore){
    	highestScore = savedHighestScore;
    }

	int getHighestScore(){
		return highestScore;
 80038f8:	689b      	ldr	r3, [r3, #8]
 80038fa:	2500      	movs	r5, #0
 80038fc:	689b      	ldr	r3, [r3, #8]
    highestScore = presenter->getHighestScore();
 80038fe:	f8c4 32c4 	str.w	r3, [r4, #708]	@ 0x2c4
    Unicode::snprintf(highestScoreTextAreaBuffer, HIGHESTSCORETEXTAREA_SIZE, "%d", highestScore);
 8003902:	4632      	mov	r2, r6
 8003904:	210a      	movs	r1, #10
 8003906:	f884 5125 	strb.w	r5, [r4, #293]	@ 0x125
 800390a:	f504 7013 	add.w	r0, r4, #588	@ 0x24c
 800390e:	f00b fddf 	bl	800f4d0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    highestScoreTextArea.invalidate();
 8003912:	f504 70da 	add.w	r0, r4, #436	@ 0x1b4
 8003916:	f009 fe95 	bl	800d644 <_ZNK8touchgfx8Drawable10invalidateEv>
    Unicode::snprintf(textAreaPointBuffer, TEXTAREAPOINT_SIZE, "%d", counter);
 800391a:	f8d4 32c0 	ldr.w	r3, [r4, #704]	@ 0x2c0
 800391e:	4632      	mov	r2, r6
 8003920:	210a      	movs	r1, #10
 8003922:	f504 7018 	add.w	r0, r4, #608	@ 0x260
 8003926:	f00b fdd3 	bl	800f4d0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    ground.setXY(0, 180);
 800392a:	f104 06c4 	add.w	r6, r4, #196	@ 0xc4
    textAreaPoint.invalidate();
 800392e:	f504 7000 	add.w	r0, r4, #512	@ 0x200
 8003932:	f009 fe87 	bl	800d644 <_ZNK8touchgfx8Drawable10invalidateEv>
    ground.setXY(0, 180);
 8003936:	4629      	mov	r1, r5
 8003938:	4630      	mov	r0, r6
 800393a:	22b4      	movs	r2, #180	@ 0xb4
 800393c:	f7ff f814 	bl	8002968 <_ZN8touchgfx8Drawable5setXYEss>
    ground.startAnimation(false, true, true);
 8003940:	2301      	movs	r3, #1
 8003942:	461a      	mov	r2, r3
 8003944:	4629      	mov	r1, r5
 8003946:	4630      	mov	r0, r6
    dino.setXY(25, BASE_DINO_Y);
 8003948:	f504 769e 	add.w	r6, r4, #316	@ 0x13c
    ground.startAnimation(false, true, true);
 800394c:	f006 fbec 	bl	800a128 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
    dino.setXY(25, BASE_DINO_Y);
 8003950:	f9b4 228c 	ldrsh.w	r2, [r4, #652]	@ 0x28c
 8003954:	4630      	mov	r0, r6
 8003956:	2119      	movs	r1, #25
 8003958:	f7ff f806 	bl	8002968 <_ZN8touchgfx8Drawable5setXYEss>
    dino.startAnimation(false, true, true);
 800395c:	2301      	movs	r3, #1
 800395e:	461a      	mov	r2, r3
 8003960:	4629      	mov	r1, r5
 8003962:	4630      	mov	r0, r6
 8003964:	f006 fbe0 	bl	800a128 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
    dino.setUpdateTicksInterval(10);
 8003968:	4630      	mov	r0, r6
 800396a:	210a      	movs	r1, #10
    dinoc.setXY(21, BASE_DINOC_Y);
 800396c:	f504 7680 	add.w	r6, r4, #256	@ 0x100
    dino.setUpdateTicksInterval(10);
 8003970:	f006 fc95 	bl	800a29e <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
    dinoc.setXY(21, BASE_DINOC_Y);
 8003974:	f9b4 2290 	ldrsh.w	r2, [r4, #656]	@ 0x290
 8003978:	4630      	mov	r0, r6
 800397a:	2115      	movs	r1, #21
 800397c:	f7fe fff4 	bl	8002968 <_ZN8touchgfx8Drawable5setXYEss>
    dinoc.startAnimation(false, true, true);
 8003980:	2301      	movs	r3, #1
 8003982:	461a      	mov	r2, r3
 8003984:	4629      	mov	r1, r5
 8003986:	4630      	mov	r0, r6
 8003988:	f006 fbce 	bl	800a128 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
    dinoc.setUpdateTicksInterval(10);
 800398c:	4630      	mov	r0, r6
 800398e:	210a      	movs	r1, #10
 8003990:	f006 fc85 	bl	800a29e <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
 8003994:	2701      	movs	r7, #1
    bird.setXY(SCREEN_WIDTH, MAX_BIRD_Y);
 8003996:	f504 76bc 	add.w	r6, r4, #376	@ 0x178
    cacti1.setXY(SCREEN_WIDTH, BASE_CACTUS_Y);
 800399a:	f9b4 2294 	ldrsh.w	r2, [r4, #660]	@ 0x294
 800399e:	f9b4 1288 	ldrsh.w	r1, [r4, #648]	@ 0x288
 80039a2:	f884 5125 	strb.w	r5, [r4, #293]	@ 0x125
 80039a6:	f104 0098 	add.w	r0, r4, #152	@ 0x98
 80039aa:	f7fe ffdd 	bl	8002968 <_ZN8touchgfx8Drawable5setXYEss>
    bird.setXY(SCREEN_WIDTH, MAX_BIRD_Y);
 80039ae:	f9b4 229c 	ldrsh.w	r2, [r4, #668]	@ 0x29c
 80039b2:	f9b4 1288 	ldrsh.w	r1, [r4, #648]	@ 0x288
 80039b6:	f884 70bd 	strb.w	r7, [r4, #189]	@ 0xbd
 80039ba:	4630      	mov	r0, r6
 80039bc:	f7fe ffd4 	bl	8002968 <_ZN8touchgfx8Drawable5setXYEss>
    bird.startAnimation(false, true, true);
 80039c0:	4629      	mov	r1, r5
 80039c2:	4630      	mov	r0, r6
 80039c4:	463b      	mov	r3, r7
 80039c6:	463a      	mov	r2, r7
 80039c8:	f006 fbae 	bl	800a128 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
    bird.setUpdateTicksInterval(10);
 80039cc:	4630      	mov	r0, r6
 80039ce:	210a      	movs	r1, #10
}
 80039d0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    bird.setUpdateTicksInterval(10);
 80039d4:	f006 bc63 	b.w	800a29e <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
 80039d8:	0801f96c 	.word	0x0801f96c

080039dc <_ZN11Screen2View8dinoJumpEv>:
void Screen2View::dinoJump(){
 80039dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80039e0:	4605      	mov	r5, r0
 80039e2:	f04f 0801 	mov.w	r8, #1
 80039e6:	2600      	movs	r6, #0
	dino.stopAnimation();
 80039e8:	f500 779e 	add.w	r7, r0, #316	@ 0x13c
 80039ec:	f880 6125 	strb.w	r6, [r0, #293]	@ 0x125
 80039f0:	f880 8161 	strb.w	r8, [r0, #353]	@ 0x161
 80039f4:	4638      	mov	r0, r7
 80039f6:	f006 fb77 	bl	800a0e8 <_ZN8touchgfx13AnimatedImage13stopAnimationEv>
	timeDinoJump++;
 80039fa:	f8d5 32ac 	ldr.w	r3, [r5, #684]	@ 0x2ac
	currentDinoHeight = round(BASE_DINO_Y - a*timeDinoJump*timeDinoJump/100 - v0*timeDinoJump/10);//y = a*t*t + v0*t + y0
 80039fe:	f8d5 228c 	ldr.w	r2, [r5, #652]	@ 0x28c
	timeDinoJump++;
 8003a02:	4443      	add	r3, r8
	currentDinoHeight = round(BASE_DINO_Y - a*timeDinoJump*timeDinoJump/100 - v0*timeDinoJump/10);//y = a*t*t + v0*t + y0
 8003a04:	fb03 f403 	mul.w	r4, r3, r3
 8003a08:	f06f 0163 	mvn.w	r1, #99	@ 0x63
 8003a0c:	eba4 1404 	sub.w	r4, r4, r4, lsl #4
 8003a10:	fb94 f4f1 	sdiv	r4, r4, r1
 8003a14:	4414      	add	r4, r2
	timeDinoJump++;
 8003a16:	f8c5 32ac 	str.w	r3, [r5, #684]	@ 0x2ac
	currentDinoHeight = round(BASE_DINO_Y - a*timeDinoJump*timeDinoJump/100 - v0*timeDinoJump/10);//y = a*t*t + v0*t + y0
 8003a1a:	f06f 0109 	mvn.w	r1, #9
 8003a1e:	eb03 1383 	add.w	r3, r3, r3, lsl #6
 8003a22:	fb93 f3f1 	sdiv	r3, r3, r1
 8003a26:	441c      	add	r4, r3
 8003a28:	f8c5 42a8 	str.w	r4, [r5, #680]	@ 0x2a8
	dino.setY(currentDinoHeight);
 8003a2c:	b224      	sxth	r4, r4
	if (dino.getY() >= BASE_DINO_Y){
 8003a2e:	42a2      	cmp	r2, r4
 8003a30:	dd03      	ble.n	8003a3a <_ZN11Screen2View8dinoJumpEv+0x5e>
        rect.y = y;
 8003a32:	f8a5 4142 	strh.w	r4, [r5, #322]	@ 0x142
}
 8003a36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		dino.setY(BASE_DINO_Y);
 8003a3a:	f8a5 2142 	strh.w	r2, [r5, #322]	@ 0x142
		dino.startAnimation(false, true, true);
 8003a3e:	4643      	mov	r3, r8
 8003a40:	4642      	mov	r2, r8
 8003a42:	4631      	mov	r1, r6
 8003a44:	4638      	mov	r0, r7
 8003a46:	f006 fb6f 	bl	800a128 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
		isJumping = false;
 8003a4a:	f885 62a4 	strb.w	r6, [r5, #676]	@ 0x2a4
		currentDinoHeight = 1;
 8003a4e:	f8c5 82a8 	str.w	r8, [r5, #680]	@ 0x2a8
}
 8003a52:	e7f0      	b.n	8003a36 <_ZN11Screen2View8dinoJumpEv+0x5a>

08003a54 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8003a54:	20f0      	movs	r0, #240	@ 0xf0
 8003a56:	4770      	bx	lr

08003a58 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8003a58:	f44f 70a0 	mov.w	r0, #320	@ 0x140
 8003a5c:	4770      	bx	lr

08003a5e <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8003a5e:	2029      	movs	r0, #41	@ 0x29
 8003a60:	f7fd be74 	b.w	800174c <LCD_IO_WriteReg>

08003a64 <ili9341_DisplayOff>:
 8003a64:	2028      	movs	r0, #40	@ 0x28
 8003a66:	f7fd be71 	b.w	800174c <LCD_IO_WriteReg>

08003a6a <ili9341_Init>:
{
 8003a6a:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8003a6c:	f7fd fe42 	bl	80016f4 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8003a70:	20ca      	movs	r0, #202	@ 0xca
 8003a72:	f7fd fe6b 	bl	800174c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003a76:	20c3      	movs	r0, #195	@ 0xc3
 8003a78:	f7fd fe4c 	bl	8001714 <LCD_IO_WriteData>
 8003a7c:	2008      	movs	r0, #8
 8003a7e:	f7fd fe49 	bl	8001714 <LCD_IO_WriteData>
 8003a82:	2050      	movs	r0, #80	@ 0x50
 8003a84:	f7fd fe46 	bl	8001714 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003a88:	20cf      	movs	r0, #207	@ 0xcf
 8003a8a:	f7fd fe5f 	bl	800174c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003a8e:	2000      	movs	r0, #0
 8003a90:	f7fd fe40 	bl	8001714 <LCD_IO_WriteData>
 8003a94:	20c1      	movs	r0, #193	@ 0xc1
 8003a96:	f7fd fe3d 	bl	8001714 <LCD_IO_WriteData>
 8003a9a:	2030      	movs	r0, #48	@ 0x30
 8003a9c:	f7fd fe3a 	bl	8001714 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003aa0:	20ed      	movs	r0, #237	@ 0xed
 8003aa2:	f7fd fe53 	bl	800174c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003aa6:	2064      	movs	r0, #100	@ 0x64
 8003aa8:	f7fd fe34 	bl	8001714 <LCD_IO_WriteData>
 8003aac:	2003      	movs	r0, #3
 8003aae:	f7fd fe31 	bl	8001714 <LCD_IO_WriteData>
 8003ab2:	2012      	movs	r0, #18
 8003ab4:	f7fd fe2e 	bl	8001714 <LCD_IO_WriteData>
 8003ab8:	2081      	movs	r0, #129	@ 0x81
 8003aba:	f7fd fe2b 	bl	8001714 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003abe:	20e8      	movs	r0, #232	@ 0xe8
 8003ac0:	f7fd fe44 	bl	800174c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003ac4:	2085      	movs	r0, #133	@ 0x85
 8003ac6:	f7fd fe25 	bl	8001714 <LCD_IO_WriteData>
 8003aca:	2000      	movs	r0, #0
 8003acc:	f7fd fe22 	bl	8001714 <LCD_IO_WriteData>
 8003ad0:	2078      	movs	r0, #120	@ 0x78
 8003ad2:	f7fd fe1f 	bl	8001714 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003ad6:	20cb      	movs	r0, #203	@ 0xcb
 8003ad8:	f7fd fe38 	bl	800174c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003adc:	2039      	movs	r0, #57	@ 0x39
 8003ade:	f7fd fe19 	bl	8001714 <LCD_IO_WriteData>
 8003ae2:	202c      	movs	r0, #44	@ 0x2c
 8003ae4:	f7fd fe16 	bl	8001714 <LCD_IO_WriteData>
 8003ae8:	2000      	movs	r0, #0
 8003aea:	f7fd fe13 	bl	8001714 <LCD_IO_WriteData>
 8003aee:	2034      	movs	r0, #52	@ 0x34
 8003af0:	f7fd fe10 	bl	8001714 <LCD_IO_WriteData>
 8003af4:	2002      	movs	r0, #2
 8003af6:	f7fd fe0d 	bl	8001714 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003afa:	20f7      	movs	r0, #247	@ 0xf7
 8003afc:	f7fd fe26 	bl	800174c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003b00:	2020      	movs	r0, #32
 8003b02:	f7fd fe07 	bl	8001714 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003b06:	20ea      	movs	r0, #234	@ 0xea
 8003b08:	f7fd fe20 	bl	800174c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003b0c:	2000      	movs	r0, #0
 8003b0e:	f7fd fe01 	bl	8001714 <LCD_IO_WriteData>
 8003b12:	2000      	movs	r0, #0
 8003b14:	f7fd fdfe 	bl	8001714 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003b18:	20b1      	movs	r0, #177	@ 0xb1
 8003b1a:	f7fd fe17 	bl	800174c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003b1e:	2000      	movs	r0, #0
 8003b20:	f7fd fdf8 	bl	8001714 <LCD_IO_WriteData>
 8003b24:	201b      	movs	r0, #27
 8003b26:	f7fd fdf5 	bl	8001714 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003b2a:	20b6      	movs	r0, #182	@ 0xb6
 8003b2c:	f7fd fe0e 	bl	800174c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003b30:	200a      	movs	r0, #10
 8003b32:	f7fd fdef 	bl	8001714 <LCD_IO_WriteData>
 8003b36:	20a2      	movs	r0, #162	@ 0xa2
 8003b38:	f7fd fdec 	bl	8001714 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003b3c:	20c0      	movs	r0, #192	@ 0xc0
 8003b3e:	f7fd fe05 	bl	800174c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003b42:	2010      	movs	r0, #16
 8003b44:	f7fd fde6 	bl	8001714 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003b48:	20c1      	movs	r0, #193	@ 0xc1
 8003b4a:	f7fd fdff 	bl	800174c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003b4e:	2010      	movs	r0, #16
 8003b50:	f7fd fde0 	bl	8001714 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003b54:	20c5      	movs	r0, #197	@ 0xc5
 8003b56:	f7fd fdf9 	bl	800174c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003b5a:	2045      	movs	r0, #69	@ 0x45
 8003b5c:	f7fd fdda 	bl	8001714 <LCD_IO_WriteData>
 8003b60:	2015      	movs	r0, #21
 8003b62:	f7fd fdd7 	bl	8001714 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003b66:	20c7      	movs	r0, #199	@ 0xc7
 8003b68:	f7fd fdf0 	bl	800174c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003b6c:	2090      	movs	r0, #144	@ 0x90
 8003b6e:	f7fd fdd1 	bl	8001714 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003b72:	2036      	movs	r0, #54	@ 0x36
 8003b74:	f7fd fdea 	bl	800174c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003b78:	20c8      	movs	r0, #200	@ 0xc8
 8003b7a:	f7fd fdcb 	bl	8001714 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003b7e:	20f2      	movs	r0, #242	@ 0xf2
 8003b80:	f7fd fde4 	bl	800174c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003b84:	2000      	movs	r0, #0
 8003b86:	f7fd fdc5 	bl	8001714 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003b8a:	20b0      	movs	r0, #176	@ 0xb0
 8003b8c:	f7fd fdde 	bl	800174c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003b90:	20c2      	movs	r0, #194	@ 0xc2
 8003b92:	f7fd fdbf 	bl	8001714 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003b96:	20b6      	movs	r0, #182	@ 0xb6
 8003b98:	f7fd fdd8 	bl	800174c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003b9c:	200a      	movs	r0, #10
 8003b9e:	f7fd fdb9 	bl	8001714 <LCD_IO_WriteData>
 8003ba2:	20a7      	movs	r0, #167	@ 0xa7
 8003ba4:	f7fd fdb6 	bl	8001714 <LCD_IO_WriteData>
 8003ba8:	2027      	movs	r0, #39	@ 0x27
 8003baa:	f7fd fdb3 	bl	8001714 <LCD_IO_WriteData>
 8003bae:	2004      	movs	r0, #4
 8003bb0:	f7fd fdb0 	bl	8001714 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003bb4:	202a      	movs	r0, #42	@ 0x2a
 8003bb6:	f7fd fdc9 	bl	800174c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003bba:	2000      	movs	r0, #0
 8003bbc:	f7fd fdaa 	bl	8001714 <LCD_IO_WriteData>
 8003bc0:	2000      	movs	r0, #0
 8003bc2:	f7fd fda7 	bl	8001714 <LCD_IO_WriteData>
 8003bc6:	2000      	movs	r0, #0
 8003bc8:	f7fd fda4 	bl	8001714 <LCD_IO_WriteData>
 8003bcc:	20ef      	movs	r0, #239	@ 0xef
 8003bce:	f7fd fda1 	bl	8001714 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003bd2:	202b      	movs	r0, #43	@ 0x2b
 8003bd4:	f7fd fdba 	bl	800174c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003bd8:	2000      	movs	r0, #0
 8003bda:	f7fd fd9b 	bl	8001714 <LCD_IO_WriteData>
 8003bde:	2000      	movs	r0, #0
 8003be0:	f7fd fd98 	bl	8001714 <LCD_IO_WriteData>
 8003be4:	2001      	movs	r0, #1
 8003be6:	f7fd fd95 	bl	8001714 <LCD_IO_WriteData>
 8003bea:	203f      	movs	r0, #63	@ 0x3f
 8003bec:	f7fd fd92 	bl	8001714 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003bf0:	20f6      	movs	r0, #246	@ 0xf6
 8003bf2:	f7fd fdab 	bl	800174c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003bf6:	2001      	movs	r0, #1
 8003bf8:	f7fd fd8c 	bl	8001714 <LCD_IO_WriteData>
 8003bfc:	2000      	movs	r0, #0
 8003bfe:	f7fd fd89 	bl	8001714 <LCD_IO_WriteData>
 8003c02:	2006      	movs	r0, #6
 8003c04:	f7fd fd86 	bl	8001714 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003c08:	202c      	movs	r0, #44	@ 0x2c
 8003c0a:	f7fd fd9f 	bl	800174c <LCD_IO_WriteReg>
  LCD_Delay(200);
 8003c0e:	20c8      	movs	r0, #200	@ 0xc8
 8003c10:	f7fd fdea 	bl	80017e8 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8003c14:	2026      	movs	r0, #38	@ 0x26
 8003c16:	f7fd fd99 	bl	800174c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003c1a:	2001      	movs	r0, #1
 8003c1c:	f7fd fd7a 	bl	8001714 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003c20:	20e0      	movs	r0, #224	@ 0xe0
 8003c22:	f7fd fd93 	bl	800174c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003c26:	200f      	movs	r0, #15
 8003c28:	f7fd fd74 	bl	8001714 <LCD_IO_WriteData>
 8003c2c:	2029      	movs	r0, #41	@ 0x29
 8003c2e:	f7fd fd71 	bl	8001714 <LCD_IO_WriteData>
 8003c32:	2024      	movs	r0, #36	@ 0x24
 8003c34:	f7fd fd6e 	bl	8001714 <LCD_IO_WriteData>
 8003c38:	200c      	movs	r0, #12
 8003c3a:	f7fd fd6b 	bl	8001714 <LCD_IO_WriteData>
 8003c3e:	200e      	movs	r0, #14
 8003c40:	f7fd fd68 	bl	8001714 <LCD_IO_WriteData>
 8003c44:	2009      	movs	r0, #9
 8003c46:	f7fd fd65 	bl	8001714 <LCD_IO_WriteData>
 8003c4a:	204e      	movs	r0, #78	@ 0x4e
 8003c4c:	f7fd fd62 	bl	8001714 <LCD_IO_WriteData>
 8003c50:	2078      	movs	r0, #120	@ 0x78
 8003c52:	f7fd fd5f 	bl	8001714 <LCD_IO_WriteData>
 8003c56:	203c      	movs	r0, #60	@ 0x3c
 8003c58:	f7fd fd5c 	bl	8001714 <LCD_IO_WriteData>
 8003c5c:	2009      	movs	r0, #9
 8003c5e:	f7fd fd59 	bl	8001714 <LCD_IO_WriteData>
 8003c62:	2013      	movs	r0, #19
 8003c64:	f7fd fd56 	bl	8001714 <LCD_IO_WriteData>
 8003c68:	2005      	movs	r0, #5
 8003c6a:	f7fd fd53 	bl	8001714 <LCD_IO_WriteData>
 8003c6e:	2017      	movs	r0, #23
 8003c70:	f7fd fd50 	bl	8001714 <LCD_IO_WriteData>
 8003c74:	2011      	movs	r0, #17
 8003c76:	f7fd fd4d 	bl	8001714 <LCD_IO_WriteData>
 8003c7a:	2000      	movs	r0, #0
 8003c7c:	f7fd fd4a 	bl	8001714 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003c80:	20e1      	movs	r0, #225	@ 0xe1
 8003c82:	f7fd fd63 	bl	800174c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003c86:	2000      	movs	r0, #0
 8003c88:	f7fd fd44 	bl	8001714 <LCD_IO_WriteData>
 8003c8c:	2016      	movs	r0, #22
 8003c8e:	f7fd fd41 	bl	8001714 <LCD_IO_WriteData>
 8003c92:	201b      	movs	r0, #27
 8003c94:	f7fd fd3e 	bl	8001714 <LCD_IO_WriteData>
 8003c98:	2004      	movs	r0, #4
 8003c9a:	f7fd fd3b 	bl	8001714 <LCD_IO_WriteData>
 8003c9e:	2011      	movs	r0, #17
 8003ca0:	f7fd fd38 	bl	8001714 <LCD_IO_WriteData>
 8003ca4:	2007      	movs	r0, #7
 8003ca6:	f7fd fd35 	bl	8001714 <LCD_IO_WriteData>
 8003caa:	2031      	movs	r0, #49	@ 0x31
 8003cac:	f7fd fd32 	bl	8001714 <LCD_IO_WriteData>
 8003cb0:	2033      	movs	r0, #51	@ 0x33
 8003cb2:	f7fd fd2f 	bl	8001714 <LCD_IO_WriteData>
 8003cb6:	2042      	movs	r0, #66	@ 0x42
 8003cb8:	f7fd fd2c 	bl	8001714 <LCD_IO_WriteData>
 8003cbc:	2005      	movs	r0, #5
 8003cbe:	f7fd fd29 	bl	8001714 <LCD_IO_WriteData>
 8003cc2:	200c      	movs	r0, #12
 8003cc4:	f7fd fd26 	bl	8001714 <LCD_IO_WriteData>
 8003cc8:	200a      	movs	r0, #10
 8003cca:	f7fd fd23 	bl	8001714 <LCD_IO_WriteData>
 8003cce:	2028      	movs	r0, #40	@ 0x28
 8003cd0:	f7fd fd20 	bl	8001714 <LCD_IO_WriteData>
 8003cd4:	202f      	movs	r0, #47	@ 0x2f
 8003cd6:	f7fd fd1d 	bl	8001714 <LCD_IO_WriteData>
 8003cda:	200f      	movs	r0, #15
 8003cdc:	f7fd fd1a 	bl	8001714 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003ce0:	2011      	movs	r0, #17
 8003ce2:	f7fd fd33 	bl	800174c <LCD_IO_WriteReg>
  LCD_Delay(200);
 8003ce6:	20c8      	movs	r0, #200	@ 0xc8
 8003ce8:	f7fd fd7e 	bl	80017e8 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8003cec:	2029      	movs	r0, #41	@ 0x29
 8003cee:	f7fd fd2d 	bl	800174c <LCD_IO_WriteReg>
}
 8003cf2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8003cf6:	202c      	movs	r0, #44	@ 0x2c
 8003cf8:	f7fd bd28 	b.w	800174c <LCD_IO_WriteReg>

08003cfc <ili9341_ReadID>:
{
 8003cfc:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8003cfe:	f7fd fcf9 	bl	80016f4 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8003d02:	2103      	movs	r1, #3
 8003d04:	20d3      	movs	r0, #211	@ 0xd3
 8003d06:	f7fd fd3d 	bl	8001784 <LCD_IO_ReadData>
}
 8003d0a:	b280      	uxth	r0, r0
 8003d0c:	bd08      	pop	{r3, pc}

08003d0e <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8003d0e:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8003d10:	b2c4      	uxtb	r4, r0
 8003d12:	2202      	movs	r2, #2
 8003d14:	2103      	movs	r1, #3
 8003d16:	4620      	mov	r0, r4
 8003d18:	f7fd fca2 	bl	8001660 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8003d1c:	200a      	movs	r0, #10
 8003d1e:	f7fd fce7 	bl	80016f0 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8003d22:	4620      	mov	r0, r4
 8003d24:	2200      	movs	r2, #0
 8003d26:	2103      	movs	r1, #3
 8003d28:	f7fd fc9a 	bl	8001660 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 8003d2c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8003d30:	2002      	movs	r0, #2
 8003d32:	f7fd bcdd 	b.w	80016f0 <IOE_Delay>

08003d36 <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8003d36:	b538      	push	{r3, r4, r5, lr}
 8003d38:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003d3a:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8003d3c:	f7fd fc8e 	bl	800165c <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003d40:	2100      	movs	r1, #0
 8003d42:	4620      	mov	r0, r4
 8003d44:	f7fd fca4 	bl	8001690 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8003d48:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003d4a:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8003d4c:	4620      	mov	r0, r4
 8003d4e:	f7fd fc9f 	bl	8001690 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003d52:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8003d56:	b280      	uxth	r0, r0
 8003d58:	bd38      	pop	{r3, r4, r5, pc}

08003d5a <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8003d5a:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8003d5c:	b2c4      	uxtb	r4, r0
 8003d5e:	2140      	movs	r1, #64	@ 0x40
 8003d60:	4620      	mov	r0, r4
 8003d62:	f7fd fc95 	bl	8001690 <IOE_Read>
  
  if(state > 0)
 8003d66:	0603      	lsls	r3, r0, #24
 8003d68:	d507      	bpl.n	8003d7a <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8003d6a:	214c      	movs	r1, #76	@ 0x4c
 8003d6c:	4620      	mov	r0, r4
 8003d6e:	f7fd fc8f 	bl	8001690 <IOE_Read>
 8003d72:	3800      	subs	r0, #0
 8003d74:	bf18      	it	ne
 8003d76:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8003d78:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003d7a:	2201      	movs	r2, #1
 8003d7c:	214b      	movs	r1, #75	@ 0x4b
 8003d7e:	4620      	mov	r0, r4
 8003d80:	f7fd fc6e 	bl	8001660 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8003d84:	4620      	mov	r0, r4
 8003d86:	2200      	movs	r2, #0
 8003d88:	214b      	movs	r1, #75	@ 0x4b
 8003d8a:	f7fd fc69 	bl	8001660 <IOE_Write>
  uint8_t ret = 0;
 8003d8e:	2000      	movs	r0, #0
 8003d90:	e7f2      	b.n	8003d78 <stmpe811_TS_DetectTouch+0x1e>

08003d92 <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8003d92:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8003d94:	2304      	movs	r3, #4
 8003d96:	b2c4      	uxtb	r4, r0
{
 8003d98:	460e      	mov	r6, r1
 8003d9a:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8003d9c:	21d7      	movs	r1, #215	@ 0xd7
 8003d9e:	eb0d 0203 	add.w	r2, sp, r3
 8003da2:	4620      	mov	r0, r4
 8003da4:	f7fd fc8e 	bl	80016c4 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8003da8:	9b01      	ldr	r3, [sp, #4]
 8003daa:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8003dac:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8003dae:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8003db2:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003db4:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8003db6:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003db8:	2201      	movs	r2, #1
 8003dba:	214b      	movs	r1, #75	@ 0x4b
 8003dbc:	f7fd fc50 	bl	8001660 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8003dc0:	2200      	movs	r2, #0
 8003dc2:	214b      	movs	r1, #75	@ 0x4b
 8003dc4:	4620      	mov	r0, r4
 8003dc6:	f7fd fc4b 	bl	8001660 <IOE_Write>
}
 8003dca:	b002      	add	sp, #8
 8003dcc:	bd70      	pop	{r4, r5, r6, pc}
	...

08003dd0 <stmpe811_Init>:
{
 8003dd0:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8003dd2:	4a0a      	ldr	r2, [pc, #40]	@ (8003dfc <stmpe811_Init+0x2c>)
 8003dd4:	7813      	ldrb	r3, [r2, #0]
 8003dd6:	4298      	cmp	r0, r3
{
 8003dd8:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8003dda:	d00d      	beq.n	8003df8 <stmpe811_Init+0x28>
 8003ddc:	7851      	ldrb	r1, [r2, #1]
 8003dde:	4288      	cmp	r0, r1
 8003de0:	d00a      	beq.n	8003df8 <stmpe811_Init+0x28>
 8003de2:	b10b      	cbz	r3, 8003de8 <stmpe811_Init+0x18>
 8003de4:	b941      	cbnz	r1, 8003df8 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8003de6:	2301      	movs	r3, #1
      stmpe811[empty] = DeviceAddr;
 8003de8:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8003dea:	f7fd fc37 	bl	800165c <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8003dee:	4620      	mov	r0, r4
}
 8003df0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8003df4:	f7ff bf8b 	b.w	8003d0e <stmpe811_Reset>
}
 8003df8:	bd10      	pop	{r4, pc}
 8003dfa:	bf00      	nop
 8003dfc:	20000bd4 	.word	0x20000bd4

08003e00 <stmpe811_EnableGlobalIT>:
{
 8003e00:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8003e02:	b2c4      	uxtb	r4, r0
 8003e04:	2109      	movs	r1, #9
 8003e06:	4620      	mov	r0, r4
 8003e08:	f7fd fc42 	bl	8001690 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8003e0c:	f040 0201 	orr.w	r2, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8003e10:	b2d2      	uxtb	r2, r2
 8003e12:	4620      	mov	r0, r4
 8003e14:	2109      	movs	r1, #9
}
 8003e16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8003e1a:	f7fd bc21 	b.w	8001660 <IOE_Write>

08003e1e <stmpe811_DisableGlobalIT>:
{
 8003e1e:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8003e20:	b2c4      	uxtb	r4, r0
 8003e22:	2109      	movs	r1, #9
 8003e24:	4620      	mov	r0, r4
 8003e26:	f7fd fc33 	bl	8001690 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8003e2a:	2109      	movs	r1, #9
 8003e2c:	f000 02fe 	and.w	r2, r0, #254	@ 0xfe
 8003e30:	4620      	mov	r0, r4
}
 8003e32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8003e36:	f7fd bc13 	b.w	8001660 <IOE_Write>

08003e3a <stmpe811_EnableITSource>:
{
 8003e3a:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003e3c:	b2c4      	uxtb	r4, r0
{
 8003e3e:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003e40:	4620      	mov	r0, r4
 8003e42:	210a      	movs	r1, #10
 8003e44:	f7fd fc24 	bl	8001690 <IOE_Read>
  tmp |= Source; 
 8003e48:	ea40 0205 	orr.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003e4c:	b2d2      	uxtb	r2, r2
 8003e4e:	4620      	mov	r0, r4
 8003e50:	210a      	movs	r1, #10
}
 8003e52:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003e56:	f7fd bc03 	b.w	8001660 <IOE_Write>

08003e5a <stmpe811_TS_EnableIT>:
{
 8003e5a:	b510      	push	{r4, lr}
 8003e5c:	4604      	mov	r4, r0
  IOE_ITConfig();
 8003e5e:	f7fd fbfe 	bl	800165e <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8003e62:	4620      	mov	r0, r4
 8003e64:	211f      	movs	r1, #31
 8003e66:	f7ff ffe8 	bl	8003e3a <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8003e6a:	4620      	mov	r0, r4
}
 8003e6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_EnableGlobalIT(DeviceAddr);
 8003e70:	f7ff bfc6 	b.w	8003e00 <stmpe811_EnableGlobalIT>

08003e74 <stmpe811_DisableITSource>:
{
 8003e74:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003e76:	b2c4      	uxtb	r4, r0
{
 8003e78:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003e7a:	4620      	mov	r0, r4
 8003e7c:	210a      	movs	r1, #10
 8003e7e:	f7fd fc07 	bl	8001690 <IOE_Read>
  tmp &= ~Source; 
 8003e82:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003e86:	b2d2      	uxtb	r2, r2
 8003e88:	4620      	mov	r0, r4
 8003e8a:	210a      	movs	r1, #10
}
 8003e8c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003e90:	f7fd bbe6 	b.w	8001660 <IOE_Write>

08003e94 <stmpe811_TS_DisableIT>:
{
 8003e94:	b510      	push	{r4, lr}
 8003e96:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8003e98:	f7ff ffc1 	bl	8003e1e <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8003e9c:	4620      	mov	r0, r4
 8003e9e:	211f      	movs	r1, #31
}
 8003ea0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8003ea4:	f7ff bfe6 	b.w	8003e74 <stmpe811_DisableITSource>

08003ea8 <stmpe811_ReadGITStatus>:
{
 8003ea8:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8003eaa:	b2c0      	uxtb	r0, r0
{
 8003eac:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8003eae:	210b      	movs	r1, #11
 8003eb0:	f7fd fbee 	bl	8001690 <IOE_Read>
}
 8003eb4:	4020      	ands	r0, r4
 8003eb6:	bd10      	pop	{r4, pc}

08003eb8 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8003eb8:	211f      	movs	r1, #31
 8003eba:	f7ff bff5 	b.w	8003ea8 <stmpe811_ReadGITStatus>

08003ebe <stmpe811_ClearGlobalIT>:
{
 8003ebe:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8003ec0:	b2c0      	uxtb	r0, r0
 8003ec2:	210b      	movs	r1, #11
 8003ec4:	f7fd bbcc 	b.w	8001660 <IOE_Write>

08003ec8 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8003ec8:	211f      	movs	r1, #31
 8003eca:	f7ff bff8 	b.w	8003ebe <stmpe811_ClearGlobalIT>

08003ece <stmpe811_IO_EnableAF>:
{
 8003ece:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8003ed0:	b2c4      	uxtb	r4, r0
{
 8003ed2:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8003ed4:	4620      	mov	r0, r4
 8003ed6:	2117      	movs	r1, #23
 8003ed8:	f7fd fbda 	bl	8001690 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8003edc:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8003ee0:	b2d2      	uxtb	r2, r2
 8003ee2:	4620      	mov	r0, r4
 8003ee4:	2117      	movs	r1, #23
}
 8003ee6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8003eea:	f7fd bbb9 	b.w	8001660 <IOE_Write>

08003eee <stmpe811_TS_Start>:
{
 8003eee:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8003ef0:	b2c4      	uxtb	r4, r0
{
 8003ef2:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8003ef4:	2104      	movs	r1, #4
 8003ef6:	4620      	mov	r0, r4
 8003ef8:	f7fd fbca 	bl	8001690 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8003efc:	2104      	movs	r1, #4
 8003efe:	f000 02fb 	and.w	r2, r0, #251	@ 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8003f02:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8003f04:	4620      	mov	r0, r4
 8003f06:	f7fd fbab 	bl	8001660 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8003f0a:	4630      	mov	r0, r6
 8003f0c:	21f0      	movs	r1, #240	@ 0xf0
 8003f0e:	f7ff ffde 	bl	8003ece <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8003f12:	f005 02f8 	and.w	r2, r5, #248	@ 0xf8
 8003f16:	4620      	mov	r0, r4
 8003f18:	2104      	movs	r1, #4
 8003f1a:	f7fd fba1 	bl	8001660 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8003f1e:	2249      	movs	r2, #73	@ 0x49
 8003f20:	2120      	movs	r1, #32
 8003f22:	4620      	mov	r0, r4
 8003f24:	f7fd fb9c 	bl	8001660 <IOE_Write>
  IOE_Delay(2); 
 8003f28:	2002      	movs	r0, #2
 8003f2a:	f7fd fbe1 	bl	80016f0 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8003f2e:	4620      	mov	r0, r4
 8003f30:	2201      	movs	r2, #1
 8003f32:	2121      	movs	r1, #33	@ 0x21
 8003f34:	f7fd fb94 	bl	8001660 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8003f38:	4620      	mov	r0, r4
 8003f3a:	229a      	movs	r2, #154	@ 0x9a
 8003f3c:	2141      	movs	r1, #65	@ 0x41
 8003f3e:	f7fd fb8f 	bl	8001660 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8003f42:	4620      	mov	r0, r4
 8003f44:	2201      	movs	r2, #1
 8003f46:	214a      	movs	r1, #74	@ 0x4a
 8003f48:	f7fd fb8a 	bl	8001660 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003f4c:	4620      	mov	r0, r4
 8003f4e:	2201      	movs	r2, #1
 8003f50:	214b      	movs	r1, #75	@ 0x4b
 8003f52:	f7fd fb85 	bl	8001660 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8003f56:	4620      	mov	r0, r4
 8003f58:	2200      	movs	r2, #0
 8003f5a:	214b      	movs	r1, #75	@ 0x4b
 8003f5c:	f7fd fb80 	bl	8001660 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8003f60:	4620      	mov	r0, r4
 8003f62:	2201      	movs	r2, #1
 8003f64:	2156      	movs	r1, #86	@ 0x56
 8003f66:	f7fd fb7b 	bl	8001660 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8003f6a:	4620      	mov	r0, r4
 8003f6c:	2201      	movs	r2, #1
 8003f6e:	2158      	movs	r1, #88	@ 0x58
 8003f70:	f7fd fb76 	bl	8001660 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8003f74:	4620      	mov	r0, r4
 8003f76:	2201      	movs	r2, #1
 8003f78:	2140      	movs	r1, #64	@ 0x40
 8003f7a:	f7fd fb71 	bl	8001660 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8003f7e:	4620      	mov	r0, r4
 8003f80:	22ff      	movs	r2, #255	@ 0xff
 8003f82:	210b      	movs	r1, #11
 8003f84:	f7fd fb6c 	bl	8001660 <IOE_Write>
}
 8003f88:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8003f8c:	2002      	movs	r0, #2
 8003f8e:	f7fd bbaf 	b.w	80016f0 <IOE_Delay>
	...

08003f94 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8003f94:	4b05      	ldr	r3, [pc, #20]	@ (8003fac <SystemInit+0x18>)
 8003f96:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8003f9a:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 8003f9e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8003fa2:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8003fa6:	609a      	str	r2, [r3, #8]
#endif
}
 8003fa8:	4770      	bx	lr
 8003faa:	bf00      	nop
 8003fac:	e000ed00 	.word	0xe000ed00

08003fb0 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8003fb0:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8003fb2:	4b0b      	ldr	r3, [pc, #44]	@ (8003fe0 <HAL_Init+0x30>)
 8003fb4:	681a      	ldr	r2, [r3, #0]
 8003fb6:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003fba:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8003fbc:	681a      	ldr	r2, [r3, #0]
 8003fbe:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8003fc2:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003fc4:	681a      	ldr	r2, [r3, #0]
 8003fc6:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003fca:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003fcc:	2003      	movs	r0, #3
 8003fce:	f000 fa45 	bl	800445c <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8003fd2:	2000      	movs	r0, #0
 8003fd4:	f7fd fed8 	bl	8001d88 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8003fd8:	f7fd fc14 	bl	8001804 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8003fdc:	2000      	movs	r0, #0
 8003fde:	bd08      	pop	{r3, pc}
 8003fe0:	40023c00 	.word	0x40023c00

08003fe4 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8003fe4:	4a03      	ldr	r2, [pc, #12]	@ (8003ff4 <HAL_IncTick+0x10>)
 8003fe6:	4b04      	ldr	r3, [pc, #16]	@ (8003ff8 <HAL_IncTick+0x14>)
 8003fe8:	6811      	ldr	r1, [r2, #0]
 8003fea:	781b      	ldrb	r3, [r3, #0]
 8003fec:	440b      	add	r3, r1
 8003fee:	6013      	str	r3, [r2, #0]
}
 8003ff0:	4770      	bx	lr
 8003ff2:	bf00      	nop
 8003ff4:	20000bd8 	.word	0x20000bd8
 8003ff8:	20000078 	.word	0x20000078

08003ffc <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8003ffc:	4b01      	ldr	r3, [pc, #4]	@ (8004004 <HAL_GetTick+0x8>)
 8003ffe:	6818      	ldr	r0, [r3, #0]
}
 8004000:	4770      	bx	lr
 8004002:	bf00      	nop
 8004004:	20000bd8 	.word	0x20000bd8

08004008 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8004008:	b538      	push	{r3, r4, r5, lr}
 800400a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800400c:	f7ff fff6 	bl	8003ffc <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8004010:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8004012:	bf1c      	itt	ne
 8004014:	4b05      	ldrne	r3, [pc, #20]	@ (800402c <HAL_Delay+0x24>)
 8004016:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8004018:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 800401a:	bf18      	it	ne
 800401c:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800401e:	f7ff ffed 	bl	8003ffc <HAL_GetTick>
 8004022:	1b43      	subs	r3, r0, r5
 8004024:	42a3      	cmp	r3, r4
 8004026:	d3fa      	bcc.n	800401e <HAL_Delay+0x16>
  {
  }
}
 8004028:	bd38      	pop	{r3, r4, r5, pc}
 800402a:	bf00      	nop
 800402c:	20000078 	.word	0x20000078

08004030 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
{
 8004030:	b538      	push	{r3, r4, r5, lr}
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;

  /* Check ADC handle */
  if (hadc == NULL)
 8004032:	4604      	mov	r4, r0
 8004034:	2800      	cmp	r0, #0
 8004036:	f000 809b 	beq.w	8004170 <HAL_ADC_Init+0x140>
  if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }

  if (hadc->State == HAL_ADC_STATE_RESET)
 800403a:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 800403c:	b925      	cbnz	r5, 8004048 <HAL_ADC_Init+0x18>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 800403e:	f7fd fc01 	bl	8001844 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8004042:	6465      	str	r5, [r4, #68]	@ 0x44

    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8004044:	f884 503c 	strb.w	r5, [r4, #60]	@ 0x3c
  }

  /* Configuration of ADC parameters if previous preliminary actions are      */
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8004048:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800404a:	06db      	lsls	r3, r3, #27
 800404c:	f100 808e 	bmi.w	800416c <HAL_ADC_Init+0x13c>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8004050:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004052:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8004056:	f023 0302 	bic.w	r3, r3, #2
 800405a:	f043 0302 	orr.w	r3, r3, #2
 800405e:	6423      	str	r3, [r4, #64]	@ 0x40
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);

  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8004060:	4b44      	ldr	r3, [pc, #272]	@ (8004174 <HAL_ADC_Init+0x144>)
 8004062:	685a      	ldr	r2, [r3, #4]
 8004064:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 8004068:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 800406a:	685a      	ldr	r2, [r3, #4]
 800406c:	6861      	ldr	r1, [r4, #4]
 800406e:	430a      	orrs	r2, r1
 8004070:	605a      	str	r2, [r3, #4]

  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8004072:	6823      	ldr	r3, [r4, #0]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8004074:	6921      	ldr	r1, [r4, #16]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8004076:	685a      	ldr	r2, [r3, #4]
 8004078:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800407c:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 800407e:	685a      	ldr	r2, [r3, #4]
 8004080:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8004084:	605a      	str	r2, [r3, #4]

  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8004086:	685a      	ldr	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8004088:	68a1      	ldr	r1, [r4, #8]
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 800408a:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 800408e:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8004090:	685a      	ldr	r2, [r3, #4]
 8004092:	430a      	orrs	r2, r1
 8004094:	605a      	str	r2, [r3, #4]

  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8004096:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8004098:	68e1      	ldr	r1, [r4, #12]
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 800409a:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800409e:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 80040a0:	689a      	ldr	r2, [r3, #8]
 80040a2:	430a      	orrs	r2, r1
 80040a4:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 80040a6:	4934      	ldr	r1, [pc, #208]	@ (8004178 <HAL_ADC_Init+0x148>)
 80040a8:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 80040aa:	428a      	cmp	r2, r1
 80040ac:	d052      	beq.n	8004154 <HAL_ADC_Init+0x124>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 80040ae:	6899      	ldr	r1, [r3, #8]
 80040b0:	f021 6170 	bic.w	r1, r1, #251658240	@ 0xf000000
 80040b4:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 80040b6:	6899      	ldr	r1, [r3, #8]
 80040b8:	430a      	orrs	r2, r1
 80040ba:	609a      	str	r2, [r3, #8]

    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 80040bc:	689a      	ldr	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 80040be:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 80040c0:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 80040c4:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 80040c6:	689a      	ldr	r2, [r3, #8]
 80040c8:	430a      	orrs	r2, r1
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 80040ca:	609a      	str	r2, [r3, #8]
  }

  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 80040cc:	689a      	ldr	r2, [r3, #8]
 80040ce:	f022 0202 	bic.w	r2, r2, #2
 80040d2:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 80040d4:	689a      	ldr	r2, [r3, #8]
 80040d6:	7e21      	ldrb	r1, [r4, #24]
 80040d8:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 80040dc:	609a      	str	r2, [r3, #8]

  if (hadc->Init.DiscontinuousConvMode != DISABLE)
 80040de:	f894 2020 	ldrb.w	r2, [r4, #32]
 80040e2:	2a00      	cmp	r2, #0
 80040e4:	d03e      	beq.n	8004164 <HAL_ADC_Init+0x134>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));

    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 80040e6:	685a      	ldr	r2, [r3, #4]

    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 80040e8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 80040ea:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80040ee:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 80040f0:	685a      	ldr	r2, [r3, #4]
 80040f2:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 80040f6:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 80040f8:	685a      	ldr	r2, [r3, #4]
 80040fa:	3901      	subs	r1, #1
 80040fc:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8004100:	605a      	str	r2, [r3, #4]
  }

  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8004102:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8004104:	69e1      	ldr	r1, [r4, #28]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8004106:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 800410a:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 800410c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800410e:	3901      	subs	r1, #1
 8004110:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
 8004114:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 8004116:	689a      	ldr	r2, [r3, #8]
 8004118:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 800411c:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 800411e:	689a      	ldr	r2, [r3, #8]
 8004120:	f894 1030 	ldrb.w	r1, [r4, #48]	@ 0x30
 8004124:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
 8004128:	609a      	str	r2, [r3, #8]

  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 800412a:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 800412c:	6961      	ldr	r1, [r4, #20]
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 800412e:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004132:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8004134:	689a      	ldr	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8004136:	2000      	movs	r0, #0
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8004138:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 800413c:	609a      	str	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 800413e:	6460      	str	r0, [r4, #68]	@ 0x44
    ADC_STATE_CLR_SET(hadc->State,
 8004140:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004142:	f023 0303 	bic.w	r3, r3, #3
 8004146:	f043 0301 	orr.w	r3, r3, #1
 800414a:	6423      	str	r3, [r4, #64]	@ 0x40
  __HAL_UNLOCK(hadc);
 800414c:	2300      	movs	r3, #0
 800414e:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
}
 8004152:	bd38      	pop	{r3, r4, r5, pc}
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8004154:	689a      	ldr	r2, [r3, #8]
 8004156:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 800415a:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800415c:	689a      	ldr	r2, [r3, #8]
 800415e:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8004162:	e7b2      	b.n	80040ca <HAL_ADC_Init+0x9a>
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8004164:	685a      	ldr	r2, [r3, #4]
 8004166:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800416a:	e7c9      	b.n	8004100 <HAL_ADC_Init+0xd0>
    tmp_hal_status = HAL_ERROR;
 800416c:	2001      	movs	r0, #1
 800416e:	e7ed      	b.n	800414c <HAL_ADC_Init+0x11c>
    return HAL_ERROR;
 8004170:	2001      	movs	r0, #1
 8004172:	e7ee      	b.n	8004152 <HAL_ADC_Init+0x122>
 8004174:	40012300 	.word	0x40012300
 8004178:	0f000001 	.word	0x0f000001

0800417c <HAL_ADC_Start>:
{
 800417c:	b082      	sub	sp, #8
  __IO uint32_t counter = 0U;
 800417e:	2300      	movs	r3, #0
 8004180:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8004182:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
 8004186:	2b01      	cmp	r3, #1
 8004188:	d069      	beq.n	800425e <HAL_ADC_Start+0xe2>
 800418a:	2301      	movs	r3, #1
 800418c:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  if ((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8004190:	6803      	ldr	r3, [r0, #0]
 8004192:	689a      	ldr	r2, [r3, #8]
 8004194:	07d2      	lsls	r2, r2, #31
 8004196:	d50b      	bpl.n	80041b0 <HAL_ADC_Start+0x34>
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8004198:	689a      	ldr	r2, [r3, #8]
 800419a:	07d1      	lsls	r1, r2, #31
 800419c:	d41a      	bmi.n	80041d4 <HAL_ADC_Start+0x58>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 800419e:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80041a0:	f043 0310 	orr.w	r3, r3, #16
 80041a4:	6403      	str	r3, [r0, #64]	@ 0x40
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 80041a6:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 80041a8:	f043 0301 	orr.w	r3, r3, #1
 80041ac:	6443      	str	r3, [r0, #68]	@ 0x44
 80041ae:	e04c      	b.n	800424a <HAL_ADC_Start+0xce>
    __HAL_ADC_ENABLE(hadc);
 80041b0:	689a      	ldr	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 80041b2:	492c      	ldr	r1, [pc, #176]	@ (8004264 <HAL_ADC_Start+0xe8>)
    __HAL_ADC_ENABLE(hadc);
 80041b4:	f042 0201 	orr.w	r2, r2, #1
 80041b8:	609a      	str	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 80041ba:	4a2b      	ldr	r2, [pc, #172]	@ (8004268 <HAL_ADC_Start+0xec>)
 80041bc:	6812      	ldr	r2, [r2, #0]
 80041be:	fbb2 f2f1 	udiv	r2, r2, r1
 80041c2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
      counter--;
 80041c6:	9201      	str	r2, [sp, #4]
    while (counter != 0U)
 80041c8:	9a01      	ldr	r2, [sp, #4]
 80041ca:	2a00      	cmp	r2, #0
 80041cc:	d0e4      	beq.n	8004198 <HAL_ADC_Start+0x1c>
      counter--;
 80041ce:	9a01      	ldr	r2, [sp, #4]
 80041d0:	3a01      	subs	r2, #1
 80041d2:	e7f8      	b.n	80041c6 <HAL_ADC_Start+0x4a>
    ADC_STATE_CLR_SET(hadc->State,
 80041d4:	6c02      	ldr	r2, [r0, #64]	@ 0x40
 80041d6:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 80041da:	f022 0201 	bic.w	r2, r2, #1
 80041de:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80041e2:	6402      	str	r2, [r0, #64]	@ 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 80041e4:	685a      	ldr	r2, [r3, #4]
 80041e6:	0552      	lsls	r2, r2, #21
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 80041e8:	bf41      	itttt	mi
 80041ea:	6c02      	ldrmi	r2, [r0, #64]	@ 0x40
 80041ec:	f422 5240 	bicmi.w	r2, r2, #12288	@ 0x3000
 80041f0:	f442 5280 	orrmi.w	r2, r2, #4096	@ 0x1000
 80041f4:	6402      	strmi	r2, [r0, #64]	@ 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 80041f6:	6c02      	ldr	r2, [r0, #64]	@ 0x40
 80041f8:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
 80041fc:	bf1c      	itt	ne
 80041fe:	6c42      	ldrne	r2, [r0, #68]	@ 0x44
 8004200:	f022 0206 	bicne.w	r2, r2, #6
      ADC_CLEAR_ERRORCODE(hadc);
 8004204:	6442      	str	r2, [r0, #68]	@ 0x44
    __HAL_UNLOCK(hadc);
 8004206:	2200      	movs	r2, #0
 8004208:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 800420c:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 8004210:	601a      	str	r2, [r3, #0]
    if (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8004212:	4a16      	ldr	r2, [pc, #88]	@ (800426c <HAL_ADC_Start+0xf0>)
 8004214:	6851      	ldr	r1, [r2, #4]
 8004216:	f011 0f1f 	tst.w	r1, #31
 800421a:	4915      	ldr	r1, [pc, #84]	@ (8004270 <HAL_ADC_Start+0xf4>)
 800421c:	d11c      	bne.n	8004258 <HAL_ADC_Start+0xdc>
      if ((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 800421e:	428b      	cmp	r3, r1
 8004220:	d007      	beq.n	8004232 <HAL_ADC_Start+0xb6>
 8004222:	f501 7180 	add.w	r1, r1, #256	@ 0x100
 8004226:	428b      	cmp	r3, r1
 8004228:	d10c      	bne.n	8004244 <HAL_ADC_Start+0xc8>
 800422a:	6852      	ldr	r2, [r2, #4]
 800422c:	f012 0f1f 	tst.w	r2, #31
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8004230:	d10b      	bne.n	800424a <HAL_ADC_Start+0xce>
      if ((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8004232:	689a      	ldr	r2, [r3, #8]
 8004234:	f012 5f40 	tst.w	r2, #805306368	@ 0x30000000
 8004238:	d107      	bne.n	800424a <HAL_ADC_Start+0xce>
        hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 800423a:	689a      	ldr	r2, [r3, #8]
 800423c:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8004240:	609a      	str	r2, [r3, #8]
 8004242:	e002      	b.n	800424a <HAL_ADC_Start+0xce>
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8004244:	490b      	ldr	r1, [pc, #44]	@ (8004274 <HAL_ADC_Start+0xf8>)
 8004246:	428b      	cmp	r3, r1
 8004248:	d002      	beq.n	8004250 <HAL_ADC_Start+0xd4>
  return HAL_OK;
 800424a:	2000      	movs	r0, #0
}
 800424c:	b002      	add	sp, #8
 800424e:	4770      	bx	lr
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8004250:	6852      	ldr	r2, [r2, #4]
 8004252:	f012 0f10 	tst.w	r2, #16
 8004256:	e7eb      	b.n	8004230 <HAL_ADC_Start+0xb4>
      if ((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8004258:	428b      	cmp	r3, r1
 800425a:	d1f6      	bne.n	800424a <HAL_ADC_Start+0xce>
 800425c:	e7e9      	b.n	8004232 <HAL_ADC_Start+0xb6>
  __HAL_LOCK(hadc);
 800425e:	2002      	movs	r0, #2
 8004260:	e7f4      	b.n	800424c <HAL_ADC_Start+0xd0>
 8004262:	bf00      	nop
 8004264:	000f4240 	.word	0x000f4240
 8004268:	20000074 	.word	0x20000074
 800426c:	40012300 	.word	0x40012300
 8004270:	40012000 	.word	0x40012000
 8004274:	40012200 	.word	0x40012200

08004278 <HAL_ADC_PollForConversion>:
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8004278:	6803      	ldr	r3, [r0, #0]
 800427a:	689a      	ldr	r2, [r3, #8]
 800427c:	0552      	lsls	r2, r2, #21
{
 800427e:	b570      	push	{r4, r5, r6, lr}
 8004280:	4604      	mov	r4, r0
 8004282:	460d      	mov	r5, r1
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8004284:	d50b      	bpl.n	800429e <HAL_ADC_PollForConversion+0x26>
      HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA))
 8004286:	689b      	ldr	r3, [r3, #8]
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8004288:	05de      	lsls	r6, r3, #23
 800428a:	d508      	bpl.n	800429e <HAL_ADC_PollForConversion+0x26>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 800428c:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800428e:	f043 0320 	orr.w	r3, r3, #32
 8004292:	6403      	str	r3, [r0, #64]	@ 0x40
    __HAL_UNLOCK(hadc);
 8004294:	2300      	movs	r3, #0
 8004296:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
    return HAL_ERROR;
 800429a:	2001      	movs	r0, #1
}
 800429c:	bd70      	pop	{r4, r5, r6, pc}
  tickstart = HAL_GetTick();
 800429e:	f7ff fead 	bl	8003ffc <HAL_GetTick>
 80042a2:	4606      	mov	r6, r0
  while (!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 80042a4:	6823      	ldr	r3, [r4, #0]
 80042a6:	681a      	ldr	r2, [r3, #0]
 80042a8:	0791      	lsls	r1, r2, #30
 80042aa:	d50c      	bpl.n	80042c6 <HAL_ADC_PollForConversion+0x4e>
  __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 80042ac:	f06f 0212 	mvn.w	r2, #18
 80042b0:	601a      	str	r2, [r3, #0]
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 80042b2:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 80042b4:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80042b8:	6422      	str	r2, [r4, #64]	@ 0x40
  if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 80042ba:	689a      	ldr	r2, [r3, #8]
 80042bc:	f012 5f40 	tst.w	r2, #805306368	@ 0x30000000
 80042c0:	d017      	beq.n	80042f2 <HAL_ADC_PollForConversion+0x7a>
  return HAL_OK;
 80042c2:	2000      	movs	r0, #0
 80042c4:	e7ea      	b.n	800429c <HAL_ADC_PollForConversion+0x24>
    if (Timeout != HAL_MAX_DELAY)
 80042c6:	1c68      	adds	r0, r5, #1
 80042c8:	d0ed      	beq.n	80042a6 <HAL_ADC_PollForConversion+0x2e>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 80042ca:	b965      	cbnz	r5, 80042e6 <HAL_ADC_PollForConversion+0x6e>
        if (!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 80042cc:	6823      	ldr	r3, [r4, #0]
 80042ce:	681b      	ldr	r3, [r3, #0]
 80042d0:	f013 0302 	ands.w	r3, r3, #2
 80042d4:	d1e6      	bne.n	80042a4 <HAL_ADC_PollForConversion+0x2c>
          SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 80042d6:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hadc);
 80042d8:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 80042dc:	f042 0204 	orr.w	r2, r2, #4
 80042e0:	6422      	str	r2, [r4, #64]	@ 0x40
          return HAL_TIMEOUT;
 80042e2:	2003      	movs	r0, #3
 80042e4:	e7da      	b.n	800429c <HAL_ADC_PollForConversion+0x24>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 80042e6:	f7ff fe89 	bl	8003ffc <HAL_GetTick>
 80042ea:	1b80      	subs	r0, r0, r6
 80042ec:	42a8      	cmp	r0, r5
 80042ee:	d8ed      	bhi.n	80042cc <HAL_ADC_PollForConversion+0x54>
 80042f0:	e7d8      	b.n	80042a4 <HAL_ADC_PollForConversion+0x2c>
  if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 80042f2:	7e22      	ldrb	r2, [r4, #24]
 80042f4:	2a00      	cmp	r2, #0
 80042f6:	d1e4      	bne.n	80042c2 <HAL_ADC_PollForConversion+0x4a>
      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 80042f8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 80042fa:	f412 0f70 	tst.w	r2, #15728640	@ 0xf00000
 80042fe:	d002      	beq.n	8004306 <HAL_ADC_PollForConversion+0x8e>
       HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)))
 8004300:	689b      	ldr	r3, [r3, #8]
      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8004302:	055a      	lsls	r2, r3, #21
 8004304:	d4dd      	bmi.n	80042c2 <HAL_ADC_PollForConversion+0x4a>
    CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 8004306:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004308:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800430c:	6423      	str	r3, [r4, #64]	@ 0x40
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 800430e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004310:	04db      	lsls	r3, r3, #19
 8004312:	d4d6      	bmi.n	80042c2 <HAL_ADC_PollForConversion+0x4a>
      SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 8004314:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004316:	f043 0301 	orr.w	r3, r3, #1
 800431a:	6423      	str	r3, [r4, #64]	@ 0x40
 800431c:	e7d1      	b.n	80042c2 <HAL_ADC_PollForConversion+0x4a>

0800431e <HAL_ADC_GetValue>:
  return hadc->Instance->DR;
 800431e:	6803      	ldr	r3, [r0, #0]
 8004320:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
}
 8004322:	4770      	bx	lr

08004324 <HAL_ADC_ConfigChannel>:
{
 8004324:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t counter = 0U;
 8004326:	2300      	movs	r3, #0
 8004328:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 800432a:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
 800432e:	2b01      	cmp	r3, #1
{
 8004330:	4605      	mov	r5, r0
  __HAL_LOCK(hadc);
 8004332:	f000 8086 	beq.w	8004442 <HAL_ADC_ConfigChannel+0x11e>
 8004336:	2301      	movs	r3, #1
 8004338:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  if (sConfig->Channel > ADC_CHANNEL_9)
 800433c:	6808      	ldr	r0, [r1, #0]
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 800433e:	682b      	ldr	r3, [r5, #0]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8004340:	688e      	ldr	r6, [r1, #8]
  if (sConfig->Channel > ADC_CHANNEL_9)
 8004342:	2809      	cmp	r0, #9
 8004344:	b284      	uxth	r4, r0
 8004346:	d933      	bls.n	80043b0 <HAL_ADC_ConfigChannel+0x8c>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8004348:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 800434c:	68df      	ldr	r7, [r3, #12]
 800434e:	3a1e      	subs	r2, #30
 8004350:	f04f 0c07 	mov.w	ip, #7
 8004354:	fa0c fc02 	lsl.w	ip, ip, r2
 8004358:	ea27 070c 	bic.w	r7, r7, ip
 800435c:	60df      	str	r7, [r3, #12]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 800435e:	68df      	ldr	r7, [r3, #12]
 8004360:	fa06 f202 	lsl.w	r2, r6, r2
 8004364:	433a      	orrs	r2, r7
 8004366:	60da      	str	r2, [r3, #12]
  if (sConfig->Rank < 7U)
 8004368:	6849      	ldr	r1, [r1, #4]
 800436a:	2906      	cmp	r1, #6
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 800436c:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  if (sConfig->Rank < 7U)
 8004370:	d82d      	bhi.n	80043ce <HAL_ADC_ConfigChannel+0xaa>
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8004372:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8004374:	3a05      	subs	r2, #5
 8004376:	261f      	movs	r6, #31
 8004378:	4096      	lsls	r6, r2
 800437a:	ea21 0106 	bic.w	r1, r1, r6
 800437e:	6359      	str	r1, [r3, #52]	@ 0x34
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 8004380:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8004382:	fa04 f202 	lsl.w	r2, r4, r2
 8004386:	430a      	orrs	r2, r1
 8004388:	635a      	str	r2, [r3, #52]	@ 0x34
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 800438a:	4a2f      	ldr	r2, [pc, #188]	@ (8004448 <HAL_ADC_ConfigChannel+0x124>)
 800438c:	4293      	cmp	r3, r2
 800438e:	d10a      	bne.n	80043a6 <HAL_ADC_ConfigChannel+0x82>
 8004390:	2812      	cmp	r0, #18
 8004392:	d137      	bne.n	8004404 <HAL_ADC_ConfigChannel+0xe0>
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 8004394:	4b2d      	ldr	r3, [pc, #180]	@ (800444c <HAL_ADC_ConfigChannel+0x128>)
 8004396:	685a      	ldr	r2, [r3, #4]
 8004398:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 800439c:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 800439e:	685a      	ldr	r2, [r3, #4]
 80043a0:	f442 0280 	orr.w	r2, r2, #4194304	@ 0x400000
 80043a4:	605a      	str	r2, [r3, #4]
  __HAL_UNLOCK(hadc);
 80043a6:	2000      	movs	r0, #0
 80043a8:	f885 003c 	strb.w	r0, [r5, #60]	@ 0x3c
}
 80043ac:	b003      	add	sp, #12
 80043ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 80043b0:	691a      	ldr	r2, [r3, #16]
 80043b2:	eb00 0c40 	add.w	ip, r0, r0, lsl #1
 80043b6:	2707      	movs	r7, #7
 80043b8:	fa07 f70c 	lsl.w	r7, r7, ip
 80043bc:	ea22 0207 	bic.w	r2, r2, r7
 80043c0:	611a      	str	r2, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 80043c2:	691a      	ldr	r2, [r3, #16]
 80043c4:	fa06 f60c 	lsl.w	r6, r6, ip
 80043c8:	4316      	orrs	r6, r2
 80043ca:	611e      	str	r6, [r3, #16]
 80043cc:	e7cc      	b.n	8004368 <HAL_ADC_ConfigChannel+0x44>
  else if (sConfig->Rank < 13U)
 80043ce:	290c      	cmp	r1, #12
 80043d0:	f04f 011f 	mov.w	r1, #31
 80043d4:	d80b      	bhi.n	80043ee <HAL_ADC_ConfigChannel+0xca>
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 80043d6:	6b1e      	ldr	r6, [r3, #48]	@ 0x30
 80043d8:	3a23      	subs	r2, #35	@ 0x23
 80043da:	4091      	lsls	r1, r2
 80043dc:	ea26 0101 	bic.w	r1, r6, r1
 80043e0:	6319      	str	r1, [r3, #48]	@ 0x30
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 80043e2:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 80043e4:	fa04 f202 	lsl.w	r2, r4, r2
 80043e8:	430a      	orrs	r2, r1
 80043ea:	631a      	str	r2, [r3, #48]	@ 0x30
 80043ec:	e7cd      	b.n	800438a <HAL_ADC_ConfigChannel+0x66>
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 80043ee:	6ade      	ldr	r6, [r3, #44]	@ 0x2c
 80043f0:	3a41      	subs	r2, #65	@ 0x41
 80043f2:	4091      	lsls	r1, r2
 80043f4:	ea26 0101 	bic.w	r1, r6, r1
 80043f8:	62d9      	str	r1, [r3, #44]	@ 0x2c
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 80043fa:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 80043fc:	4094      	lsls	r4, r2
 80043fe:	430c      	orrs	r4, r1
 8004400:	62dc      	str	r4, [r3, #44]	@ 0x2c
 8004402:	e7c2      	b.n	800438a <HAL_ADC_ConfigChannel+0x66>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 8004404:	4b12      	ldr	r3, [pc, #72]	@ (8004450 <HAL_ADC_ConfigChannel+0x12c>)
 8004406:	4298      	cmp	r0, r3
 8004408:	d001      	beq.n	800440e <HAL_ADC_ConfigChannel+0xea>
 800440a:	2811      	cmp	r0, #17
 800440c:	d1cb      	bne.n	80043a6 <HAL_ADC_ConfigChannel+0x82>
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 800440e:	4b0f      	ldr	r3, [pc, #60]	@ (800444c <HAL_ADC_ConfigChannel+0x128>)
 8004410:	685a      	ldr	r2, [r3, #4]
 8004412:	f422 0280 	bic.w	r2, r2, #4194304	@ 0x400000
 8004416:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 8004418:	685a      	ldr	r2, [r3, #4]
 800441a:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 800441e:	605a      	str	r2, [r3, #4]
    if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 8004420:	4b0b      	ldr	r3, [pc, #44]	@ (8004450 <HAL_ADC_ConfigChannel+0x12c>)
 8004422:	4298      	cmp	r0, r3
 8004424:	d1bf      	bne.n	80043a6 <HAL_ADC_ConfigChannel+0x82>
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 8004426:	4b0b      	ldr	r3, [pc, #44]	@ (8004454 <HAL_ADC_ConfigChannel+0x130>)
 8004428:	4a0b      	ldr	r2, [pc, #44]	@ (8004458 <HAL_ADC_ConfigChannel+0x134>)
 800442a:	681b      	ldr	r3, [r3, #0]
 800442c:	fbb3 f3f2 	udiv	r3, r3, r2
 8004430:	220a      	movs	r2, #10
 8004432:	4353      	muls	r3, r2
        counter--;
 8004434:	9301      	str	r3, [sp, #4]
      while (counter != 0U)
 8004436:	9b01      	ldr	r3, [sp, #4]
 8004438:	2b00      	cmp	r3, #0
 800443a:	d0b4      	beq.n	80043a6 <HAL_ADC_ConfigChannel+0x82>
        counter--;
 800443c:	9b01      	ldr	r3, [sp, #4]
 800443e:	3b01      	subs	r3, #1
 8004440:	e7f8      	b.n	8004434 <HAL_ADC_ConfigChannel+0x110>
  __HAL_LOCK(hadc);
 8004442:	2002      	movs	r0, #2
 8004444:	e7b2      	b.n	80043ac <HAL_ADC_ConfigChannel+0x88>
 8004446:	bf00      	nop
 8004448:	40012000 	.word	0x40012000
 800444c:	40012300 	.word	0x40012300
 8004450:	10000012 	.word	0x10000012
 8004454:	20000074 	.word	0x20000074
 8004458:	000f4240 	.word	0x000f4240

0800445c <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800445c:	4907      	ldr	r1, [pc, #28]	@ (800447c <HAL_NVIC_SetPriorityGrouping+0x20>)
 800445e:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004460:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004464:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004466:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004468:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800446c:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800446e:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8004470:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8004474:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 8004478:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800447a:	4770      	bx	lr
 800447c:	e000ed00 	.word	0xe000ed00

08004480 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8004480:	4b16      	ldr	r3, [pc, #88]	@ (80044dc <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8004482:	b530      	push	{r4, r5, lr}
 8004484:	68dc      	ldr	r4, [r3, #12]
 8004486:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800448a:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800448e:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004490:	2b04      	cmp	r3, #4
 8004492:	bf28      	it	cs
 8004494:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004496:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004498:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800449c:	bf8c      	ite	hi
 800449e:	3c03      	subhi	r4, #3
 80044a0:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80044a2:	fa05 f303 	lsl.w	r3, r5, r3
 80044a6:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80044aa:	40a5      	lsls	r5, r4
 80044ac:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80044b0:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 80044b2:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80044b4:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80044b8:	bfac      	ite	ge
 80044ba:	f100 4060 	addge.w	r0, r0, #3758096384	@ 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80044be:	4a08      	ldrlt	r2, [pc, #32]	@ (80044e0 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80044c0:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80044c4:	bfb8      	it	lt
 80044c6:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80044ca:	b2db      	uxtb	r3, r3
 80044cc:	bfaa      	itet	ge
 80044ce:	f500 4061 	addge.w	r0, r0, #57600	@ 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80044d2:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80044d4:	f880 3300 	strbge.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 80044d8:	bd30      	pop	{r4, r5, pc}
 80044da:	bf00      	nop
 80044dc:	e000ed00 	.word	0xe000ed00
 80044e0:	e000ed14 	.word	0xe000ed14

080044e4 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80044e4:	2800      	cmp	r0, #0
 80044e6:	db07      	blt.n	80044f8 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80044e8:	4a04      	ldr	r2, [pc, #16]	@ (80044fc <HAL_NVIC_EnableIRQ+0x18>)
 80044ea:	0941      	lsrs	r1, r0, #5
 80044ec:	2301      	movs	r3, #1
 80044ee:	f000 001f 	and.w	r0, r0, #31
 80044f2:	4083      	lsls	r3, r0
 80044f4:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 80044f8:	4770      	bx	lr
 80044fa:	bf00      	nop
 80044fc:	e000e100 	.word	0xe000e100

08004500 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8004500:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8004502:	4604      	mov	r4, r0
 8004504:	b150      	cbz	r0, 800451c <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8004506:	7943      	ldrb	r3, [r0, #5]
 8004508:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800450c:	b913      	cbnz	r3, 8004514 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 800450e:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8004510:	f7fd f9f0 	bl	80018f4 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8004514:	2301      	movs	r3, #1
 8004516:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8004518:	2000      	movs	r0, #0
}
 800451a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800451c:	2001      	movs	r0, #1
 800451e:	e7fc      	b.n	800451a <HAL_CRC_Init+0x1a>

08004520 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8004520:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8004522:	4604      	mov	r4, r0
 8004524:	b330      	cbz	r0, 8004574 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8004526:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 800452a:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800452e:	b91b      	cbnz	r3, 8004538 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8004530:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8004534:	f7fd f9f6 	bl	8001924 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004538:	6822      	ldr	r2, [r4, #0]
 800453a:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800453c:	2302      	movs	r3, #2
 800453e:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004542:	6813      	ldr	r3, [r2, #0]
 8004544:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 8004548:	430b      	orrs	r3, r1
 800454a:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 800454c:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 800454e:	68a1      	ldr	r1, [r4, #8]
 8004550:	f023 0307 	bic.w	r3, r3, #7
 8004554:	430b      	orrs	r3, r1
 8004556:	6353      	str	r3, [r2, #52]	@ 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8004558:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 800455a:	68e1      	ldr	r1, [r4, #12]
 800455c:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 8004560:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8004564:	430b      	orrs	r3, r1
 8004566:	6413      	str	r3, [r2, #64]	@ 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004568:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800456a:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800456c:	63e0      	str	r0, [r4, #60]	@ 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800456e:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  return HAL_OK;
}
 8004572:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004574:	2001      	movs	r0, #1
 8004576:	e7fc      	b.n	8004572 <HAL_DMA2D_Init+0x52>

08004578 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 8004578:	4770      	bx	lr

0800457a <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 800457a:	4770      	bx	lr

0800457c <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800457c:	6803      	ldr	r3, [r0, #0]
{
 800457e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004580:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8004582:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004584:	07f2      	lsls	r2, r6, #31
{
 8004586:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004588:	d514      	bpl.n	80045b4 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 800458a:	05e9      	lsls	r1, r5, #23
 800458c:	d512      	bpl.n	80045b4 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 800458e:	681a      	ldr	r2, [r3, #0]
 8004590:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8004594:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8004596:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8004598:	f042 0201 	orr.w	r2, r2, #1
 800459c:	63c2      	str	r2, [r0, #60]	@ 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800459e:	2201      	movs	r2, #1
 80045a0:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80045a2:	2304      	movs	r3, #4
 80045a4:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80045a8:	2300      	movs	r3, #0
 80045aa:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 80045ae:	6943      	ldr	r3, [r0, #20]
 80045b0:	b103      	cbz	r3, 80045b4 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 80045b2:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80045b4:	06b2      	lsls	r2, r6, #26
 80045b6:	d516      	bpl.n	80045e6 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 80045b8:	04ab      	lsls	r3, r5, #18
 80045ba:	d514      	bpl.n	80045e6 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80045bc:	6823      	ldr	r3, [r4, #0]
 80045be:	681a      	ldr	r2, [r3, #0]
 80045c0:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80045c4:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80045c6:	2220      	movs	r2, #32
 80045c8:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80045ca:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80045cc:	f043 0302 	orr.w	r3, r3, #2
 80045d0:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80045d2:	2304      	movs	r3, #4
 80045d4:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80045d8:	2300      	movs	r3, #0
 80045da:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 80045de:	6963      	ldr	r3, [r4, #20]
 80045e0:	b10b      	cbz	r3, 80045e6 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 80045e2:	4620      	mov	r0, r4
 80045e4:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 80045e6:	0730      	lsls	r0, r6, #28
 80045e8:	d516      	bpl.n	8004618 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 80045ea:	0529      	lsls	r1, r5, #20
 80045ec:	d514      	bpl.n	8004618 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 80045ee:	6823      	ldr	r3, [r4, #0]
 80045f0:	681a      	ldr	r2, [r3, #0]
 80045f2:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80045f6:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 80045f8:	2208      	movs	r2, #8
 80045fa:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 80045fc:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80045fe:	f043 0304 	orr.w	r3, r3, #4
 8004602:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004604:	2304      	movs	r3, #4
 8004606:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 800460a:	2300      	movs	r3, #0
 800460c:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8004610:	6963      	ldr	r3, [r4, #20]
 8004612:	b10b      	cbz	r3, 8004618 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8004614:	4620      	mov	r0, r4
 8004616:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8004618:	0772      	lsls	r2, r6, #29
 800461a:	d50b      	bpl.n	8004634 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 800461c:	056b      	lsls	r3, r5, #21
 800461e:	d509      	bpl.n	8004634 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004620:	6823      	ldr	r3, [r4, #0]
 8004622:	681a      	ldr	r2, [r3, #0]
 8004624:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004628:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800462a:	2204      	movs	r2, #4
 800462c:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 800462e:	4620      	mov	r0, r4
 8004630:	f7ff ffa2 	bl	8004578 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8004634:	07b0      	lsls	r0, r6, #30
 8004636:	d514      	bpl.n	8004662 <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 8004638:	05a9      	lsls	r1, r5, #22
 800463a:	d512      	bpl.n	8004662 <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800463c:	6823      	ldr	r3, [r4, #0]
 800463e:	681a      	ldr	r2, [r3, #0]
 8004640:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8004644:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8004646:	2202      	movs	r2, #2
 8004648:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800464a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800464c:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800464e:	2301      	movs	r3, #1
 8004650:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004654:	2300      	movs	r3, #0
 8004656:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferCpltCallback != NULL)
 800465a:	6923      	ldr	r3, [r4, #16]
 800465c:	b10b      	cbz	r3, 8004662 <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 800465e:	4620      	mov	r0, r4
 8004660:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8004662:	06f2      	lsls	r2, r6, #27
 8004664:	d513      	bpl.n	800468e <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8004666:	04eb      	lsls	r3, r5, #19
 8004668:	d511      	bpl.n	800468e <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 800466a:	6823      	ldr	r3, [r4, #0]
 800466c:	681a      	ldr	r2, [r3, #0]
 800466e:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8004672:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8004674:	2210      	movs	r2, #16
 8004676:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004678:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800467a:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800467c:	2301      	movs	r3, #1
 800467e:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004682:	2300      	movs	r3, #0
 8004684:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004688:	4620      	mov	r0, r4
 800468a:	f7ff ff76 	bl	800457a <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 800468e:	bd70      	pop	{r4, r5, r6, pc}

08004690 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8004690:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8004692:	f890 2038 	ldrb.w	r2, [r0, #56]	@ 0x38
 8004696:	2a01      	cmp	r2, #1
{
 8004698:	4603      	mov	r3, r0
 800469a:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hdma2d);
 800469e:	d02b      	beq.n	80046f8 <HAL_DMA2D_ConfigLayer+0x68>
 80046a0:	2201      	movs	r2, #1
 80046a2:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80046a6:	f883 0039 	strb.w	r0, [r3, #57]	@ 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80046aa:	eb03 1201 	add.w	r2, r3, r1, lsl #4
 80046ae:	e9d2 4007 	ldrd	r4, r0, [r2, #28]
 80046b2:	6a55      	ldr	r5, [r2, #36]	@ 0x24
 80046b4:	4f17      	ldr	r7, [pc, #92]	@ (8004714 <HAL_DMA2D_ConfigLayer+0x84>)
 80046b6:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80046ba:	3c09      	subs	r4, #9
 80046bc:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80046be:	bf9c      	itt	ls
 80046c0:	f005 427f 	andls.w	r2, r5, #4278190080	@ 0xff000000
 80046c4:	4310      	orrls	r0, r2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80046c6:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80046ca:	681a      	ldr	r2, [r3, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 80046cc:	bf88      	it	hi
 80046ce:	ea40 6005 	orrhi.w	r0, r0, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 80046d2:	b991      	cbnz	r1, 80046fa <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80046d4:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 80046d6:	4039      	ands	r1, r7
 80046d8:	4301      	orrs	r1, r0
 80046da:	6251      	str	r1, [r2, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80046dc:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80046de:	6999      	ldr	r1, [r3, #24]
 80046e0:	6191      	str	r1, [r2, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80046e2:	d803      	bhi.n	80046ec <HAL_DMA2D_ConfigLayer+0x5c>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 80046e4:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 80046e6:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 80046ea:	6291      	str	r1, [r2, #40]	@ 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80046ec:	2201      	movs	r2, #1

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 80046ee:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80046f0:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
  __HAL_UNLOCK(hdma2d);
 80046f4:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38

  return HAL_OK;
}
 80046f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80046fa:	69d1      	ldr	r1, [r2, #28]
 80046fc:	4039      	ands	r1, r7
 80046fe:	4301      	orrs	r1, r0
 8004700:	61d1      	str	r1, [r2, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004702:	1999      	adds	r1, r3, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004704:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004706:	6989      	ldr	r1, [r1, #24]
 8004708:	6111      	str	r1, [r2, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 800470a:	bf9c      	itt	ls
 800470c:	f025 457f 	bicls.w	r5, r5, #4278190080	@ 0xff000000
 8004710:	6215      	strls	r5, [r2, #32]
 8004712:	e7eb      	b.n	80046ec <HAL_DMA2D_ConfigLayer+0x5c>
 8004714:	00fcfff0 	.word	0x00fcfff0

08004718 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8004718:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800471c:	f8df 91bc 	ldr.w	r9, [pc, #444]	@ 80048dc <HAL_GPIO_Init+0x1c4>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8004720:	4a6c      	ldr	r2, [pc, #432]	@ (80048d4 <HAL_GPIO_Init+0x1bc>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004722:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004724:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8004726:	2401      	movs	r4, #1
 8004728:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800472a:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 800472e:	43ac      	bics	r4, r5
 8004730:	f040 80b7 	bne.w	80048a2 <HAL_GPIO_Init+0x18a>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004734:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004736:	2703      	movs	r7, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004738:	f005 0403 	and.w	r4, r5, #3
 800473c:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004740:	fa07 fc08 	lsl.w	ip, r7, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004744:	1e67      	subs	r7, r4, #1
 8004746:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004748:	ea6f 0c0c 	mvn.w	ip, ip
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800474c:	d834      	bhi.n	80047b8 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 800474e:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004750:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2U));
 8004754:	68cf      	ldr	r7, [r1, #12]
 8004756:	fa07 f708 	lsl.w	r7, r7, r8
 800475a:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800475e:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8004760:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004762:	ea27 0e06 	bic.w	lr, r7, r6
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8004766:	f3c5 1700 	ubfx	r7, r5, #4, #1
 800476a:	409f      	lsls	r7, r3
 800476c:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 8004770:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8004772:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8004774:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8004778:	688f      	ldr	r7, [r1, #8]
 800477a:	fa07 f708 	lsl.w	r7, r7, r8
 800477e:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004782:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 8004784:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004786:	d119      	bne.n	80047bc <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 8004788:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 800478c:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004790:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8004794:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004798:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 800479c:	f04f 0e0f 	mov.w	lr, #15
 80047a0:	fa0e fe0b 	lsl.w	lr, lr, fp
 80047a4:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80047a8:	690f      	ldr	r7, [r1, #16]
 80047aa:	fa07 f70b 	lsl.w	r7, r7, fp
 80047ae:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 80047b2:	f8ca 7020 	str.w	r7, [sl, #32]
 80047b6:	e001      	b.n	80047bc <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80047b8:	2c03      	cmp	r4, #3
 80047ba:	d1da      	bne.n	8004772 <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 80047bc:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80047be:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80047c2:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80047c6:	433c      	orrs	r4, r7
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80047c8:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      GPIOx->MODER = temp;
 80047cc:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80047ce:	d068      	beq.n	80048a2 <HAL_GPIO_Init+0x18a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80047d0:	2400      	movs	r4, #0
 80047d2:	9401      	str	r4, [sp, #4]
 80047d4:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 80047d8:	f444 4480 	orr.w	r4, r4, #16384	@ 0x4000
 80047dc:	f8c9 4044 	str.w	r4, [r9, #68]	@ 0x44
 80047e0:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 80047e4:	f023 0703 	bic.w	r7, r3, #3
 80047e8:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 80047ec:	f404 4480 	and.w	r4, r4, #16384	@ 0x4000
 80047f0:	f507 379c 	add.w	r7, r7, #79872	@ 0x13800
 80047f4:	9401      	str	r4, [sp, #4]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80047f6:	f003 0c03 	and.w	ip, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80047fa:	9c01      	ldr	r4, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 80047fc:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004800:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8004804:	240f      	movs	r4, #15
 8004806:	fa04 f40c 	lsl.w	r4, r4, ip
 800480a:	ea2e 0e04 	bic.w	lr, lr, r4
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800480e:	4c32      	ldr	r4, [pc, #200]	@ (80048d8 <HAL_GPIO_Init+0x1c0>)
 8004810:	42a0      	cmp	r0, r4
 8004812:	d04d      	beq.n	80048b0 <HAL_GPIO_Init+0x198>
 8004814:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004818:	42a0      	cmp	r0, r4
 800481a:	d04b      	beq.n	80048b4 <HAL_GPIO_Init+0x19c>
 800481c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004820:	42a0      	cmp	r0, r4
 8004822:	d049      	beq.n	80048b8 <HAL_GPIO_Init+0x1a0>
 8004824:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004828:	42a0      	cmp	r0, r4
 800482a:	d047      	beq.n	80048bc <HAL_GPIO_Init+0x1a4>
 800482c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004830:	42a0      	cmp	r0, r4
 8004832:	d045      	beq.n	80048c0 <HAL_GPIO_Init+0x1a8>
 8004834:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004838:	42a0      	cmp	r0, r4
 800483a:	d043      	beq.n	80048c4 <HAL_GPIO_Init+0x1ac>
 800483c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004840:	42a0      	cmp	r0, r4
 8004842:	d041      	beq.n	80048c8 <HAL_GPIO_Init+0x1b0>
 8004844:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004848:	42a0      	cmp	r0, r4
 800484a:	d03f      	beq.n	80048cc <HAL_GPIO_Init+0x1b4>
 800484c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004850:	42a0      	cmp	r0, r4
 8004852:	d03d      	beq.n	80048d0 <HAL_GPIO_Init+0x1b8>
 8004854:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004858:	42a0      	cmp	r0, r4
 800485a:	bf14      	ite	ne
 800485c:	240a      	movne	r4, #10
 800485e:	2409      	moveq	r4, #9
 8004860:	fa04 f40c 	lsl.w	r4, r4, ip
 8004864:	ea44 040e 	orr.w	r4, r4, lr
        SYSCFG->EXTICR[position >> 2U] = temp;
 8004868:	60bc      	str	r4, [r7, #8]
        temp = EXTI->RTSR;
 800486a:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 800486c:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800486e:	f415 1f80 	tst.w	r5, #1048576	@ 0x100000
        temp &= ~((uint32_t)iocurrent);
 8004872:	bf0c      	ite	eq
 8004874:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8004876:	4334      	orrne	r4, r6
        }
        EXTI->RTSR = temp;
 8004878:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 800487a:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800487c:	f415 1f00 	tst.w	r5, #2097152	@ 0x200000
        temp &= ~((uint32_t)iocurrent);
 8004880:	bf0c      	ite	eq
 8004882:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8004884:	4334      	orrne	r4, r6
        }
        EXTI->FTSR = temp;
 8004886:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 8004888:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800488a:	f415 3f00 	tst.w	r5, #131072	@ 0x20000
        temp &= ~((uint32_t)iocurrent);
 800488e:	bf0c      	ite	eq
 8004890:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8004892:	4334      	orrne	r4, r6
        }
        EXTI->EMR = temp;
 8004894:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8004896:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8004898:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 800489a:	bf54      	ite	pl
 800489c:	403c      	andpl	r4, r7
        {
          temp |= iocurrent;
 800489e:	4334      	orrmi	r4, r6
        }
        EXTI->IMR = temp;
 80048a0:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80048a2:	3301      	adds	r3, #1
 80048a4:	2b10      	cmp	r3, #16
 80048a6:	f47f af3d 	bne.w	8004724 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 80048aa:	b003      	add	sp, #12
 80048ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80048b0:	2400      	movs	r4, #0
 80048b2:	e7d5      	b.n	8004860 <HAL_GPIO_Init+0x148>
 80048b4:	2401      	movs	r4, #1
 80048b6:	e7d3      	b.n	8004860 <HAL_GPIO_Init+0x148>
 80048b8:	2402      	movs	r4, #2
 80048ba:	e7d1      	b.n	8004860 <HAL_GPIO_Init+0x148>
 80048bc:	2403      	movs	r4, #3
 80048be:	e7cf      	b.n	8004860 <HAL_GPIO_Init+0x148>
 80048c0:	2404      	movs	r4, #4
 80048c2:	e7cd      	b.n	8004860 <HAL_GPIO_Init+0x148>
 80048c4:	2405      	movs	r4, #5
 80048c6:	e7cb      	b.n	8004860 <HAL_GPIO_Init+0x148>
 80048c8:	2406      	movs	r4, #6
 80048ca:	e7c9      	b.n	8004860 <HAL_GPIO_Init+0x148>
 80048cc:	2407      	movs	r4, #7
 80048ce:	e7c7      	b.n	8004860 <HAL_GPIO_Init+0x148>
 80048d0:	2408      	movs	r4, #8
 80048d2:	e7c5      	b.n	8004860 <HAL_GPIO_Init+0x148>
 80048d4:	40013c00 	.word	0x40013c00
 80048d8:	40020000 	.word	0x40020000
 80048dc:	40023800 	.word	0x40023800

080048e0 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 80048e0:	6903      	ldr	r3, [r0, #16]
 80048e2:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 80048e4:	bf14      	ite	ne
 80048e6:	2001      	movne	r0, #1
 80048e8:	2000      	moveq	r0, #0
 80048ea:	4770      	bx	lr

080048ec <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80048ec:	b10a      	cbz	r2, 80048f2 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80048ee:	6181      	str	r1, [r0, #24]
  }
}
 80048f0:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80048f2:	0409      	lsls	r1, r1, #16
 80048f4:	e7fb      	b.n	80048ee <HAL_GPIO_WritePin+0x2>

080048f6 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 80048f6:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 80048f8:	ea01 0203 	and.w	r2, r1, r3
 80048fc:	ea21 0103 	bic.w	r1, r1, r3
 8004900:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8004904:	6181      	str	r1, [r0, #24]
}
 8004906:	4770      	bx	lr

08004908 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004908:	6801      	ldr	r1, [r0, #0]
 800490a:	694b      	ldr	r3, [r1, #20]
 800490c:	f413 6380 	ands.w	r3, r3, #1024	@ 0x400
 8004910:	f04f 0200 	mov.w	r2, #0
 8004914:	d010      	beq.n	8004938 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004916:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 800491a:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 800491c:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 800491e:	6302      	str	r2, [r0, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8004920:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004924:	f880 203e 	strb.w	r2, [r0, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004928:	6c03      	ldr	r3, [r0, #64]	@ 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800492a:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800492e:	f043 0304 	orr.w	r3, r3, #4
 8004932:	6403      	str	r3, [r0, #64]	@ 0x40

    return HAL_ERROR;
 8004934:	2001      	movs	r0, #1
 8004936:	4770      	bx	lr
  }
  return HAL_OK;
 8004938:	4618      	mov	r0, r3
}
 800493a:	4770      	bx	lr

0800493c <I2C_WaitOnFlagUntilTimeout>:
{
 800493c:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8004940:	4606      	mov	r6, r0
 8004942:	460f      	mov	r7, r1
 8004944:	4691      	mov	r9, r2
 8004946:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004948:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800494c:	6833      	ldr	r3, [r6, #0]
 800494e:	f1ba 0f01 	cmp.w	sl, #1
 8004952:	bf0c      	ite	eq
 8004954:	695c      	ldreq	r4, [r3, #20]
 8004956:	699c      	ldrne	r4, [r3, #24]
 8004958:	ea27 0404 	bic.w	r4, r7, r4
 800495c:	b2a4      	uxth	r4, r4
 800495e:	fab4 f484 	clz	r4, r4
 8004962:	0964      	lsrs	r4, r4, #5
 8004964:	45a1      	cmp	r9, r4
 8004966:	d001      	beq.n	800496c <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8004968:	2000      	movs	r0, #0
 800496a:	e025      	b.n	80049b8 <I2C_WaitOnFlagUntilTimeout+0x7c>
    if (Timeout != HAL_MAX_DELAY)
 800496c:	1c6a      	adds	r2, r5, #1
 800496e:	d0ee      	beq.n	800494e <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004970:	f7ff fb44 	bl	8003ffc <HAL_GetTick>
 8004974:	9b08      	ldr	r3, [sp, #32]
 8004976:	1ac0      	subs	r0, r0, r3
 8004978:	42a8      	cmp	r0, r5
 800497a:	d801      	bhi.n	8004980 <I2C_WaitOnFlagUntilTimeout+0x44>
 800497c:	2d00      	cmp	r5, #0
 800497e:	d1e5      	bne.n	800494c <I2C_WaitOnFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8004980:	6833      	ldr	r3, [r6, #0]
 8004982:	f1ba 0f01 	cmp.w	sl, #1
 8004986:	bf0c      	ite	eq
 8004988:	695b      	ldreq	r3, [r3, #20]
 800498a:	699b      	ldrne	r3, [r3, #24]
 800498c:	ea27 0303 	bic.w	r3, r7, r3
 8004990:	b29b      	uxth	r3, r3
 8004992:	fab3 f383 	clz	r3, r3
 8004996:	095b      	lsrs	r3, r3, #5
 8004998:	4599      	cmp	r9, r3
 800499a:	d1d7      	bne.n	800494c <I2C_WaitOnFlagUntilTimeout+0x10>
          hi2c->PreviousState     = I2C_STATE_NONE;
 800499c:	2300      	movs	r3, #0
          hi2c->State             = HAL_I2C_STATE_READY;
 800499e:	2220      	movs	r2, #32
          hi2c->PreviousState     = I2C_STATE_NONE;
 80049a0:	6333      	str	r3, [r6, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 80049a2:	f886 203d 	strb.w	r2, [r6, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 80049a6:	f886 303e 	strb.w	r3, [r6, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80049aa:	6c32      	ldr	r2, [r6, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 80049ac:	f886 303c 	strb.w	r3, [r6, #60]	@ 0x3c
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80049b0:	f042 0220 	orr.w	r2, r2, #32
 80049b4:	6432      	str	r2, [r6, #64]	@ 0x40
          return HAL_ERROR;
 80049b6:	2001      	movs	r0, #1
}
 80049b8:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

080049bc <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 80049bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80049c0:	4604      	mov	r4, r0
 80049c2:	460f      	mov	r7, r1
 80049c4:	4616      	mov	r6, r2
 80049c6:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80049c8:	6825      	ldr	r5, [r4, #0]
 80049ca:	6968      	ldr	r0, [r5, #20]
 80049cc:	ea27 0000 	bic.w	r0, r7, r0
 80049d0:	b280      	uxth	r0, r0
 80049d2:	b1c0      	cbz	r0, 8004a06 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80049d4:	696b      	ldr	r3, [r5, #20]
 80049d6:	055a      	lsls	r2, r3, #21
 80049d8:	d517      	bpl.n	8004a0a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4e>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80049da:	682b      	ldr	r3, [r5, #0]
 80049dc:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80049e0:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80049e2:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 80049e6:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80049e8:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80049ea:	2300      	movs	r3, #0
 80049ec:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80049ee:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80049f2:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80049f6:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80049f8:	f043 0304 	orr.w	r3, r3, #4
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80049fc:	6423      	str	r3, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 80049fe:	2300      	movs	r3, #0
 8004a00:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 8004a04:	2001      	movs	r0, #1
}
 8004a06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8004a0a:	1c73      	adds	r3, r6, #1
 8004a0c:	d0dd      	beq.n	80049ca <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004a0e:	f7ff faf5 	bl	8003ffc <HAL_GetTick>
 8004a12:	eba0 0008 	sub.w	r0, r0, r8
 8004a16:	42b0      	cmp	r0, r6
 8004a18:	d801      	bhi.n	8004a1e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x62>
 8004a1a:	2e00      	cmp	r6, #0
 8004a1c:	d1d4      	bne.n	80049c8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 8004a1e:	6823      	ldr	r3, [r4, #0]
 8004a20:	695a      	ldr	r2, [r3, #20]
 8004a22:	ea27 0202 	bic.w	r2, r7, r2
 8004a26:	b292      	uxth	r2, r2
 8004a28:	2a00      	cmp	r2, #0
 8004a2a:	d0cd      	beq.n	80049c8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
          hi2c->PreviousState       = I2C_STATE_NONE;
 8004a2c:	2300      	movs	r3, #0
          hi2c->State               = HAL_I2C_STATE_READY;
 8004a2e:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8004a30:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8004a32:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004a36:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004a3a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004a3c:	4313      	orrs	r3, r2
 8004a3e:	e7dd      	b.n	80049fc <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08004a40 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8004a40:	b570      	push	{r4, r5, r6, lr}
 8004a42:	4604      	mov	r4, r0
 8004a44:	460d      	mov	r5, r1
 8004a46:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004a48:	6823      	ldr	r3, [r4, #0]
 8004a4a:	695b      	ldr	r3, [r3, #20]
 8004a4c:	061b      	lsls	r3, r3, #24
 8004a4e:	d501      	bpl.n	8004a54 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8004a50:	2000      	movs	r0, #0
 8004a52:	e01e      	b.n	8004a92 <I2C_WaitOnTXEFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004a54:	4620      	mov	r0, r4
 8004a56:	f7ff ff57 	bl	8004908 <I2C_IsAcknowledgeFailed>
 8004a5a:	b9c8      	cbnz	r0, 8004a90 <I2C_WaitOnTXEFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8004a5c:	1c6a      	adds	r2, r5, #1
 8004a5e:	d0f3      	beq.n	8004a48 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004a60:	f7ff facc 	bl	8003ffc <HAL_GetTick>
 8004a64:	1b80      	subs	r0, r0, r6
 8004a66:	42a8      	cmp	r0, r5
 8004a68:	d801      	bhi.n	8004a6e <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8004a6a:	2d00      	cmp	r5, #0
 8004a6c:	d1ec      	bne.n	8004a48 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 8004a6e:	6823      	ldr	r3, [r4, #0]
 8004a70:	695b      	ldr	r3, [r3, #20]
 8004a72:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
 8004a76:	d1e7      	bne.n	8004a48 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 8004a78:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8004a7a:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8004a7c:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004a80:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004a84:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8004a86:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004a8a:	f042 0220 	orr.w	r2, r2, #32
 8004a8e:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8004a90:	2001      	movs	r0, #1
}
 8004a92:	bd70      	pop	{r4, r5, r6, pc}

08004a94 <I2C_RequestMemoryWrite>:
{
 8004a94:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004a98:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004a9a:	6802      	ldr	r2, [r0, #0]
{
 8004a9c:	b085      	sub	sp, #20
 8004a9e:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
 8004aa2:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004aa4:	6813      	ldr	r3, [r2, #0]
 8004aa6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004aaa:	6013      	str	r3, [r2, #0]
{
 8004aac:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004aae:	463b      	mov	r3, r7
 8004ab0:	f8cd 8000 	str.w	r8, [sp]
 8004ab4:	2200      	movs	r2, #0
 8004ab6:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 8004aba:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004abc:	f7ff ff3e 	bl	800493c <I2C_WaitOnFlagUntilTimeout>
 8004ac0:	6823      	ldr	r3, [r4, #0]
 8004ac2:	b138      	cbz	r0, 8004ad4 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004ac4:	681b      	ldr	r3, [r3, #0]
 8004ac6:	05db      	lsls	r3, r3, #23
 8004ac8:	d502      	bpl.n	8004ad0 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004aca:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8004ace:	6423      	str	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 8004ad0:	2603      	movs	r6, #3
 8004ad2:	e020      	b.n	8004b16 <I2C_RequestMemoryWrite+0x82>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004ad4:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 8004ad8:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004ada:	491a      	ldr	r1, [pc, #104]	@ (8004b44 <I2C_RequestMemoryWrite+0xb0>)
 8004adc:	4643      	mov	r3, r8
 8004ade:	463a      	mov	r2, r7
 8004ae0:	4620      	mov	r0, r4
 8004ae2:	f7ff ff6b 	bl	80049bc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004ae6:	b9a8      	cbnz	r0, 8004b14 <I2C_RequestMemoryWrite+0x80>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004ae8:	6823      	ldr	r3, [r4, #0]
 8004aea:	9003      	str	r0, [sp, #12]
 8004aec:	695a      	ldr	r2, [r3, #20]
 8004aee:	9203      	str	r2, [sp, #12]
 8004af0:	699b      	ldr	r3, [r3, #24]
 8004af2:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004af4:	4642      	mov	r2, r8
 8004af6:	4639      	mov	r1, r7
 8004af8:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004afa:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004afc:	f7ff ffa0 	bl	8004a40 <I2C_WaitOnTXEFlagUntilTimeout>
 8004b00:	4606      	mov	r6, r0
 8004b02:	b160      	cbz	r0, 8004b1e <I2C_RequestMemoryWrite+0x8a>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004b04:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004b06:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004b08:	bf01      	itttt	eq
 8004b0a:	6822      	ldreq	r2, [r4, #0]
 8004b0c:	6813      	ldreq	r3, [r2, #0]
 8004b0e:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 8004b12:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 8004b14:	2601      	movs	r6, #1
}
 8004b16:	4630      	mov	r0, r6
 8004b18:	b005      	add	sp, #20
 8004b1a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004b1e:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004b22:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004b24:	d102      	bne.n	8004b2c <I2C_RequestMemoryWrite+0x98>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004b26:	b2ed      	uxtb	r5, r5
 8004b28:	611d      	str	r5, [r3, #16]
 8004b2a:	e7f4      	b.n	8004b16 <I2C_RequestMemoryWrite+0x82>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8004b2c:	0a2a      	lsrs	r2, r5, #8
 8004b2e:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004b30:	4639      	mov	r1, r7
 8004b32:	4642      	mov	r2, r8
 8004b34:	4620      	mov	r0, r4
 8004b36:	f7ff ff83 	bl	8004a40 <I2C_WaitOnTXEFlagUntilTimeout>
 8004b3a:	2800      	cmp	r0, #0
 8004b3c:	d1e2      	bne.n	8004b04 <I2C_RequestMemoryWrite+0x70>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004b3e:	6823      	ldr	r3, [r4, #0]
 8004b40:	e7f1      	b.n	8004b26 <I2C_RequestMemoryWrite+0x92>
 8004b42:	bf00      	nop
 8004b44:	00010002 	.word	0x00010002

08004b48 <I2C_RequestMemoryRead>:
{
 8004b48:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8004b4c:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004b4e:	6803      	ldr	r3, [r0, #0]
{
 8004b50:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004b52:	681a      	ldr	r2, [r3, #0]
 8004b54:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8004b58:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004b5a:	681a      	ldr	r2, [r3, #0]
{
 8004b5c:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004b60:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004b64:	601a      	str	r2, [r3, #0]
{
 8004b66:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004b68:	463b      	mov	r3, r7
 8004b6a:	f8cd 8000 	str.w	r8, [sp]
 8004b6e:	2200      	movs	r2, #0
 8004b70:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 8004b74:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004b76:	f7ff fee1 	bl	800493c <I2C_WaitOnFlagUntilTimeout>
 8004b7a:	6823      	ldr	r3, [r4, #0]
 8004b7c:	b138      	cbz	r0, 8004b8e <I2C_RequestMemoryRead+0x46>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004b7e:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004b80:	05db      	lsls	r3, r3, #23
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004b82:	bf44      	itt	mi
 8004b84:	f44f 7300 	movmi.w	r3, #512	@ 0x200
 8004b88:	6423      	strmi	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 8004b8a:	2003      	movs	r0, #3
 8004b8c:	e021      	b.n	8004bd2 <I2C_RequestMemoryRead+0x8a>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004b8e:	fa5f f986 	uxtb.w	r9, r6
 8004b92:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 8004b96:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004b98:	492b      	ldr	r1, [pc, #172]	@ (8004c48 <I2C_RequestMemoryRead+0x100>)
 8004b9a:	4643      	mov	r3, r8
 8004b9c:	463a      	mov	r2, r7
 8004b9e:	4620      	mov	r0, r4
 8004ba0:	f7ff ff0c 	bl	80049bc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004ba4:	b9a0      	cbnz	r0, 8004bd0 <I2C_RequestMemoryRead+0x88>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004ba6:	6823      	ldr	r3, [r4, #0]
 8004ba8:	9003      	str	r0, [sp, #12]
 8004baa:	695a      	ldr	r2, [r3, #20]
 8004bac:	9203      	str	r2, [sp, #12]
 8004bae:	699b      	ldr	r3, [r3, #24]
 8004bb0:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004bb2:	4642      	mov	r2, r8
 8004bb4:	4639      	mov	r1, r7
 8004bb6:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004bb8:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004bba:	f7ff ff41 	bl	8004a40 <I2C_WaitOnTXEFlagUntilTimeout>
 8004bbe:	b158      	cbz	r0, 8004bd8 <I2C_RequestMemoryRead+0x90>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004bc0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004bc2:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004bc4:	bf01      	itttt	eq
 8004bc6:	6822      	ldreq	r2, [r4, #0]
 8004bc8:	6813      	ldreq	r3, [r2, #0]
 8004bca:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 8004bce:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 8004bd0:	2001      	movs	r0, #1
}
 8004bd2:	b004      	add	sp, #16
 8004bd4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004bd8:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004bdc:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004bde:	d11a      	bne.n	8004c16 <I2C_RequestMemoryRead+0xce>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004be0:	b2ed      	uxtb	r5, r5
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004be2:	4642      	mov	r2, r8
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004be4:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004be6:	4639      	mov	r1, r7
 8004be8:	4620      	mov	r0, r4
 8004bea:	f7ff ff29 	bl	8004a40 <I2C_WaitOnTXEFlagUntilTimeout>
 8004bee:	4602      	mov	r2, r0
 8004bf0:	2800      	cmp	r0, #0
 8004bf2:	d1e5      	bne.n	8004bc0 <I2C_RequestMemoryRead+0x78>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004bf4:	6821      	ldr	r1, [r4, #0]
 8004bf6:	680b      	ldr	r3, [r1, #0]
 8004bf8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004bfc:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004bfe:	4620      	mov	r0, r4
 8004c00:	f8cd 8000 	str.w	r8, [sp]
 8004c04:	463b      	mov	r3, r7
 8004c06:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8004c0a:	f7ff fe97 	bl	800493c <I2C_WaitOnFlagUntilTimeout>
 8004c0e:	6822      	ldr	r2, [r4, #0]
 8004c10:	b160      	cbz	r0, 8004c2c <I2C_RequestMemoryRead+0xe4>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004c12:	6813      	ldr	r3, [r2, #0]
 8004c14:	e7b4      	b.n	8004b80 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8004c16:	0a2a      	lsrs	r2, r5, #8
 8004c18:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004c1a:	4639      	mov	r1, r7
 8004c1c:	4642      	mov	r2, r8
 8004c1e:	4620      	mov	r0, r4
 8004c20:	f7ff ff0e 	bl	8004a40 <I2C_WaitOnTXEFlagUntilTimeout>
 8004c24:	2800      	cmp	r0, #0
 8004c26:	d1cb      	bne.n	8004bc0 <I2C_RequestMemoryRead+0x78>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004c28:	6823      	ldr	r3, [r4, #0]
 8004c2a:	e7d9      	b.n	8004be0 <I2C_RequestMemoryRead+0x98>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8004c2c:	f049 0301 	orr.w	r3, r9, #1
 8004c30:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004c32:	4905      	ldr	r1, [pc, #20]	@ (8004c48 <I2C_RequestMemoryRead+0x100>)
 8004c34:	4643      	mov	r3, r8
 8004c36:	463a      	mov	r2, r7
 8004c38:	4620      	mov	r0, r4
 8004c3a:	f7ff febf 	bl	80049bc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004c3e:	3800      	subs	r0, #0
 8004c40:	bf18      	it	ne
 8004c42:	2001      	movne	r0, #1
 8004c44:	e7c5      	b.n	8004bd2 <I2C_RequestMemoryRead+0x8a>
 8004c46:	bf00      	nop
 8004c48:	00010002 	.word	0x00010002

08004c4c <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8004c4c:	b570      	push	{r4, r5, r6, lr}
 8004c4e:	4604      	mov	r4, r0
 8004c50:	460d      	mov	r5, r1
 8004c52:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8004c54:	6823      	ldr	r3, [r4, #0]
 8004c56:	695b      	ldr	r3, [r3, #20]
 8004c58:	075b      	lsls	r3, r3, #29
 8004c5a:	d501      	bpl.n	8004c60 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8004c5c:	2000      	movs	r0, #0
 8004c5e:	e01e      	b.n	8004c9e <I2C_WaitOnBTFFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004c60:	4620      	mov	r0, r4
 8004c62:	f7ff fe51 	bl	8004908 <I2C_IsAcknowledgeFailed>
 8004c66:	b9c8      	cbnz	r0, 8004c9c <I2C_WaitOnBTFFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8004c68:	1c6a      	adds	r2, r5, #1
 8004c6a:	d0f3      	beq.n	8004c54 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004c6c:	f7ff f9c6 	bl	8003ffc <HAL_GetTick>
 8004c70:	1b80      	subs	r0, r0, r6
 8004c72:	42a8      	cmp	r0, r5
 8004c74:	d801      	bhi.n	8004c7a <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8004c76:	2d00      	cmp	r5, #0
 8004c78:	d1ec      	bne.n	8004c54 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 8004c7a:	6823      	ldr	r3, [r4, #0]
 8004c7c:	695b      	ldr	r3, [r3, #20]
 8004c7e:	f013 0304 	ands.w	r3, r3, #4
 8004c82:	d1e7      	bne.n	8004c54 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 8004c84:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8004c86:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8004c88:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004c8c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004c90:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8004c92:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004c96:	f042 0220 	orr.w	r2, r2, #32
 8004c9a:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8004c9c:	2001      	movs	r0, #1
}
 8004c9e:	bd70      	pop	{r4, r5, r6, pc}

08004ca0 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8004ca0:	b570      	push	{r4, r5, r6, lr}
 8004ca2:	4604      	mov	r4, r0
 8004ca4:	460d      	mov	r5, r1
 8004ca6:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8004ca8:	6821      	ldr	r1, [r4, #0]
 8004caa:	694b      	ldr	r3, [r1, #20]
 8004cac:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 8004cb0:	d001      	beq.n	8004cb6 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8004cb2:	2000      	movs	r0, #0
 8004cb4:	e011      	b.n	8004cda <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8004cb6:	694a      	ldr	r2, [r1, #20]
 8004cb8:	06d2      	lsls	r2, r2, #27
 8004cba:	d50f      	bpl.n	8004cdc <I2C_WaitOnRXNEFlagUntilTimeout+0x3c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004cbc:	f06f 0210 	mvn.w	r2, #16
 8004cc0:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8004cc2:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004cc4:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004cc6:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004cca:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8004cce:	6c23      	ldr	r3, [r4, #64]	@ 0x40
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004cd0:	6423      	str	r3, [r4, #64]	@ 0x40
        __HAL_UNLOCK(hi2c);
 8004cd2:	2300      	movs	r3, #0
 8004cd4:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 8004cd8:	2001      	movs	r0, #1
}
 8004cda:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004cdc:	f7ff f98e 	bl	8003ffc <HAL_GetTick>
 8004ce0:	1b80      	subs	r0, r0, r6
 8004ce2:	42a8      	cmp	r0, r5
 8004ce4:	d801      	bhi.n	8004cea <I2C_WaitOnRXNEFlagUntilTimeout+0x4a>
 8004ce6:	2d00      	cmp	r5, #0
 8004ce8:	d1de      	bne.n	8004ca8 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 8004cea:	6823      	ldr	r3, [r4, #0]
 8004cec:	695b      	ldr	r3, [r3, #20]
 8004cee:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 8004cf2:	d1d9      	bne.n	8004ca8 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->State               = HAL_I2C_STATE_READY;
 8004cf4:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004cf6:	6323      	str	r3, [r4, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004cf8:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004cfc:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004d00:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004d02:	4313      	orrs	r3, r2
 8004d04:	e7e4      	b.n	8004cd0 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>
	...

08004d08 <HAL_I2C_Init>:
{
 8004d08:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8004d0a:	4604      	mov	r4, r0
 8004d0c:	b908      	cbnz	r0, 8004d12 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8004d0e:	2001      	movs	r0, #1
}
 8004d10:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8004d12:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8004d16:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004d1a:	b91b      	cbnz	r3, 8004d24 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8004d1c:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_I2C_MspInit(hi2c);
 8004d20:	f7fc fe22 	bl	8001968 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8004d24:	2324      	movs	r3, #36	@ 0x24
 8004d26:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8004d2a:	6823      	ldr	r3, [r4, #0]
 8004d2c:	681a      	ldr	r2, [r3, #0]
 8004d2e:	f022 0201 	bic.w	r2, r2, #1
 8004d32:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8004d34:	681a      	ldr	r2, [r3, #0]
 8004d36:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8004d3a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8004d3c:	681a      	ldr	r2, [r3, #0]
 8004d3e:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8004d42:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8004d44:	f000 fe78 	bl	8005a38 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8004d48:	4b3f      	ldr	r3, [pc, #252]	@ (8004e48 <HAL_I2C_Init+0x140>)
 8004d4a:	6865      	ldr	r5, [r4, #4]
 8004d4c:	429d      	cmp	r5, r3
 8004d4e:	bf94      	ite	ls
 8004d50:	4b3e      	ldrls	r3, [pc, #248]	@ (8004e4c <HAL_I2C_Init+0x144>)
 8004d52:	4b3f      	ldrhi	r3, [pc, #252]	@ (8004e50 <HAL_I2C_Init+0x148>)
 8004d54:	4298      	cmp	r0, r3
 8004d56:	bf8c      	ite	hi
 8004d58:	2300      	movhi	r3, #0
 8004d5a:	2301      	movls	r3, #1
 8004d5c:	2b00      	cmp	r3, #0
 8004d5e:	d1d6      	bne.n	8004d0e <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004d60:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8004d62:	4e39      	ldr	r6, [pc, #228]	@ (8004e48 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004d64:	6851      	ldr	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8004d66:	4b3b      	ldr	r3, [pc, #236]	@ (8004e54 <HAL_I2C_Init+0x14c>)
 8004d68:	fbb0 f3f3 	udiv	r3, r0, r3
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004d6c:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 8004d70:	4319      	orrs	r1, r3
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8004d72:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004d74:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8004d76:	bf88      	it	hi
 8004d78:	f44f 7696 	movhi.w	r6, #300	@ 0x12c
 8004d7c:	6a11      	ldr	r1, [r2, #32]
 8004d7e:	bf88      	it	hi
 8004d80:	4373      	mulhi	r3, r6
 8004d82:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 8004d86:	bf84      	itt	hi
 8004d88:	f44f 767a 	movhi.w	r6, #1000	@ 0x3e8
 8004d8c:	fbb3 f3f6 	udivhi	r3, r3, r6
 8004d90:	3301      	adds	r3, #1
 8004d92:	430b      	orrs	r3, r1
 8004d94:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8004d96:	69d1      	ldr	r1, [r2, #28]
 8004d98:	1e43      	subs	r3, r0, #1
 8004d9a:	482b      	ldr	r0, [pc, #172]	@ (8004e48 <HAL_I2C_Init+0x140>)
 8004d9c:	f421 414f 	bic.w	r1, r1, #52992	@ 0xcf00
 8004da0:	4285      	cmp	r5, r0
 8004da2:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8004da6:	d832      	bhi.n	8004e0e <HAL_I2C_Init+0x106>
 8004da8:	006d      	lsls	r5, r5, #1
 8004daa:	f640 70fc 	movw	r0, #4092	@ 0xffc
 8004dae:	fbb3 f3f5 	udiv	r3, r3, r5
 8004db2:	3301      	adds	r3, #1
 8004db4:	4203      	tst	r3, r0
 8004db6:	d042      	beq.n	8004e3e <HAL_I2C_Init+0x136>
 8004db8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004dbc:	4319      	orrs	r1, r3
 8004dbe:	61d1      	str	r1, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8004dc0:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8004dc4:	6811      	ldr	r1, [r2, #0]
 8004dc6:	4303      	orrs	r3, r0
 8004dc8:	f021 01c0 	bic.w	r1, r1, #192	@ 0xc0
 8004dcc:	430b      	orrs	r3, r1
 8004dce:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8004dd0:	6891      	ldr	r1, [r2, #8]
 8004dd2:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8004dd6:	f421 4103 	bic.w	r1, r1, #33536	@ 0x8300
 8004dda:	4303      	orrs	r3, r0
 8004ddc:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8004de0:	430b      	orrs	r3, r1
 8004de2:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8004de4:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8004de8:	68d1      	ldr	r1, [r2, #12]
 8004dea:	4303      	orrs	r3, r0
 8004dec:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8004df0:	430b      	orrs	r3, r1
 8004df2:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8004df4:	6813      	ldr	r3, [r2, #0]
 8004df6:	f043 0301 	orr.w	r3, r3, #1
 8004dfa:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004dfc:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8004dfe:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004e00:	6420      	str	r0, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8004e02:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8004e06:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8004e08:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
  return HAL_OK;
 8004e0c:	e780      	b.n	8004d10 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8004e0e:	68a0      	ldr	r0, [r4, #8]
 8004e10:	b950      	cbnz	r0, 8004e28 <HAL_I2C_Init+0x120>
 8004e12:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004e16:	fbb3 f3f5 	udiv	r3, r3, r5
 8004e1a:	3301      	adds	r3, #1
 8004e1c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004e20:	b17b      	cbz	r3, 8004e42 <HAL_I2C_Init+0x13a>
 8004e22:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8004e26:	e7c9      	b.n	8004dbc <HAL_I2C_Init+0xb4>
 8004e28:	2019      	movs	r0, #25
 8004e2a:	4368      	muls	r0, r5
 8004e2c:	fbb3 f3f0 	udiv	r3, r3, r0
 8004e30:	3301      	adds	r3, #1
 8004e32:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004e36:	b123      	cbz	r3, 8004e42 <HAL_I2C_Init+0x13a>
 8004e38:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8004e3c:	e7be      	b.n	8004dbc <HAL_I2C_Init+0xb4>
 8004e3e:	2304      	movs	r3, #4
 8004e40:	e7bc      	b.n	8004dbc <HAL_I2C_Init+0xb4>
 8004e42:	2301      	movs	r3, #1
 8004e44:	e7ba      	b.n	8004dbc <HAL_I2C_Init+0xb4>
 8004e46:	bf00      	nop
 8004e48:	000186a0 	.word	0x000186a0
 8004e4c:	001e847f 	.word	0x001e847f
 8004e50:	003d08ff 	.word	0x003d08ff
 8004e54:	000f4240 	.word	0x000f4240

08004e58 <HAL_I2C_Mem_Write>:
{
 8004e58:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8004e5c:	4604      	mov	r4, r0
 8004e5e:	4699      	mov	r9, r3
 8004e60:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8004e62:	460f      	mov	r7, r1
 8004e64:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8004e66:	f7ff f8c9 	bl	8003ffc <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004e6a:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 8004e6e:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8004e70:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004e72:	d003      	beq.n	8004e7c <HAL_I2C_Mem_Write+0x24>
      return HAL_BUSY;
 8004e74:	2002      	movs	r0, #2
}
 8004e76:	b003      	add	sp, #12
 8004e78:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004e7c:	9000      	str	r0, [sp, #0]
 8004e7e:	493c      	ldr	r1, [pc, #240]	@ (8004f70 <HAL_I2C_Mem_Write+0x118>)
 8004e80:	2319      	movs	r3, #25
 8004e82:	2201      	movs	r2, #1
 8004e84:	4620      	mov	r0, r4
 8004e86:	f7ff fd59 	bl	800493c <I2C_WaitOnFlagUntilTimeout>
 8004e8a:	2800      	cmp	r0, #0
 8004e8c:	d1f2      	bne.n	8004e74 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8004e8e:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 8004e92:	2b01      	cmp	r3, #1
 8004e94:	d0ee      	beq.n	8004e74 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004e96:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8004e98:	2301      	movs	r3, #1
 8004e9a:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004e9e:	6803      	ldr	r3, [r0, #0]
 8004ea0:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8004ea2:	bf5e      	ittt	pl
 8004ea4:	6803      	ldrpl	r3, [r0, #0]
 8004ea6:	f043 0301 	orrpl.w	r3, r3, #1
 8004eaa:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004eac:	6803      	ldr	r3, [r0, #0]
 8004eae:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8004eb2:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8004eb4:	2321      	movs	r3, #33	@ 0x21
 8004eb6:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004eba:	2340      	movs	r3, #64	@ 0x40
 8004ebc:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004ec0:	2300      	movs	r3, #0
 8004ec2:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 8004ec4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004ec6:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8004ec8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8004ecc:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8004ece:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004ed0:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8004ed2:	4b28      	ldr	r3, [pc, #160]	@ (8004f74 <HAL_I2C_Mem_Write+0x11c>)
 8004ed4:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8004ed6:	4642      	mov	r2, r8
 8004ed8:	e9cd 6500 	strd	r6, r5, [sp]
 8004edc:	464b      	mov	r3, r9
 8004ede:	4639      	mov	r1, r7
 8004ee0:	4620      	mov	r0, r4
 8004ee2:	f7ff fdd7 	bl	8004a94 <I2C_RequestMemoryWrite>
 8004ee6:	2800      	cmp	r0, #0
 8004ee8:	d02a      	beq.n	8004f40 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8004eea:	2001      	movs	r0, #1
 8004eec:	e7c3      	b.n	8004e76 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004eee:	f7ff fda7 	bl	8004a40 <I2C_WaitOnTXEFlagUntilTimeout>
 8004ef2:	b140      	cbz	r0, 8004f06 <HAL_I2C_Mem_Write+0xae>
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004ef4:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004ef6:	2b04      	cmp	r3, #4
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004ef8:	bf01      	itttt	eq
 8004efa:	6822      	ldreq	r2, [r4, #0]
 8004efc:	6813      	ldreq	r3, [r2, #0]
 8004efe:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 8004f02:	6013      	streq	r3, [r2, #0]
 8004f04:	e7f1      	b.n	8004eea <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004f06:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004f08:	6827      	ldr	r7, [r4, #0]
 8004f0a:	461a      	mov	r2, r3
 8004f0c:	f812 1b01 	ldrb.w	r1, [r2], #1
 8004f10:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8004f12:	6262      	str	r2, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 8004f14:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8004f16:	8d21      	ldrh	r1, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 8004f18:	3a01      	subs	r2, #1
 8004f1a:	b292      	uxth	r2, r2
 8004f1c:	8562      	strh	r2, [r4, #42]	@ 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004f1e:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8004f20:	1e48      	subs	r0, r1, #1
 8004f22:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004f24:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8004f26:	8520      	strh	r0, [r4, #40]	@ 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004f28:	d50a      	bpl.n	8004f40 <HAL_I2C_Mem_Write+0xe8>
 8004f2a:	b148      	cbz	r0, 8004f40 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004f2c:	785a      	ldrb	r2, [r3, #1]
 8004f2e:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8004f30:	3302      	adds	r3, #2
 8004f32:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 8004f34:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004f36:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8004f38:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8004f3a:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8004f3c:	8521      	strh	r1, [r4, #40]	@ 0x28
        hi2c->XferCount--;
 8004f3e:	8563      	strh	r3, [r4, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 8004f40:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004f42:	462a      	mov	r2, r5
 8004f44:	4631      	mov	r1, r6
 8004f46:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8004f48:	2b00      	cmp	r3, #0
 8004f4a:	d1d0      	bne.n	8004eee <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004f4c:	f7ff fe7e 	bl	8004c4c <I2C_WaitOnBTFFlagUntilTimeout>
 8004f50:	2800      	cmp	r0, #0
 8004f52:	d1cf      	bne.n	8004ef4 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004f54:	6822      	ldr	r2, [r4, #0]
 8004f56:	6813      	ldr	r3, [r2, #0]
 8004f58:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8004f5c:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8004f5e:	2320      	movs	r3, #32
 8004f60:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 8004f64:	f884 003c 	strb.w	r0, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004f68:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
    return HAL_OK;
 8004f6c:	e783      	b.n	8004e76 <HAL_I2C_Mem_Write+0x1e>
 8004f6e:	bf00      	nop
 8004f70:	00100002 	.word	0x00100002
 8004f74:	ffff0000 	.word	0xffff0000

08004f78 <HAL_I2C_Mem_Read>:
{
 8004f78:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004f7c:	4604      	mov	r4, r0
 8004f7e:	b087      	sub	sp, #28
 8004f80:	4699      	mov	r9, r3
 8004f82:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 8004f84:	460d      	mov	r5, r1
 8004f86:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8004f88:	f7ff f838 	bl	8003ffc <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004f8c:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 8004f90:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8004f92:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004f94:	d004      	beq.n	8004fa0 <HAL_I2C_Mem_Read+0x28>
      return HAL_BUSY;
 8004f96:	2502      	movs	r5, #2
}
 8004f98:	4628      	mov	r0, r5
 8004f9a:	b007      	add	sp, #28
 8004f9c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004fa0:	9000      	str	r0, [sp, #0]
 8004fa2:	497a      	ldr	r1, [pc, #488]	@ (800518c <HAL_I2C_Mem_Read+0x214>)
 8004fa4:	2319      	movs	r3, #25
 8004fa6:	2201      	movs	r2, #1
 8004fa8:	4620      	mov	r0, r4
 8004faa:	f7ff fcc7 	bl	800493c <I2C_WaitOnFlagUntilTimeout>
 8004fae:	2800      	cmp	r0, #0
 8004fb0:	d1f1      	bne.n	8004f96 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8004fb2:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 8004fb6:	2b01      	cmp	r3, #1
 8004fb8:	d0ed      	beq.n	8004f96 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004fba:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8004fbc:	2301      	movs	r3, #1
 8004fbe:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004fc2:	6803      	ldr	r3, [r0, #0]
 8004fc4:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8004fc6:	bf5e      	ittt	pl
 8004fc8:	6803      	ldrpl	r3, [r0, #0]
 8004fca:	f043 0301 	orrpl.w	r3, r3, #1
 8004fce:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004fd0:	6803      	ldr	r3, [r0, #0]
 8004fd2:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8004fd6:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8004fd8:	2322      	movs	r3, #34	@ 0x22
 8004fda:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004fde:	2340      	movs	r3, #64	@ 0x40
 8004fe0:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004fe4:	2300      	movs	r3, #0
 8004fe6:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 8004fe8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004fea:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8004fec:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 8004ff0:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8004ff2:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004ff4:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8004ff6:	4b66      	ldr	r3, [pc, #408]	@ (8005190 <HAL_I2C_Mem_Read+0x218>)
 8004ff8:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8004ffa:	4629      	mov	r1, r5
 8004ffc:	e9cd 7600 	strd	r7, r6, [sp]
 8005000:	464b      	mov	r3, r9
 8005002:	4642      	mov	r2, r8
 8005004:	4620      	mov	r0, r4
 8005006:	f7ff fd9f 	bl	8004b48 <I2C_RequestMemoryRead>
 800500a:	4605      	mov	r5, r0
 800500c:	b108      	cbz	r0, 8005012 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 800500e:	2501      	movs	r5, #1
 8005010:	e7c2      	b.n	8004f98 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8005012:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005014:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8005016:	b9b2      	cbnz	r2, 8005046 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005018:	9002      	str	r0, [sp, #8]
 800501a:	695a      	ldr	r2, [r3, #20]
 800501c:	9202      	str	r2, [sp, #8]
 800501e:	699a      	ldr	r2, [r3, #24]
 8005020:	9202      	str	r2, [sp, #8]
 8005022:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005024:	681a      	ldr	r2, [r3, #0]
 8005026:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800502a:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800502c:	f8df 8164 	ldr.w	r8, [pc, #356]	@ 8005194 <HAL_I2C_Mem_Read+0x21c>
    while (hi2c->XferSize > 0U)
 8005030:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8005032:	2b00      	cmp	r3, #0
 8005034:	d12c      	bne.n	8005090 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8005036:	2220      	movs	r2, #32
 8005038:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 800503c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005040:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    return HAL_OK;
 8005044:	e7a8      	b.n	8004f98 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8005046:	2a01      	cmp	r2, #1
 8005048:	d10a      	bne.n	8005060 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800504a:	681a      	ldr	r2, [r3, #0]
 800504c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005050:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005052:	9003      	str	r0, [sp, #12]
 8005054:	695a      	ldr	r2, [r3, #20]
 8005056:	9203      	str	r2, [sp, #12]
 8005058:	699a      	ldr	r2, [r3, #24]
 800505a:	9203      	str	r2, [sp, #12]
 800505c:	9a03      	ldr	r2, [sp, #12]
 800505e:	e7e1      	b.n	8005024 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8005060:	2a02      	cmp	r2, #2
 8005062:	d10e      	bne.n	8005082 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005064:	681a      	ldr	r2, [r3, #0]
 8005066:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800506a:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800506c:	681a      	ldr	r2, [r3, #0]
 800506e:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8005072:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005074:	9004      	str	r0, [sp, #16]
 8005076:	695a      	ldr	r2, [r3, #20]
 8005078:	9204      	str	r2, [sp, #16]
 800507a:	699b      	ldr	r3, [r3, #24]
 800507c:	9304      	str	r3, [sp, #16]
 800507e:	9b04      	ldr	r3, [sp, #16]
 8005080:	e7d4      	b.n	800502c <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005082:	9005      	str	r0, [sp, #20]
 8005084:	695a      	ldr	r2, [r3, #20]
 8005086:	9205      	str	r2, [sp, #20]
 8005088:	699b      	ldr	r3, [r3, #24]
 800508a:	9305      	str	r3, [sp, #20]
 800508c:	9b05      	ldr	r3, [sp, #20]
 800508e:	e7cd      	b.n	800502c <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8005090:	2b03      	cmp	r3, #3
 8005092:	d856      	bhi.n	8005142 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8005094:	2b01      	cmp	r3, #1
 8005096:	d115      	bne.n	80050c4 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005098:	4632      	mov	r2, r6
 800509a:	4639      	mov	r1, r7
 800509c:	4620      	mov	r0, r4
 800509e:	f7ff fdff 	bl	8004ca0 <I2C_WaitOnRXNEFlagUntilTimeout>
 80050a2:	2800      	cmp	r0, #0
 80050a4:	d1b3      	bne.n	800500e <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80050a6:	6823      	ldr	r3, [r4, #0]
 80050a8:	691a      	ldr	r2, [r3, #16]
 80050aa:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80050ac:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80050ae:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80050b0:	3301      	adds	r3, #1
 80050b2:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 80050b4:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 80050b6:	3b01      	subs	r3, #1
 80050b8:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 80050ba:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80050bc:	3b01      	subs	r3, #1
 80050be:	b29b      	uxth	r3, r3
 80050c0:	8563      	strh	r3, [r4, #42]	@ 0x2a
 80050c2:	e7b5      	b.n	8005030 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 80050c4:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80050c6:	9600      	str	r6, [sp, #0]
 80050c8:	463b      	mov	r3, r7
 80050ca:	f04f 0200 	mov.w	r2, #0
 80050ce:	4641      	mov	r1, r8
 80050d0:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 80050d2:	d119      	bne.n	8005108 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80050d4:	f7ff fc32 	bl	800493c <I2C_WaitOnFlagUntilTimeout>
 80050d8:	2800      	cmp	r0, #0
 80050da:	d198      	bne.n	800500e <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80050dc:	6823      	ldr	r3, [r4, #0]
 80050de:	681a      	ldr	r2, [r3, #0]
 80050e0:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80050e4:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80050e6:	691a      	ldr	r2, [r3, #16]
 80050e8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80050ea:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80050ec:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 80050ee:	1c53      	adds	r3, r2, #1
 80050f0:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 80050f2:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 80050f4:	3b01      	subs	r3, #1
 80050f6:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 80050f8:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80050fa:	3b01      	subs	r3, #1
 80050fc:	b29b      	uxth	r3, r3
 80050fe:	8563      	strh	r3, [r4, #42]	@ 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005100:	6823      	ldr	r3, [r4, #0]
 8005102:	691b      	ldr	r3, [r3, #16]
 8005104:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 8005106:	e7d2      	b.n	80050ae <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005108:	f7ff fc18 	bl	800493c <I2C_WaitOnFlagUntilTimeout>
 800510c:	4602      	mov	r2, r0
 800510e:	2800      	cmp	r0, #0
 8005110:	f47f af7d 	bne.w	800500e <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005114:	6823      	ldr	r3, [r4, #0]
 8005116:	6819      	ldr	r1, [r3, #0]
 8005118:	f421 6180 	bic.w	r1, r1, #1024	@ 0x400
 800511c:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800511e:	6919      	ldr	r1, [r3, #16]
 8005120:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005122:	7019      	strb	r1, [r3, #0]
          hi2c->pBuffPtr++;
 8005124:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005126:	3301      	adds	r3, #1
 8005128:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 800512a:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 800512c:	3b01      	subs	r3, #1
 800512e:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8005130:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005132:	3b01      	subs	r3, #1
 8005134:	b29b      	uxth	r3, r3
 8005136:	8563      	strh	r3, [r4, #42]	@ 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005138:	4641      	mov	r1, r8
 800513a:	9600      	str	r6, [sp, #0]
 800513c:	463b      	mov	r3, r7
 800513e:	4620      	mov	r0, r4
 8005140:	e7c8      	b.n	80050d4 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005142:	4632      	mov	r2, r6
 8005144:	4639      	mov	r1, r7
 8005146:	4620      	mov	r0, r4
 8005148:	f7ff fdaa 	bl	8004ca0 <I2C_WaitOnRXNEFlagUntilTimeout>
 800514c:	2800      	cmp	r0, #0
 800514e:	f47f af5e 	bne.w	800500e <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005152:	6823      	ldr	r3, [r4, #0]
 8005154:	691a      	ldr	r2, [r3, #16]
 8005156:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005158:	701a      	strb	r2, [r3, #0]
        hi2c->XferCount--;
 800515a:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
        hi2c->pBuffPtr++;
 800515c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 800515e:	3a01      	subs	r2, #1
 8005160:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 8005162:	1c4b      	adds	r3, r1, #1
        hi2c->XferCount--;
 8005164:	8562      	strh	r2, [r4, #42]	@ 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8005166:	6822      	ldr	r2, [r4, #0]
        hi2c->pBuffPtr++;
 8005168:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferSize--;
 800516a:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800516c:	6950      	ldr	r0, [r2, #20]
        hi2c->XferSize--;
 800516e:	3b01      	subs	r3, #1
 8005170:	b29b      	uxth	r3, r3
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8005172:	0740      	lsls	r0, r0, #29
        hi2c->XferSize--;
 8005174:	8523      	strh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8005176:	f57f af5b 	bpl.w	8005030 <HAL_I2C_Mem_Read+0xb8>
          if (hi2c->XferSize == 3U)
 800517a:	2b03      	cmp	r3, #3
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800517c:	bf02      	ittt	eq
 800517e:	6813      	ldreq	r3, [r2, #0]
 8005180:	f423 6380 	biceq.w	r3, r3, #1024	@ 0x400
 8005184:	6013      	streq	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005186:	6913      	ldr	r3, [r2, #16]
 8005188:	704b      	strb	r3, [r1, #1]
 800518a:	e790      	b.n	80050ae <HAL_I2C_Mem_Read+0x136>
 800518c:	00100002 	.word	0x00100002
 8005190:	ffff0000 	.word	0xffff0000
 8005194:	00010004 	.word	0x00010004

08005198 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8005198:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800519a:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800519e:	2b20      	cmp	r3, #32
 80051a0:	b2dc      	uxtb	r4, r3
 80051a2:	d116      	bne.n	80051d2 <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 80051a4:	2324      	movs	r3, #36	@ 0x24
 80051a6:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80051aa:	6803      	ldr	r3, [r0, #0]
 80051ac:	681a      	ldr	r2, [r3, #0]
 80051ae:	f022 0201 	bic.w	r2, r2, #1
 80051b2:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 80051b4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80051b6:	f022 0210 	bic.w	r2, r2, #16
 80051ba:	625a      	str	r2, [r3, #36]	@ 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 80051bc:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80051be:	4311      	orrs	r1, r2
 80051c0:	6259      	str	r1, [r3, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 80051c2:	681a      	ldr	r2, [r3, #0]
 80051c4:	f042 0201 	orr.w	r2, r2, #1
 80051c8:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80051ca:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 80051ce:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 80051d0:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 80051d2:	2002      	movs	r0, #2
 80051d4:	e7fc      	b.n	80051d0 <HAL_I2CEx_ConfigAnalogFilter+0x38>

080051d6 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 80051d6:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80051d8:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80051dc:	2b20      	cmp	r3, #32
 80051de:	b2dc      	uxtb	r4, r3
 80051e0:	d116      	bne.n	8005210 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80051e2:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 80051e4:	2324      	movs	r3, #36	@ 0x24
 80051e6:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    __HAL_I2C_DISABLE(hi2c);
 80051ea:	6813      	ldr	r3, [r2, #0]
 80051ec:	f023 0301 	bic.w	r3, r3, #1
 80051f0:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 80051f2:	6a55      	ldr	r5, [r2, #36]	@ 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 80051f4:	f64f 73f0 	movw	r3, #65520	@ 0xfff0
 80051f8:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 80051fa:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 80051fc:	b29b      	uxth	r3, r3
 80051fe:	6253      	str	r3, [r2, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 8005200:	6813      	ldr	r3, [r2, #0]
 8005202:	f043 0301 	orr.w	r3, r3, #1
 8005206:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8005208:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 800520c:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 800520e:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8005210:	2002      	movs	r0, #2
 8005212:	e7fc      	b.n	800520e <HAL_I2CEx_ConfigDigitalFilter+0x38>

08005214 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005214:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005216:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800521a:	01d2      	lsls	r2, r2, #7
 800521c:	3284      	adds	r2, #132	@ 0x84
 800521e:	1883      	adds	r3, r0, r2
{
 8005220:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005224:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005226:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005228:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800522a:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800522e:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 8005232:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005234:	68c5      	ldr	r5, [r0, #12]
 8005236:	f10c 0701 	add.w	r7, ip, #1
 800523a:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800523e:	f3c6 460b 	ubfx	r6, r6, #16, #12
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005242:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005244:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005246:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800524a:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800524c:	68c6      	ldr	r6, [r0, #12]
 800524e:	68cd      	ldr	r5, [r1, #12]
 8005250:	f3c6 060a 	ubfx	r6, r6, #0, #11
 8005254:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8005256:	689d      	ldr	r5, [r3, #8]
 8005258:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 800525c:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800525e:	68c7      	ldr	r7, [r0, #12]
 8005260:	688d      	ldr	r5, [r1, #8]
 8005262:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8005266:	3501      	adds	r5, #1
 8005268:	443d      	add	r5, r7
 800526a:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 800526e:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005270:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005272:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005274:	f025 0507 	bic.w	r5, r5, #7
 8005278:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800527a:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800527e:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005280:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8005282:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8005286:	f891 8031 	ldrb.w	r8, [r1, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800528a:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800528e:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 8005292:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8005296:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 800529a:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 800529e:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 80052a0:	695d      	ldr	r5, [r3, #20]
 80052a2:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 80052a6:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 80052a8:	694d      	ldr	r5, [r1, #20]
 80052aa:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 80052ac:	69dd      	ldr	r5, [r3, #28]
 80052ae:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 80052b2:	f025 0507 	bic.w	r5, r5, #7
 80052b6:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 80052b8:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 80052bc:	433d      	orrs	r5, r7
 80052be:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80052c0:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80052c2:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80052c4:	f8c3 e028 	str.w	lr, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80052c8:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80052ca:	b31e      	cbz	r6, 8005314 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 80052cc:	2e01      	cmp	r6, #1
 80052ce:	d023      	beq.n	8005318 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 80052d0:	1eb5      	subs	r5, r6, #2
 80052d2:	2d02      	cmp	r5, #2
 80052d4:	d922      	bls.n	800531c <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_AL88))
  {
    tmp = 2U;
 80052d6:	2e07      	cmp	r6, #7
 80052d8:	bf14      	ite	ne
 80052da:	2501      	movne	r5, #1
 80052dc:	2502      	moveq	r5, #2
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 80052de:	6ade      	ldr	r6, [r3, #44]	@ 0x2c
 80052e0:	f006 26e0 	and.w	r6, r6, #3758153728	@ 0xe000e000
 80052e4:	62de      	str	r6, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80052e6:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 80052ea:	6a8e      	ldr	r6, [r1, #40]	@ 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80052ec:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80052ee:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 80052f0:	436e      	muls	r6, r5
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80052f2:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 80052f4:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 80052f8:	62dc      	str	r4, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 80052fa:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
 80052fc:	f424 64ff 	bic.w	r4, r4, #2040	@ 0x7f8
 8005300:	f024 0407 	bic.w	r4, r4, #7
 8005304:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005306:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8005308:	5883      	ldr	r3, [r0, r2]
 800530a:	f043 0301 	orr.w	r3, r3, #1
 800530e:	5083      	str	r3, [r0, r2]
}
 8005310:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8005314:	2504      	movs	r5, #4
 8005316:	e7e2      	b.n	80052de <LTDC_SetConfig+0xca>
    tmp = 3U;
 8005318:	2503      	movs	r5, #3
 800531a:	e7e0      	b.n	80052de <LTDC_SetConfig+0xca>
    tmp = 2U;
 800531c:	2502      	movs	r5, #2
 800531e:	e7de      	b.n	80052de <LTDC_SetConfig+0xca>

08005320 <HAL_LTDC_Init>:
{
 8005320:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8005322:	4604      	mov	r4, r0
 8005324:	2800      	cmp	r0, #0
 8005326:	d063      	beq.n	80053f0 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8005328:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 800532c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005330:	b91b      	cbnz	r3, 800533a <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8005332:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 8005336:	f7fc fb73 	bl	8001a20 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800533a:	2302      	movs	r3, #2
 800533c:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8005340:	6823      	ldr	r3, [r4, #0]
 8005342:	699a      	ldr	r2, [r3, #24]
 8005344:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 8005348:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800534a:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800534e:	4302      	orrs	r2, r0
 8005350:	68e0      	ldr	r0, [r4, #12]
 8005352:	6999      	ldr	r1, [r3, #24]
 8005354:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8005356:	6920      	ldr	r0, [r4, #16]
 8005358:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800535a:	430a      	orrs	r2, r1
 800535c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800535e:	689a      	ldr	r2, [r3, #8]
 8005360:	4924      	ldr	r1, [pc, #144]	@ (80053f4 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8005362:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005364:	400a      	ands	r2, r1
 8005366:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8005368:	689a      	ldr	r2, [r3, #8]
 800536a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800536e:	69a0      	ldr	r0, [r4, #24]
 8005370:	4302      	orrs	r2, r0
 8005372:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005374:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8005376:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005378:	400a      	ands	r2, r1
 800537a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800537c:	68da      	ldr	r2, [r3, #12]
 800537e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005382:	6a20      	ldr	r0, [r4, #32]
 8005384:	4302      	orrs	r2, r0
 8005386:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005388:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800538a:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800538c:	400a      	ands	r2, r1
 800538e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8005390:	691a      	ldr	r2, [r3, #16]
 8005392:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005396:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8005398:	4302      	orrs	r2, r0
 800539a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800539c:	695a      	ldr	r2, [r3, #20]
 800539e:	400a      	ands	r2, r1
 80053a0:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80053a2:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 80053a4:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80053a6:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80053aa:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 80053ac:	430a      	orrs	r2, r1
 80053ae:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80053b0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 80053b2:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 80053b6:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80053ba:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 80053be:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80053c0:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 80053c2:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 80053c6:	432a      	orrs	r2, r5
 80053c8:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 80053cc:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80053d0:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80053d2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80053d4:	f042 0206 	orr.w	r2, r2, #6
 80053d8:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 80053da:	699a      	ldr	r2, [r3, #24]
 80053dc:	f042 0201 	orr.w	r2, r2, #1
 80053e0:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80053e2:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 80053e4:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80053e6:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 80053ea:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 80053ee:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80053f0:	2001      	movs	r0, #1
 80053f2:	e7fc      	b.n	80053ee <HAL_LTDC_Init+0xce>
 80053f4:	f000f800 	.word	0xf000f800

080053f8 <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 80053f8:	4770      	bx	lr

080053fa <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 80053fa:	4770      	bx	lr

080053fc <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80053fc:	6803      	ldr	r3, [r0, #0]
{
 80053fe:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005400:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8005402:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005404:	0772      	lsls	r2, r6, #29
{
 8005406:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005408:	d514      	bpl.n	8005434 <HAL_LTDC_IRQHandler+0x38>
 800540a:	0769      	lsls	r1, r5, #29
 800540c:	d512      	bpl.n	8005434 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800540e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005410:	f022 0204 	bic.w	r2, r2, #4
 8005414:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8005416:	2204      	movs	r2, #4
 8005418:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800541a:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 800541e:	f043 0301 	orr.w	r3, r3, #1
 8005422:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 8005426:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005428:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 800542c:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005430:	f7ff ffe2 	bl	80053f8 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8005434:	07b2      	lsls	r2, r6, #30
 8005436:	d516      	bpl.n	8005466 <HAL_LTDC_IRQHandler+0x6a>
 8005438:	07ab      	lsls	r3, r5, #30
 800543a:	d514      	bpl.n	8005466 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800543c:	6823      	ldr	r3, [r4, #0]
 800543e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005440:	f022 0202 	bic.w	r2, r2, #2
 8005444:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8005446:	2202      	movs	r2, #2
 8005448:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800544a:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 800544e:	4313      	orrs	r3, r2
 8005450:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005454:	2304      	movs	r3, #4
 8005456:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 800545a:	2300      	movs	r3, #0
 800545c:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005460:	4620      	mov	r0, r4
 8005462:	f7ff ffc9 	bl	80053f8 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8005466:	07f0      	lsls	r0, r6, #31
 8005468:	d510      	bpl.n	800548c <HAL_LTDC_IRQHandler+0x90>
 800546a:	07e9      	lsls	r1, r5, #31
 800546c:	d50e      	bpl.n	800548c <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800546e:	6823      	ldr	r3, [r4, #0]
 8005470:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005472:	f022 0201 	bic.w	r2, r2, #1
 8005476:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8005478:	2201      	movs	r2, #1
 800547a:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 800547c:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800547e:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005482:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8005486:	4620      	mov	r0, r4
 8005488:	f7fb fd70 	bl	8000f6c <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800548c:	0732      	lsls	r2, r6, #28
 800548e:	d511      	bpl.n	80054b4 <HAL_LTDC_IRQHandler+0xb8>
 8005490:	072b      	lsls	r3, r5, #28
 8005492:	d50f      	bpl.n	80054b4 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8005494:	6823      	ldr	r3, [r4, #0]
 8005496:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005498:	f022 0208 	bic.w	r2, r2, #8
 800549c:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800549e:	2208      	movs	r2, #8
 80054a0:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 80054a2:	2301      	movs	r3, #1
 80054a4:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 80054a8:	2300      	movs	r3, #0
 80054aa:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 80054ae:	4620      	mov	r0, r4
 80054b0:	f7ff ffa3 	bl	80053fa <HAL_LTDC_ReloadEventCallback>
}
 80054b4:	bd70      	pop	{r4, r5, r6, pc}

080054b6 <HAL_LTDC_ConfigLayer>:
{
 80054b6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 80054ba:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
 80054be:	2b01      	cmp	r3, #1
{
 80054c0:	4606      	mov	r6, r0
 80054c2:	460f      	mov	r7, r1
 80054c4:	4694      	mov	ip, r2
 80054c6:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 80054ca:	d01f      	beq.n	800550c <HAL_LTDC_ConfigLayer+0x56>
 80054cc:	f04f 0801 	mov.w	r8, #1
 80054d0:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80054d4:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80054d8:	2434      	movs	r4, #52	@ 0x34
 80054da:	460d      	mov	r5, r1
 80054dc:	fb04 6402 	mla	r4, r4, r2, r6
 80054e0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80054e2:	3438      	adds	r4, #56	@ 0x38
 80054e4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80054e6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80054e8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80054ea:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80054ec:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80054ee:	682b      	ldr	r3, [r5, #0]
 80054f0:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80054f2:	4630      	mov	r0, r6
 80054f4:	4662      	mov	r2, ip
 80054f6:	4639      	mov	r1, r7
 80054f8:	f7ff fe8c 	bl	8005214 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80054fc:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 80054fe:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005500:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8005504:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8005508:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 800550c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005510 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8005510:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
 8005514:	2a01      	cmp	r2, #1
{
 8005516:	4603      	mov	r3, r0
 8005518:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800551c:	d012      	beq.n	8005544 <HAL_LTDC_ProgramLineEvent+0x34>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800551e:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005520:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005524:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 8005526:	f020 0001 	bic.w	r0, r0, #1
 800552a:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800552c:	4806      	ldr	r0, [pc, #24]	@ (8005548 <HAL_LTDC_ProgramLineEvent+0x38>)
 800552e:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8005530:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8005532:	f041 0101 	orr.w	r1, r1, #1
 8005536:	6351      	str	r1, [r2, #52]	@ 0x34
  __HAL_UNLOCK(hltdc);
 8005538:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800553a:	2201      	movs	r2, #1
 800553c:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8005540:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
}
 8005544:	4770      	bx	lr
 8005546:	bf00      	nop
 8005548:	40016800 	.word	0x40016800

0800554c <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800554c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8005550:	4604      	mov	r4, r0
 8005552:	b340      	cbz	r0, 80055a6 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8005554:	6803      	ldr	r3, [r0, #0]
 8005556:	07de      	lsls	r6, r3, #31
 8005558:	d410      	bmi.n	800557c <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800555a:	6823      	ldr	r3, [r4, #0]
 800555c:	079d      	lsls	r5, r3, #30
 800555e:	d45b      	bmi.n	8005618 <HAL_RCC_OscConfig+0xcc>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8005560:	6823      	ldr	r3, [r4, #0]
 8005562:	0719      	lsls	r1, r3, #28
 8005564:	f100 809d 	bmi.w	80056a2 <HAL_RCC_OscConfig+0x156>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8005568:	6823      	ldr	r3, [r4, #0]
 800556a:	075a      	lsls	r2, r3, #29
 800556c:	f100 80bd 	bmi.w	80056ea <HAL_RCC_OscConfig+0x19e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8005570:	69a3      	ldr	r3, [r4, #24]
 8005572:	2b00      	cmp	r3, #0
 8005574:	f040 8124 	bne.w	80057c0 <HAL_RCC_OscConfig+0x274>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8005578:	2000      	movs	r0, #0
 800557a:	e02c      	b.n	80055d6 <HAL_RCC_OscConfig+0x8a>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800557c:	4b8d      	ldr	r3, [pc, #564]	@ (80057b4 <HAL_RCC_OscConfig+0x268>)
 800557e:	689a      	ldr	r2, [r3, #8]
 8005580:	f002 020c 	and.w	r2, r2, #12
 8005584:	2a04      	cmp	r2, #4
 8005586:	d007      	beq.n	8005598 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005588:	689a      	ldr	r2, [r3, #8]
 800558a:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800558e:	2a08      	cmp	r2, #8
 8005590:	d10b      	bne.n	80055aa <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005592:	685b      	ldr	r3, [r3, #4]
 8005594:	0259      	lsls	r1, r3, #9
 8005596:	d508      	bpl.n	80055aa <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005598:	4b86      	ldr	r3, [pc, #536]	@ (80057b4 <HAL_RCC_OscConfig+0x268>)
 800559a:	681b      	ldr	r3, [r3, #0]
 800559c:	039a      	lsls	r2, r3, #14
 800559e:	d5dc      	bpl.n	800555a <HAL_RCC_OscConfig+0xe>
 80055a0:	6863      	ldr	r3, [r4, #4]
 80055a2:	2b00      	cmp	r3, #0
 80055a4:	d1d9      	bne.n	800555a <HAL_RCC_OscConfig+0xe>
    return HAL_ERROR;
 80055a6:	2001      	movs	r0, #1
 80055a8:	e015      	b.n	80055d6 <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80055aa:	6863      	ldr	r3, [r4, #4]
 80055ac:	4d81      	ldr	r5, [pc, #516]	@ (80057b4 <HAL_RCC_OscConfig+0x268>)
 80055ae:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80055b2:	d113      	bne.n	80055dc <HAL_RCC_OscConfig+0x90>
 80055b4:	682b      	ldr	r3, [r5, #0]
 80055b6:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80055ba:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80055bc:	f7fe fd1e 	bl	8003ffc <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80055c0:	4e7c      	ldr	r6, [pc, #496]	@ (80057b4 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 80055c2:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80055c4:	6833      	ldr	r3, [r6, #0]
 80055c6:	039b      	lsls	r3, r3, #14
 80055c8:	d4c7      	bmi.n	800555a <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80055ca:	f7fe fd17 	bl	8003ffc <HAL_GetTick>
 80055ce:	1b40      	subs	r0, r0, r5
 80055d0:	2864      	cmp	r0, #100	@ 0x64
 80055d2:	d9f7      	bls.n	80055c4 <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 80055d4:	2003      	movs	r0, #3
}
 80055d6:	b002      	add	sp, #8
 80055d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80055dc:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80055e0:	d104      	bne.n	80055ec <HAL_RCC_OscConfig+0xa0>
 80055e2:	682b      	ldr	r3, [r5, #0]
 80055e4:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80055e8:	602b      	str	r3, [r5, #0]
 80055ea:	e7e3      	b.n	80055b4 <HAL_RCC_OscConfig+0x68>
 80055ec:	682a      	ldr	r2, [r5, #0]
 80055ee:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 80055f2:	602a      	str	r2, [r5, #0]
 80055f4:	682a      	ldr	r2, [r5, #0]
 80055f6:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 80055fa:	602a      	str	r2, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80055fc:	2b00      	cmp	r3, #0
 80055fe:	d1dd      	bne.n	80055bc <HAL_RCC_OscConfig+0x70>
        tickstart = HAL_GetTick();
 8005600:	f7fe fcfc 	bl	8003ffc <HAL_GetTick>
 8005604:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8005606:	682b      	ldr	r3, [r5, #0]
 8005608:	039f      	lsls	r7, r3, #14
 800560a:	d5a6      	bpl.n	800555a <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800560c:	f7fe fcf6 	bl	8003ffc <HAL_GetTick>
 8005610:	1b80      	subs	r0, r0, r6
 8005612:	2864      	cmp	r0, #100	@ 0x64
 8005614:	d9f7      	bls.n	8005606 <HAL_RCC_OscConfig+0xba>
 8005616:	e7dd      	b.n	80055d4 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8005618:	4b66      	ldr	r3, [pc, #408]	@ (80057b4 <HAL_RCC_OscConfig+0x268>)
 800561a:	689a      	ldr	r2, [r3, #8]
 800561c:	f012 0f0c 	tst.w	r2, #12
 8005620:	d007      	beq.n	8005632 <HAL_RCC_OscConfig+0xe6>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005622:	689a      	ldr	r2, [r3, #8]
 8005624:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8005628:	2a08      	cmp	r2, #8
 800562a:	d111      	bne.n	8005650 <HAL_RCC_OscConfig+0x104>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800562c:	685b      	ldr	r3, [r3, #4]
 800562e:	025d      	lsls	r5, r3, #9
 8005630:	d40e      	bmi.n	8005650 <HAL_RCC_OscConfig+0x104>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005632:	4a60      	ldr	r2, [pc, #384]	@ (80057b4 <HAL_RCC_OscConfig+0x268>)
 8005634:	6813      	ldr	r3, [r2, #0]
 8005636:	0799      	lsls	r1, r3, #30
 8005638:	d502      	bpl.n	8005640 <HAL_RCC_OscConfig+0xf4>
 800563a:	68e3      	ldr	r3, [r4, #12]
 800563c:	2b01      	cmp	r3, #1
 800563e:	d1b2      	bne.n	80055a6 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005640:	6813      	ldr	r3, [r2, #0]
 8005642:	6921      	ldr	r1, [r4, #16]
 8005644:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8005648:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800564c:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800564e:	e787      	b.n	8005560 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8005650:	68e2      	ldr	r2, [r4, #12]
 8005652:	4b59      	ldr	r3, [pc, #356]	@ (80057b8 <HAL_RCC_OscConfig+0x26c>)
 8005654:	b1b2      	cbz	r2, 8005684 <HAL_RCC_OscConfig+0x138>
        __HAL_RCC_HSI_ENABLE();
 8005656:	2201      	movs	r2, #1
 8005658:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800565a:	f7fe fccf 	bl	8003ffc <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800565e:	4d55      	ldr	r5, [pc, #340]	@ (80057b4 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8005660:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005662:	682b      	ldr	r3, [r5, #0]
 8005664:	079b      	lsls	r3, r3, #30
 8005666:	d507      	bpl.n	8005678 <HAL_RCC_OscConfig+0x12c>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005668:	682b      	ldr	r3, [r5, #0]
 800566a:	6922      	ldr	r2, [r4, #16]
 800566c:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8005670:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8005674:	602b      	str	r3, [r5, #0]
 8005676:	e773      	b.n	8005560 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8005678:	f7fe fcc0 	bl	8003ffc <HAL_GetTick>
 800567c:	1b80      	subs	r0, r0, r6
 800567e:	2802      	cmp	r0, #2
 8005680:	d9ef      	bls.n	8005662 <HAL_RCC_OscConfig+0x116>
 8005682:	e7a7      	b.n	80055d4 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 8005684:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8005686:	f7fe fcb9 	bl	8003ffc <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800568a:	4e4a      	ldr	r6, [pc, #296]	@ (80057b4 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 800568c:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800568e:	6833      	ldr	r3, [r6, #0]
 8005690:	079f      	lsls	r7, r3, #30
 8005692:	f57f af65 	bpl.w	8005560 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8005696:	f7fe fcb1 	bl	8003ffc <HAL_GetTick>
 800569a:	1b40      	subs	r0, r0, r5
 800569c:	2802      	cmp	r0, #2
 800569e:	d9f6      	bls.n	800568e <HAL_RCC_OscConfig+0x142>
 80056a0:	e798      	b.n	80055d4 <HAL_RCC_OscConfig+0x88>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 80056a2:	6962      	ldr	r2, [r4, #20]
 80056a4:	4b44      	ldr	r3, [pc, #272]	@ (80057b8 <HAL_RCC_OscConfig+0x26c>)
 80056a6:	b182      	cbz	r2, 80056ca <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 80056a8:	2201      	movs	r2, #1
 80056aa:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 80056ae:	f7fe fca5 	bl	8003ffc <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80056b2:	4e40      	ldr	r6, [pc, #256]	@ (80057b4 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 80056b4:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80056b6:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 80056b8:	079b      	lsls	r3, r3, #30
 80056ba:	f53f af55 	bmi.w	8005568 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80056be:	f7fe fc9d 	bl	8003ffc <HAL_GetTick>
 80056c2:	1b40      	subs	r0, r0, r5
 80056c4:	2802      	cmp	r0, #2
 80056c6:	d9f6      	bls.n	80056b6 <HAL_RCC_OscConfig+0x16a>
 80056c8:	e784      	b.n	80055d4 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 80056ca:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 80056ce:	f7fe fc95 	bl	8003ffc <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80056d2:	4e38      	ldr	r6, [pc, #224]	@ (80057b4 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 80056d4:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80056d6:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 80056d8:	079f      	lsls	r7, r3, #30
 80056da:	f57f af45 	bpl.w	8005568 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80056de:	f7fe fc8d 	bl	8003ffc <HAL_GetTick>
 80056e2:	1b40      	subs	r0, r0, r5
 80056e4:	2802      	cmp	r0, #2
 80056e6:	d9f6      	bls.n	80056d6 <HAL_RCC_OscConfig+0x18a>
 80056e8:	e774      	b.n	80055d4 <HAL_RCC_OscConfig+0x88>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80056ea:	4b32      	ldr	r3, [pc, #200]	@ (80057b4 <HAL_RCC_OscConfig+0x268>)
 80056ec:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80056ee:	f012 5280 	ands.w	r2, r2, #268435456	@ 0x10000000
 80056f2:	d128      	bne.n	8005746 <HAL_RCC_OscConfig+0x1fa>
      __HAL_RCC_PWR_CLK_ENABLE();
 80056f4:	9201      	str	r2, [sp, #4]
 80056f6:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80056f8:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 80056fc:	641a      	str	r2, [r3, #64]	@ 0x40
 80056fe:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005700:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005704:	9301      	str	r3, [sp, #4]
 8005706:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8005708:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800570a:	4d2c      	ldr	r5, [pc, #176]	@ (80057bc <HAL_RCC_OscConfig+0x270>)
 800570c:	682b      	ldr	r3, [r5, #0]
 800570e:	05d8      	lsls	r0, r3, #23
 8005710:	d51b      	bpl.n	800574a <HAL_RCC_OscConfig+0x1fe>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005712:	68a3      	ldr	r3, [r4, #8]
 8005714:	4d27      	ldr	r5, [pc, #156]	@ (80057b4 <HAL_RCC_OscConfig+0x268>)
 8005716:	2b01      	cmp	r3, #1
 8005718:	d127      	bne.n	800576a <HAL_RCC_OscConfig+0x21e>
 800571a:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800571c:	f043 0301 	orr.w	r3, r3, #1
 8005720:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
 8005722:	f7fe fc6b 	bl	8003ffc <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005726:	4e23      	ldr	r6, [pc, #140]	@ (80057b4 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8005728:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800572a:	f241 3888 	movw	r8, #5000	@ 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800572e:	6f33      	ldr	r3, [r6, #112]	@ 0x70
 8005730:	079a      	lsls	r2, r3, #30
 8005732:	d539      	bpl.n	80057a8 <HAL_RCC_OscConfig+0x25c>
    if(pwrclkchanged == SET)
 8005734:	2f00      	cmp	r7, #0
 8005736:	f43f af1b 	beq.w	8005570 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 800573a:	4a1e      	ldr	r2, [pc, #120]	@ (80057b4 <HAL_RCC_OscConfig+0x268>)
 800573c:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 800573e:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8005742:	6413      	str	r3, [r2, #64]	@ 0x40
 8005744:	e714      	b.n	8005570 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 8005746:	2700      	movs	r7, #0
 8005748:	e7df      	b.n	800570a <HAL_RCC_OscConfig+0x1be>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800574a:	682b      	ldr	r3, [r5, #0]
 800574c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005750:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8005752:	f7fe fc53 	bl	8003ffc <HAL_GetTick>
 8005756:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005758:	682b      	ldr	r3, [r5, #0]
 800575a:	05d9      	lsls	r1, r3, #23
 800575c:	d4d9      	bmi.n	8005712 <HAL_RCC_OscConfig+0x1c6>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800575e:	f7fe fc4d 	bl	8003ffc <HAL_GetTick>
 8005762:	1b80      	subs	r0, r0, r6
 8005764:	2802      	cmp	r0, #2
 8005766:	d9f7      	bls.n	8005758 <HAL_RCC_OscConfig+0x20c>
 8005768:	e734      	b.n	80055d4 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800576a:	2b05      	cmp	r3, #5
 800576c:	d104      	bne.n	8005778 <HAL_RCC_OscConfig+0x22c>
 800576e:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005770:	f043 0304 	orr.w	r3, r3, #4
 8005774:	672b      	str	r3, [r5, #112]	@ 0x70
 8005776:	e7d0      	b.n	800571a <HAL_RCC_OscConfig+0x1ce>
 8005778:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 800577a:	f022 0201 	bic.w	r2, r2, #1
 800577e:	672a      	str	r2, [r5, #112]	@ 0x70
 8005780:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 8005782:	f022 0204 	bic.w	r2, r2, #4
 8005786:	672a      	str	r2, [r5, #112]	@ 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8005788:	2b00      	cmp	r3, #0
 800578a:	d1ca      	bne.n	8005722 <HAL_RCC_OscConfig+0x1d6>
      tickstart = HAL_GetTick();
 800578c:	f7fe fc36 	bl	8003ffc <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005790:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 8005794:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005796:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005798:	079b      	lsls	r3, r3, #30
 800579a:	d5cb      	bpl.n	8005734 <HAL_RCC_OscConfig+0x1e8>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800579c:	f7fe fc2e 	bl	8003ffc <HAL_GetTick>
 80057a0:	1b80      	subs	r0, r0, r6
 80057a2:	4540      	cmp	r0, r8
 80057a4:	d9f7      	bls.n	8005796 <HAL_RCC_OscConfig+0x24a>
 80057a6:	e715      	b.n	80055d4 <HAL_RCC_OscConfig+0x88>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80057a8:	f7fe fc28 	bl	8003ffc <HAL_GetTick>
 80057ac:	1b40      	subs	r0, r0, r5
 80057ae:	4540      	cmp	r0, r8
 80057b0:	d9bd      	bls.n	800572e <HAL_RCC_OscConfig+0x1e2>
 80057b2:	e70f      	b.n	80055d4 <HAL_RCC_OscConfig+0x88>
 80057b4:	40023800 	.word	0x40023800
 80057b8:	42470000 	.word	0x42470000
 80057bc:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 80057c0:	4d37      	ldr	r5, [pc, #220]	@ (80058a0 <HAL_RCC_OscConfig+0x354>)
 80057c2:	68aa      	ldr	r2, [r5, #8]
 80057c4:	f002 020c 	and.w	r2, r2, #12
 80057c8:	2a08      	cmp	r2, #8
 80057ca:	d03e      	beq.n	800584a <HAL_RCC_OscConfig+0x2fe>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80057cc:	2b02      	cmp	r3, #2
 80057ce:	4b35      	ldr	r3, [pc, #212]	@ (80058a4 <HAL_RCC_OscConfig+0x358>)
 80057d0:	f04f 0200 	mov.w	r2, #0
        __HAL_RCC_PLL_DISABLE();
 80057d4:	661a      	str	r2, [r3, #96]	@ 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80057d6:	d12b      	bne.n	8005830 <HAL_RCC_OscConfig+0x2e4>
        tickstart = HAL_GetTick();
 80057d8:	f7fe fc10 	bl	8003ffc <HAL_GetTick>
 80057dc:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80057de:	682b      	ldr	r3, [r5, #0]
 80057e0:	0199      	lsls	r1, r3, #6
 80057e2:	d41f      	bmi.n	8005824 <HAL_RCC_OscConfig+0x2d8>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 80057e4:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 80057e8:	4313      	orrs	r3, r2
 80057ea:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 80057ec:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80057f0:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80057f2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80057f6:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 80057f8:	0852      	lsrs	r2, r2, #1
 80057fa:	3a01      	subs	r2, #1
 80057fc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005800:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8005802:	4b28      	ldr	r3, [pc, #160]	@ (80058a4 <HAL_RCC_OscConfig+0x358>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005804:	4d26      	ldr	r5, [pc, #152]	@ (80058a0 <HAL_RCC_OscConfig+0x354>)
        __HAL_RCC_PLL_ENABLE();
 8005806:	2201      	movs	r2, #1
 8005808:	661a      	str	r2, [r3, #96]	@ 0x60
        tickstart = HAL_GetTick();
 800580a:	f7fe fbf7 	bl	8003ffc <HAL_GetTick>
 800580e:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005810:	682b      	ldr	r3, [r5, #0]
 8005812:	019a      	lsls	r2, r3, #6
 8005814:	f53f aeb0 	bmi.w	8005578 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8005818:	f7fe fbf0 	bl	8003ffc <HAL_GetTick>
 800581c:	1b00      	subs	r0, r0, r4
 800581e:	2802      	cmp	r0, #2
 8005820:	d9f6      	bls.n	8005810 <HAL_RCC_OscConfig+0x2c4>
 8005822:	e6d7      	b.n	80055d4 <HAL_RCC_OscConfig+0x88>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8005824:	f7fe fbea 	bl	8003ffc <HAL_GetTick>
 8005828:	1b80      	subs	r0, r0, r6
 800582a:	2802      	cmp	r0, #2
 800582c:	d9d7      	bls.n	80057de <HAL_RCC_OscConfig+0x292>
 800582e:	e6d1      	b.n	80055d4 <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 8005830:	f7fe fbe4 	bl	8003ffc <HAL_GetTick>
 8005834:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005836:	682b      	ldr	r3, [r5, #0]
 8005838:	019b      	lsls	r3, r3, #6
 800583a:	f57f ae9d 	bpl.w	8005578 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800583e:	f7fe fbdd 	bl	8003ffc <HAL_GetTick>
 8005842:	1b00      	subs	r0, r0, r4
 8005844:	2802      	cmp	r0, #2
 8005846:	d9f6      	bls.n	8005836 <HAL_RCC_OscConfig+0x2ea>
 8005848:	e6c4      	b.n	80055d4 <HAL_RCC_OscConfig+0x88>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800584a:	2b01      	cmp	r3, #1
 800584c:	f43f aeab 	beq.w	80055a6 <HAL_RCC_OscConfig+0x5a>
        pll_config = RCC->PLLCFGR;
 8005850:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005852:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005854:	f403 0180 	and.w	r1, r3, #4194304	@ 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005858:	4291      	cmp	r1, r2
 800585a:	f47f aea4 	bne.w	80055a6 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800585e:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8005860:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005864:	428a      	cmp	r2, r1
 8005866:	f47f ae9e 	bne.w	80055a6 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800586a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800586c:	f647 72c0 	movw	r2, #32704	@ 0x7fc0
 8005870:	401a      	ands	r2, r3
 8005872:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 8005876:	f47f ae96 	bne.w	80055a6 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800587a:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800587c:	0852      	lsrs	r2, r2, #1
 800587e:	f403 3140 	and.w	r1, r3, #196608	@ 0x30000
 8005882:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8005884:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8005888:	f47f ae8d 	bne.w	80055a6 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800588c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800588e:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8005892:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 8005896:	bf14      	ite	ne
 8005898:	2001      	movne	r0, #1
 800589a:	2000      	moveq	r0, #0
 800589c:	e69b      	b.n	80055d6 <HAL_RCC_OscConfig+0x8a>
 800589e:	bf00      	nop
 80058a0:	40023800 	.word	0x40023800
 80058a4:	42470000 	.word	0x42470000

080058a8 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80058a8:	4913      	ldr	r1, [pc, #76]	@ (80058f8 <HAL_RCC_GetSysClockFreq+0x50>)
{
 80058aa:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80058ac:	688b      	ldr	r3, [r1, #8]
 80058ae:	f003 030c 	and.w	r3, r3, #12
 80058b2:	2b04      	cmp	r3, #4
 80058b4:	d01c      	beq.n	80058f0 <HAL_RCC_GetSysClockFreq+0x48>
 80058b6:	2b08      	cmp	r3, #8
 80058b8:	d11c      	bne.n	80058f4 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80058ba:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80058bc:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80058be:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80058c0:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80058c4:	bf14      	ite	ne
 80058c6:	480d      	ldrne	r0, [pc, #52]	@ (80058fc <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80058c8:	480d      	ldreq	r0, [pc, #52]	@ (8005900 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80058ca:	f3c1 1188 	ubfx	r1, r1, #6, #9
 80058ce:	bf18      	it	ne
 80058d0:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80058d2:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80058d6:	fba1 0100 	umull	r0, r1, r1, r0
 80058da:	f7fa fce1 	bl	80002a0 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 80058de:	4b06      	ldr	r3, [pc, #24]	@ (80058f8 <HAL_RCC_GetSysClockFreq+0x50>)
 80058e0:	685b      	ldr	r3, [r3, #4]
 80058e2:	f3c3 4301 	ubfx	r3, r3, #16, #2
 80058e6:	3301      	adds	r3, #1
 80058e8:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 80058ea:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 80058ee:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80058f0:	4802      	ldr	r0, [pc, #8]	@ (80058fc <HAL_RCC_GetSysClockFreq+0x54>)
 80058f2:	e7fc      	b.n	80058ee <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 80058f4:	4802      	ldr	r0, [pc, #8]	@ (8005900 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 80058f6:	e7fa      	b.n	80058ee <HAL_RCC_GetSysClockFreq+0x46>
 80058f8:	40023800 	.word	0x40023800
 80058fc:	007a1200 	.word	0x007a1200
 8005900:	00f42400 	.word	0x00f42400

08005904 <HAL_RCC_ClockConfig>:
{
 8005904:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005908:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 800590a:	4604      	mov	r4, r0
 800590c:	b910      	cbnz	r0, 8005914 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 800590e:	2001      	movs	r0, #1
}
 8005910:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8005914:	4b43      	ldr	r3, [pc, #268]	@ (8005a24 <HAL_RCC_ClockConfig+0x120>)
 8005916:	681a      	ldr	r2, [r3, #0]
 8005918:	f002 020f 	and.w	r2, r2, #15
 800591c:	428a      	cmp	r2, r1
 800591e:	d328      	bcc.n	8005972 <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8005920:	6821      	ldr	r1, [r4, #0]
 8005922:	078f      	lsls	r7, r1, #30
 8005924:	d42d      	bmi.n	8005982 <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8005926:	07c8      	lsls	r0, r1, #31
 8005928:	d440      	bmi.n	80059ac <HAL_RCC_ClockConfig+0xa8>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800592a:	4b3e      	ldr	r3, [pc, #248]	@ (8005a24 <HAL_RCC_ClockConfig+0x120>)
 800592c:	681a      	ldr	r2, [r3, #0]
 800592e:	f002 020f 	and.w	r2, r2, #15
 8005932:	42aa      	cmp	r2, r5
 8005934:	d865      	bhi.n	8005a02 <HAL_RCC_ClockConfig+0xfe>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005936:	6822      	ldr	r2, [r4, #0]
 8005938:	0751      	lsls	r1, r2, #29
 800593a:	d46b      	bmi.n	8005a14 <HAL_RCC_ClockConfig+0x110>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800593c:	0713      	lsls	r3, r2, #28
 800593e:	d507      	bpl.n	8005950 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8005940:	4a39      	ldr	r2, [pc, #228]	@ (8005a28 <HAL_RCC_ClockConfig+0x124>)
 8005942:	6921      	ldr	r1, [r4, #16]
 8005944:	6893      	ldr	r3, [r2, #8]
 8005946:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 800594a:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800594e:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8005950:	f7ff ffaa 	bl	80058a8 <HAL_RCC_GetSysClockFreq>
 8005954:	4b34      	ldr	r3, [pc, #208]	@ (8005a28 <HAL_RCC_ClockConfig+0x124>)
 8005956:	4a35      	ldr	r2, [pc, #212]	@ (8005a2c <HAL_RCC_ClockConfig+0x128>)
 8005958:	689b      	ldr	r3, [r3, #8]
 800595a:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800595e:	5cd3      	ldrb	r3, [r2, r3]
 8005960:	40d8      	lsrs	r0, r3
 8005962:	4b33      	ldr	r3, [pc, #204]	@ (8005a30 <HAL_RCC_ClockConfig+0x12c>)
 8005964:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8005966:	4b33      	ldr	r3, [pc, #204]	@ (8005a34 <HAL_RCC_ClockConfig+0x130>)
 8005968:	6818      	ldr	r0, [r3, #0]
 800596a:	f7fc fa0d 	bl	8001d88 <HAL_InitTick>
  return HAL_OK;
 800596e:	2000      	movs	r0, #0
 8005970:	e7ce      	b.n	8005910 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005972:	b2ca      	uxtb	r2, r1
 8005974:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8005976:	681b      	ldr	r3, [r3, #0]
 8005978:	f003 030f 	and.w	r3, r3, #15
 800597c:	428b      	cmp	r3, r1
 800597e:	d1c6      	bne.n	800590e <HAL_RCC_ClockConfig+0xa>
 8005980:	e7ce      	b.n	8005920 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005982:	4b29      	ldr	r3, [pc, #164]	@ (8005a28 <HAL_RCC_ClockConfig+0x124>)
 8005984:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8005988:	bf1e      	ittt	ne
 800598a:	689a      	ldrne	r2, [r3, #8]
 800598c:	f442 52e0 	orrne.w	r2, r2, #7168	@ 0x1c00
 8005990:	609a      	strne	r2, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005992:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8005994:	bf42      	ittt	mi
 8005996:	689a      	ldrmi	r2, [r3, #8]
 8005998:	f442 4260 	orrmi.w	r2, r2, #57344	@ 0xe000
 800599c:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800599e:	689a      	ldr	r2, [r3, #8]
 80059a0:	68a0      	ldr	r0, [r4, #8]
 80059a2:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 80059a6:	4302      	orrs	r2, r0
 80059a8:	609a      	str	r2, [r3, #8]
 80059aa:	e7bc      	b.n	8005926 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80059ac:	6862      	ldr	r2, [r4, #4]
 80059ae:	4b1e      	ldr	r3, [pc, #120]	@ (8005a28 <HAL_RCC_ClockConfig+0x124>)
 80059b0:	2a01      	cmp	r2, #1
 80059b2:	d11c      	bne.n	80059ee <HAL_RCC_ClockConfig+0xea>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80059b4:	681b      	ldr	r3, [r3, #0]
 80059b6:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80059ba:	d0a8      	beq.n	800590e <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80059bc:	4e1a      	ldr	r6, [pc, #104]	@ (8005a28 <HAL_RCC_ClockConfig+0x124>)
 80059be:	68b3      	ldr	r3, [r6, #8]
 80059c0:	f023 0303 	bic.w	r3, r3, #3
 80059c4:	4313      	orrs	r3, r2
 80059c6:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 80059c8:	f7fe fb18 	bl	8003ffc <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80059cc:	f241 3888 	movw	r8, #5000	@ 0x1388
    tickstart = HAL_GetTick();
 80059d0:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80059d2:	68b3      	ldr	r3, [r6, #8]
 80059d4:	6862      	ldr	r2, [r4, #4]
 80059d6:	f003 030c 	and.w	r3, r3, #12
 80059da:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 80059de:	d0a4      	beq.n	800592a <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80059e0:	f7fe fb0c 	bl	8003ffc <HAL_GetTick>
 80059e4:	1bc0      	subs	r0, r0, r7
 80059e6:	4540      	cmp	r0, r8
 80059e8:	d9f3      	bls.n	80059d2 <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 80059ea:	2003      	movs	r0, #3
 80059ec:	e790      	b.n	8005910 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80059ee:	1e91      	subs	r1, r2, #2
 80059f0:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80059f2:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80059f4:	d802      	bhi.n	80059fc <HAL_RCC_ClockConfig+0xf8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80059f6:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
 80059fa:	e7de      	b.n	80059ba <HAL_RCC_ClockConfig+0xb6>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80059fc:	f013 0f02 	tst.w	r3, #2
 8005a00:	e7db      	b.n	80059ba <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005a02:	b2ea      	uxtb	r2, r5
 8005a04:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8005a06:	681b      	ldr	r3, [r3, #0]
 8005a08:	f003 030f 	and.w	r3, r3, #15
 8005a0c:	42ab      	cmp	r3, r5
 8005a0e:	f47f af7e 	bne.w	800590e <HAL_RCC_ClockConfig+0xa>
 8005a12:	e790      	b.n	8005936 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8005a14:	4904      	ldr	r1, [pc, #16]	@ (8005a28 <HAL_RCC_ClockConfig+0x124>)
 8005a16:	68e0      	ldr	r0, [r4, #12]
 8005a18:	688b      	ldr	r3, [r1, #8]
 8005a1a:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 8005a1e:	4303      	orrs	r3, r0
 8005a20:	608b      	str	r3, [r1, #8]
 8005a22:	e78b      	b.n	800593c <HAL_RCC_ClockConfig+0x38>
 8005a24:	40023c00 	.word	0x40023c00
 8005a28:	40023800 	.word	0x40023800
 8005a2c:	0801f9c0 	.word	0x0801f9c0
 8005a30:	20000074 	.word	0x20000074
 8005a34:	2000007c 	.word	0x2000007c

08005a38 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8005a38:	4b04      	ldr	r3, [pc, #16]	@ (8005a4c <HAL_RCC_GetPCLK1Freq+0x14>)
 8005a3a:	4a05      	ldr	r2, [pc, #20]	@ (8005a50 <HAL_RCC_GetPCLK1Freq+0x18>)
 8005a3c:	689b      	ldr	r3, [r3, #8]
 8005a3e:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8005a42:	5cd3      	ldrb	r3, [r2, r3]
 8005a44:	4a03      	ldr	r2, [pc, #12]	@ (8005a54 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8005a46:	6810      	ldr	r0, [r2, #0]
}
 8005a48:	40d8      	lsrs	r0, r3
 8005a4a:	4770      	bx	lr
 8005a4c:	40023800 	.word	0x40023800
 8005a50:	0801f9b8 	.word	0x0801f9b8
 8005a54:	20000074 	.word	0x20000074

08005a58 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 8005a58:	4b04      	ldr	r3, [pc, #16]	@ (8005a6c <HAL_RCC_GetPCLK2Freq+0x14>)
 8005a5a:	4a05      	ldr	r2, [pc, #20]	@ (8005a70 <HAL_RCC_GetPCLK2Freq+0x18>)
 8005a5c:	689b      	ldr	r3, [r3, #8]
 8005a5e:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8005a62:	5cd3      	ldrb	r3, [r2, r3]
 8005a64:	4a03      	ldr	r2, [pc, #12]	@ (8005a74 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8005a66:	6810      	ldr	r0, [r2, #0]
}
 8005a68:	40d8      	lsrs	r0, r3
 8005a6a:	4770      	bx	lr
 8005a6c:	40023800 	.word	0x40023800
 8005a70:	0801f9b8 	.word	0x0801f9b8
 8005a74:	20000074 	.word	0x20000074

08005a78 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8005a78:	230f      	movs	r3, #15
 8005a7a:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8005a7c:	4b0b      	ldr	r3, [pc, #44]	@ (8005aac <HAL_RCC_GetClockConfig+0x34>)
 8005a7e:	689a      	ldr	r2, [r3, #8]
 8005a80:	f002 0203 	and.w	r2, r2, #3
 8005a84:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8005a86:	689a      	ldr	r2, [r3, #8]
 8005a88:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 8005a8c:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8005a8e:	689a      	ldr	r2, [r3, #8]
 8005a90:	f402 52e0 	and.w	r2, r2, #7168	@ 0x1c00
 8005a94:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8005a96:	689b      	ldr	r3, [r3, #8]
 8005a98:	08db      	lsrs	r3, r3, #3
 8005a9a:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 8005a9e:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8005aa0:	4b03      	ldr	r3, [pc, #12]	@ (8005ab0 <HAL_RCC_GetClockConfig+0x38>)
 8005aa2:	681b      	ldr	r3, [r3, #0]
 8005aa4:	f003 030f 	and.w	r3, r3, #15
 8005aa8:	600b      	str	r3, [r1, #0]
}
 8005aaa:	4770      	bx	lr
 8005aac:	40023800 	.word	0x40023800
 8005ab0:	40023c00 	.word	0x40023c00

08005ab4 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8005ab4:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8005ab6:	f013 0f43 	tst.w	r3, #67	@ 0x43
{
 8005aba:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005abc:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8005abe:	f040 8088 	bne.w	8005bd2 <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8005ac2:	6823      	ldr	r3, [r4, #0]
 8005ac4:	f013 0f0c 	tst.w	r3, #12
 8005ac8:	d045      	beq.n	8005b56 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8005aca:	4b8c      	ldr	r3, [pc, #560]	@ (8005cfc <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8005acc:	4d8c      	ldr	r5, [pc, #560]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_DISABLE();
 8005ace:	2200      	movs	r2, #0
 8005ad0:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 8005ad2:	f7fe fa93 	bl	8003ffc <HAL_GetTick>
 8005ad6:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8005ad8:	682b      	ldr	r3, [r5, #0]
 8005ada:	0099      	lsls	r1, r3, #2
 8005adc:	f100 80cb 	bmi.w	8005c76 <HAL_RCCEx_PeriphCLKConfig+0x1c2>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8005ae0:	6821      	ldr	r1, [r4, #0]
 8005ae2:	074a      	lsls	r2, r1, #29
 8005ae4:	d515      	bpl.n	8005b12 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8005ae6:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8005aea:	f8d5 2088 	ldr.w	r2, [r5, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8005aee:	061b      	lsls	r3, r3, #24
 8005af0:	f002 42e0 	and.w	r2, r2, #1879048192	@ 0x70000000
 8005af4:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8005af8:	4313      	orrs	r3, r2
 8005afa:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8005afe:	f8d5 308c 	ldr.w	r3, [r5, #140]	@ 0x8c
 8005b02:	6a22      	ldr	r2, [r4, #32]
 8005b04:	f423 53f8 	bic.w	r3, r3, #7936	@ 0x1f00
 8005b08:	3a01      	subs	r2, #1
 8005b0a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8005b0e:	f8c5 308c 	str.w	r3, [r5, #140]	@ 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8005b12:	070b      	lsls	r3, r1, #28
 8005b14:	d514      	bpl.n	8005b40 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8005b16:	4a7a      	ldr	r2, [pc, #488]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8005b18:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8005b1a:	f8d2 1088 	ldr.w	r1, [r2, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8005b1e:	6920      	ldr	r0, [r4, #16]
 8005b20:	071b      	lsls	r3, r3, #28
 8005b22:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 8005b26:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8005b2a:	430b      	orrs	r3, r1
 8005b2c:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8005b30:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 8005b34:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8005b36:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 8005b3a:	430b      	orrs	r3, r1
 8005b3c:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8005b40:	4b6e      	ldr	r3, [pc, #440]	@ (8005cfc <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8005b42:	4e6f      	ldr	r6, [pc, #444]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_ENABLE();
 8005b44:	2201      	movs	r2, #1
 8005b46:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 8005b48:	f7fe fa58 	bl	8003ffc <HAL_GetTick>
 8005b4c:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8005b4e:	6833      	ldr	r3, [r6, #0]
 8005b50:	009f      	lsls	r7, r3, #2
 8005b52:	f140 8097 	bpl.w	8005c84 <HAL_RCCEx_PeriphCLKConfig+0x1d0>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8005b56:	6823      	ldr	r3, [r4, #0]
 8005b58:	0698      	lsls	r0, r3, #26
 8005b5a:	d534      	bpl.n	8005bc6 <HAL_RCCEx_PeriphCLKConfig+0x112>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8005b5c:	2300      	movs	r3, #0
 8005b5e:	9301      	str	r3, [sp, #4]
 8005b60:	4b67      	ldr	r3, [pc, #412]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x24c>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8005b62:	4d68      	ldr	r5, [pc, #416]	@ (8005d04 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8005b64:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8005b66:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8005b6a:	641a      	str	r2, [r3, #64]	@ 0x40
 8005b6c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005b6e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005b72:	9301      	str	r3, [sp, #4]
 8005b74:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8005b76:	682b      	ldr	r3, [r5, #0]
 8005b78:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005b7c:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8005b7e:	f7fe fa3d 	bl	8003ffc <HAL_GetTick>
 8005b82:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8005b84:	682b      	ldr	r3, [r5, #0]
 8005b86:	05d8      	lsls	r0, r3, #23
 8005b88:	f140 8083 	bpl.w	8005c92 <HAL_RCCEx_PeriphCLKConfig+0x1de>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8005b8c:	4d5c      	ldr	r5, [pc, #368]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8005b8e:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8005b90:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8005b92:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 8005b96:	f040 8083 	bne.w	8005ca0 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8005b9a:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8005b9c:	f403 7240 	and.w	r2, r3, #768	@ 0x300
 8005ba0:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
 8005ba4:	4a56      	ldr	r2, [pc, #344]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 8005ba6:	f040 809e 	bne.w	8005ce6 <HAL_RCCEx_PeriphCLKConfig+0x232>
 8005baa:	6891      	ldr	r1, [r2, #8]
 8005bac:	f023 4070 	bic.w	r0, r3, #4026531840	@ 0xf0000000
 8005bb0:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8005bb4:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
 8005bb8:	4301      	orrs	r1, r0
 8005bba:	6091      	str	r1, [r2, #8]
 8005bbc:	6f11      	ldr	r1, [r2, #112]	@ 0x70
 8005bbe:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005bc2:	430b      	orrs	r3, r1
 8005bc4:	6713      	str	r3, [r2, #112]	@ 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8005bc6:	6823      	ldr	r3, [r4, #0]
 8005bc8:	06db      	lsls	r3, r3, #27
 8005bca:	f100 8090 	bmi.w	8005cee <HAL_RCCEx_PeriphCLKConfig+0x23a>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
 8005bce:	2000      	movs	r0, #0
 8005bd0:	e04f      	b.n	8005c72 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 8005bd2:	4b4a      	ldr	r3, [pc, #296]	@ (8005cfc <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005bd4:	4e4a      	ldr	r6, [pc, #296]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_DISABLE();
 8005bd6:	2200      	movs	r2, #0
 8005bd8:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 8005bda:	f7fe fa0f 	bl	8003ffc <HAL_GetTick>
 8005bde:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005be0:	6833      	ldr	r3, [r6, #0]
 8005be2:	011f      	lsls	r7, r3, #4
 8005be4:	d43f      	bmi.n	8005c66 <HAL_RCCEx_PeriphCLKConfig+0x1b2>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8005be6:	6821      	ldr	r1, [r4, #0]
 8005be8:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8005bea:	bf41      	itttt	mi
 8005bec:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8005bf0:	071b      	lslmi	r3, r3, #28
 8005bf2:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8005bf6:	f8c6 3084 	strmi.w	r3, [r6, #132]	@ 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8005bfa:	078a      	lsls	r2, r1, #30
 8005bfc:	d515      	bpl.n	8005c2a <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8005bfe:	4a40      	ldr	r2, [pc, #256]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8005c00:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8005c02:	f8d2 0084 	ldr.w	r0, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8005c06:	6865      	ldr	r5, [r4, #4]
 8005c08:	061b      	lsls	r3, r3, #24
 8005c0a:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 8005c0e:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8005c12:	4303      	orrs	r3, r0
 8005c14:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8005c18:	f8d2 008c 	ldr.w	r0, [r2, #140]	@ 0x8c
 8005c1c:	69e3      	ldr	r3, [r4, #28]
 8005c1e:	f020 001f 	bic.w	r0, r0, #31
 8005c22:	3b01      	subs	r3, #1
 8005c24:	4303      	orrs	r3, r0
 8005c26:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8005c2a:	064b      	lsls	r3, r1, #25
 8005c2c:	d50a      	bpl.n	8005c44 <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8005c2e:	68e3      	ldr	r3, [r4, #12]
 8005c30:	6862      	ldr	r2, [r4, #4]
 8005c32:	061b      	lsls	r3, r3, #24
 8005c34:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8005c38:	68a2      	ldr	r2, [r4, #8]
 8005c3a:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8005c3e:	4a30      	ldr	r2, [pc, #192]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 8005c40:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8005c44:	4b2d      	ldr	r3, [pc, #180]	@ (8005cfc <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8005c46:	4e2e      	ldr	r6, [pc, #184]	@ (8005d00 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_ENABLE();
 8005c48:	2201      	movs	r2, #1
 8005c4a:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 8005c4c:	f7fe f9d6 	bl	8003ffc <HAL_GetTick>
 8005c50:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8005c52:	6833      	ldr	r3, [r6, #0]
 8005c54:	011f      	lsls	r7, r3, #4
 8005c56:	f53f af34 	bmi.w	8005ac2 <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8005c5a:	f7fe f9cf 	bl	8003ffc <HAL_GetTick>
 8005c5e:	1b40      	subs	r0, r0, r5
 8005c60:	2802      	cmp	r0, #2
 8005c62:	d9f6      	bls.n	8005c52 <HAL_RCCEx_PeriphCLKConfig+0x19e>
 8005c64:	e004      	b.n	8005c70 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8005c66:	f7fe f9c9 	bl	8003ffc <HAL_GetTick>
 8005c6a:	1b40      	subs	r0, r0, r5
 8005c6c:	2802      	cmp	r0, #2
 8005c6e:	d9b7      	bls.n	8005be0 <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 8005c70:	2003      	movs	r0, #3
}
 8005c72:	b003      	add	sp, #12
 8005c74:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8005c76:	f7fe f9c1 	bl	8003ffc <HAL_GetTick>
 8005c7a:	1b80      	subs	r0, r0, r6
 8005c7c:	2802      	cmp	r0, #2
 8005c7e:	f67f af2b 	bls.w	8005ad8 <HAL_RCCEx_PeriphCLKConfig+0x24>
 8005c82:	e7f5      	b.n	8005c70 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8005c84:	f7fe f9ba 	bl	8003ffc <HAL_GetTick>
 8005c88:	1b40      	subs	r0, r0, r5
 8005c8a:	2802      	cmp	r0, #2
 8005c8c:	f67f af5f 	bls.w	8005b4e <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8005c90:	e7ee      	b.n	8005c70 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8005c92:	f7fe f9b3 	bl	8003ffc <HAL_GetTick>
 8005c96:	1b80      	subs	r0, r0, r6
 8005c98:	2802      	cmp	r0, #2
 8005c9a:	f67f af73 	bls.w	8005b84 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 8005c9e:	e7e7      	b.n	8005c70 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8005ca0:	f402 7240 	and.w	r2, r2, #768	@ 0x300
 8005ca4:	4293      	cmp	r3, r2
 8005ca6:	f43f af78 	beq.w	8005b9a <HAL_RCCEx_PeriphCLKConfig+0xe6>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8005caa:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8005cac:	4a13      	ldr	r2, [pc, #76]	@ (8005cfc <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8005cae:	2101      	movs	r1, #1
 8005cb0:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8005cb4:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8005cb8:	2100      	movs	r1, #0
 8005cba:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      RCC->BDCR = tmpreg1;
 8005cbe:	672b      	str	r3, [r5, #112]	@ 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8005cc0:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005cc2:	07d9      	lsls	r1, r3, #31
 8005cc4:	f57f af69 	bpl.w	8005b9a <HAL_RCCEx_PeriphCLKConfig+0xe6>
        tickstart = HAL_GetTick();
 8005cc8:	f7fe f998 	bl	8003ffc <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005ccc:	f241 3788 	movw	r7, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 8005cd0:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005cd2:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005cd4:	079a      	lsls	r2, r3, #30
 8005cd6:	f53f af60 	bmi.w	8005b9a <HAL_RCCEx_PeriphCLKConfig+0xe6>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005cda:	f7fe f98f 	bl	8003ffc <HAL_GetTick>
 8005cde:	1b80      	subs	r0, r0, r6
 8005ce0:	42b8      	cmp	r0, r7
 8005ce2:	d9f6      	bls.n	8005cd2 <HAL_RCCEx_PeriphCLKConfig+0x21e>
 8005ce4:	e7c4      	b.n	8005c70 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8005ce6:	6891      	ldr	r1, [r2, #8]
 8005ce8:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8005cec:	e765      	b.n	8005bba <HAL_RCCEx_PeriphCLKConfig+0x106>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8005cee:	4b06      	ldr	r3, [pc, #24]	@ (8005d08 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8005cf0:	f894 202c 	ldrb.w	r2, [r4, #44]	@ 0x2c
 8005cf4:	f8c3 21e0 	str.w	r2, [r3, #480]	@ 0x1e0
 8005cf8:	e769      	b.n	8005bce <HAL_RCCEx_PeriphCLKConfig+0x11a>
 8005cfa:	bf00      	nop
 8005cfc:	42470000 	.word	0x42470000
 8005d00:	40023800 	.word	0x40023800
 8005d04:	40007000 	.word	0x40007000
 8005d08:	42471000 	.word	0x42471000

08005d0c <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8005d0c:	b538      	push	{r3, r4, r5, lr}
 8005d0e:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8005d10:	4604      	mov	r4, r0
 8005d12:	b1c8      	cbz	r0, 8005d48 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8005d14:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8005d18:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005d1c:	b91b      	cbnz	r3, 8005d26 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8005d1e:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8005d22:	f7fb ffc5 	bl	8001cb0 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8005d26:	2302      	movs	r3, #2
 8005d28:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8005d2c:	1d21      	adds	r1, r4, #4
 8005d2e:	6820      	ldr	r0, [r4, #0]
 8005d30:	f000 fe5d 	bl	80069ee <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8005d34:	6862      	ldr	r2, [r4, #4]
 8005d36:	6820      	ldr	r0, [r4, #0]
 8005d38:	4629      	mov	r1, r5
 8005d3a:	f000 fe90 	bl	8006a5e <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8005d3e:	2301      	movs	r3, #1
 8005d40:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  return HAL_OK;
 8005d44:	2000      	movs	r0, #0
}
 8005d46:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005d48:	2001      	movs	r0, #1
 8005d4a:	e7fc      	b.n	8005d46 <HAL_SDRAM_Init+0x3a>

08005d4c <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 8005d4c:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8005d4e:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 8005d52:	2b02      	cmp	r3, #2
{
 8005d54:	4605      	mov	r5, r0
 8005d56:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8005d58:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 8005d5a:	d012      	beq.n	8005d82 <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 8005d5c:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
 8005d60:	2c01      	cmp	r4, #1
 8005d62:	d10f      	bne.n	8005d84 <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8005d64:	2302      	movs	r3, #2
 8005d66:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8005d6a:	6828      	ldr	r0, [r5, #0]
 8005d6c:	f000 fead 	bl	8006aca <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8005d70:	6833      	ldr	r3, [r6, #0]
 8005d72:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8005d74:	bf06      	itte	eq
 8005d76:	2305      	moveq	r3, #5
 8005d78:	f885 302c 	strbeq.w	r3, [r5, #44]	@ 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 8005d7c:	f885 402c 	strbne.w	r4, [r5, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8005d80:	2000      	movs	r0, #0
}
 8005d82:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 8005d84:	2001      	movs	r0, #1
 8005d86:	e7fc      	b.n	8005d82 <HAL_SDRAM_SendCommand+0x36>

08005d88 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8005d88:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8005d8a:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8005d8e:	2b02      	cmp	r3, #2
{
 8005d90:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8005d92:	b2d8      	uxtb	r0, r3
 8005d94:	d00d      	beq.n	8005db2 <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 8005d96:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 8005d9a:	2b01      	cmp	r3, #1
 8005d9c:	b2dd      	uxtb	r5, r3
 8005d9e:	d109      	bne.n	8005db4 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8005da0:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8005da2:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8005da4:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8005da8:	f000 feb3 	bl	8006b12 <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 8005dac:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8005db0:	2000      	movs	r0, #0
}
 8005db2:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005db4:	2001      	movs	r0, #1
 8005db6:	e7fc      	b.n	8005db2 <HAL_SDRAM_ProgramRefreshRate+0x2a>

08005db8 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8005db8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8005dbc:	461f      	mov	r7, r3
 8005dbe:	4689      	mov	r9, r1
 8005dc0:	4690      	mov	r8, r2
 8005dc2:	4604      	mov	r4, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8005dc4:	f7fe f91a 	bl	8003ffc <HAL_GetTick>
 8005dc8:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8005dca:	443d      	add	r5, r7
 8005dcc:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 8005dce:	f7fe f915 	bl	8003ffc <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8005dd2:	4b26      	ldr	r3, [pc, #152]	@ (8005e6c <SPI_WaitFlagStateUntilTimeout+0xb4>)
 8005dd4:	681e      	ldr	r6, [r3, #0]
 8005dd6:	f3c6 36cb 	ubfx	r6, r6, #15, #12
 8005dda:	436e      	muls	r6, r5
  tmp_tickstart = HAL_GetTick();
 8005ddc:	4682      	mov	sl, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8005dde:	9601      	str	r6, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8005de0:	6822      	ldr	r2, [r4, #0]
 8005de2:	6893      	ldr	r3, [r2, #8]
 8005de4:	ea39 0303 	bics.w	r3, r9, r3
 8005de8:	bf0c      	ite	eq
 8005dea:	2301      	moveq	r3, #1
 8005dec:	2300      	movne	r3, #0
 8005dee:	4543      	cmp	r3, r8
 8005df0:	d101      	bne.n	8005df6 <SPI_WaitFlagStateUntilTimeout+0x3e>
      }
      count--;
    }
  }

  return HAL_OK;
 8005df2:	2000      	movs	r0, #0
 8005df4:	e02e      	b.n	8005e54 <SPI_WaitFlagStateUntilTimeout+0x9c>
    if (Timeout != HAL_MAX_DELAY)
 8005df6:	1c7b      	adds	r3, r7, #1
 8005df8:	d0f3      	beq.n	8005de2 <SPI_WaitFlagStateUntilTimeout+0x2a>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8005dfa:	f7fe f8ff 	bl	8003ffc <HAL_GetTick>
 8005dfe:	eba0 000a 	sub.w	r0, r0, sl
 8005e02:	42a8      	cmp	r0, r5
 8005e04:	d329      	bcc.n	8005e5a <SPI_WaitFlagStateUntilTimeout+0xa2>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8005e06:	6823      	ldr	r3, [r4, #0]
 8005e08:	685a      	ldr	r2, [r3, #4]
 8005e0a:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8005e0e:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005e10:	6862      	ldr	r2, [r4, #4]
 8005e12:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 8005e16:	d10a      	bne.n	8005e2e <SPI_WaitFlagStateUntilTimeout+0x76>
 8005e18:	68a2      	ldr	r2, [r4, #8]
 8005e1a:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 8005e1e:	d002      	beq.n	8005e26 <SPI_WaitFlagStateUntilTimeout+0x6e>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8005e20:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8005e24:	d103      	bne.n	8005e2e <SPI_WaitFlagStateUntilTimeout+0x76>
          __HAL_SPI_DISABLE(hspi);
 8005e26:	681a      	ldr	r2, [r3, #0]
 8005e28:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005e2c:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8005e2e:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8005e30:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 8005e34:	d107      	bne.n	8005e46 <SPI_WaitFlagStateUntilTimeout+0x8e>
          SPI_RESET_CRC(hspi);
 8005e36:	681a      	ldr	r2, [r3, #0]
 8005e38:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8005e3c:	601a      	str	r2, [r3, #0]
 8005e3e:	681a      	ldr	r2, [r3, #0]
 8005e40:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8005e44:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8005e46:	2301      	movs	r3, #1
 8005e48:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 8005e4c:	2300      	movs	r3, #0
 8005e4e:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 8005e52:	2003      	movs	r0, #3
}
 8005e54:	b002      	add	sp, #8
 8005e56:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (count == 0U)
 8005e5a:	9a01      	ldr	r2, [sp, #4]
      count--;
 8005e5c:	9b01      	ldr	r3, [sp, #4]
      if (count == 0U)
 8005e5e:	2a00      	cmp	r2, #0
      count--;
 8005e60:	f103 33ff 	add.w	r3, r3, #4294967295
 8005e64:	9301      	str	r3, [sp, #4]
 8005e66:	bf08      	it	eq
 8005e68:	4615      	moveq	r5, r2
 8005e6a:	e7b9      	b.n	8005de0 <SPI_WaitFlagStateUntilTimeout+0x28>
 8005e6c:	20000074 	.word	0x20000074

08005e70 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8005e70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005e72:	b085      	sub	sp, #20
  /* Wait until TXE flag */
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8005e74:	460b      	mov	r3, r1
 8005e76:	9200      	str	r2, [sp, #0]
{
 8005e78:	460e      	mov	r6, r1
 8005e7a:	4617      	mov	r7, r2
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8005e7c:	2102      	movs	r1, #2
 8005e7e:	2201      	movs	r2, #1
{
 8005e80:	4604      	mov	r4, r0
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8005e82:	f7ff ff99 	bl	8005db8 <SPI_WaitFlagStateUntilTimeout>
 8005e86:	4605      	mov	r5, r0
 8005e88:	b128      	cbz	r0, 8005e96 <SPI_EndRxTxTransaction+0x26>
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8005e8a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005e8c:	f043 0320 	orr.w	r3, r3, #32
 8005e90:	6563      	str	r3, [r4, #84]	@ 0x54
    return HAL_TIMEOUT;
 8005e92:	2503      	movs	r5, #3
 8005e94:	e015      	b.n	8005ec2 <SPI_EndRxTxTransaction+0x52>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8005e96:	4b12      	ldr	r3, [pc, #72]	@ (8005ee0 <SPI_EndRxTxTransaction+0x70>)
 8005e98:	6818      	ldr	r0, [r3, #0]
 8005e9a:	4b12      	ldr	r3, [pc, #72]	@ (8005ee4 <SPI_EndRxTxTransaction+0x74>)
 8005e9c:	fbb0 f0f3 	udiv	r0, r0, r3
 8005ea0:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8005ea4:	4358      	muls	r0, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005ea6:	6863      	ldr	r3, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8005ea8:	9003      	str	r0, [sp, #12]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005eaa:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8005eae:	d10b      	bne.n	8005ec8 <SPI_EndRxTxTransaction+0x58>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8005eb0:	9700      	str	r7, [sp, #0]
 8005eb2:	4633      	mov	r3, r6
 8005eb4:	462a      	mov	r2, r5
 8005eb6:	2180      	movs	r1, #128	@ 0x80
 8005eb8:	4620      	mov	r0, r4
 8005eba:	f7ff ff7d 	bl	8005db8 <SPI_WaitFlagStateUntilTimeout>
 8005ebe:	2800      	cmp	r0, #0
 8005ec0:	d1e3      	bne.n	8005e8a <SPI_EndRxTxTransaction+0x1a>
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8005ec2:	4628      	mov	r0, r5
 8005ec4:	b005      	add	sp, #20
 8005ec6:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (count == 0U)
 8005ec8:	9b03      	ldr	r3, [sp, #12]
 8005eca:	2b00      	cmp	r3, #0
 8005ecc:	d0f9      	beq.n	8005ec2 <SPI_EndRxTxTransaction+0x52>
      count--;
 8005ece:	9b03      	ldr	r3, [sp, #12]
 8005ed0:	3b01      	subs	r3, #1
 8005ed2:	9303      	str	r3, [sp, #12]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8005ed4:	6823      	ldr	r3, [r4, #0]
 8005ed6:	689b      	ldr	r3, [r3, #8]
 8005ed8:	061b      	lsls	r3, r3, #24
 8005eda:	d4f5      	bmi.n	8005ec8 <SPI_EndRxTxTransaction+0x58>
 8005edc:	e7f1      	b.n	8005ec2 <SPI_EndRxTxTransaction+0x52>
 8005ede:	bf00      	nop
 8005ee0:	20000074 	.word	0x20000074
 8005ee4:	016e3600 	.word	0x016e3600

08005ee8 <SPI_EndRxTransaction>:
{
 8005ee8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8005eea:	460b      	mov	r3, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005eec:	6841      	ldr	r1, [r0, #4]
 8005eee:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
{
 8005ef2:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005ef4:	d008      	beq.n	8005f08 <SPI_EndRxTransaction+0x20>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8005ef6:	9200      	str	r2, [sp, #0]
 8005ef8:	2101      	movs	r1, #1
 8005efa:	2200      	movs	r2, #0
 8005efc:	f7ff ff5c 	bl	8005db8 <SPI_WaitFlagStateUntilTimeout>
 8005f00:	b9d0      	cbnz	r0, 8005f38 <SPI_EndRxTransaction+0x50>
  return HAL_OK;
 8005f02:	2000      	movs	r0, #0
}
 8005f04:	b003      	add	sp, #12
 8005f06:	bd30      	pop	{r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005f08:	6881      	ldr	r1, [r0, #8]
 8005f0a:	f5b1 4f00 	cmp.w	r1, #32768	@ 0x8000
 8005f0e:	d002      	beq.n	8005f16 <SPI_EndRxTransaction+0x2e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8005f10:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8005f14:	d107      	bne.n	8005f26 <SPI_EndRxTransaction+0x3e>
    __HAL_SPI_DISABLE(hspi);
 8005f16:	6825      	ldr	r5, [r4, #0]
 8005f18:	6828      	ldr	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8005f1a:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
    __HAL_SPI_DISABLE(hspi);
 8005f1e:	f020 0040 	bic.w	r0, r0, #64	@ 0x40
 8005f22:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8005f24:	d004      	beq.n	8005f30 <SPI_EndRxTransaction+0x48>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8005f26:	9200      	str	r2, [sp, #0]
 8005f28:	2180      	movs	r1, #128	@ 0x80
 8005f2a:	2200      	movs	r2, #0
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8005f2c:	4620      	mov	r0, r4
 8005f2e:	e7e5      	b.n	8005efc <SPI_EndRxTransaction+0x14>
 8005f30:	9200      	str	r2, [sp, #0]
 8005f32:	2101      	movs	r1, #1
 8005f34:	2200      	movs	r2, #0
 8005f36:	e7f9      	b.n	8005f2c <SPI_EndRxTransaction+0x44>
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8005f38:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005f3a:	f043 0320 	orr.w	r3, r3, #32
 8005f3e:	6563      	str	r3, [r4, #84]	@ 0x54
        return HAL_TIMEOUT;
 8005f40:	2003      	movs	r0, #3
 8005f42:	e7df      	b.n	8005f04 <SPI_EndRxTransaction+0x1c>

08005f44 <HAL_SPI_Init>:
{
 8005f44:	b510      	push	{r4, lr}
  if (hspi == NULL)
 8005f46:	4604      	mov	r4, r0
 8005f48:	2800      	cmp	r0, #0
 8005f4a:	d055      	beq.n	8005ff8 <HAL_SPI_Init+0xb4>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8005f4c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8005f4e:	2b00      	cmp	r3, #0
 8005f50:	d14e      	bne.n	8005ff0 <HAL_SPI_Init+0xac>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005f52:	6842      	ldr	r2, [r0, #4]
 8005f54:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 8005f58:	d000      	beq.n	8005f5c <HAL_SPI_Init+0x18>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8005f5a:	61c3      	str	r3, [r0, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8005f5c:	2300      	movs	r3, #0
 8005f5e:	62a3      	str	r3, [r4, #40]	@ 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8005f60:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 8005f64:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005f68:	b923      	cbnz	r3, 8005f74 <HAL_SPI_Init+0x30>
    hspi->Lock = HAL_UNLOCKED;
 8005f6a:	f884 2050 	strb.w	r2, [r4, #80]	@ 0x50
    HAL_SPI_MspInit(hspi);
 8005f6e:	4620      	mov	r0, r4
 8005f70:	f7fb fe32 	bl	8001bd8 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8005f74:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8005f76:	68a0      	ldr	r0, [r4, #8]
 8005f78:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 8005f7a:	2302      	movs	r3, #2
 8005f7c:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  __HAL_SPI_DISABLE(hspi);
 8005f80:	680b      	ldr	r3, [r1, #0]
 8005f82:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8005f86:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8005f88:	6863      	ldr	r3, [r4, #4]
 8005f8a:	f400 4004 	and.w	r0, r0, #33792	@ 0x8400
 8005f8e:	f403 7382 	and.w	r3, r3, #260	@ 0x104
 8005f92:	4303      	orrs	r3, r0
 8005f94:	68e0      	ldr	r0, [r4, #12]
 8005f96:	f400 6000 	and.w	r0, r0, #2048	@ 0x800
 8005f9a:	4303      	orrs	r3, r0
 8005f9c:	6920      	ldr	r0, [r4, #16]
 8005f9e:	f000 0002 	and.w	r0, r0, #2
 8005fa2:	4303      	orrs	r3, r0
 8005fa4:	6960      	ldr	r0, [r4, #20]
 8005fa6:	f000 0001 	and.w	r0, r0, #1
 8005faa:	4303      	orrs	r3, r0
 8005fac:	f402 7000 	and.w	r0, r2, #512	@ 0x200
 8005fb0:	4303      	orrs	r3, r0
 8005fb2:	69e0      	ldr	r0, [r4, #28]
 8005fb4:	f000 0038 	and.w	r0, r0, #56	@ 0x38
 8005fb8:	4303      	orrs	r3, r0
 8005fba:	6a20      	ldr	r0, [r4, #32]
 8005fbc:	f000 0080 	and.w	r0, r0, #128	@ 0x80
 8005fc0:	4303      	orrs	r3, r0
 8005fc2:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8005fc4:	f400 5000 	and.w	r0, r0, #8192	@ 0x2000
 8005fc8:	4303      	orrs	r3, r0
 8005fca:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 8005fcc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005fce:	0c12      	lsrs	r2, r2, #16
 8005fd0:	f003 0310 	and.w	r3, r3, #16
 8005fd4:	f002 0204 	and.w	r2, r2, #4
 8005fd8:	431a      	orrs	r2, r3
 8005fda:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8005fdc:	69cb      	ldr	r3, [r1, #28]
 8005fde:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8005fe2:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8005fe4:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8005fe6:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8005fe8:	6560      	str	r0, [r4, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8005fea:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
}
 8005fee:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8005ff0:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8005ff2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8005ff6:	e7b1      	b.n	8005f5c <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 8005ff8:	2001      	movs	r0, #1
 8005ffa:	e7f8      	b.n	8005fee <HAL_SPI_Init+0xaa>

08005ffc <HAL_SPI_Transmit>:
{
 8005ffc:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8006000:	461f      	mov	r7, r3
  __HAL_LOCK(hspi);
 8006002:	f890 3050 	ldrb.w	r3, [r0, #80]	@ 0x50
 8006006:	2b01      	cmp	r3, #1
{
 8006008:	4604      	mov	r4, r0
 800600a:	460d      	mov	r5, r1
 800600c:	4690      	mov	r8, r2
  __HAL_LOCK(hspi);
 800600e:	f000 80a6 	beq.w	800615e <HAL_SPI_Transmit+0x162>
 8006012:	2301      	movs	r3, #1
 8006014:	f880 3050 	strb.w	r3, [r0, #80]	@ 0x50
  tickstart = HAL_GetTick();
 8006018:	f7fd fff0 	bl	8003ffc <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800601c:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 8006020:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8006022:	4682      	mov	sl, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8006024:	fa5f f983 	uxtb.w	r9, r3
 8006028:	f040 8096 	bne.w	8006158 <HAL_SPI_Transmit+0x15c>
  if ((pData == NULL) || (Size == 0U))
 800602c:	2d00      	cmp	r5, #0
 800602e:	d067      	beq.n	8006100 <HAL_SPI_Transmit+0x104>
 8006030:	f1b8 0f00 	cmp.w	r8, #0
 8006034:	d064      	beq.n	8006100 <HAL_SPI_Transmit+0x104>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8006036:	2303      	movs	r3, #3
 8006038:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800603c:	2300      	movs	r3, #0
 800603e:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->RxISR       = NULL;
 8006040:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  hspi->TxXferCount = Size;
 8006044:	f8a4 8036 	strh.w	r8, [r4, #54]	@ 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8006048:	63a3      	str	r3, [r4, #56]	@ 0x38
  hspi->RxXferSize  = 0U;
 800604a:	87a3      	strh	r3, [r4, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 800604c:	87e3      	strh	r3, [r4, #62]	@ 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800604e:	68a3      	ldr	r3, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 8006050:	6826      	ldr	r6, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8006052:	6325      	str	r5, [r4, #48]	@ 0x30
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006054:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
  hspi->TxXferSize  = Size;
 8006058:	f8a4 8034 	strh.w	r8, [r4, #52]	@ 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800605c:	d107      	bne.n	800606e <HAL_SPI_Transmit+0x72>
    __HAL_SPI_DISABLE(hspi);
 800605e:	6833      	ldr	r3, [r6, #0]
 8006060:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006064:	6033      	str	r3, [r6, #0]
    SPI_1LINE_TX(hspi);
 8006066:	6833      	ldr	r3, [r6, #0]
 8006068:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800606c:	6033      	str	r3, [r6, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800606e:	6833      	ldr	r3, [r6, #0]
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006070:	6862      	ldr	r2, [r4, #4]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006072:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 8006074:	bf5e      	ittt	pl
 8006076:	6833      	ldrpl	r3, [r6, #0]
 8006078:	f043 0340 	orrpl.w	r3, r3, #64	@ 0x40
 800607c:	6033      	strpl	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800607e:	68e3      	ldr	r3, [r4, #12]
 8006080:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8006084:	d143      	bne.n	800610e <HAL_SPI_Transmit+0x112>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006086:	b112      	cbz	r2, 800608e <HAL_SPI_Transmit+0x92>
 8006088:	f1b8 0f01 	cmp.w	r8, #1
 800608c:	d107      	bne.n	800609e <HAL_SPI_Transmit+0xa2>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800608e:	f835 3b02 	ldrh.w	r3, [r5], #2
 8006092:	60f3      	str	r3, [r6, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8006094:	6325      	str	r5, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8006096:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006098:	3b01      	subs	r3, #1
 800609a:	b29b      	uxth	r3, r3
 800609c:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 800609e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80060a0:	b29b      	uxth	r3, r3
 80060a2:	b9b3      	cbnz	r3, 80060d2 <HAL_SPI_Transmit+0xd6>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80060a4:	4652      	mov	r2, sl
 80060a6:	4639      	mov	r1, r7
 80060a8:	4620      	mov	r0, r4
 80060aa:	f7ff fee1 	bl	8005e70 <SPI_EndRxTxTransaction>
 80060ae:	2800      	cmp	r0, #0
 80060b0:	d14f      	bne.n	8006152 <HAL_SPI_Transmit+0x156>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 80060b2:	68a3      	ldr	r3, [r4, #8]
 80060b4:	b933      	cbnz	r3, 80060c4 <HAL_SPI_Transmit+0xc8>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80060b6:	9301      	str	r3, [sp, #4]
 80060b8:	6823      	ldr	r3, [r4, #0]
 80060ba:	68da      	ldr	r2, [r3, #12]
 80060bc:	9201      	str	r2, [sp, #4]
 80060be:	689b      	ldr	r3, [r3, #8]
 80060c0:	9301      	str	r3, [sp, #4]
 80060c2:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80060c4:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80060c6:	b9db      	cbnz	r3, 8006100 <HAL_SPI_Transmit+0x104>
    hspi->State = HAL_SPI_STATE_READY;
 80060c8:	2201      	movs	r2, #1
 80060ca:	f884 2051 	strb.w	r2, [r4, #81]	@ 0x51
  HAL_StatusTypeDef errorcode = HAL_OK;
 80060ce:	4699      	mov	r9, r3
 80060d0:	e016      	b.n	8006100 <HAL_SPI_Transmit+0x104>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80060d2:	6822      	ldr	r2, [r4, #0]
 80060d4:	6893      	ldr	r3, [r2, #8]
 80060d6:	0798      	lsls	r0, r3, #30
 80060d8:	d505      	bpl.n	80060e6 <HAL_SPI_Transmit+0xea>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80060da:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80060dc:	f833 1b02 	ldrh.w	r1, [r3], #2
 80060e0:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80060e2:	6323      	str	r3, [r4, #48]	@ 0x30
 80060e4:	e7d7      	b.n	8006096 <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80060e6:	f7fd ff89 	bl	8003ffc <HAL_GetTick>
 80060ea:	eba0 000a 	sub.w	r0, r0, sl
 80060ee:	42b8      	cmp	r0, r7
 80060f0:	d3d5      	bcc.n	800609e <HAL_SPI_Transmit+0xa2>
 80060f2:	1c79      	adds	r1, r7, #1
 80060f4:	d0d3      	beq.n	800609e <HAL_SPI_Transmit+0xa2>
          hspi->State = HAL_SPI_STATE_READY;
 80060f6:	2301      	movs	r3, #1
 80060f8:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          errorcode = HAL_TIMEOUT;
 80060fc:	f04f 0903 	mov.w	r9, #3
  __HAL_UNLOCK(hspi);
 8006100:	2300      	movs	r3, #0
 8006102:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
}
 8006106:	4648      	mov	r0, r9
 8006108:	b002      	add	sp, #8
 800610a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800610e:	b112      	cbz	r2, 8006116 <HAL_SPI_Transmit+0x11a>
 8006110:	f1b8 0f01 	cmp.w	r8, #1
 8006114:	d108      	bne.n	8006128 <HAL_SPI_Transmit+0x12c>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006116:	782b      	ldrb	r3, [r5, #0]
 8006118:	7333      	strb	r3, [r6, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800611a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800611c:	3301      	adds	r3, #1
 800611e:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8006120:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006122:	3b01      	subs	r3, #1
 8006124:	b29b      	uxth	r3, r3
 8006126:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 8006128:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800612a:	b29b      	uxth	r3, r3
 800612c:	2b00      	cmp	r3, #0
 800612e:	d0b9      	beq.n	80060a4 <HAL_SPI_Transmit+0xa8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8006130:	6823      	ldr	r3, [r4, #0]
 8006132:	689a      	ldr	r2, [r3, #8]
 8006134:	0792      	lsls	r2, r2, #30
 8006136:	d503      	bpl.n	8006140 <HAL_SPI_Transmit+0x144>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006138:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800613a:	7812      	ldrb	r2, [r2, #0]
 800613c:	731a      	strb	r2, [r3, #12]
 800613e:	e7ec      	b.n	800611a <HAL_SPI_Transmit+0x11e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006140:	f7fd ff5c 	bl	8003ffc <HAL_GetTick>
 8006144:	eba0 000a 	sub.w	r0, r0, sl
 8006148:	42b8      	cmp	r0, r7
 800614a:	d3ed      	bcc.n	8006128 <HAL_SPI_Transmit+0x12c>
 800614c:	1c7b      	adds	r3, r7, #1
 800614e:	d0eb      	beq.n	8006128 <HAL_SPI_Transmit+0x12c>
 8006150:	e7d1      	b.n	80060f6 <HAL_SPI_Transmit+0xfa>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006152:	2320      	movs	r3, #32
 8006154:	6563      	str	r3, [r4, #84]	@ 0x54
 8006156:	e7ac      	b.n	80060b2 <HAL_SPI_Transmit+0xb6>
    errorcode = HAL_BUSY;
 8006158:	f04f 0902 	mov.w	r9, #2
 800615c:	e7d0      	b.n	8006100 <HAL_SPI_Transmit+0x104>
  __HAL_LOCK(hspi);
 800615e:	f04f 0902 	mov.w	r9, #2
 8006162:	e7d0      	b.n	8006106 <HAL_SPI_Transmit+0x10a>

08006164 <HAL_SPI_TransmitReceive>:
{
 8006164:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006168:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 800616a:	f890 3050 	ldrb.w	r3, [r0, #80]	@ 0x50
{
 800616e:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
  __HAL_LOCK(hspi);
 8006172:	2b01      	cmp	r3, #1
{
 8006174:	4604      	mov	r4, r0
 8006176:	460d      	mov	r5, r1
 8006178:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 800617a:	f000 80e8 	beq.w	800634e <HAL_SPI_TransmitReceive+0x1ea>
 800617e:	2301      	movs	r3, #1
 8006180:	f880 3050 	strb.w	r3, [r0, #80]	@ 0x50
  tickstart = HAL_GetTick();
 8006184:	f7fd ff3a 	bl	8003ffc <HAL_GetTick>
  tmp_state           = hspi->State;
 8006188:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  tmp_mode            = hspi->Init.Mode;
 800618c:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800618e:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8006190:	4607      	mov	r7, r0
  tmp_state           = hspi->State;
 8006192:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8006194:	d00a      	beq.n	80061ac <HAL_SPI_TransmitReceive+0x48>
 8006196:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 800619a:	f040 80d6 	bne.w	800634a <HAL_SPI_TransmitReceive+0x1e6>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800619e:	68a3      	ldr	r3, [r4, #8]
 80061a0:	2b00      	cmp	r3, #0
 80061a2:	f040 80d2 	bne.w	800634a <HAL_SPI_TransmitReceive+0x1e6>
 80061a6:	2904      	cmp	r1, #4
 80061a8:	f040 80cf 	bne.w	800634a <HAL_SPI_TransmitReceive+0x1e6>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 80061ac:	2d00      	cmp	r5, #0
 80061ae:	d03f      	beq.n	8006230 <HAL_SPI_TransmitReceive+0xcc>
 80061b0:	f1b9 0f00 	cmp.w	r9, #0
 80061b4:	d03c      	beq.n	8006230 <HAL_SPI_TransmitReceive+0xcc>
 80061b6:	2e00      	cmp	r6, #0
 80061b8:	d03a      	beq.n	8006230 <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 80061ba:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 80061be:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 80061c2:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 80061c4:	bf1c      	itt	ne
 80061c6:	2305      	movne	r3, #5
 80061c8:	f884 3051 	strbne.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80061cc:	2300      	movs	r3, #0
 80061ce:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->TxISR       = NULL;
 80061d0:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80061d4:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 80061d6:	87e6      	strh	r6, [r4, #62]	@ 0x3e
  hspi->TxXferCount = Size;
 80061d8:	86e6      	strh	r6, [r4, #54]	@ 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80061da:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 80061dc:	87a6      	strh	r6, [r4, #60]	@ 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80061de:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 80061e0:	bf58      	it	pl
 80061e2:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 80061e4:	6325      	str	r5, [r4, #48]	@ 0x30
    __HAL_SPI_ENABLE(hspi);
 80061e6:	bf58      	it	pl
 80061e8:	f041 0140 	orrpl.w	r1, r1, #64	@ 0x40
  hspi->TxXferSize  = Size;
 80061ec:	86a6      	strh	r6, [r4, #52]	@ 0x34
    __HAL_SPI_ENABLE(hspi);
 80061ee:	bf58      	it	pl
 80061f0:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80061f2:	68e1      	ldr	r1, [r4, #12]
 80061f4:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
 80061f8:	d151      	bne.n	800629e <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80061fa:	b10a      	cbz	r2, 8006200 <HAL_SPI_TransmitReceive+0x9c>
 80061fc:	2e01      	cmp	r6, #1
 80061fe:	d107      	bne.n	8006210 <HAL_SPI_TransmitReceive+0xac>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006200:	f835 2b02 	ldrh.w	r2, [r5], #2
 8006204:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8006206:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8006208:	6325      	str	r5, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 800620a:	3b01      	subs	r3, #1
 800620c:	b29b      	uxth	r3, r3
 800620e:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 8006210:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006212:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006214:	b29b      	uxth	r3, r3
 8006216:	b96b      	cbnz	r3, 8006234 <HAL_SPI_TransmitReceive+0xd0>
 8006218:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800621a:	b29b      	uxth	r3, r3
 800621c:	b953      	cbnz	r3, 8006234 <HAL_SPI_TransmitReceive+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800621e:	463a      	mov	r2, r7
 8006220:	4641      	mov	r1, r8
 8006222:	4620      	mov	r0, r4
 8006224:	f7ff fe24 	bl	8005e70 <SPI_EndRxTxTransaction>
 8006228:	2800      	cmp	r0, #0
 800622a:	d07d      	beq.n	8006328 <HAL_SPI_TransmitReceive+0x1c4>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800622c:	2320      	movs	r3, #32
 800622e:	6563      	str	r3, [r4, #84]	@ 0x54
    errorcode = HAL_ERROR;
 8006230:	2001      	movs	r0, #1
 8006232:	e02e      	b.n	8006292 <HAL_SPI_TransmitReceive+0x12e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8006234:	6821      	ldr	r1, [r4, #0]
 8006236:	688b      	ldr	r3, [r1, #8]
 8006238:	079a      	lsls	r2, r3, #30
 800623a:	d50d      	bpl.n	8006258 <HAL_SPI_TransmitReceive+0xf4>
 800623c:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800623e:	b29b      	uxth	r3, r3
 8006240:	b153      	cbz	r3, 8006258 <HAL_SPI_TransmitReceive+0xf4>
 8006242:	b145      	cbz	r5, 8006256 <HAL_SPI_TransmitReceive+0xf2>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006244:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006246:	f833 2b02 	ldrh.w	r2, [r3], #2
 800624a:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800624c:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 800624e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006250:	3b01      	subs	r3, #1
 8006252:	b29b      	uxth	r3, r3
 8006254:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 0U;
 8006256:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006258:	688a      	ldr	r2, [r1, #8]
 800625a:	f012 0201 	ands.w	r2, r2, #1
 800625e:	d00c      	beq.n	800627a <HAL_SPI_TransmitReceive+0x116>
 8006260:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006262:	b29b      	uxth	r3, r3
 8006264:	b14b      	cbz	r3, 800627a <HAL_SPI_TransmitReceive+0x116>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8006266:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006268:	68c9      	ldr	r1, [r1, #12]
 800626a:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800626e:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8006270:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006272:	3b01      	subs	r3, #1
 8006274:	b29b      	uxth	r3, r3
 8006276:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 8006278:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800627a:	f7fd febf 	bl	8003ffc <HAL_GetTick>
 800627e:	1bc0      	subs	r0, r0, r7
 8006280:	4540      	cmp	r0, r8
 8006282:	d3c6      	bcc.n	8006212 <HAL_SPI_TransmitReceive+0xae>
 8006284:	f1b8 3fff 	cmp.w	r8, #4294967295
 8006288:	d0c3      	beq.n	8006212 <HAL_SPI_TransmitReceive+0xae>
        hspi->State = HAL_SPI_STATE_READY;
 800628a:	2301      	movs	r3, #1
 800628c:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        errorcode = HAL_TIMEOUT;
 8006290:	2003      	movs	r0, #3
  __HAL_UNLOCK(hspi);
 8006292:	2300      	movs	r3, #0
 8006294:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
}
 8006298:	b003      	add	sp, #12
 800629a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800629e:	b10a      	cbz	r2, 80062a4 <HAL_SPI_TransmitReceive+0x140>
 80062a0:	2e01      	cmp	r6, #1
 80062a2:	d108      	bne.n	80062b6 <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80062a4:	782a      	ldrb	r2, [r5, #0]
 80062a6:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 80062a8:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80062aa:	3301      	adds	r3, #1
 80062ac:	6323      	str	r3, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 80062ae:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80062b0:	3b01      	subs	r3, #1
 80062b2:	b29b      	uxth	r3, r3
 80062b4:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 80062b6:	2501      	movs	r5, #1
 80062b8:	e02d      	b.n	8006316 <HAL_SPI_TransmitReceive+0x1b2>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80062ba:	6822      	ldr	r2, [r4, #0]
 80062bc:	6893      	ldr	r3, [r2, #8]
 80062be:	079b      	lsls	r3, r3, #30
 80062c0:	d50e      	bpl.n	80062e0 <HAL_SPI_TransmitReceive+0x17c>
 80062c2:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80062c4:	b29b      	uxth	r3, r3
 80062c6:	b15b      	cbz	r3, 80062e0 <HAL_SPI_TransmitReceive+0x17c>
 80062c8:	b14d      	cbz	r5, 80062de <HAL_SPI_TransmitReceive+0x17a>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 80062ca:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80062cc:	781b      	ldrb	r3, [r3, #0]
 80062ce:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 80062d0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80062d2:	3301      	adds	r3, #1
 80062d4:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 80062d6:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80062d8:	3b01      	subs	r3, #1
 80062da:	b29b      	uxth	r3, r3
 80062dc:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 0U;
 80062de:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80062e0:	6822      	ldr	r2, [r4, #0]
 80062e2:	6891      	ldr	r1, [r2, #8]
 80062e4:	f011 0101 	ands.w	r1, r1, #1
 80062e8:	d00d      	beq.n	8006306 <HAL_SPI_TransmitReceive+0x1a2>
 80062ea:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80062ec:	b29b      	uxth	r3, r3
 80062ee:	b153      	cbz	r3, 8006306 <HAL_SPI_TransmitReceive+0x1a2>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 80062f0:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80062f2:	68d2      	ldr	r2, [r2, #12]
 80062f4:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 80062f6:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80062f8:	3301      	adds	r3, #1
 80062fa:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 80062fc:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80062fe:	3b01      	subs	r3, #1
 8006300:	b29b      	uxth	r3, r3
 8006302:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 8006304:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8006306:	f7fd fe79 	bl	8003ffc <HAL_GetTick>
 800630a:	1bc0      	subs	r0, r0, r7
 800630c:	4540      	cmp	r0, r8
 800630e:	d302      	bcc.n	8006316 <HAL_SPI_TransmitReceive+0x1b2>
 8006310:	f1b8 3fff 	cmp.w	r8, #4294967295
 8006314:	d1b9      	bne.n	800628a <HAL_SPI_TransmitReceive+0x126>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006316:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006318:	b29b      	uxth	r3, r3
 800631a:	2b00      	cmp	r3, #0
 800631c:	d1cd      	bne.n	80062ba <HAL_SPI_TransmitReceive+0x156>
 800631e:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006320:	b29b      	uxth	r3, r3
 8006322:	2b00      	cmp	r3, #0
 8006324:	d1c9      	bne.n	80062ba <HAL_SPI_TransmitReceive+0x156>
 8006326:	e77a      	b.n	800621e <HAL_SPI_TransmitReceive+0xba>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006328:	68a3      	ldr	r3, [r4, #8]
 800632a:	b933      	cbnz	r3, 800633a <HAL_SPI_TransmitReceive+0x1d6>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800632c:	6823      	ldr	r3, [r4, #0]
 800632e:	9001      	str	r0, [sp, #4]
 8006330:	68da      	ldr	r2, [r3, #12]
 8006332:	9201      	str	r2, [sp, #4]
 8006334:	689b      	ldr	r3, [r3, #8]
 8006336:	9301      	str	r3, [sp, #4]
 8006338:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800633a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800633c:	2b00      	cmp	r3, #0
 800633e:	f47f af77 	bne.w	8006230 <HAL_SPI_TransmitReceive+0xcc>
    hspi->State = HAL_SPI_STATE_READY;
 8006342:	2301      	movs	r3, #1
 8006344:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
 8006348:	e7a3      	b.n	8006292 <HAL_SPI_TransmitReceive+0x12e>
    errorcode = HAL_BUSY;
 800634a:	2002      	movs	r0, #2
 800634c:	e7a1      	b.n	8006292 <HAL_SPI_TransmitReceive+0x12e>
  __HAL_LOCK(hspi);
 800634e:	2002      	movs	r0, #2
 8006350:	e7a2      	b.n	8006298 <HAL_SPI_TransmitReceive+0x134>

08006352 <HAL_SPI_Receive>:
{
 8006352:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8006356:	461e      	mov	r6, r3
  if (hspi->State != HAL_SPI_STATE_READY)
 8006358:	f890 3051 	ldrb.w	r3, [r0, #81]	@ 0x51
 800635c:	2b01      	cmp	r3, #1
{
 800635e:	4604      	mov	r4, r0
 8006360:	468a      	mov	sl, r1
 8006362:	4690      	mov	r8, r2
  if (hspi->State != HAL_SPI_STATE_READY)
 8006364:	b2dd      	uxtb	r5, r3
 8006366:	f040 8095 	bne.w	8006494 <HAL_SPI_Receive+0x142>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800636a:	6843      	ldr	r3, [r0, #4]
 800636c:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006370:	d10e      	bne.n	8006390 <HAL_SPI_Receive+0x3e>
 8006372:	6883      	ldr	r3, [r0, #8]
 8006374:	b963      	cbnz	r3, 8006390 <HAL_SPI_Receive+0x3e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8006376:	2304      	movs	r3, #4
 8006378:	f880 3051 	strb.w	r3, [r0, #81]	@ 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800637c:	4613      	mov	r3, r2
 800637e:	9600      	str	r6, [sp, #0]
 8006380:	460a      	mov	r2, r1
 8006382:	f7ff feef 	bl	8006164 <HAL_SPI_TransmitReceive>
 8006386:	4605      	mov	r5, r0
}
 8006388:	4628      	mov	r0, r5
 800638a:	b002      	add	sp, #8
 800638c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  __HAL_LOCK(hspi);
 8006390:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 8006394:	2b01      	cmp	r3, #1
 8006396:	d07f      	beq.n	8006498 <HAL_SPI_Receive+0x146>
 8006398:	2301      	movs	r3, #1
 800639a:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  tickstart = HAL_GetTick();
 800639e:	f7fd fe2d 	bl	8003ffc <HAL_GetTick>
 80063a2:	4681      	mov	r9, r0
  if ((pData == NULL) || (Size == 0U))
 80063a4:	f1ba 0f00 	cmp.w	sl, #0
 80063a8:	d064      	beq.n	8006474 <HAL_SPI_Receive+0x122>
 80063aa:	f1b8 0f00 	cmp.w	r8, #0
 80063ae:	d061      	beq.n	8006474 <HAL_SPI_Receive+0x122>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80063b0:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 80063b2:	f8c4 a038 	str.w	sl, [r4, #56]	@ 0x38
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80063b6:	2700      	movs	r7, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 80063b8:	2304      	movs	r3, #4
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80063ba:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 80063be:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->TxISR       = NULL;
 80063c2:	e9c4 7710 	strd	r7, r7, [r4, #64]	@ 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80063c6:	6567      	str	r7, [r4, #84]	@ 0x54
    __HAL_SPI_DISABLE(hspi);
 80063c8:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 80063ca:	f8a4 803e 	strh.w	r8, [r4, #62]	@ 0x3e
  hspi->RxXferSize  = Size;
 80063ce:	f8a4 803c 	strh.w	r8, [r4, #60]	@ 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 80063d2:	6327      	str	r7, [r4, #48]	@ 0x30
  hspi->TxXferSize  = 0U;
 80063d4:	86a7      	strh	r7, [r4, #52]	@ 0x34
  hspi->TxXferCount = 0U;
 80063d6:	86e7      	strh	r7, [r4, #54]	@ 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80063d8:	d107      	bne.n	80063ea <HAL_SPI_Receive+0x98>
    __HAL_SPI_DISABLE(hspi);
 80063da:	681a      	ldr	r2, [r3, #0]
 80063dc:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80063e0:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 80063e2:	681a      	ldr	r2, [r3, #0]
 80063e4:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 80063e8:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80063ea:	681a      	ldr	r2, [r3, #0]
 80063ec:	0657      	lsls	r7, r2, #25
    __HAL_SPI_ENABLE(hspi);
 80063ee:	bf5e      	ittt	pl
 80063f0:	681a      	ldrpl	r2, [r3, #0]
 80063f2:	f042 0240 	orrpl.w	r2, r2, #64	@ 0x40
 80063f6:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 80063f8:	68e3      	ldr	r3, [r4, #12]
 80063fa:	b1f3      	cbz	r3, 800643a <HAL_SPI_Receive+0xe8>
    while (hspi->RxXferCount > 0U)
 80063fc:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80063fe:	b29b      	uxth	r3, r3
 8006400:	b1fb      	cbz	r3, 8006442 <HAL_SPI_Receive+0xf0>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8006402:	6823      	ldr	r3, [r4, #0]
 8006404:	689a      	ldr	r2, [r3, #8]
 8006406:	07d2      	lsls	r2, r2, #31
 8006408:	d538      	bpl.n	800647c <HAL_SPI_Receive+0x12a>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800640a:	68da      	ldr	r2, [r3, #12]
 800640c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800640e:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8006412:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8006414:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006416:	3b01      	subs	r3, #1
 8006418:	b29b      	uxth	r3, r3
 800641a:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800641c:	e7ee      	b.n	80063fc <HAL_SPI_Receive+0xaa>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800641e:	6823      	ldr	r3, [r4, #0]
 8006420:	689a      	ldr	r2, [r3, #8]
 8006422:	07d0      	lsls	r0, r2, #31
 8006424:	d51a      	bpl.n	800645c <HAL_SPI_Receive+0x10a>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8006426:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8006428:	7b1b      	ldrb	r3, [r3, #12]
 800642a:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800642c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800642e:	3301      	adds	r3, #1
 8006430:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8006432:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006434:	3b01      	subs	r3, #1
 8006436:	b29b      	uxth	r3, r3
 8006438:	87e3      	strh	r3, [r4, #62]	@ 0x3e
    while (hspi->RxXferCount > 0U)
 800643a:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800643c:	b29b      	uxth	r3, r3
 800643e:	2b00      	cmp	r3, #0
 8006440:	d1ed      	bne.n	800641e <HAL_SPI_Receive+0xcc>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006442:	464a      	mov	r2, r9
 8006444:	4631      	mov	r1, r6
 8006446:	4620      	mov	r0, r4
 8006448:	f7ff fd4e 	bl	8005ee8 <SPI_EndRxTransaction>
 800644c:	b9f8      	cbnz	r0, 800648e <HAL_SPI_Receive+0x13c>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800644e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8006450:	b983      	cbnz	r3, 8006474 <HAL_SPI_Receive+0x122>
    hspi->State = HAL_SPI_STATE_READY;
 8006452:	2201      	movs	r2, #1
 8006454:	f884 2051 	strb.w	r2, [r4, #81]	@ 0x51
  HAL_StatusTypeDef errorcode = HAL_OK;
 8006458:	461d      	mov	r5, r3
 800645a:	e00b      	b.n	8006474 <HAL_SPI_Receive+0x122>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800645c:	f7fd fdce 	bl	8003ffc <HAL_GetTick>
 8006460:	eba0 0009 	sub.w	r0, r0, r9
 8006464:	42b0      	cmp	r0, r6
 8006466:	d3e8      	bcc.n	800643a <HAL_SPI_Receive+0xe8>
 8006468:	1c71      	adds	r1, r6, #1
 800646a:	d0e6      	beq.n	800643a <HAL_SPI_Receive+0xe8>
          hspi->State = HAL_SPI_STATE_READY;
 800646c:	2301      	movs	r3, #1
 800646e:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          errorcode = HAL_TIMEOUT;
 8006472:	2503      	movs	r5, #3
  __HAL_UNLOCK(hspi);
 8006474:	2300      	movs	r3, #0
 8006476:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  return errorcode;
 800647a:	e785      	b.n	8006388 <HAL_SPI_Receive+0x36>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800647c:	f7fd fdbe 	bl	8003ffc <HAL_GetTick>
 8006480:	eba0 0009 	sub.w	r0, r0, r9
 8006484:	42b0      	cmp	r0, r6
 8006486:	d3b9      	bcc.n	80063fc <HAL_SPI_Receive+0xaa>
 8006488:	1c73      	adds	r3, r6, #1
 800648a:	d0b7      	beq.n	80063fc <HAL_SPI_Receive+0xaa>
 800648c:	e7ee      	b.n	800646c <HAL_SPI_Receive+0x11a>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800648e:	2320      	movs	r3, #32
 8006490:	6563      	str	r3, [r4, #84]	@ 0x54
 8006492:	e7dc      	b.n	800644e <HAL_SPI_Receive+0xfc>
    errorcode = HAL_BUSY;
 8006494:	2502      	movs	r5, #2
 8006496:	e7ed      	b.n	8006474 <HAL_SPI_Receive+0x122>
  __HAL_LOCK(hspi);
 8006498:	2502      	movs	r5, #2
 800649a:	e775      	b.n	8006388 <HAL_SPI_Receive+0x36>

0800649c <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 800649c:	4770      	bx	lr
	...

080064a0 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 80064a0:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80064a4:	2b01      	cmp	r3, #1
 80064a6:	d130      	bne.n	800650a <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80064a8:	2302      	movs	r3, #2
 80064aa:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80064ae:	6803      	ldr	r3, [r0, #0]
 80064b0:	68da      	ldr	r2, [r3, #12]
 80064b2:	f042 0201 	orr.w	r2, r2, #1
 80064b6:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80064b8:	4a15      	ldr	r2, [pc, #84]	@ (8006510 <HAL_TIM_Base_Start_IT+0x70>)
 80064ba:	4293      	cmp	r3, r2
 80064bc:	d01a      	beq.n	80064f4 <HAL_TIM_Base_Start_IT+0x54>
 80064be:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80064c2:	d017      	beq.n	80064f4 <HAL_TIM_Base_Start_IT+0x54>
 80064c4:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 80064c8:	4293      	cmp	r3, r2
 80064ca:	d013      	beq.n	80064f4 <HAL_TIM_Base_Start_IT+0x54>
 80064cc:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80064d0:	4293      	cmp	r3, r2
 80064d2:	d00f      	beq.n	80064f4 <HAL_TIM_Base_Start_IT+0x54>
 80064d4:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80064d8:	4293      	cmp	r3, r2
 80064da:	d00b      	beq.n	80064f4 <HAL_TIM_Base_Start_IT+0x54>
 80064dc:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 80064e0:	4293      	cmp	r3, r2
 80064e2:	d007      	beq.n	80064f4 <HAL_TIM_Base_Start_IT+0x54>
 80064e4:	f502 5270 	add.w	r2, r2, #15360	@ 0x3c00
 80064e8:	4293      	cmp	r3, r2
 80064ea:	d003      	beq.n	80064f4 <HAL_TIM_Base_Start_IT+0x54>
 80064ec:	f5a2 3294 	sub.w	r2, r2, #75776	@ 0x12800
 80064f0:	4293      	cmp	r3, r2
 80064f2:	d104      	bne.n	80064fe <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80064f4:	689a      	ldr	r2, [r3, #8]
 80064f6:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80064fa:	2a06      	cmp	r2, #6
 80064fc:	d003      	beq.n	8006506 <HAL_TIM_Base_Start_IT+0x66>
    {
      __HAL_TIM_ENABLE(htim);
 80064fe:	681a      	ldr	r2, [r3, #0]
 8006500:	f042 0201 	orr.w	r2, r2, #1
 8006504:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 8006506:	2000      	movs	r0, #0
 8006508:	4770      	bx	lr
    return HAL_ERROR;
 800650a:	2001      	movs	r0, #1
}
 800650c:	4770      	bx	lr
 800650e:	bf00      	nop
 8006510:	40010000 	.word	0x40010000

08006514 <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 8006514:	4770      	bx	lr

08006516 <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 8006516:	4770      	bx	lr

08006518 <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 8006518:	4770      	bx	lr

0800651a <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 800651a:	4770      	bx	lr

0800651c <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
 800651c:	6803      	ldr	r3, [r0, #0]
{
 800651e:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
 8006520:	68dd      	ldr	r5, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
 8006522:	691e      	ldr	r6, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8006524:	07b1      	lsls	r1, r6, #30
{
 8006526:	4604      	mov	r4, r0
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8006528:	d50d      	bpl.n	8006546 <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 800652a:	07aa      	lsls	r2, r5, #30
 800652c:	d50b      	bpl.n	8006546 <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 800652e:	f06f 0202 	mvn.w	r2, #2
 8006532:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8006534:	2201      	movs	r2, #1
 8006536:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8006538:	699b      	ldr	r3, [r3, #24]
 800653a:	079b      	lsls	r3, r3, #30
 800653c:	d069      	beq.n	8006612 <HAL_TIM_IRQHandler+0xf6>
          HAL_TIM_IC_CaptureCallback(htim);
 800653e:	f7ff ffea 	bl	8006516 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006542:	2300      	movs	r3, #0
 8006544:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 8006546:	0771      	lsls	r1, r6, #29
 8006548:	d510      	bpl.n	800656c <HAL_TIM_IRQHandler+0x50>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 800654a:	076a      	lsls	r2, r5, #29
 800654c:	d50e      	bpl.n	800656c <HAL_TIM_IRQHandler+0x50>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 800654e:	6823      	ldr	r3, [r4, #0]
 8006550:	f06f 0204 	mvn.w	r2, #4
 8006554:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8006556:	2202      	movs	r2, #2
 8006558:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800655a:	699b      	ldr	r3, [r3, #24]
 800655c:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 8006560:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006562:	d05c      	beq.n	800661e <HAL_TIM_IRQHandler+0x102>
        HAL_TIM_IC_CaptureCallback(htim);
 8006564:	f7ff ffd7 	bl	8006516 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006568:	2300      	movs	r3, #0
 800656a:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 800656c:	0733      	lsls	r3, r6, #28
 800656e:	d50f      	bpl.n	8006590 <HAL_TIM_IRQHandler+0x74>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 8006570:	0728      	lsls	r0, r5, #28
 8006572:	d50d      	bpl.n	8006590 <HAL_TIM_IRQHandler+0x74>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8006574:	6823      	ldr	r3, [r4, #0]
 8006576:	f06f 0208 	mvn.w	r2, #8
 800657a:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800657c:	2204      	movs	r2, #4
 800657e:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006580:	69db      	ldr	r3, [r3, #28]
 8006582:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 8006584:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006586:	d050      	beq.n	800662a <HAL_TIM_IRQHandler+0x10e>
        HAL_TIM_IC_CaptureCallback(htim);
 8006588:	f7ff ffc5 	bl	8006516 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800658c:	2300      	movs	r3, #0
 800658e:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 8006590:	06f2      	lsls	r2, r6, #27
 8006592:	d510      	bpl.n	80065b6 <HAL_TIM_IRQHandler+0x9a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 8006594:	06eb      	lsls	r3, r5, #27
 8006596:	d50e      	bpl.n	80065b6 <HAL_TIM_IRQHandler+0x9a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 8006598:	6823      	ldr	r3, [r4, #0]
 800659a:	f06f 0210 	mvn.w	r2, #16
 800659e:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80065a0:	2208      	movs	r2, #8
 80065a2:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80065a4:	69db      	ldr	r3, [r3, #28]
 80065a6:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 80065aa:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80065ac:	d043      	beq.n	8006636 <HAL_TIM_IRQHandler+0x11a>
        HAL_TIM_IC_CaptureCallback(htim);
 80065ae:	f7ff ffb2 	bl	8006516 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80065b2:	2300      	movs	r3, #0
 80065b4:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 80065b6:	07f0      	lsls	r0, r6, #31
 80065b8:	d508      	bpl.n	80065cc <HAL_TIM_IRQHandler+0xb0>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 80065ba:	07e9      	lsls	r1, r5, #31
 80065bc:	d506      	bpl.n	80065cc <HAL_TIM_IRQHandler+0xb0>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 80065be:	6823      	ldr	r3, [r4, #0]
 80065c0:	f06f 0201 	mvn.w	r2, #1
 80065c4:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 80065c6:	4620      	mov	r0, r4
 80065c8:	f7fb f910 	bl	80017ec <HAL_TIM_PeriodElapsedCallback>
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 80065cc:	0632      	lsls	r2, r6, #24
 80065ce:	d508      	bpl.n	80065e2 <HAL_TIM_IRQHandler+0xc6>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 80065d0:	062b      	lsls	r3, r5, #24
 80065d2:	d506      	bpl.n	80065e2 <HAL_TIM_IRQHandler+0xc6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 80065d4:	6823      	ldr	r3, [r4, #0]
 80065d6:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 80065da:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 80065dc:	4620      	mov	r0, r4
 80065de:	f000 f8ca 	bl	8006776 <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 80065e2:	0670      	lsls	r0, r6, #25
 80065e4:	d508      	bpl.n	80065f8 <HAL_TIM_IRQHandler+0xdc>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 80065e6:	0669      	lsls	r1, r5, #25
 80065e8:	d506      	bpl.n	80065f8 <HAL_TIM_IRQHandler+0xdc>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 80065ea:	6823      	ldr	r3, [r4, #0]
 80065ec:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 80065f0:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 80065f2:	4620      	mov	r0, r4
 80065f4:	f7ff ff91 	bl	800651a <HAL_TIM_TriggerCallback>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 80065f8:	06b2      	lsls	r2, r6, #26
 80065fa:	d522      	bpl.n	8006642 <HAL_TIM_IRQHandler+0x126>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 80065fc:	06ab      	lsls	r3, r5, #26
 80065fe:	d520      	bpl.n	8006642 <HAL_TIM_IRQHandler+0x126>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8006600:	6823      	ldr	r3, [r4, #0]
 8006602:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 8006606:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8006608:	611a      	str	r2, [r3, #16]
}
 800660a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      HAL_TIMEx_CommutCallback(htim);
 800660e:	f000 b8b1 	b.w	8006774 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8006612:	f7ff ff7f 	bl	8006514 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006616:	4620      	mov	r0, r4
 8006618:	f7ff ff7e 	bl	8006518 <HAL_TIM_PWM_PulseFinishedCallback>
 800661c:	e791      	b.n	8006542 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800661e:	f7ff ff79 	bl	8006514 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006622:	4620      	mov	r0, r4
 8006624:	f7ff ff78 	bl	8006518 <HAL_TIM_PWM_PulseFinishedCallback>
 8006628:	e79e      	b.n	8006568 <HAL_TIM_IRQHandler+0x4c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800662a:	f7ff ff73 	bl	8006514 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800662e:	4620      	mov	r0, r4
 8006630:	f7ff ff72 	bl	8006518 <HAL_TIM_PWM_PulseFinishedCallback>
 8006634:	e7aa      	b.n	800658c <HAL_TIM_IRQHandler+0x70>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006636:	f7ff ff6d 	bl	8006514 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800663a:	4620      	mov	r0, r4
 800663c:	f7ff ff6c 	bl	8006518 <HAL_TIM_PWM_PulseFinishedCallback>
 8006640:	e7b7      	b.n	80065b2 <HAL_TIM_IRQHandler+0x96>
}
 8006642:	bd70      	pop	{r4, r5, r6, pc}

08006644 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006644:	4a33      	ldr	r2, [pc, #204]	@ (8006714 <TIM_Base_SetConfig+0xd0>)
  tmpcr1 = TIMx->CR1;
 8006646:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006648:	4290      	cmp	r0, r2
 800664a:	d012      	beq.n	8006672 <TIM_Base_SetConfig+0x2e>
 800664c:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8006650:	d00f      	beq.n	8006672 <TIM_Base_SetConfig+0x2e>
 8006652:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 8006656:	4290      	cmp	r0, r2
 8006658:	d00b      	beq.n	8006672 <TIM_Base_SetConfig+0x2e>
 800665a:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800665e:	4290      	cmp	r0, r2
 8006660:	d007      	beq.n	8006672 <TIM_Base_SetConfig+0x2e>
 8006662:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006666:	4290      	cmp	r0, r2
 8006668:	d003      	beq.n	8006672 <TIM_Base_SetConfig+0x2e>
 800666a:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 800666e:	4290      	cmp	r0, r2
 8006670:	d119      	bne.n	80066a6 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8006672:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8006674:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 8006678:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800667a:	4a26      	ldr	r2, [pc, #152]	@ (8006714 <TIM_Base_SetConfig+0xd0>)
 800667c:	4290      	cmp	r0, r2
 800667e:	d029      	beq.n	80066d4 <TIM_Base_SetConfig+0x90>
 8006680:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8006684:	d026      	beq.n	80066d4 <TIM_Base_SetConfig+0x90>
 8006686:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 800668a:	4290      	cmp	r0, r2
 800668c:	d022      	beq.n	80066d4 <TIM_Base_SetConfig+0x90>
 800668e:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006692:	4290      	cmp	r0, r2
 8006694:	d01e      	beq.n	80066d4 <TIM_Base_SetConfig+0x90>
 8006696:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800669a:	4290      	cmp	r0, r2
 800669c:	d01a      	beq.n	80066d4 <TIM_Base_SetConfig+0x90>
 800669e:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 80066a2:	4290      	cmp	r0, r2
 80066a4:	d016      	beq.n	80066d4 <TIM_Base_SetConfig+0x90>
 80066a6:	4a1c      	ldr	r2, [pc, #112]	@ (8006718 <TIM_Base_SetConfig+0xd4>)
 80066a8:	4290      	cmp	r0, r2
 80066aa:	d013      	beq.n	80066d4 <TIM_Base_SetConfig+0x90>
 80066ac:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80066b0:	4290      	cmp	r0, r2
 80066b2:	d00f      	beq.n	80066d4 <TIM_Base_SetConfig+0x90>
 80066b4:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80066b8:	4290      	cmp	r0, r2
 80066ba:	d00b      	beq.n	80066d4 <TIM_Base_SetConfig+0x90>
 80066bc:	f5a2 3298 	sub.w	r2, r2, #77824	@ 0x13000
 80066c0:	4290      	cmp	r0, r2
 80066c2:	d007      	beq.n	80066d4 <TIM_Base_SetConfig+0x90>
 80066c4:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80066c8:	4290      	cmp	r0, r2
 80066ca:	d003      	beq.n	80066d4 <TIM_Base_SetConfig+0x90>
 80066cc:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80066d0:	4290      	cmp	r0, r2
 80066d2:	d103      	bne.n	80066dc <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80066d4:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 80066d6:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80066da:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80066dc:	694a      	ldr	r2, [r1, #20]
 80066de:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80066e2:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 80066e4:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80066e6:	688b      	ldr	r3, [r1, #8]
 80066e8:	62c3      	str	r3, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80066ea:	680b      	ldr	r3, [r1, #0]
 80066ec:	6283      	str	r3, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80066ee:	4b09      	ldr	r3, [pc, #36]	@ (8006714 <TIM_Base_SetConfig+0xd0>)
 80066f0:	4298      	cmp	r0, r3
 80066f2:	d003      	beq.n	80066fc <TIM_Base_SetConfig+0xb8>
 80066f4:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80066f8:	4298      	cmp	r0, r3
 80066fa:	d101      	bne.n	8006700 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80066fc:	690b      	ldr	r3, [r1, #16]
 80066fe:	6303      	str	r3, [r0, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8006700:	2301      	movs	r3, #1
 8006702:	6143      	str	r3, [r0, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 8006704:	6903      	ldr	r3, [r0, #16]
 8006706:	07db      	lsls	r3, r3, #31
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 8006708:	bf42      	ittt	mi
 800670a:	6903      	ldrmi	r3, [r0, #16]
 800670c:	f023 0301 	bicmi.w	r3, r3, #1
 8006710:	6103      	strmi	r3, [r0, #16]
  }
}
 8006712:	4770      	bx	lr
 8006714:	40010000 	.word	0x40010000
 8006718:	40014000 	.word	0x40014000

0800671c <HAL_TIM_Base_Init>:
{
 800671c:	b510      	push	{r4, lr}
  if (htim == NULL)
 800671e:	4604      	mov	r4, r0
 8006720:	b330      	cbz	r0, 8006770 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 8006722:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8006726:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800672a:	b91b      	cbnz	r3, 8006734 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800672c:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 8006730:	f7ff feb4 	bl	800649c <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8006734:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006736:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8006738:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800673c:	1d21      	adds	r1, r4, #4
 800673e:	f7ff ff81 	bl	8006644 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8006742:	2301      	movs	r3, #1
 8006744:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
  return HAL_OK;
 8006748:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800674a:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 800674e:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 8006752:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8006756:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800675a:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800675e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8006762:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 8006766:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
  htim->State = HAL_TIM_STATE_READY;
 800676a:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 800676e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006770:	2001      	movs	r0, #1
 8006772:	e7fc      	b.n	800676e <HAL_TIM_Base_Init+0x52>

08006774 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 8006774:	4770      	bx	lr

08006776 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 8006776:	4770      	bx	lr

08006778 <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8006778:	6802      	ldr	r2, [r0, #0]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800677a:	f102 030c 	add.w	r3, r2, #12
 800677e:	e853 3f00 	ldrex	r3, [r3]
 8006782:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006786:	320c      	adds	r2, #12
 8006788:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 800678c:	6802      	ldr	r2, [r0, #0]
 800678e:	2900      	cmp	r1, #0
 8006790:	d1f2      	bne.n	8006778 <UART_EndRxTransfer>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006792:	f102 0314 	add.w	r3, r2, #20
 8006796:	e853 3f00 	ldrex	r3, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800679a:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800679e:	f102 0c14 	add.w	ip, r2, #20
 80067a2:	e84c 3100 	strex	r1, r3, [ip]
 80067a6:	2900      	cmp	r1, #0
 80067a8:	d1f3      	bne.n	8006792 <UART_EndRxTransfer+0x1a>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 80067aa:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 80067ac:	2b01      	cmp	r3, #1
 80067ae:	d10b      	bne.n	80067c8 <UART_EndRxTransfer+0x50>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80067b0:	f102 030c 	add.w	r3, r2, #12
 80067b4:	e853 3f00 	ldrex	r3, [r3]
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80067b8:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80067bc:	f102 0c0c 	add.w	ip, r2, #12
 80067c0:	e84c 3100 	strex	r1, r3, [ip]
 80067c4:	2900      	cmp	r1, #0
 80067c6:	d1f3      	bne.n	80067b0 <UART_EndRxTransfer+0x38>
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 80067c8:	2320      	movs	r3, #32
 80067ca:	f880 3042 	strb.w	r3, [r0, #66]	@ 0x42
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80067ce:	2300      	movs	r3, #0
 80067d0:	6303      	str	r3, [r0, #48]	@ 0x30
}
 80067d2:	4770      	bx	lr

080067d4 <UART_SetConfig>:
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80067d4:	6802      	ldr	r2, [r0, #0]
 80067d6:	68c1      	ldr	r1, [r0, #12]
{
 80067d8:	b538      	push	{r3, r4, r5, lr}
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80067da:	6913      	ldr	r3, [r2, #16]
 80067dc:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 80067e0:	430b      	orrs	r3, r1
 80067e2:	6113      	str	r3, [r2, #16]
{
 80067e4:	4605      	mov	r5, r0
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 80067e6:	6883      	ldr	r3, [r0, #8]
 80067e8:	6900      	ldr	r0, [r0, #16]
  MODIFY_REG(huart->Instance->CR1,
 80067ea:	68d1      	ldr	r1, [r2, #12]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 80067ec:	4303      	orrs	r3, r0
 80067ee:	6968      	ldr	r0, [r5, #20]
 80067f0:	4303      	orrs	r3, r0
 80067f2:	69e8      	ldr	r0, [r5, #28]
  MODIFY_REG(huart->Instance->CR1,
 80067f4:	f421 4116 	bic.w	r1, r1, #38400	@ 0x9600
 80067f8:	f021 010c 	bic.w	r1, r1, #12
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 80067fc:	4303      	orrs	r3, r0
  MODIFY_REG(huart->Instance->CR1,
 80067fe:	430b      	orrs	r3, r1
 8006800:	60d3      	str	r3, [r2, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 8006802:	6953      	ldr	r3, [r2, #20]
 8006804:	69a9      	ldr	r1, [r5, #24]
 8006806:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800680a:	430b      	orrs	r3, r1
 800680c:	6153      	str	r3, [r2, #20]
    if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) || (huart->Instance == UART10))
    {
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 800680e:	4b1f      	ldr	r3, [pc, #124]	@ (800688c <UART_SetConfig+0xb8>)
 8006810:	429a      	cmp	r2, r3
 8006812:	d003      	beq.n	800681c <UART_SetConfig+0x48>
 8006814:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8006818:	429a      	cmp	r2, r3
 800681a:	d124      	bne.n	8006866 <UART_SetConfig+0x92>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 800681c:	f7ff f91c 	bl	8005a58 <HAL_RCC_GetPCLK2Freq>
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
    }
  /*-------------------------- USART BRR Configuration ---------------------*/
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8006820:	69ea      	ldr	r2, [r5, #28]
  {
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8006822:	2119      	movs	r1, #25
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8006824:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8006828:	e9d5 4300 	ldrd	r4, r3, [r5]
 800682c:	fba0 0101 	umull	r0, r1, r0, r1
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8006830:	d11c      	bne.n	800686c <UART_SetConfig+0x98>
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8006832:	18da      	adds	r2, r3, r3
 8006834:	f04f 0500 	mov.w	r5, #0
 8006838:	eb45 0305 	adc.w	r3, r5, r5
 800683c:	f7f9 fd30 	bl	80002a0 <__aeabi_uldivmod>
 8006840:	2264      	movs	r2, #100	@ 0x64
 8006842:	fbb0 f1f2 	udiv	r1, r0, r2
 8006846:	fb02 0311 	mls	r3, r2, r1, r0
 800684a:	00db      	lsls	r3, r3, #3
 800684c:	3332      	adds	r3, #50	@ 0x32
 800684e:	fbb3 f3f2 	udiv	r3, r3, r2
 8006852:	f003 0207 	and.w	r2, r3, #7
 8006856:	005b      	lsls	r3, r3, #1
 8006858:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 800685c:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8006860:	4413      	add	r3, r2
  }
  else
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8006862:	60a3      	str	r3, [r4, #8]
  }
}
 8006864:	bd38      	pop	{r3, r4, r5, pc}
      pclk = HAL_RCC_GetPCLK1Freq();
 8006866:	f7ff f8e7 	bl	8005a38 <HAL_RCC_GetPCLK1Freq>
 800686a:	e7d9      	b.n	8006820 <UART_SetConfig+0x4c>
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 800686c:	009a      	lsls	r2, r3, #2
 800686e:	0f9b      	lsrs	r3, r3, #30
 8006870:	f7f9 fd16 	bl	80002a0 <__aeabi_uldivmod>
 8006874:	2264      	movs	r2, #100	@ 0x64
 8006876:	fbb0 f1f2 	udiv	r1, r0, r2
 800687a:	fb02 0311 	mls	r3, r2, r1, r0
 800687e:	011b      	lsls	r3, r3, #4
 8006880:	3332      	adds	r3, #50	@ 0x32
 8006882:	fbb3 f3f2 	udiv	r3, r3, r2
 8006886:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 800688a:	e7ea      	b.n	8006862 <UART_SetConfig+0x8e>
 800688c:	40011000 	.word	0x40011000

08006890 <UART_WaitOnFlagUntilTimeout.constprop.0>:
static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
 8006890:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006892:	4605      	mov	r5, r0
 8006894:	460c      	mov	r4, r1
 8006896:	4617      	mov	r7, r2
 8006898:	461e      	mov	r6, r3
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800689a:	682a      	ldr	r2, [r5, #0]
 800689c:	6813      	ldr	r3, [r2, #0]
 800689e:	ea34 0303 	bics.w	r3, r4, r3
 80068a2:	d101      	bne.n	80068a8 <UART_WaitOnFlagUntilTimeout.constprop.0+0x18>
  return HAL_OK;
 80068a4:	2000      	movs	r0, #0
 80068a6:	e021      	b.n	80068ec <UART_WaitOnFlagUntilTimeout.constprop.0+0x5c>
    if (Timeout != HAL_MAX_DELAY)
 80068a8:	1c70      	adds	r0, r6, #1
 80068aa:	d0f7      	beq.n	800689c <UART_WaitOnFlagUntilTimeout.constprop.0+0xc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80068ac:	f7fd fba6 	bl	8003ffc <HAL_GetTick>
 80068b0:	1bc0      	subs	r0, r0, r7
 80068b2:	4286      	cmp	r6, r0
 80068b4:	d31c      	bcc.n	80068f0 <UART_WaitOnFlagUntilTimeout.constprop.0+0x60>
 80068b6:	b1de      	cbz	r6, 80068f0 <UART_WaitOnFlagUntilTimeout.constprop.0+0x60>
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
 80068b8:	682b      	ldr	r3, [r5, #0]
 80068ba:	68da      	ldr	r2, [r3, #12]
 80068bc:	0751      	lsls	r1, r2, #29
 80068be:	d5ec      	bpl.n	800689a <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
 80068c0:	2c80      	cmp	r4, #128	@ 0x80
 80068c2:	d0ea      	beq.n	800689a <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
 80068c4:	2c40      	cmp	r4, #64	@ 0x40
 80068c6:	d0e8      	beq.n	800689a <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 80068c8:	681a      	ldr	r2, [r3, #0]
 80068ca:	0712      	lsls	r2, r2, #28
 80068cc:	d5e5      	bpl.n	800689a <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
          __HAL_UART_CLEAR_OREFLAG(huart);
 80068ce:	2400      	movs	r4, #0
 80068d0:	9401      	str	r4, [sp, #4]
 80068d2:	681a      	ldr	r2, [r3, #0]
 80068d4:	9201      	str	r2, [sp, #4]
 80068d6:	685b      	ldr	r3, [r3, #4]
 80068d8:	9301      	str	r3, [sp, #4]
          UART_EndRxTransfer(huart);
 80068da:	4628      	mov	r0, r5
          __HAL_UART_CLEAR_OREFLAG(huart);
 80068dc:	9b01      	ldr	r3, [sp, #4]
          UART_EndRxTransfer(huart);
 80068de:	f7ff ff4b 	bl	8006778 <UART_EndRxTransfer>
          huart->ErrorCode = HAL_UART_ERROR_ORE;
 80068e2:	2308      	movs	r3, #8
 80068e4:	646b      	str	r3, [r5, #68]	@ 0x44
          __HAL_UNLOCK(huart);
 80068e6:	f885 4040 	strb.w	r4, [r5, #64]	@ 0x40
          return HAL_ERROR;
 80068ea:	2001      	movs	r0, #1
}
 80068ec:	b003      	add	sp, #12
 80068ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
 80068f0:	2003      	movs	r0, #3
 80068f2:	e7fb      	b.n	80068ec <UART_WaitOnFlagUntilTimeout.constprop.0+0x5c>

080068f4 <HAL_UART_Init>:
{
 80068f4:	b510      	push	{r4, lr}
  if (huart == NULL)
 80068f6:	4604      	mov	r4, r0
 80068f8:	b348      	cbz	r0, 800694e <HAL_UART_Init+0x5a>
  if (huart->gState == HAL_UART_STATE_RESET)
 80068fa:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
 80068fe:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8006902:	b91b      	cbnz	r3, 800690c <HAL_UART_Init+0x18>
    huart->Lock = HAL_UNLOCKED;
 8006904:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_UART_MspInit(huart);
 8006908:	f7fb f99c 	bl	8001c44 <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 800690c:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 800690e:	2324      	movs	r3, #36	@ 0x24
 8006910:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UART_DISABLE(huart);
 8006914:	68d3      	ldr	r3, [r2, #12]
 8006916:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 800691a:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 800691c:	4620      	mov	r0, r4
 800691e:	f7ff ff59 	bl	80067d4 <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8006922:	6823      	ldr	r3, [r4, #0]
 8006924:	691a      	ldr	r2, [r3, #16]
 8006926:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 800692a:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 800692c:	695a      	ldr	r2, [r3, #20]
 800692e:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8006932:	615a      	str	r2, [r3, #20]
  __HAL_UART_ENABLE(huart);
 8006934:	68da      	ldr	r2, [r3, #12]
 8006936:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800693a:	60da      	str	r2, [r3, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800693c:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 800693e:	2320      	movs	r3, #32
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006940:	6460      	str	r0, [r4, #68]	@ 0x44
  huart->gState = HAL_UART_STATE_READY;
 8006942:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  huart->RxState = HAL_UART_STATE_READY;
 8006946:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 800694a:	6360      	str	r0, [r4, #52]	@ 0x34
}
 800694c:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800694e:	2001      	movs	r0, #1
 8006950:	e7fc      	b.n	800694c <HAL_UART_Init+0x58>

08006952 <HAL_UART_Transmit>:
{
 8006952:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006956:	4698      	mov	r8, r3
  if (huart->gState == HAL_UART_STATE_READY)
 8006958:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
 800695c:	2b20      	cmp	r3, #32
{
 800695e:	4604      	mov	r4, r0
 8006960:	460e      	mov	r6, r1
 8006962:	4617      	mov	r7, r2
  if (huart->gState == HAL_UART_STATE_READY)
 8006964:	d13f      	bne.n	80069e6 <HAL_UART_Transmit+0x94>
    if ((pData == NULL) || (Size == 0U))
 8006966:	2900      	cmp	r1, #0
 8006968:	d03f      	beq.n	80069ea <HAL_UART_Transmit+0x98>
 800696a:	2a00      	cmp	r2, #0
 800696c:	d03d      	beq.n	80069ea <HAL_UART_Transmit+0x98>
    huart->gState = HAL_UART_STATE_BUSY_TX;
 800696e:	2321      	movs	r3, #33	@ 0x21
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006970:	2500      	movs	r5, #0
 8006972:	6445      	str	r5, [r0, #68]	@ 0x44
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8006974:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
    tickstart = HAL_GetTick();
 8006978:	f7fd fb40 	bl	8003ffc <HAL_GetTick>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800697c:	68a3      	ldr	r3, [r4, #8]
    huart->TxXferSize = Size;
 800697e:	84a7      	strh	r7, [r4, #36]	@ 0x24
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8006980:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
    tickstart = HAL_GetTick();
 8006984:	4681      	mov	r9, r0
    huart->TxXferCount = Size;
 8006986:	84e7      	strh	r7, [r4, #38]	@ 0x26
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8006988:	d103      	bne.n	8006992 <HAL_UART_Transmit+0x40>
 800698a:	6923      	ldr	r3, [r4, #16]
 800698c:	b90b      	cbnz	r3, 8006992 <HAL_UART_Transmit+0x40>
 800698e:	4635      	mov	r5, r6
      pdata8bits  = NULL;
 8006990:	461e      	mov	r6, r3
    while (huart->TxXferCount > 0U)
 8006992:	8ce3      	ldrh	r3, [r4, #38]	@ 0x26
 8006994:	b29b      	uxth	r3, r3
 8006996:	b953      	cbnz	r3, 80069ae <HAL_UART_Transmit+0x5c>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8006998:	4643      	mov	r3, r8
 800699a:	464a      	mov	r2, r9
 800699c:	2140      	movs	r1, #64	@ 0x40
 800699e:	4620      	mov	r0, r4
 80069a0:	f7ff ff76 	bl	8006890 <UART_WaitOnFlagUntilTimeout.constprop.0>
 80069a4:	2320      	movs	r3, #32
 80069a6:	b950      	cbnz	r0, 80069be <HAL_UART_Transmit+0x6c>
    huart->gState = HAL_UART_STATE_READY;
 80069a8:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    return HAL_OK;
 80069ac:	e00a      	b.n	80069c4 <HAL_UART_Transmit+0x72>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80069ae:	4643      	mov	r3, r8
 80069b0:	464a      	mov	r2, r9
 80069b2:	2180      	movs	r1, #128	@ 0x80
 80069b4:	4620      	mov	r0, r4
 80069b6:	f7ff ff6b 	bl	8006890 <UART_WaitOnFlagUntilTimeout.constprop.0>
 80069ba:	b128      	cbz	r0, 80069c8 <HAL_UART_Transmit+0x76>
        huart->gState = HAL_UART_STATE_READY;
 80069bc:	2320      	movs	r3, #32
 80069be:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        return HAL_TIMEOUT;
 80069c2:	2003      	movs	r0, #3
}
 80069c4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 80069c8:	6822      	ldr	r2, [r4, #0]
      if (pdata8bits == NULL)
 80069ca:	b94e      	cbnz	r6, 80069e0 <HAL_UART_Transmit+0x8e>
        huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 80069cc:	f835 3b02 	ldrh.w	r3, [r5], #2
 80069d0:	f3c3 0308 	ubfx	r3, r3, #0, #9
        huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 80069d4:	6053      	str	r3, [r2, #4]
      huart->TxXferCount--;
 80069d6:	8ce1      	ldrh	r1, [r4, #38]	@ 0x26
 80069d8:	3901      	subs	r1, #1
 80069da:	b289      	uxth	r1, r1
 80069dc:	84e1      	strh	r1, [r4, #38]	@ 0x26
 80069de:	e7d8      	b.n	8006992 <HAL_UART_Transmit+0x40>
        huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 80069e0:	f816 3b01 	ldrb.w	r3, [r6], #1
 80069e4:	e7f6      	b.n	80069d4 <HAL_UART_Transmit+0x82>
    return HAL_BUSY;
 80069e6:	2002      	movs	r0, #2
 80069e8:	e7ec      	b.n	80069c4 <HAL_UART_Transmit+0x72>
      return  HAL_ERROR;
 80069ea:	2001      	movs	r0, #1
 80069ec:	e7ea      	b.n	80069c4 <HAL_UART_Transmit+0x72>

080069ee <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 80069ee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80069f2:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 80069f6:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 80069fa:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 80069fe:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
 8006a02:	f8d1 e024 	ldr.w	lr, [r1, #36]	@ 0x24
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8006a06:	6809      	ldr	r1, [r1, #0]
 8006a08:	ea43 0308 	orr.w	r3, r3, r8
 8006a0c:	b991      	cbnz	r1, 8006a34 <FMC_SDRAM_Init+0x46>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8006a0e:	ea43 030e 	orr.w	r3, r3, lr
 8006a12:	4313      	orrs	r3, r2
 8006a14:	ea43 030c 	orr.w	r3, r3, ip
 8006a18:	6801      	ldr	r1, [r0, #0]
 8006a1a:	433b      	orrs	r3, r7
 8006a1c:	4333      	orrs	r3, r6
 8006a1e:	432b      	orrs	r3, r5
 8006a20:	f421 41ff 	bic.w	r1, r1, #32640	@ 0x7f80
 8006a24:	4323      	orrs	r3, r4
 8006a26:	f021 017f 	bic.w	r1, r1, #127	@ 0x7f
 8006a2a:	430b      	orrs	r3, r1
 8006a2c:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 8006a2e:	2000      	movs	r0, #0
 8006a30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8006a34:	6801      	ldr	r1, [r0, #0]
 8006a36:	ea43 030e 	orr.w	r3, r3, lr
 8006a3a:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
 8006a3e:	430b      	orrs	r3, r1
 8006a40:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 8006a42:	ea42 030c 	orr.w	r3, r2, ip
 8006a46:	6841      	ldr	r1, [r0, #4]
 8006a48:	433b      	orrs	r3, r7
 8006a4a:	4333      	orrs	r3, r6
 8006a4c:	432b      	orrs	r3, r5
 8006a4e:	f421 42ff 	bic.w	r2, r1, #32640	@ 0x7f80
 8006a52:	4323      	orrs	r3, r4
 8006a54:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 8006a58:	4313      	orrs	r3, r2
 8006a5a:	6043      	str	r3, [r0, #4]
 8006a5c:	e7e7      	b.n	8006a2e <FMC_SDRAM_Init+0x40>

08006a5e <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006a5e:	68cb      	ldr	r3, [r1, #12]
 8006a60:	f103 3cff 	add.w	ip, r3, #4294967295
 8006a64:	694b      	ldr	r3, [r1, #20]
{
 8006a66:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006a68:	680f      	ldr	r7, [r1, #0]
 8006a6a:	684c      	ldr	r4, [r1, #4]
 8006a6c:	688e      	ldr	r6, [r1, #8]
 8006a6e:	690d      	ldr	r5, [r1, #16]
 8006a70:	6989      	ldr	r1, [r1, #24]
 8006a72:	3b01      	subs	r3, #1
 8006a74:	051b      	lsls	r3, r3, #20
 8006a76:	3c01      	subs	r4, #1
 8006a78:	3e01      	subs	r6, #1
 8006a7a:	3d01      	subs	r5, #1
 8006a7c:	3901      	subs	r1, #1
 8006a7e:	3f01      	subs	r7, #1
 8006a80:	0124      	lsls	r4, r4, #4
 8006a82:	0236      	lsls	r6, r6, #8
 8006a84:	042d      	lsls	r5, r5, #16
 8006a86:	0609      	lsls	r1, r1, #24
 8006a88:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 8006a8c:	b95a      	cbnz	r2, 8006aa6 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006a8e:	433b      	orrs	r3, r7
 8006a90:	4323      	orrs	r3, r4
 8006a92:	6882      	ldr	r2, [r0, #8]
 8006a94:	4333      	orrs	r3, r6
 8006a96:	432b      	orrs	r3, r5
 8006a98:	430b      	orrs	r3, r1
 8006a9a:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8006a9e:	4313      	orrs	r3, r2
 8006aa0:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 8006aa2:	2000      	movs	r0, #0
 8006aa4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006aa6:	6882      	ldr	r2, [r0, #8]
 8006aa8:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8006aac:	f422 4270 	bic.w	r2, r2, #61440	@ 0xf000
 8006ab0:	431a      	orrs	r2, r3
 8006ab2:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8006ab4:	ea44 0306 	orr.w	r3, r4, r6
 8006ab8:	68c2      	ldr	r2, [r0, #12]
 8006aba:	433b      	orrs	r3, r7
 8006abc:	432b      	orrs	r3, r5
 8006abe:	430b      	orrs	r3, r1
 8006ac0:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8006ac4:	4313      	orrs	r3, r2
 8006ac6:	60c3      	str	r3, [r0, #12]
 8006ac8:	e7eb      	b.n	8006aa2 <FMC_SDRAM_Timing_Init+0x44>

08006aca <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8006aca:	b570      	push	{r4, r5, r6, lr}
 8006acc:	4604      	mov	r4, r0
 8006ace:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8006ad0:	6902      	ldr	r2, [r0, #16]
 8006ad2:	e9d1 3000 	ldrd	r3, r0, [r1]
 8006ad6:	4303      	orrs	r3, r0
 8006ad8:	68c8      	ldr	r0, [r1, #12]
 8006ada:	0d92      	lsrs	r2, r2, #22
 8006adc:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 8006ae0:	0592      	lsls	r2, r2, #22
 8006ae2:	4313      	orrs	r3, r2
 8006ae4:	688a      	ldr	r2, [r1, #8]
 8006ae6:	3a01      	subs	r2, #1
 8006ae8:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8006aec:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 8006aee:	f7fd fa85 	bl	8003ffc <HAL_GetTick>
 8006af2:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8006af4:	69a0      	ldr	r0, [r4, #24]
 8006af6:	f010 0020 	ands.w	r0, r0, #32
 8006afa:	d003      	beq.n	8006b04 <FMC_SDRAM_SendCommand+0x3a>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8006afc:	1c6b      	adds	r3, r5, #1
 8006afe:	d0f9      	beq.n	8006af4 <FMC_SDRAM_SendCommand+0x2a>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8006b00:	b90d      	cbnz	r5, 8006b06 <FMC_SDRAM_SendCommand+0x3c>
      {
        return HAL_TIMEOUT;
 8006b02:	2003      	movs	r0, #3
      }
    }
  }
  return HAL_OK;
}
 8006b04:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8006b06:	f7fd fa79 	bl	8003ffc <HAL_GetTick>
 8006b0a:	1b80      	subs	r0, r0, r6
 8006b0c:	42a8      	cmp	r0, r5
 8006b0e:	d9f1      	bls.n	8006af4 <FMC_SDRAM_SendCommand+0x2a>
 8006b10:	e7f7      	b.n	8006b02 <FMC_SDRAM_SendCommand+0x38>

08006b12 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 8006b12:	6943      	ldr	r3, [r0, #20]
 8006b14:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 8006b18:	f023 033e 	bic.w	r3, r3, #62	@ 0x3e
 8006b1c:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 8006b20:	6143      	str	r3, [r0, #20]

  return HAL_OK;
}
 8006b22:	2000      	movs	r0, #0
 8006b24:	4770      	bx	lr

08006b26 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8006b26:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 8006b28:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8006b2c:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8006b2e:	f001 fe51 	bl	80087d4 <xTaskGetSchedulerState>
 8006b32:	2801      	cmp	r0, #1
 8006b34:	d003      	beq.n	8006b3e <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 8006b36:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8006b3a:	f000 bbfb 	b.w	8007334 <xPortSysTickHandler>
}
 8006b3e:	bd08      	pop	{r3, pc}

08006b40 <osKernelInitialize>:
 */
__STATIC_FORCEINLINE uint32_t __get_IPSR(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006b40:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8006b44:	b92b      	cbnz	r3, 8006b52 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 8006b46:	4b06      	ldr	r3, [pc, #24]	@ (8006b60 <osKernelInitialize+0x20>)
 8006b48:	6818      	ldr	r0, [r3, #0]
 8006b4a:	b928      	cbnz	r0, 8006b58 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8006b4c:	2201      	movs	r2, #1
 8006b4e:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8006b50:	4770      	bx	lr
    stat = osErrorISR;
 8006b52:	f06f 0005 	mvn.w	r0, #5
 8006b56:	4770      	bx	lr
    } else {
      stat = osError;
 8006b58:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8006b5c:	4770      	bx	lr
 8006b5e:	bf00      	nop
 8006b60:	20001334 	.word	0x20001334

08006b64 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8006b64:	b510      	push	{r4, lr}
 8006b66:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8006b6a:	b95c      	cbnz	r4, 8006b84 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8006b6c:	4b08      	ldr	r3, [pc, #32]	@ (8006b90 <osKernelStart+0x2c>)
 8006b6e:	681a      	ldr	r2, [r3, #0]
 8006b70:	2a01      	cmp	r2, #1
 8006b72:	d10a      	bne.n	8006b8a <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006b74:	4a07      	ldr	r2, [pc, #28]	@ (8006b94 <osKernelStart+0x30>)
 8006b76:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8006b78:	2202      	movs	r2, #2
 8006b7a:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8006b7c:	f001 fb98 	bl	80082b0 <vTaskStartScheduler>
      stat = osOK;
 8006b80:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 8006b82:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8006b84:	f06f 0005 	mvn.w	r0, #5
 8006b88:	e7fb      	b.n	8006b82 <osKernelStart+0x1e>
      stat = osError;
 8006b8a:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8006b8e:	e7f8      	b.n	8006b82 <osKernelStart+0x1e>
 8006b90:	20001334 	.word	0x20001334
 8006b94:	e000ed00 	.word	0xe000ed00

08006b98 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8006b98:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006b9a:	b087      	sub	sp, #28
 8006b9c:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8006b9e:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8006ba0:	460b      	mov	r3, r1
  hTask = NULL;
 8006ba2:	9205      	str	r2, [sp, #20]
 8006ba4:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8006ba8:	b9ca      	cbnz	r2, 8006bde <osThreadNew+0x46>
 8006baa:	b1c0      	cbz	r0, 8006bde <osThreadNew+0x46>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8006bac:	b36c      	cbz	r4, 8006c0a <osThreadNew+0x72>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8006bae:	69a5      	ldr	r5, [r4, #24]
 8006bb0:	2d00      	cmp	r5, #0
 8006bb2:	bf08      	it	eq
 8006bb4:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8006bb6:	1e69      	subs	r1, r5, #1
 8006bb8:	2937      	cmp	r1, #55	@ 0x37
 8006bba:	46ac      	mov	ip, r5
 8006bbc:	d82a      	bhi.n	8006c14 <osThreadNew+0x7c>
 8006bbe:	6861      	ldr	r1, [r4, #4]
 8006bc0:	07c9      	lsls	r1, r1, #31
 8006bc2:	d427      	bmi.n	8006c14 <osThreadNew+0x7c>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8006bc4:	6966      	ldr	r6, [r4, #20]
 8006bc6:	b16e      	cbz	r6, 8006be4 <osThreadNew+0x4c>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8006bc8:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006bca:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8006bce:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006bd0:	b157      	cbz	r7, 8006be8 <osThreadNew+0x50>
 8006bd2:	f1be 0fab 	cmp.w	lr, #171	@ 0xab
 8006bd6:	d902      	bls.n	8006bde <osThreadNew+0x46>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8006bd8:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006bda:	b104      	cbz	r4, 8006bde <osThreadNew+0x46>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8006bdc:	b9e6      	cbnz	r6, 8006c18 <osThreadNew+0x80>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 8006bde:	9805      	ldr	r0, [sp, #20]
}
 8006be0:	b007      	add	sp, #28
 8006be2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8006be4:	2280      	movs	r2, #128	@ 0x80
 8006be6:	e7f0      	b.n	8006bca <osThreadNew+0x32>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8006be8:	f1be 0f00 	cmp.w	lr, #0
 8006bec:	d1f7      	bne.n	8006bde <osThreadNew+0x46>
      if (mem == 0) {
 8006bee:	6924      	ldr	r4, [r4, #16]
 8006bf0:	2c00      	cmp	r4, #0
 8006bf2:	d1f4      	bne.n	8006bde <osThreadNew+0x46>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8006bf4:	ac05      	add	r4, sp, #20
 8006bf6:	e9cd c400 	strd	ip, r4, [sp]
 8006bfa:	b292      	uxth	r2, r2
 8006bfc:	f001 fb2a 	bl	8008254 <xTaskCreate>
 8006c00:	2801      	cmp	r0, #1
            hTask = NULL;
 8006c02:	bf1c      	itt	ne
 8006c04:	2300      	movne	r3, #0
 8006c06:	9305      	strne	r3, [sp, #20]
 8006c08:	e7e9      	b.n	8006bde <osThreadNew+0x46>
    name = NULL;
 8006c0a:	4621      	mov	r1, r4
    prio  = (UBaseType_t)osPriorityNormal;
 8006c0c:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8006c10:	2280      	movs	r2, #128	@ 0x80
 8006c12:	e7ef      	b.n	8006bf4 <osThreadNew+0x5c>
        return (NULL);
 8006c14:	4610      	mov	r0, r2
 8006c16:	e7e3      	b.n	8006be0 <osThreadNew+0x48>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8006c18:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8006c1c:	9500      	str	r5, [sp, #0]
 8006c1e:	f001 fae1 	bl	80081e4 <xTaskCreateStatic>
 8006c22:	9005      	str	r0, [sp, #20]
 8006c24:	e7db      	b.n	8006bde <osThreadNew+0x46>

08006c26 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 8006c26:	b508      	push	{r3, lr}
 8006c28:	f3ef 8205 	mrs	r2, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8006c2c:	b922      	cbnz	r2, 8006c38 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 8006c2e:	b108      	cbz	r0, 8006c34 <osDelay+0xe>
      vTaskDelay(ticks);
 8006c30:	f001 fca6 	bl	8008580 <vTaskDelay>
    stat = osOK;
 8006c34:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8006c36:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
 8006c38:	f06f 0005 	mvn.w	r0, #5
  return (stat);
 8006c3c:	e7fb      	b.n	8006c36 <osDelay+0x10>

08006c3e <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8006c3e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006c40:	4604      	mov	r4, r0
 8006c42:	460e      	mov	r6, r1
 8006c44:	4615      	mov	r5, r2
 8006c46:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8006c4a:	b942      	cbnz	r2, 8006c5e <osSemaphoreNew+0x20>
 8006c4c:	b138      	cbz	r0, 8006c5e <osSemaphoreNew+0x20>
 8006c4e:	4288      	cmp	r0, r1
 8006c50:	d305      	bcc.n	8006c5e <osSemaphoreNew+0x20>
    mem = -1;

    if (attr != NULL) {
 8006c52:	b155      	cbz	r5, 8006c6a <osSemaphoreNew+0x2c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8006c54:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 8006c58:	b12b      	cbz	r3, 8006c66 <osSemaphoreNew+0x28>
 8006c5a:	2f4f      	cmp	r7, #79	@ 0x4f
 8006c5c:	d822      	bhi.n	8006ca4 <osSemaphoreNew+0x66>
  hSemaphore = NULL;
 8006c5e:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8006c60:	4620      	mov	r0, r4
 8006c62:	b003      	add	sp, #12
 8006c64:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8006c66:	2f00      	cmp	r7, #0
 8006c68:	d1f9      	bne.n	8006c5e <osSemaphoreNew+0x20>
      if (max_count == 1U) {
 8006c6a:	2c01      	cmp	r4, #1
 8006c6c:	d00c      	beq.n	8006c88 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8006c6e:	4620      	mov	r0, r4
 8006c70:	4631      	mov	r1, r6
 8006c72:	f000 fd99 	bl	80077a8 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8006c76:	4604      	mov	r4, r0
 8006c78:	2800      	cmp	r0, #0
 8006c7a:	d0f0      	beq.n	8006c5e <osSemaphoreNew+0x20>
        if (attr != NULL) {
 8006c7c:	b985      	cbnz	r5, 8006ca0 <osSemaphoreNew+0x62>
        vQueueAddToRegistry (hSemaphore, name);
 8006c7e:	4629      	mov	r1, r5
 8006c80:	4620      	mov	r0, r4
 8006c82:	f001 f8d7 	bl	8007e34 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8006c86:	e7eb      	b.n	8006c60 <osSemaphoreNew+0x22>
            hSemaphore = xSemaphoreCreateBinary();
 8006c88:	2203      	movs	r2, #3
 8006c8a:	2100      	movs	r1, #0
 8006c8c:	2001      	movs	r0, #1
 8006c8e:	f000 fd42 	bl	8007716 <xQueueGenericCreate>
 8006c92:	e00e      	b.n	8006cb2 <osSemaphoreNew+0x74>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8006c94:	461a      	mov	r2, r3
 8006c96:	f000 fd65 	bl	8007764 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8006c9a:	4604      	mov	r4, r0
 8006c9c:	2800      	cmp	r0, #0
 8006c9e:	d0de      	beq.n	8006c5e <osSemaphoreNew+0x20>
          name = attr->name;
 8006ca0:	682d      	ldr	r5, [r5, #0]
 8006ca2:	e7ec      	b.n	8006c7e <osSemaphoreNew+0x40>
      if (max_count == 1U) {
 8006ca4:	2801      	cmp	r0, #1
 8006ca6:	d1f5      	bne.n	8006c94 <osSemaphoreNew+0x56>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8006ca8:	2103      	movs	r1, #3
 8006caa:	9100      	str	r1, [sp, #0]
 8006cac:	4611      	mov	r1, r2
 8006cae:	f000 fce4 	bl	800767a <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8006cb2:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8006cb4:	2800      	cmp	r0, #0
 8006cb6:	d0d2      	beq.n	8006c5e <osSemaphoreNew+0x20>
 8006cb8:	2e00      	cmp	r6, #0
 8006cba:	d0df      	beq.n	8006c7c <osSemaphoreNew+0x3e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8006cbc:	2300      	movs	r3, #0
 8006cbe:	461a      	mov	r2, r3
 8006cc0:	4619      	mov	r1, r3
 8006cc2:	f000 fd8f 	bl	80077e4 <xQueueGenericSend>
 8006cc6:	2801      	cmp	r0, #1
 8006cc8:	d0d8      	beq.n	8006c7c <osSemaphoreNew+0x3e>
            vSemaphoreDelete (hSemaphore);
 8006cca:	4620      	mov	r0, r4
 8006ccc:	f001 f8dc 	bl	8007e88 <vQueueDelete>
      if (hSemaphore != NULL) {
 8006cd0:	e7c5      	b.n	8006c5e <osSemaphoreNew+0x20>

08006cd2 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8006cd2:	b513      	push	{r0, r1, r4, lr}
 8006cd4:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8006cd6:	b328      	cbz	r0, 8006d24 <osSemaphoreAcquire+0x52>
 8006cd8:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8006cdc:	b1cb      	cbz	r3, 8006d12 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 8006cde:	bb09      	cbnz	r1, 8006d24 <osSemaphoreAcquire+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006ce0:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8006ce2:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006ce4:	f001 f839 	bl	8007d5a <xQueueReceiveFromISR>
 8006ce8:	2801      	cmp	r0, #1
 8006cea:	d003      	beq.n	8006cf4 <osSemaphoreAcquire+0x22>
        stat = osErrorResource;
 8006cec:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 8006cf0:	b002      	add	sp, #8
 8006cf2:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 8006cf4:	9b01      	ldr	r3, [sp, #4]
 8006cf6:	b90b      	cbnz	r3, 8006cfc <osSemaphoreAcquire+0x2a>
  stat = osOK;
 8006cf8:	2000      	movs	r0, #0
 8006cfa:	e7f9      	b.n	8006cf0 <osSemaphoreAcquire+0x1e>
        portYIELD_FROM_ISR (yield);
 8006cfc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8006d00:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8006d04:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8006d08:	f3bf 8f4f 	dsb	sy
 8006d0c:	f3bf 8f6f 	isb	sy
 8006d10:	e7f2      	b.n	8006cf8 <osSemaphoreAcquire+0x26>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8006d12:	f000 ff65 	bl	8007be0 <xQueueSemaphoreTake>
 8006d16:	2801      	cmp	r0, #1
 8006d18:	d0ee      	beq.n	8006cf8 <osSemaphoreAcquire+0x26>
      if (timeout != 0U) {
 8006d1a:	2c00      	cmp	r4, #0
 8006d1c:	d0e6      	beq.n	8006cec <osSemaphoreAcquire+0x1a>
        stat = osErrorTimeout;
 8006d1e:	f06f 0001 	mvn.w	r0, #1
 8006d22:	e7e5      	b.n	8006cf0 <osSemaphoreAcquire+0x1e>
    stat = osErrorParameter;
 8006d24:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8006d28:	e7e2      	b.n	8006cf0 <osSemaphoreAcquire+0x1e>

08006d2a <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8006d2a:	b507      	push	{r0, r1, r2, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8006d2c:	b318      	cbz	r0, 8006d76 <osSemaphoreRelease+0x4c>
 8006d2e:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8006d32:	b1cb      	cbz	r3, 8006d68 <osSemaphoreRelease+0x3e>
    yield = pdFALSE;
 8006d34:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8006d36:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8006d38:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8006d3a:	f000 fe62 	bl	8007a02 <xQueueGiveFromISR>
 8006d3e:	2801      	cmp	r0, #1
 8006d40:	d004      	beq.n	8006d4c <osSemaphoreRelease+0x22>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8006d42:	f06f 0002 	mvn.w	r0, #2
    }
  }

  return (stat);
}
 8006d46:	b003      	add	sp, #12
 8006d48:	f85d fb04 	ldr.w	pc, [sp], #4
      portYIELD_FROM_ISR (yield);
 8006d4c:	9b01      	ldr	r3, [sp, #4]
 8006d4e:	b14b      	cbz	r3, 8006d64 <osSemaphoreRelease+0x3a>
 8006d50:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8006d54:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8006d58:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8006d5c:	f3bf 8f4f 	dsb	sy
 8006d60:	f3bf 8f6f 	isb	sy
  stat = osOK;
 8006d64:	2000      	movs	r0, #0
 8006d66:	e7ee      	b.n	8006d46 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8006d68:	461a      	mov	r2, r3
 8006d6a:	4619      	mov	r1, r3
 8006d6c:	f000 fd3a 	bl	80077e4 <xQueueGenericSend>
 8006d70:	2801      	cmp	r0, #1
 8006d72:	d0f7      	beq.n	8006d64 <osSemaphoreRelease+0x3a>
 8006d74:	e7e5      	b.n	8006d42 <osSemaphoreRelease+0x18>
    stat = osErrorParameter;
 8006d76:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8006d7a:	e7e4      	b.n	8006d46 <osSemaphoreRelease+0x1c>

08006d7c <osSemaphoreGetCount>:

uint32_t osSemaphoreGetCount (osSemaphoreId_t semaphore_id) {
  SemaphoreHandle_t hSemaphore = (SemaphoreHandle_t)semaphore_id;
  uint32_t count;

  if (hSemaphore == NULL) {
 8006d7c:	b130      	cbz	r0, 8006d8c <osSemaphoreGetCount+0x10>
 8006d7e:	f3ef 8305 	mrs	r3, IPSR
    count = 0U;
  }
  else if (IS_IRQ()) {
 8006d82:	b10b      	cbz	r3, 8006d88 <osSemaphoreGetCount+0xc>
    count = uxQueueMessagesWaitingFromISR (hSemaphore);
 8006d84:	f001 b849 	b.w	8007e1a <uxQueueMessagesWaitingFromISR>
  } else {
    count = (uint32_t)uxSemaphoreGetCount (hSemaphore);
 8006d88:	f001 b834 	b.w	8007df4 <uxQueueMessagesWaiting>
  }

  return (count);
}
 8006d8c:	4770      	bx	lr

08006d8e <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8006d8e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006d90:	4605      	mov	r5, r0
 8006d92:	460e      	mov	r6, r1
 8006d94:	4614      	mov	r4, r2
 8006d96:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8006d9a:	b11f      	cbz	r7, 8006da4 <osMessageQueueNew+0x16>
  hQueue = NULL;
 8006d9c:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8006d9e:	4628      	mov	r0, r5
 8006da0:	b003      	add	sp, #12
 8006da2:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8006da4:	2800      	cmp	r0, #0
 8006da6:	d0f9      	beq.n	8006d9c <osMessageQueueNew+0xe>
 8006da8:	2900      	cmp	r1, #0
 8006daa:	d0f7      	beq.n	8006d9c <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8006dac:	b1da      	cbz	r2, 8006de6 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8006dae:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 8006db2:	b183      	cbz	r3, 8006dd6 <osMessageQueueNew+0x48>
 8006db4:	2a4f      	cmp	r2, #79	@ 0x4f
 8006db6:	d9f1      	bls.n	8006d9c <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8006db8:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8006dba:	2a00      	cmp	r2, #0
 8006dbc:	d0ee      	beq.n	8006d9c <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8006dbe:	6966      	ldr	r6, [r4, #20]
 8006dc0:	434d      	muls	r5, r1
 8006dc2:	42ae      	cmp	r6, r5
 8006dc4:	d3ea      	bcc.n	8006d9c <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8006dc6:	9700      	str	r7, [sp, #0]
 8006dc8:	f000 fc57 	bl	800767a <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8006dcc:	4605      	mov	r5, r0
 8006dce:	2800      	cmp	r0, #0
 8006dd0:	d0e4      	beq.n	8006d9c <osMessageQueueNew+0xe>
        name = attr->name;
 8006dd2:	6824      	ldr	r4, [r4, #0]
 8006dd4:	e011      	b.n	8006dfa <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8006dd6:	2a00      	cmp	r2, #0
 8006dd8:	d1e0      	bne.n	8006d9c <osMessageQueueNew+0xe>
 8006dda:	6923      	ldr	r3, [r4, #16]
 8006ddc:	2b00      	cmp	r3, #0
 8006dde:	d1dd      	bne.n	8006d9c <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8006de0:	6963      	ldr	r3, [r4, #20]
 8006de2:	2b00      	cmp	r3, #0
 8006de4:	d1da      	bne.n	8006d9c <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 8006de6:	4628      	mov	r0, r5
 8006de8:	2200      	movs	r2, #0
 8006dea:	4631      	mov	r1, r6
 8006dec:	f000 fc93 	bl	8007716 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8006df0:	4605      	mov	r5, r0
 8006df2:	2800      	cmp	r0, #0
 8006df4:	d0d2      	beq.n	8006d9c <osMessageQueueNew+0xe>
      if (attr != NULL) {
 8006df6:	2c00      	cmp	r4, #0
 8006df8:	d1eb      	bne.n	8006dd2 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 8006dfa:	4621      	mov	r1, r4
 8006dfc:	4628      	mov	r0, r5
 8006dfe:	f001 f819 	bl	8007e34 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8006e02:	e7cc      	b.n	8006d9e <osMessageQueueNew+0x10>

08006e04 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8006e04:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006e06:	461c      	mov	r4, r3
 8006e08:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8006e0c:	b1de      	cbz	r6, 8006e46 <osMessageQueuePut+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8006e0e:	b338      	cbz	r0, 8006e60 <osMessageQueuePut+0x5c>
 8006e10:	b331      	cbz	r1, 8006e60 <osMessageQueuePut+0x5c>
 8006e12:	bb2b      	cbnz	r3, 8006e60 <osMessageQueuePut+0x5c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8006e14:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8006e16:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8006e18:	f000 fd96 	bl	8007948 <xQueueGenericSendFromISR>
 8006e1c:	2801      	cmp	r0, #1
 8006e1e:	d003      	beq.n	8006e28 <osMessageQueuePut+0x24>
        stat = osErrorResource;
 8006e20:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 8006e24:	b002      	add	sp, #8
 8006e26:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8006e28:	9b01      	ldr	r3, [sp, #4]
 8006e2a:	b90b      	cbnz	r3, 8006e30 <osMessageQueuePut+0x2c>
  stat = osOK;
 8006e2c:	2000      	movs	r0, #0
 8006e2e:	e7f9      	b.n	8006e24 <osMessageQueuePut+0x20>
        portYIELD_FROM_ISR (yield);
 8006e30:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8006e34:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8006e38:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8006e3c:	f3bf 8f4f 	dsb	sy
 8006e40:	f3bf 8f6f 	isb	sy
 8006e44:	e7f2      	b.n	8006e2c <osMessageQueuePut+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8006e46:	b158      	cbz	r0, 8006e60 <osMessageQueuePut+0x5c>
 8006e48:	b151      	cbz	r1, 8006e60 <osMessageQueuePut+0x5c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8006e4a:	4633      	mov	r3, r6
 8006e4c:	4622      	mov	r2, r4
 8006e4e:	f000 fcc9 	bl	80077e4 <xQueueGenericSend>
 8006e52:	2801      	cmp	r0, #1
 8006e54:	d0ea      	beq.n	8006e2c <osMessageQueuePut+0x28>
        if (timeout != 0U) {
 8006e56:	2c00      	cmp	r4, #0
 8006e58:	d0e2      	beq.n	8006e20 <osMessageQueuePut+0x1c>
          stat = osErrorTimeout;
 8006e5a:	f06f 0001 	mvn.w	r0, #1
 8006e5e:	e7e1      	b.n	8006e24 <osMessageQueuePut+0x20>
      stat = osErrorParameter;
 8006e60:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8006e64:	e7de      	b.n	8006e24 <osMessageQueuePut+0x20>

08006e66 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8006e66:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006e68:	461c      	mov	r4, r3
 8006e6a:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8006e6e:	b1db      	cbz	r3, 8006ea8 <osMessageQueueGet+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8006e70:	b330      	cbz	r0, 8006ec0 <osMessageQueueGet+0x5a>
 8006e72:	b329      	cbz	r1, 8006ec0 <osMessageQueueGet+0x5a>
 8006e74:	bb24      	cbnz	r4, 8006ec0 <osMessageQueueGet+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8006e76:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8006e78:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8006e7a:	f000 ff6e 	bl	8007d5a <xQueueReceiveFromISR>
 8006e7e:	2801      	cmp	r0, #1
 8006e80:	d003      	beq.n	8006e8a <osMessageQueueGet+0x24>
        stat = osErrorResource;
 8006e82:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 8006e86:	b003      	add	sp, #12
 8006e88:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8006e8a:	9b01      	ldr	r3, [sp, #4]
 8006e8c:	b90b      	cbnz	r3, 8006e92 <osMessageQueueGet+0x2c>
  stat = osOK;
 8006e8e:	2000      	movs	r0, #0
 8006e90:	e7f9      	b.n	8006e86 <osMessageQueueGet+0x20>
        portYIELD_FROM_ISR (yield);
 8006e92:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8006e96:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8006e9a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8006e9e:	f3bf 8f4f 	dsb	sy
 8006ea2:	f3bf 8f6f 	isb	sy
 8006ea6:	e7f2      	b.n	8006e8e <osMessageQueueGet+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8006ea8:	b150      	cbz	r0, 8006ec0 <osMessageQueueGet+0x5a>
 8006eaa:	b149      	cbz	r1, 8006ec0 <osMessageQueueGet+0x5a>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8006eac:	4622      	mov	r2, r4
 8006eae:	f000 fdf9 	bl	8007aa4 <xQueueReceive>
 8006eb2:	2801      	cmp	r0, #1
 8006eb4:	d0eb      	beq.n	8006e8e <osMessageQueueGet+0x28>
        if (timeout != 0U) {
 8006eb6:	2c00      	cmp	r4, #0
 8006eb8:	d0e3      	beq.n	8006e82 <osMessageQueueGet+0x1c>
          stat = osErrorTimeout;
 8006eba:	f06f 0001 	mvn.w	r0, #1
 8006ebe:	e7e2      	b.n	8006e86 <osMessageQueueGet+0x20>
      stat = osErrorParameter;
 8006ec0:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8006ec4:	e7df      	b.n	8006e86 <osMessageQueueGet+0x20>

08006ec6 <osMessageQueueGetCount>:
  }

  return (size);
}

uint32_t osMessageQueueGetCount (osMessageQueueId_t mq_id) {
 8006ec6:	f7ff bf59 	b.w	8006d7c <osSemaphoreGetCount>

08006eca <osMessageQueueReset>:
  }

  return (space);
}

osStatus_t osMessageQueueReset (osMessageQueueId_t mq_id) {
 8006eca:	b510      	push	{r4, lr}
 8006ecc:	f3ef 8405 	mrs	r4, IPSR
  QueueHandle_t hQueue = (QueueHandle_t)mq_id;
  osStatus_t stat;

  if (IS_IRQ()) {
 8006ed0:	b92c      	cbnz	r4, 8006ede <osMessageQueueReset+0x14>
    stat = osErrorISR;
  }
  else if (hQueue == NULL) {
 8006ed2:	b138      	cbz	r0, 8006ee4 <osMessageQueueReset+0x1a>
    stat = osErrorParameter;
  }
  else {
    stat = osOK;
    (void)xQueueReset (hQueue);
 8006ed4:	4621      	mov	r1, r4
 8006ed6:	f000 fb91 	bl	80075fc <xQueueGenericReset>
    stat = osOK;
 8006eda:	4620      	mov	r0, r4
  }

  return (stat);
}
 8006edc:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8006ede:	f06f 0005 	mvn.w	r0, #5
 8006ee2:	e7fb      	b.n	8006edc <osMessageQueueReset+0x12>
    stat = osErrorParameter;
 8006ee4:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8006ee8:	e7f8      	b.n	8006edc <osMessageQueueReset+0x12>
	...

08006eec <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8006eec:	4b03      	ldr	r3, [pc, #12]	@ (8006efc <vApplicationGetIdleTaskMemory+0x10>)
 8006eee:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8006ef0:	4b03      	ldr	r3, [pc, #12]	@ (8006f00 <vApplicationGetIdleTaskMemory+0x14>)
 8006ef2:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8006ef4:	2380      	movs	r3, #128	@ 0x80
 8006ef6:	6013      	str	r3, [r2, #0]
}
 8006ef8:	4770      	bx	lr
 8006efa:	bf00      	nop
 8006efc:	20001288 	.word	0x20001288
 8006f00:	20001088 	.word	0x20001088

08006f04 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8006f04:	4b03      	ldr	r3, [pc, #12]	@ (8006f14 <vApplicationGetTimerTaskMemory+0x10>)
 8006f06:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8006f08:	4b03      	ldr	r3, [pc, #12]	@ (8006f18 <vApplicationGetTimerTaskMemory+0x14>)
 8006f0a:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8006f0c:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8006f10:	6013      	str	r3, [r2, #0]
}
 8006f12:	4770      	bx	lr
 8006f14:	20000fdc 	.word	0x20000fdc
 8006f18:	20000bdc 	.word	0x20000bdc

08006f1c <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8006f1c:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8006f1e:	4b10      	ldr	r3, [pc, #64]	@ (8006f60 <prvInsertBlockIntoFreeList+0x44>)
 8006f20:	461a      	mov	r2, r3
 8006f22:	681b      	ldr	r3, [r3, #0]
 8006f24:	4283      	cmp	r3, r0
 8006f26:	d3fb      	bcc.n	8006f20 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8006f28:	6854      	ldr	r4, [r2, #4]
 8006f2a:	1911      	adds	r1, r2, r4
 8006f2c:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8006f2e:	bf01      	itttt	eq
 8006f30:	6841      	ldreq	r1, [r0, #4]
 8006f32:	4610      	moveq	r0, r2
 8006f34:	1909      	addeq	r1, r1, r4
 8006f36:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8006f38:	6844      	ldr	r4, [r0, #4]
 8006f3a:	1901      	adds	r1, r0, r4
 8006f3c:	428b      	cmp	r3, r1
 8006f3e:	d10c      	bne.n	8006f5a <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8006f40:	4908      	ldr	r1, [pc, #32]	@ (8006f64 <prvInsertBlockIntoFreeList+0x48>)
 8006f42:	6809      	ldr	r1, [r1, #0]
 8006f44:	428b      	cmp	r3, r1
 8006f46:	d003      	beq.n	8006f50 <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8006f48:	6859      	ldr	r1, [r3, #4]
 8006f4a:	4421      	add	r1, r4
 8006f4c:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8006f4e:	6819      	ldr	r1, [r3, #0]
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 8006f50:	6001      	str	r1, [r0, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8006f52:	4290      	cmp	r0, r2
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8006f54:	bf18      	it	ne
 8006f56:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8006f58:	bd10      	pop	{r4, pc}
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8006f5a:	4619      	mov	r1, r3
 8006f5c:	e7f8      	b.n	8006f50 <prvInsertBlockIntoFreeList+0x34>
 8006f5e:	bf00      	nop
 8006f60:	20001350 	.word	0x20001350
 8006f64:	2000134c 	.word	0x2000134c

08006f68 <pvPortMalloc>:
{
 8006f68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006f6c:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8006f6e:	f001 f9ef 	bl	8008350 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8006f72:	4942      	ldr	r1, [pc, #264]	@ (800707c <pvPortMalloc+0x114>)
 8006f74:	4d42      	ldr	r5, [pc, #264]	@ (8007080 <pvPortMalloc+0x118>)
 8006f76:	680b      	ldr	r3, [r1, #0]
 8006f78:	bb0b      	cbnz	r3, 8006fbe <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 8006f7a:	4a42      	ldr	r2, [pc, #264]	@ (8007084 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8006f7c:	0756      	lsls	r6, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8006f7e:	bf1f      	itttt	ne
 8006f80:	1dd0      	addne	r0, r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8006f82:	f020 0007 	bicne.w	r0, r0, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8006f86:	f502 3280 	addne.w	r2, r2, #65536	@ 0x10000
 8006f8a:	1a13      	subne	r3, r2, r0
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8006f8c:	bf0c      	ite	eq
 8006f8e:	f44f 3380 	moveq.w	r3, #65536	@ 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8006f92:	4602      	movne	r2, r0
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8006f94:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8006f96:	4e3c      	ldr	r6, [pc, #240]	@ (8007088 <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 8006f98:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8006f9a:	f023 0307 	bic.w	r3, r3, #7
	xStart.xBlockSize = ( size_t ) 0;
 8006f9e:	2000      	movs	r0, #0
 8006fa0:	6070      	str	r0, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8006fa2:	6032      	str	r2, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8006fa4:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8006fa8:	1a98      	subs	r0, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8006faa:	e9c2 3000 	strd	r3, r0, [r2]
	pxEnd = ( void * ) uxAddress;
 8006fae:	600b      	str	r3, [r1, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8006fb0:	4b36      	ldr	r3, [pc, #216]	@ (800708c <pvPortMalloc+0x124>)
 8006fb2:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8006fb4:	4b36      	ldr	r3, [pc, #216]	@ (8007090 <pvPortMalloc+0x128>)
 8006fb6:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8006fb8:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 8006fbc:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8006fbe:	682e      	ldr	r6, [r5, #0]
 8006fc0:	4226      	tst	r6, r4
 8006fc2:	d155      	bne.n	8007070 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 8006fc4:	2c00      	cmp	r4, #0
 8006fc6:	d046      	beq.n	8007056 <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 8006fc8:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8006fcc:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8006fce:	bf1c      	itt	ne
 8006fd0:	f023 0307 	bicne.w	r3, r3, #7
 8006fd4:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8006fd6:	2b00      	cmp	r3, #0
 8006fd8:	d04a      	beq.n	8007070 <pvPortMalloc+0x108>
 8006fda:	4f2d      	ldr	r7, [pc, #180]	@ (8007090 <pvPortMalloc+0x128>)
 8006fdc:	683c      	ldr	r4, [r7, #0]
 8006fde:	429c      	cmp	r4, r3
 8006fe0:	d346      	bcc.n	8007070 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 8006fe2:	4a29      	ldr	r2, [pc, #164]	@ (8007088 <pvPortMalloc+0x120>)
 8006fe4:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8006fe6:	6868      	ldr	r0, [r5, #4]
 8006fe8:	4298      	cmp	r0, r3
 8006fea:	d204      	bcs.n	8006ff6 <pvPortMalloc+0x8e>
 8006fec:	f8d5 c000 	ldr.w	ip, [r5]
 8006ff0:	f1bc 0f00 	cmp.w	ip, #0
 8006ff4:	d115      	bne.n	8007022 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8006ff6:	6809      	ldr	r1, [r1, #0]
 8006ff8:	42a9      	cmp	r1, r5
 8006ffa:	d039      	beq.n	8007070 <pvPortMalloc+0x108>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8006ffc:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8006ffe:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8007002:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8007004:	1ac2      	subs	r2, r0, r3
 8007006:	2a10      	cmp	r2, #16
 8007008:	d912      	bls.n	8007030 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800700a:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800700c:	0741      	lsls	r1, r0, #29
 800700e:	d00b      	beq.n	8007028 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8007010:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007014:	f383 8811 	msr	BASEPRI, r3
 8007018:	f3bf 8f6f 	isb	sy
 800701c:	f3bf 8f4f 	dsb	sy
 8007020:	e7fe      	b.n	8007020 <pvPortMalloc+0xb8>
 8007022:	462a      	mov	r2, r5
 8007024:	4665      	mov	r5, ip
 8007026:	e7de      	b.n	8006fe6 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8007028:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 800702a:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 800702c:	f7ff ff76 	bl	8006f1c <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007030:	686a      	ldr	r2, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007032:	4916      	ldr	r1, [pc, #88]	@ (800708c <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007034:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8007036:	4316      	orrs	r6, r2
					xNumberOfSuccessfulAllocations++;
 8007038:	4a16      	ldr	r2, [pc, #88]	@ (8007094 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800703a:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800703c:	603c      	str	r4, [r7, #0]
					pxBlock->pxNextFreeBlock = NULL;
 800703e:	2300      	movs	r3, #0
 8007040:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 8007042:	6813      	ldr	r3, [r2, #0]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8007044:	606e      	str	r6, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007046:	4284      	cmp	r4, r0
					xNumberOfSuccessfulAllocations++;
 8007048:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800704c:	bf38      	it	cc
 800704e:	600c      	strcc	r4, [r1, #0]
					xNumberOfSuccessfulAllocations++;
 8007050:	6013      	str	r3, [r2, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8007052:	f108 0408 	add.w	r4, r8, #8
	( void ) xTaskResumeAll();
 8007056:	f001 fa1f 	bl	8008498 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800705a:	0763      	lsls	r3, r4, #29
 800705c:	d00a      	beq.n	8007074 <pvPortMalloc+0x10c>
 800705e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007062:	f383 8811 	msr	BASEPRI, r3
 8007066:	f3bf 8f6f 	isb	sy
 800706a:	f3bf 8f4f 	dsb	sy
 800706e:	e7fe      	b.n	800706e <pvPortMalloc+0x106>
void *pvReturn = NULL;
 8007070:	2400      	movs	r4, #0
 8007072:	e7f0      	b.n	8007056 <pvPortMalloc+0xee>
}
 8007074:	4620      	mov	r0, r4
 8007076:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800707a:	bf00      	nop
 800707c:	2000134c 	.word	0x2000134c
 8007080:	20001338 	.word	0x20001338
 8007084:	20001358 	.word	0x20001358
 8007088:	20001350 	.word	0x20001350
 800708c:	20001344 	.word	0x20001344
 8007090:	20001348 	.word	0x20001348
 8007094:	20001340 	.word	0x20001340

08007098 <vPortFree>:
{
 8007098:	b510      	push	{r4, lr}
	if( pv != NULL )
 800709a:	4604      	mov	r4, r0
 800709c:	b390      	cbz	r0, 8007104 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800709e:	4a1a      	ldr	r2, [pc, #104]	@ (8007108 <vPortFree+0x70>)
 80070a0:	f850 3c04 	ldr.w	r3, [r0, #-4]
 80070a4:	6812      	ldr	r2, [r2, #0]
 80070a6:	4213      	tst	r3, r2
 80070a8:	d108      	bne.n	80070bc <vPortFree+0x24>
 80070aa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80070ae:	f383 8811 	msr	BASEPRI, r3
 80070b2:	f3bf 8f6f 	isb	sy
 80070b6:	f3bf 8f4f 	dsb	sy
 80070ba:	e7fe      	b.n	80070ba <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 80070bc:	f850 1c08 	ldr.w	r1, [r0, #-8]
 80070c0:	b141      	cbz	r1, 80070d4 <vPortFree+0x3c>
 80070c2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80070c6:	f383 8811 	msr	BASEPRI, r3
 80070ca:	f3bf 8f6f 	isb	sy
 80070ce:	f3bf 8f4f 	dsb	sy
 80070d2:	e7fe      	b.n	80070d2 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 80070d4:	ea23 0302 	bic.w	r3, r3, r2
 80070d8:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 80070dc:	f001 f938 	bl	8008350 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 80070e0:	4a0a      	ldr	r2, [pc, #40]	@ (800710c <vPortFree+0x74>)
 80070e2:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80070e6:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80070e8:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 80070ec:	440b      	add	r3, r1
 80070ee:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80070f0:	f7ff ff14 	bl	8006f1c <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 80070f4:	4a06      	ldr	r2, [pc, #24]	@ (8007110 <vPortFree+0x78>)
 80070f6:	6813      	ldr	r3, [r2, #0]
}
 80070f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 80070fc:	3301      	adds	r3, #1
 80070fe:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 8007100:	f001 b9ca 	b.w	8008498 <xTaskResumeAll>
}
 8007104:	bd10      	pop	{r4, pc}
 8007106:	bf00      	nop
 8007108:	20001338 	.word	0x20001338
 800710c:	20001348 	.word	0x20001348
 8007110:	2000133c 	.word	0x2000133c

08007114 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007114:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8007118:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800711c:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007120:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007122:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8007124:	2300      	movs	r3, #0
 8007126:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8007128:	4770      	bx	lr

0800712a <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800712a:	2300      	movs	r3, #0
 800712c:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800712e:	4770      	bx	lr

08007130 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8007130:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8007132:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8007134:	689a      	ldr	r2, [r3, #8]
 8007136:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8007138:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800713a:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800713c:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800713e:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8007140:	3301      	adds	r3, #1
 8007142:	6003      	str	r3, [r0, #0]
}
 8007144:	4770      	bx	lr

08007146 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8007146:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8007148:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800714a:	1c63      	adds	r3, r4, #1
 800714c:	d10a      	bne.n	8007164 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 800714e:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8007150:	685a      	ldr	r2, [r3, #4]
 8007152:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8007154:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8007156:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8007158:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800715a:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800715c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800715e:	3301      	adds	r3, #1
 8007160:	6003      	str	r3, [r0, #0]
}
 8007162:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8007164:	f100 0208 	add.w	r2, r0, #8
 8007168:	4613      	mov	r3, r2
 800716a:	6852      	ldr	r2, [r2, #4]
 800716c:	6815      	ldr	r5, [r2, #0]
 800716e:	42a5      	cmp	r5, r4
 8007170:	d9fa      	bls.n	8007168 <vListInsert+0x22>
 8007172:	e7ed      	b.n	8007150 <vListInsert+0xa>

08007174 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007174:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8007178:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800717a:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800717c:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800717e:	6859      	ldr	r1, [r3, #4]
 8007180:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8007182:	bf08      	it	eq
 8007184:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8007186:	2200      	movs	r2, #0
 8007188:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800718a:	681a      	ldr	r2, [r3, #0]
 800718c:	3a01      	subs	r2, #1
 800718e:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8007190:	6818      	ldr	r0, [r3, #0]
}
 8007192:	4770      	bx	lr

08007194 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8007194:	4808      	ldr	r0, [pc, #32]	@ (80071b8 <prvPortStartFirstTask+0x24>)
 8007196:	6800      	ldr	r0, [r0, #0]
 8007198:	6800      	ldr	r0, [r0, #0]
 800719a:	f380 8808 	msr	MSP, r0
 800719e:	f04f 0000 	mov.w	r0, #0
 80071a2:	f380 8814 	msr	CONTROL, r0
 80071a6:	b662      	cpsie	i
 80071a8:	b661      	cpsie	f
 80071aa:	f3bf 8f4f 	dsb	sy
 80071ae:	f3bf 8f6f 	isb	sy
 80071b2:	df00      	svc	0
 80071b4:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 80071b6:	0000      	.short	0x0000
 80071b8:	e000ed08 	.word	0xe000ed08

080071bc <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 80071bc:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 80071cc <vPortEnableVFP+0x10>
 80071c0:	6801      	ldr	r1, [r0, #0]
 80071c2:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80071c6:	6001      	str	r1, [r0, #0]
 80071c8:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 80071ca:	0000      	.short	0x0000
 80071cc:	e000ed88 	.word	0xe000ed88

080071d0 <prvTaskExitError>:
{
 80071d0:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 80071d2:	2300      	movs	r3, #0
 80071d4:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 80071d6:	4b0d      	ldr	r3, [pc, #52]	@ (800720c <prvTaskExitError+0x3c>)
 80071d8:	681b      	ldr	r3, [r3, #0]
 80071da:	3301      	adds	r3, #1
 80071dc:	d008      	beq.n	80071f0 <prvTaskExitError+0x20>
 80071de:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80071e2:	f383 8811 	msr	BASEPRI, r3
 80071e6:	f3bf 8f6f 	isb	sy
 80071ea:	f3bf 8f4f 	dsb	sy
 80071ee:	e7fe      	b.n	80071ee <prvTaskExitError+0x1e>
 80071f0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80071f4:	f383 8811 	msr	BASEPRI, r3
 80071f8:	f3bf 8f6f 	isb	sy
 80071fc:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8007200:	9b01      	ldr	r3, [sp, #4]
 8007202:	2b00      	cmp	r3, #0
 8007204:	d0fc      	beq.n	8007200 <prvTaskExitError+0x30>
}
 8007206:	b002      	add	sp, #8
 8007208:	4770      	bx	lr
 800720a:	bf00      	nop
 800720c:	20000080 	.word	0x20000080

08007210 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8007210:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8007214:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8007218:	4b07      	ldr	r3, [pc, #28]	@ (8007238 <pxPortInitialiseStack+0x28>)
 800721a:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800721e:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8007222:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8007226:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800722a:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800722e:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8007232:	3844      	subs	r0, #68	@ 0x44
 8007234:	4770      	bx	lr
 8007236:	bf00      	nop
 8007238:	080071d1 	.word	0x080071d1
 800723c:	00000000 	.word	0x00000000

08007240 <SVC_Handler>:
	__asm volatile (
 8007240:	4b07      	ldr	r3, [pc, #28]	@ (8007260 <pxCurrentTCBConst2>)
 8007242:	6819      	ldr	r1, [r3, #0]
 8007244:	6808      	ldr	r0, [r1, #0]
 8007246:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800724a:	f380 8809 	msr	PSP, r0
 800724e:	f3bf 8f6f 	isb	sy
 8007252:	f04f 0000 	mov.w	r0, #0
 8007256:	f380 8811 	msr	BASEPRI, r0
 800725a:	4770      	bx	lr
 800725c:	f3af 8000 	nop.w

08007260 <pxCurrentTCBConst2>:
 8007260:	20011898 	.word	0x20011898

08007264 <vPortEnterCritical>:
 8007264:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007268:	f383 8811 	msr	BASEPRI, r3
 800726c:	f3bf 8f6f 	isb	sy
 8007270:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8007274:	4a0a      	ldr	r2, [pc, #40]	@ (80072a0 <vPortEnterCritical+0x3c>)
 8007276:	6813      	ldr	r3, [r2, #0]
 8007278:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800727a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800727c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800727e:	d10e      	bne.n	800729e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8007280:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007284:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 8007288:	b2db      	uxtb	r3, r3
 800728a:	b143      	cbz	r3, 800729e <vPortEnterCritical+0x3a>
 800728c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007290:	f383 8811 	msr	BASEPRI, r3
 8007294:	f3bf 8f6f 	isb	sy
 8007298:	f3bf 8f4f 	dsb	sy
 800729c:	e7fe      	b.n	800729c <vPortEnterCritical+0x38>
}
 800729e:	4770      	bx	lr
 80072a0:	20000080 	.word	0x20000080

080072a4 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 80072a4:	4a08      	ldr	r2, [pc, #32]	@ (80072c8 <vPortExitCritical+0x24>)
 80072a6:	6813      	ldr	r3, [r2, #0]
 80072a8:	b943      	cbnz	r3, 80072bc <vPortExitCritical+0x18>
 80072aa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80072ae:	f383 8811 	msr	BASEPRI, r3
 80072b2:	f3bf 8f6f 	isb	sy
 80072b6:	f3bf 8f4f 	dsb	sy
 80072ba:	e7fe      	b.n	80072ba <vPortExitCritical+0x16>
	uxCriticalNesting--;
 80072bc:	3b01      	subs	r3, #1
 80072be:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 80072c0:	b90b      	cbnz	r3, 80072c6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 80072c2:	f383 8811 	msr	BASEPRI, r3
}
 80072c6:	4770      	bx	lr
 80072c8:	20000080 	.word	0x20000080
 80072cc:	00000000 	.word	0x00000000

080072d0 <PendSV_Handler>:
	__asm volatile
 80072d0:	f3ef 8009 	mrs	r0, PSP
 80072d4:	f3bf 8f6f 	isb	sy
 80072d8:	4b15      	ldr	r3, [pc, #84]	@ (8007330 <pxCurrentTCBConst>)
 80072da:	681a      	ldr	r2, [r3, #0]
 80072dc:	f01e 0f10 	tst.w	lr, #16
 80072e0:	bf08      	it	eq
 80072e2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 80072e6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80072ea:	6010      	str	r0, [r2, #0]
 80072ec:	e92d 0009 	stmdb	sp!, {r0, r3}
 80072f0:	f04f 0050 	mov.w	r0, #80	@ 0x50
 80072f4:	f380 8811 	msr	BASEPRI, r0
 80072f8:	f3bf 8f4f 	dsb	sy
 80072fc:	f3bf 8f6f 	isb	sy
 8007300:	f001 f962 	bl	80085c8 <vTaskSwitchContext>
 8007304:	f04f 0000 	mov.w	r0, #0
 8007308:	f380 8811 	msr	BASEPRI, r0
 800730c:	bc09      	pop	{r0, r3}
 800730e:	6819      	ldr	r1, [r3, #0]
 8007310:	6808      	ldr	r0, [r1, #0]
 8007312:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007316:	f01e 0f10 	tst.w	lr, #16
 800731a:	bf08      	it	eq
 800731c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8007320:	f380 8809 	msr	PSP, r0
 8007324:	f3bf 8f6f 	isb	sy
 8007328:	4770      	bx	lr
 800732a:	bf00      	nop
 800732c:	f3af 8000 	nop.w

08007330 <pxCurrentTCBConst>:
 8007330:	20011898 	.word	0x20011898

08007334 <xPortSysTickHandler>:
{
 8007334:	b508      	push	{r3, lr}
	__asm volatile
 8007336:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800733a:	f383 8811 	msr	BASEPRI, r3
 800733e:	f3bf 8f6f 	isb	sy
 8007342:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8007346:	f001 f811 	bl	800836c <xTaskIncrementTick>
 800734a:	b128      	cbz	r0, 8007358 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800734c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007350:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007354:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
 8007358:	2300      	movs	r3, #0
 800735a:	f383 8811 	msr	BASEPRI, r3
}
 800735e:	bd08      	pop	{r3, pc}

08007360 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007360:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8007364:	2300      	movs	r3, #0
 8007366:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007368:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800736a:	4b05      	ldr	r3, [pc, #20]	@ (8007380 <vPortSetupTimerInterrupt+0x20>)
 800736c:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8007370:	681b      	ldr	r3, [r3, #0]
 8007372:	fbb3 f3f1 	udiv	r3, r3, r1
 8007376:	3b01      	subs	r3, #1
 8007378:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800737a:	2307      	movs	r3, #7
 800737c:	6113      	str	r3, [r2, #16]
}
 800737e:	4770      	bx	lr
 8007380:	20000074 	.word	0x20000074

08007384 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007384:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
{
 8007388:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800738a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
 800738e:	4a38      	ldr	r2, [pc, #224]	@ (8007470 <xPortStartScheduler+0xec>)
 8007390:	4291      	cmp	r1, r2
 8007392:	d108      	bne.n	80073a6 <xPortStartScheduler+0x22>
	__asm volatile
 8007394:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007398:	f383 8811 	msr	BASEPRI, r3
 800739c:	f3bf 8f6f 	isb	sy
 80073a0:	f3bf 8f4f 	dsb	sy
 80073a4:	e7fe      	b.n	80073a4 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 80073a6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
 80073aa:	4b32      	ldr	r3, [pc, #200]	@ (8007474 <xPortStartScheduler+0xf0>)
 80073ac:	429a      	cmp	r2, r3
 80073ae:	d108      	bne.n	80073c2 <xPortStartScheduler+0x3e>
 80073b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80073b4:	f383 8811 	msr	BASEPRI, r3
 80073b8:	f3bf 8f6f 	isb	sy
 80073bc:	f3bf 8f4f 	dsb	sy
 80073c0:	e7fe      	b.n	80073c0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 80073c2:	4b2d      	ldr	r3, [pc, #180]	@ (8007478 <xPortStartScheduler+0xf4>)
 80073c4:	781a      	ldrb	r2, [r3, #0]
 80073c6:	b2d2      	uxtb	r2, r2
 80073c8:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 80073ca:	22ff      	movs	r2, #255	@ 0xff
 80073cc:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80073ce:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80073d0:	4a2a      	ldr	r2, [pc, #168]	@ (800747c <xPortStartScheduler+0xf8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80073d2:	b2db      	uxtb	r3, r3
 80073d4:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80073d8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80073dc:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 80073e0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 80073e2:	4a27      	ldr	r2, [pc, #156]	@ (8007480 <xPortStartScheduler+0xfc>)
 80073e4:	2307      	movs	r3, #7
 80073e6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 80073e8:	f89d 1003 	ldrb.w	r1, [sp, #3]
			ulMaxPRIGROUPValue--;
 80073ec:	6813      	ldr	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 80073ee:	0609      	lsls	r1, r1, #24
 80073f0:	d40a      	bmi.n	8007408 <xPortStartScheduler+0x84>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 80073f2:	2b03      	cmp	r3, #3
 80073f4:	d011      	beq.n	800741a <xPortStartScheduler+0x96>
 80073f6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80073fa:	f383 8811 	msr	BASEPRI, r3
 80073fe:	f3bf 8f6f 	isb	sy
 8007402:	f3bf 8f4f 	dsb	sy
 8007406:	e7fe      	b.n	8007406 <xPortStartScheduler+0x82>
			ulMaxPRIGROUPValue--;
 8007408:	3b01      	subs	r3, #1
 800740a:	6013      	str	r3, [r2, #0]
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800740c:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8007410:	005b      	lsls	r3, r3, #1
 8007412:	b2db      	uxtb	r3, r3
 8007414:	f88d 3003 	strb.w	r3, [sp, #3]
 8007418:	e7e6      	b.n	80073e8 <xPortStartScheduler+0x64>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800741a:	f44f 7340 	mov.w	r3, #768	@ 0x300
 800741e:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007420:	9b01      	ldr	r3, [sp, #4]
 8007422:	4a15      	ldr	r2, [pc, #84]	@ (8007478 <xPortStartScheduler+0xf4>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8007424:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007428:	b2db      	uxtb	r3, r3
 800742a:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800742c:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 8007430:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8007434:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8007438:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 800743c:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 8007440:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
 8007444:	f7ff ff8c 	bl	8007360 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8007448:	4b0e      	ldr	r3, [pc, #56]	@ (8007484 <xPortStartScheduler+0x100>)
 800744a:	2500      	movs	r5, #0
 800744c:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 800744e:	f7ff feb5 	bl	80071bc <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8007452:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 8007456:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 800745a:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
 800745e:	f7ff fe99 	bl	8007194 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8007462:	f001 f8b1 	bl	80085c8 <vTaskSwitchContext>
	prvTaskExitError();
 8007466:	f7ff feb3 	bl	80071d0 <prvTaskExitError>
}
 800746a:	4628      	mov	r0, r5
 800746c:	b003      	add	sp, #12
 800746e:	bd30      	pop	{r4, r5, pc}
 8007470:	410fc271 	.word	0x410fc271
 8007474:	410fc270 	.word	0x410fc270
 8007478:	e000e400 	.word	0xe000e400
 800747c:	2001135c 	.word	0x2001135c
 8007480:	20011358 	.word	0x20011358
 8007484:	20000080 	.word	0x20000080

08007488 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8007488:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800748c:	2b0f      	cmp	r3, #15
 800748e:	d90e      	bls.n	80074ae <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8007490:	4a11      	ldr	r2, [pc, #68]	@ (80074d8 <vPortValidateInterruptPriority+0x50>)
 8007492:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8007494:	4a11      	ldr	r2, [pc, #68]	@ (80074dc <vPortValidateInterruptPriority+0x54>)
 8007496:	7812      	ldrb	r2, [r2, #0]
 8007498:	429a      	cmp	r2, r3
 800749a:	d908      	bls.n	80074ae <vPortValidateInterruptPriority+0x26>
 800749c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80074a0:	f383 8811 	msr	BASEPRI, r3
 80074a4:	f3bf 8f6f 	isb	sy
 80074a8:	f3bf 8f4f 	dsb	sy
 80074ac:	e7fe      	b.n	80074ac <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 80074ae:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80074b2:	4a0b      	ldr	r2, [pc, #44]	@ (80074e0 <vPortValidateInterruptPriority+0x58>)
 80074b4:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 80074b8:	6812      	ldr	r2, [r2, #0]
 80074ba:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 80074be:	4293      	cmp	r3, r2
 80074c0:	d908      	bls.n	80074d4 <vPortValidateInterruptPriority+0x4c>
 80074c2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80074c6:	f383 8811 	msr	BASEPRI, r3
 80074ca:	f3bf 8f6f 	isb	sy
 80074ce:	f3bf 8f4f 	dsb	sy
 80074d2:	e7fe      	b.n	80074d2 <vPortValidateInterruptPriority+0x4a>
	}
 80074d4:	4770      	bx	lr
 80074d6:	bf00      	nop
 80074d8:	e000e3f0 	.word	0xe000e3f0
 80074dc:	2001135c 	.word	0x2001135c
 80074e0:	20011358 	.word	0x20011358

080074e4 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 80074e4:	b510      	push	{r4, lr}
 80074e6:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80074e8:	f7ff febc 	bl	8007264 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 80074ec:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80074ee:	f7ff fed9 	bl	80072a4 <vPortExitCritical>

	return xReturn;
}
 80074f2:	fab4 f084 	clz	r0, r4
 80074f6:	0940      	lsrs	r0, r0, #5
 80074f8:	bd10      	pop	{r4, pc}

080074fa <prvCopyDataToQueue>:
{
 80074fa:	b570      	push	{r4, r5, r6, lr}
 80074fc:	4616      	mov	r6, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80074fe:	6c02      	ldr	r2, [r0, #64]	@ 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007500:	6b85      	ldr	r5, [r0, #56]	@ 0x38
{
 8007502:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007504:	b942      	cbnz	r2, 8007518 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007506:	6806      	ldr	r6, [r0, #0]
 8007508:	b99e      	cbnz	r6, 8007532 <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800750a:	6880      	ldr	r0, [r0, #8]
 800750c:	f001 f9b0 	bl	8008870 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8007510:	60a6      	str	r6, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007512:	3501      	adds	r5, #1
 8007514:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 8007516:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8007518:	b96e      	cbnz	r6, 8007536 <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800751a:	6840      	ldr	r0, [r0, #4]
 800751c:	f016 f88d 	bl	801d63a <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007520:	6863      	ldr	r3, [r4, #4]
 8007522:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8007524:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007526:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007528:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800752a:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800752c:	bf24      	itt	cs
 800752e:	6823      	ldrcs	r3, [r4, #0]
 8007530:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 8007532:	2000      	movs	r0, #0
 8007534:	e7ed      	b.n	8007512 <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8007536:	68c0      	ldr	r0, [r0, #12]
 8007538:	f016 f87f 	bl	801d63a <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800753c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800753e:	68e3      	ldr	r3, [r4, #12]
 8007540:	4251      	negs	r1, r2
 8007542:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007544:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007546:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007548:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800754a:	bf3e      	ittt	cc
 800754c:	68a3      	ldrcc	r3, [r4, #8]
 800754e:	185b      	addcc	r3, r3, r1
 8007550:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8007552:	2e02      	cmp	r6, #2
 8007554:	d1ed      	bne.n	8007532 <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007556:	b10d      	cbz	r5, 800755c <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 8007558:	3d01      	subs	r5, #1
 800755a:	e7ea      	b.n	8007532 <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 800755c:	4628      	mov	r0, r5
 800755e:	e7d8      	b.n	8007512 <prvCopyDataToQueue+0x18>

08007560 <prvCopyDataFromQueue>:
{
 8007560:	4603      	mov	r3, r0
 8007562:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007564:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 8007566:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007568:	b16a      	cbz	r2, 8007586 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800756a:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800756c:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800756e:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007570:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007572:	bf28      	it	cs
 8007574:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007576:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007578:	bf28      	it	cs
 800757a:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800757c:	68d9      	ldr	r1, [r3, #12]
}
 800757e:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007582:	f016 b85a 	b.w	801d63a <memcpy>
}
 8007586:	f85d 4b04 	ldr.w	r4, [sp], #4
 800758a:	4770      	bx	lr

0800758c <prvUnlockQueue>:
{
 800758c:	b570      	push	{r4, r5, r6, lr}
 800758e:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8007590:	f7ff fe68 	bl	8007264 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8007594:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007598:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 800759c:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800759e:	2d00      	cmp	r5, #0
 80075a0:	dc14      	bgt.n	80075cc <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 80075a2:	23ff      	movs	r3, #255	@ 0xff
 80075a4:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 80075a8:	f7ff fe7c 	bl	80072a4 <vPortExitCritical>
	taskENTER_CRITICAL();
 80075ac:	f7ff fe5a 	bl	8007264 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80075b0:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80075b4:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 80075b8:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80075ba:	2d00      	cmp	r5, #0
 80075bc:	dc12      	bgt.n	80075e4 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 80075be:	23ff      	movs	r3, #255	@ 0xff
 80075c0:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 80075c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 80075c8:	f7ff be6c 	b.w	80072a4 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80075cc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80075ce:	2b00      	cmp	r3, #0
 80075d0:	d0e7      	beq.n	80075a2 <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80075d2:	4630      	mov	r0, r6
 80075d4:	f001 f870 	bl	80086b8 <xTaskRemoveFromEventList>
 80075d8:	b108      	cbz	r0, 80075de <prvUnlockQueue+0x52>
						vTaskMissedYield();
 80075da:	f001 f8f5 	bl	80087c8 <vTaskMissedYield>
			--cTxLock;
 80075de:	3d01      	subs	r5, #1
 80075e0:	b26d      	sxtb	r5, r5
 80075e2:	e7dc      	b.n	800759e <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80075e4:	6923      	ldr	r3, [r4, #16]
 80075e6:	2b00      	cmp	r3, #0
 80075e8:	d0e9      	beq.n	80075be <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80075ea:	4630      	mov	r0, r6
 80075ec:	f001 f864 	bl	80086b8 <xTaskRemoveFromEventList>
 80075f0:	b108      	cbz	r0, 80075f6 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 80075f2:	f001 f8e9 	bl	80087c8 <vTaskMissedYield>
				--cRxLock;
 80075f6:	3d01      	subs	r5, #1
 80075f8:	b26d      	sxtb	r5, r5
 80075fa:	e7de      	b.n	80075ba <prvUnlockQueue+0x2e>

080075fc <xQueueGenericReset>:
{
 80075fc:	b538      	push	{r3, r4, r5, lr}
 80075fe:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8007600:	4604      	mov	r4, r0
 8007602:	b940      	cbnz	r0, 8007616 <xQueueGenericReset+0x1a>
 8007604:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007608:	f383 8811 	msr	BASEPRI, r3
 800760c:	f3bf 8f6f 	isb	sy
 8007610:	f3bf 8f4f 	dsb	sy
 8007614:	e7fe      	b.n	8007614 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8007616:	f7ff fe25 	bl	8007264 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800761a:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
 800761e:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8007620:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007622:	434b      	muls	r3, r1
 8007624:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007626:	1a5b      	subs	r3, r3, r1
 8007628:	441a      	add	r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800762a:	60a0      	str	r0, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800762c:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800762e:	2000      	movs	r0, #0
 8007630:	63a0      	str	r0, [r4, #56]	@ 0x38
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007632:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
 8007634:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8007638:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
		if( xNewQueue == pdFALSE )
 800763c:	b9a5      	cbnz	r5, 8007668 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800763e:	6923      	ldr	r3, [r4, #16]
 8007640:	b173      	cbz	r3, 8007660 <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007642:	f104 0010 	add.w	r0, r4, #16
 8007646:	f001 f837 	bl	80086b8 <xTaskRemoveFromEventList>
 800764a:	b148      	cbz	r0, 8007660 <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 800764c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007650:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007654:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007658:	f3bf 8f4f 	dsb	sy
 800765c:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8007660:	f7ff fe20 	bl	80072a4 <vPortExitCritical>
}
 8007664:	2001      	movs	r0, #1
 8007666:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8007668:	f104 0010 	add.w	r0, r4, #16
 800766c:	f7ff fd52 	bl	8007114 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8007670:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8007674:	f7ff fd4e 	bl	8007114 <vListInitialise>
 8007678:	e7f2      	b.n	8007660 <xQueueGenericReset+0x64>

0800767a <xQueueGenericCreateStatic>:
	{
 800767a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800767c:	460d      	mov	r5, r1
 800767e:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007680:	b940      	cbnz	r0, 8007694 <xQueueGenericCreateStatic+0x1a>
 8007682:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007686:	f383 8811 	msr	BASEPRI, r3
 800768a:	f3bf 8f6f 	isb	sy
 800768e:	f3bf 8f4f 	dsb	sy
 8007692:	e7fe      	b.n	8007692 <xQueueGenericCreateStatic+0x18>
		configASSERT( pxStaticQueue != NULL );
 8007694:	b943      	cbnz	r3, 80076a8 <xQueueGenericCreateStatic+0x2e>
 8007696:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800769a:	f383 8811 	msr	BASEPRI, r3
 800769e:	f3bf 8f6f 	isb	sy
 80076a2:	f3bf 8f4f 	dsb	sy
 80076a6:	e7fe      	b.n	80076a6 <xQueueGenericCreateStatic+0x2c>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 80076a8:	b14a      	cbz	r2, 80076be <xQueueGenericCreateStatic+0x44>
 80076aa:	b991      	cbnz	r1, 80076d2 <xQueueGenericCreateStatic+0x58>
 80076ac:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80076b0:	f383 8811 	msr	BASEPRI, r3
 80076b4:	f3bf 8f6f 	isb	sy
 80076b8:	f3bf 8f4f 	dsb	sy
 80076bc:	e7fe      	b.n	80076bc <xQueueGenericCreateStatic+0x42>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80076be:	b141      	cbz	r1, 80076d2 <xQueueGenericCreateStatic+0x58>
 80076c0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80076c4:	f383 8811 	msr	BASEPRI, r3
 80076c8:	f3bf 8f6f 	isb	sy
 80076cc:	f3bf 8f4f 	dsb	sy
 80076d0:	e7fe      	b.n	80076d0 <xQueueGenericCreateStatic+0x56>
			volatile size_t xSize = sizeof( StaticQueue_t );
 80076d2:	2350      	movs	r3, #80	@ 0x50
 80076d4:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 80076d6:	9b01      	ldr	r3, [sp, #4]
 80076d8:	2b50      	cmp	r3, #80	@ 0x50
 80076da:	d008      	beq.n	80076ee <xQueueGenericCreateStatic+0x74>
 80076dc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80076e0:	f383 8811 	msr	BASEPRI, r3
 80076e4:	f3bf 8f6f 	isb	sy
 80076e8:	f3bf 8f4f 	dsb	sy
 80076ec:	e7fe      	b.n	80076ec <xQueueGenericCreateStatic+0x72>
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80076ee:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 80076f0:	2d00      	cmp	r5, #0
 80076f2:	bf08      	it	eq
 80076f4:	4622      	moveq	r2, r4
	pxNewQueue->uxItemSize = uxItemSize;
 80076f6:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80076fa:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
 80076fe:	6022      	str	r2, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007700:	4620      	mov	r0, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8007702:	9b01      	ldr	r3, [sp, #4]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007704:	f7ff ff7a 	bl	80075fc <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007708:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800770c:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
	}
 8007710:	4620      	mov	r0, r4
 8007712:	b003      	add	sp, #12
 8007714:	bd30      	pop	{r4, r5, pc}

08007716 <xQueueGenericCreate>:
	{
 8007716:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007718:	460d      	mov	r5, r1
 800771a:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800771c:	4606      	mov	r6, r0
 800771e:	b940      	cbnz	r0, 8007732 <xQueueGenericCreate+0x1c>
 8007720:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007724:	f383 8811 	msr	BASEPRI, r3
 8007728:	f3bf 8f6f 	isb	sy
 800772c:	f3bf 8f4f 	dsb	sy
 8007730:	e7fe      	b.n	8007730 <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007732:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8007734:	3050      	adds	r0, #80	@ 0x50
 8007736:	f7ff fc17 	bl	8006f68 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800773a:	4604      	mov	r4, r0
 800773c:	b170      	cbz	r0, 800775c <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800773e:	2300      	movs	r3, #0
 8007740:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8007744:	b165      	cbz	r5, 8007760 <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007746:	f100 0350 	add.w	r3, r0, #80	@ 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 800774a:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
 800774e:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007750:	2101      	movs	r1, #1
 8007752:	4620      	mov	r0, r4
 8007754:	f7ff ff52 	bl	80075fc <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007758:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
 800775c:	4620      	mov	r0, r4
 800775e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8007760:	4603      	mov	r3, r0
 8007762:	e7f2      	b.n	800774a <xQueueGenericCreate+0x34>

08007764 <xQueueCreateCountingSemaphoreStatic>:
	{
 8007764:	b513      	push	{r0, r1, r4, lr}
 8007766:	4613      	mov	r3, r2
 8007768:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800776a:	b940      	cbnz	r0, 800777e <xQueueCreateCountingSemaphoreStatic+0x1a>
 800776c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007770:	f383 8811 	msr	BASEPRI, r3
 8007774:	f3bf 8f6f 	isb	sy
 8007778:	f3bf 8f4f 	dsb	sy
 800777c:	e7fe      	b.n	800777c <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800777e:	4288      	cmp	r0, r1
 8007780:	d208      	bcs.n	8007794 <xQueueCreateCountingSemaphoreStatic+0x30>
 8007782:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007786:	f383 8811 	msr	BASEPRI, r3
 800778a:	f3bf 8f6f 	isb	sy
 800778e:	f3bf 8f4f 	dsb	sy
 8007792:	e7fe      	b.n	8007792 <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007794:	2202      	movs	r2, #2
 8007796:	9200      	str	r2, [sp, #0]
 8007798:	2200      	movs	r2, #0
 800779a:	4611      	mov	r1, r2
 800779c:	f7ff ff6d 	bl	800767a <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 80077a0:	b100      	cbz	r0, 80077a4 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80077a2:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 80077a4:	b002      	add	sp, #8
 80077a6:	bd10      	pop	{r4, pc}

080077a8 <xQueueCreateCountingSemaphore>:
	{
 80077a8:	b510      	push	{r4, lr}
 80077aa:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80077ac:	b940      	cbnz	r0, 80077c0 <xQueueCreateCountingSemaphore+0x18>
 80077ae:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80077b2:	f383 8811 	msr	BASEPRI, r3
 80077b6:	f3bf 8f6f 	isb	sy
 80077ba:	f3bf 8f4f 	dsb	sy
 80077be:	e7fe      	b.n	80077be <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 80077c0:	4288      	cmp	r0, r1
 80077c2:	d208      	bcs.n	80077d6 <xQueueCreateCountingSemaphore+0x2e>
 80077c4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80077c8:	f383 8811 	msr	BASEPRI, r3
 80077cc:	f3bf 8f6f 	isb	sy
 80077d0:	f3bf 8f4f 	dsb	sy
 80077d4:	e7fe      	b.n	80077d4 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80077d6:	2202      	movs	r2, #2
 80077d8:	2100      	movs	r1, #0
 80077da:	f7ff ff9c 	bl	8007716 <xQueueGenericCreate>
		if( xHandle != NULL )
 80077de:	b100      	cbz	r0, 80077e2 <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80077e0:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 80077e2:	bd10      	pop	{r4, pc}

080077e4 <xQueueGenericSend>:
{
 80077e4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80077e8:	460f      	mov	r7, r1
 80077ea:	9201      	str	r2, [sp, #4]
 80077ec:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 80077ee:	4604      	mov	r4, r0
 80077f0:	b940      	cbnz	r0, 8007804 <xQueueGenericSend+0x20>
 80077f2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80077f6:	f383 8811 	msr	BASEPRI, r3
 80077fa:	f3bf 8f6f 	isb	sy
 80077fe:	f3bf 8f4f 	dsb	sy
 8007802:	e7fe      	b.n	8007802 <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007804:	b951      	cbnz	r1, 800781c <xQueueGenericSend+0x38>
 8007806:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8007808:	b143      	cbz	r3, 800781c <xQueueGenericSend+0x38>
 800780a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800780e:	f383 8811 	msr	BASEPRI, r3
 8007812:	f3bf 8f6f 	isb	sy
 8007816:	f3bf 8f4f 	dsb	sy
 800781a:	e7fe      	b.n	800781a <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800781c:	2e02      	cmp	r6, #2
 800781e:	d10b      	bne.n	8007838 <xQueueGenericSend+0x54>
 8007820:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007822:	2b01      	cmp	r3, #1
 8007824:	d008      	beq.n	8007838 <xQueueGenericSend+0x54>
 8007826:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800782a:	f383 8811 	msr	BASEPRI, r3
 800782e:	f3bf 8f6f 	isb	sy
 8007832:	f3bf 8f4f 	dsb	sy
 8007836:	e7fe      	b.n	8007836 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007838:	f000 ffcc 	bl	80087d4 <xTaskGetSchedulerState>
 800783c:	4605      	mov	r5, r0
 800783e:	b330      	cbz	r0, 800788e <xQueueGenericSend+0xaa>
 8007840:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 8007842:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 8007846:	f7ff fd0d 	bl	8007264 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800784a:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800784c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800784e:	429a      	cmp	r2, r3
 8007850:	d301      	bcc.n	8007856 <xQueueGenericSend+0x72>
 8007852:	2e02      	cmp	r6, #2
 8007854:	d127      	bne.n	80078a6 <xQueueGenericSend+0xc2>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8007856:	4632      	mov	r2, r6
 8007858:	4639      	mov	r1, r7
 800785a:	4620      	mov	r0, r4
 800785c:	f7ff fe4d 	bl	80074fa <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007860:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8007862:	b11b      	cbz	r3, 800786c <xQueueGenericSend+0x88>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007864:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8007868:	f000 ff26 	bl	80086b8 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 800786c:	b148      	cbz	r0, 8007882 <xQueueGenericSend+0x9e>
						queueYIELD_IF_USING_PREEMPTION();
 800786e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007872:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007876:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800787a:	f3bf 8f4f 	dsb	sy
 800787e:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007882:	f7ff fd0f 	bl	80072a4 <vPortExitCritical>
				return pdPASS;
 8007886:	2001      	movs	r0, #1
}
 8007888:	b004      	add	sp, #16
 800788a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800788e:	9b01      	ldr	r3, [sp, #4]
 8007890:	2b00      	cmp	r3, #0
 8007892:	d0d6      	beq.n	8007842 <xQueueGenericSend+0x5e>
 8007894:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007898:	f383 8811 	msr	BASEPRI, r3
 800789c:	f3bf 8f6f 	isb	sy
 80078a0:	f3bf 8f4f 	dsb	sy
 80078a4:	e7fe      	b.n	80078a4 <xQueueGenericSend+0xc0>
				if( xTicksToWait == ( TickType_t ) 0 )
 80078a6:	9b01      	ldr	r3, [sp, #4]
 80078a8:	b91b      	cbnz	r3, 80078b2 <xQueueGenericSend+0xce>
					taskEXIT_CRITICAL();
 80078aa:	f7ff fcfb 	bl	80072a4 <vPortExitCritical>
					return errQUEUE_FULL;
 80078ae:	2000      	movs	r0, #0
 80078b0:	e7ea      	b.n	8007888 <xQueueGenericSend+0xa4>
				else if( xEntryTimeSet == pdFALSE )
 80078b2:	b915      	cbnz	r5, 80078ba <xQueueGenericSend+0xd6>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80078b4:	a802      	add	r0, sp, #8
 80078b6:	f000 ff3f 	bl	8008738 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80078ba:	f7ff fcf3 	bl	80072a4 <vPortExitCritical>
		vTaskSuspendAll();
 80078be:	f000 fd47 	bl	8008350 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80078c2:	f7ff fccf 	bl	8007264 <vPortEnterCritical>
 80078c6:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 80078ca:	2bff      	cmp	r3, #255	@ 0xff
 80078cc:	bf08      	it	eq
 80078ce:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 80078d2:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 80078d6:	2bff      	cmp	r3, #255	@ 0xff
 80078d8:	bf08      	it	eq
 80078da:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 80078de:	f7ff fce1 	bl	80072a4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80078e2:	a901      	add	r1, sp, #4
 80078e4:	a802      	add	r0, sp, #8
 80078e6:	f000 ff33 	bl	8008750 <xTaskCheckForTimeOut>
 80078ea:	bb38      	cbnz	r0, 800793c <xQueueGenericSend+0x158>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80078ec:	f7ff fcba 	bl	8007264 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 80078f0:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80078f2:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80078f4:	429a      	cmp	r2, r3
 80078f6:	d10e      	bne.n	8007916 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80078f8:	f7ff fcd4 	bl	80072a4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80078fc:	9901      	ldr	r1, [sp, #4]
 80078fe:	f104 0010 	add.w	r0, r4, #16
 8007902:	f000 fea1 	bl	8008648 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007906:	4620      	mov	r0, r4
 8007908:	f7ff fe40 	bl	800758c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800790c:	f000 fdc4 	bl	8008498 <xTaskResumeAll>
 8007910:	b148      	cbz	r0, 8007926 <xQueueGenericSend+0x142>
 8007912:	2501      	movs	r5, #1
 8007914:	e797      	b.n	8007846 <xQueueGenericSend+0x62>
	taskEXIT_CRITICAL();
 8007916:	f7ff fcc5 	bl	80072a4 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 800791a:	4620      	mov	r0, r4
 800791c:	f7ff fe36 	bl	800758c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007920:	f000 fdba 	bl	8008498 <xTaskResumeAll>
 8007924:	e7f5      	b.n	8007912 <xQueueGenericSend+0x12e>
					portYIELD_WITHIN_API();
 8007926:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800792a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800792e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007932:	f3bf 8f4f 	dsb	sy
 8007936:	f3bf 8f6f 	isb	sy
 800793a:	e7ea      	b.n	8007912 <xQueueGenericSend+0x12e>
			prvUnlockQueue( pxQueue );
 800793c:	4620      	mov	r0, r4
 800793e:	f7ff fe25 	bl	800758c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007942:	f000 fda9 	bl	8008498 <xTaskResumeAll>
			return errQUEUE_FULL;
 8007946:	e7b2      	b.n	80078ae <xQueueGenericSend+0xca>

08007948 <xQueueGenericSendFromISR>:
{
 8007948:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800794c:	4689      	mov	r9, r1
 800794e:	4617      	mov	r7, r2
 8007950:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 8007952:	4604      	mov	r4, r0
 8007954:	b940      	cbnz	r0, 8007968 <xQueueGenericSendFromISR+0x20>
 8007956:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800795a:	f383 8811 	msr	BASEPRI, r3
 800795e:	f3bf 8f6f 	isb	sy
 8007962:	f3bf 8f4f 	dsb	sy
 8007966:	e7fe      	b.n	8007966 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007968:	b951      	cbnz	r1, 8007980 <xQueueGenericSendFromISR+0x38>
 800796a:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800796c:	b143      	cbz	r3, 8007980 <xQueueGenericSendFromISR+0x38>
 800796e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007972:	f383 8811 	msr	BASEPRI, r3
 8007976:	f3bf 8f6f 	isb	sy
 800797a:	f3bf 8f4f 	dsb	sy
 800797e:	e7fe      	b.n	800797e <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8007980:	2e02      	cmp	r6, #2
 8007982:	d10b      	bne.n	800799c <xQueueGenericSendFromISR+0x54>
 8007984:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007986:	2b01      	cmp	r3, #1
 8007988:	d008      	beq.n	800799c <xQueueGenericSendFromISR+0x54>
 800798a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800798e:	f383 8811 	msr	BASEPRI, r3
 8007992:	f3bf 8f6f 	isb	sy
 8007996:	f3bf 8f4f 	dsb	sy
 800799a:	e7fe      	b.n	800799a <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800799c:	f7ff fd74 	bl	8007488 <vPortValidateInterruptPriority>
	__asm volatile
 80079a0:	f3ef 8811 	mrs	r8, BASEPRI
 80079a4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80079a8:	f383 8811 	msr	BASEPRI, r3
 80079ac:	f3bf 8f6f 	isb	sy
 80079b0:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80079b4:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80079b6:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80079b8:	429a      	cmp	r2, r3
 80079ba:	d301      	bcc.n	80079c0 <xQueueGenericSendFromISR+0x78>
 80079bc:	2e02      	cmp	r6, #2
 80079be:	d11e      	bne.n	80079fe <xQueueGenericSendFromISR+0xb6>
			const int8_t cTxLock = pxQueue->cTxLock;
 80079c0:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 80079c4:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 80079c6:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80079c8:	4632      	mov	r2, r6
 80079ca:	4649      	mov	r1, r9
 80079cc:	4620      	mov	r0, r4
 80079ce:	f7ff fd94 	bl	80074fa <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 80079d2:	1c6b      	adds	r3, r5, #1
 80079d4:	d10e      	bne.n	80079f4 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80079d6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80079d8:	b13b      	cbz	r3, 80079ea <xQueueGenericSendFromISR+0xa2>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80079da:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80079de:	f000 fe6b 	bl	80086b8 <xTaskRemoveFromEventList>
 80079e2:	b110      	cbz	r0, 80079ea <xQueueGenericSendFromISR+0xa2>
							if( pxHigherPriorityTaskWoken != NULL )
 80079e4:	b10f      	cbz	r7, 80079ea <xQueueGenericSendFromISR+0xa2>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80079e6:	2301      	movs	r3, #1
 80079e8:	603b      	str	r3, [r7, #0]
			xReturn = pdPASS;
 80079ea:	2001      	movs	r0, #1
	__asm volatile
 80079ec:	f388 8811 	msr	BASEPRI, r8
}
 80079f0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80079f4:	3501      	adds	r5, #1
 80079f6:	b26d      	sxtb	r5, r5
 80079f8:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 80079fc:	e7f5      	b.n	80079ea <xQueueGenericSendFromISR+0xa2>
			xReturn = errQUEUE_FULL;
 80079fe:	2000      	movs	r0, #0
 8007a00:	e7f4      	b.n	80079ec <xQueueGenericSendFromISR+0xa4>

08007a02 <xQueueGiveFromISR>:
{
 8007a02:	b570      	push	{r4, r5, r6, lr}
 8007a04:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8007a06:	4604      	mov	r4, r0
 8007a08:	b940      	cbnz	r0, 8007a1c <xQueueGiveFromISR+0x1a>
	__asm volatile
 8007a0a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007a0e:	f383 8811 	msr	BASEPRI, r3
 8007a12:	f3bf 8f6f 	isb	sy
 8007a16:	f3bf 8f4f 	dsb	sy
 8007a1a:	e7fe      	b.n	8007a1a <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8007a1c:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8007a1e:	b143      	cbz	r3, 8007a32 <xQueueGiveFromISR+0x30>
 8007a20:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007a24:	f383 8811 	msr	BASEPRI, r3
 8007a28:	f3bf 8f6f 	isb	sy
 8007a2c:	f3bf 8f4f 	dsb	sy
 8007a30:	e7fe      	b.n	8007a30 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8007a32:	6803      	ldr	r3, [r0, #0]
 8007a34:	b953      	cbnz	r3, 8007a4c <xQueueGiveFromISR+0x4a>
 8007a36:	6883      	ldr	r3, [r0, #8]
 8007a38:	b143      	cbz	r3, 8007a4c <xQueueGiveFromISR+0x4a>
 8007a3a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007a3e:	f383 8811 	msr	BASEPRI, r3
 8007a42:	f3bf 8f6f 	isb	sy
 8007a46:	f3bf 8f4f 	dsb	sy
 8007a4a:	e7fe      	b.n	8007a4a <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007a4c:	f7ff fd1c 	bl	8007488 <vPortValidateInterruptPriority>
	__asm volatile
 8007a50:	f3ef 8611 	mrs	r6, BASEPRI
 8007a54:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007a58:	f383 8811 	msr	BASEPRI, r3
 8007a5c:	f3bf 8f6f 	isb	sy
 8007a60:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007a64:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8007a66:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007a68:	4293      	cmp	r3, r2
 8007a6a:	d919      	bls.n	8007aa0 <xQueueGiveFromISR+0x9e>
			const int8_t cTxLock = pxQueue->cTxLock;
 8007a6c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007a70:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8007a72:	29ff      	cmp	r1, #255	@ 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8007a74:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007a76:	63a2      	str	r2, [r4, #56]	@ 0x38
			if( cTxLock == queueUNLOCKED )
 8007a78:	d10d      	bne.n	8007a96 <xQueueGiveFromISR+0x94>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007a7a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8007a7c:	b13b      	cbz	r3, 8007a8e <xQueueGiveFromISR+0x8c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007a7e:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8007a82:	f000 fe19 	bl	80086b8 <xTaskRemoveFromEventList>
 8007a86:	b110      	cbz	r0, 8007a8e <xQueueGiveFromISR+0x8c>
							if( pxHigherPriorityTaskWoken != NULL )
 8007a88:	b10d      	cbz	r5, 8007a8e <xQueueGiveFromISR+0x8c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8007a8a:	2301      	movs	r3, #1
 8007a8c:	602b      	str	r3, [r5, #0]
			xReturn = pdPASS;
 8007a8e:	2001      	movs	r0, #1
	__asm volatile
 8007a90:	f386 8811 	msr	BASEPRI, r6
}
 8007a94:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8007a96:	3301      	adds	r3, #1
 8007a98:	b25b      	sxtb	r3, r3
 8007a9a:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 8007a9e:	e7f6      	b.n	8007a8e <xQueueGiveFromISR+0x8c>
			xReturn = errQUEUE_FULL;
 8007aa0:	2000      	movs	r0, #0
 8007aa2:	e7f5      	b.n	8007a90 <xQueueGiveFromISR+0x8e>

08007aa4 <xQueueReceive>:
{
 8007aa4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8007aa8:	460e      	mov	r6, r1
 8007aaa:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8007aac:	4604      	mov	r4, r0
 8007aae:	b940      	cbnz	r0, 8007ac2 <xQueueReceive+0x1e>
	__asm volatile
 8007ab0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007ab4:	f383 8811 	msr	BASEPRI, r3
 8007ab8:	f3bf 8f6f 	isb	sy
 8007abc:	f3bf 8f4f 	dsb	sy
 8007ac0:	e7fe      	b.n	8007ac0 <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007ac2:	b951      	cbnz	r1, 8007ada <xQueueReceive+0x36>
 8007ac4:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8007ac6:	b143      	cbz	r3, 8007ada <xQueueReceive+0x36>
 8007ac8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007acc:	f383 8811 	msr	BASEPRI, r3
 8007ad0:	f3bf 8f6f 	isb	sy
 8007ad4:	f3bf 8f4f 	dsb	sy
 8007ad8:	e7fe      	b.n	8007ad8 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007ada:	f000 fe7b 	bl	80087d4 <xTaskGetSchedulerState>
 8007ade:	4605      	mov	r5, r0
 8007ae0:	b318      	cbz	r0, 8007b2a <xQueueReceive+0x86>
 8007ae2:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 8007ae4:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 8007ae8:	f7ff fbbc 	bl	8007264 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007aec:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007aee:	b347      	cbz	r7, 8007b42 <xQueueReceive+0x9e>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007af0:	4631      	mov	r1, r6
 8007af2:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007af4:	3f01      	subs	r7, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007af6:	f7ff fd33 	bl	8007560 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007afa:	63a7      	str	r7, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007afc:	6923      	ldr	r3, [r4, #16]
 8007afe:	b173      	cbz	r3, 8007b1e <xQueueReceive+0x7a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007b00:	f104 0010 	add.w	r0, r4, #16
 8007b04:	f000 fdd8 	bl	80086b8 <xTaskRemoveFromEventList>
 8007b08:	b148      	cbz	r0, 8007b1e <xQueueReceive+0x7a>
						queueYIELD_IF_USING_PREEMPTION();
 8007b0a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007b0e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007b12:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007b16:	f3bf 8f4f 	dsb	sy
 8007b1a:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007b1e:	f7ff fbc1 	bl	80072a4 <vPortExitCritical>
				return pdPASS;
 8007b22:	2001      	movs	r0, #1
}
 8007b24:	b004      	add	sp, #16
 8007b26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007b2a:	9b01      	ldr	r3, [sp, #4]
 8007b2c:	2b00      	cmp	r3, #0
 8007b2e:	d0d9      	beq.n	8007ae4 <xQueueReceive+0x40>
 8007b30:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007b34:	f383 8811 	msr	BASEPRI, r3
 8007b38:	f3bf 8f6f 	isb	sy
 8007b3c:	f3bf 8f4f 	dsb	sy
 8007b40:	e7fe      	b.n	8007b40 <xQueueReceive+0x9c>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007b42:	9b01      	ldr	r3, [sp, #4]
 8007b44:	b91b      	cbnz	r3, 8007b4e <xQueueReceive+0xaa>
					taskEXIT_CRITICAL();
 8007b46:	f7ff fbad 	bl	80072a4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8007b4a:	2000      	movs	r0, #0
 8007b4c:	e7ea      	b.n	8007b24 <xQueueReceive+0x80>
				else if( xEntryTimeSet == pdFALSE )
 8007b4e:	b915      	cbnz	r5, 8007b56 <xQueueReceive+0xb2>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007b50:	a802      	add	r0, sp, #8
 8007b52:	f000 fdf1 	bl	8008738 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007b56:	f7ff fba5 	bl	80072a4 <vPortExitCritical>
		vTaskSuspendAll();
 8007b5a:	f000 fbf9 	bl	8008350 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007b5e:	f7ff fb81 	bl	8007264 <vPortEnterCritical>
 8007b62:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8007b66:	2bff      	cmp	r3, #255	@ 0xff
 8007b68:	bf08      	it	eq
 8007b6a:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 8007b6e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8007b72:	2bff      	cmp	r3, #255	@ 0xff
 8007b74:	bf08      	it	eq
 8007b76:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 8007b7a:	f7ff fb93 	bl	80072a4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007b7e:	a901      	add	r1, sp, #4
 8007b80:	a802      	add	r0, sp, #8
 8007b82:	f000 fde5 	bl	8008750 <xTaskCheckForTimeOut>
 8007b86:	bb00      	cbnz	r0, 8007bca <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007b88:	4620      	mov	r0, r4
 8007b8a:	f7ff fcab 	bl	80074e4 <prvIsQueueEmpty>
 8007b8e:	b1b0      	cbz	r0, 8007bbe <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8007b90:	9901      	ldr	r1, [sp, #4]
 8007b92:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8007b96:	f000 fd57 	bl	8008648 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007b9a:	4620      	mov	r0, r4
 8007b9c:	f7ff fcf6 	bl	800758c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007ba0:	f000 fc7a 	bl	8008498 <xTaskResumeAll>
 8007ba4:	b948      	cbnz	r0, 8007bba <xQueueReceive+0x116>
					portYIELD_WITHIN_API();
 8007ba6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007baa:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007bae:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007bb2:	f3bf 8f4f 	dsb	sy
 8007bb6:	f3bf 8f6f 	isb	sy
 8007bba:	2501      	movs	r5, #1
 8007bbc:	e794      	b.n	8007ae8 <xQueueReceive+0x44>
				prvUnlockQueue( pxQueue );
 8007bbe:	4620      	mov	r0, r4
 8007bc0:	f7ff fce4 	bl	800758c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007bc4:	f000 fc68 	bl	8008498 <xTaskResumeAll>
 8007bc8:	e7f7      	b.n	8007bba <xQueueReceive+0x116>
			prvUnlockQueue( pxQueue );
 8007bca:	4620      	mov	r0, r4
 8007bcc:	f7ff fcde 	bl	800758c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007bd0:	f000 fc62 	bl	8008498 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007bd4:	4620      	mov	r0, r4
 8007bd6:	f7ff fc85 	bl	80074e4 <prvIsQueueEmpty>
 8007bda:	2800      	cmp	r0, #0
 8007bdc:	d0ed      	beq.n	8007bba <xQueueReceive+0x116>
 8007bde:	e7b4      	b.n	8007b4a <xQueueReceive+0xa6>

08007be0 <xQueueSemaphoreTake>:
{
 8007be0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007be2:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8007be4:	4604      	mov	r4, r0
{
 8007be6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8007be8:	b940      	cbnz	r0, 8007bfc <xQueueSemaphoreTake+0x1c>
 8007bea:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007bee:	f383 8811 	msr	BASEPRI, r3
 8007bf2:	f3bf 8f6f 	isb	sy
 8007bf6:	f3bf 8f4f 	dsb	sy
 8007bfa:	e7fe      	b.n	8007bfa <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 8007bfc:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 8007bfe:	b145      	cbz	r5, 8007c12 <xQueueSemaphoreTake+0x32>
 8007c00:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007c04:	f383 8811 	msr	BASEPRI, r3
 8007c08:	f3bf 8f6f 	isb	sy
 8007c0c:	f3bf 8f4f 	dsb	sy
 8007c10:	e7fe      	b.n	8007c10 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007c12:	f000 fddf 	bl	80087d4 <xTaskGetSchedulerState>
 8007c16:	4606      	mov	r6, r0
 8007c18:	b320      	cbz	r0, 8007c64 <xQueueSemaphoreTake+0x84>
 8007c1a:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8007c1c:	2700      	movs	r7, #0
		taskENTER_CRITICAL();
 8007c1e:	f7ff fb21 	bl	8007264 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8007c22:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8007c24:	b353      	cbz	r3, 8007c7c <xQueueSemaphoreTake+0x9c>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8007c26:	3b01      	subs	r3, #1
 8007c28:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007c2a:	6823      	ldr	r3, [r4, #0]
 8007c2c:	b913      	cbnz	r3, 8007c34 <xQueueSemaphoreTake+0x54>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8007c2e:	f000 feaf 	bl	8008990 <pvTaskIncrementMutexHeldCount>
 8007c32:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007c34:	6923      	ldr	r3, [r4, #16]
 8007c36:	b173      	cbz	r3, 8007c56 <xQueueSemaphoreTake+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007c38:	f104 0010 	add.w	r0, r4, #16
 8007c3c:	f000 fd3c 	bl	80086b8 <xTaskRemoveFromEventList>
 8007c40:	b148      	cbz	r0, 8007c56 <xQueueSemaphoreTake+0x76>
						queueYIELD_IF_USING_PREEMPTION();
 8007c42:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007c46:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007c4a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007c4e:	f3bf 8f4f 	dsb	sy
 8007c52:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007c56:	f7ff fb25 	bl	80072a4 <vPortExitCritical>
				return pdPASS;
 8007c5a:	2001      	movs	r0, #1
}
 8007c5c:	b005      	add	sp, #20
 8007c5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007c60:	4635      	mov	r5, r6
 8007c62:	e7db      	b.n	8007c1c <xQueueSemaphoreTake+0x3c>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007c64:	9b01      	ldr	r3, [sp, #4]
 8007c66:	2b00      	cmp	r3, #0
 8007c68:	d0fa      	beq.n	8007c60 <xQueueSemaphoreTake+0x80>
 8007c6a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007c6e:	f383 8811 	msr	BASEPRI, r3
 8007c72:	f3bf 8f6f 	isb	sy
 8007c76:	f3bf 8f4f 	dsb	sy
 8007c7a:	e7fe      	b.n	8007c7a <xQueueSemaphoreTake+0x9a>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007c7c:	9b01      	ldr	r3, [sp, #4]
 8007c7e:	b953      	cbnz	r3, 8007c96 <xQueueSemaphoreTake+0xb6>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8007c80:	2d00      	cmp	r5, #0
 8007c82:	d066      	beq.n	8007d52 <xQueueSemaphoreTake+0x172>
 8007c84:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007c88:	f383 8811 	msr	BASEPRI, r3
 8007c8c:	f3bf 8f6f 	isb	sy
 8007c90:	f3bf 8f4f 	dsb	sy
 8007c94:	e7fe      	b.n	8007c94 <xQueueSemaphoreTake+0xb4>
				else if( xEntryTimeSet == pdFALSE )
 8007c96:	b916      	cbnz	r6, 8007c9e <xQueueSemaphoreTake+0xbe>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007c98:	a802      	add	r0, sp, #8
 8007c9a:	f000 fd4d 	bl	8008738 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007c9e:	f7ff fb01 	bl	80072a4 <vPortExitCritical>
		vTaskSuspendAll();
 8007ca2:	f000 fb55 	bl	8008350 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007ca6:	f7ff fadd 	bl	8007264 <vPortEnterCritical>
 8007caa:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8007cae:	2bff      	cmp	r3, #255	@ 0xff
 8007cb0:	bf08      	it	eq
 8007cb2:	f884 7044 	strbeq.w	r7, [r4, #68]	@ 0x44
 8007cb6:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8007cba:	2bff      	cmp	r3, #255	@ 0xff
 8007cbc:	bf08      	it	eq
 8007cbe:	f884 7045 	strbeq.w	r7, [r4, #69]	@ 0x45
 8007cc2:	f7ff faef 	bl	80072a4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007cc6:	a901      	add	r1, sp, #4
 8007cc8:	a802      	add	r0, sp, #8
 8007cca:	f000 fd41 	bl	8008750 <xTaskCheckForTimeOut>
 8007cce:	bb50      	cbnz	r0, 8007d26 <xQueueSemaphoreTake+0x146>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007cd0:	4620      	mov	r0, r4
 8007cd2:	f7ff fc07 	bl	80074e4 <prvIsQueueEmpty>
 8007cd6:	b300      	cbz	r0, 8007d1a <xQueueSemaphoreTake+0x13a>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007cd8:	6823      	ldr	r3, [r4, #0]
 8007cda:	b93b      	cbnz	r3, 8007cec <xQueueSemaphoreTake+0x10c>
						taskENTER_CRITICAL();
 8007cdc:	f7ff fac2 	bl	8007264 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007ce0:	68a0      	ldr	r0, [r4, #8]
 8007ce2:	f000 fd87 	bl	80087f4 <xTaskPriorityInherit>
 8007ce6:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8007ce8:	f7ff fadc 	bl	80072a4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8007cec:	9901      	ldr	r1, [sp, #4]
 8007cee:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8007cf2:	f000 fca9 	bl	8008648 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007cf6:	4620      	mov	r0, r4
 8007cf8:	f7ff fc48 	bl	800758c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007cfc:	f000 fbcc 	bl	8008498 <xTaskResumeAll>
 8007d00:	b948      	cbnz	r0, 8007d16 <xQueueSemaphoreTake+0x136>
					portYIELD_WITHIN_API();
 8007d02:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007d06:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007d0a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007d0e:	f3bf 8f4f 	dsb	sy
 8007d12:	f3bf 8f6f 	isb	sy
 8007d16:	2601      	movs	r6, #1
 8007d18:	e781      	b.n	8007c1e <xQueueSemaphoreTake+0x3e>
				prvUnlockQueue( pxQueue );
 8007d1a:	4620      	mov	r0, r4
 8007d1c:	f7ff fc36 	bl	800758c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007d20:	f000 fbba 	bl	8008498 <xTaskResumeAll>
 8007d24:	e7f7      	b.n	8007d16 <xQueueSemaphoreTake+0x136>
			prvUnlockQueue( pxQueue );
 8007d26:	4620      	mov	r0, r4
 8007d28:	f7ff fc30 	bl	800758c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007d2c:	f000 fbb4 	bl	8008498 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007d30:	4620      	mov	r0, r4
 8007d32:	f7ff fbd7 	bl	80074e4 <prvIsQueueEmpty>
 8007d36:	2800      	cmp	r0, #0
 8007d38:	d0ed      	beq.n	8007d16 <xQueueSemaphoreTake+0x136>
					if( xInheritanceOccurred != pdFALSE )
 8007d3a:	b165      	cbz	r5, 8007d56 <xQueueSemaphoreTake+0x176>
						taskENTER_CRITICAL();
 8007d3c:	f7ff fa92 	bl	8007264 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8007d40:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8007d42:	b119      	cbz	r1, 8007d4c <xQueueSemaphoreTake+0x16c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8007d44:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8007d46:	6819      	ldr	r1, [r3, #0]
 8007d48:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8007d4c:	68a0      	ldr	r0, [r4, #8]
 8007d4e:	f000 fdd1 	bl	80088f4 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 8007d52:	f7ff faa7 	bl	80072a4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8007d56:	2000      	movs	r0, #0
 8007d58:	e780      	b.n	8007c5c <xQueueSemaphoreTake+0x7c>

08007d5a <xQueueReceiveFromISR>:
{
 8007d5a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007d5e:	4689      	mov	r9, r1
 8007d60:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8007d62:	4604      	mov	r4, r0
 8007d64:	b940      	cbnz	r0, 8007d78 <xQueueReceiveFromISR+0x1e>
 8007d66:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007d6a:	f383 8811 	msr	BASEPRI, r3
 8007d6e:	f3bf 8f6f 	isb	sy
 8007d72:	f3bf 8f4f 	dsb	sy
 8007d76:	e7fe      	b.n	8007d76 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007d78:	b951      	cbnz	r1, 8007d90 <xQueueReceiveFromISR+0x36>
 8007d7a:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8007d7c:	b143      	cbz	r3, 8007d90 <xQueueReceiveFromISR+0x36>
 8007d7e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007d82:	f383 8811 	msr	BASEPRI, r3
 8007d86:	f3bf 8f6f 	isb	sy
 8007d8a:	f3bf 8f4f 	dsb	sy
 8007d8e:	e7fe      	b.n	8007d8e <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007d90:	f7ff fb7a 	bl	8007488 <vPortValidateInterruptPriority>
	__asm volatile
 8007d94:	f3ef 8711 	mrs	r7, BASEPRI
 8007d98:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007d9c:	f383 8811 	msr	BASEPRI, r3
 8007da0:	f3bf 8f6f 	isb	sy
 8007da4:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007da8:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007daa:	b30d      	cbz	r5, 8007df0 <xQueueReceiveFromISR+0x96>
			const int8_t cRxLock = pxQueue->cRxLock;
 8007dac:	f894 6044 	ldrb.w	r6, [r4, #68]	@ 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007db0:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 8007db2:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007db4:	4620      	mov	r0, r4
 8007db6:	f7ff fbd3 	bl	8007560 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007dba:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 8007dbc:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007dbe:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
 8007dc0:	d111      	bne.n	8007de6 <xQueueReceiveFromISR+0x8c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007dc2:	6923      	ldr	r3, [r4, #16]
 8007dc4:	b153      	cbz	r3, 8007ddc <xQueueReceiveFromISR+0x82>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007dc6:	f104 0010 	add.w	r0, r4, #16
 8007dca:	f000 fc75 	bl	80086b8 <xTaskRemoveFromEventList>
 8007dce:	b128      	cbz	r0, 8007ddc <xQueueReceiveFromISR+0x82>
						if( pxHigherPriorityTaskWoken != NULL )
 8007dd0:	f1b8 0f00 	cmp.w	r8, #0
 8007dd4:	d002      	beq.n	8007ddc <xQueueReceiveFromISR+0x82>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8007dd6:	2301      	movs	r3, #1
 8007dd8:	f8c8 3000 	str.w	r3, [r8]
			xReturn = pdPASS;
 8007ddc:	2001      	movs	r0, #1
	__asm volatile
 8007dde:	f387 8811 	msr	BASEPRI, r7
}
 8007de2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8007de6:	3601      	adds	r6, #1
 8007de8:	b276      	sxtb	r6, r6
 8007dea:	f884 6044 	strb.w	r6, [r4, #68]	@ 0x44
 8007dee:	e7f5      	b.n	8007ddc <xQueueReceiveFromISR+0x82>
			xReturn = pdFAIL;
 8007df0:	4628      	mov	r0, r5
 8007df2:	e7f4      	b.n	8007dde <xQueueReceiveFromISR+0x84>

08007df4 <uxQueueMessagesWaiting>:
{
 8007df4:	b510      	push	{r4, lr}
	configASSERT( xQueue );
 8007df6:	4604      	mov	r4, r0
 8007df8:	b940      	cbnz	r0, 8007e0c <uxQueueMessagesWaiting+0x18>
	__asm volatile
 8007dfa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007dfe:	f383 8811 	msr	BASEPRI, r3
 8007e02:	f3bf 8f6f 	isb	sy
 8007e06:	f3bf 8f4f 	dsb	sy
 8007e0a:	e7fe      	b.n	8007e0a <uxQueueMessagesWaiting+0x16>
	taskENTER_CRITICAL();
 8007e0c:	f7ff fa2a 	bl	8007264 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 8007e10:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
	taskEXIT_CRITICAL();
 8007e12:	f7ff fa47 	bl	80072a4 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 8007e16:	4620      	mov	r0, r4
 8007e18:	bd10      	pop	{r4, pc}

08007e1a <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 8007e1a:	b940      	cbnz	r0, 8007e2e <uxQueueMessagesWaitingFromISR+0x14>
 8007e1c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007e20:	f383 8811 	msr	BASEPRI, r3
 8007e24:	f3bf 8f6f 	isb	sy
 8007e28:	f3bf 8f4f 	dsb	sy
 8007e2c:	e7fe      	b.n	8007e2c <uxQueueMessagesWaitingFromISR+0x12>
	uxReturn = pxQueue->uxMessagesWaiting;
 8007e2e:	6b80      	ldr	r0, [r0, #56]	@ 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 8007e30:	4770      	bx	lr
	...

08007e34 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8007e34:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8007e36:	4a07      	ldr	r2, [pc, #28]	@ (8007e54 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007e38:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8007e3a:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 8007e3e:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 8007e42:	b91d      	cbnz	r5, 8007e4c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8007e44:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8007e48:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 8007e4a:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007e4c:	3301      	adds	r3, #1
 8007e4e:	2b08      	cmp	r3, #8
 8007e50:	d1f3      	bne.n	8007e3a <vQueueAddToRegistry+0x6>
 8007e52:	e7fa      	b.n	8007e4a <vQueueAddToRegistry+0x16>
 8007e54:	20011360 	.word	0x20011360

08007e58 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8007e58:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8007e5a:	4a09      	ldr	r2, [pc, #36]	@ (8007e80 <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007e5c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8007e5e:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 8007e62:	4281      	cmp	r1, r0
 8007e64:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 8007e68:	d106      	bne.n	8007e78 <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8007e6a:	4a06      	ldr	r2, [pc, #24]	@ (8007e84 <vQueueUnregisterQueue+0x2c>)
 8007e6c:	2100      	movs	r1, #0
 8007e6e:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8007e72:	4422      	add	r2, r4
 8007e74:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8007e76:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007e78:	3301      	adds	r3, #1
 8007e7a:	2b08      	cmp	r3, #8
 8007e7c:	d1ef      	bne.n	8007e5e <vQueueUnregisterQueue+0x6>
 8007e7e:	e7fa      	b.n	8007e76 <vQueueUnregisterQueue+0x1e>
 8007e80:	20011364 	.word	0x20011364
 8007e84:	20011360 	.word	0x20011360

08007e88 <vQueueDelete>:
{
 8007e88:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8007e8a:	b940      	cbnz	r0, 8007e9e <vQueueDelete+0x16>
 8007e8c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007e90:	f383 8811 	msr	BASEPRI, r3
 8007e94:	f3bf 8f6f 	isb	sy
 8007e98:	f3bf 8f4f 	dsb	sy
 8007e9c:	e7fe      	b.n	8007e9c <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 8007e9e:	f7ff ffdb 	bl	8007e58 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8007ea2:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
 8007ea6:	b91b      	cbnz	r3, 8007eb0 <vQueueDelete+0x28>
}
 8007ea8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8007eac:	f7ff b8f4 	b.w	8007098 <vPortFree>
}
 8007eb0:	bd10      	pop	{r4, pc}

08007eb2 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8007eb2:	b570      	push	{r4, r5, r6, lr}
 8007eb4:	4604      	mov	r4, r0
 8007eb6:	460d      	mov	r5, r1
 8007eb8:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8007eba:	f7ff f9d3 	bl	8007264 <vPortEnterCritical>
 8007ebe:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8007ec2:	2bff      	cmp	r3, #255	@ 0xff
 8007ec4:	bf04      	itt	eq
 8007ec6:	2300      	moveq	r3, #0
 8007ec8:	f884 3044 	strbeq.w	r3, [r4, #68]	@ 0x44
 8007ecc:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8007ed0:	2bff      	cmp	r3, #255	@ 0xff
 8007ed2:	bf04      	itt	eq
 8007ed4:	2300      	moveq	r3, #0
 8007ed6:	f884 3045 	strbeq.w	r3, [r4, #69]	@ 0x45
 8007eda:	f7ff f9e3 	bl	80072a4 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8007ede:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8007ee0:	b92b      	cbnz	r3, 8007eee <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8007ee2:	4632      	mov	r2, r6
 8007ee4:	4629      	mov	r1, r5
 8007ee6:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8007eea:	f000 fbc7 	bl	800867c <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 8007eee:	4620      	mov	r0, r4
	}
 8007ef0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8007ef4:	f7ff bb4a 	b.w	800758c <prvUnlockQueue>

08007ef8 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8007ef8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007efc:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 8007efe:	f7ff f9b1 	bl	8007264 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8007f02:	4b30      	ldr	r3, [pc, #192]	@ (8007fc4 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 8007f04:	4e30      	ldr	r6, [pc, #192]	@ (8007fc8 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 8007f06:	681a      	ldr	r2, [r3, #0]
 8007f08:	4f30      	ldr	r7, [pc, #192]	@ (8007fcc <prvAddNewTaskToReadyList+0xd4>)
 8007f0a:	3201      	adds	r2, #1
 8007f0c:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 8007f0e:	6835      	ldr	r5, [r6, #0]
 8007f10:	2d00      	cmp	r5, #0
 8007f12:	d14b      	bne.n	8007fac <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8007f14:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8007f16:	681b      	ldr	r3, [r3, #0]
 8007f18:	2b01      	cmp	r3, #1
 8007f1a:	d11f      	bne.n	8007f5c <prvAddNewTaskToReadyList+0x64>
 8007f1c:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8007f1e:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8007f20:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8007f22:	f7ff f8f7 	bl	8007114 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8007f26:	2d38      	cmp	r5, #56	@ 0x38
 8007f28:	f108 0814 	add.w	r8, r8, #20
 8007f2c:	d1f7      	bne.n	8007f1e <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 8007f2e:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 8007ff4 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 8007f32:	4d27      	ldr	r5, [pc, #156]	@ (8007fd0 <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8007f34:	4640      	mov	r0, r8
 8007f36:	f7ff f8ed 	bl	8007114 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8007f3a:	4628      	mov	r0, r5
 8007f3c:	f7ff f8ea 	bl	8007114 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8007f40:	4824      	ldr	r0, [pc, #144]	@ (8007fd4 <prvAddNewTaskToReadyList+0xdc>)
 8007f42:	f7ff f8e7 	bl	8007114 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8007f46:	4824      	ldr	r0, [pc, #144]	@ (8007fd8 <prvAddNewTaskToReadyList+0xe0>)
 8007f48:	f7ff f8e4 	bl	8007114 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8007f4c:	4823      	ldr	r0, [pc, #140]	@ (8007fdc <prvAddNewTaskToReadyList+0xe4>)
 8007f4e:	f7ff f8e1 	bl	8007114 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8007f52:	4b23      	ldr	r3, [pc, #140]	@ (8007fe0 <prvAddNewTaskToReadyList+0xe8>)
 8007f54:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8007f58:	4b22      	ldr	r3, [pc, #136]	@ (8007fe4 <prvAddNewTaskToReadyList+0xec>)
 8007f5a:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8007f5c:	4a22      	ldr	r2, [pc, #136]	@ (8007fe8 <prvAddNewTaskToReadyList+0xf0>)
 8007f5e:	6813      	ldr	r3, [r2, #0]
 8007f60:	3301      	adds	r3, #1
 8007f62:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8007f64:	4a21      	ldr	r2, [pc, #132]	@ (8007fec <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8007f66:	6463      	str	r3, [r4, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8007f68:	6811      	ldr	r1, [r2, #0]
 8007f6a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8007f6c:	2014      	movs	r0, #20
 8007f6e:	428b      	cmp	r3, r1
 8007f70:	fb00 7003 	mla	r0, r0, r3, r7
 8007f74:	f104 0104 	add.w	r1, r4, #4
 8007f78:	bf88      	it	hi
 8007f7a:	6013      	strhi	r3, [r2, #0]
 8007f7c:	f7ff f8d8 	bl	8007130 <vListInsertEnd>
	taskEXIT_CRITICAL();
 8007f80:	f7ff f990 	bl	80072a4 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8007f84:	4b1a      	ldr	r3, [pc, #104]	@ (8007ff0 <prvAddNewTaskToReadyList+0xf8>)
 8007f86:	681b      	ldr	r3, [r3, #0]
 8007f88:	b173      	cbz	r3, 8007fa8 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8007f8a:	6833      	ldr	r3, [r6, #0]
 8007f8c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8007f8e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8007f90:	429a      	cmp	r2, r3
 8007f92:	d209      	bcs.n	8007fa8 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8007f94:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007f98:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007f9c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007fa0:	f3bf 8f4f 	dsb	sy
 8007fa4:	f3bf 8f6f 	isb	sy
}
 8007fa8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8007fac:	4b10      	ldr	r3, [pc, #64]	@ (8007ff0 <prvAddNewTaskToReadyList+0xf8>)
 8007fae:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8007fb0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
 8007fb2:	2a00      	cmp	r2, #0
 8007fb4:	d1d2      	bne.n	8007f5c <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8007fb6:	6832      	ldr	r2, [r6, #0]
 8007fb8:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8007fba:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8007fbc:	bf98      	it	ls
 8007fbe:	6034      	strls	r4, [r6, #0]
 8007fc0:	e7cc      	b.n	8007f5c <prvAddNewTaskToReadyList+0x64>
 8007fc2:	bf00      	nop
 8007fc4:	200113c4 	.word	0x200113c4
 8007fc8:	20011898 	.word	0x20011898
 8007fcc:	20011438 	.word	0x20011438
 8007fd0:	20011410 	.word	0x20011410
 8007fd4:	200113f4 	.word	0x200113f4
 8007fd8:	200113e0 	.word	0x200113e0
 8007fdc:	200113c8 	.word	0x200113c8
 8007fe0:	2001140c 	.word	0x2001140c
 8007fe4:	20011408 	.word	0x20011408
 8007fe8:	200113a8 	.word	0x200113a8
 8007fec:	200113bc 	.word	0x200113bc
 8007ff0:	200113b8 	.word	0x200113b8
 8007ff4:	20011424 	.word	0x20011424

08007ff8 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8007ff8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8007ffa:	4b15      	ldr	r3, [pc, #84]	@ (8008050 <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8007ffc:	4d15      	ldr	r5, [pc, #84]	@ (8008054 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 8007ffe:	681c      	ldr	r4, [r3, #0]
{
 8008000:	4606      	mov	r6, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008002:	6828      	ldr	r0, [r5, #0]
 8008004:	3004      	adds	r0, #4
{
 8008006:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008008:	f7ff f8b4 	bl	8007174 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800800c:	1c73      	adds	r3, r6, #1
 800800e:	d107      	bne.n	8008020 <prvAddCurrentTaskToDelayedList+0x28>
 8008010:	b137      	cbz	r7, 8008020 <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008012:	6829      	ldr	r1, [r5, #0]
 8008014:	4810      	ldr	r0, [pc, #64]	@ (8008058 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8008016:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800801a:	3104      	adds	r1, #4
 800801c:	f7ff b888 	b.w	8007130 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8008020:	682b      	ldr	r3, [r5, #0]
 8008022:	19a4      	adds	r4, r4, r6
 8008024:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8008026:	d307      	bcc.n	8008038 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008028:	4b0c      	ldr	r3, [pc, #48]	@ (800805c <prvAddCurrentTaskToDelayedList+0x64>)
 800802a:	6818      	ldr	r0, [r3, #0]
 800802c:	6829      	ldr	r1, [r5, #0]
}
 800802e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008032:	3104      	adds	r1, #4
 8008034:	f7ff b887 	b.w	8007146 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008038:	4b09      	ldr	r3, [pc, #36]	@ (8008060 <prvAddCurrentTaskToDelayedList+0x68>)
 800803a:	6818      	ldr	r0, [r3, #0]
 800803c:	6829      	ldr	r1, [r5, #0]
 800803e:	3104      	adds	r1, #4
 8008040:	f7ff f881 	bl	8007146 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8008044:	4b07      	ldr	r3, [pc, #28]	@ (8008064 <prvAddCurrentTaskToDelayedList+0x6c>)
 8008046:	681a      	ldr	r2, [r3, #0]
 8008048:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 800804a:	bf88      	it	hi
 800804c:	601c      	strhi	r4, [r3, #0]
}
 800804e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008050:	200113c0 	.word	0x200113c0
 8008054:	20011898 	.word	0x20011898
 8008058:	200113c8 	.word	0x200113c8
 800805c:	20011408 	.word	0x20011408
 8008060:	2001140c 	.word	0x2001140c
 8008064:	200113a4 	.word	0x200113a4

08008068 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008068:	4a06      	ldr	r2, [pc, #24]	@ (8008084 <prvResetNextTaskUnblockTime+0x1c>)
 800806a:	6813      	ldr	r3, [r2, #0]
 800806c:	6819      	ldr	r1, [r3, #0]
 800806e:	4b06      	ldr	r3, [pc, #24]	@ (8008088 <prvResetNextTaskUnblockTime+0x20>)
 8008070:	b919      	cbnz	r1, 800807a <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 8008072:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8008076:	601a      	str	r2, [r3, #0]
}
 8008078:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800807a:	6812      	ldr	r2, [r2, #0]
 800807c:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800807e:	68d2      	ldr	r2, [r2, #12]
 8008080:	6852      	ldr	r2, [r2, #4]
 8008082:	e7f8      	b.n	8008076 <prvResetNextTaskUnblockTime+0xe>
 8008084:	2001140c 	.word	0x2001140c
 8008088:	200113a4 	.word	0x200113a4

0800808c <prvDeleteTCB>:
	{
 800808c:	b510      	push	{r4, lr}
 800808e:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 8008090:	3058      	adds	r0, #88	@ 0x58
 8008092:	f015 f9f5 	bl	801d480 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8008096:	f894 30a9 	ldrb.w	r3, [r4, #169]	@ 0xa9
 800809a:	b93b      	cbnz	r3, 80080ac <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 800809c:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800809e:	f7fe fffb 	bl	8007098 <vPortFree>
				vPortFree( pxTCB );
 80080a2:	4620      	mov	r0, r4
	}
 80080a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 80080a8:	f7fe bff6 	b.w	8007098 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 80080ac:	2b01      	cmp	r3, #1
 80080ae:	d0f8      	beq.n	80080a2 <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 80080b0:	2b02      	cmp	r3, #2
 80080b2:	d008      	beq.n	80080c6 <prvDeleteTCB+0x3a>
 80080b4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80080b8:	f383 8811 	msr	BASEPRI, r3
 80080bc:	f3bf 8f6f 	isb	sy
 80080c0:	f3bf 8f4f 	dsb	sy
 80080c4:	e7fe      	b.n	80080c4 <prvDeleteTCB+0x38>
	}
 80080c6:	bd10      	pop	{r4, pc}

080080c8 <prvIdleTask>:
{
 80080c8:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80080ca:	4c13      	ldr	r4, [pc, #76]	@ (8008118 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80080cc:	4f13      	ldr	r7, [pc, #76]	@ (800811c <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 80080ce:	4d14      	ldr	r5, [pc, #80]	@ (8008120 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80080d0:	6823      	ldr	r3, [r4, #0]
 80080d2:	b973      	cbnz	r3, 80080f2 <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 80080d4:	4b13      	ldr	r3, [pc, #76]	@ (8008124 <prvIdleTask+0x5c>)
 80080d6:	681b      	ldr	r3, [r3, #0]
 80080d8:	2b01      	cmp	r3, #1
 80080da:	d9f8      	bls.n	80080ce <prvIdleTask+0x6>
				taskYIELD();
 80080dc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80080e0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80080e4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80080e8:	f3bf 8f4f 	dsb	sy
 80080ec:	f3bf 8f6f 	isb	sy
 80080f0:	e7ed      	b.n	80080ce <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 80080f2:	f7ff f8b7 	bl	8007264 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80080f6:	68fb      	ldr	r3, [r7, #12]
 80080f8:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80080fa:	1d30      	adds	r0, r6, #4
 80080fc:	f7ff f83a 	bl	8007174 <uxListRemove>
				--uxCurrentNumberOfTasks;
 8008100:	682b      	ldr	r3, [r5, #0]
 8008102:	3b01      	subs	r3, #1
 8008104:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8008106:	6823      	ldr	r3, [r4, #0]
 8008108:	3b01      	subs	r3, #1
 800810a:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 800810c:	f7ff f8ca 	bl	80072a4 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8008110:	4630      	mov	r0, r6
 8008112:	f7ff ffbb 	bl	800808c <prvDeleteTCB>
 8008116:	e7db      	b.n	80080d0 <prvIdleTask+0x8>
 8008118:	200113dc 	.word	0x200113dc
 800811c:	200113e0 	.word	0x200113e0
 8008120:	200113c4 	.word	0x200113c4
 8008124:	20011438 	.word	0x20011438

08008128 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008128:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800812c:	e9dd 9409 	ldrd	r9, r4, [sp, #36]	@ 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008130:	0096      	lsls	r6, r2, #2
 8008132:	4632      	mov	r2, r6
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008134:	4607      	mov	r7, r0
 8008136:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008138:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800813a:	21a5      	movs	r1, #165	@ 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800813c:	4698      	mov	r8, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800813e:	f015 f956 	bl	801d3ee <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8008142:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8008144:	3e04      	subs	r6, #4
 8008146:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8008148:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
 800814c:	2d00      	cmp	r5, #0
 800814e:	d043      	beq.n	80081d8 <prvInitialiseNewTask.constprop.0+0xb0>
 8008150:	1e6b      	subs	r3, r5, #1
 8008152:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 8008156:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8008158:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800815c:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 8008160:	b109      	cbz	r1, 8008166 <prvInitialiseNewTask.constprop.0+0x3e>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8008162:	42ab      	cmp	r3, r5
 8008164:	d1f8      	bne.n	8008158 <prvInitialiseNewTask.constprop.0+0x30>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8008166:	2300      	movs	r3, #0
 8008168:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800816c:	9d08      	ldr	r5, [sp, #32]
 800816e:	2d37      	cmp	r5, #55	@ 0x37
 8008170:	bf28      	it	cs
 8008172:	2537      	movcs	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8008174:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8008178:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800817a:	64e5      	str	r5, [r4, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800817c:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800817e:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8008182:	f7fe ffd2 	bl	800712a <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008186:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800818a:	f104 0018 	add.w	r0, r4, #24
 800818e:	f7fe ffcc 	bl	800712a <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8008192:	f8c4 a0a4 	str.w	sl, [r4, #164]	@ 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8008196:	224c      	movs	r2, #76	@ 0x4c
 8008198:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800819a:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800819c:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800819e:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
 80081a0:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 80081a4:	f884 a0a8 	strb.w	sl, [r4, #168]	@ 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 80081a8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80081ac:	f015 f91f 	bl	801d3ee <memset>
 80081b0:	4b0b      	ldr	r3, [pc, #44]	@ (80081e0 <prvInitialiseNewTask.constprop.0+0xb8>)
 80081b2:	65e3      	str	r3, [r4, #92]	@ 0x5c
 80081b4:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80081b8:	33d0      	adds	r3, #208	@ 0xd0
 80081ba:	6622      	str	r2, [r4, #96]	@ 0x60
 80081bc:	6663      	str	r3, [r4, #100]	@ 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 80081be:	4642      	mov	r2, r8
 80081c0:	4639      	mov	r1, r7
 80081c2:	4630      	mov	r0, r6
 80081c4:	f7ff f824 	bl	8007210 <pxPortInitialiseStack>
 80081c8:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 80081ca:	f1b9 0f00 	cmp.w	r9, #0
 80081ce:	d001      	beq.n	80081d4 <prvInitialiseNewTask.constprop.0+0xac>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 80081d0:	f8c9 4000 	str.w	r4, [r9]
}
 80081d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 80081d8:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 80081dc:	e7c6      	b.n	800816c <prvInitialiseNewTask.constprop.0+0x44>
 80081de:	bf00      	nop
 80081e0:	20012328 	.word	0x20012328

080081e4 <xTaskCreateStatic>:
	{
 80081e4:	b570      	push	{r4, r5, r6, lr}
 80081e6:	b086      	sub	sp, #24
 80081e8:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
 80081ec:	b945      	cbnz	r5, 8008200 <xTaskCreateStatic+0x1c>
 80081ee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80081f2:	f383 8811 	msr	BASEPRI, r3
 80081f6:	f3bf 8f6f 	isb	sy
 80081fa:	f3bf 8f4f 	dsb	sy
 80081fe:	e7fe      	b.n	80081fe <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8008200:	b944      	cbnz	r4, 8008214 <xTaskCreateStatic+0x30>
 8008202:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008206:	f383 8811 	msr	BASEPRI, r3
 800820a:	f3bf 8f6f 	isb	sy
 800820e:	f3bf 8f4f 	dsb	sy
 8008212:	e7fe      	b.n	8008212 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8008214:	26ac      	movs	r6, #172	@ 0xac
 8008216:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8008218:	9e05      	ldr	r6, [sp, #20]
 800821a:	2eac      	cmp	r6, #172	@ 0xac
 800821c:	d008      	beq.n	8008230 <xTaskCreateStatic+0x4c>
 800821e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008222:	f383 8811 	msr	BASEPRI, r3
 8008226:	f3bf 8f6f 	isb	sy
 800822a:	f3bf 8f4f 	dsb	sy
 800822e:	e7fe      	b.n	800822e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8008230:	6325      	str	r5, [r4, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8008232:	2502      	movs	r5, #2
 8008234:	f884 50a9 	strb.w	r5, [r4, #169]	@ 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8008238:	ad04      	add	r5, sp, #16
 800823a:	9501      	str	r5, [sp, #4]
 800823c:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 800823e:	9402      	str	r4, [sp, #8]
 8008240:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8008242:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8008244:	f7ff ff70 	bl	8008128 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008248:	4620      	mov	r0, r4
 800824a:	f7ff fe55 	bl	8007ef8 <prvAddNewTaskToReadyList>
	}
 800824e:	9804      	ldr	r0, [sp, #16]
 8008250:	b006      	add	sp, #24
 8008252:	bd70      	pop	{r4, r5, r6, pc}

08008254 <xTaskCreate>:
	{
 8008254:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008258:	4607      	mov	r7, r0
 800825a:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800825c:	0090      	lsls	r0, r2, #2
	{
 800825e:	4688      	mov	r8, r1
 8008260:	4616      	mov	r6, r2
 8008262:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008264:	f7fe fe80 	bl	8006f68 <pvPortMalloc>
			if( pxStack != NULL )
 8008268:	4605      	mov	r5, r0
 800826a:	b920      	cbnz	r0, 8008276 <xTaskCreate+0x22>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800826c:	f04f 30ff 	mov.w	r0, #4294967295
	}
 8008270:	b005      	add	sp, #20
 8008272:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8008276:	20ac      	movs	r0, #172	@ 0xac
 8008278:	f7fe fe76 	bl	8006f68 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800827c:	4604      	mov	r4, r0
 800827e:	b198      	cbz	r0, 80082a8 <xTaskCreate+0x54>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8008280:	2300      	movs	r3, #0
 8008282:	f880 30a9 	strb.w	r3, [r0, #169]	@ 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8008286:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
					pxNewTCB->pxStack = pxStack;
 8008288:	6305      	str	r5, [r0, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800828a:	9301      	str	r3, [sp, #4]
 800828c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800828e:	9002      	str	r0, [sp, #8]
 8008290:	9300      	str	r3, [sp, #0]
 8008292:	4632      	mov	r2, r6
 8008294:	464b      	mov	r3, r9
 8008296:	4641      	mov	r1, r8
 8008298:	4638      	mov	r0, r7
 800829a:	f7ff ff45 	bl	8008128 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800829e:	4620      	mov	r0, r4
 80082a0:	f7ff fe2a 	bl	8007ef8 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 80082a4:	2001      	movs	r0, #1
 80082a6:	e7e3      	b.n	8008270 <xTaskCreate+0x1c>
					vPortFree( pxStack );
 80082a8:	4628      	mov	r0, r5
 80082aa:	f7fe fef5 	bl	8007098 <vPortFree>
		if( pxNewTCB != NULL )
 80082ae:	e7dd      	b.n	800826c <xTaskCreate+0x18>

080082b0 <vTaskStartScheduler>:
{
 80082b0:	b510      	push	{r4, lr}
 80082b2:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 80082b4:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80082b6:	aa07      	add	r2, sp, #28
 80082b8:	a906      	add	r1, sp, #24
 80082ba:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 80082bc:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80082c0:	f7fe fe14 	bl	8006eec <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 80082c4:	9b05      	ldr	r3, [sp, #20]
 80082c6:	9302      	str	r3, [sp, #8]
 80082c8:	9b06      	ldr	r3, [sp, #24]
 80082ca:	9a07      	ldr	r2, [sp, #28]
 80082cc:	4919      	ldr	r1, [pc, #100]	@ (8008334 <vTaskStartScheduler+0x84>)
 80082ce:	481a      	ldr	r0, [pc, #104]	@ (8008338 <vTaskStartScheduler+0x88>)
 80082d0:	e9cd 4300 	strd	r4, r3, [sp]
 80082d4:	4623      	mov	r3, r4
 80082d6:	f7ff ff85 	bl	80081e4 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 80082da:	b340      	cbz	r0, 800832e <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 80082dc:	f000 fbb6 	bl	8008a4c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 80082e0:	2801      	cmp	r0, #1
 80082e2:	d119      	bne.n	8008318 <vTaskStartScheduler+0x68>
 80082e4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80082e8:	f383 8811 	msr	BASEPRI, r3
 80082ec:	f3bf 8f6f 	isb	sy
 80082f0:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 80082f4:	4b11      	ldr	r3, [pc, #68]	@ (800833c <vTaskStartScheduler+0x8c>)
 80082f6:	4a12      	ldr	r2, [pc, #72]	@ (8008340 <vTaskStartScheduler+0x90>)
 80082f8:	681b      	ldr	r3, [r3, #0]
 80082fa:	3358      	adds	r3, #88	@ 0x58
 80082fc:	6013      	str	r3, [r2, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 80082fe:	4b11      	ldr	r3, [pc, #68]	@ (8008344 <vTaskStartScheduler+0x94>)
 8008300:	f04f 32ff 	mov.w	r2, #4294967295
 8008304:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8008306:	4b10      	ldr	r3, [pc, #64]	@ (8008348 <vTaskStartScheduler+0x98>)
 8008308:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800830a:	4b10      	ldr	r3, [pc, #64]	@ (800834c <vTaskStartScheduler+0x9c>)
 800830c:	601c      	str	r4, [r3, #0]
}
 800830e:	b008      	add	sp, #32
 8008310:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8008314:	f7ff b836 	b.w	8007384 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8008318:	3001      	adds	r0, #1
 800831a:	d108      	bne.n	800832e <vTaskStartScheduler+0x7e>
 800831c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008320:	f383 8811 	msr	BASEPRI, r3
 8008324:	f3bf 8f6f 	isb	sy
 8008328:	f3bf 8f4f 	dsb	sy
 800832c:	e7fe      	b.n	800832c <vTaskStartScheduler+0x7c>
}
 800832e:	b008      	add	sp, #32
 8008330:	bd10      	pop	{r4, pc}
 8008332:	bf00      	nop
 8008334:	0801f9d0 	.word	0x0801f9d0
 8008338:	080080c9 	.word	0x080080c9
 800833c:	20011898 	.word	0x20011898
 8008340:	20000110 	.word	0x20000110
 8008344:	200113a4 	.word	0x200113a4
 8008348:	200113b8 	.word	0x200113b8
 800834c:	200113c0 	.word	0x200113c0

08008350 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8008350:	4a02      	ldr	r2, [pc, #8]	@ (800835c <vTaskSuspendAll+0xc>)
 8008352:	6813      	ldr	r3, [r2, #0]
 8008354:	3301      	adds	r3, #1
 8008356:	6013      	str	r3, [r2, #0]
}
 8008358:	4770      	bx	lr
 800835a:	bf00      	nop
 800835c:	200113a0 	.word	0x200113a0

08008360 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8008360:	4b01      	ldr	r3, [pc, #4]	@ (8008368 <xTaskGetTickCount+0x8>)
 8008362:	6818      	ldr	r0, [r3, #0]
}
 8008364:	4770      	bx	lr
 8008366:	bf00      	nop
 8008368:	200113c0 	.word	0x200113c0

0800836c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800836c:	4b3f      	ldr	r3, [pc, #252]	@ (800846c <xTaskIncrementTick+0x100>)
 800836e:	681b      	ldr	r3, [r3, #0]
{
 8008370:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008374:	2b00      	cmp	r3, #0
 8008376:	d172      	bne.n	800845e <xTaskIncrementTick+0xf2>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8008378:	4b3d      	ldr	r3, [pc, #244]	@ (8008470 <xTaskIncrementTick+0x104>)
 800837a:	681c      	ldr	r4, [r3, #0]
 800837c:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 800837e:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8008380:	b9bc      	cbnz	r4, 80083b2 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8008382:	4b3c      	ldr	r3, [pc, #240]	@ (8008474 <xTaskIncrementTick+0x108>)
 8008384:	681a      	ldr	r2, [r3, #0]
 8008386:	6812      	ldr	r2, [r2, #0]
 8008388:	b142      	cbz	r2, 800839c <xTaskIncrementTick+0x30>
 800838a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800838e:	f383 8811 	msr	BASEPRI, r3
 8008392:	f3bf 8f6f 	isb	sy
 8008396:	f3bf 8f4f 	dsb	sy
 800839a:	e7fe      	b.n	800839a <xTaskIncrementTick+0x2e>
 800839c:	4a36      	ldr	r2, [pc, #216]	@ (8008478 <xTaskIncrementTick+0x10c>)
 800839e:	6819      	ldr	r1, [r3, #0]
 80083a0:	6810      	ldr	r0, [r2, #0]
 80083a2:	6018      	str	r0, [r3, #0]
 80083a4:	6011      	str	r1, [r2, #0]
 80083a6:	4a35      	ldr	r2, [pc, #212]	@ (800847c <xTaskIncrementTick+0x110>)
 80083a8:	6813      	ldr	r3, [r2, #0]
 80083aa:	3301      	adds	r3, #1
 80083ac:	6013      	str	r3, [r2, #0]
 80083ae:	f7ff fe5b 	bl	8008068 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 80083b2:	4d33      	ldr	r5, [pc, #204]	@ (8008480 <xTaskIncrementTick+0x114>)
 80083b4:	4e33      	ldr	r6, [pc, #204]	@ (8008484 <xTaskIncrementTick+0x118>)
 80083b6:	682b      	ldr	r3, [r5, #0]
 80083b8:	4f33      	ldr	r7, [pc, #204]	@ (8008488 <xTaskIncrementTick+0x11c>)
 80083ba:	429c      	cmp	r4, r3
BaseType_t xSwitchRequired = pdFALSE;
 80083bc:	f04f 0b00 	mov.w	fp, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 80083c0:	d212      	bcs.n	80083e8 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 80083c2:	683a      	ldr	r2, [r7, #0]
 80083c4:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 80083c6:	2114      	movs	r1, #20
 80083c8:	434a      	muls	r2, r1
 80083ca:	58b2      	ldr	r2, [r6, r2]
				xSwitchRequired = pdTRUE;
 80083cc:	2a02      	cmp	r2, #2
			if( xYieldPending != pdFALSE )
 80083ce:	4a2f      	ldr	r2, [pc, #188]	@ (800848c <xTaskIncrementTick+0x120>)
 80083d0:	6812      	ldr	r2, [r2, #0]
				xSwitchRequired = pdTRUE;
 80083d2:	bf28      	it	cs
 80083d4:	f04f 0b01 	movcs.w	fp, #1
				xSwitchRequired = pdTRUE;
 80083d8:	2a00      	cmp	r2, #0
 80083da:	bf18      	it	ne
 80083dc:	f04f 0b01 	movne.w	fp, #1
}
 80083e0:	4658      	mov	r0, fp
 80083e2:	b003      	add	sp, #12
 80083e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80083e8:	f8df 9088 	ldr.w	r9, [pc, #136]	@ 8008474 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 80083ec:	f8df a0a4 	ldr.w	sl, [pc, #164]	@ 8008494 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80083f0:	f8d9 2000 	ldr.w	r2, [r9]
 80083f4:	6812      	ldr	r2, [r2, #0]
 80083f6:	b91a      	cbnz	r2, 8008400 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80083f8:	f04f 32ff 	mov.w	r2, #4294967295
 80083fc:	602a      	str	r2, [r5, #0]
					break;
 80083fe:	e7e0      	b.n	80083c2 <xTaskIncrementTick+0x56>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008400:	f8d9 2000 	ldr.w	r2, [r9]
 8008404:	68d2      	ldr	r2, [r2, #12]
 8008406:	f8d2 800c 	ldr.w	r8, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800840a:	f8d8 1004 	ldr.w	r1, [r8, #4]
					if( xConstTickCount < xItemValue )
 800840e:	428c      	cmp	r4, r1
 8008410:	d201      	bcs.n	8008416 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8008412:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8008414:	e7d5      	b.n	80083c2 <xTaskIncrementTick+0x56>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008416:	f108 0304 	add.w	r3, r8, #4
 800841a:	4618      	mov	r0, r3
 800841c:	9301      	str	r3, [sp, #4]
 800841e:	f7fe fea9 	bl	8007174 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8008422:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 8008426:	b119      	cbz	r1, 8008430 <xTaskIncrementTick+0xc4>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008428:	f108 0018 	add.w	r0, r8, #24
 800842c:	f7fe fea2 	bl	8007174 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008430:	f8d8 002c 	ldr.w	r0, [r8, #44]	@ 0x2c
 8008434:	f8da 1000 	ldr.w	r1, [sl]
 8008438:	2314      	movs	r3, #20
 800843a:	4288      	cmp	r0, r1
 800843c:	bf88      	it	hi
 800843e:	f8ca 0000 	strhi.w	r0, [sl]
 8008442:	9901      	ldr	r1, [sp, #4]
 8008444:	fb03 6000 	mla	r0, r3, r0, r6
 8008448:	f7fe fe72 	bl	8007130 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800844c:	6838      	ldr	r0, [r7, #0]
 800844e:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 8008452:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
							xSwitchRequired = pdTRUE;
 8008454:	4291      	cmp	r1, r2
 8008456:	bf28      	it	cs
 8008458:	f04f 0b01 	movcs.w	fp, #1
 800845c:	e7c8      	b.n	80083f0 <xTaskIncrementTick+0x84>
		++xPendedTicks;
 800845e:	4a0c      	ldr	r2, [pc, #48]	@ (8008490 <xTaskIncrementTick+0x124>)
 8008460:	6813      	ldr	r3, [r2, #0]
 8008462:	3301      	adds	r3, #1
 8008464:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8008466:	f04f 0b00 	mov.w	fp, #0
 800846a:	e7b9      	b.n	80083e0 <xTaskIncrementTick+0x74>
 800846c:	200113a0 	.word	0x200113a0
 8008470:	200113c0 	.word	0x200113c0
 8008474:	2001140c 	.word	0x2001140c
 8008478:	20011408 	.word	0x20011408
 800847c:	200113ac 	.word	0x200113ac
 8008480:	200113a4 	.word	0x200113a4
 8008484:	20011438 	.word	0x20011438
 8008488:	20011898 	.word	0x20011898
 800848c:	200113b0 	.word	0x200113b0
 8008490:	200113b4 	.word	0x200113b4
 8008494:	200113bc 	.word	0x200113bc

08008498 <xTaskResumeAll>:
{
 8008498:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 800849c:	4c30      	ldr	r4, [pc, #192]	@ (8008560 <xTaskResumeAll+0xc8>)
 800849e:	6823      	ldr	r3, [r4, #0]
 80084a0:	b943      	cbnz	r3, 80084b4 <xTaskResumeAll+0x1c>
 80084a2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80084a6:	f383 8811 	msr	BASEPRI, r3
 80084aa:	f3bf 8f6f 	isb	sy
 80084ae:	f3bf 8f4f 	dsb	sy
 80084b2:	e7fe      	b.n	80084b2 <xTaskResumeAll+0x1a>
	taskENTER_CRITICAL();
 80084b4:	f7fe fed6 	bl	8007264 <vPortEnterCritical>
		--uxSchedulerSuspended;
 80084b8:	6823      	ldr	r3, [r4, #0]
 80084ba:	3b01      	subs	r3, #1
 80084bc:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80084be:	6824      	ldr	r4, [r4, #0]
 80084c0:	b12c      	cbz	r4, 80084ce <xTaskResumeAll+0x36>
BaseType_t xAlreadyYielded = pdFALSE;
 80084c2:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 80084c4:	f7fe feee 	bl	80072a4 <vPortExitCritical>
}
 80084c8:	4620      	mov	r0, r4
 80084ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 80084ce:	4b25      	ldr	r3, [pc, #148]	@ (8008564 <xTaskResumeAll+0xcc>)
 80084d0:	681b      	ldr	r3, [r3, #0]
 80084d2:	2b00      	cmp	r3, #0
 80084d4:	d0f5      	beq.n	80084c2 <xTaskResumeAll+0x2a>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80084d6:	4d24      	ldr	r5, [pc, #144]	@ (8008568 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 80084d8:	4e24      	ldr	r6, [pc, #144]	@ (800856c <xTaskResumeAll+0xd4>)
 80084da:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 800857c <xTaskResumeAll+0xe4>
 80084de:	e01d      	b.n	800851c <xTaskResumeAll+0x84>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80084e0:	68eb      	ldr	r3, [r5, #12]
 80084e2:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80084e4:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80084e6:	f104 0018 	add.w	r0, r4, #24
 80084ea:	f7fe fe43 	bl	8007174 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80084ee:	4638      	mov	r0, r7
 80084f0:	f7fe fe40 	bl	8007174 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 80084f4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80084f6:	6832      	ldr	r2, [r6, #0]
 80084f8:	2014      	movs	r0, #20
 80084fa:	4293      	cmp	r3, r2
 80084fc:	fb00 8003 	mla	r0, r0, r3, r8
 8008500:	4639      	mov	r1, r7
 8008502:	bf88      	it	hi
 8008504:	6033      	strhi	r3, [r6, #0]
 8008506:	f7fe fe13 	bl	8007130 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800850a:	4b19      	ldr	r3, [pc, #100]	@ (8008570 <xTaskResumeAll+0xd8>)
 800850c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800850e:	681b      	ldr	r3, [r3, #0]
 8008510:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008512:	429a      	cmp	r2, r3
 8008514:	d302      	bcc.n	800851c <xTaskResumeAll+0x84>
						xYieldPending = pdTRUE;
 8008516:	4b17      	ldr	r3, [pc, #92]	@ (8008574 <xTaskResumeAll+0xdc>)
 8008518:	2201      	movs	r2, #1
 800851a:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800851c:	682b      	ldr	r3, [r5, #0]
 800851e:	2b00      	cmp	r3, #0
 8008520:	d1de      	bne.n	80084e0 <xTaskResumeAll+0x48>
				if( pxTCB != NULL )
 8008522:	b10c      	cbz	r4, 8008528 <xTaskResumeAll+0x90>
					prvResetNextTaskUnblockTime();
 8008524:	f7ff fda0 	bl	8008068 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8008528:	4d13      	ldr	r5, [pc, #76]	@ (8008578 <xTaskResumeAll+0xe0>)
 800852a:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800852c:	b144      	cbz	r4, 8008540 <xTaskResumeAll+0xa8>
								xYieldPending = pdTRUE;
 800852e:	4e11      	ldr	r6, [pc, #68]	@ (8008574 <xTaskResumeAll+0xdc>)
 8008530:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8008532:	f7ff ff1b 	bl	800836c <xTaskIncrementTick>
 8008536:	b100      	cbz	r0, 800853a <xTaskResumeAll+0xa2>
								xYieldPending = pdTRUE;
 8008538:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800853a:	3c01      	subs	r4, #1
 800853c:	d1f9      	bne.n	8008532 <xTaskResumeAll+0x9a>
						xPendedTicks = 0;
 800853e:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8008540:	4b0c      	ldr	r3, [pc, #48]	@ (8008574 <xTaskResumeAll+0xdc>)
 8008542:	681b      	ldr	r3, [r3, #0]
 8008544:	2b00      	cmp	r3, #0
 8008546:	d0bc      	beq.n	80084c2 <xTaskResumeAll+0x2a>
					taskYIELD_IF_USING_PREEMPTION();
 8008548:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800854c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008550:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008554:	f3bf 8f4f 	dsb	sy
 8008558:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800855c:	2401      	movs	r4, #1
 800855e:	e7b1      	b.n	80084c4 <xTaskResumeAll+0x2c>
 8008560:	200113a0 	.word	0x200113a0
 8008564:	200113c4 	.word	0x200113c4
 8008568:	200113f4 	.word	0x200113f4
 800856c:	200113bc 	.word	0x200113bc
 8008570:	20011898 	.word	0x20011898
 8008574:	200113b0 	.word	0x200113b0
 8008578:	200113b4 	.word	0x200113b4
 800857c:	20011438 	.word	0x20011438

08008580 <vTaskDelay>:
	{
 8008580:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8008582:	b950      	cbnz	r0, 800859a <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8008584:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008588:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800858c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008590:	f3bf 8f4f 	dsb	sy
 8008594:	f3bf 8f6f 	isb	sy
	}
 8008598:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800859a:	4b0a      	ldr	r3, [pc, #40]	@ (80085c4 <vTaskDelay+0x44>)
 800859c:	6819      	ldr	r1, [r3, #0]
 800859e:	b141      	cbz	r1, 80085b2 <vTaskDelay+0x32>
 80085a0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80085a4:	f383 8811 	msr	BASEPRI, r3
 80085a8:	f3bf 8f6f 	isb	sy
 80085ac:	f3bf 8f4f 	dsb	sy
 80085b0:	e7fe      	b.n	80085b0 <vTaskDelay+0x30>
			vTaskSuspendAll();
 80085b2:	f7ff fecd 	bl	8008350 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 80085b6:	f7ff fd1f 	bl	8007ff8 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 80085ba:	f7ff ff6d 	bl	8008498 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 80085be:	2800      	cmp	r0, #0
 80085c0:	d0e0      	beq.n	8008584 <vTaskDelay+0x4>
 80085c2:	e7e9      	b.n	8008598 <vTaskDelay+0x18>
 80085c4:	200113a0 	.word	0x200113a0

080085c8 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 80085c8:	4b19      	ldr	r3, [pc, #100]	@ (8008630 <vTaskSwitchContext+0x68>)
 80085ca:	681a      	ldr	r2, [r3, #0]
 80085cc:	4b19      	ldr	r3, [pc, #100]	@ (8008634 <vTaskSwitchContext+0x6c>)
{
 80085ce:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 80085d0:	b112      	cbz	r2, 80085d8 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 80085d2:	2201      	movs	r2, #1
 80085d4:	601a      	str	r2, [r3, #0]
}
 80085d6:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80085d8:	4d17      	ldr	r5, [pc, #92]	@ (8008638 <vTaskSwitchContext+0x70>)
		xYieldPending = pdFALSE;
 80085da:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80085dc:	682a      	ldr	r2, [r5, #0]
 80085de:	4917      	ldr	r1, [pc, #92]	@ (800863c <vTaskSwitchContext+0x74>)
 80085e0:	2614      	movs	r6, #20
 80085e2:	fb06 f302 	mul.w	r3, r6, r2
 80085e6:	18c8      	adds	r0, r1, r3
 80085e8:	58cc      	ldr	r4, [r1, r3]
 80085ea:	b1ac      	cbz	r4, 8008618 <vTaskSwitchContext+0x50>
 80085ec:	6844      	ldr	r4, [r0, #4]
 80085ee:	3308      	adds	r3, #8
 80085f0:	6864      	ldr	r4, [r4, #4]
 80085f2:	6044      	str	r4, [r0, #4]
 80085f4:	440b      	add	r3, r1
 80085f6:	429c      	cmp	r4, r3
 80085f8:	bf04      	itt	eq
 80085fa:	6863      	ldreq	r3, [r4, #4]
 80085fc:	6043      	streq	r3, [r0, #4]
 80085fe:	2314      	movs	r3, #20
 8008600:	fb03 1102 	mla	r1, r3, r2, r1
 8008604:	684b      	ldr	r3, [r1, #4]
 8008606:	68d9      	ldr	r1, [r3, #12]
 8008608:	4b0d      	ldr	r3, [pc, #52]	@ (8008640 <vTaskSwitchContext+0x78>)
 800860a:	6019      	str	r1, [r3, #0]
 800860c:	602a      	str	r2, [r5, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800860e:	681b      	ldr	r3, [r3, #0]
 8008610:	4a0c      	ldr	r2, [pc, #48]	@ (8008644 <vTaskSwitchContext+0x7c>)
 8008612:	3358      	adds	r3, #88	@ 0x58
 8008614:	6013      	str	r3, [r2, #0]
}
 8008616:	e7de      	b.n	80085d6 <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008618:	b942      	cbnz	r2, 800862c <vTaskSwitchContext+0x64>
 800861a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800861e:	f383 8811 	msr	BASEPRI, r3
 8008622:	f3bf 8f6f 	isb	sy
 8008626:	f3bf 8f4f 	dsb	sy
 800862a:	e7fe      	b.n	800862a <vTaskSwitchContext+0x62>
 800862c:	3a01      	subs	r2, #1
 800862e:	e7d8      	b.n	80085e2 <vTaskSwitchContext+0x1a>
 8008630:	200113a0 	.word	0x200113a0
 8008634:	200113b0 	.word	0x200113b0
 8008638:	200113bc 	.word	0x200113bc
 800863c:	20011438 	.word	0x20011438
 8008640:	20011898 	.word	0x20011898
 8008644:	20000110 	.word	0x20000110

08008648 <vTaskPlaceOnEventList>:
{
 8008648:	b510      	push	{r4, lr}
 800864a:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800864c:	b940      	cbnz	r0, 8008660 <vTaskPlaceOnEventList+0x18>
 800864e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008652:	f383 8811 	msr	BASEPRI, r3
 8008656:	f3bf 8f6f 	isb	sy
 800865a:	f3bf 8f4f 	dsb	sy
 800865e:	e7fe      	b.n	800865e <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008660:	4b05      	ldr	r3, [pc, #20]	@ (8008678 <vTaskPlaceOnEventList+0x30>)
 8008662:	6819      	ldr	r1, [r3, #0]
 8008664:	3118      	adds	r1, #24
 8008666:	f7fe fd6e 	bl	8007146 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800866a:	4620      	mov	r0, r4
 800866c:	2101      	movs	r1, #1
}
 800866e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008672:	f7ff bcc1 	b.w	8007ff8 <prvAddCurrentTaskToDelayedList>
 8008676:	bf00      	nop
 8008678:	20011898 	.word	0x20011898

0800867c <vTaskPlaceOnEventListRestricted>:
	{
 800867c:	b538      	push	{r3, r4, r5, lr}
 800867e:	460d      	mov	r5, r1
 8008680:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8008682:	b940      	cbnz	r0, 8008696 <vTaskPlaceOnEventListRestricted+0x1a>
 8008684:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008688:	f383 8811 	msr	BASEPRI, r3
 800868c:	f3bf 8f6f 	isb	sy
 8008690:	f3bf 8f4f 	dsb	sy
 8008694:	e7fe      	b.n	8008694 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008696:	4b07      	ldr	r3, [pc, #28]	@ (80086b4 <vTaskPlaceOnEventListRestricted+0x38>)
 8008698:	6819      	ldr	r1, [r3, #0]
 800869a:	3118      	adds	r1, #24
 800869c:	f7fe fd48 	bl	8007130 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 80086a0:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 80086a2:	4621      	mov	r1, r4
 80086a4:	bf0c      	ite	eq
 80086a6:	4628      	moveq	r0, r5
 80086a8:	f04f 30ff 	movne.w	r0, #4294967295
	}
 80086ac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 80086b0:	f7ff bca2 	b.w	8007ff8 <prvAddCurrentTaskToDelayedList>
 80086b4:	20011898 	.word	0x20011898

080086b8 <xTaskRemoveFromEventList>:
{
 80086b8:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80086ba:	68c3      	ldr	r3, [r0, #12]
 80086bc:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 80086be:	b944      	cbnz	r4, 80086d2 <xTaskRemoveFromEventList+0x1a>
 80086c0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80086c4:	f383 8811 	msr	BASEPRI, r3
 80086c8:	f3bf 8f6f 	isb	sy
 80086cc:	f3bf 8f4f 	dsb	sy
 80086d0:	e7fe      	b.n	80086d0 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 80086d2:	f104 0518 	add.w	r5, r4, #24
 80086d6:	4628      	mov	r0, r5
 80086d8:	f7fe fd4c 	bl	8007174 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80086dc:	4b10      	ldr	r3, [pc, #64]	@ (8008720 <xTaskRemoveFromEventList+0x68>)
 80086de:	681b      	ldr	r3, [r3, #0]
 80086e0:	b9db      	cbnz	r3, 800871a <xTaskRemoveFromEventList+0x62>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 80086e2:	1d25      	adds	r5, r4, #4
 80086e4:	4628      	mov	r0, r5
 80086e6:	f7fe fd45 	bl	8007174 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 80086ea:	4a0e      	ldr	r2, [pc, #56]	@ (8008724 <xTaskRemoveFromEventList+0x6c>)
 80086ec:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80086ee:	6811      	ldr	r1, [r2, #0]
 80086f0:	428b      	cmp	r3, r1
 80086f2:	bf88      	it	hi
 80086f4:	6013      	strhi	r3, [r2, #0]
 80086f6:	4a0c      	ldr	r2, [pc, #48]	@ (8008728 <xTaskRemoveFromEventList+0x70>)
 80086f8:	2014      	movs	r0, #20
 80086fa:	4629      	mov	r1, r5
 80086fc:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8008700:	f7fe fd16 	bl	8007130 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8008704:	4b09      	ldr	r3, [pc, #36]	@ (800872c <xTaskRemoveFromEventList+0x74>)
 8008706:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8008708:	681b      	ldr	r3, [r3, #0]
 800870a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800870c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800870e:	bf83      	ittte	hi
 8008710:	4b07      	ldrhi	r3, [pc, #28]	@ (8008730 <xTaskRemoveFromEventList+0x78>)
 8008712:	2001      	movhi	r0, #1
 8008714:	6018      	strhi	r0, [r3, #0]
		xReturn = pdFALSE;
 8008716:	2000      	movls	r0, #0
}
 8008718:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800871a:	4806      	ldr	r0, [pc, #24]	@ (8008734 <xTaskRemoveFromEventList+0x7c>)
 800871c:	4629      	mov	r1, r5
 800871e:	e7ef      	b.n	8008700 <xTaskRemoveFromEventList+0x48>
 8008720:	200113a0 	.word	0x200113a0
 8008724:	200113bc 	.word	0x200113bc
 8008728:	20011438 	.word	0x20011438
 800872c:	20011898 	.word	0x20011898
 8008730:	200113b0 	.word	0x200113b0
 8008734:	200113f4 	.word	0x200113f4

08008738 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8008738:	4b03      	ldr	r3, [pc, #12]	@ (8008748 <vTaskInternalSetTimeOutState+0x10>)
 800873a:	681b      	ldr	r3, [r3, #0]
 800873c:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800873e:	4b03      	ldr	r3, [pc, #12]	@ (800874c <vTaskInternalSetTimeOutState+0x14>)
 8008740:	681b      	ldr	r3, [r3, #0]
 8008742:	6043      	str	r3, [r0, #4]
}
 8008744:	4770      	bx	lr
 8008746:	bf00      	nop
 8008748:	200113ac 	.word	0x200113ac
 800874c:	200113c0 	.word	0x200113c0

08008750 <xTaskCheckForTimeOut>:
{
 8008750:	b570      	push	{r4, r5, r6, lr}
 8008752:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8008754:	4605      	mov	r5, r0
 8008756:	b940      	cbnz	r0, 800876a <xTaskCheckForTimeOut+0x1a>
 8008758:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800875c:	f383 8811 	msr	BASEPRI, r3
 8008760:	f3bf 8f6f 	isb	sy
 8008764:	f3bf 8f4f 	dsb	sy
 8008768:	e7fe      	b.n	8008768 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800876a:	b941      	cbnz	r1, 800877e <xTaskCheckForTimeOut+0x2e>
 800876c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008770:	f383 8811 	msr	BASEPRI, r3
 8008774:	f3bf 8f6f 	isb	sy
 8008778:	f3bf 8f4f 	dsb	sy
 800877c:	e7fe      	b.n	800877c <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800877e:	f7fe fd71 	bl	8007264 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8008782:	4b0f      	ldr	r3, [pc, #60]	@ (80087c0 <xTaskCheckForTimeOut+0x70>)
 8008784:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8008786:	6823      	ldr	r3, [r4, #0]
 8008788:	1c5a      	adds	r2, r3, #1
 800878a:	d010      	beq.n	80087ae <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800878c:	480d      	ldr	r0, [pc, #52]	@ (80087c4 <xTaskCheckForTimeOut+0x74>)
 800878e:	682e      	ldr	r6, [r5, #0]
 8008790:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008792:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008794:	4286      	cmp	r6, r0
 8008796:	d001      	beq.n	800879c <xTaskCheckForTimeOut+0x4c>
 8008798:	428a      	cmp	r2, r1
 800879a:	d90f      	bls.n	80087bc <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800879c:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800879e:	4283      	cmp	r3, r0
 80087a0:	d90a      	bls.n	80087b8 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 80087a2:	1a5b      	subs	r3, r3, r1
 80087a4:	4413      	add	r3, r2
 80087a6:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 80087a8:	4628      	mov	r0, r5
 80087aa:	f7ff ffc5 	bl	8008738 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 80087ae:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 80087b0:	f7fe fd78 	bl	80072a4 <vPortExitCritical>
}
 80087b4:	4620      	mov	r0, r4
 80087b6:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 80087b8:	2300      	movs	r3, #0
 80087ba:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 80087bc:	2401      	movs	r4, #1
 80087be:	e7f7      	b.n	80087b0 <xTaskCheckForTimeOut+0x60>
 80087c0:	200113c0 	.word	0x200113c0
 80087c4:	200113ac 	.word	0x200113ac

080087c8 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 80087c8:	4b01      	ldr	r3, [pc, #4]	@ (80087d0 <vTaskMissedYield+0x8>)
 80087ca:	2201      	movs	r2, #1
 80087cc:	601a      	str	r2, [r3, #0]
}
 80087ce:	4770      	bx	lr
 80087d0:	200113b0 	.word	0x200113b0

080087d4 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 80087d4:	4b05      	ldr	r3, [pc, #20]	@ (80087ec <xTaskGetSchedulerState+0x18>)
 80087d6:	681b      	ldr	r3, [r3, #0]
 80087d8:	b133      	cbz	r3, 80087e8 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80087da:	4b05      	ldr	r3, [pc, #20]	@ (80087f0 <xTaskGetSchedulerState+0x1c>)
 80087dc:	6818      	ldr	r0, [r3, #0]
 80087de:	fab0 f080 	clz	r0, r0
 80087e2:	0940      	lsrs	r0, r0, #5
 80087e4:	0040      	lsls	r0, r0, #1
 80087e6:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 80087e8:	2001      	movs	r0, #1
	}
 80087ea:	4770      	bx	lr
 80087ec:	200113b8 	.word	0x200113b8
 80087f0:	200113a0 	.word	0x200113a0

080087f4 <xTaskPriorityInherit>:
	{
 80087f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 80087f6:	4604      	mov	r4, r0
 80087f8:	b338      	cbz	r0, 800884a <xTaskPriorityInherit+0x56>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 80087fa:	4d1a      	ldr	r5, [pc, #104]	@ (8008864 <xTaskPriorityInherit+0x70>)
 80087fc:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80087fe:	682a      	ldr	r2, [r5, #0]
 8008800:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8008802:	4293      	cmp	r3, r2
 8008804:	d226      	bcs.n	8008854 <xTaskPriorityInherit+0x60>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008806:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008808:	4e17      	ldr	r6, [pc, #92]	@ (8008868 <xTaskPriorityInherit+0x74>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800880a:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800880c:	bfa1      	itttt	ge
 800880e:	682a      	ldrge	r2, [r5, #0]
 8008810:	6ad2      	ldrge	r2, [r2, #44]	@ 0x2c
 8008812:	f1c2 0238 	rsbge	r2, r2, #56	@ 0x38
 8008816:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008818:	2214      	movs	r2, #20
 800881a:	fb02 6303 	mla	r3, r2, r3, r6
 800881e:	6942      	ldr	r2, [r0, #20]
 8008820:	429a      	cmp	r2, r3
 8008822:	d113      	bne.n	800884c <xTaskPriorityInherit+0x58>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008824:	1d07      	adds	r7, r0, #4
 8008826:	4638      	mov	r0, r7
 8008828:	f7fe fca4 	bl	8007174 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800882c:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800882e:	4a0f      	ldr	r2, [pc, #60]	@ (800886c <xTaskPriorityInherit+0x78>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008830:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008832:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008834:	62e3      	str	r3, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008836:	2014      	movs	r0, #20
 8008838:	428b      	cmp	r3, r1
 800883a:	fb00 6003 	mla	r0, r0, r3, r6
 800883e:	4639      	mov	r1, r7
 8008840:	bf88      	it	hi
 8008842:	6013      	strhi	r3, [r2, #0]
 8008844:	f7fe fc74 	bl	8007130 <vListInsertEnd>
				xReturn = pdTRUE;
 8008848:	2001      	movs	r0, #1
	}
 800884a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800884c:	682b      	ldr	r3, [r5, #0]
 800884e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008850:	62c3      	str	r3, [r0, #44]	@ 0x2c
 8008852:	e7f9      	b.n	8008848 <xTaskPriorityInherit+0x54>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8008854:	682b      	ldr	r3, [r5, #0]
 8008856:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 8008858:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800885a:	4298      	cmp	r0, r3
 800885c:	bf2c      	ite	cs
 800885e:	2000      	movcs	r0, #0
 8008860:	2001      	movcc	r0, #1
 8008862:	e7f2      	b.n	800884a <xTaskPriorityInherit+0x56>
 8008864:	20011898 	.word	0x20011898
 8008868:	20011438 	.word	0x20011438
 800886c:	200113bc 	.word	0x200113bc

08008870 <xTaskPriorityDisinherit>:
	{
 8008870:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8008872:	b908      	cbnz	r0, 8008878 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 8008874:	2000      	movs	r0, #0
	}
 8008876:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8008878:	4b1b      	ldr	r3, [pc, #108]	@ (80088e8 <xTaskPriorityDisinherit+0x78>)
 800887a:	681c      	ldr	r4, [r3, #0]
 800887c:	4284      	cmp	r4, r0
 800887e:	d008      	beq.n	8008892 <xTaskPriorityDisinherit+0x22>
 8008880:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008884:	f383 8811 	msr	BASEPRI, r3
 8008888:	f3bf 8f6f 	isb	sy
 800888c:	f3bf 8f4f 	dsb	sy
 8008890:	e7fe      	b.n	8008890 <xTaskPriorityDisinherit+0x20>
			configASSERT( pxTCB->uxMutexesHeld );
 8008892:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8008894:	b943      	cbnz	r3, 80088a8 <xTaskPriorityDisinherit+0x38>
 8008896:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800889a:	f383 8811 	msr	BASEPRI, r3
 800889e:	f3bf 8f6f 	isb	sy
 80088a2:	f3bf 8f4f 	dsb	sy
 80088a6:	e7fe      	b.n	80088a6 <xTaskPriorityDisinherit+0x36>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80088a8:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 80088aa:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
 80088ac:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80088ae:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 80088b0:	6523      	str	r3, [r4, #80]	@ 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80088b2:	d0df      	beq.n	8008874 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 80088b4:	2b00      	cmp	r3, #0
 80088b6:	d1dd      	bne.n	8008874 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80088b8:	1d25      	adds	r5, r4, #4
 80088ba:	4628      	mov	r0, r5
 80088bc:	f7fe fc5a 	bl	8007174 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 80088c0:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 80088c2:	62e3      	str	r3, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80088c4:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 80088c8:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 80088ca:	4a08      	ldr	r2, [pc, #32]	@ (80088ec <xTaskPriorityDisinherit+0x7c>)
 80088cc:	6811      	ldr	r1, [r2, #0]
 80088ce:	428b      	cmp	r3, r1
 80088d0:	bf88      	it	hi
 80088d2:	6013      	strhi	r3, [r2, #0]
 80088d4:	4a06      	ldr	r2, [pc, #24]	@ (80088f0 <xTaskPriorityDisinherit+0x80>)
 80088d6:	2014      	movs	r0, #20
 80088d8:	fb00 2003 	mla	r0, r0, r3, r2
 80088dc:	4629      	mov	r1, r5
 80088de:	f7fe fc27 	bl	8007130 <vListInsertEnd>
					xReturn = pdTRUE;
 80088e2:	2001      	movs	r0, #1
		return xReturn;
 80088e4:	e7c7      	b.n	8008876 <xTaskPriorityDisinherit+0x6>
 80088e6:	bf00      	nop
 80088e8:	20011898 	.word	0x20011898
 80088ec:	200113bc 	.word	0x200113bc
 80088f0:	20011438 	.word	0x20011438

080088f4 <vTaskPriorityDisinheritAfterTimeout>:
	{
 80088f4:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 80088f6:	4604      	mov	r4, r0
 80088f8:	2800      	cmp	r0, #0
 80088fa:	d041      	beq.n	8008980 <vTaskPriorityDisinheritAfterTimeout+0x8c>
			configASSERT( pxTCB->uxMutexesHeld );
 80088fc:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 80088fe:	b942      	cbnz	r2, 8008912 <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8008900:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008904:	f383 8811 	msr	BASEPRI, r3
 8008908:	f3bf 8f6f 	isb	sy
 800890c:	f3bf 8f4f 	dsb	sy
 8008910:	e7fe      	b.n	8008910 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8008912:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 8008914:	4299      	cmp	r1, r3
 8008916:	bf38      	it	cc
 8008918:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800891a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800891c:	428b      	cmp	r3, r1
 800891e:	d02f      	beq.n	8008980 <vTaskPriorityDisinheritAfterTimeout+0x8c>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8008920:	2a01      	cmp	r2, #1
 8008922:	d12d      	bne.n	8008980 <vTaskPriorityDisinheritAfterTimeout+0x8c>
					configASSERT( pxTCB != pxCurrentTCB );
 8008924:	4a17      	ldr	r2, [pc, #92]	@ (8008984 <vTaskPriorityDisinheritAfterTimeout+0x90>)
 8008926:	6812      	ldr	r2, [r2, #0]
 8008928:	4282      	cmp	r2, r0
 800892a:	d108      	bne.n	800893e <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800892c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008930:	f383 8811 	msr	BASEPRI, r3
 8008934:	f3bf 8f6f 	isb	sy
 8008938:	f3bf 8f4f 	dsb	sy
 800893c:	e7fe      	b.n	800893c <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800893e:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008940:	4d11      	ldr	r5, [pc, #68]	@ (8008988 <vTaskPriorityDisinheritAfterTimeout+0x94>)
					pxTCB->uxPriority = uxPriorityToUse;
 8008942:	62c1      	str	r1, [r0, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008944:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008946:	f04f 0214 	mov.w	r2, #20
 800894a:	fb02 5303 	mla	r3, r2, r3, r5
 800894e:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008950:	bfa4      	itt	ge
 8008952:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
 8008956:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008958:	429a      	cmp	r2, r3
 800895a:	d111      	bne.n	8008980 <vTaskPriorityDisinheritAfterTimeout+0x8c>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800895c:	1d06      	adds	r6, r0, #4
 800895e:	4630      	mov	r0, r6
 8008960:	f7fe fc08 	bl	8007174 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8008964:	4a09      	ldr	r2, [pc, #36]	@ (800898c <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8008966:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008968:	6811      	ldr	r1, [r2, #0]
 800896a:	2014      	movs	r0, #20
 800896c:	428b      	cmp	r3, r1
 800896e:	fb00 5003 	mla	r0, r0, r3, r5
 8008972:	4631      	mov	r1, r6
	}
 8008974:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 8008978:	bf88      	it	hi
 800897a:	6013      	strhi	r3, [r2, #0]
 800897c:	f7fe bbd8 	b.w	8007130 <vListInsertEnd>
	}
 8008980:	bd70      	pop	{r4, r5, r6, pc}
 8008982:	bf00      	nop
 8008984:	20011898 	.word	0x20011898
 8008988:	20011438 	.word	0x20011438
 800898c:	200113bc 	.word	0x200113bc

08008990 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8008990:	4b04      	ldr	r3, [pc, #16]	@ (80089a4 <pvTaskIncrementMutexHeldCount+0x14>)
 8008992:	681a      	ldr	r2, [r3, #0]
 8008994:	b11a      	cbz	r2, 800899e <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8008996:	6819      	ldr	r1, [r3, #0]
 8008998:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 800899a:	3201      	adds	r2, #1
 800899c:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
 800899e:	6818      	ldr	r0, [r3, #0]
	}
 80089a0:	4770      	bx	lr
 80089a2:	bf00      	nop
 80089a4:	20011898 	.word	0x20011898

080089a8 <prvInsertTimerInActiveList>:
BaseType_t xProcessTimerNow = pdFALSE;

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

	if( xNextExpiryTime <= xTimeNow )
 80089a8:	4291      	cmp	r1, r2
{
 80089aa:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 80089ac:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80089ae:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 80089b0:	d80a      	bhi.n	80089c8 <prvInsertTimerInActiveList+0x20>
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80089b2:	1ad2      	subs	r2, r2, r3
 80089b4:	6983      	ldr	r3, [r0, #24]
 80089b6:	429a      	cmp	r2, r3
 80089b8:	d20d      	bcs.n	80089d6 <prvInsertTimerInActiveList+0x2e>
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 80089ba:	4b08      	ldr	r3, [pc, #32]	@ (80089dc <prvInsertTimerInActiveList+0x34>)
 80089bc:	1d01      	adds	r1, r0, #4
			its expiry time and should be processed immediately. */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80089be:	6818      	ldr	r0, [r3, #0]
 80089c0:	f7fe fbc1 	bl	8007146 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 80089c4:	2000      	movs	r0, #0
		}
	}

	return xProcessTimerNow;
}
 80089c6:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 80089c8:	429a      	cmp	r2, r3
 80089ca:	d201      	bcs.n	80089d0 <prvInsertTimerInActiveList+0x28>
 80089cc:	4299      	cmp	r1, r3
 80089ce:	d202      	bcs.n	80089d6 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80089d0:	4b03      	ldr	r3, [pc, #12]	@ (80089e0 <prvInsertTimerInActiveList+0x38>)
 80089d2:	1d01      	adds	r1, r0, #4
 80089d4:	e7f3      	b.n	80089be <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 80089d6:	2001      	movs	r0, #1
	return xProcessTimerNow;
 80089d8:	e7f5      	b.n	80089c6 <prvInsertTimerInActiveList+0x1e>
 80089da:	bf00      	nop
 80089dc:	20011998 	.word	0x20011998
 80089e0:	2001199c 	.word	0x2001199c

080089e4 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 80089e4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 80089e6:	4c11      	ldr	r4, [pc, #68]	@ (8008a2c <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 80089e8:	f7fe fc3c 	bl	8007264 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 80089ec:	6825      	ldr	r5, [r4, #0]
 80089ee:	b9bd      	cbnz	r5, 8008a20 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 80089f0:	4f0f      	ldr	r7, [pc, #60]	@ (8008a30 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 80089f2:	4e10      	ldr	r6, [pc, #64]	@ (8008a34 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 80089f4:	4638      	mov	r0, r7
 80089f6:	f7fe fb8d 	bl	8007114 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 80089fa:	4630      	mov	r0, r6
 80089fc:	f7fe fb8a 	bl	8007114 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8008a00:	4b0d      	ldr	r3, [pc, #52]	@ (8008a38 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008a02:	4a0e      	ldr	r2, [pc, #56]	@ (8008a3c <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8008a04:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 8008a06:	4b0e      	ldr	r3, [pc, #56]	@ (8008a40 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008a08:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8008a0a:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008a0c:	200a      	movs	r0, #10
 8008a0e:	4b0d      	ldr	r3, [pc, #52]	@ (8008a44 <prvCheckForValidListAndQueue+0x60>)
 8008a10:	9500      	str	r5, [sp, #0]
 8008a12:	f7fe fe32 	bl	800767a <xQueueGenericCreateStatic>
 8008a16:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8008a18:	b110      	cbz	r0, 8008a20 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8008a1a:	490b      	ldr	r1, [pc, #44]	@ (8008a48 <prvCheckForValidListAndQueue+0x64>)
 8008a1c:	f7ff fa0a 	bl	8007e34 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8008a20:	b003      	add	sp, #12
 8008a22:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8008a26:	f7fe bc3d 	b.w	80072a4 <vPortExitCritical>
 8008a2a:	bf00      	nop
 8008a2c:	20011994 	.word	0x20011994
 8008a30:	200119b4 	.word	0x200119b4
 8008a34:	200119a0 	.word	0x200119a0
 8008a38:	2001199c 	.word	0x2001199c
 8008a3c:	200118ec 	.word	0x200118ec
 8008a40:	20011998 	.word	0x20011998
 8008a44:	2001189c 	.word	0x2001189c
 8008a48:	0801f9d5 	.word	0x0801f9d5

08008a4c <xTimerCreateTimerTask>:
{
 8008a4c:	b510      	push	{r4, lr}
 8008a4e:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8008a50:	f7ff ffc8 	bl	80089e4 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8008a54:	4b12      	ldr	r3, [pc, #72]	@ (8008aa0 <xTimerCreateTimerTask+0x54>)
 8008a56:	681b      	ldr	r3, [r3, #0]
 8008a58:	b1b3      	cbz	r3, 8008a88 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8008a5a:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8008a5c:	aa07      	add	r2, sp, #28
 8008a5e:	a906      	add	r1, sp, #24
 8008a60:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8008a62:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8008a66:	f7fe fa4d 	bl	8006f04 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8008a6a:	9b05      	ldr	r3, [sp, #20]
 8008a6c:	9302      	str	r3, [sp, #8]
 8008a6e:	9b06      	ldr	r3, [sp, #24]
 8008a70:	9301      	str	r3, [sp, #4]
 8008a72:	2302      	movs	r3, #2
 8008a74:	9300      	str	r3, [sp, #0]
 8008a76:	9a07      	ldr	r2, [sp, #28]
 8008a78:	490a      	ldr	r1, [pc, #40]	@ (8008aa4 <xTimerCreateTimerTask+0x58>)
 8008a7a:	480b      	ldr	r0, [pc, #44]	@ (8008aa8 <xTimerCreateTimerTask+0x5c>)
 8008a7c:	4623      	mov	r3, r4
 8008a7e:	f7ff fbb1 	bl	80081e4 <xTaskCreateStatic>
 8008a82:	4b0a      	ldr	r3, [pc, #40]	@ (8008aac <xTimerCreateTimerTask+0x60>)
 8008a84:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8008a86:	b940      	cbnz	r0, 8008a9a <xTimerCreateTimerTask+0x4e>
 8008a88:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a8c:	f383 8811 	msr	BASEPRI, r3
 8008a90:	f3bf 8f6f 	isb	sy
 8008a94:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8008a98:	e7fe      	b.n	8008a98 <xTimerCreateTimerTask+0x4c>
}
 8008a9a:	2001      	movs	r0, #1
 8008a9c:	b008      	add	sp, #32
 8008a9e:	bd10      	pop	{r4, pc}
 8008aa0:	20011994 	.word	0x20011994
 8008aa4:	0801f9da 	.word	0x0801f9da
 8008aa8:	08008bad 	.word	0x08008bad
 8008aac:	20011990 	.word	0x20011990

08008ab0 <xTimerGenericCommand>:
{
 8008ab0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8008ab2:	4616      	mov	r6, r2
	configASSERT( xTimer );
 8008ab4:	4604      	mov	r4, r0
{
 8008ab6:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8008ab8:	b940      	cbnz	r0, 8008acc <xTimerGenericCommand+0x1c>
 8008aba:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008abe:	f383 8811 	msr	BASEPRI, r3
 8008ac2:	f3bf 8f6f 	isb	sy
 8008ac6:	f3bf 8f4f 	dsb	sy
 8008aca:	e7fe      	b.n	8008aca <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8008acc:	4d0d      	ldr	r5, [pc, #52]	@ (8008b04 <xTimerGenericCommand+0x54>)
 8008ace:	6828      	ldr	r0, [r5, #0]
 8008ad0:	b180      	cbz	r0, 8008af4 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8008ad2:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8008ad4:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8008ad8:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8008ada:	dc0d      	bgt.n	8008af8 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8008adc:	f7ff fe7a 	bl	80087d4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8008ae0:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8008ae2:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8008ae4:	bf08      	it	eq
 8008ae6:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8008ae8:	6828      	ldr	r0, [r5, #0]
 8008aea:	bf18      	it	ne
 8008aec:	461a      	movne	r2, r3
 8008aee:	4669      	mov	r1, sp
 8008af0:	f7fe fe78 	bl	80077e4 <xQueueGenericSend>
}
 8008af4:	b004      	add	sp, #16
 8008af6:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8008af8:	2300      	movs	r3, #0
 8008afa:	4669      	mov	r1, sp
 8008afc:	f7fe ff24 	bl	8007948 <xQueueGenericSendFromISR>
 8008b00:	e7f8      	b.n	8008af4 <xTimerGenericCommand+0x44>
 8008b02:	bf00      	nop
 8008b04:	20011994 	.word	0x20011994

08008b08 <prvSampleTimeNow>:
{
 8008b08:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 8008b0c:	f8df 8098 	ldr.w	r8, [pc, #152]	@ 8008ba8 <prvSampleTimeNow+0xa0>
{
 8008b10:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 8008b12:	f7ff fc25 	bl	8008360 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8008b16:	f8d8 3000 	ldr.w	r3, [r8]
 8008b1a:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 8008b1c:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8008b1e:	d909      	bls.n	8008b34 <prvSampleTimeNow+0x2c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8008b20:	4f1f      	ldr	r7, [pc, #124]	@ (8008ba0 <prvSampleTimeNow+0x98>)
 8008b22:	683b      	ldr	r3, [r7, #0]
 8008b24:	681a      	ldr	r2, [r3, #0]
 8008b26:	b96a      	cbnz	r2, 8008b44 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 8008b28:	4a1e      	ldr	r2, [pc, #120]	@ (8008ba4 <prvSampleTimeNow+0x9c>)
 8008b2a:	6811      	ldr	r1, [r2, #0]
 8008b2c:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 8008b2e:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 8008b30:	2301      	movs	r3, #1
 8008b32:	e000      	b.n	8008b36 <prvSampleTimeNow+0x2e>
 8008b34:	2300      	movs	r3, #0
}
 8008b36:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 8008b38:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 8008b3a:	f8c8 5000 	str.w	r5, [r8]
}
 8008b3e:	b002      	add	sp, #8
 8008b40:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008b44:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008b46:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008b48:	f8d3 9000 	ldr.w	r9, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008b4c:	f104 0a04 	add.w	sl, r4, #4
 8008b50:	4650      	mov	r0, sl
 8008b52:	f7fe fb0f 	bl	8007174 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008b56:	6a23      	ldr	r3, [r4, #32]
 8008b58:	4620      	mov	r0, r4
 8008b5a:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008b5c:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8008b60:	075b      	lsls	r3, r3, #29
 8008b62:	d5de      	bpl.n	8008b22 <prvSampleTimeNow+0x1a>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8008b64:	69a3      	ldr	r3, [r4, #24]
 8008b66:	444b      	add	r3, r9
			if( xReloadTime > xNextExpireTime )
 8008b68:	4599      	cmp	r9, r3
 8008b6a:	d206      	bcs.n	8008b7a <prvSampleTimeNow+0x72>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008b6c:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 8008b6e:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8008b70:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008b72:	4651      	mov	r1, sl
 8008b74:	f7fe fae7 	bl	8007146 <vListInsert>
 8008b78:	e7d3      	b.n	8008b22 <prvSampleTimeNow+0x1a>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008b7a:	2300      	movs	r3, #0
 8008b7c:	9300      	str	r3, [sp, #0]
 8008b7e:	464a      	mov	r2, r9
 8008b80:	4619      	mov	r1, r3
 8008b82:	4620      	mov	r0, r4
 8008b84:	f7ff ff94 	bl	8008ab0 <xTimerGenericCommand>
				configASSERT( xResult );
 8008b88:	2800      	cmp	r0, #0
 8008b8a:	d1ca      	bne.n	8008b22 <prvSampleTimeNow+0x1a>
 8008b8c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b90:	f383 8811 	msr	BASEPRI, r3
 8008b94:	f3bf 8f6f 	isb	sy
 8008b98:	f3bf 8f4f 	dsb	sy
 8008b9c:	e7fe      	b.n	8008b9c <prvSampleTimeNow+0x94>
 8008b9e:	bf00      	nop
 8008ba0:	2001199c 	.word	0x2001199c
 8008ba4:	20011998 	.word	0x20011998
 8008ba8:	2001198c 	.word	0x2001198c

08008bac <prvTimerTask>:
{
 8008bac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008bb0:	4d6e      	ldr	r5, [pc, #440]	@ (8008d6c <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8008bb2:	4e6f      	ldr	r6, [pc, #444]	@ (8008d70 <prvTimerTask+0x1c4>)
{
 8008bb4:	b089      	sub	sp, #36	@ 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008bb6:	682b      	ldr	r3, [r5, #0]
 8008bb8:	f8d3 8000 	ldr.w	r8, [r3]
 8008bbc:	f1b8 0f00 	cmp.w	r8, #0
 8008bc0:	d035      	beq.n	8008c2e <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008bc2:	68db      	ldr	r3, [r3, #12]
 8008bc4:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008bc8:	2400      	movs	r4, #0
	vTaskSuspendAll();
 8008bca:	f7ff fbc1 	bl	8008350 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8008bce:	a804      	add	r0, sp, #16
 8008bd0:	f7ff ff9a 	bl	8008b08 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 8008bd4:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8008bd6:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 8008bd8:	2b00      	cmp	r3, #0
 8008bda:	d169      	bne.n	8008cb0 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8008bdc:	2c00      	cmp	r4, #0
 8008bde:	d14c      	bne.n	8008c7a <prvTimerTask+0xce>
 8008be0:	4540      	cmp	r0, r8
 8008be2:	d350      	bcc.n	8008c86 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 8008be4:	f7ff fc58 	bl	8008498 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008be8:	682b      	ldr	r3, [r5, #0]
 8008bea:	68db      	ldr	r3, [r3, #12]
 8008bec:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008bee:	1d38      	adds	r0, r7, #4
 8008bf0:	f7fe fac0 	bl	8007174 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008bf4:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8008bf8:	0758      	lsls	r0, r3, #29
 8008bfa:	d51a      	bpl.n	8008c32 <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8008bfc:	69b9      	ldr	r1, [r7, #24]
 8008bfe:	4643      	mov	r3, r8
 8008c00:	464a      	mov	r2, r9
 8008c02:	4441      	add	r1, r8
 8008c04:	4638      	mov	r0, r7
 8008c06:	f7ff fecf 	bl	80089a8 <prvInsertTimerInActiveList>
 8008c0a:	b1b0      	cbz	r0, 8008c3a <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008c0c:	9400      	str	r4, [sp, #0]
 8008c0e:	4623      	mov	r3, r4
 8008c10:	4642      	mov	r2, r8
 8008c12:	4621      	mov	r1, r4
 8008c14:	4638      	mov	r0, r7
 8008c16:	f7ff ff4b 	bl	8008ab0 <xTimerGenericCommand>
			configASSERT( xResult );
 8008c1a:	b970      	cbnz	r0, 8008c3a <prvTimerTask+0x8e>
 8008c1c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c20:	f383 8811 	msr	BASEPRI, r3
 8008c24:	f3bf 8f6f 	isb	sy
 8008c28:	f3bf 8f4f 	dsb	sy
 8008c2c:	e7fe      	b.n	8008c2c <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008c2e:	2401      	movs	r4, #1
 8008c30:	e7cb      	b.n	8008bca <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008c32:	f023 0301 	bic.w	r3, r3, #1
 8008c36:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008c3a:	6a3b      	ldr	r3, [r7, #32]
 8008c3c:	4638      	mov	r0, r7
 8008c3e:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8008c40:	6830      	ldr	r0, [r6, #0]
 8008c42:	2200      	movs	r2, #0
 8008c44:	a904      	add	r1, sp, #16
 8008c46:	f7fe ff2d 	bl	8007aa4 <xQueueReceive>
 8008c4a:	2800      	cmp	r0, #0
 8008c4c:	d0b3      	beq.n	8008bb6 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8008c4e:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8008c50:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8008c52:	2b00      	cmp	r3, #0
 8008c54:	db2f      	blt.n	8008cb6 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8008c56:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8008c58:	6963      	ldr	r3, [r4, #20]
 8008c5a:	2b00      	cmp	r3, #0
 8008c5c:	d132      	bne.n	8008cc4 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8008c5e:	a803      	add	r0, sp, #12
 8008c60:	f7ff ff52 	bl	8008b08 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 8008c64:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8008c66:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 8008c68:	2b09      	cmp	r3, #9
 8008c6a:	d8e9      	bhi.n	8008c40 <prvTimerTask+0x94>
 8008c6c:	e8df f003 	tbb	[pc, r3]
 8008c70:	572e2e2e 	.word	0x572e2e2e
 8008c74:	2e2e765e 	.word	0x2e2e765e
 8008c78:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8008c7a:	4b3e      	ldr	r3, [pc, #248]	@ (8008d74 <prvTimerTask+0x1c8>)
 8008c7c:	681b      	ldr	r3, [r3, #0]
 8008c7e:	681c      	ldr	r4, [r3, #0]
 8008c80:	fab4 f484 	clz	r4, r4
 8008c84:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8008c86:	6830      	ldr	r0, [r6, #0]
 8008c88:	4622      	mov	r2, r4
 8008c8a:	eba8 0109 	sub.w	r1, r8, r9
 8008c8e:	f7ff f910 	bl	8007eb2 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8008c92:	f7ff fc01 	bl	8008498 <xTaskResumeAll>
 8008c96:	2800      	cmp	r0, #0
 8008c98:	d1d2      	bne.n	8008c40 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 8008c9a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008c9e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008ca2:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008ca6:	f3bf 8f4f 	dsb	sy
 8008caa:	f3bf 8f6f 	isb	sy
 8008cae:	e7c7      	b.n	8008c40 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 8008cb0:	f7ff fbf2 	bl	8008498 <xTaskResumeAll>
}
 8008cb4:	e7c4      	b.n	8008c40 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8008cb6:	9b05      	ldr	r3, [sp, #20]
 8008cb8:	9907      	ldr	r1, [sp, #28]
 8008cba:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8008cbc:	9b04      	ldr	r3, [sp, #16]
 8008cbe:	2b00      	cmp	r3, #0
 8008cc0:	dbbe      	blt.n	8008c40 <prvTimerTask+0x94>
 8008cc2:	e7c8      	b.n	8008c56 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008cc4:	1d20      	adds	r0, r4, #4
 8008cc6:	f7fe fa55 	bl	8007174 <uxListRemove>
 8008cca:	e7c8      	b.n	8008c5e <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008ccc:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8008cd0:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008cd2:	f043 0301 	orr.w	r3, r3, #1
 8008cd6:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8008cda:	9b05      	ldr	r3, [sp, #20]
 8008cdc:	4620      	mov	r0, r4
 8008cde:	4419      	add	r1, r3
 8008ce0:	f7ff fe62 	bl	80089a8 <prvInsertTimerInActiveList>
 8008ce4:	2800      	cmp	r0, #0
 8008ce6:	d0ab      	beq.n	8008c40 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008ce8:	6a23      	ldr	r3, [r4, #32]
 8008cea:	4620      	mov	r0, r4
 8008cec:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008cee:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8008cf2:	0759      	lsls	r1, r3, #29
 8008cf4:	d5a4      	bpl.n	8008c40 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8008cf6:	69a2      	ldr	r2, [r4, #24]
 8008cf8:	9905      	ldr	r1, [sp, #20]
 8008cfa:	2300      	movs	r3, #0
 8008cfc:	440a      	add	r2, r1
 8008cfe:	9300      	str	r3, [sp, #0]
 8008d00:	4619      	mov	r1, r3
 8008d02:	4620      	mov	r0, r4
 8008d04:	f7ff fed4 	bl	8008ab0 <xTimerGenericCommand>
							configASSERT( xResult );
 8008d08:	2800      	cmp	r0, #0
 8008d0a:	d199      	bne.n	8008c40 <prvTimerTask+0x94>
 8008d0c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d10:	f383 8811 	msr	BASEPRI, r3
 8008d14:	f3bf 8f6f 	isb	sy
 8008d18:	f3bf 8f4f 	dsb	sy
 8008d1c:	e7fe      	b.n	8008d1c <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008d1e:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008d22:	f023 0301 	bic.w	r3, r3, #1
 8008d26:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 8008d2a:	e789      	b.n	8008c40 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008d2c:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8008d30:	f043 0301 	orr.w	r3, r3, #1
 8008d34:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8008d38:	9905      	ldr	r1, [sp, #20]
 8008d3a:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8008d3c:	b941      	cbnz	r1, 8008d50 <prvTimerTask+0x1a4>
 8008d3e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d42:	f383 8811 	msr	BASEPRI, r3
 8008d46:	f3bf 8f6f 	isb	sy
 8008d4a:	f3bf 8f4f 	dsb	sy
 8008d4e:	e7fe      	b.n	8008d4e <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 8008d50:	4603      	mov	r3, r0
 8008d52:	4401      	add	r1, r0
 8008d54:	4620      	mov	r0, r4
 8008d56:	f7ff fe27 	bl	80089a8 <prvInsertTimerInActiveList>
					break;
 8008d5a:	e771      	b.n	8008c40 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8008d5c:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8008d60:	079a      	lsls	r2, r3, #30
 8008d62:	d4de      	bmi.n	8008d22 <prvTimerTask+0x176>
							vPortFree( pxTimer );
 8008d64:	4620      	mov	r0, r4
 8008d66:	f7fe f997 	bl	8007098 <vPortFree>
 8008d6a:	e769      	b.n	8008c40 <prvTimerTask+0x94>
 8008d6c:	2001199c 	.word	0x2001199c
 8008d70:	20011994 	.word	0x20011994
 8008d74:	20011998 	.word	0x20011998

08008d78 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8008d78:	8880      	ldrh	r0, [r0, #4]
 8008d7a:	4770      	bx	lr

08008d7c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8008d7c:	b570      	push	{r4, r5, r6, lr}
 8008d7e:	6803      	ldr	r3, [r0, #0]
 8008d80:	4605      	mov	r5, r0
 8008d82:	460c      	mov	r4, r1
 8008d84:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8008d86:	2100      	movs	r1, #0
 8008d88:	4798      	blx	r3
 8008d8a:	682b      	ldr	r3, [r5, #0]
 8008d8c:	4606      	mov	r6, r0
 8008d8e:	6a1b      	ldr	r3, [r3, #32]
 8008d90:	4628      	mov	r0, r5
 8008d92:	4798      	blx	r3
 8008d94:	1ba4      	subs	r4, r4, r6
 8008d96:	b2a4      	uxth	r4, r4
 8008d98:	fbb4 f0f0 	udiv	r0, r4, r0
 8008d9c:	bd70      	pop	{r4, r5, r6, pc}

08008d9e <_ZN8touchgfx17AbstractPartition5clearEv>:
 8008d9e:	2300      	movs	r3, #0
 8008da0:	8083      	strh	r3, [r0, #4]
 8008da2:	4770      	bx	lr

08008da4 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8008da4:	b510      	push	{r4, lr}
 8008da6:	6803      	ldr	r3, [r0, #0]
 8008da8:	8881      	ldrh	r1, [r0, #4]
 8008daa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8008dac:	4604      	mov	r4, r0
 8008dae:	4798      	blx	r3
 8008db0:	88a3      	ldrh	r3, [r4, #4]
 8008db2:	3301      	adds	r3, #1
 8008db4:	80a3      	strh	r3, [r4, #4]
 8008db6:	bd10      	pop	{r4, pc}

08008db8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8008db8:	6803      	ldr	r3, [r0, #0]
 8008dba:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8008dbc:	4718      	bx	r3

08008dbe <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8008dbe:	4770      	bx	lr

08008dc0 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8008dc0:	4a02      	ldr	r2, [pc, #8]	@ (8008dcc <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8008dc2:	6002      	str	r2, [r0, #0]
 8008dc4:	2200      	movs	r2, #0
 8008dc6:	8082      	strh	r2, [r0, #4]
 8008dc8:	4770      	bx	lr
 8008dca:	bf00      	nop
 8008dcc:	0801f9ec 	.word	0x0801f9ec

08008dd0 <_ZN8touchgfx9Container13getFirstChildEv>:
 8008dd0:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8008dd2:	4770      	bx	lr

08008dd4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8008dd4:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8008dd6:	2000      	movs	r0, #0
 8008dd8:	b12b      	cbz	r3, 8008de6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8008dda:	b920      	cbnz	r0, 8008de6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8008ddc:	1a5a      	subs	r2, r3, r1
 8008dde:	4250      	negs	r0, r2
 8008de0:	4150      	adcs	r0, r2
 8008de2:	699b      	ldr	r3, [r3, #24]
 8008de4:	e7f8      	b.n	8008dd8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8008de6:	4770      	bx	lr

08008de8 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8008de8:	2300      	movs	r3, #0
 8008dea:	6148      	str	r0, [r1, #20]
 8008dec:	618b      	str	r3, [r1, #24]
 8008dee:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8008df0:	b913      	cbnz	r3, 8008df8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 8008df2:	6281      	str	r1, [r0, #40]	@ 0x28
 8008df4:	4770      	bx	lr
 8008df6:	4613      	mov	r3, r2
 8008df8:	699a      	ldr	r2, [r3, #24]
 8008dfa:	2a00      	cmp	r2, #0
 8008dfc:	d1fb      	bne.n	8008df6 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8008dfe:	6199      	str	r1, [r3, #24]
 8008e00:	4770      	bx	lr

08008e02 <_ZN8touchgfx9Container9removeAllEv>:
 8008e02:	2200      	movs	r2, #0
 8008e04:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8008e06:	b123      	cbz	r3, 8008e12 <_ZN8touchgfx9Container9removeAllEv+0x10>
 8008e08:	6999      	ldr	r1, [r3, #24]
 8008e0a:	6281      	str	r1, [r0, #40]	@ 0x28
 8008e0c:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8008e10:	e7f8      	b.n	8008e04 <_ZN8touchgfx9Container9removeAllEv+0x2>
 8008e12:	4770      	bx	lr

08008e14 <_ZN8touchgfx9Container6unlinkEv>:
 8008e14:	2300      	movs	r3, #0
 8008e16:	6283      	str	r3, [r0, #40]	@ 0x28
 8008e18:	4770      	bx	lr

08008e1a <_ZNK8touchgfx9Container12getSolidRectEv>:
 8008e1a:	2200      	movs	r2, #0
 8008e1c:	8002      	strh	r2, [r0, #0]
 8008e1e:	8042      	strh	r2, [r0, #2]
 8008e20:	8082      	strh	r2, [r0, #4]
 8008e22:	80c2      	strh	r2, [r0, #6]
 8008e24:	4770      	bx	lr

08008e26 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8008e26:	b570      	push	{r4, r5, r6, lr}
 8008e28:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8008e2a:	460d      	mov	r5, r1
 8008e2c:	4616      	mov	r6, r2
 8008e2e:	b13c      	cbz	r4, 8008e40 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8008e30:	6823      	ldr	r3, [r4, #0]
 8008e32:	4620      	mov	r0, r4
 8008e34:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8008e36:	4632      	mov	r2, r6
 8008e38:	4629      	mov	r1, r5
 8008e3a:	4798      	blx	r3
 8008e3c:	69a4      	ldr	r4, [r4, #24]
 8008e3e:	e7f6      	b.n	8008e2e <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8008e40:	bd70      	pop	{r4, r5, r6, pc}

08008e42 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8008e42:	b538      	push	{r3, r4, r5, lr}
 8008e44:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8008e46:	460d      	mov	r5, r1
 8008e48:	b134      	cbz	r4, 8008e58 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8008e4a:	682b      	ldr	r3, [r5, #0]
 8008e4c:	4621      	mov	r1, r4
 8008e4e:	689b      	ldr	r3, [r3, #8]
 8008e50:	4628      	mov	r0, r5
 8008e52:	4798      	blx	r3
 8008e54:	69a4      	ldr	r4, [r4, #24]
 8008e56:	e7f7      	b.n	8008e48 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8008e58:	bd38      	pop	{r3, r4, r5, pc}

08008e5a <_ZN8touchgfx9ContainerD1Ev>:
 8008e5a:	4770      	bx	lr

08008e5c <_ZN8touchgfx9ContainerD0Ev>:
 8008e5c:	b510      	push	{r4, lr}
 8008e5e:	212c      	movs	r1, #44	@ 0x2c
 8008e60:	4604      	mov	r4, r0
 8008e62:	f014 f86f 	bl	801cf44 <_ZdlPvj>
 8008e66:	4620      	mov	r0, r4
 8008e68:	bd10      	pop	{r4, pc}

08008e6a <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8008e6a:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8008e6c:	b19b      	cbz	r3, 8008e96 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8008e6e:	428b      	cmp	r3, r1
 8008e70:	d109      	bne.n	8008e86 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8008e72:	699a      	ldr	r2, [r3, #24]
 8008e74:	2100      	movs	r1, #0
 8008e76:	6159      	str	r1, [r3, #20]
 8008e78:	6282      	str	r2, [r0, #40]	@ 0x28
 8008e7a:	b902      	cbnz	r2, 8008e7e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8008e7c:	4770      	bx	lr
 8008e7e:	6199      	str	r1, [r3, #24]
 8008e80:	4770      	bx	lr
 8008e82:	4613      	mov	r3, r2
 8008e84:	b13a      	cbz	r2, 8008e96 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8008e86:	699a      	ldr	r2, [r3, #24]
 8008e88:	428a      	cmp	r2, r1
 8008e8a:	d1fa      	bne.n	8008e82 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8008e8c:	698a      	ldr	r2, [r1, #24]
 8008e8e:	619a      	str	r2, [r3, #24]
 8008e90:	2300      	movs	r3, #0
 8008e92:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8008e96:	4770      	bx	lr

08008e98 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8008e98:	b410      	push	{r4}
 8008e9a:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8008e9c:	4604      	mov	r4, r0
 8008e9e:	b92b      	cbnz	r3, 8008eac <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8008ea0:	6803      	ldr	r3, [r0, #0]
 8008ea2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008ea6:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8008ea8:	4611      	mov	r1, r2
 8008eaa:	4718      	bx	r3
 8008eac:	b941      	cbnz	r1, 8008ec0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8008eae:	6193      	str	r3, [r2, #24]
 8008eb0:	6282      	str	r2, [r0, #40]	@ 0x28
 8008eb2:	6154      	str	r4, [r2, #20]
 8008eb4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008eb8:	4770      	bx	lr
 8008eba:	4603      	mov	r3, r0
 8008ebc:	2800      	cmp	r0, #0
 8008ebe:	d0f9      	beq.n	8008eb4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8008ec0:	4299      	cmp	r1, r3
 8008ec2:	6998      	ldr	r0, [r3, #24]
 8008ec4:	d1f9      	bne.n	8008eba <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8008ec6:	6190      	str	r0, [r2, #24]
 8008ec8:	618a      	str	r2, [r1, #24]
 8008eca:	e7f2      	b.n	8008eb2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08008ecc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8008ecc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008ed0:	461f      	mov	r7, r3
 8008ed2:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 8008ed6:	460d      	mov	r5, r1
 8008ed8:	4616      	mov	r6, r2
 8008eda:	b103      	cbz	r3, 8008ede <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8008edc:	6038      	str	r0, [r7, #0]
 8008ede:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8008ee0:	b314      	cbz	r4, 8008f28 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8008ee2:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8008ee6:	b1eb      	cbz	r3, 8008f24 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008ee8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8008eec:	428d      	cmp	r5, r1
 8008eee:	db19      	blt.n	8008f24 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008ef0:	8923      	ldrh	r3, [r4, #8]
 8008ef2:	b289      	uxth	r1, r1
 8008ef4:	440b      	add	r3, r1
 8008ef6:	b21b      	sxth	r3, r3
 8008ef8:	429d      	cmp	r5, r3
 8008efa:	da13      	bge.n	8008f24 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008efc:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8008f00:	4296      	cmp	r6, r2
 8008f02:	db0f      	blt.n	8008f24 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008f04:	8963      	ldrh	r3, [r4, #10]
 8008f06:	b292      	uxth	r2, r2
 8008f08:	4413      	add	r3, r2
 8008f0a:	b21b      	sxth	r3, r3
 8008f0c:	429e      	cmp	r6, r3
 8008f0e:	da09      	bge.n	8008f24 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008f10:	6823      	ldr	r3, [r4, #0]
 8008f12:	1ab2      	subs	r2, r6, r2
 8008f14:	1a69      	subs	r1, r5, r1
 8008f16:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 8008f1a:	b212      	sxth	r2, r2
 8008f1c:	463b      	mov	r3, r7
 8008f1e:	b209      	sxth	r1, r1
 8008f20:	4620      	mov	r0, r4
 8008f22:	47c0      	blx	r8
 8008f24:	69a4      	ldr	r4, [r4, #24]
 8008f26:	e7db      	b.n	8008ee0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8008f28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008f2c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8008f2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008f30:	4c6e      	ldr	r4, [pc, #440]	@ (80090ec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 8008f32:	b0a1      	sub	sp, #132	@ 0x84
 8008f34:	6824      	ldr	r4, [r4, #0]
 8008f36:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 8008f38:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 8008f3c:	9303      	str	r3, [sp, #12]
 8008f3e:	2400      	movs	r4, #0
 8008f40:	802c      	strh	r4, [r5, #0]
 8008f42:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 8008f44:	802c      	strh	r4, [r5, #0]
 8008f46:	601c      	str	r4, [r3, #0]
 8008f48:	4606      	mov	r6, r0
 8008f4a:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8008f4e:	f7ff ffbd 	bl	8008ecc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8008f52:	f1b9 0f03 	cmp.w	r9, #3
 8008f56:	f340 80c2 	ble.w	80090de <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8008f5a:	4631      	mov	r1, r6
 8008f5c:	a80c      	add	r0, sp, #48	@ 0x30
 8008f5e:	f004 fc0d 	bl	800d77c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8008f62:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 8008f66:	9306      	str	r3, [sp, #24]
 8008f68:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8008f6c:	9307      	str	r3, [sp, #28]
 8008f6e:	9b03      	ldr	r3, [sp, #12]
 8008f70:	f8d3 a000 	ldr.w	sl, [r3]
 8008f74:	f1ba 0f00 	cmp.w	sl, #0
 8008f78:	f000 80b4 	beq.w	80090e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8008f7c:	4651      	mov	r1, sl
 8008f7e:	a810      	add	r0, sp, #64	@ 0x40
 8008f80:	f004 fbfc 	bl	800d77c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8008f84:	9b01      	ldr	r3, [sp, #4]
 8008f86:	9a06      	ldr	r2, [sp, #24]
 8008f88:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 8008f8c:	189d      	adds	r5, r3, r2
 8008f8e:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 8008f92:	9a07      	ldr	r2, [sp, #28]
 8008f94:	2002      	movs	r0, #2
 8008f96:	fb91 f1f0 	sdiv	r1, r1, r0
 8008f9a:	4419      	add	r1, r3
 8008f9c:	1a6d      	subs	r5, r5, r1
 8008f9e:	9b02      	ldr	r3, [sp, #8]
 8008fa0:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 8008fa4:	4413      	add	r3, r2
 8008fa6:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 8008faa:	fb92 f2f0 	sdiv	r2, r2, r0
 8008fae:	440a      	add	r2, r1
 8008fb0:	1a9b      	subs	r3, r3, r2
 8008fb2:	435b      	muls	r3, r3
 8008fb4:	fb05 3505 	mla	r5, r5, r5, r3
 8008fb8:	4f4d      	ldr	r7, [pc, #308]	@ (80090f0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8008fba:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8008fbc:	ac10      	add	r4, sp, #64	@ 0x40
 8008fbe:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008fc0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8008fc2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008fc4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8008fc6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008fc8:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8008fcc:	f1b9 0f0c 	cmp.w	r9, #12
 8008fd0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8008fd4:	f04f 0303 	mov.w	r3, #3
 8008fd8:	bfc8      	it	gt
 8008fda:	4698      	movgt	r8, r3
 8008fdc:	f8cd 9000 	str.w	r9, [sp]
 8008fe0:	f04f 0400 	mov.w	r4, #0
 8008fe4:	bfdc      	itt	le
 8008fe6:	f109 32ff 	addle.w	r2, r9, #4294967295
 8008fea:	fb92 f8f3 	sdivle	r8, r2, r3
 8008fee:	1c63      	adds	r3, r4, #1
 8008ff0:	aa10      	add	r2, sp, #64	@ 0x40
 8008ff2:	f004 0401 	and.w	r4, r4, #1
 8008ff6:	9308      	str	r3, [sp, #32]
 8008ff8:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8008ffc:	9b00      	ldr	r3, [sp, #0]
 8008ffe:	fb93 f3f8 	sdiv	r3, r3, r8
 8009002:	b29b      	uxth	r3, r3
 8009004:	3404      	adds	r4, #4
 8009006:	f04f 0b00 	mov.w	fp, #0
 800900a:	9304      	str	r3, [sp, #16]
 800900c:	9a04      	ldr	r2, [sp, #16]
 800900e:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8009012:	fb13 f302 	smulbb	r3, r3, r2
 8009016:	9a01      	ldr	r2, [sp, #4]
 8009018:	b29b      	uxth	r3, r3
 800901a:	1899      	adds	r1, r3, r2
 800901c:	9305      	str	r3, [sp, #20]
 800901e:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8009022:	b209      	sxth	r1, r1
 8009024:	4299      	cmp	r1, r3
 8009026:	db4d      	blt.n	80090c4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009028:	8932      	ldrh	r2, [r6, #8]
 800902a:	4413      	add	r3, r2
 800902c:	b21b      	sxth	r3, r3
 800902e:	4299      	cmp	r1, r3
 8009030:	da48      	bge.n	80090c4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009032:	9b04      	ldr	r3, [sp, #16]
 8009034:	6827      	ldr	r7, [r4, #0]
 8009036:	fb17 f703 	smulbb	r7, r7, r3
 800903a:	9b02      	ldr	r3, [sp, #8]
 800903c:	b2bf      	uxth	r7, r7
 800903e:	18fa      	adds	r2, r7, r3
 8009040:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8009044:	b212      	sxth	r2, r2
 8009046:	429a      	cmp	r2, r3
 8009048:	db3c      	blt.n	80090c4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800904a:	8970      	ldrh	r0, [r6, #10]
 800904c:	4403      	add	r3, r0
 800904e:	b21b      	sxth	r3, r3
 8009050:	429a      	cmp	r2, r3
 8009052:	da37      	bge.n	80090c4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009054:	2300      	movs	r3, #0
 8009056:	930b      	str	r3, [sp, #44]	@ 0x2c
 8009058:	4630      	mov	r0, r6
 800905a:	ab0b      	add	r3, sp, #44	@ 0x2c
 800905c:	f7ff ff36 	bl	8008ecc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8009060:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8009062:	b37a      	cbz	r2, 80090c4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009064:	4552      	cmp	r2, sl
 8009066:	d02d      	beq.n	80090c4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009068:	4611      	mov	r1, r2
 800906a:	a80e      	add	r0, sp, #56	@ 0x38
 800906c:	9209      	str	r2, [sp, #36]	@ 0x24
 800906e:	f004 fb85 	bl	800d77c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8009072:	9a06      	ldr	r2, [sp, #24]
 8009074:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 8009078:	9b01      	ldr	r3, [sp, #4]
 800907a:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800907e:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 8009082:	4413      	add	r3, r2
 8009084:	f04f 0e02 	mov.w	lr, #2
 8009088:	fb91 f1fe 	sdiv	r1, r1, lr
 800908c:	4401      	add	r1, r0
 800908e:	1a58      	subs	r0, r3, r1
 8009090:	9a07      	ldr	r2, [sp, #28]
 8009092:	9b02      	ldr	r3, [sp, #8]
 8009094:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 8009098:	fb9c fcfe 	sdiv	ip, ip, lr
 800909c:	4413      	add	r3, r2
 800909e:	448c      	add	ip, r1
 80090a0:	eba3 030c 	sub.w	r3, r3, ip
 80090a4:	435b      	muls	r3, r3
 80090a6:	fb00 3300 	mla	r3, r0, r0, r3
 80090aa:	42ab      	cmp	r3, r5
 80090ac:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80090ae:	d208      	bcs.n	80090c2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 80090b0:	9803      	ldr	r0, [sp, #12]
 80090b2:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80090b4:	6001      	str	r1, [r0, #0]
 80090b6:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 80090b8:	9805      	ldr	r0, [sp, #20]
 80090ba:	8008      	strh	r0, [r1, #0]
 80090bc:	992b      	ldr	r1, [sp, #172]	@ 0xac
 80090be:	461d      	mov	r5, r3
 80090c0:	800f      	strh	r7, [r1, #0]
 80090c2:	4692      	mov	sl, r2
 80090c4:	f10b 0b01 	add.w	fp, fp, #1
 80090c8:	f1bb 0f04 	cmp.w	fp, #4
 80090cc:	f104 0408 	add.w	r4, r4, #8
 80090d0:	d19c      	bne.n	800900c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 80090d2:	9b00      	ldr	r3, [sp, #0]
 80090d4:	9c08      	ldr	r4, [sp, #32]
 80090d6:	444b      	add	r3, r9
 80090d8:	4544      	cmp	r4, r8
 80090da:	9300      	str	r3, [sp, #0]
 80090dc:	d187      	bne.n	8008fee <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 80090de:	b021      	add	sp, #132	@ 0x84
 80090e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80090e4:	f04f 35ff 	mov.w	r5, #4294967295
 80090e8:	e766      	b.n	8008fb8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 80090ea:	bf00      	nop
 80090ec:	200119d4 	.word	0x200119d4
 80090f0:	0801e434 	.word	0x0801e434

080090f4 <_ZN8touchgfx4RectaNERKS0_>:
 80090f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80090f8:	f9b1 7000 	ldrsh.w	r7, [r1]
 80090fc:	888c      	ldrh	r4, [r1, #4]
 80090fe:	f9b0 9000 	ldrsh.w	r9, [r0]
 8009102:	443c      	add	r4, r7
 8009104:	b2a4      	uxth	r4, r4
 8009106:	fa0f f884 	sxth.w	r8, r4
 800910a:	45c1      	cmp	r9, r8
 800910c:	da2f      	bge.n	800916e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800910e:	8882      	ldrh	r2, [r0, #4]
 8009110:	444a      	add	r2, r9
 8009112:	b292      	uxth	r2, r2
 8009114:	fa0f fe82 	sxth.w	lr, r2
 8009118:	4577      	cmp	r7, lr
 800911a:	da28      	bge.n	800916e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800911c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8009120:	88cb      	ldrh	r3, [r1, #6]
 8009122:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8009126:	442b      	add	r3, r5
 8009128:	b21b      	sxth	r3, r3
 800912a:	429e      	cmp	r6, r3
 800912c:	da1f      	bge.n	800916e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800912e:	88c3      	ldrh	r3, [r0, #6]
 8009130:	4433      	add	r3, r6
 8009132:	b29b      	uxth	r3, r3
 8009134:	fa0f fc83 	sxth.w	ip, r3
 8009138:	4565      	cmp	r5, ip
 800913a:	da18      	bge.n	800916e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800913c:	454f      	cmp	r7, r9
 800913e:	bfb8      	it	lt
 8009140:	464f      	movlt	r7, r9
 8009142:	42b5      	cmp	r5, r6
 8009144:	bfb8      	it	lt
 8009146:	4635      	movlt	r5, r6
 8009148:	45f0      	cmp	r8, lr
 800914a:	bfd8      	it	le
 800914c:	4622      	movle	r2, r4
 800914e:	1bd2      	subs	r2, r2, r7
 8009150:	8082      	strh	r2, [r0, #4]
 8009152:	884a      	ldrh	r2, [r1, #2]
 8009154:	88c9      	ldrh	r1, [r1, #6]
 8009156:	8007      	strh	r7, [r0, #0]
 8009158:	440a      	add	r2, r1
 800915a:	b292      	uxth	r2, r2
 800915c:	b211      	sxth	r1, r2
 800915e:	458c      	cmp	ip, r1
 8009160:	bfa8      	it	ge
 8009162:	4613      	movge	r3, r2
 8009164:	1b5b      	subs	r3, r3, r5
 8009166:	80c3      	strh	r3, [r0, #6]
 8009168:	8045      	strh	r5, [r0, #2]
 800916a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800916e:	2300      	movs	r3, #0
 8009170:	8003      	strh	r3, [r0, #0]
 8009172:	8043      	strh	r3, [r0, #2]
 8009174:	8083      	strh	r3, [r0, #4]
 8009176:	80c3      	strh	r3, [r0, #6]
 8009178:	e7f7      	b.n	800916a <_ZN8touchgfx4RectaNERKS0_+0x76>

0800917a <_ZNK8touchgfx4Rect7isEmptyEv>:
 800917a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800917e:	2b00      	cmp	r3, #0
 8009180:	dd06      	ble.n	8009190 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8009182:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8009186:	2800      	cmp	r0, #0
 8009188:	bfcc      	ite	gt
 800918a:	2000      	movgt	r0, #0
 800918c:	2001      	movle	r0, #1
 800918e:	4770      	bx	lr
 8009190:	2001      	movs	r0, #1
 8009192:	4770      	bx	lr

08009194 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8009194:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009198:	2300      	movs	r3, #0
 800919a:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800919c:	8003      	strh	r3, [r0, #0]
 800919e:	4604      	mov	r4, r0
 80091a0:	8043      	strh	r3, [r0, #2]
 80091a2:	8083      	strh	r3, [r0, #4]
 80091a4:	80c3      	strh	r3, [r0, #6]
 80091a6:	2d00      	cmp	r5, #0
 80091a8:	d040      	beq.n	800922c <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 80091aa:	1d28      	adds	r0, r5, #4
 80091ac:	f7ff ffe5 	bl	800917a <_ZNK8touchgfx4Rect7isEmptyEv>
 80091b0:	b988      	cbnz	r0, 80091d6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80091b2:	4620      	mov	r0, r4
 80091b4:	f7ff ffe1 	bl	800917a <_ZNK8touchgfx4Rect7isEmptyEv>
 80091b8:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80091bc:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80091c0:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 80091c4:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 80091c8:	b138      	cbz	r0, 80091da <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 80091ca:	8022      	strh	r2, [r4, #0]
 80091cc:	8063      	strh	r3, [r4, #2]
 80091ce:	f8a4 e004 	strh.w	lr, [r4, #4]
 80091d2:	f8a4 c006 	strh.w	ip, [r4, #6]
 80091d6:	69ad      	ldr	r5, [r5, #24]
 80091d8:	e7e5      	b.n	80091a6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 80091da:	f9b4 0000 	ldrsh.w	r0, [r4]
 80091de:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80091e2:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 80091e6:	4290      	cmp	r0, r2
 80091e8:	4607      	mov	r7, r0
 80091ea:	bfa8      	it	ge
 80091ec:	4617      	movge	r7, r2
 80091ee:	4472      	add	r2, lr
 80091f0:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 80091f4:	8027      	strh	r7, [r4, #0]
 80091f6:	4299      	cmp	r1, r3
 80091f8:	460e      	mov	r6, r1
 80091fa:	4440      	add	r0, r8
 80091fc:	bfa8      	it	ge
 80091fe:	461e      	movge	r6, r3
 8009200:	4471      	add	r1, lr
 8009202:	4463      	add	r3, ip
 8009204:	b200      	sxth	r0, r0
 8009206:	b212      	sxth	r2, r2
 8009208:	b209      	sxth	r1, r1
 800920a:	b21b      	sxth	r3, r3
 800920c:	4290      	cmp	r0, r2
 800920e:	bfac      	ite	ge
 8009210:	ebc7 0200 	rsbge	r2, r7, r0
 8009214:	ebc7 0202 	rsblt	r2, r7, r2
 8009218:	4299      	cmp	r1, r3
 800921a:	bfac      	ite	ge
 800921c:	ebc6 0301 	rsbge	r3, r6, r1
 8009220:	ebc6 0303 	rsblt	r3, r6, r3
 8009224:	8066      	strh	r6, [r4, #2]
 8009226:	80a2      	strh	r2, [r4, #4]
 8009228:	80e3      	strh	r3, [r4, #6]
 800922a:	e7d4      	b.n	80091d6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800922c:	4620      	mov	r0, r4
 800922e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009232 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8009232:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009236:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800923a:	b383      	cbz	r3, 800929e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800923c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800923e:	b374      	cbz	r4, 800929e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8009240:	f9b1 5000 	ldrsh.w	r5, [r1]
 8009244:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8009248:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800924c:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8009250:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8009254:	b303      	cbz	r3, 8009298 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8009256:	4668      	mov	r0, sp
 8009258:	1d21      	adds	r1, r4, #4
 800925a:	f8ad 5000 	strh.w	r5, [sp]
 800925e:	f8ad 6002 	strh.w	r6, [sp, #2]
 8009262:	f8ad 7004 	strh.w	r7, [sp, #4]
 8009266:	f8ad 8006 	strh.w	r8, [sp, #6]
 800926a:	f7ff ff43 	bl	80090f4 <_ZN8touchgfx4RectaNERKS0_>
 800926e:	4668      	mov	r0, sp
 8009270:	f7ff ff83 	bl	800917a <_ZNK8touchgfx4Rect7isEmptyEv>
 8009274:	b980      	cbnz	r0, 8009298 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8009276:	f8bd 3000 	ldrh.w	r3, [sp]
 800927a:	88a2      	ldrh	r2, [r4, #4]
 800927c:	1a9b      	subs	r3, r3, r2
 800927e:	f8ad 3000 	strh.w	r3, [sp]
 8009282:	88e2      	ldrh	r2, [r4, #6]
 8009284:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009288:	1a9b      	subs	r3, r3, r2
 800928a:	f8ad 3002 	strh.w	r3, [sp, #2]
 800928e:	6823      	ldr	r3, [r4, #0]
 8009290:	4669      	mov	r1, sp
 8009292:	689b      	ldr	r3, [r3, #8]
 8009294:	4620      	mov	r0, r4
 8009296:	4798      	blx	r3
 8009298:	69a4      	ldr	r4, [r4, #24]
 800929a:	2c00      	cmp	r4, #0
 800929c:	d1d8      	bne.n	8009250 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800929e:	b002      	add	sp, #8
 80092a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080092a4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 80092a4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80092a6:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 80092aa:	460d      	mov	r5, r1
 80092ac:	4616      	mov	r6, r2
 80092ae:	b323      	cbz	r3, 80092fa <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80092b0:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 80092b2:	b314      	cbz	r4, 80092fa <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80092b4:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 80092b8:	b1eb      	cbz	r3, 80092f6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80092ba:	6828      	ldr	r0, [r5, #0]
 80092bc:	6869      	ldr	r1, [r5, #4]
 80092be:	466b      	mov	r3, sp
 80092c0:	c303      	stmia	r3!, {r0, r1}
 80092c2:	4668      	mov	r0, sp
 80092c4:	1d21      	adds	r1, r4, #4
 80092c6:	f7ff ff15 	bl	80090f4 <_ZN8touchgfx4RectaNERKS0_>
 80092ca:	4668      	mov	r0, sp
 80092cc:	f7ff ff55 	bl	800917a <_ZNK8touchgfx4Rect7isEmptyEv>
 80092d0:	b988      	cbnz	r0, 80092f6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80092d2:	f8bd 3000 	ldrh.w	r3, [sp]
 80092d6:	88a2      	ldrh	r2, [r4, #4]
 80092d8:	1a9b      	subs	r3, r3, r2
 80092da:	f8ad 3000 	strh.w	r3, [sp]
 80092de:	88e2      	ldrh	r2, [r4, #6]
 80092e0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80092e4:	1a9b      	subs	r3, r3, r2
 80092e6:	f8ad 3002 	strh.w	r3, [sp, #2]
 80092ea:	6823      	ldr	r3, [r4, #0]
 80092ec:	4632      	mov	r2, r6
 80092ee:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80092f0:	4669      	mov	r1, sp
 80092f2:	4620      	mov	r0, r4
 80092f4:	4798      	blx	r3
 80092f6:	69a4      	ldr	r4, [r4, #24]
 80092f8:	e7db      	b.n	80092b2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 80092fa:	b002      	add	sp, #8
 80092fc:	bd70      	pop	{r4, r5, r6, pc}

080092fe <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 80092fe:	b513      	push	{r0, r1, r4, lr}
 8009300:	6803      	ldr	r3, [r0, #0]
 8009302:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
 8009306:	2300      	movs	r3, #0
 8009308:	e9cd 3300 	strd	r3, r3, [sp]
 800930c:	466b      	mov	r3, sp
 800930e:	47a0      	blx	r4
 8009310:	b002      	add	sp, #8
 8009312:	bd10      	pop	{r4, pc}

08009314 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8009314:	2301      	movs	r3, #1
 8009316:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800931a:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800931e:	4770      	bx	lr

08009320 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8009320:	2301      	movs	r3, #1
 8009322:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 8009326:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800932a:	4770      	bx	lr

0800932c <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800932c:	6843      	ldr	r3, [r0, #4]
 800932e:	2201      	movs	r2, #1
 8009330:	725a      	strb	r2, [r3, #9]
 8009332:	6840      	ldr	r0, [r0, #4]
 8009334:	6803      	ldr	r3, [r0, #0]
 8009336:	691b      	ldr	r3, [r3, #16]
 8009338:	4718      	bx	r3

0800933a <_ZN8touchgfx3HAL8flushDMAEv>:
 800933a:	6840      	ldr	r0, [r0, #4]
 800933c:	6803      	ldr	r3, [r0, #0]
 800933e:	689b      	ldr	r3, [r3, #8]
 8009340:	4718      	bx	r3

08009342 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8009342:	b530      	push	{r4, r5, lr}
 8009344:	b08b      	sub	sp, #44	@ 0x2c
 8009346:	6804      	ldr	r4, [r0, #0]
 8009348:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800934c:	9509      	str	r5, [sp, #36]	@ 0x24
 800934e:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 8009352:	9508      	str	r5, [sp, #32]
 8009354:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8009358:	9507      	str	r5, [sp, #28]
 800935a:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800935e:	9506      	str	r5, [sp, #24]
 8009360:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 8009364:	9505      	str	r5, [sp, #20]
 8009366:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800936a:	9504      	str	r5, [sp, #16]
 800936c:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 8009370:	9503      	str	r5, [sp, #12]
 8009372:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 8009376:	9502      	str	r5, [sp, #8]
 8009378:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800937c:	e9cd 3500 	strd	r3, r5, [sp]
 8009380:	4613      	mov	r3, r2
 8009382:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
 8009384:	2200      	movs	r2, #0
 8009386:	47a0      	blx	r4
 8009388:	b00b      	add	sp, #44	@ 0x2c
 800938a:	bd30      	pop	{r4, r5, pc}

0800938c <_ZN8touchgfx3HAL10beginFrameEv>:
 800938c:	4b04      	ldr	r3, [pc, #16]	@ (80093a0 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800938e:	781b      	ldrb	r3, [r3, #0]
 8009390:	b123      	cbz	r3, 800939c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8009392:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 8009396:	f080 0001 	eor.w	r0, r0, #1
 800939a:	4770      	bx	lr
 800939c:	2001      	movs	r0, #1
 800939e:	4770      	bx	lr
 80093a0:	200119d2 	.word	0x200119d2

080093a4 <_ZN8touchgfx3HAL8endFrameEv>:
 80093a4:	b510      	push	{r4, lr}
 80093a6:	4604      	mov	r4, r0
 80093a8:	6840      	ldr	r0, [r0, #4]
 80093aa:	6803      	ldr	r3, [r0, #0]
 80093ac:	689b      	ldr	r3, [r3, #8]
 80093ae:	4798      	blx	r3
 80093b0:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 80093b4:	b113      	cbz	r3, 80093bc <_ZN8touchgfx3HAL8endFrameEv+0x18>
 80093b6:	2301      	movs	r3, #1
 80093b8:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 80093bc:	bd10      	pop	{r4, pc}

080093be <_ZN8touchgfx3HAL10initializeEv>:
 80093be:	b510      	push	{r4, lr}
 80093c0:	4604      	mov	r4, r0
 80093c2:	f7f7 fb3d 	bl	8000a40 <_ZN8touchgfx10OSWrappers10initializeEv>
 80093c6:	f7f7 fa4d 	bl	8000864 <_ZN8touchgfx4GPIO4initEv>
 80093ca:	6860      	ldr	r0, [r4, #4]
 80093cc:	6803      	ldr	r3, [r0, #0]
 80093ce:	68db      	ldr	r3, [r3, #12]
 80093d0:	4798      	blx	r3
 80093d2:	68e0      	ldr	r0, [r4, #12]
 80093d4:	6803      	ldr	r3, [r0, #0]
 80093d6:	689b      	ldr	r3, [r3, #8]
 80093d8:	4798      	blx	r3
 80093da:	6823      	ldr	r3, [r4, #0]
 80093dc:	4620      	mov	r0, r4
 80093de:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80093e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80093e4:	4718      	bx	r3
	...

080093e8 <_ZN8touchgfx3HAL4tickEv>:
 80093e8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80093ea:	6803      	ldr	r3, [r0, #0]
 80093ec:	4d5b      	ldr	r5, [pc, #364]	@ (800955c <_ZN8touchgfx3HAL4tickEv+0x174>)
 80093ee:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 80093f2:	4604      	mov	r4, r0
 80093f4:	4798      	blx	r3
 80093f6:	2800      	cmp	r0, #0
 80093f8:	f000 8095 	beq.w	8009526 <_ZN8touchgfx3HAL4tickEv+0x13e>
 80093fc:	2001      	movs	r0, #1
 80093fe:	f7f7 f9af 	bl	8000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8009402:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 8009406:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800940a:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800940e:	2600      	movs	r6, #0
 8009410:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 8009414:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 8009418:	b133      	cbz	r3, 8009428 <_ZN8touchgfx3HAL4tickEv+0x40>
 800941a:	6823      	ldr	r3, [r4, #0]
 800941c:	4620      	mov	r0, r4
 800941e:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 8009422:	4798      	blx	r3
 8009424:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 8009428:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800942c:	6862      	ldr	r2, [r4, #4]
 800942e:	f083 0301 	eor.w	r3, r3, #1
 8009432:	7253      	strb	r3, [r2, #9]
 8009434:	2601      	movs	r6, #1
 8009436:	702e      	strb	r6, [r5, #0]
 8009438:	f003 f81c 	bl	800c474 <_ZN8touchgfx11Application11getInstanceEv>
 800943c:	6803      	ldr	r3, [r0, #0]
 800943e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8009440:	4798      	blx	r3
 8009442:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 8009446:	b90b      	cbnz	r3, 800944c <_ZN8touchgfx3HAL4tickEv+0x64>
 8009448:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800944c:	f003 f812 	bl	800c474 <_ZN8touchgfx11Application11getInstanceEv>
 8009450:	6803      	ldr	r3, [r0, #0]
 8009452:	695b      	ldr	r3, [r3, #20]
 8009454:	4798      	blx	r3
 8009456:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8009458:	6803      	ldr	r3, [r0, #0]
 800945a:	691b      	ldr	r3, [r3, #16]
 800945c:	4798      	blx	r3
 800945e:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 8009462:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 8009466:	3b01      	subs	r3, #1
 8009468:	b2db      	uxtb	r3, r3
 800946a:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800946e:	b10a      	cbz	r2, 8009474 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8009470:	2b00      	cmp	r3, #0
 8009472:	d1eb      	bne.n	800944c <_ZN8touchgfx3HAL4tickEv+0x64>
 8009474:	4a3a      	ldr	r2, [pc, #232]	@ (8009560 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8009476:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800947a:	7813      	ldrb	r3, [r2, #0]
 800947c:	3301      	adds	r3, #1
 800947e:	b25b      	sxtb	r3, r3
 8009480:	4299      	cmp	r1, r3
 8009482:	7013      	strb	r3, [r2, #0]
 8009484:	dc10      	bgt.n	80094a8 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8009486:	68e0      	ldr	r0, [r4, #12]
 8009488:	2300      	movs	r3, #0
 800948a:	7013      	strb	r3, [r2, #0]
 800948c:	6803      	ldr	r3, [r0, #0]
 800948e:	aa03      	add	r2, sp, #12
 8009490:	68db      	ldr	r3, [r3, #12]
 8009492:	a902      	add	r1, sp, #8
 8009494:	4798      	blx	r3
 8009496:	6823      	ldr	r3, [r4, #0]
 8009498:	2800      	cmp	r0, #0
 800949a:	d050      	beq.n	800953e <_ZN8touchgfx3HAL4tickEv+0x156>
 800949c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 80094a0:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 80094a4:	4620      	mov	r0, r4
 80094a6:	4798      	blx	r3
 80094a8:	6960      	ldr	r0, [r4, #20]
 80094aa:	2300      	movs	r3, #0
 80094ac:	f88d 3007 	strb.w	r3, [sp, #7]
 80094b0:	b158      	cbz	r0, 80094ca <_ZN8touchgfx3HAL4tickEv+0xe2>
 80094b2:	6803      	ldr	r3, [r0, #0]
 80094b4:	f10d 0107 	add.w	r1, sp, #7
 80094b8:	68db      	ldr	r3, [r3, #12]
 80094ba:	4798      	blx	r3
 80094bc:	b128      	cbz	r0, 80094ca <_ZN8touchgfx3HAL4tickEv+0xe2>
 80094be:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 80094c0:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80094c4:	6803      	ldr	r3, [r0, #0]
 80094c6:	68db      	ldr	r3, [r3, #12]
 80094c8:	4798      	blx	r3
 80094ca:	f104 001c 	add.w	r0, r4, #28
 80094ce:	f013 fc65 	bl	801cd9c <_ZN8touchgfx8Gestures4tickEv>
 80094d2:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 80094d6:	b30b      	cbz	r3, 800951c <_ZN8touchgfx3HAL4tickEv+0x134>
 80094d8:	6920      	ldr	r0, [r4, #16]
 80094da:	6803      	ldr	r3, [r0, #0]
 80094dc:	691b      	ldr	r3, [r3, #16]
 80094de:	4798      	blx	r3
 80094e0:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 80094e2:	4606      	mov	r6, r0
 80094e4:	b903      	cbnz	r3, 80094e8 <_ZN8touchgfx3HAL4tickEv+0x100>
 80094e6:	6760      	str	r0, [r4, #116]	@ 0x74
 80094e8:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 80094ea:	4a1e      	ldr	r2, [pc, #120]	@ (8009564 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 80094ec:	1af3      	subs	r3, r6, r3
 80094ee:	4293      	cmp	r3, r2
 80094f0:	d914      	bls.n	800951c <_ZN8touchgfx3HAL4tickEv+0x134>
 80094f2:	6920      	ldr	r0, [r4, #16]
 80094f4:	6803      	ldr	r3, [r0, #0]
 80094f6:	699b      	ldr	r3, [r3, #24]
 80094f8:	4798      	blx	r3
 80094fa:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 80094fc:	2264      	movs	r2, #100	@ 0x64
 80094fe:	1af3      	subs	r3, r6, r3
 8009500:	fbb3 f3f2 	udiv	r3, r3, r2
 8009504:	fbb0 f0f3 	udiv	r0, r0, r3
 8009508:	2800      	cmp	r0, #0
 800950a:	dc1d      	bgt.n	8009548 <_ZN8touchgfx3HAL4tickEv+0x160>
 800950c:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 8009510:	6920      	ldr	r0, [r4, #16]
 8009512:	6803      	ldr	r3, [r0, #0]
 8009514:	2100      	movs	r1, #0
 8009516:	69db      	ldr	r3, [r3, #28]
 8009518:	4798      	blx	r3
 800951a:	6766      	str	r6, [r4, #116]	@ 0x74
 800951c:	f002 ffaa 	bl	800c474 <_ZN8touchgfx11Application11getInstanceEv>
 8009520:	6803      	ldr	r3, [r0, #0]
 8009522:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009524:	4798      	blx	r3
 8009526:	6823      	ldr	r3, [r4, #0]
 8009528:	4620      	mov	r0, r4
 800952a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 800952e:	4798      	blx	r3
 8009530:	2001      	movs	r0, #1
 8009532:	f7f7 f93f 	bl	80007b4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8009536:	2300      	movs	r3, #0
 8009538:	702b      	strb	r3, [r5, #0]
 800953a:	b004      	add	sp, #16
 800953c:	bd70      	pop	{r4, r5, r6, pc}
 800953e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 8009542:	4620      	mov	r0, r4
 8009544:	4798      	blx	r3
 8009546:	e7af      	b.n	80094a8 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8009548:	2863      	cmp	r0, #99	@ 0x63
 800954a:	bfcb      	itete	gt
 800954c:	2300      	movgt	r3, #0
 800954e:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 8009552:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 8009556:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800955a:	e7d9      	b.n	8009510 <_ZN8touchgfx3HAL4tickEv+0x128>
 800955c:	200119d8 	.word	0x200119d8
 8009560:	200119d9 	.word	0x200119d9
 8009564:	05f5e100 	.word	0x05f5e100

08009568 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8009568:	b510      	push	{r4, lr}
 800956a:	4604      	mov	r4, r0
 800956c:	f7f7 fa98 	bl	8000aa0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8009570:	6863      	ldr	r3, [r4, #4]
 8009572:	2200      	movs	r2, #0
 8009574:	729a      	strb	r2, [r3, #10]
 8009576:	bd10      	pop	{r4, pc}

08009578 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8009578:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800957a:	301c      	adds	r0, #28
 800957c:	f013 bc0c 	b.w	801cd98 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08009580 <_ZN8touchgfx3HAL5touchEll>:
 8009580:	b530      	push	{r4, r5, lr}
 8009582:	b087      	sub	sp, #28
 8009584:	4604      	mov	r4, r0
 8009586:	a804      	add	r0, sp, #16
 8009588:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800958c:	f002 fd5a 	bl	800c044 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8009590:	9b04      	ldr	r3, [sp, #16]
 8009592:	f8ad 300c 	strh.w	r3, [sp, #12]
 8009596:	a906      	add	r1, sp, #24
 8009598:	9b05      	ldr	r3, [sp, #20]
 800959a:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800959e:	a803      	add	r0, sp, #12
 80095a0:	f002 fda2 	bl	800c0e8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 80095a4:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 80095a8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80095ac:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80095b0:	f104 001c 	add.w	r0, r4, #28
 80095b4:	b189      	cbz	r1, 80095da <_ZN8touchgfx3HAL5touchEll+0x5a>
 80095b6:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 80095ba:	9300      	str	r3, [sp, #0]
 80095bc:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 80095c0:	4613      	mov	r3, r2
 80095c2:	462a      	mov	r2, r5
 80095c4:	f013 fbf8 	bl	801cdb8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 80095c8:	b128      	cbz	r0, 80095d6 <_ZN8touchgfx3HAL5touchEll+0x56>
 80095ca:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80095ce:	6623      	str	r3, [r4, #96]	@ 0x60
 80095d0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80095d4:	6663      	str	r3, [r4, #100]	@ 0x64
 80095d6:	b007      	add	sp, #28
 80095d8:	bd30      	pop	{r4, r5, pc}
 80095da:	f013 fc2d 	bl	801ce38 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80095de:	2301      	movs	r3, #1
 80095e0:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 80095e4:	e7f1      	b.n	80095ca <_ZN8touchgfx3HAL5touchEll+0x4a>

080095e6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 80095e6:	b510      	push	{r4, lr}
 80095e8:	2b00      	cmp	r3, #0
 80095ea:	d046      	beq.n	800967a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80095ec:	ea81 0002 	eor.w	r0, r1, r2
 80095f0:	07c4      	lsls	r4, r0, #31
 80095f2:	d508      	bpl.n	8009606 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 80095f4:	440b      	add	r3, r1
 80095f6:	3a01      	subs	r2, #1
 80095f8:	428b      	cmp	r3, r1
 80095fa:	d93e      	bls.n	800967a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80095fc:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009600:	f801 0b01 	strb.w	r0, [r1], #1
 8009604:	e7f8      	b.n	80095f8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8009606:	07d0      	lsls	r0, r2, #31
 8009608:	bf42      	ittt	mi
 800960a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800960e:	f801 0b01 	strbmi.w	r0, [r1], #1
 8009612:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8009616:	2b01      	cmp	r3, #1
 8009618:	d911      	bls.n	800963e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800961a:	ea81 0402 	eor.w	r4, r1, r2
 800961e:	07a4      	lsls	r4, r4, #30
 8009620:	4610      	mov	r0, r2
 8009622:	d022      	beq.n	800966a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8009624:	f023 0401 	bic.w	r4, r3, #1
 8009628:	440c      	add	r4, r1
 800962a:	428c      	cmp	r4, r1
 800962c:	4602      	mov	r2, r0
 800962e:	d904      	bls.n	800963a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8009630:	8812      	ldrh	r2, [r2, #0]
 8009632:	f821 2b02 	strh.w	r2, [r1], #2
 8009636:	3002      	adds	r0, #2
 8009638:	e7f7      	b.n	800962a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800963a:	f003 0301 	and.w	r3, r3, #1
 800963e:	f023 0003 	bic.w	r0, r3, #3
 8009642:	4408      	add	r0, r1
 8009644:	4288      	cmp	r0, r1
 8009646:	4614      	mov	r4, r2
 8009648:	d904      	bls.n	8009654 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800964a:	6824      	ldr	r4, [r4, #0]
 800964c:	f841 4b04 	str.w	r4, [r1], #4
 8009650:	3204      	adds	r2, #4
 8009652:	e7f7      	b.n	8009644 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8009654:	f003 0303 	and.w	r3, r3, #3
 8009658:	440b      	add	r3, r1
 800965a:	3a01      	subs	r2, #1
 800965c:	428b      	cmp	r3, r1
 800965e:	d90c      	bls.n	800967a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009660:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009664:	f801 0b01 	strb.w	r0, [r1], #1
 8009668:	e7f8      	b.n	800965c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800966a:	0790      	lsls	r0, r2, #30
 800966c:	d0e7      	beq.n	800963e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800966e:	f832 0b02 	ldrh.w	r0, [r2], #2
 8009672:	f821 0b02 	strh.w	r0, [r1], #2
 8009676:	3b02      	subs	r3, #2
 8009678:	e7e1      	b.n	800963e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800967a:	2001      	movs	r0, #1
 800967c:	bd10      	pop	{r4, pc}

0800967e <_ZN8touchgfx3HAL7noTouchEv>:
 800967e:	b510      	push	{r4, lr}
 8009680:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 8009684:	4604      	mov	r4, r0
 8009686:	b153      	cbz	r3, 800969e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8009688:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800968c:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 8009690:	2101      	movs	r1, #1
 8009692:	301c      	adds	r0, #28
 8009694:	f013 fbd0 	bl	801ce38 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009698:	2300      	movs	r3, #0
 800969a:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800969e:	bd10      	pop	{r4, pc}

080096a0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 80096a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80096a4:	b085      	sub	sp, #20
 80096a6:	ad04      	add	r5, sp, #16
 80096a8:	4604      	mov	r4, r0
 80096aa:	2000      	movs	r0, #0
 80096ac:	f845 0d04 	str.w	r0, [r5, #-4]!
 80096b0:	69a0      	ldr	r0, [r4, #24]
 80096b2:	6806      	ldr	r6, [r0, #0]
 80096b4:	9501      	str	r5, [sp, #4]
 80096b6:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 80096ba:	9500      	str	r5, [sp, #0]
 80096bc:	6835      	ldr	r5, [r6, #0]
 80096be:	4699      	mov	r9, r3
 80096c0:	460f      	mov	r7, r1
 80096c2:	4690      	mov	r8, r2
 80096c4:	47a8      	blx	r5
 80096c6:	4d10      	ldr	r5, [pc, #64]	@ (8009708 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 80096c8:	4606      	mov	r6, r0
 80096ca:	f8a5 9000 	strh.w	r9, [r5]
 80096ce:	f7f8 fea7 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 80096d2:	6803      	ldr	r3, [r0, #0]
 80096d4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80096d6:	4798      	blx	r3
 80096d8:	b128      	cbz	r0, 80096e6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 80096da:	2801      	cmp	r0, #1
 80096dc:	d00b      	beq.n	80096f6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 80096de:	4630      	mov	r0, r6
 80096e0:	b005      	add	sp, #20
 80096e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80096e6:	882b      	ldrh	r3, [r5, #0]
 80096e8:	fb08 7203 	mla	r2, r8, r3, r7
 80096ec:	9b03      	ldr	r3, [sp, #12]
 80096ee:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 80096f2:	63e3      	str	r3, [r4, #60]	@ 0x3c
 80096f4:	e7f3      	b.n	80096de <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 80096f6:	882a      	ldrh	r2, [r5, #0]
 80096f8:	9b03      	ldr	r3, [sp, #12]
 80096fa:	fb08 7202 	mla	r2, r8, r2, r7
 80096fe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8009702:	1a9a      	subs	r2, r3, r2
 8009704:	63e2      	str	r2, [r4, #60]	@ 0x3c
 8009706:	e7ea      	b.n	80096de <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8009708:	200119ce 	.word	0x200119ce

0800970c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800970c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800970e:	b08b      	sub	sp, #44	@ 0x2c
 8009710:	4617      	mov	r7, r2
 8009712:	4604      	mov	r4, r0
 8009714:	460e      	mov	r6, r1
 8009716:	461d      	mov	r5, r3
 8009718:	f7f8 fe82 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 800971c:	6803      	ldr	r3, [r0, #0]
 800971e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009720:	4798      	blx	r3
 8009722:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8009726:	9007      	str	r0, [sp, #28]
 8009728:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800972c:	4b0d      	ldr	r3, [pc, #52]	@ (8009764 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800972e:	6822      	ldr	r2, [r4, #0]
 8009730:	881b      	ldrh	r3, [r3, #0]
 8009732:	9306      	str	r3, [sp, #24]
 8009734:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8009738:	9305      	str	r3, [sp, #20]
 800973a:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800973e:	9304      	str	r3, [sp, #16]
 8009740:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8009744:	9303      	str	r3, [sp, #12]
 8009746:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800974a:	9302      	str	r3, [sp, #8]
 800974c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8009750:	e9cd 5300 	strd	r5, r3, [sp]
 8009754:	4631      	mov	r1, r6
 8009756:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
 8009758:	463b      	mov	r3, r7
 800975a:	2200      	movs	r2, #0
 800975c:	4620      	mov	r0, r4
 800975e:	47a8      	blx	r5
 8009760:	b00b      	add	sp, #44	@ 0x2c
 8009762:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009764:	200119ce 	.word	0x200119ce

08009768 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8009768:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800976c:	4698      	mov	r8, r3
 800976e:	6803      	ldr	r3, [r0, #0]
 8009770:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 8009772:	4b15      	ldr	r3, [pc, #84]	@ (80097c8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8009774:	b08b      	sub	sp, #44	@ 0x2c
 8009776:	4617      	mov	r7, r2
 8009778:	f8b3 9000 	ldrh.w	r9, [r3]
 800977c:	460e      	mov	r6, r1
 800977e:	4604      	mov	r4, r0
 8009780:	f7f8 fe4e 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 8009784:	6803      	ldr	r3, [r0, #0]
 8009786:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009788:	4798      	blx	r3
 800978a:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800978e:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8009792:	2302      	movs	r3, #2
 8009794:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8009798:	2301      	movs	r3, #1
 800979a:	9305      	str	r3, [sp, #20]
 800979c:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 80097a0:	9304      	str	r3, [sp, #16]
 80097a2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 80097a6:	9303      	str	r3, [sp, #12]
 80097a8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 80097ac:	9302      	str	r3, [sp, #8]
 80097ae:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 80097b2:	2200      	movs	r2, #0
 80097b4:	e9cd 8300 	strd	r8, r3, [sp]
 80097b8:	4631      	mov	r1, r6
 80097ba:	463b      	mov	r3, r7
 80097bc:	4620      	mov	r0, r4
 80097be:	47a8      	blx	r5
 80097c0:	b00b      	add	sp, #44	@ 0x2c
 80097c2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80097c6:	bf00      	nop
 80097c8:	200119ce 	.word	0x200119ce

080097cc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 80097cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80097d0:	4698      	mov	r8, r3
 80097d2:	6803      	ldr	r3, [r0, #0]
 80097d4:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
 80097d6:	4b11      	ldr	r3, [pc, #68]	@ (800981c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 80097d8:	b087      	sub	sp, #28
 80097da:	f8b3 9000 	ldrh.w	r9, [r3]
 80097de:	460e      	mov	r6, r1
 80097e0:	4617      	mov	r7, r2
 80097e2:	4604      	mov	r4, r0
 80097e4:	f7f8 fe1c 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 80097e8:	6803      	ldr	r3, [r0, #0]
 80097ea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80097ec:	4798      	blx	r3
 80097ee:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 80097f2:	f8cd 900c 	str.w	r9, [sp, #12]
 80097f6:	e9cd 0304 	strd	r0, r3, [sp, #16]
 80097fa:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 80097fe:	9302      	str	r3, [sp, #8]
 8009800:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 8009804:	9301      	str	r3, [sp, #4]
 8009806:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800980a:	9300      	str	r3, [sp, #0]
 800980c:	463a      	mov	r2, r7
 800980e:	4643      	mov	r3, r8
 8009810:	4631      	mov	r1, r6
 8009812:	4620      	mov	r0, r4
 8009814:	47a8      	blx	r5
 8009816:	b007      	add	sp, #28
 8009818:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800981c:	200119ce 	.word	0x200119ce

08009820 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8009820:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009824:	4604      	mov	r4, r0
 8009826:	b08f      	sub	sp, #60	@ 0x3c
 8009828:	4610      	mov	r0, r2
 800982a:	460d      	mov	r5, r1
 800982c:	4691      	mov	r9, r2
 800982e:	461e      	mov	r6, r3
 8009830:	f005 fe74 	bl	800f51c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009834:	2800      	cmp	r0, #0
 8009836:	f000 809d 	beq.w	8009974 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800983a:	6823      	ldr	r3, [r4, #0]
 800983c:	f8df b198 	ldr.w	fp, [pc, #408]	@ 80099d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8009840:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009842:	f8df a198 	ldr.w	sl, [pc, #408]	@ 80099dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8009846:	4f61      	ldr	r7, [pc, #388]	@ (80099cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8009848:	4620      	mov	r0, r4
 800984a:	4798      	blx	r3
 800984c:	6823      	ldr	r3, [r4, #0]
 800984e:	4620      	mov	r0, r4
 8009850:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009852:	4798      	blx	r3
 8009854:	f8bb 3000 	ldrh.w	r3, [fp]
 8009858:	9301      	str	r3, [sp, #4]
 800985a:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800985e:	f8ba 3000 	ldrh.w	r3, [sl]
 8009862:	9302      	str	r3, [sp, #8]
 8009864:	883b      	ldrh	r3, [r7, #0]
 8009866:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800986a:	9303      	str	r3, [sp, #12]
 800986c:	4b58      	ldr	r3, [pc, #352]	@ (80099d0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800986e:	9305      	str	r3, [sp, #20]
 8009870:	881a      	ldrh	r2, [r3, #0]
 8009872:	9204      	str	r2, [sp, #16]
 8009874:	4640      	mov	r0, r8
 8009876:	f005 fee5 	bl	800f644 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800987a:	8038      	strh	r0, [r7, #0]
 800987c:	4640      	mov	r0, r8
 800987e:	f005 ff15 	bl	800f6ac <_ZNK8touchgfx6Bitmap9getHeightEv>
 8009882:	9b05      	ldr	r3, [sp, #20]
 8009884:	b280      	uxth	r0, r0
 8009886:	8018      	strh	r0, [r3, #0]
 8009888:	4b52      	ldr	r3, [pc, #328]	@ (80099d4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800988a:	781b      	ldrb	r3, [r3, #0]
 800988c:	2b00      	cmp	r3, #0
 800988e:	d174      	bne.n	800997a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8009890:	883b      	ldrh	r3, [r7, #0]
 8009892:	f8ab 3000 	strh.w	r3, [fp]
 8009896:	f8aa 0000 	strh.w	r0, [sl]
 800989a:	4648      	mov	r0, r9
 800989c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 80098a0:	f005 fe3c 	bl	800f51c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80098a4:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 80098a8:	2200      	movs	r2, #0
 80098aa:	4611      	mov	r1, r2
 80098ac:	4628      	mov	r0, r5
 80098ae:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 80098b2:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 80098b6:	f7f9 f857 	bl	8002968 <_ZN8touchgfx8Drawable5setXYEss>
 80098ba:	2301      	movs	r3, #1
 80098bc:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 80098c0:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 80098c4:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80098c8:	2b00      	cmp	r3, #0
 80098ca:	dd5c      	ble.n	8009986 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 80098cc:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80098d0:	2b00      	cmp	r3, #0
 80098d2:	dd58      	ble.n	8009986 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 80098d4:	462a      	mov	r2, r5
 80098d6:	ab0a      	add	r3, sp, #40	@ 0x28
 80098d8:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80098dc:	6851      	ldr	r1, [r2, #4]
 80098de:	c303      	stmia	r3!, {r0, r1}
 80098e0:	4631      	mov	r1, r6
 80098e2:	a80a      	add	r0, sp, #40	@ 0x28
 80098e4:	f7ff fc06 	bl	80090f4 <_ZN8touchgfx4RectaNERKS0_>
 80098e8:	4b38      	ldr	r3, [pc, #224]	@ (80099cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80098ea:	f9b3 2000 	ldrsh.w	r2, [r3]
 80098ee:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 80098f2:	2100      	movs	r1, #0
 80098f4:	aa0a      	add	r2, sp, #40	@ 0x28
 80098f6:	4b36      	ldr	r3, [pc, #216]	@ (80099d0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80098f8:	910c      	str	r1, [sp, #48]	@ 0x30
 80098fa:	e892 0003 	ldmia.w	r2, {r0, r1}
 80098fe:	f9b3 3000 	ldrsh.w	r3, [r3]
 8009902:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8009906:	ab08      	add	r3, sp, #32
 8009908:	e883 0003 	stmia.w	r3, {r0, r1}
 800990c:	4618      	mov	r0, r3
 800990e:	a90c      	add	r1, sp, #48	@ 0x30
 8009910:	f7ff fbf0 	bl	80090f4 <_ZN8touchgfx4RectaNERKS0_>
 8009914:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8009916:	2b00      	cmp	r3, #0
 8009918:	d13c      	bne.n	8009994 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800991a:	2000      	movs	r0, #0
 800991c:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 8009920:	2600      	movs	r6, #0
 8009922:	682a      	ldr	r2, [r5, #0]
 8009924:	696b      	ldr	r3, [r5, #20]
 8009926:	616e      	str	r6, [r5, #20]
 8009928:	9305      	str	r3, [sp, #20]
 800992a:	6892      	ldr	r2, [r2, #8]
 800992c:	a908      	add	r1, sp, #32
 800992e:	4628      	mov	r0, r5
 8009930:	4790      	blx	r2
 8009932:	9b05      	ldr	r3, [sp, #20]
 8009934:	616b      	str	r3, [r5, #20]
 8009936:	4652      	mov	r2, sl
 8009938:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800993c:	4649      	mov	r1, r9
 800993e:	4628      	mov	r0, r5
 8009940:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 8009944:	f7f9 f810 	bl	8002968 <_ZN8touchgfx8Drawable5setXYEss>
 8009948:	4b23      	ldr	r3, [pc, #140]	@ (80099d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800994a:	9a01      	ldr	r2, [sp, #4]
 800994c:	801a      	strh	r2, [r3, #0]
 800994e:	4b23      	ldr	r3, [pc, #140]	@ (80099dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8009950:	9a02      	ldr	r2, [sp, #8]
 8009952:	801a      	strh	r2, [r3, #0]
 8009954:	4b1d      	ldr	r3, [pc, #116]	@ (80099cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8009956:	9a03      	ldr	r2, [sp, #12]
 8009958:	801a      	strh	r2, [r3, #0]
 800995a:	4b1d      	ldr	r3, [pc, #116]	@ (80099d0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800995c:	9a04      	ldr	r2, [sp, #16]
 800995e:	801a      	strh	r2, [r3, #0]
 8009960:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 8009964:	6823      	ldr	r3, [r4, #0]
 8009966:	4620      	mov	r0, r4
 8009968:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800996a:	4798      	blx	r3
 800996c:	6823      	ldr	r3, [r4, #0]
 800996e:	4620      	mov	r0, r4
 8009970:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009972:	4798      	blx	r3
 8009974:	b00f      	add	sp, #60	@ 0x3c
 8009976:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800997a:	883b      	ldrh	r3, [r7, #0]
 800997c:	f8ab 0000 	strh.w	r0, [fp]
 8009980:	f8aa 3000 	strh.w	r3, [sl]
 8009984:	e789      	b.n	800989a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8009986:	462a      	mov	r2, r5
 8009988:	ab0a      	add	r3, sp, #40	@ 0x28
 800998a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800998e:	6851      	ldr	r1, [r2, #4]
 8009990:	c303      	stmia	r3!, {r0, r1}
 8009992:	e7a9      	b.n	80098e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8009994:	a807      	add	r0, sp, #28
 8009996:	f005 ffcb 	bl	800f930 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800999a:	4606      	mov	r6, r0
 800999c:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800999e:	6803      	ldr	r3, [r0, #0]
 80099a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80099a2:	4798      	blx	r3
 80099a4:	4286      	cmp	r6, r0
 80099a6:	d1b8      	bne.n	800991a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 80099a8:	f7f8 fd3a 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 80099ac:	6803      	ldr	r3, [r0, #0]
 80099ae:	4606      	mov	r6, r0
 80099b0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80099b2:	9305      	str	r3, [sp, #20]
 80099b4:	a807      	add	r0, sp, #28
 80099b6:	f005 ffbb 	bl	800f930 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80099ba:	9b05      	ldr	r3, [sp, #20]
 80099bc:	4601      	mov	r1, r0
 80099be:	4630      	mov	r0, r6
 80099c0:	4798      	blx	r3
 80099c2:	f080 0001 	eor.w	r0, r0, #1
 80099c6:	b2c0      	uxtb	r0, r0
 80099c8:	e7a8      	b.n	800991c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 80099ca:	bf00      	nop
 80099cc:	200119c8 	.word	0x200119c8
 80099d0:	200119ca 	.word	0x200119ca
 80099d4:	200119cc 	.word	0x200119cc
 80099d8:	200119ce 	.word	0x200119ce
 80099dc:	200119d0 	.word	0x200119d0

080099e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 80099e0:	b510      	push	{r4, lr}
 80099e2:	4b07      	ldr	r3, [pc, #28]	@ (8009a00 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 80099e4:	781b      	ldrb	r3, [r3, #0]
 80099e6:	4604      	mov	r4, r0
 80099e8:	b13b      	cbz	r3, 80099fa <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80099ea:	6803      	ldr	r3, [r0, #0]
 80099ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80099ee:	4798      	blx	r3
 80099f0:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80099f2:	4283      	cmp	r3, r0
 80099f4:	d101      	bne.n	80099fa <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80099f6:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 80099f8:	bd10      	pop	{r4, pc}
 80099fa:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 80099fc:	e7fc      	b.n	80099f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 80099fe:	bf00      	nop
 8009a00:	200119d2 	.word	0x200119d2

08009a04 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8009a04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009a08:	b08a      	sub	sp, #40	@ 0x28
 8009a0a:	461d      	mov	r5, r3
 8009a0c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8009a10:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8009a14:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8009a18:	f8ad 3018 	strh.w	r3, [sp, #24]
 8009a1c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8009a20:	f8ad 301a 	strh.w	r3, [sp, #26]
 8009a24:	2400      	movs	r4, #0
 8009a26:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8009a2a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 8009a2e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8009a32:	4690      	mov	r8, r2
 8009a34:	4607      	mov	r7, r0
 8009a36:	9404      	str	r4, [sp, #16]
 8009a38:	f88d 4020 	strb.w	r4, [sp, #32]
 8009a3c:	f7ff ffd0 	bl	80099e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009a40:	fb06 8505 	mla	r5, r6, r5, r8
 8009a44:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8009a48:	6878      	ldr	r0, [r7, #4]
 8009a4a:	9505      	str	r5, [sp, #20]
 8009a4c:	f8ad 601e 	strh.w	r6, [sp, #30]
 8009a50:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8009a54:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 8009a58:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 8009a5c:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 8009a60:	6803      	ldr	r3, [r0, #0]
 8009a62:	a901      	add	r1, sp, #4
 8009a64:	685b      	ldr	r3, [r3, #4]
 8009a66:	4798      	blx	r3
 8009a68:	b00a      	add	sp, #40	@ 0x28
 8009a6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009a6e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8009a6e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009a72:	b08b      	sub	sp, #44	@ 0x2c
 8009a74:	2400      	movs	r4, #0
 8009a76:	461d      	mov	r5, r3
 8009a78:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8009a7c:	4688      	mov	r8, r1
 8009a7e:	4691      	mov	r9, r2
 8009a80:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 8009a84:	9404      	str	r4, [sp, #16]
 8009a86:	4607      	mov	r7, r0
 8009a88:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8009a8c:	f7ff ffa8 	bl	80099e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009a90:	fb06 9505 	mla	r5, r6, r5, r9
 8009a94:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8009a98:	f8ad 3018 	strh.w	r3, [sp, #24]
 8009a9c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8009aa0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 8009aa4:	6878      	ldr	r0, [r7, #4]
 8009aa6:	9505      	str	r5, [sp, #20]
 8009aa8:	f8ad 301a 	strh.w	r3, [sp, #26]
 8009aac:	f8ad 401c 	strh.w	r4, [sp, #28]
 8009ab0:	f8ad 601e 	strh.w	r6, [sp, #30]
 8009ab4:	f8cd 8010 	str.w	r8, [sp, #16]
 8009ab8:	f8ad 4020 	strh.w	r4, [sp, #32]
 8009abc:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8009ac0:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 8009ac4:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 8009ac8:	6803      	ldr	r3, [r0, #0]
 8009aca:	a901      	add	r1, sp, #4
 8009acc:	685b      	ldr	r3, [r3, #4]
 8009ace:	4798      	blx	r3
 8009ad0:	b00b      	add	sp, #44	@ 0x2c
 8009ad2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08009ad8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8009ad8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009adc:	b08a      	sub	sp, #40	@ 0x28
 8009ade:	4698      	mov	r8, r3
 8009ae0:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 8009ae4:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 8009ae8:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 8009aec:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 8009af0:	2300      	movs	r3, #0
 8009af2:	2d0b      	cmp	r5, #11
 8009af4:	4606      	mov	r6, r0
 8009af6:	9304      	str	r3, [sp, #16]
 8009af8:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 8009afc:	d138      	bne.n	8009b70 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8009afe:	2380      	movs	r3, #128	@ 0x80
 8009b00:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8009b04:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8009b08:	f8ad 3018 	strh.w	r3, [sp, #24]
 8009b0c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8009b10:	f8ad 301a 	strh.w	r3, [sp, #26]
 8009b14:	f88d 0020 	strb.w	r0, [sp, #32]
 8009b18:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 8009b1c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8009b20:	4630      	mov	r0, r6
 8009b22:	9203      	str	r2, [sp, #12]
 8009b24:	f7ff ff5c 	bl	80099e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009b28:	2c0b      	cmp	r4, #11
 8009b2a:	bf98      	it	ls
 8009b2c:	4b1b      	ldrls	r3, [pc, #108]	@ (8009b9c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8009b2e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 8009b32:	bf98      	it	ls
 8009b34:	5d19      	ldrbls	r1, [r3, r4]
 8009b36:	f8ad 701e 	strh.w	r7, [sp, #30]
 8009b3a:	bf88      	it	hi
 8009b3c:	2100      	movhi	r1, #0
 8009b3e:	fb02 8307 	mla	r3, r2, r7, r8
 8009b42:	10c9      	asrs	r1, r1, #3
 8009b44:	fb01 0003 	mla	r0, r1, r3, r0
 8009b48:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 8009b4c:	9005      	str	r0, [sp, #20]
 8009b4e:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 8009b52:	6870      	ldr	r0, [r6, #4]
 8009b54:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 8009b58:	2300      	movs	r3, #0
 8009b5a:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8009b5e:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 8009b62:	6803      	ldr	r3, [r0, #0]
 8009b64:	a901      	add	r1, sp, #4
 8009b66:	685b      	ldr	r3, [r3, #4]
 8009b68:	4798      	blx	r3
 8009b6a:	b00a      	add	sp, #40	@ 0x28
 8009b6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009b70:	2d02      	cmp	r5, #2
 8009b72:	d109      	bne.n	8009b88 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8009b74:	28ff      	cmp	r0, #255	@ 0xff
 8009b76:	d105      	bne.n	8009b84 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8009b78:	f1bc 0f00 	cmp.w	ip, #0
 8009b7c:	bf14      	ite	ne
 8009b7e:	2340      	movne	r3, #64	@ 0x40
 8009b80:	2320      	moveq	r3, #32
 8009b82:	e7bd      	b.n	8009b00 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8009b84:	2340      	movs	r3, #64	@ 0x40
 8009b86:	e7bb      	b.n	8009b00 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8009b88:	28ff      	cmp	r0, #255	@ 0xff
 8009b8a:	d105      	bne.n	8009b98 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8009b8c:	f1bc 0f00 	cmp.w	ip, #0
 8009b90:	bf14      	ite	ne
 8009b92:	2304      	movne	r3, #4
 8009b94:	2301      	moveq	r3, #1
 8009b96:	e7b3      	b.n	8009b00 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8009b98:	2304      	movs	r3, #4
 8009b9a:	e7b1      	b.n	8009b00 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8009b9c:	0801faa8 	.word	0x0801faa8

08009ba0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8009ba0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009ba4:	b08b      	sub	sp, #44	@ 0x2c
 8009ba6:	461d      	mov	r5, r3
 8009ba8:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 8009bac:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 8009bb0:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 8009bb4:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8009bb8:	bf14      	ite	ne
 8009bba:	2308      	movne	r3, #8
 8009bbc:	2302      	moveq	r3, #2
 8009bbe:	2400      	movs	r4, #0
 8009bc0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8009bc4:	4688      	mov	r8, r1
 8009bc6:	4693      	mov	fp, r2
 8009bc8:	9404      	str	r4, [sp, #16]
 8009bca:	4607      	mov	r7, r0
 8009bcc:	f7ff ff08 	bl	80099e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009bd0:	2e0b      	cmp	r6, #11
 8009bd2:	bf98      	it	ls
 8009bd4:	4b15      	ldrls	r3, [pc, #84]	@ (8009c2c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8009bd6:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8009bda:	bf98      	it	ls
 8009bdc:	5d9c      	ldrbls	r4, [r3, r6]
 8009bde:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 8009be2:	f8ad 3018 	strh.w	r3, [sp, #24]
 8009be6:	fb05 b50a 	mla	r5, r5, sl, fp
 8009bea:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8009bee:	f8ad 301a 	strh.w	r3, [sp, #26]
 8009bf2:	10e4      	asrs	r4, r4, #3
 8009bf4:	fb04 0405 	mla	r4, r4, r5, r0
 8009bf8:	2300      	movs	r3, #0
 8009bfa:	6878      	ldr	r0, [r7, #4]
 8009bfc:	9405      	str	r4, [sp, #20]
 8009bfe:	f8ad 301c 	strh.w	r3, [sp, #28]
 8009c02:	f8ad a01e 	strh.w	sl, [sp, #30]
 8009c06:	f8cd 8010 	str.w	r8, [sp, #16]
 8009c0a:	f88d 9020 	strb.w	r9, [sp, #32]
 8009c0e:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 8009c12:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 8009c16:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 8009c1a:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 8009c1e:	6803      	ldr	r3, [r0, #0]
 8009c20:	a901      	add	r1, sp, #4
 8009c22:	685b      	ldr	r3, [r3, #4]
 8009c24:	4798      	blx	r3
 8009c26:	b00b      	add	sp, #44	@ 0x2c
 8009c28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009c2c:	0801faa8 	.word	0x0801faa8

08009c30 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8009c30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009c34:	461e      	mov	r6, r3
 8009c36:	4b0a      	ldr	r3, [pc, #40]	@ (8009c60 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8009c38:	460f      	mov	r7, r1
 8009c3a:	881d      	ldrh	r5, [r3, #0]
 8009c3c:	4690      	mov	r8, r2
 8009c3e:	f7f8 fbef 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 8009c42:	6803      	ldr	r3, [r0, #0]
 8009c44:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009c46:	4798      	blx	r3
 8009c48:	280b      	cmp	r0, #11
 8009c4a:	bf9a      	itte	ls
 8009c4c:	4b05      	ldrls	r3, [pc, #20]	@ (8009c64 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8009c4e:	5c1c      	ldrbls	r4, [r3, r0]
 8009c50:	2400      	movhi	r4, #0
 8009c52:	fb08 7005 	mla	r0, r8, r5, r7
 8009c56:	10e4      	asrs	r4, r4, #3
 8009c58:	fb04 6000 	mla	r0, r4, r0, r6
 8009c5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009c60:	200119ce 	.word	0x200119ce
 8009c64:	0801faa8 	.word	0x0801faa8

08009c68 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8009c68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009c6a:	b08b      	sub	sp, #44	@ 0x2c
 8009c6c:	461f      	mov	r7, r3
 8009c6e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8009c72:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8009c76:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8009c7a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8009c7e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8009c82:	f8ad 301a 	strh.w	r3, [sp, #26]
 8009c86:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8009c8a:	f8ad 301c 	strh.w	r3, [sp, #28]
 8009c8e:	2500      	movs	r5, #0
 8009c90:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8009c94:	f88d 3020 	strb.w	r3, [sp, #32]
 8009c98:	4604      	mov	r4, r0
 8009c9a:	4616      	mov	r6, r2
 8009c9c:	9504      	str	r5, [sp, #16]
 8009c9e:	f7ff fe9f 	bl	80099e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009ca2:	463a      	mov	r2, r7
 8009ca4:	4631      	mov	r1, r6
 8009ca6:	4603      	mov	r3, r0
 8009ca8:	4620      	mov	r0, r4
 8009caa:	f7ff ffc1 	bl	8009c30 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8009cae:	4b0e      	ldr	r3, [pc, #56]	@ (8009ce8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8009cb0:	9005      	str	r0, [sp, #20]
 8009cb2:	881b      	ldrh	r3, [r3, #0]
 8009cb4:	f8ad 301e 	strh.w	r3, [sp, #30]
 8009cb8:	f7f8 fbb2 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 8009cbc:	6803      	ldr	r3, [r0, #0]
 8009cbe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009cc0:	4798      	blx	r3
 8009cc2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8009cc4:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 8009cc8:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 8009ccc:	9304      	str	r3, [sp, #16]
 8009cce:	6860      	ldr	r0, [r4, #4]
 8009cd0:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 8009cd4:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 8009cd8:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 8009cdc:	6803      	ldr	r3, [r0, #0]
 8009cde:	a901      	add	r1, sp, #4
 8009ce0:	685b      	ldr	r3, [r3, #4]
 8009ce2:	4798      	blx	r3
 8009ce4:	b00b      	add	sp, #44	@ 0x2c
 8009ce6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009ce8:	200119ce 	.word	0x200119ce

08009cec <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8009cec:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009cee:	b08d      	sub	sp, #52	@ 0x34
 8009cf0:	466b      	mov	r3, sp
 8009cf2:	e883 0006 	stmia.w	r3, {r1, r2}
 8009cf6:	2300      	movs	r3, #0
 8009cf8:	9306      	str	r3, [sp, #24]
 8009cfa:	6803      	ldr	r3, [r0, #0]
 8009cfc:	f8bd 6000 	ldrh.w	r6, [sp]
 8009d00:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8009d02:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8009d06:	2501      	movs	r5, #1
 8009d08:	9503      	str	r5, [sp, #12]
 8009d0a:	4604      	mov	r4, r0
 8009d0c:	4798      	blx	r3
 8009d0e:	463a      	mov	r2, r7
 8009d10:	4631      	mov	r1, r6
 8009d12:	4603      	mov	r3, r0
 8009d14:	4620      	mov	r0, r4
 8009d16:	f7ff ff8b 	bl	8009c30 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8009d1a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8009d1c:	9307      	str	r3, [sp, #28]
 8009d1e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8009d22:	f8ad 3020 	strh.w	r3, [sp, #32]
 8009d26:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8009d2a:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8009d2e:	4b0f      	ldr	r3, [pc, #60]	@ (8009d6c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8009d30:	9004      	str	r0, [sp, #16]
 8009d32:	881b      	ldrh	r3, [r3, #0]
 8009d34:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8009d38:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 8009d3c:	f7f8 fb70 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 8009d40:	6803      	ldr	r3, [r0, #0]
 8009d42:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009d44:	4798      	blx	r3
 8009d46:	23ff      	movs	r3, #255	@ 0xff
 8009d48:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 8009d4c:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 8009d50:	6860      	ldr	r0, [r4, #4]
 8009d52:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 8009d56:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 8009d5a:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 8009d5e:	6803      	ldr	r3, [r0, #0]
 8009d60:	a903      	add	r1, sp, #12
 8009d62:	685b      	ldr	r3, [r3, #4]
 8009d64:	4798      	blx	r3
 8009d66:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 8009d68:	b00d      	add	sp, #52	@ 0x34
 8009d6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009d6c:	200119ce 	.word	0x200119ce

08009d70 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8009d70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009d74:	b08c      	sub	sp, #48	@ 0x30
 8009d76:	461e      	mov	r6, r3
 8009d78:	466d      	mov	r5, sp
 8009d7a:	2300      	movs	r3, #0
 8009d7c:	e885 0006 	stmia.w	r5, {r1, r2}
 8009d80:	9306      	str	r3, [sp, #24]
 8009d82:	6803      	ldr	r3, [r0, #0]
 8009d84:	f8bd 7000 	ldrh.w	r7, [sp]
 8009d88:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8009d8a:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8009d8e:	2501      	movs	r5, #1
 8009d90:	9503      	str	r5, [sp, #12]
 8009d92:	4604      	mov	r4, r0
 8009d94:	4798      	blx	r3
 8009d96:	4642      	mov	r2, r8
 8009d98:	4639      	mov	r1, r7
 8009d9a:	4603      	mov	r3, r0
 8009d9c:	4620      	mov	r0, r4
 8009d9e:	f7ff ff47 	bl	8009c30 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8009da2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8009da6:	f8ad 3020 	strh.w	r3, [sp, #32]
 8009daa:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8009dae:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8009db2:	4b11      	ldr	r3, [pc, #68]	@ (8009df8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8009db4:	9004      	str	r0, [sp, #16]
 8009db6:	881b      	ldrh	r3, [r3, #0]
 8009db8:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8009dbc:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8009dbe:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 8009dc2:	9607      	str	r6, [sp, #28]
 8009dc4:	f7f8 fb2c 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 8009dc8:	6803      	ldr	r3, [r0, #0]
 8009dca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009dcc:	4798      	blx	r3
 8009dce:	23ff      	movs	r3, #255	@ 0xff
 8009dd0:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 8009dd4:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 8009dd8:	6860      	ldr	r0, [r4, #4]
 8009dda:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 8009dde:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 8009de2:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 8009de6:	6803      	ldr	r3, [r0, #0]
 8009de8:	a903      	add	r1, sp, #12
 8009dea:	685b      	ldr	r3, [r3, #4]
 8009dec:	4798      	blx	r3
 8009dee:	4630      	mov	r0, r6
 8009df0:	b00c      	add	sp, #48	@ 0x30
 8009df2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009df6:	bf00      	nop
 8009df8:	200119ce 	.word	0x200119ce

08009dfc <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8009dfc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009dfe:	b085      	sub	sp, #20
 8009e00:	ac02      	add	r4, sp, #8
 8009e02:	e884 0006 	stmia.w	r4, {r1, r2}
 8009e06:	4605      	mov	r5, r0
 8009e08:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8009e0c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8009e10:	f7ff fde6 	bl	80099e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009e14:	463a      	mov	r2, r7
 8009e16:	4603      	mov	r3, r0
 8009e18:	4631      	mov	r1, r6
 8009e1a:	4628      	mov	r0, r5
 8009e1c:	f7ff ff08 	bl	8009c30 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8009e20:	4a05      	ldr	r2, [pc, #20]	@ (8009e38 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8009e22:	682b      	ldr	r3, [r5, #0]
 8009e24:	8812      	ldrh	r2, [r2, #0]
 8009e26:	9200      	str	r2, [sp, #0]
 8009e28:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 8009e2a:	e894 0006 	ldmia.w	r4, {r1, r2}
 8009e2e:	4603      	mov	r3, r0
 8009e30:	4628      	mov	r0, r5
 8009e32:	47b0      	blx	r6
 8009e34:	b005      	add	sp, #20
 8009e36:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009e38:	200119ce 	.word	0x200119ce

08009e3c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8009e3c:	b570      	push	{r4, r5, r6, lr}
 8009e3e:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 8009e42:	4604      	mov	r4, r0
 8009e44:	b19b      	cbz	r3, 8009e6e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8009e46:	2002      	movs	r0, #2
 8009e48:	f7f6 fcde 	bl	8000808 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8009e4c:	2300      	movs	r3, #0
 8009e4e:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 8009e52:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 8009e56:	6823      	ldr	r3, [r4, #0]
 8009e58:	4620      	mov	r0, r4
 8009e5a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
 8009e5e:	f7ff fdbf 	bl	80099e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009e62:	462b      	mov	r3, r5
 8009e64:	4601      	mov	r1, r0
 8009e66:	4620      	mov	r0, r4
 8009e68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009e6c:	4718      	bx	r3
 8009e6e:	bd70      	pop	{r4, r5, r6, pc}

08009e70 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8009e70:	b538      	push	{r3, r4, r5, lr}
 8009e72:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 8009e76:	428b      	cmp	r3, r1
 8009e78:	4604      	mov	r4, r0
 8009e7a:	460d      	mov	r5, r1
 8009e7c:	d006      	beq.n	8009e8c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8009e7e:	6803      	ldr	r3, [r0, #0]
 8009e80:	b929      	cbnz	r1, 8009e8e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8009e82:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 8009e86:	4798      	blx	r3
 8009e88:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 8009e8c:	bd38      	pop	{r3, r4, r5, pc}
 8009e8e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 8009e92:	e7f8      	b.n	8009e86 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08009e94 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8009e94:	b510      	push	{r4, lr}
 8009e96:	4b0d      	ldr	r3, [pc, #52]	@ (8009ecc <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8009e98:	781b      	ldrb	r3, [r3, #0]
 8009e9a:	4604      	mov	r4, r0
 8009e9c:	b95b      	cbnz	r3, 8009eb6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8009e9e:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 8009ea2:	2b02      	cmp	r3, #2
 8009ea4:	d007      	beq.n	8009eb6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8009ea6:	6840      	ldr	r0, [r0, #4]
 8009ea8:	f000 f912 	bl	800a0d0 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8009eac:	b118      	cbz	r0, 8009eb6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8009eae:	6862      	ldr	r2, [r4, #4]
 8009eb0:	7a53      	ldrb	r3, [r2, #9]
 8009eb2:	2b00      	cmp	r3, #0
 8009eb4:	d0fc      	beq.n	8009eb0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8009eb6:	f7f6 fdeb 	bl	8000a90 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8009eba:	4620      	mov	r0, r4
 8009ebc:	2100      	movs	r1, #0
 8009ebe:	f7ff ffd7 	bl	8009e70 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8009ec2:	4620      	mov	r0, r4
 8009ec4:	f7ff fd8c 	bl	80099e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009ec8:	bd10      	pop	{r4, pc}
 8009eca:	bf00      	nop
 8009ecc:	200119d2 	.word	0x200119d2

08009ed0 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8009ed0:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8009ed4:	1a13      	subs	r3, r2, r0
 8009ed6:	4258      	negs	r0, r3
 8009ed8:	4158      	adcs	r0, r3
 8009eda:	4770      	bx	lr

08009edc <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8009edc:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8009ee0:	1a9b      	subs	r3, r3, r2
 8009ee2:	2b00      	cmp	r3, #0
 8009ee4:	bfdc      	itt	le
 8009ee6:	6882      	ldrle	r2, [r0, #8]
 8009ee8:	189b      	addle	r3, r3, r2
 8009eea:	2b01      	cmp	r3, #1
 8009eec:	bfcc      	ite	gt
 8009eee:	2000      	movgt	r0, #0
 8009ef0:	2001      	movle	r0, #1
 8009ef2:	4770      	bx	lr

08009ef4 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8009ef4:	6902      	ldr	r2, [r0, #16]
 8009ef6:	6843      	ldr	r3, [r0, #4]
 8009ef8:	2024      	movs	r0, #36	@ 0x24
 8009efa:	fb00 3002 	mla	r0, r0, r2, r3
 8009efe:	4770      	bx	lr

08009f00 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8009f00:	6803      	ldr	r3, [r0, #0]
 8009f02:	691b      	ldr	r3, [r3, #16]
 8009f04:	4718      	bx	r3

08009f06 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8009f06:	b570      	push	{r4, r5, r6, lr}
 8009f08:	2301      	movs	r3, #1
 8009f0a:	7203      	strb	r3, [r0, #8]
 8009f0c:	4604      	mov	r4, r0
 8009f0e:	6840      	ldr	r0, [r0, #4]
 8009f10:	6803      	ldr	r3, [r0, #0]
 8009f12:	699b      	ldr	r3, [r3, #24]
 8009f14:	4798      	blx	r3
 8009f16:	6803      	ldr	r3, [r0, #0]
 8009f18:	2b40      	cmp	r3, #64	@ 0x40
 8009f1a:	4605      	mov	r5, r0
 8009f1c:	d00c      	beq.n	8009f38 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8009f1e:	d810      	bhi.n	8009f42 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8009f20:	2b04      	cmp	r3, #4
 8009f22:	d01d      	beq.n	8009f60 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8009f24:	d804      	bhi.n	8009f30 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8009f26:	2b01      	cmp	r3, #1
 8009f28:	d006      	beq.n	8009f38 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8009f2a:	2b02      	cmp	r3, #2
 8009f2c:	d02c      	beq.n	8009f88 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8009f2e:	bd70      	pop	{r4, r5, r6, pc}
 8009f30:	2b08      	cmp	r3, #8
 8009f32:	d01d      	beq.n	8009f70 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8009f34:	2b20      	cmp	r3, #32
 8009f36:	d1fa      	bne.n	8009f2e <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8009f38:	6823      	ldr	r3, [r4, #0]
 8009f3a:	4620      	mov	r0, r4
 8009f3c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8009f3e:	4798      	blx	r3
 8009f40:	e013      	b.n	8009f6a <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8009f42:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8009f46:	d0f7      	beq.n	8009f38 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8009f48:	d804      	bhi.n	8009f54 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8009f4a:	2b80      	cmp	r3, #128	@ 0x80
 8009f4c:	d0f4      	beq.n	8009f38 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8009f4e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8009f52:	e7f0      	b.n	8009f36 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8009f54:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8009f58:	d0ee      	beq.n	8009f38 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8009f5a:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8009f5e:	e7e5      	b.n	8009f2c <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8009f60:	6823      	ldr	r3, [r4, #0]
 8009f62:	7f01      	ldrb	r1, [r0, #28]
 8009f64:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009f66:	4620      	mov	r0, r4
 8009f68:	4798      	blx	r3
 8009f6a:	6823      	ldr	r3, [r4, #0]
 8009f6c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8009f6e:	e006      	b.n	8009f7e <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8009f70:	6823      	ldr	r3, [r4, #0]
 8009f72:	7f01      	ldrb	r1, [r0, #28]
 8009f74:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009f76:	4620      	mov	r0, r4
 8009f78:	4798      	blx	r3
 8009f7a:	6823      	ldr	r3, [r4, #0]
 8009f7c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8009f7e:	4629      	mov	r1, r5
 8009f80:	4620      	mov	r0, r4
 8009f82:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009f86:	4718      	bx	r3
 8009f88:	6823      	ldr	r3, [r4, #0]
 8009f8a:	4620      	mov	r0, r4
 8009f8c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8009f8e:	4798      	blx	r3
 8009f90:	e7f3      	b.n	8009f7a <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08009f92 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8009f92:	4770      	bx	lr

08009f94 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8009f94:	4770      	bx	lr

08009f96 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8009f96:	4770      	bx	lr

08009f98 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8009f98:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8009f9c:	1ad2      	subs	r2, r2, r3
 8009f9e:	2a00      	cmp	r2, #0
 8009fa0:	b510      	push	{r4, lr}
 8009fa2:	bfdc      	itt	le
 8009fa4:	6884      	ldrle	r4, [r0, #8]
 8009fa6:	1912      	addle	r2, r2, r4
 8009fa8:	2a01      	cmp	r2, #1
 8009faa:	dd16      	ble.n	8009fda <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8009fac:	6842      	ldr	r2, [r0, #4]
 8009fae:	2424      	movs	r4, #36	@ 0x24
 8009fb0:	fb04 2303 	mla	r3, r4, r3, r2
 8009fb4:	f101 0220 	add.w	r2, r1, #32
 8009fb8:	f851 4b04 	ldr.w	r4, [r1], #4
 8009fbc:	f843 4b04 	str.w	r4, [r3], #4
 8009fc0:	4291      	cmp	r1, r2
 8009fc2:	d1f9      	bne.n	8009fb8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8009fc4:	780a      	ldrb	r2, [r1, #0]
 8009fc6:	701a      	strb	r2, [r3, #0]
 8009fc8:	68c3      	ldr	r3, [r0, #12]
 8009fca:	6882      	ldr	r2, [r0, #8]
 8009fcc:	f3bf 8f5b 	dmb	ish
 8009fd0:	3301      	adds	r3, #1
 8009fd2:	429a      	cmp	r2, r3
 8009fd4:	bfd8      	it	le
 8009fd6:	1a9b      	suble	r3, r3, r2
 8009fd8:	60c3      	str	r3, [r0, #12]
 8009fda:	bd10      	pop	{r4, pc}

08009fdc <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8009fdc:	6903      	ldr	r3, [r0, #16]
 8009fde:	6882      	ldr	r2, [r0, #8]
 8009fe0:	f3bf 8f5b 	dmb	ish
 8009fe4:	3301      	adds	r3, #1
 8009fe6:	429a      	cmp	r2, r3
 8009fe8:	bfd8      	it	le
 8009fea:	1a9b      	suble	r3, r3, r2
 8009fec:	6103      	str	r3, [r0, #16]
 8009fee:	4770      	bx	lr

08009ff0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8009ff0:	b570      	push	{r4, r5, r6, lr}
 8009ff2:	4604      	mov	r4, r0
 8009ff4:	460e      	mov	r6, r1
 8009ff6:	6860      	ldr	r0, [r4, #4]
 8009ff8:	6803      	ldr	r3, [r0, #0]
 8009ffa:	685b      	ldr	r3, [r3, #4]
 8009ffc:	4798      	blx	r3
 8009ffe:	2800      	cmp	r0, #0
 800a000:	d1f9      	bne.n	8009ff6 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800a002:	4d0d      	ldr	r5, [pc, #52]	@ (800a038 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800a004:	6828      	ldr	r0, [r5, #0]
 800a006:	6803      	ldr	r3, [r0, #0]
 800a008:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800a00a:	4798      	blx	r3
 800a00c:	f7f6 fd4e 	bl	8000aac <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800a010:	6828      	ldr	r0, [r5, #0]
 800a012:	2101      	movs	r1, #1
 800a014:	f7ff ff2c 	bl	8009e70 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800a018:	6860      	ldr	r0, [r4, #4]
 800a01a:	6803      	ldr	r3, [r0, #0]
 800a01c:	4631      	mov	r1, r6
 800a01e:	689b      	ldr	r3, [r3, #8]
 800a020:	4798      	blx	r3
 800a022:	6823      	ldr	r3, [r4, #0]
 800a024:	4620      	mov	r0, r4
 800a026:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a028:	4798      	blx	r3
 800a02a:	6828      	ldr	r0, [r5, #0]
 800a02c:	6803      	ldr	r3, [r0, #0]
 800a02e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a032:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800a034:	4718      	bx	r3
 800a036:	bf00      	nop
 800a038:	200119d4 	.word	0x200119d4

0800a03c <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800a03c:	b508      	push	{r3, lr}
 800a03e:	f7f6 fd27 	bl	8000a90 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a042:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a046:	f7f6 bd2b 	b.w	8000aa0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800a04a <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800a04a:	b510      	push	{r4, lr}
 800a04c:	2114      	movs	r1, #20
 800a04e:	4604      	mov	r4, r0
 800a050:	f012 ff78 	bl	801cf44 <_ZdlPvj>
 800a054:	4620      	mov	r0, r4
 800a056:	bd10      	pop	{r4, pc}

0800a058 <_ZN8touchgfx13DMA_Interface5startEv>:
 800a058:	b510      	push	{r4, lr}
 800a05a:	4604      	mov	r4, r0
 800a05c:	6840      	ldr	r0, [r0, #4]
 800a05e:	6803      	ldr	r3, [r0, #0]
 800a060:	681b      	ldr	r3, [r3, #0]
 800a062:	4798      	blx	r3
 800a064:	b948      	cbnz	r0, 800a07a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a066:	7a63      	ldrb	r3, [r4, #9]
 800a068:	b13b      	cbz	r3, 800a07a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a06a:	7a23      	ldrb	r3, [r4, #8]
 800a06c:	b92b      	cbnz	r3, 800a07a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a06e:	6823      	ldr	r3, [r4, #0]
 800a070:	4620      	mov	r0, r4
 800a072:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a074:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a078:	4718      	bx	r3
 800a07a:	bd10      	pop	{r4, pc}

0800a07c <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800a07c:	b570      	push	{r4, r5, r6, lr}
 800a07e:	4604      	mov	r4, r0
 800a080:	6840      	ldr	r0, [r0, #4]
 800a082:	6803      	ldr	r3, [r0, #0]
 800a084:	681b      	ldr	r3, [r3, #0]
 800a086:	4798      	blx	r3
 800a088:	4605      	mov	r5, r0
 800a08a:	b930      	cbnz	r0, 800a09a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a08c:	7a23      	ldrb	r3, [r4, #8]
 800a08e:	b123      	cbz	r3, 800a09a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a090:	6860      	ldr	r0, [r4, #4]
 800a092:	6803      	ldr	r3, [r0, #0]
 800a094:	695b      	ldr	r3, [r3, #20]
 800a096:	4798      	blx	r3
 800a098:	7225      	strb	r5, [r4, #8]
 800a09a:	6860      	ldr	r0, [r4, #4]
 800a09c:	6803      	ldr	r3, [r0, #0]
 800a09e:	681b      	ldr	r3, [r3, #0]
 800a0a0:	4798      	blx	r3
 800a0a2:	b928      	cbnz	r0, 800a0b0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800a0a4:	6823      	ldr	r3, [r4, #0]
 800a0a6:	4620      	mov	r0, r4
 800a0a8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a0aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a0ae:	4718      	bx	r3
 800a0b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a0b4:	f7f6 bd02 	b.w	8000abc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800a0b8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800a0b8:	b510      	push	{r4, lr}
 800a0ba:	4c04      	ldr	r4, [pc, #16]	@ (800a0cc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800a0bc:	6082      	str	r2, [r0, #8]
 800a0be:	2200      	movs	r2, #0
 800a0c0:	e9c0 4100 	strd	r4, r1, [r0]
 800a0c4:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800a0c8:	bd10      	pop	{r4, pc}
 800a0ca:	bf00      	nop
 800a0cc:	0801fabc 	.word	0x0801fabc

0800a0d0 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800a0d0:	6840      	ldr	r0, [r0, #4]
 800a0d2:	6803      	ldr	r3, [r0, #0]
 800a0d4:	681b      	ldr	r3, [r3, #0]
 800a0d6:	4718      	bx	r3

0800a0d8 <_ZN8touchgfx13AnimatedImage12setBitmapEndERKNS_6BitmapE>:
 800a0d8:	880b      	ldrh	r3, [r1, #0]
 800a0da:	8643      	strh	r3, [r0, #50]	@ 0x32
 800a0dc:	4770      	bx	lr

0800a0de <_ZN8touchgfx13AnimatedImageD1Ev>:
 800a0de:	4770      	bx	lr

0800a0e0 <_ZN8touchgfx13AnimatedImage9setBitmapERKNS_6BitmapE>:
 800a0e0:	880b      	ldrh	r3, [r1, #0]
 800a0e2:	8603      	strh	r3, [r0, #48]	@ 0x30
 800a0e4:	f000 bb7d 	b.w	800a7e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>

0800a0e8 <_ZN8touchgfx13AnimatedImage13stopAnimationEv>:
 800a0e8:	b513      	push	{r0, r1, r4, lr}
 800a0ea:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
 800a0ee:	4604      	mov	r4, r0
 800a0f0:	b143      	cbz	r3, 800a104 <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x1c>
 800a0f2:	f002 f9bf 	bl	800c474 <_ZN8touchgfx11Application11getInstanceEv>
 800a0f6:	4621      	mov	r1, r4
 800a0f8:	3004      	adds	r0, #4
 800a0fa:	f002 fa08 	bl	800c50e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800a0fe:	2300      	movs	r3, #0
 800a100:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
 800a104:	f894 3036 	ldrb.w	r3, [r4, #54]	@ 0x36
 800a108:	b163      	cbz	r3, 800a124 <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x3c>
 800a10a:	8e63      	ldrh	r3, [r4, #50]	@ 0x32
 800a10c:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a110:	a901      	add	r1, sp, #4
 800a112:	4620      	mov	r0, r4
 800a114:	f000 fb65 	bl	800a7e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a118:	6823      	ldr	r3, [r4, #0]
 800a11a:	4620      	mov	r0, r4
 800a11c:	695b      	ldr	r3, [r3, #20]
 800a11e:	4798      	blx	r3
 800a120:	b002      	add	sp, #8
 800a122:	bd10      	pop	{r4, pc}
 800a124:	8e23      	ldrh	r3, [r4, #48]	@ 0x30
 800a126:	e7f1      	b.n	800a10c <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x24>

0800a128 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>:
 800a128:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a12a:	8e05      	ldrh	r5, [r0, #48]	@ 0x30
 800a12c:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 800a130:	42bd      	cmp	r5, r7
 800a132:	4604      	mov	r4, r0
 800a134:	d01a      	beq.n	800a16c <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x44>
 800a136:	8e46      	ldrh	r6, [r0, #50]	@ 0x32
 800a138:	42be      	cmp	r6, r7
 800a13a:	d017      	beq.n	800a16c <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x44>
 800a13c:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
 800a140:	f880 3037 	strb.w	r3, [r0, #55]	@ 0x37
 800a144:	b1a1      	cbz	r1, 800a170 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x48>
 800a146:	b142      	cbz	r2, 800a15a <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x32>
 800a148:	a902      	add	r1, sp, #8
 800a14a:	f821 6d04 	strh.w	r6, [r1, #-4]!
 800a14e:	f000 fb48 	bl	800a7e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a152:	6823      	ldr	r3, [r4, #0]
 800a154:	4620      	mov	r0, r4
 800a156:	695b      	ldr	r3, [r3, #20]
 800a158:	4798      	blx	r3
 800a15a:	f002 f98b 	bl	800c474 <_ZN8touchgfx11Application11getInstanceEv>
 800a15e:	4621      	mov	r1, r4
 800a160:	3004      	adds	r0, #4
 800a162:	f002 fa7d 	bl	800c660 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800a166:	2301      	movs	r3, #1
 800a168:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
 800a16c:	b003      	add	sp, #12
 800a16e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a170:	2a00      	cmp	r2, #0
 800a172:	d0f2      	beq.n	800a15a <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x32>
 800a174:	a902      	add	r1, sp, #8
 800a176:	f821 5d04 	strh.w	r5, [r1, #-4]!
 800a17a:	e7e8      	b.n	800a14e <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x26>

0800a17c <_ZN8touchgfx13AnimatedImageD0Ev>:
 800a17c:	b510      	push	{r4, lr}
 800a17e:	213c      	movs	r1, #60	@ 0x3c
 800a180:	4604      	mov	r4, r0
 800a182:	f012 fedf 	bl	801cf44 <_ZdlPvj>
 800a186:	4620      	mov	r0, r4
 800a188:	bd10      	pop	{r4, pc}

0800a18a <_ZN8touchgfx13AnimatedImage14pauseAnimationEv>:
 800a18a:	b510      	push	{r4, lr}
 800a18c:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
 800a190:	4604      	mov	r4, r0
 800a192:	b14b      	cbz	r3, 800a1a8 <_ZN8touchgfx13AnimatedImage14pauseAnimationEv+0x1e>
 800a194:	f002 f96e 	bl	800c474 <_ZN8touchgfx11Application11getInstanceEv>
 800a198:	4621      	mov	r1, r4
 800a19a:	3004      	adds	r0, #4
 800a19c:	f002 f9b7 	bl	800c50e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800a1a0:	2300      	movs	r3, #0
 800a1a2:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
 800a1a6:	bd10      	pop	{r4, pc}
 800a1a8:	f002 f964 	bl	800c474 <_ZN8touchgfx11Application11getInstanceEv>
 800a1ac:	4621      	mov	r1, r4
 800a1ae:	3004      	adds	r0, #4
 800a1b0:	f002 fa56 	bl	800c660 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800a1b4:	2301      	movs	r3, #1
 800a1b6:	e7f4      	b.n	800a1a2 <_ZN8touchgfx13AnimatedImage14pauseAnimationEv+0x18>

0800a1b8 <_ZN8touchgfx13AnimatedImage15handleTickEventEv>:
 800a1b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a1ba:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
 800a1be:	4604      	mov	r4, r0
 800a1c0:	2b00      	cmp	r3, #0
 800a1c2:	d042      	beq.n	800a24a <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
 800a1c4:	f890 3035 	ldrb.w	r3, [r0, #53]	@ 0x35
 800a1c8:	f890 2034 	ldrb.w	r2, [r0, #52]	@ 0x34
 800a1cc:	3301      	adds	r3, #1
 800a1ce:	b2db      	uxtb	r3, r3
 800a1d0:	429a      	cmp	r2, r3
 800a1d2:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
 800a1d6:	d138      	bne.n	800a24a <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
 800a1d8:	2300      	movs	r3, #0
 800a1da:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
 800a1de:	8e41      	ldrh	r1, [r0, #50]	@ 0x32
 800a1e0:	8cc3      	ldrh	r3, [r0, #38]	@ 0x26
 800a1e2:	f890 2036 	ldrb.w	r2, [r0, #54]	@ 0x36
 800a1e6:	4299      	cmp	r1, r3
 800a1e8:	d100      	bne.n	800a1ec <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x34>
 800a1ea:	b122      	cbz	r2, 800a1f6 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x3e>
 800a1ec:	8e21      	ldrh	r1, [r4, #48]	@ 0x30
 800a1ee:	4299      	cmp	r1, r3
 800a1f0:	d12f      	bne.n	800a252 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x9a>
 800a1f2:	2a00      	cmp	r2, #0
 800a1f4:	d034      	beq.n	800a260 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0xa8>
 800a1f6:	f894 5037 	ldrb.w	r5, [r4, #55]	@ 0x37
 800a1fa:	b93d      	cbnz	r5, 800a20c <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x54>
 800a1fc:	f002 f93a 	bl	800c474 <_ZN8touchgfx11Application11getInstanceEv>
 800a200:	4621      	mov	r1, r4
 800a202:	3004      	adds	r0, #4
 800a204:	f002 f983 	bl	800c50e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800a208:	f884 5038 	strb.w	r5, [r4, #56]	@ 0x38
 800a20c:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800a20e:	b140      	cbz	r0, 800a222 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x6a>
 800a210:	6803      	ldr	r3, [r0, #0]
 800a212:	68db      	ldr	r3, [r3, #12]
 800a214:	4798      	blx	r3
 800a216:	b120      	cbz	r0, 800a222 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x6a>
 800a218:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800a21a:	6803      	ldr	r3, [r0, #0]
 800a21c:	4621      	mov	r1, r4
 800a21e:	689b      	ldr	r3, [r3, #8]
 800a220:	4798      	blx	r3
 800a222:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800a226:	b183      	cbz	r3, 800a24a <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
 800a228:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
 800a22c:	b16b      	cbz	r3, 800a24a <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
 800a22e:	f894 3036 	ldrb.w	r3, [r4, #54]	@ 0x36
 800a232:	b163      	cbz	r3, 800a24e <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x96>
 800a234:	8e63      	ldrh	r3, [r4, #50]	@ 0x32
 800a236:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a23a:	a901      	add	r1, sp, #4
 800a23c:	4620      	mov	r0, r4
 800a23e:	f000 fad0 	bl	800a7e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a242:	6823      	ldr	r3, [r4, #0]
 800a244:	4620      	mov	r0, r4
 800a246:	695b      	ldr	r3, [r3, #20]
 800a248:	4798      	blx	r3
 800a24a:	b003      	add	sp, #12
 800a24c:	bd30      	pop	{r4, r5, pc}
 800a24e:	8e23      	ldrh	r3, [r4, #48]	@ 0x30
 800a250:	e7f1      	b.n	800a236 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x7e>
 800a252:	b12a      	cbz	r2, 800a260 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0xa8>
 800a254:	3b01      	subs	r3, #1
 800a256:	a902      	add	r1, sp, #8
 800a258:	b29b      	uxth	r3, r3
 800a25a:	f821 3d04 	strh.w	r3, [r1, #-4]!
 800a25e:	e7ed      	b.n	800a23c <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x84>
 800a260:	3301      	adds	r3, #1
 800a262:	e7f8      	b.n	800a256 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x9e>

0800a264 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800a264:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
 800a268:	b12a      	cbz	r2, 800a276 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800a26a:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800a26e:	b112      	cbz	r2, 800a276 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800a270:	6803      	ldr	r3, [r0, #0]
 800a272:	695b      	ldr	r3, [r3, #20]
 800a274:	4718      	bx	r3
 800a276:	4770      	bx	lr

0800a278 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>:
 800a278:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a27a:	ac02      	add	r4, sp, #8
 800a27c:	6803      	ldr	r3, [r0, #0]
 800a27e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800a280:	f824 1d04 	strh.w	r1, [r4, #-4]!
 800a284:	4605      	mov	r5, r0
 800a286:	4621      	mov	r1, r4
 800a288:	4616      	mov	r6, r2
 800a28a:	4798      	blx	r3
 800a28c:	682b      	ldr	r3, [r5, #0]
 800a28e:	4621      	mov	r1, r4
 800a290:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800a292:	f8ad 6004 	strh.w	r6, [sp, #4]
 800a296:	4628      	mov	r0, r5
 800a298:	4798      	blx	r3
 800a29a:	b002      	add	sp, #8
 800a29c:	bd70      	pop	{r4, r5, r6, pc}

0800a29e <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>:
 800a29e:	2300      	movs	r3, #0
 800a2a0:	f880 1034 	strb.w	r1, [r0, #52]	@ 0x34
 800a2a4:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
 800a2a8:	4770      	bx	lr
	...

0800a2ac <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800a2ac:	4b07      	ldr	r3, [pc, #28]	@ (800a2cc <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800a2ae:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800a2b0:	881b      	ldrh	r3, [r3, #0]
 800a2b2:	4293      	cmp	r3, r2
 800a2b4:	bf81      	itttt	hi
 800a2b6:	4b06      	ldrhi	r3, [pc, #24]	@ (800a2d0 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800a2b8:	681b      	ldrhi	r3, [r3, #0]
 800a2ba:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800a2be:	7858      	ldrbhi	r0, [r3, #1]
 800a2c0:	bf8c      	ite	hi
 800a2c2:	f000 0003 	andhi.w	r0, r0, #3
 800a2c6:	2000      	movls	r0, #0
 800a2c8:	4770      	bx	lr
 800a2ca:	bf00      	nop
 800a2cc:	20011a28 	.word	0x20011a28
 800a2d0:	20011a24 	.word	0x20011a24

0800a2d4 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800a2d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a2d8:	4b10      	ldr	r3, [pc, #64]	@ (800a31c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800a2da:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800a2dc:	881b      	ldrh	r3, [r3, #0]
 800a2de:	428b      	cmp	r3, r1
 800a2e0:	4604      	mov	r4, r0
 800a2e2:	d918      	bls.n	800a316 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800a2e4:	6803      	ldr	r3, [r0, #0]
 800a2e6:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
 800a2e8:	4b0d      	ldr	r3, [pc, #52]	@ (800a320 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800a2ea:	6818      	ldr	r0, [r3, #0]
 800a2ec:	f7f9 f8b4 	bl	8003458 <_ZNK8touchgfx5Texts7getTextEt>
 800a2f0:	6823      	ldr	r3, [r4, #0]
 800a2f2:	4606      	mov	r6, r0
 800a2f4:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800a2f6:	4620      	mov	r0, r4
 800a2f8:	4798      	blx	r3
 800a2fa:	6823      	ldr	r3, [r4, #0]
 800a2fc:	4607      	mov	r7, r0
 800a2fe:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800a302:	4620      	mov	r0, r4
 800a304:	4798      	blx	r3
 800a306:	463a      	mov	r2, r7
 800a308:	4603      	mov	r3, r0
 800a30a:	4631      	mov	r1, r6
 800a30c:	4620      	mov	r0, r4
 800a30e:	46ac      	mov	ip, r5
 800a310:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a314:	4760      	bx	ip
 800a316:	2000      	movs	r0, #0
 800a318:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a31c:	20011a28 	.word	0x20011a28
 800a320:	20011a30 	.word	0x20011a30

0800a324 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800a324:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800a328:	4b17      	ldr	r3, [pc, #92]	@ (800a388 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800a32a:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800a32c:	881b      	ldrh	r3, [r3, #0]
 800a32e:	428b      	cmp	r3, r1
 800a330:	4604      	mov	r4, r0
 800a332:	d926      	bls.n	800a382 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800a334:	4b15      	ldr	r3, [pc, #84]	@ (800a38c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800a336:	681b      	ldr	r3, [r3, #0]
 800a338:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800a33c:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800a340:	4b13      	ldr	r3, [pc, #76]	@ (800a390 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800a342:	7855      	ldrb	r5, [r2, #1]
 800a344:	681b      	ldr	r3, [r3, #0]
 800a346:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800a34a:	6833      	ldr	r3, [r6, #0]
 800a34c:	69df      	ldr	r7, [r3, #28]
 800a34e:	4b11      	ldr	r3, [pc, #68]	@ (800a394 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800a350:	6818      	ldr	r0, [r3, #0]
 800a352:	f7f9 f881 	bl	8003458 <_ZNK8touchgfx5Texts7getTextEt>
 800a356:	6823      	ldr	r3, [r4, #0]
 800a358:	4680      	mov	r8, r0
 800a35a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800a35c:	4620      	mov	r0, r4
 800a35e:	4798      	blx	r3
 800a360:	6823      	ldr	r3, [r4, #0]
 800a362:	4681      	mov	r9, r0
 800a364:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800a368:	4620      	mov	r0, r4
 800a36a:	4798      	blx	r3
 800a36c:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800a370:	9000      	str	r0, [sp, #0]
 800a372:	464b      	mov	r3, r9
 800a374:	4642      	mov	r2, r8
 800a376:	4629      	mov	r1, r5
 800a378:	4630      	mov	r0, r6
 800a37a:	47b8      	blx	r7
 800a37c:	b003      	add	sp, #12
 800a37e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a382:	2000      	movs	r0, #0
 800a384:	e7fa      	b.n	800a37c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800a386:	bf00      	nop
 800a388:	20011a28 	.word	0x20011a28
 800a38c:	20011a24 	.word	0x20011a24
 800a390:	20011a2c 	.word	0x20011a2c
 800a394:	20011a30 	.word	0x20011a30

0800a398 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800a398:	b40e      	push	{r1, r2, r3}
 800a39a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a39e:	4b2f      	ldr	r3, [pc, #188]	@ (800a45c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800a3a0:	881a      	ldrh	r2, [r3, #0]
 800a3a2:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 800a3a4:	429a      	cmp	r2, r3
 800a3a6:	b09d      	sub	sp, #116	@ 0x74
 800a3a8:	4604      	mov	r4, r0
 800a3aa:	d954      	bls.n	800a456 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800a3ac:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 800a460 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800a3b0:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 800a464 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800a3b4:	aa26      	add	r2, sp, #152	@ 0x98
 800a3b6:	9202      	str	r2, [sp, #8]
 800a3b8:	f8d9 2000 	ldr.w	r2, [r9]
 800a3bc:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800a3c0:	f8d8 3000 	ldr.w	r3, [r8]
 800a3c4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800a3c8:	682b      	ldr	r3, [r5, #0]
 800a3ca:	4628      	mov	r0, r5
 800a3cc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a3ce:	4798      	blx	r3
 800a3d0:	b207      	sxth	r7, r0
 800a3d2:	4606      	mov	r6, r0
 800a3d4:	a803      	add	r0, sp, #12
 800a3d6:	f003 fdc2 	bl	800df5e <_ZN8touchgfx12TextProviderC1Ev>
 800a3da:	682b      	ldr	r3, [r5, #0]
 800a3dc:	4628      	mov	r0, r5
 800a3de:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800a3e0:	4798      	blx	r3
 800a3e2:	682b      	ldr	r3, [r5, #0]
 800a3e4:	4682      	mov	sl, r0
 800a3e6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800a3e8:	4628      	mov	r0, r5
 800a3ea:	4798      	blx	r3
 800a3ec:	4653      	mov	r3, sl
 800a3ee:	9000      	str	r0, [sp, #0]
 800a3f0:	9a02      	ldr	r2, [sp, #8]
 800a3f2:	9925      	ldr	r1, [sp, #148]	@ 0x94
 800a3f4:	a803      	add	r0, sp, #12
 800a3f6:	f003 fe05 	bl	800e004 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800a3fa:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800a3fc:	f8d9 3000 	ldr.w	r3, [r9]
 800a400:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
 800a404:	8925      	ldrh	r5, [r4, #8]
 800a406:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800a40a:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800a40e:	eba5 050c 	sub.w	r5, r5, ip
 800a412:	784a      	ldrb	r2, [r1, #1]
 800a414:	f8d8 3000 	ldr.w	r3, [r8]
 800a418:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
 800a41c:	b22d      	sxth	r5, r5
 800a41e:	9500      	str	r5, [sp, #0]
 800a420:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800a424:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800a428:	a803      	add	r0, sp, #12
 800a42a:	f001 fb91 	bl	800bb50 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800a42e:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
 800a432:	18b9      	adds	r1, r7, r2
 800a434:	2900      	cmp	r1, #0
 800a436:	b203      	sxth	r3, r0
 800a438:	dd0b      	ble.n	800a452 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800a43a:	3b01      	subs	r3, #1
 800a43c:	fb13 f302 	smulbb	r3, r3, r2
 800a440:	fb16 3300 	smlabb	r3, r6, r0, r3
 800a444:	b21f      	sxth	r7, r3
 800a446:	4638      	mov	r0, r7
 800a448:	b01d      	add	sp, #116	@ 0x74
 800a44a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a44e:	b003      	add	sp, #12
 800a450:	4770      	bx	lr
 800a452:	2b00      	cmp	r3, #0
 800a454:	dcf7      	bgt.n	800a446 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800a456:	2700      	movs	r7, #0
 800a458:	e7f5      	b.n	800a446 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800a45a:	bf00      	nop
 800a45c:	20011a28 	.word	0x20011a28
 800a460:	20011a24 	.word	0x20011a24
 800a464:	20011a2c 	.word	0x20011a2c

0800a468 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800a468:	b570      	push	{r4, r5, r6, lr}
 800a46a:	6803      	ldr	r3, [r0, #0]
 800a46c:	4604      	mov	r4, r0
 800a46e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a470:	4615      	mov	r5, r2
 800a472:	4798      	blx	r3
 800a474:	6823      	ldr	r3, [r4, #0]
 800a476:	4629      	mov	r1, r5
 800a478:	4620      	mov	r0, r4
 800a47a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800a47c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a480:	4718      	bx	r3
	...

0800a484 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800a484:	b538      	push	{r3, r4, r5, lr}
 800a486:	4b0e      	ldr	r3, [pc, #56]	@ (800a4c0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800a488:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800a48a:	881b      	ldrh	r3, [r3, #0]
 800a48c:	429a      	cmp	r2, r3
 800a48e:	4604      	mov	r4, r0
 800a490:	d214      	bcs.n	800a4bc <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800a492:	6803      	ldr	r3, [r0, #0]
 800a494:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800a496:	4798      	blx	r3
 800a498:	6823      	ldr	r3, [r4, #0]
 800a49a:	4605      	mov	r5, r0
 800a49c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800a49e:	4620      	mov	r0, r4
 800a4a0:	4798      	blx	r3
 800a4a2:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800a4a6:	b22d      	sxth	r5, r5
 800a4a8:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800a4ac:	4601      	mov	r1, r0
 800a4ae:	bf06      	itte	eq
 800a4b0:	4602      	moveq	r2, r0
 800a4b2:	4629      	moveq	r1, r5
 800a4b4:	462a      	movne	r2, r5
 800a4b6:	4620      	mov	r0, r4
 800a4b8:	f7ff ffd6 	bl	800a468 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800a4bc:	bd38      	pop	{r3, r4, r5, pc}
 800a4be:	bf00      	nop
 800a4c0:	20011a28 	.word	0x20011a28

0800a4c4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800a4c4:	b530      	push	{r4, r5, lr}
 800a4c6:	888b      	ldrh	r3, [r1, #4]
 800a4c8:	8583      	strh	r3, [r0, #44]	@ 0x2c
 800a4ca:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800a4ce:	b085      	sub	sp, #20
 800a4d0:	4604      	mov	r4, r0
 800a4d2:	b923      	cbnz	r3, 800a4de <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800a4d4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800a4d8:	b90b      	cbnz	r3, 800a4de <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800a4da:	f7ff ffd3 	bl	800a484 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800a4de:	6823      	ldr	r3, [r4, #0]
 800a4e0:	466d      	mov	r5, sp
 800a4e2:	4621      	mov	r1, r4
 800a4e4:	4628      	mov	r0, r5
 800a4e6:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800a4ea:	4798      	blx	r3
 800a4ec:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800a4f0:	343c      	adds	r4, #60	@ 0x3c
 800a4f2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800a4f6:	b005      	add	sp, #20
 800a4f8:	bd30      	pop	{r4, r5, pc}

0800a4fa <_ZNK8touchgfx3Box12getSolidRectEv>:
 800a4fa:	2300      	movs	r3, #0
 800a4fc:	8083      	strh	r3, [r0, #4]
 800a4fe:	80c3      	strh	r3, [r0, #6]
 800a500:	8003      	strh	r3, [r0, #0]
 800a502:	8043      	strh	r3, [r0, #2]
 800a504:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800a508:	2bff      	cmp	r3, #255	@ 0xff
 800a50a:	bf01      	itttt	eq
 800a50c:	890b      	ldrheq	r3, [r1, #8]
 800a50e:	8083      	strheq	r3, [r0, #4]
 800a510:	894b      	ldrheq	r3, [r1, #10]
 800a512:	80c3      	strheq	r3, [r0, #6]
 800a514:	4770      	bx	lr
	...

0800a518 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800a518:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a51a:	4604      	mov	r4, r0
 800a51c:	6808      	ldr	r0, [r1, #0]
 800a51e:	6849      	ldr	r1, [r1, #4]
 800a520:	466b      	mov	r3, sp
 800a522:	c303      	stmia	r3!, {r0, r1}
 800a524:	6823      	ldr	r3, [r4, #0]
 800a526:	4669      	mov	r1, sp
 800a528:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a52a:	4620      	mov	r0, r4
 800a52c:	4798      	blx	r3
 800a52e:	4b08      	ldr	r3, [pc, #32]	@ (800a550 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800a530:	681b      	ldr	r3, [r3, #0]
 800a532:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800a536:	b10a      	cbz	r2, 800a53c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800a538:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800a53a:	b900      	cbnz	r0, 800a53e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800a53c:	6898      	ldr	r0, [r3, #8]
 800a53e:	6803      	ldr	r3, [r0, #0]
 800a540:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800a542:	6a1d      	ldr	r5, [r3, #32]
 800a544:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800a548:	4669      	mov	r1, sp
 800a54a:	47a8      	blx	r5
 800a54c:	b003      	add	sp, #12
 800a54e:	bd30      	pop	{r4, r5, pc}
 800a550:	200119d4 	.word	0x200119d4

0800a554 <_ZN8touchgfx3BoxD1Ev>:
 800a554:	4770      	bx	lr

0800a556 <_ZN8touchgfx3BoxD0Ev>:
 800a556:	b510      	push	{r4, lr}
 800a558:	212c      	movs	r1, #44	@ 0x2c
 800a55a:	4604      	mov	r4, r0
 800a55c:	f012 fcf2 	bl	801cf44 <_ZdlPvj>
 800a560:	4620      	mov	r0, r4
 800a562:	bd10      	pop	{r4, pc}

0800a564 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800a564:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800a568:	b12a      	cbz	r2, 800a576 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800a56a:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800a56e:	b112      	cbz	r2, 800a576 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800a570:	6803      	ldr	r3, [r0, #0]
 800a572:	695b      	ldr	r3, [r3, #20]
 800a574:	4718      	bx	r3
 800a576:	4770      	bx	lr

0800a578 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800a578:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
 800a57c:	4770      	bx	lr

0800a57e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800a57e:	b570      	push	{r4, r5, r6, lr}
 800a580:	880b      	ldrh	r3, [r1, #0]
 800a582:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 800a584:	4605      	mov	r5, r0
 800a586:	8813      	ldrh	r3, [r2, #0]
 800a588:	f825 3f30 	strh.w	r3, [r5, #48]!
 800a58c:	4604      	mov	r4, r0
 800a58e:	4628      	mov	r0, r5
 800a590:	f005 f858 	bl	800f644 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a594:	4606      	mov	r6, r0
 800a596:	4628      	mov	r0, r5
 800a598:	f005 f888 	bl	800f6ac <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a59c:	6823      	ldr	r3, [r4, #0]
 800a59e:	4605      	mov	r5, r0
 800a5a0:	4631      	mov	r1, r6
 800a5a2:	4620      	mov	r0, r4
 800a5a4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a5a6:	4798      	blx	r3
 800a5a8:	6823      	ldr	r3, [r4, #0]
 800a5aa:	4629      	mov	r1, r5
 800a5ac:	4620      	mov	r0, r4
 800a5ae:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800a5b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a5b4:	4718      	bx	r3

0800a5b6 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800a5b6:	b510      	push	{r4, lr}
 800a5b8:	4604      	mov	r4, r0
 800a5ba:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800a5bc:	b150      	cbz	r0, 800a5d4 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800a5be:	6803      	ldr	r3, [r0, #0]
 800a5c0:	68db      	ldr	r3, [r3, #12]
 800a5c2:	4798      	blx	r3
 800a5c4:	b130      	cbz	r0, 800a5d4 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800a5c6:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800a5c8:	6803      	ldr	r3, [r0, #0]
 800a5ca:	4621      	mov	r1, r4
 800a5cc:	689b      	ldr	r3, [r3, #8]
 800a5ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a5d2:	4718      	bx	r3
 800a5d4:	bd10      	pop	{r4, pc}

0800a5d6 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800a5d6:	b510      	push	{r4, lr}
 800a5d8:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
 800a5dc:	2bff      	cmp	r3, #255	@ 0xff
 800a5de:	4604      	mov	r4, r0
 800a5e0:	d006      	beq.n	800a5f0 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800a5e2:	2300      	movs	r3, #0
 800a5e4:	8003      	strh	r3, [r0, #0]
 800a5e6:	8043      	strh	r3, [r0, #2]
 800a5e8:	8083      	strh	r3, [r0, #4]
 800a5ea:	80c3      	strh	r3, [r0, #6]
 800a5ec:	4620      	mov	r0, r4
 800a5ee:	bd10      	pop	{r4, pc}
 800a5f0:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
 800a5f4:	b11b      	cbz	r3, 800a5fe <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800a5f6:	3130      	adds	r1, #48	@ 0x30
 800a5f8:	f005 f88c 	bl	800f714 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800a5fc:	e7f6      	b.n	800a5ec <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800a5fe:	312e      	adds	r1, #46	@ 0x2e
 800a600:	e7fa      	b.n	800a5f8 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800a604 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800a604:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a608:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800a60c:	b08a      	sub	sp, #40	@ 0x28
 800a60e:	4604      	mov	r4, r0
 800a610:	4688      	mov	r8, r1
 800a612:	2b00      	cmp	r3, #0
 800a614:	d066      	beq.n	800a6e4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800a616:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 800a618:	f8ad 3014 	strh.w	r3, [sp, #20]
 800a61c:	a805      	add	r0, sp, #20
 800a61e:	f005 f811 	bl	800f644 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a622:	4607      	mov	r7, r0
 800a624:	a805      	add	r0, sp, #20
 800a626:	f005 f841 	bl	800f6ac <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a62a:	f9b8 6000 	ldrsh.w	r6, [r8]
 800a62e:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800a632:	4432      	add	r2, r6
 800a634:	b292      	uxth	r2, r2
 800a636:	2300      	movs	r3, #0
 800a638:	fa0f fc82 	sxth.w	ip, r2
 800a63c:	459c      	cmp	ip, r3
 800a63e:	9306      	str	r3, [sp, #24]
 800a640:	dd52      	ble.n	800a6e8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800a642:	42b7      	cmp	r7, r6
 800a644:	dd50      	ble.n	800a6e8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800a646:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800a64a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800a64e:	442b      	add	r3, r5
 800a650:	b29b      	uxth	r3, r3
 800a652:	b219      	sxth	r1, r3
 800a654:	2900      	cmp	r1, #0
 800a656:	dd47      	ble.n	800a6e8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800a658:	42a8      	cmp	r0, r5
 800a65a:	dd45      	ble.n	800a6e8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800a65c:	4567      	cmp	r7, ip
 800a65e:	bfb8      	it	lt
 800a660:	b2ba      	uxthlt	r2, r7
 800a662:	4288      	cmp	r0, r1
 800a664:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800a668:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800a66c:	bfb8      	it	lt
 800a66e:	b283      	uxthlt	r3, r0
 800a670:	1b92      	subs	r2, r2, r6
 800a672:	1b5b      	subs	r3, r3, r5
 800a674:	f8ad 201c 	strh.w	r2, [sp, #28]
 800a678:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a67c:	f8ad 6018 	strh.w	r6, [sp, #24]
 800a680:	f8ad 501a 	strh.w	r5, [sp, #26]
 800a684:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800a688:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800a68c:	429a      	cmp	r2, r3
 800a68e:	d026      	beq.n	800a6de <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800a690:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800a694:	2b00      	cmp	r3, #0
 800a696:	dd22      	ble.n	800a6de <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800a698:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800a69c:	2b00      	cmp	r3, #0
 800a69e:	dd1e      	ble.n	800a6de <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800a6a0:	2300      	movs	r3, #0
 800a6a2:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800a6a6:	6823      	ldr	r3, [r4, #0]
 800a6a8:	a908      	add	r1, sp, #32
 800a6aa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a6ac:	4620      	mov	r0, r4
 800a6ae:	4798      	blx	r3
 800a6b0:	4b0f      	ldr	r3, [pc, #60]	@ (800a6f0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800a6b2:	681b      	ldr	r3, [r3, #0]
 800a6b4:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800a6b8:	b10a      	cbz	r2, 800a6be <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800a6ba:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800a6bc:	b900      	cbnz	r0, 800a6c0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800a6be:	6898      	ldr	r0, [r3, #8]
 800a6c0:	6801      	ldr	r1, [r0, #0]
 800a6c2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 800a6c6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800a6ca:	2501      	movs	r5, #1
 800a6cc:	9502      	str	r5, [sp, #8]
 800a6ce:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 800a6d2:	9401      	str	r4, [sp, #4]
 800a6d4:	ac06      	add	r4, sp, #24
 800a6d6:	9400      	str	r4, [sp, #0]
 800a6d8:	688c      	ldr	r4, [r1, #8]
 800a6da:	a905      	add	r1, sp, #20
 800a6dc:	47a0      	blx	r4
 800a6de:	b00a      	add	sp, #40	@ 0x28
 800a6e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a6e4:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
 800a6e6:	e797      	b.n	800a618 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800a6e8:	2300      	movs	r3, #0
 800a6ea:	9307      	str	r3, [sp, #28]
 800a6ec:	e7ca      	b.n	800a684 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800a6ee:	bf00      	nop
 800a6f0:	200119d4 	.word	0x200119d4

0800a6f4 <_ZNK8touchgfx6Button17invalidateContentEv>:
 800a6f4:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
 800a6f8:	b12a      	cbz	r2, 800a706 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800a6fa:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800a6fe:	b112      	cbz	r2, 800a706 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800a700:	6803      	ldr	r3, [r0, #0]
 800a702:	695b      	ldr	r3, [r3, #20]
 800a704:	4718      	bx	r3
 800a706:	4770      	bx	lr

0800a708 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800a708:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a70c:	4b2f      	ldr	r3, [pc, #188]	@ (800a7cc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800a70e:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800a710:	881b      	ldrh	r3, [r3, #0]
 800a712:	4293      	cmp	r3, r2
 800a714:	b08d      	sub	sp, #52	@ 0x34
 800a716:	4604      	mov	r4, r0
 800a718:	460f      	mov	r7, r1
 800a71a:	d954      	bls.n	800a7c6 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800a71c:	4b2c      	ldr	r3, [pc, #176]	@ (800a7d0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800a71e:	6819      	ldr	r1, [r3, #0]
 800a720:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800a724:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800a728:	4a2a      	ldr	r2, [pc, #168]	@ (800a7d4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800a72a:	6812      	ldr	r2, [r2, #0]
 800a72c:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800a730:	2900      	cmp	r1, #0
 800a732:	d048      	beq.n	800a7c6 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800a734:	785a      	ldrb	r2, [r3, #1]
 800a736:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 800a73a:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 800a73e:	4b26      	ldr	r3, [pc, #152]	@ (800a7d8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800a740:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
 800a744:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
 800a748:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
 800a74c:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 800a74e:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
 800a752:	9107      	str	r1, [sp, #28]
 800a754:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800a758:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800a75c:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
 800a760:	681a      	ldr	r2, [r3, #0]
 800a762:	f88d 8020 	strb.w	r8, [sp, #32]
 800a766:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 800a76a:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
 800a76e:	9609      	str	r6, [sp, #36]	@ 0x24
 800a770:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
 800a774:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
 800a778:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
 800a77c:	b10b      	cbz	r3, 800a782 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800a77e:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
 800a780:	b905      	cbnz	r5, 800a784 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800a782:	6895      	ldr	r5, [r2, #8]
 800a784:	ae05      	add	r6, sp, #20
 800a786:	4621      	mov	r1, r4
 800a788:	4630      	mov	r0, r6
 800a78a:	f002 fff7 	bl	800d77c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a78e:	4b13      	ldr	r3, [pc, #76]	@ (800a7dc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800a790:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800a792:	6818      	ldr	r0, [r3, #0]
 800a794:	f7f8 fe60 	bl	8003458 <_ZNK8touchgfx5Texts7getTextEt>
 800a798:	6823      	ldr	r3, [r4, #0]
 800a79a:	4680      	mov	r8, r0
 800a79c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800a79e:	4620      	mov	r0, r4
 800a7a0:	4798      	blx	r3
 800a7a2:	6823      	ldr	r3, [r4, #0]
 800a7a4:	4681      	mov	r9, r0
 800a7a6:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800a7aa:	4620      	mov	r0, r4
 800a7ac:	4798      	blx	r3
 800a7ae:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800a7b2:	ab07      	add	r3, sp, #28
 800a7b4:	9300      	str	r3, [sp, #0]
 800a7b6:	f8cd 8004 	str.w	r8, [sp, #4]
 800a7ba:	463b      	mov	r3, r7
 800a7bc:	e896 0006 	ldmia.w	r6, {r1, r2}
 800a7c0:	4628      	mov	r0, r5
 800a7c2:	f7f8 fdfb 	bl	80033bc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800a7c6:	b00d      	add	sp, #52	@ 0x34
 800a7c8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a7cc:	20011a28 	.word	0x20011a28
 800a7d0:	20011a24 	.word	0x20011a24
 800a7d4:	20011a2c 	.word	0x20011a2c
 800a7d8:	200119d4 	.word	0x200119d4
 800a7dc:	20011a30 	.word	0x20011a30

0800a7e0 <_ZN8touchgfx5ImageD1Ev>:
 800a7e0:	4770      	bx	lr

0800a7e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800a7e2:	b570      	push	{r4, r5, r6, lr}
 800a7e4:	880b      	ldrh	r3, [r1, #0]
 800a7e6:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800a7e8:	4604      	mov	r4, r0
 800a7ea:	4608      	mov	r0, r1
 800a7ec:	460d      	mov	r5, r1
 800a7ee:	f004 ff29 	bl	800f644 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a7f2:	4606      	mov	r6, r0
 800a7f4:	4628      	mov	r0, r5
 800a7f6:	f004 ff59 	bl	800f6ac <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a7fa:	6823      	ldr	r3, [r4, #0]
 800a7fc:	4605      	mov	r5, r0
 800a7fe:	4631      	mov	r1, r6
 800a800:	4620      	mov	r0, r4
 800a802:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a804:	4798      	blx	r3
 800a806:	6823      	ldr	r3, [r4, #0]
 800a808:	4629      	mov	r1, r5
 800a80a:	4620      	mov	r0, r4
 800a80c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800a80e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a812:	4718      	bx	r3

0800a814 <_ZN8touchgfx5ImageD0Ev>:
 800a814:	b510      	push	{r4, lr}
 800a816:	212c      	movs	r1, #44	@ 0x2c
 800a818:	4604      	mov	r4, r0
 800a81a:	f012 fb93 	bl	801cf44 <_ZdlPvj>
 800a81e:	4620      	mov	r0, r4
 800a820:	bd10      	pop	{r4, pc}

0800a822 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800a822:	b510      	push	{r4, lr}
 800a824:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 800a828:	2bff      	cmp	r3, #255	@ 0xff
 800a82a:	4604      	mov	r4, r0
 800a82c:	d006      	beq.n	800a83c <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800a82e:	2300      	movs	r3, #0
 800a830:	8003      	strh	r3, [r0, #0]
 800a832:	8043      	strh	r3, [r0, #2]
 800a834:	8083      	strh	r3, [r0, #4]
 800a836:	80c3      	strh	r3, [r0, #6]
 800a838:	4620      	mov	r0, r4
 800a83a:	bd10      	pop	{r4, pc}
 800a83c:	3126      	adds	r1, #38	@ 0x26
 800a83e:	f004 ff69 	bl	800f714 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800a842:	e7f9      	b.n	800a838 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800a844 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800a844:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a848:	4604      	mov	r4, r0
 800a84a:	b088      	sub	sp, #32
 800a84c:	f854 3b26 	ldr.w	r3, [r4], #38
 800a850:	2500      	movs	r5, #0
 800a852:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a854:	460f      	mov	r7, r1
 800a856:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800a85a:	a904      	add	r1, sp, #16
 800a85c:	4606      	mov	r6, r0
 800a85e:	4798      	blx	r3
 800a860:	4620      	mov	r0, r4
 800a862:	f004 feef 	bl	800f644 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a866:	4680      	mov	r8, r0
 800a868:	4620      	mov	r0, r4
 800a86a:	f004 ff1f 	bl	800f6ac <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a86e:	9506      	str	r5, [sp, #24]
 800a870:	ad06      	add	r5, sp, #24
 800a872:	f8ad 001e 	strh.w	r0, [sp, #30]
 800a876:	4639      	mov	r1, r7
 800a878:	4628      	mov	r0, r5
 800a87a:	f8ad 801c 	strh.w	r8, [sp, #28]
 800a87e:	f7fe fc39 	bl	80090f4 <_ZN8touchgfx4RectaNERKS0_>
 800a882:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800a886:	2b00      	cmp	r3, #0
 800a888:	dd19      	ble.n	800a8be <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800a88a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800a88e:	2b00      	cmp	r3, #0
 800a890:	dd15      	ble.n	800a8be <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800a892:	4b0c      	ldr	r3, [pc, #48]	@ (800a8c4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800a894:	681b      	ldr	r3, [r3, #0]
 800a896:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800a89a:	b10a      	cbz	r2, 800a8a0 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800a89c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800a89e:	b900      	cbnz	r0, 800a8a2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800a8a0:	6898      	ldr	r0, [r3, #8]
 800a8a2:	6801      	ldr	r1, [r0, #0]
 800a8a4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800a8a8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800a8ac:	2701      	movs	r7, #1
 800a8ae:	9702      	str	r7, [sp, #8]
 800a8b0:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
 800a8b4:	e9cd 5600 	strd	r5, r6, [sp]
 800a8b8:	688d      	ldr	r5, [r1, #8]
 800a8ba:	4621      	mov	r1, r4
 800a8bc:	47a8      	blx	r5
 800a8be:	b008      	add	sp, #32
 800a8c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a8c4:	200119d4 	.word	0x200119d4

0800a8c8 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800a8c8:	4770      	bx	lr

0800a8ca <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800a8ca:	b510      	push	{r4, lr}
 800a8cc:	2148      	movs	r1, #72	@ 0x48
 800a8ce:	4604      	mov	r4, r0
 800a8d0:	f012 fb38 	bl	801cf44 <_ZdlPvj>
 800a8d4:	4620      	mov	r0, r4
 800a8d6:	bd10      	pop	{r4, pc}

0800a8d8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800a8d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a8dc:	b08d      	sub	sp, #52	@ 0x34
 800a8de:	4604      	mov	r4, r0
 800a8e0:	460f      	mov	r7, r1
 800a8e2:	f7ff fe8f 	bl	800a604 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800a8e6:	4a55      	ldr	r2, [pc, #340]	@ (800aa3c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 800a8e8:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800a8ea:	8812      	ldrh	r2, [r2, #0]
 800a8ec:	429a      	cmp	r2, r3
 800a8ee:	f240 8082 	bls.w	800a9f6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800a8f2:	4d53      	ldr	r5, [pc, #332]	@ (800aa40 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 800a8f4:	682a      	ldr	r2, [r5, #0]
 800a8f6:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800a8fa:	4b52      	ldr	r3, [pc, #328]	@ (800aa44 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 800a8fc:	681b      	ldr	r3, [r3, #0]
 800a8fe:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800a902:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	@ 0x46
 800a906:	2200      	movs	r2, #0
 800a908:	e9cd 2203 	strd	r2, r2, [sp, #12]
 800a90c:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
 800a910:	2a03      	cmp	r2, #3
 800a912:	d811      	bhi.n	800a938 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800a914:	e8df f002 	tbb	[pc, r2]
 800a918:	89727902 	.word	0x89727902
 800a91c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800a920:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800a924:	1ad2      	subs	r2, r2, r3
 800a926:	2002      	movs	r0, #2
 800a928:	f8ad 1010 	strh.w	r1, [sp, #16]
 800a92c:	fb92 f2f0 	sdiv	r2, r2, r0
 800a930:	f8ad 3012 	strh.w	r3, [sp, #18]
 800a934:	f8ad 200e 	strh.w	r2, [sp, #14]
 800a938:	f10d 080c 	add.w	r8, sp, #12
 800a93c:	e898 0003 	ldmia.w	r8, {r0, r1}
 800a940:	f10d 0914 	add.w	r9, sp, #20
 800a944:	e889 0003 	stmia.w	r9, {r0, r1}
 800a948:	4639      	mov	r1, r7
 800a94a:	4648      	mov	r0, r9
 800a94c:	f7fe fbd2 	bl	80090f4 <_ZN8touchgfx4RectaNERKS0_>
 800a950:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800a954:	2b00      	cmp	r3, #0
 800a956:	dd4e      	ble.n	800a9f6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800a958:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800a95c:	2b00      	cmp	r3, #0
 800a95e:	dd4a      	ble.n	800a9f6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800a960:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800a964:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800a968:	1a9b      	subs	r3, r3, r2
 800a96a:	f8ad 3014 	strh.w	r3, [sp, #20]
 800a96e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800a972:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800a976:	1a9b      	subs	r3, r3, r2
 800a978:	f8ad 3016 	strh.w	r3, [sp, #22]
 800a97c:	6823      	ldr	r3, [r4, #0]
 800a97e:	4641      	mov	r1, r8
 800a980:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a982:	4620      	mov	r0, r4
 800a984:	4798      	blx	r3
 800a986:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 800a98a:	2b00      	cmp	r3, #0
 800a98c:	d053      	beq.n	800aa36 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 800a98e:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800a990:	8f21      	ldrh	r1, [r4, #56]	@ 0x38
 800a992:	682b      	ldr	r3, [r5, #0]
 800a994:	f894 0032 	ldrb.w	r0, [r4, #50]	@ 0x32
 800a998:	f894 4044 	ldrb.w	r4, [r4, #68]	@ 0x44
 800a99c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800a9a0:	785b      	ldrb	r3, [r3, #1]
 800a9a2:	9209      	str	r2, [sp, #36]	@ 0x24
 800a9a4:	f3c3 0501 	ubfx	r5, r3, #0, #2
 800a9a8:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800a9ac:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 800a9b0:	2300      	movs	r3, #0
 800a9b2:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 800a9b6:	f88d 302b 	strb.w	r3, [sp, #43]	@ 0x2b
 800a9ba:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 800a9be:	4b22      	ldr	r3, [pc, #136]	@ (800aa48 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 800a9c0:	9607      	str	r6, [sp, #28]
 800a9c2:	681b      	ldr	r3, [r3, #0]
 800a9c4:	f88d 5020 	strb.w	r5, [sp, #32]
 800a9c8:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800a9cc:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800a9d0:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800a9d4:	b10a      	cbz	r2, 800a9da <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 800a9d6:	6cdc      	ldr	r4, [r3, #76]	@ 0x4c
 800a9d8:	b904      	cbnz	r4, 800a9dc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 800a9da:	689c      	ldr	r4, [r3, #8]
 800a9dc:	4b1b      	ldr	r3, [pc, #108]	@ (800aa4c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 800a9de:	6818      	ldr	r0, [r3, #0]
 800a9e0:	f7f8 fd3a 	bl	8003458 <_ZNK8touchgfx5Texts7getTextEt>
 800a9e4:	ab07      	add	r3, sp, #28
 800a9e6:	9001      	str	r0, [sp, #4]
 800a9e8:	9300      	str	r3, [sp, #0]
 800a9ea:	e898 0006 	ldmia.w	r8, {r1, r2}
 800a9ee:	464b      	mov	r3, r9
 800a9f0:	4620      	mov	r0, r4
 800a9f2:	f7f8 fce3 	bl	80033bc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800a9f6:	b00d      	add	sp, #52	@ 0x34
 800a9f8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a9fc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800aa00:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800aa04:	1ad2      	subs	r2, r2, r3
 800aa06:	3201      	adds	r2, #1
 800aa08:	e78d      	b.n	800a926 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 800aa0a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800aa0e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800aa12:	1ad2      	subs	r2, r2, r3
 800aa14:	3201      	adds	r2, #1
 800aa16:	2002      	movs	r0, #2
 800aa18:	f8ad 3010 	strh.w	r3, [sp, #16]
 800aa1c:	fb92 f2f0 	sdiv	r2, r2, r0
 800aa20:	f8ad 1012 	strh.w	r1, [sp, #18]
 800aa24:	f8ad 200c 	strh.w	r2, [sp, #12]
 800aa28:	e786      	b.n	800a938 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800aa2a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800aa2e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800aa32:	1ad2      	subs	r2, r2, r3
 800aa34:	e7ef      	b.n	800aa16 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 800aa36:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 800aa38:	e7aa      	b.n	800a990 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 800aa3a:	bf00      	nop
 800aa3c:	20011a28 	.word	0x20011a28
 800aa40:	20011a24 	.word	0x20011a24
 800aa44:	20011a2c 	.word	0x20011a2c
 800aa48:	200119d4 	.word	0x200119d4
 800aa4c:	20011a30 	.word	0x20011a30

0800aa50 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800aa50:	b510      	push	{r4, lr}
 800aa52:	2101      	movs	r1, #1
 800aa54:	4c13      	ldr	r4, [pc, #76]	@ (800aaa4 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800aa56:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 800aa5a:	2200      	movs	r2, #0
 800aa5c:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
 800aa60:	6004      	str	r4, [r0, #0]
 800aa62:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800aa66:	4c10      	ldr	r4, [pc, #64]	@ (800aaa8 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 800aa68:	8082      	strh	r2, [r0, #4]
 800aa6a:	80c2      	strh	r2, [r0, #6]
 800aa6c:	8102      	strh	r2, [r0, #8]
 800aa6e:	8142      	strh	r2, [r0, #10]
 800aa70:	8182      	strh	r2, [r0, #12]
 800aa72:	81c2      	strh	r2, [r0, #14]
 800aa74:	8202      	strh	r2, [r0, #16]
 800aa76:	8242      	strh	r2, [r0, #18]
 800aa78:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800aa7c:	61c2      	str	r2, [r0, #28]
 800aa7e:	8402      	strh	r2, [r0, #32]
 800aa80:	8442      	strh	r2, [r0, #34]	@ 0x22
 800aa82:	6282      	str	r2, [r0, #40]	@ 0x28
 800aa84:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
 800aa88:	85c1      	strh	r1, [r0, #46]	@ 0x2e
 800aa8a:	8601      	strh	r1, [r0, #48]	@ 0x30
 800aa8c:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
 800aa90:	6344      	str	r4, [r0, #52]	@ 0x34
 800aa92:	8701      	strh	r1, [r0, #56]	@ 0x38
 800aa94:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 800aa98:	f880 2044 	strb.w	r2, [r0, #68]	@ 0x44
 800aa9c:	f8a0 2046 	strh.w	r2, [r0, #70]	@ 0x46
 800aaa0:	bd10      	pop	{r4, pc}
 800aaa2:	bf00      	nop
 800aaa4:	0801fc30 	.word	0x0801fc30
 800aaa8:	0801ed84 	.word	0x0801ed84

0800aaac <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800aaac:	b510      	push	{r4, lr}
 800aaae:	6803      	ldr	r3, [r0, #0]
 800aab0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800aab2:	460c      	mov	r4, r1
 800aab4:	4798      	blx	r3
 800aab6:	1b03      	subs	r3, r0, r4
 800aab8:	4258      	negs	r0, r3
 800aaba:	4158      	adcs	r0, r3
 800aabc:	bd10      	pop	{r4, pc}
	...

0800aac0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800aac0:	4b01      	ldr	r3, [pc, #4]	@ (800aac8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800aac2:	6019      	str	r1, [r3, #0]
 800aac4:	4770      	bx	lr
 800aac6:	bf00      	nop
 800aac8:	200119dc 	.word	0x200119dc

0800aacc <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800aacc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aad0:	4696      	mov	lr, r2
 800aad2:	4605      	mov	r5, r0
 800aad4:	4614      	mov	r4, r2
 800aad6:	460e      	mov	r6, r1
 800aad8:	461f      	mov	r7, r3
 800aada:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800aade:	b097      	sub	sp, #92	@ 0x5c
 800aae0:	f10d 0c1c 	add.w	ip, sp, #28
 800aae4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800aae8:	f8de 3000 	ldr.w	r3, [lr]
 800aaec:	f8cc 3000 	str.w	r3, [ip]
 800aaf0:	f104 0e14 	add.w	lr, r4, #20
 800aaf4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800aaf8:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800aafc:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ab00:	f8de 3000 	ldr.w	r3, [lr]
 800ab04:	f8cc 3000 	str.w	r3, [ip]
 800ab08:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800ab0c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ab10:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800ab14:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ab18:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800ab1c:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800ab20:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800ab24:	f8de 3000 	ldr.w	r3, [lr]
 800ab28:	f8cc 3000 	str.w	r3, [ip]
 800ab2c:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800ab2e:	682b      	ldr	r3, [r5, #0]
 800ab30:	9201      	str	r2, [sp, #4]
 800ab32:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800ab36:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800ab38:	9200      	str	r2, [sp, #0]
 800ab3a:	f8cd 8008 	str.w	r8, [sp, #8]
 800ab3e:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800ab42:	aa07      	add	r2, sp, #28
 800ab44:	463b      	mov	r3, r7
 800ab46:	4631      	mov	r1, r6
 800ab48:	4628      	mov	r0, r5
 800ab4a:	47d8      	blx	fp
 800ab4c:	46a6      	mov	lr, r4
 800ab4e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ab52:	f10d 0c1c 	add.w	ip, sp, #28
 800ab56:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ab5a:	f8de 3000 	ldr.w	r3, [lr]
 800ab5e:	f8cc 3000 	str.w	r3, [ip]
 800ab62:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800ab66:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ab6a:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800ab6e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ab72:	343c      	adds	r4, #60	@ 0x3c
 800ab74:	f8de 3000 	ldr.w	r3, [lr]
 800ab78:	f8cc 3000 	str.w	r3, [ip]
 800ab7c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ab7e:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800ab82:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ab86:	6823      	ldr	r3, [r4, #0]
 800ab88:	f8cc 3000 	str.w	r3, [ip]
 800ab8c:	682b      	ldr	r3, [r5, #0]
 800ab8e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800ab92:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800ab94:	9201      	str	r2, [sp, #4]
 800ab96:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800ab98:	9200      	str	r2, [sp, #0]
 800ab9a:	f8cd 8008 	str.w	r8, [sp, #8]
 800ab9e:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800aba0:	aa07      	add	r2, sp, #28
 800aba2:	463b      	mov	r3, r7
 800aba4:	4631      	mov	r1, r6
 800aba6:	4628      	mov	r0, r5
 800aba8:	47a0      	blx	r4
 800abaa:	b017      	add	sp, #92	@ 0x5c
 800abac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800abb0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800abb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800abb4:	b08d      	sub	sp, #52	@ 0x34
 800abb6:	4688      	mov	r8, r1
 800abb8:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800abba:	f8d3 c000 	ldr.w	ip, [r3]
 800abbe:	680f      	ldr	r7, [r1, #0]
 800abc0:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800abc4:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800abc8:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800abcc:	edd3 6a07 	vldr	s13, [r3, #28]
 800abd0:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800abd2:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800abd6:	f9b1 9000 	ldrsh.w	r9, [r1]
 800abda:	f9ba 1000 	ldrsh.w	r1, [sl]
 800abde:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 800abe2:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 800abe6:	eba7 070c 	sub.w	r7, r7, ip
 800abea:	42bc      	cmp	r4, r7
 800abec:	bfa8      	it	ge
 800abee:	463c      	movge	r4, r7
 800abf0:	ee07 4a90 	vmov	s15, r4
 800abf4:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800abf8:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 800abfc:	ee25 4a04 	vmul.f32	s8, s10, s8
 800ac00:	ee65 4a24 	vmul.f32	s9, s10, s9
 800ac04:	ee25 5a27 	vmul.f32	s10, s10, s15
 800ac08:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800ac0c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800ac10:	eb09 0e0c 	add.w	lr, r9, ip
 800ac14:	4571      	cmp	r1, lr
 800ac16:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800ac1a:	ee32 1a05 	vadd.f32	s2, s4, s10
 800ac1e:	ee36 0a84 	vadd.f32	s0, s13, s8
 800ac22:	ee61 1a87 	vmul.f32	s3, s3, s14
 800ac26:	ee22 2a07 	vmul.f32	s4, s4, s14
 800ac2a:	f340 808d 	ble.w	800ad48 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800ac2e:	eba1 060e 	sub.w	r6, r1, lr
 800ac32:	fb96 f5f4 	sdiv	r5, r6, r4
 800ac36:	ee07 5a10 	vmov	s14, r5
 800ac3a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ac3e:	2d00      	cmp	r5, #0
 800ac40:	fb04 6615 	mls	r6, r4, r5, r6
 800ac44:	eea7 0a04 	vfma.f32	s0, s14, s8
 800ac48:	eee7 0a24 	vfma.f32	s1, s14, s9
 800ac4c:	eea7 1a05 	vfma.f32	s2, s14, s10
 800ac50:	dd13      	ble.n	800ac7a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800ac52:	ee70 6a44 	vsub.f32	s13, s0, s8
 800ac56:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800ac5a:	eef5 6a40 	vcmp.f32	s13, #0.0
 800ac5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ac62:	bf18      	it	ne
 800ac64:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800ac68:	ee31 2a45 	vsub.f32	s4, s2, s10
 800ac6c:	bf08      	it	eq
 800ac6e:	eeb0 7a67 	vmoveq.f32	s14, s15
 800ac72:	ee61 1a87 	vmul.f32	s3, s3, s14
 800ac76:	ee22 2a07 	vmul.f32	s4, s4, s14
 800ac7a:	fb05 f204 	mul.w	r2, r5, r4
 800ac7e:	1abf      	subs	r7, r7, r2
 800ac80:	4494      	add	ip, r2
 800ac82:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800ac86:	4411      	add	r1, r2
 800ac88:	eb09 020c 	add.w	r2, r9, ip
 800ac8c:	443a      	add	r2, r7
 800ac8e:	b209      	sxth	r1, r1
 800ac90:	428a      	cmp	r2, r1
 800ac92:	bfc4      	itt	gt
 800ac94:	eba1 0209 	subgt.w	r2, r1, r9
 800ac98:	eba2 070c 	subgt.w	r7, r2, ip
 800ac9c:	2f00      	cmp	r7, #0
 800ac9e:	dd50      	ble.n	800ad42 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800aca0:	fb97 f1f4 	sdiv	r1, r7, r4
 800aca4:	fb04 7211 	mls	r2, r4, r1, r7
 800aca8:	b90a      	cbnz	r2, 800acae <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800acaa:	3901      	subs	r1, #1
 800acac:	4622      	mov	r2, r4
 800acae:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800acb2:	6840      	ldr	r0, [r0, #4]
 800acb4:	900b      	str	r0, [sp, #44]	@ 0x2c
 800acb6:	f8d0 a000 	ldr.w	sl, [r0]
 800acba:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800acbc:	9008      	str	r0, [sp, #32]
 800acbe:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 800acc2:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800acc4:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800acc8:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800accc:	695b      	ldr	r3, [r3, #20]
 800acce:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800acd0:	445b      	add	r3, fp
 800acd2:	eef0 6a42 	vmov.f32	s13, s4
 800acd6:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800acda:	ee21 3a23 	vmul.f32	s6, s2, s7
 800acde:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800ace2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800ace6:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800acea:	9307      	str	r3, [sp, #28]
 800acec:	ee17 7a90 	vmov	r7, s15
 800acf0:	ee73 7a42 	vsub.f32	s15, s6, s4
 800acf4:	eeb0 7a61 	vmov.f32	s14, s3
 800acf8:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800acfc:	ee16 3a90 	vmov	r3, s13
 800ad00:	fb97 f7f4 	sdiv	r7, r7, r4
 800ad04:	ee17 ca90 	vmov	ip, s15
 800ad08:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800ad0c:	fb9c fcf4 	sdiv	ip, ip, r4
 800ad10:	fb0c 3306 	mla	r3, ip, r6, r3
 800ad14:	9302      	str	r3, [sp, #8]
 800ad16:	ee17 3a10 	vmov	r3, s14
 800ad1a:	44b6      	add	lr, r6
 800ad1c:	fb04 e505 	mla	r5, r4, r5, lr
 800ad20:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800ad24:	fb07 3706 	mla	r7, r7, r6, r3
 800ad28:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800ad2c:	e9cd 4700 	strd	r4, r7, [sp]
 800ad30:	2900      	cmp	r1, #0
 800ad32:	bfcc      	ite	gt
 800ad34:	46a1      	movgt	r9, r4
 800ad36:	4691      	movle	r9, r2
 800ad38:	eba9 0306 	sub.w	r3, r9, r6
 800ad3c:	f8da 4008 	ldr.w	r4, [sl, #8]
 800ad40:	47a0      	blx	r4
 800ad42:	b00d      	add	sp, #52	@ 0x34
 800ad44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ad48:	2500      	movs	r5, #0
 800ad4a:	462e      	mov	r6, r5
 800ad4c:	e799      	b.n	800ac82 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800ad50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800ad50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ad54:	b0db      	sub	sp, #364	@ 0x16c
 800ad56:	461d      	mov	r5, r3
 800ad58:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 800ad5c:	930a      	str	r3, [sp, #40]	@ 0x28
 800ad5e:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 800ad62:	930b      	str	r3, [sp, #44]	@ 0x2c
 800ad64:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 800ad68:	9310      	str	r3, [sp, #64]	@ 0x40
 800ad6a:	6803      	ldr	r3, [r0, #0]
 800ad6c:	910f      	str	r1, [sp, #60]	@ 0x3c
 800ad6e:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 800ad70:	9009      	str	r0, [sp, #36]	@ 0x24
 800ad72:	4614      	mov	r4, r2
 800ad74:	4629      	mov	r1, r5
 800ad76:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 800ad7a:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 800ad7e:	47b8      	blx	r7
 800ad80:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ad82:	6058      	str	r0, [r3, #4]
 800ad84:	2800      	cmp	r0, #0
 800ad86:	f000 83a1 	beq.w	800b4cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ad8a:	682b      	ldr	r3, [r5, #0]
 800ad8c:	9314      	str	r3, [sp, #80]	@ 0x50
 800ad8e:	686b      	ldr	r3, [r5, #4]
 800ad90:	9315      	str	r3, [sp, #84]	@ 0x54
 800ad92:	4bc4      	ldr	r3, [pc, #784]	@ (800b0a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800ad94:	ed94 7a02 	vldr	s14, [r4, #8]
 800ad98:	7819      	ldrb	r1, [r3, #0]
 800ad9a:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800ad9e:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 800ada2:	2900      	cmp	r1, #0
 800ada4:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800ada8:	bf16      	itet	ne
 800adaa:	4619      	movne	r1, r3
 800adac:	4611      	moveq	r1, r2
 800adae:	4613      	movne	r3, r2
 800adb0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800adb4:	9116      	str	r1, [sp, #88]	@ 0x58
 800adb6:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 800adba:	f240 8387 	bls.w	800b4cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800adbe:	ed94 7a07 	vldr	s14, [r4, #28]
 800adc2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800adc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800adca:	f240 837f 	bls.w	800b4cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800adce:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800add2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800add6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800adda:	f240 8377 	bls.w	800b4cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800adde:	6822      	ldr	r2, [r4, #0]
 800ade0:	4bb1      	ldr	r3, [pc, #708]	@ (800b0a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800ade2:	429a      	cmp	r2, r3
 800ade4:	f2c0 8372 	blt.w	800b4cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ade8:	49b0      	ldr	r1, [pc, #704]	@ (800b0ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800adea:	6963      	ldr	r3, [r4, #20]
 800adec:	428a      	cmp	r2, r1
 800adee:	f300 836d 	bgt.w	800b4cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800adf2:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800adf6:	48ae      	ldr	r0, [pc, #696]	@ (800b0b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800adf8:	33ff      	adds	r3, #255	@ 0xff
 800adfa:	4283      	cmp	r3, r0
 800adfc:	f200 8366 	bhi.w	800b4cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ae00:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800ae02:	4dac      	ldr	r5, [pc, #688]	@ (800b0b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800ae04:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800ae08:	33ff      	adds	r3, #255	@ 0xff
 800ae0a:	42ab      	cmp	r3, r5
 800ae0c:	f200 835e 	bhi.w	800b4cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ae10:	6862      	ldr	r2, [r4, #4]
 800ae12:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 800ae16:	33ff      	adds	r3, #255	@ 0xff
 800ae18:	4283      	cmp	r3, r0
 800ae1a:	f200 8357 	bhi.w	800b4cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ae1e:	69a1      	ldr	r1, [r4, #24]
 800ae20:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 800ae24:	33ff      	adds	r3, #255	@ 0xff
 800ae26:	4283      	cmp	r3, r0
 800ae28:	f200 8350 	bhi.w	800b4cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ae2c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800ae2e:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 800ae32:	30ff      	adds	r0, #255	@ 0xff
 800ae34:	42a8      	cmp	r0, r5
 800ae36:	f200 8349 	bhi.w	800b4cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ae3a:	428a      	cmp	r2, r1
 800ae3c:	f280 8110 	bge.w	800b060 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800ae40:	429a      	cmp	r2, r3
 800ae42:	f300 8119 	bgt.w	800b078 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800ae46:	4299      	cmp	r1, r3
 800ae48:	f280 811d 	bge.w	800b086 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800ae4c:	2502      	movs	r5, #2
 800ae4e:	2701      	movs	r7, #1
 800ae50:	46a9      	mov	r9, r5
 800ae52:	46b8      	mov	r8, r7
 800ae54:	f04f 0a00 	mov.w	sl, #0
 800ae58:	4621      	mov	r1, r4
 800ae5a:	a849      	add	r0, sp, #292	@ 0x124
 800ae5c:	f003 fdae 	bl	800e9bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800ae60:	4622      	mov	r2, r4
 800ae62:	4653      	mov	r3, sl
 800ae64:	a949      	add	r1, sp, #292	@ 0x124
 800ae66:	f8cd 9000 	str.w	r9, [sp]
 800ae6a:	a819      	add	r0, sp, #100	@ 0x64
 800ae6c:	f003 fed6 	bl	800ec1c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ae70:	4622      	mov	r2, r4
 800ae72:	4653      	mov	r3, sl
 800ae74:	a949      	add	r1, sp, #292	@ 0x124
 800ae76:	f8cd 8000 	str.w	r8, [sp]
 800ae7a:	a829      	add	r0, sp, #164	@ 0xa4
 800ae7c:	f003 fece 	bl	800ec1c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ae80:	4643      	mov	r3, r8
 800ae82:	4622      	mov	r2, r4
 800ae84:	a949      	add	r1, sp, #292	@ 0x124
 800ae86:	f8cd 9000 	str.w	r9, [sp]
 800ae8a:	a839      	add	r0, sp, #228	@ 0xe4
 800ae8c:	f003 fec6 	bl	800ec1c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ae90:	42af      	cmp	r7, r5
 800ae92:	bfb5      	itete	lt
 800ae94:	2300      	movlt	r3, #0
 800ae96:	2301      	movge	r3, #1
 800ae98:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800ae9a:	930e      	strge	r3, [sp, #56]	@ 0x38
 800ae9c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800ae9e:	e893 0003 	ldmia.w	r3, {r0, r1}
 800aea2:	af12      	add	r7, sp, #72	@ 0x48
 800aea4:	bfb9      	ittee	lt
 800aea6:	ad29      	addlt	r5, sp, #164	@ 0xa4
 800aea8:	ac19      	addlt	r4, sp, #100	@ 0x64
 800aeaa:	ad19      	addge	r5, sp, #100	@ 0x64
 800aeac:	ac29      	addge	r4, sp, #164	@ 0xa4
 800aeae:	e887 0003 	stmia.w	r7, {r0, r1}
 800aeb2:	b928      	cbnz	r0, 800aec0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800aeb4:	4b80      	ldr	r3, [pc, #512]	@ (800b0b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800aeb6:	6818      	ldr	r0, [r3, #0]
 800aeb8:	6803      	ldr	r3, [r0, #0]
 800aeba:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800aebc:	4798      	blx	r3
 800aebe:	6038      	str	r0, [r7, #0]
 800aec0:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800aec2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800aec6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800aeca:	930c      	str	r3, [sp, #48]	@ 0x30
 800aecc:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800aece:	6963      	ldr	r3, [r4, #20]
 800aed0:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 800aed2:	440b      	add	r3, r1
 800aed4:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800aed8:	4408      	add	r0, r1
 800aeda:	b200      	sxth	r0, r0
 800aedc:	4283      	cmp	r3, r0
 800aede:	900d      	str	r0, [sp, #52]	@ 0x34
 800aee0:	f280 80dd 	bge.w	800b09e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800aee4:	428b      	cmp	r3, r1
 800aee6:	da08      	bge.n	800aefa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800aee8:	2a00      	cmp	r2, #0
 800aeea:	dd06      	ble.n	800aefa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800aeec:	1acb      	subs	r3, r1, r3
 800aeee:	429a      	cmp	r2, r3
 800aef0:	f2c0 80e4 	blt.w	800b0bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800aef4:	2b00      	cmp	r3, #0
 800aef6:	f300 80e2 	bgt.w	800b0be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800aefa:	6967      	ldr	r7, [r4, #20]
 800aefc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800aefe:	443b      	add	r3, r7
 800af00:	461f      	mov	r7, r3
 800af02:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800af04:	1bdf      	subs	r7, r3, r7
 800af06:	4297      	cmp	r7, r2
 800af08:	bfa8      	it	ge
 800af0a:	4617      	movge	r7, r2
 800af0c:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800af10:	2f00      	cmp	r7, #0
 800af12:	f340 8166 	ble.w	800b1e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800af16:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800af18:	6829      	ldr	r1, [r5, #0]
 800af1a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800af1e:	f9bb 3000 	ldrsh.w	r3, [fp]
 800af22:	6820      	ldr	r0, [r4, #0]
 800af24:	4411      	add	r1, r2
 800af26:	4299      	cmp	r1, r3
 800af28:	dd1a      	ble.n	800af60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800af2a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800af2e:	440b      	add	r3, r1
 800af30:	4402      	add	r2, r0
 800af32:	b21b      	sxth	r3, r3
 800af34:	429a      	cmp	r2, r3
 800af36:	dc13      	bgt.n	800af60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800af38:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800af3a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800af3c:	681b      	ldr	r3, [r3, #0]
 800af3e:	9206      	str	r2, [sp, #24]
 800af40:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800af42:	9205      	str	r2, [sp, #20]
 800af44:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800af46:	9500      	str	r5, [sp, #0]
 800af48:	e9cd b203 	strd	fp, r2, [sp, #12]
 800af4c:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800af4e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800af50:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800af54:	a912      	add	r1, sp, #72	@ 0x48
 800af56:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800af5a:	aa49      	add	r2, sp, #292	@ 0x124
 800af5c:	4623      	mov	r3, r4
 800af5e:	47c8      	blx	r9
 800af60:	e9d4 2300 	ldrd	r2, r3, [r4]
 800af64:	441a      	add	r2, r3
 800af66:	6963      	ldr	r3, [r4, #20]
 800af68:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800af6c:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800af70:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800af74:	68a1      	ldr	r1, [r4, #8]
 800af76:	ed94 6a08 	vldr	s12, [r4, #32]
 800af7a:	6022      	str	r2, [r4, #0]
 800af7c:	3301      	adds	r3, #1
 800af7e:	6163      	str	r3, [r4, #20]
 800af80:	69a3      	ldr	r3, [r4, #24]
 800af82:	ee37 7a27 	vadd.f32	s14, s14, s15
 800af86:	3b01      	subs	r3, #1
 800af88:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800af8c:	61a3      	str	r3, [r4, #24]
 800af8e:	6923      	ldr	r3, [r4, #16]
 800af90:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800af94:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800af98:	edd4 6a07 	vldr	s13, [r4, #28]
 800af9c:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800afa0:	440b      	add	r3, r1
 800afa2:	68e1      	ldr	r1, [r4, #12]
 800afa4:	6123      	str	r3, [r4, #16]
 800afa6:	ee76 6a86 	vadd.f32	s13, s13, s12
 800afaa:	428b      	cmp	r3, r1
 800afac:	edc4 6a07 	vstr	s13, [r4, #28]
 800afb0:	db15      	blt.n	800afde <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800afb2:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800afb6:	ee76 6a26 	vadd.f32	s13, s12, s13
 800afba:	3201      	adds	r2, #1
 800afbc:	edc4 6a07 	vstr	s13, [r4, #28]
 800afc0:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800afc4:	6022      	str	r2, [r4, #0]
 800afc6:	ee36 7a87 	vadd.f32	s14, s13, s14
 800afca:	1a5b      	subs	r3, r3, r1
 800afcc:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800afd0:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800afd4:	6123      	str	r3, [r4, #16]
 800afd6:	ee77 7a27 	vadd.f32	s15, s14, s15
 800afda:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800afde:	e9d5 2300 	ldrd	r2, r3, [r5]
 800afe2:	441a      	add	r2, r3
 800afe4:	696b      	ldr	r3, [r5, #20]
 800afe6:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800afea:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800afee:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800aff2:	68a9      	ldr	r1, [r5, #8]
 800aff4:	ed95 6a08 	vldr	s12, [r5, #32]
 800aff8:	602a      	str	r2, [r5, #0]
 800affa:	3301      	adds	r3, #1
 800affc:	616b      	str	r3, [r5, #20]
 800affe:	69ab      	ldr	r3, [r5, #24]
 800b000:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b004:	3b01      	subs	r3, #1
 800b006:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800b00a:	61ab      	str	r3, [r5, #24]
 800b00c:	692b      	ldr	r3, [r5, #16]
 800b00e:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800b012:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b016:	edd5 6a07 	vldr	s13, [r5, #28]
 800b01a:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800b01e:	440b      	add	r3, r1
 800b020:	68e9      	ldr	r1, [r5, #12]
 800b022:	612b      	str	r3, [r5, #16]
 800b024:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b028:	428b      	cmp	r3, r1
 800b02a:	edc5 6a07 	vstr	s13, [r5, #28]
 800b02e:	db15      	blt.n	800b05c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800b030:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800b034:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b038:	3201      	adds	r2, #1
 800b03a:	edc5 6a07 	vstr	s13, [r5, #28]
 800b03e:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800b042:	602a      	str	r2, [r5, #0]
 800b044:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b048:	1a5b      	subs	r3, r3, r1
 800b04a:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800b04e:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800b052:	612b      	str	r3, [r5, #16]
 800b054:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b058:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800b05c:	3f01      	subs	r7, #1
 800b05e:	e757      	b.n	800af10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800b060:	4299      	cmp	r1, r3
 800b062:	dc13      	bgt.n	800b08c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800b064:	429a      	cmp	r2, r3
 800b066:	da14      	bge.n	800b092 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800b068:	2502      	movs	r5, #2
 800b06a:	2703      	movs	r7, #3
 800b06c:	46a9      	mov	r9, r5
 800b06e:	f04f 0800 	mov.w	r8, #0
 800b072:	f04f 0a01 	mov.w	sl, #1
 800b076:	e6ef      	b.n	800ae58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800b078:	2501      	movs	r5, #1
 800b07a:	2700      	movs	r7, #0
 800b07c:	46a9      	mov	r9, r5
 800b07e:	46b8      	mov	r8, r7
 800b080:	f04f 0a02 	mov.w	sl, #2
 800b084:	e6e8      	b.n	800ae58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800b086:	2501      	movs	r5, #1
 800b088:	2702      	movs	r7, #2
 800b08a:	e6e1      	b.n	800ae50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800b08c:	2500      	movs	r5, #0
 800b08e:	2701      	movs	r7, #1
 800b090:	e7f4      	b.n	800b07c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800b092:	2702      	movs	r7, #2
 800b094:	2503      	movs	r5, #3
 800b096:	f04f 0900 	mov.w	r9, #0
 800b09a:	46b8      	mov	r8, r7
 800b09c:	e7e9      	b.n	800b072 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800b09e:	4613      	mov	r3, r2
 800b0a0:	e728      	b.n	800aef4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800b0a2:	bf00      	nop
 800b0a4:	200119cc 	.word	0x200119cc
 800b0a8:	fffd8f01 	.word	0xfffd8f01
 800b0ac:	00027100 	.word	0x00027100
 800b0b0:	0004e1ff 	.word	0x0004e1ff
 800b0b4:	0004e1fe 	.word	0x0004e1fe
 800b0b8:	200119d4 	.word	0x200119d4
 800b0bc:	4613      	mov	r3, r2
 800b0be:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800b0c0:	9111      	str	r1, [sp, #68]	@ 0x44
 800b0c2:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 800b0c6:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 800b0ca:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 800b0cc:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 800b0d0:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 800b0d4:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 800b0d8:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 800b0dc:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 800b0e0:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 800b0e4:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 800b0e8:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 800b0ec:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 800b0f0:	469e      	mov	lr, r3
 800b0f2:	469c      	mov	ip, r3
 800b0f4:	f04f 0900 	mov.w	r9, #0
 800b0f8:	f1bc 0f00 	cmp.w	ip, #0
 800b0fc:	d147      	bne.n	800b18e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800b0fe:	eb03 0c07 	add.w	ip, r3, r7
 800b102:	1ad7      	subs	r7, r2, r3
 800b104:	f1b9 0f00 	cmp.w	r9, #0
 800b108:	d009      	beq.n	800b11e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800b10a:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 800b10e:	9029      	str	r0, [sp, #164]	@ 0xa4
 800b110:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 800b114:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 800b118:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 800b11c:	912d      	str	r1, [sp, #180]	@ 0xb4
 800b11e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800b120:	9111      	str	r1, [sp, #68]	@ 0x44
 800b122:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800b126:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800b12a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800b12e:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800b132:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800b136:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800b13a:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800b13e:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800b142:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800b146:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800b14a:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800b14e:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800b152:	f04f 0800 	mov.w	r8, #0
 800b156:	f1be 0f00 	cmp.w	lr, #0
 800b15a:	d031      	beq.n	800b1c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800b15c:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800b15e:	4431      	add	r1, r6
 800b160:	4549      	cmp	r1, r9
 800b162:	4450      	add	r0, sl
 800b164:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800b168:	ee37 7a04 	vadd.f32	s14, s14, s8
 800b16c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800b170:	db08      	blt.n	800b184 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800b172:	ee77 7a85 	vadd.f32	s15, s15, s10
 800b176:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800b17a:	ee37 7a06 	vadd.f32	s14, s14, s12
 800b17e:	3001      	adds	r0, #1
 800b180:	eba1 0109 	sub.w	r1, r1, r9
 800b184:	f10e 3eff 	add.w	lr, lr, #4294967295
 800b188:	f04f 0801 	mov.w	r8, #1
 800b18c:	e7e3      	b.n	800b156 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800b18e:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800b190:	4431      	add	r1, r6
 800b192:	4541      	cmp	r1, r8
 800b194:	4450      	add	r0, sl
 800b196:	ee37 7a24 	vadd.f32	s14, s14, s9
 800b19a:	ee77 7a84 	vadd.f32	s15, s15, s8
 800b19e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800b1a2:	db08      	blt.n	800b1b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800b1a4:	ee76 6a85 	vadd.f32	s13, s13, s10
 800b1a8:	ee37 7a25 	vadd.f32	s14, s14, s11
 800b1ac:	ee77 7a86 	vadd.f32	s15, s15, s12
 800b1b0:	3001      	adds	r0, #1
 800b1b2:	eba1 0108 	sub.w	r1, r1, r8
 800b1b6:	f10c 3cff 	add.w	ip, ip, #4294967295
 800b1ba:	f04f 0901 	mov.w	r9, #1
 800b1be:	e79b      	b.n	800b0f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800b1c0:	449c      	add	ip, r3
 800b1c2:	1aff      	subs	r7, r7, r3
 800b1c4:	f1b8 0f00 	cmp.w	r8, #0
 800b1c8:	d009      	beq.n	800b1de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800b1ca:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800b1ce:	9019      	str	r0, [sp, #100]	@ 0x64
 800b1d0:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800b1d4:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800b1d8:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800b1dc:	911d      	str	r1, [sp, #116]	@ 0x74
 800b1de:	1ad2      	subs	r2, r2, r3
 800b1e0:	e68b      	b.n	800aefa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b1e2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800b1e4:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 800b1e6:	2b00      	cmp	r3, #0
 800b1e8:	f000 80d1 	beq.w	800b38e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800b1ec:	ad19      	add	r5, sp, #100	@ 0x64
 800b1ee:	ac39      	add	r4, sp, #228	@ 0xe4
 800b1f0:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800b1f2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800b1f6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800b1fa:	930c      	str	r3, [sp, #48]	@ 0x30
 800b1fc:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800b1fe:	6963      	ldr	r3, [r4, #20]
 800b200:	440b      	add	r3, r1
 800b202:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800b206:	4408      	add	r0, r1
 800b208:	b200      	sxth	r0, r0
 800b20a:	4283      	cmp	r3, r0
 800b20c:	900d      	str	r0, [sp, #52]	@ 0x34
 800b20e:	f280 80c1 	bge.w	800b394 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800b212:	428b      	cmp	r3, r1
 800b214:	da08      	bge.n	800b228 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800b216:	2a00      	cmp	r2, #0
 800b218:	dd06      	ble.n	800b228 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800b21a:	1acb      	subs	r3, r1, r3
 800b21c:	429a      	cmp	r2, r3
 800b21e:	f2c0 80bb 	blt.w	800b398 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800b222:	2b00      	cmp	r3, #0
 800b224:	f300 80b9 	bgt.w	800b39a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800b228:	6967      	ldr	r7, [r4, #20]
 800b22a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800b22c:	443b      	add	r3, r7
 800b22e:	461f      	mov	r7, r3
 800b230:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800b232:	1bdf      	subs	r7, r3, r7
 800b234:	4297      	cmp	r7, r2
 800b236:	bfa8      	it	ge
 800b238:	4617      	movge	r7, r2
 800b23a:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800b23e:	2f00      	cmp	r7, #0
 800b240:	f340 813c 	ble.w	800b4bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800b244:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800b246:	6829      	ldr	r1, [r5, #0]
 800b248:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b24c:	f9bb 3000 	ldrsh.w	r3, [fp]
 800b250:	6820      	ldr	r0, [r4, #0]
 800b252:	4411      	add	r1, r2
 800b254:	4299      	cmp	r1, r3
 800b256:	dd1a      	ble.n	800b28e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800b258:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800b25c:	440b      	add	r3, r1
 800b25e:	4402      	add	r2, r0
 800b260:	b21b      	sxth	r3, r3
 800b262:	429a      	cmp	r2, r3
 800b264:	dc13      	bgt.n	800b28e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800b266:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b268:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800b26a:	681b      	ldr	r3, [r3, #0]
 800b26c:	9206      	str	r2, [sp, #24]
 800b26e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800b270:	9205      	str	r2, [sp, #20]
 800b272:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800b274:	9500      	str	r5, [sp, #0]
 800b276:	e9cd b203 	strd	fp, r2, [sp, #12]
 800b27a:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800b27c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800b27e:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800b282:	a912      	add	r1, sp, #72	@ 0x48
 800b284:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800b288:	aa49      	add	r2, sp, #292	@ 0x124
 800b28a:	4623      	mov	r3, r4
 800b28c:	47c8      	blx	r9
 800b28e:	e9d4 2300 	ldrd	r2, r3, [r4]
 800b292:	441a      	add	r2, r3
 800b294:	6963      	ldr	r3, [r4, #20]
 800b296:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800b29a:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800b29e:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800b2a2:	68a1      	ldr	r1, [r4, #8]
 800b2a4:	ed94 6a08 	vldr	s12, [r4, #32]
 800b2a8:	6022      	str	r2, [r4, #0]
 800b2aa:	3301      	adds	r3, #1
 800b2ac:	6163      	str	r3, [r4, #20]
 800b2ae:	69a3      	ldr	r3, [r4, #24]
 800b2b0:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b2b4:	3b01      	subs	r3, #1
 800b2b6:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800b2ba:	61a3      	str	r3, [r4, #24]
 800b2bc:	6923      	ldr	r3, [r4, #16]
 800b2be:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800b2c2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b2c6:	edd4 6a07 	vldr	s13, [r4, #28]
 800b2ca:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800b2ce:	440b      	add	r3, r1
 800b2d0:	68e1      	ldr	r1, [r4, #12]
 800b2d2:	6123      	str	r3, [r4, #16]
 800b2d4:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b2d8:	428b      	cmp	r3, r1
 800b2da:	edc4 6a07 	vstr	s13, [r4, #28]
 800b2de:	db15      	blt.n	800b30c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800b2e0:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800b2e4:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b2e8:	3201      	adds	r2, #1
 800b2ea:	edc4 6a07 	vstr	s13, [r4, #28]
 800b2ee:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800b2f2:	6022      	str	r2, [r4, #0]
 800b2f4:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b2f8:	1a5b      	subs	r3, r3, r1
 800b2fa:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800b2fe:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800b302:	6123      	str	r3, [r4, #16]
 800b304:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b308:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800b30c:	e9d5 2300 	ldrd	r2, r3, [r5]
 800b310:	441a      	add	r2, r3
 800b312:	696b      	ldr	r3, [r5, #20]
 800b314:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800b318:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800b31c:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800b320:	68a9      	ldr	r1, [r5, #8]
 800b322:	ed95 6a08 	vldr	s12, [r5, #32]
 800b326:	602a      	str	r2, [r5, #0]
 800b328:	3301      	adds	r3, #1
 800b32a:	616b      	str	r3, [r5, #20]
 800b32c:	69ab      	ldr	r3, [r5, #24]
 800b32e:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b332:	3b01      	subs	r3, #1
 800b334:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800b338:	61ab      	str	r3, [r5, #24]
 800b33a:	692b      	ldr	r3, [r5, #16]
 800b33c:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800b340:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b344:	edd5 6a07 	vldr	s13, [r5, #28]
 800b348:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800b34c:	440b      	add	r3, r1
 800b34e:	68e9      	ldr	r1, [r5, #12]
 800b350:	612b      	str	r3, [r5, #16]
 800b352:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b356:	428b      	cmp	r3, r1
 800b358:	edc5 6a07 	vstr	s13, [r5, #28]
 800b35c:	db15      	blt.n	800b38a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800b35e:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800b362:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b366:	3201      	adds	r2, #1
 800b368:	edc5 6a07 	vstr	s13, [r5, #28]
 800b36c:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800b370:	602a      	str	r2, [r5, #0]
 800b372:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b376:	1a5b      	subs	r3, r3, r1
 800b378:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800b37c:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800b380:	612b      	str	r3, [r5, #16]
 800b382:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b386:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800b38a:	3f01      	subs	r7, #1
 800b38c:	e757      	b.n	800b23e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800b38e:	ad39      	add	r5, sp, #228	@ 0xe4
 800b390:	ac19      	add	r4, sp, #100	@ 0x64
 800b392:	e72d      	b.n	800b1f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800b394:	4613      	mov	r3, r2
 800b396:	e744      	b.n	800b222 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800b398:	4613      	mov	r3, r2
 800b39a:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 800b39e:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 800b3a0:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 800b3a4:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 800b3a8:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 800b3ac:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 800b3b0:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 800b3b4:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 800b3b8:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 800b3bc:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 800b3be:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 800b3c2:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 800b3c6:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 800b3ca:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 800b3ce:	960e      	str	r6, [sp, #56]	@ 0x38
 800b3d0:	469e      	mov	lr, r3
 800b3d2:	461f      	mov	r7, r3
 800b3d4:	f04f 0900 	mov.w	r9, #0
 800b3d8:	2f00      	cmp	r7, #0
 800b3da:	d146      	bne.n	800b46a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800b3dc:	449c      	add	ip, r3
 800b3de:	1ad7      	subs	r7, r2, r3
 800b3e0:	f1b9 0f00 	cmp.w	r9, #0
 800b3e4:	d009      	beq.n	800b3fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800b3e6:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 800b3ea:	9039      	str	r0, [sp, #228]	@ 0xe4
 800b3ec:	913d      	str	r1, [sp, #244]	@ 0xf4
 800b3ee:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 800b3f2:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 800b3f6:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 800b3fa:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800b3fc:	910e      	str	r1, [sp, #56]	@ 0x38
 800b3fe:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800b402:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800b406:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800b40a:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800b40e:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800b412:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800b416:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800b41a:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800b41e:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800b422:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800b426:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800b42a:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800b42e:	f04f 0800 	mov.w	r8, #0
 800b432:	f1be 0f00 	cmp.w	lr, #0
 800b436:	d030      	beq.n	800b49a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800b438:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800b43a:	4431      	add	r1, r6
 800b43c:	4549      	cmp	r1, r9
 800b43e:	4450      	add	r0, sl
 800b440:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800b444:	ee37 7a04 	vadd.f32	s14, s14, s8
 800b448:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800b44c:	db08      	blt.n	800b460 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800b44e:	ee77 7a85 	vadd.f32	s15, s15, s10
 800b452:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800b456:	ee37 7a06 	vadd.f32	s14, s14, s12
 800b45a:	3001      	adds	r0, #1
 800b45c:	eba1 0109 	sub.w	r1, r1, r9
 800b460:	f10e 3eff 	add.w	lr, lr, #4294967295
 800b464:	f04f 0801 	mov.w	r8, #1
 800b468:	e7e3      	b.n	800b432 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800b46a:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800b46c:	4431      	add	r1, r6
 800b46e:	4541      	cmp	r1, r8
 800b470:	4450      	add	r0, sl
 800b472:	ee37 7a24 	vadd.f32	s14, s14, s9
 800b476:	ee77 7a84 	vadd.f32	s15, s15, s8
 800b47a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800b47e:	db08      	blt.n	800b492 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800b480:	ee76 6a85 	vadd.f32	s13, s13, s10
 800b484:	ee37 7a25 	vadd.f32	s14, s14, s11
 800b488:	ee77 7a86 	vadd.f32	s15, s15, s12
 800b48c:	3001      	adds	r0, #1
 800b48e:	eba1 0108 	sub.w	r1, r1, r8
 800b492:	3f01      	subs	r7, #1
 800b494:	f04f 0901 	mov.w	r9, #1
 800b498:	e79e      	b.n	800b3d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800b49a:	449c      	add	ip, r3
 800b49c:	1aff      	subs	r7, r7, r3
 800b49e:	f1b8 0f00 	cmp.w	r8, #0
 800b4a2:	d009      	beq.n	800b4b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800b4a4:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800b4a8:	9019      	str	r0, [sp, #100]	@ 0x64
 800b4aa:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800b4ae:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800b4b2:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800b4b6:	911d      	str	r1, [sp, #116]	@ 0x74
 800b4b8:	1ad2      	subs	r2, r2, r3
 800b4ba:	e6b5      	b.n	800b228 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800b4bc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800b4be:	681b      	ldr	r3, [r3, #0]
 800b4c0:	b923      	cbnz	r3, 800b4cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b4c2:	4b04      	ldr	r3, [pc, #16]	@ (800b4d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800b4c4:	6818      	ldr	r0, [r3, #0]
 800b4c6:	6803      	ldr	r3, [r0, #0]
 800b4c8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b4ca:	4798      	blx	r3
 800b4cc:	b05b      	add	sp, #364	@ 0x16c
 800b4ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b4d2:	bf00      	nop
 800b4d4:	200119d4 	.word	0x200119d4

0800b4d8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 800b4d8:	b570      	push	{r4, r5, r6, lr}
 800b4da:	4604      	mov	r4, r0
 800b4dc:	f89d 601c 	ldrb.w	r6, [sp, #28]
 800b4e0:	9805      	ldr	r0, [sp, #20]
 800b4e2:	6061      	str	r1, [r4, #4]
 800b4e4:	2500      	movs	r5, #0
 800b4e6:	f89d 1010 	ldrb.w	r1, [sp, #16]
 800b4ea:	8263      	strh	r3, [r4, #18]
 800b4ec:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800b4f0:	8025      	strh	r5, [r4, #0]
 800b4f2:	7221      	strb	r1, [r4, #8]
 800b4f4:	7266      	strb	r6, [r4, #9]
 800b4f6:	60e0      	str	r0, [r4, #12]
 800b4f8:	8222      	strh	r2, [r4, #16]
 800b4fa:	82a3      	strh	r3, [r4, #20]
 800b4fc:	82e5      	strh	r5, [r4, #22]
 800b4fe:	8325      	strh	r5, [r4, #24]
 800b500:	8365      	strh	r5, [r4, #26]
 800b502:	83a5      	strh	r5, [r4, #28]
 800b504:	83e5      	strh	r5, [r4, #30]
 800b506:	8425      	strh	r5, [r4, #32]
 800b508:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
 800b50c:	b32e      	cbz	r6, 800b55a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800b50e:	6803      	ldr	r3, [r0, #0]
 800b510:	695b      	ldr	r3, [r3, #20]
 800b512:	4798      	blx	r3
 800b514:	4606      	mov	r6, r0
 800b516:	b300      	cbz	r0, 800b55a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800b518:	68e0      	ldr	r0, [r4, #12]
 800b51a:	6803      	ldr	r3, [r0, #0]
 800b51c:	4631      	mov	r1, r6
 800b51e:	68db      	ldr	r3, [r3, #12]
 800b520:	4798      	blx	r3
 800b522:	4605      	mov	r5, r0
 800b524:	b1c8      	cbz	r0, 800b55a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800b526:	7b43      	ldrb	r3, [r0, #13]
 800b528:	7a82      	ldrb	r2, [r0, #10]
 800b52a:	005b      	lsls	r3, r3, #1
 800b52c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800b530:	4313      	orrs	r3, r2
 800b532:	8423      	strh	r3, [r4, #32]
 800b534:	7a63      	ldrb	r3, [r4, #9]
 800b536:	2b06      	cmp	r3, #6
 800b538:	d10f      	bne.n	800b55a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800b53a:	68e0      	ldr	r0, [r4, #12]
 800b53c:	6803      	ldr	r3, [r0, #0]
 800b53e:	462a      	mov	r2, r5
 800b540:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800b542:	4631      	mov	r1, r6
 800b544:	4798      	blx	r3
 800b546:	7b6b      	ldrb	r3, [r5, #13]
 800b548:	005b      	lsls	r3, r3, #1
 800b54a:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800b54e:	7aab      	ldrb	r3, [r5, #10]
 800b550:	4313      	orrs	r3, r2
 800b552:	4418      	add	r0, r3
 800b554:	8c23      	ldrh	r3, [r4, #32]
 800b556:	4418      	add	r0, r3
 800b558:	8420      	strh	r0, [r4, #32]
 800b55a:	4620      	mov	r0, r4
 800b55c:	bd70      	pop	{r4, r5, r6, pc}

0800b55e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800b55e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b562:	2400      	movs	r4, #0
 800b564:	b085      	sub	sp, #20
 800b566:	4681      	mov	r9, r0
 800b568:	4688      	mov	r8, r1
 800b56a:	4692      	mov	sl, r2
 800b56c:	469b      	mov	fp, r3
 800b56e:	4627      	mov	r7, r4
 800b570:	4625      	mov	r5, r4
 800b572:	4626      	mov	r6, r4
 800b574:	4554      	cmp	r4, sl
 800b576:	da2a      	bge.n	800b5ce <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800b578:	2300      	movs	r3, #0
 800b57a:	9303      	str	r3, [sp, #12]
 800b57c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800b580:	429d      	cmp	r5, r3
 800b582:	d004      	beq.n	800b58e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800b584:	f242 030b 	movw	r3, #8203	@ 0x200b
 800b588:	429d      	cmp	r5, r3
 800b58a:	bf18      	it	ne
 800b58c:	462f      	movne	r7, r5
 800b58e:	ab03      	add	r3, sp, #12
 800b590:	4642      	mov	r2, r8
 800b592:	4659      	mov	r1, fp
 800b594:	4648      	mov	r0, r9
 800b596:	f003 f827 	bl	800e5e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800b59a:	4605      	mov	r5, r0
 800b59c:	b1b8      	cbz	r0, 800b5ce <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800b59e:	280a      	cmp	r0, #10
 800b5a0:	d015      	beq.n	800b5ce <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800b5a2:	9a03      	ldr	r2, [sp, #12]
 800b5a4:	b18a      	cbz	r2, 800b5ca <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800b5a6:	7b50      	ldrb	r0, [r2, #13]
 800b5a8:	7a93      	ldrb	r3, [r2, #10]
 800b5aa:	8895      	ldrh	r5, [r2, #4]
 800b5ac:	0040      	lsls	r0, r0, #1
 800b5ae:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 800b5b2:	4303      	orrs	r3, r0
 800b5b4:	9301      	str	r3, [sp, #4]
 800b5b6:	f8d8 3000 	ldr.w	r3, [r8]
 800b5ba:	4639      	mov	r1, r7
 800b5bc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800b5be:	4640      	mov	r0, r8
 800b5c0:	4798      	blx	r3
 800b5c2:	9b01      	ldr	r3, [sp, #4]
 800b5c4:	4418      	add	r0, r3
 800b5c6:	4406      	add	r6, r0
 800b5c8:	b2b6      	uxth	r6, r6
 800b5ca:	3401      	adds	r4, #1
 800b5cc:	e7d2      	b.n	800b574 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800b5ce:	4630      	mov	r0, r6
 800b5d0:	b005      	add	sp, #20
 800b5d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b5d6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800b5d6:	2a02      	cmp	r2, #2
 800b5d8:	b530      	push	{r4, r5, lr}
 800b5da:	d011      	beq.n	800b600 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800b5dc:	2a03      	cmp	r2, #3
 800b5de:	d01c      	beq.n	800b61a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800b5e0:	2a01      	cmp	r2, #1
 800b5e2:	d10c      	bne.n	800b5fe <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800b5e4:	888b      	ldrh	r3, [r1, #4]
 800b5e6:	8801      	ldrh	r1, [r0, #0]
 800b5e8:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800b5ec:	8844      	ldrh	r4, [r0, #2]
 800b5ee:	8004      	strh	r4, [r0, #0]
 800b5f0:	1a5b      	subs	r3, r3, r1
 800b5f2:	1a9b      	subs	r3, r3, r2
 800b5f4:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800b5f8:	8043      	strh	r3, [r0, #2]
 800b5fa:	8081      	strh	r1, [r0, #4]
 800b5fc:	80c2      	strh	r2, [r0, #6]
 800b5fe:	bd30      	pop	{r4, r5, pc}
 800b600:	88cb      	ldrh	r3, [r1, #6]
 800b602:	8842      	ldrh	r2, [r0, #2]
 800b604:	1a9b      	subs	r3, r3, r2
 800b606:	88c2      	ldrh	r2, [r0, #6]
 800b608:	1a9b      	subs	r3, r3, r2
 800b60a:	888a      	ldrh	r2, [r1, #4]
 800b60c:	8801      	ldrh	r1, [r0, #0]
 800b60e:	8043      	strh	r3, [r0, #2]
 800b610:	1a52      	subs	r2, r2, r1
 800b612:	8881      	ldrh	r1, [r0, #4]
 800b614:	1a52      	subs	r2, r2, r1
 800b616:	8002      	strh	r2, [r0, #0]
 800b618:	e7f1      	b.n	800b5fe <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800b61a:	88cb      	ldrh	r3, [r1, #6]
 800b61c:	8841      	ldrh	r1, [r0, #2]
 800b61e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800b622:	f9b0 5000 	ldrsh.w	r5, [r0]
 800b626:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800b62a:	8045      	strh	r5, [r0, #2]
 800b62c:	1a5b      	subs	r3, r3, r1
 800b62e:	1a9b      	subs	r3, r3, r2
 800b630:	8003      	strh	r3, [r0, #0]
 800b632:	8082      	strh	r2, [r0, #4]
 800b634:	80c4      	strh	r4, [r0, #6]
 800b636:	e7e2      	b.n	800b5fe <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800b638 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800b638:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b63c:	b09f      	sub	sp, #124	@ 0x7c
 800b63e:	920f      	str	r2, [sp, #60]	@ 0x3c
 800b640:	9312      	str	r3, [sp, #72]	@ 0x48
 800b642:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800b644:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800b646:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800b648:	8812      	ldrh	r2, [r2, #0]
 800b64a:	889b      	ldrh	r3, [r3, #4]
 800b64c:	900e      	str	r0, [sp, #56]	@ 0x38
 800b64e:	4413      	add	r3, r2
 800b650:	6828      	ldr	r0, [r5, #0]
 800b652:	9117      	str	r1, [sp, #92]	@ 0x5c
 800b654:	b21b      	sxth	r3, r3
 800b656:	9311      	str	r3, [sp, #68]	@ 0x44
 800b658:	6803      	ldr	r3, [r0, #0]
 800b65a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
 800b65e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800b660:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
 800b664:	4798      	blx	r3
 800b666:	682b      	ldr	r3, [r5, #0]
 800b668:	9013      	str	r0, [sp, #76]	@ 0x4c
 800b66a:	7b1a      	ldrb	r2, [r3, #12]
 800b66c:	7adb      	ldrb	r3, [r3, #11]
 800b66e:	9215      	str	r2, [sp, #84]	@ 0x54
 800b670:	9316      	str	r3, [sp, #88]	@ 0x58
 800b672:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
 800b676:	2c00      	cmp	r4, #0
 800b678:	d067      	beq.n	800b74a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800b67a:	7c2b      	ldrb	r3, [r5, #16]
 800b67c:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 800b67e:	2b06      	cmp	r3, #6
 800b680:	bf14      	ite	ne
 800b682:	2301      	movne	r3, #1
 800b684:	2302      	moveq	r3, #2
 800b686:	4413      	add	r3, r2
 800b688:	f04f 0900 	mov.w	r9, #0
 800b68c:	9310      	str	r3, [sp, #64]	@ 0x40
 800b68e:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 800b692:	464c      	mov	r4, r9
 800b694:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
 800b698:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800b69a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800b69c:	4293      	cmp	r3, r2
 800b69e:	f280 808b 	bge.w	800b7b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800b6a2:	2300      	movs	r3, #0
 800b6a4:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
 800b6a8:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
 800b6ac:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800b6b0:	429c      	cmp	r4, r3
 800b6b2:	d006      	beq.n	800b6c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
 800b6b4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800b6b6:	f242 020b 	movw	r2, #8203	@ 0x200b
 800b6ba:	4294      	cmp	r4, r2
 800b6bc:	bf18      	it	ne
 800b6be:	4623      	movne	r3, r4
 800b6c0:	930c      	str	r3, [sp, #48]	@ 0x30
 800b6c2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800b6c4:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 800b6c6:	682a      	ldr	r2, [r5, #0]
 800b6c8:	428b      	cmp	r3, r1
 800b6ca:	db40      	blt.n	800b74e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 800b6cc:	6813      	ldr	r3, [r2, #0]
 800b6ce:	4610      	mov	r0, r2
 800b6d0:	695b      	ldr	r3, [r3, #20]
 800b6d2:	4798      	blx	r3
 800b6d4:	4604      	mov	r4, r0
 800b6d6:	6828      	ldr	r0, [r5, #0]
 800b6d8:	6803      	ldr	r3, [r0, #0]
 800b6da:	aa1d      	add	r2, sp, #116	@ 0x74
 800b6dc:	689f      	ldr	r7, [r3, #8]
 800b6de:	4621      	mov	r1, r4
 800b6e0:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 800b6e4:	47b8      	blx	r7
 800b6e6:	901c      	str	r0, [sp, #112]	@ 0x70
 800b6e8:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800b6ec:	429c      	cmp	r4, r3
 800b6ee:	f000 80ea 	beq.w	800b8c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800b6f2:	f242 030b 	movw	r3, #8203	@ 0x200b
 800b6f6:	429c      	cmp	r4, r3
 800b6f8:	f000 80e5 	beq.w	800b8c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800b6fc:	2c00      	cmp	r4, #0
 800b6fe:	f000 810c 	beq.w	800b91a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 800b702:	2c0a      	cmp	r4, #10
 800b704:	d05e      	beq.n	800b7c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800b706:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800b708:	b36a      	cbz	r2, 800b766 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 800b70a:	8894      	ldrh	r4, [r2, #4]
 800b70c:	f1bb 0f00 	cmp.w	fp, #0
 800b710:	d03a      	beq.n	800b788 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800b712:	f892 900d 	ldrb.w	r9, [r2, #13]
 800b716:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800b71a:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 800b71e:	f892 900a 	ldrb.w	r9, [r2, #10]
 800b722:	f1bb 0f01 	cmp.w	fp, #1
 800b726:	ea49 0903 	orr.w	r9, r9, r3
 800b72a:	d133      	bne.n	800b794 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
 800b72c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800b72e:	eba6 0609 	sub.w	r6, r6, r9
 800b732:	2b00      	cmp	r3, #0
 800b734:	d14d      	bne.n	800b7d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800b736:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 800b738:	eb09 0306 	add.w	r3, r9, r6
 800b73c:	4413      	add	r3, r2
 800b73e:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800b740:	f9b2 2000 	ldrsh.w	r2, [r2]
 800b744:	4293      	cmp	r3, r2
 800b746:	da4e      	bge.n	800b7e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800b748:	e036      	b.n	800b7b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800b74a:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 800b74c:	e79c      	b.n	800b688 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
 800b74e:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 800b752:	9301      	str	r3, [sp, #4]
 800b754:	ab1d      	add	r3, sp, #116	@ 0x74
 800b756:	9300      	str	r3, [sp, #0]
 800b758:	4659      	mov	r1, fp
 800b75a:	ab1c      	add	r3, sp, #112	@ 0x70
 800b75c:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800b75e:	f002 ff8c 	bl	800e67a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800b762:	4604      	mov	r4, r0
 800b764:	e7c0      	b.n	800b6e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 800b766:	6828      	ldr	r0, [r5, #0]
 800b768:	6803      	ldr	r3, [r0, #0]
 800b76a:	691b      	ldr	r3, [r3, #16]
 800b76c:	4798      	blx	r3
 800b76e:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800b772:	4298      	cmp	r0, r3
 800b774:	f000 80a7 	beq.w	800b8c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800b778:	f242 030b 	movw	r3, #8203	@ 0x200b
 800b77c:	4298      	cmp	r0, r3
 800b77e:	f000 80a2 	beq.w	800b8c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800b782:	f1bb 0f00 	cmp.w	fp, #0
 800b786:	d100      	bne.n	800b78a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 800b788:	444e      	add	r6, r9
 800b78a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800b78c:	2a00      	cmp	r2, #0
 800b78e:	d1c0      	bne.n	800b712 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800b790:	4691      	mov	r9, r2
 800b792:	e098      	b.n	800b8c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800b794:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800b796:	2b00      	cmp	r3, #0
 800b798:	f000 80c1 	beq.w	800b91e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e6>
 800b79c:	f1bb 0f00 	cmp.w	fp, #0
 800b7a0:	d117      	bne.n	800b7d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800b7a2:	6828      	ldr	r0, [r5, #0]
 800b7a4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800b7a6:	6803      	ldr	r3, [r0, #0]
 800b7a8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800b7aa:	4798      	blx	r3
 800b7ac:	4406      	add	r6, r0
 800b7ae:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 800b7b0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 800b7b2:	1af3      	subs	r3, r6, r3
 800b7b4:	4293      	cmp	r3, r2
 800b7b6:	dd16      	ble.n	800b7e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800b7b8:	2c00      	cmp	r4, #0
 800b7ba:	f000 80ae 	beq.w	800b91a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 800b7be:	2c0a      	cmp	r4, #10
 800b7c0:	f040 809c 	bne.w	800b8fc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c4>
 800b7c4:	240a      	movs	r4, #10
 800b7c6:	fab4 f084 	clz	r0, r4
 800b7ca:	0940      	lsrs	r0, r0, #5
 800b7cc:	b01f      	add	sp, #124	@ 0x7c
 800b7ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b7d2:	6828      	ldr	r0, [r5, #0]
 800b7d4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800b7d6:	6803      	ldr	r3, [r0, #0]
 800b7d8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800b7da:	4798      	blx	r3
 800b7dc:	f1bb 0f01 	cmp.w	fp, #1
 800b7e0:	eba6 0600 	sub.w	r6, r6, r0
 800b7e4:	d0a7      	beq.n	800b736 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 800b7e6:	981c      	ldr	r0, [sp, #112]	@ 0x70
 800b7e8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800b7ea:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800b7ee:	f9b3 8000 	ldrsh.w	r8, [r3]
 800b7f2:	7b43      	ldrb	r3, [r0, #13]
 800b7f4:	015b      	lsls	r3, r3, #5
 800b7f6:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800b7fa:	7983      	ldrb	r3, [r0, #6]
 800b7fc:	4431      	add	r1, r6
 800b7fe:	4313      	orrs	r3, r2
 800b800:	440b      	add	r3, r1
 800b802:	4543      	cmp	r3, r8
 800b804:	db5f      	blt.n	800b8c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800b806:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800b808:	4299      	cmp	r1, r3
 800b80a:	da5c      	bge.n	800b8c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800b80c:	6828      	ldr	r0, [r5, #0]
 800b80e:	6803      	ldr	r3, [r0, #0]
 800b810:	45b0      	cmp	r8, r6
 800b812:	bfc8      	it	gt
 800b814:	eba8 0806 	subgt.w	r8, r8, r6
 800b818:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b81a:	bfcc      	ite	gt
 800b81c:	fa1f f888 	uxthgt.w	r8, r8
 800b820:	f04f 0800 	movle.w	r8, #0
 800b824:	4798      	blx	r3
 800b826:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800b828:	7b53      	ldrb	r3, [r2, #13]
 800b82a:	00d9      	lsls	r1, r3, #3
 800b82c:	f401 7780 	and.w	r7, r1, #256	@ 0x100
 800b830:	7a11      	ldrb	r1, [r2, #8]
 800b832:	4339      	orrs	r1, r7
 800b834:	065f      	lsls	r7, r3, #25
 800b836:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 800b838:	bf44      	itt	mi
 800b83a:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
 800b83e:	b209      	sxthmi	r1, r1
 800b840:	19c7      	adds	r7, r0, r7
 800b842:	1a7f      	subs	r7, r7, r1
 800b844:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 800b846:	b2bf      	uxth	r7, r7
 800b848:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800b84c:	fa0f fa87 	sxth.w	sl, r7
 800b850:	4551      	cmp	r1, sl
 800b852:	dd3c      	ble.n	800b8ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 800b854:	011b      	lsls	r3, r3, #4
 800b856:	79d0      	ldrb	r0, [r2, #7]
 800b858:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800b85c:	4303      	orrs	r3, r0
 800b85e:	449a      	add	sl, r3
 800b860:	4551      	cmp	r1, sl
 800b862:	dc30      	bgt.n	800b8c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800b864:	1bcf      	subs	r7, r1, r7
 800b866:	b23f      	sxth	r7, r7
 800b868:	468a      	mov	sl, r1
 800b86a:	9219      	str	r2, [sp, #100]	@ 0x64
 800b86c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 800b86e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800b870:	6828      	ldr	r0, [r5, #0]
 800b872:	2a00      	cmp	r2, #0
 800b874:	d12d      	bne.n	800b8d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 800b876:	9318      	str	r3, [sp, #96]	@ 0x60
 800b878:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800b87a:	6819      	ldr	r1, [r3, #0]
 800b87c:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
 800b87e:	6801      	ldr	r1, [r0, #0]
 800b880:	9314      	str	r3, [sp, #80]	@ 0x50
 800b882:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 800b884:	4788      	blx	r1
 800b886:	79a9      	ldrb	r1, [r5, #6]
 800b888:	910b      	str	r1, [sp, #44]	@ 0x2c
 800b88a:	7ba9      	ldrb	r1, [r5, #14]
 800b88c:	910a      	str	r1, [sp, #40]	@ 0x28
 800b88e:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
 800b892:	9109      	str	r1, [sp, #36]	@ 0x24
 800b894:	68a9      	ldr	r1, [r5, #8]
 800b896:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 800b898:	9306      	str	r3, [sp, #24]
 800b89a:	b2bf      	uxth	r7, r7
 800b89c:	e9cd 8702 	strd	r8, r7, [sp, #8]
 800b8a0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800b8a2:	9304      	str	r3, [sp, #16]
 800b8a4:	44b0      	add	r8, r6
 800b8a6:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800b8aa:	fa0f f388 	sxth.w	r3, r8
 800b8ae:	9300      	str	r3, [sp, #0]
 800b8b0:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800b8b2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800b8b4:	9205      	str	r2, [sp, #20]
 800b8b6:	f8cd a004 	str.w	sl, [sp, #4]
 800b8ba:	681a      	ldr	r2, [r3, #0]
 800b8bc:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 800b8be:	685b      	ldr	r3, [r3, #4]
 800b8c0:	980e      	ldr	r0, [sp, #56]	@ 0x38
 800b8c2:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 800b8c4:	47b8      	blx	r7
 800b8c6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800b8c8:	3301      	adds	r3, #1
 800b8ca:	930d      	str	r3, [sp, #52]	@ 0x34
 800b8cc:	e6e4      	b.n	800b698 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
 800b8ce:	2700      	movs	r7, #0
 800b8d0:	e7cb      	b.n	800b86a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x232>
 800b8d2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800b8d4:	f8d2 c008 	ldr.w	ip, [r2, #8]
 800b8d8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800b8da:	f8dc 1000 	ldr.w	r1, [ip]
 800b8de:	e9cd 6204 	strd	r6, r2, [sp, #16]
 800b8e2:	79aa      	ldrb	r2, [r5, #6]
 800b8e4:	9203      	str	r2, [sp, #12]
 800b8e6:	7baa      	ldrb	r2, [r5, #14]
 800b8e8:	9202      	str	r2, [sp, #8]
 800b8ea:	68aa      	ldr	r2, [r5, #8]
 800b8ec:	e9cd 0200 	strd	r0, r2, [sp]
 800b8f0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800b8f2:	688f      	ldr	r7, [r1, #8]
 800b8f4:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 800b8f6:	4660      	mov	r0, ip
 800b8f8:	47b8      	blx	r7
 800b8fa:	e7e4      	b.n	800b8c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800b8fc:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 800b8fe:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 800b900:	3501      	adds	r5, #1
 800b902:	429d      	cmp	r5, r3
 800b904:	f6bf af5f 	bge.w	800b7c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800b908:	4659      	mov	r1, fp
 800b90a:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800b90c:	f7f7 fd12 	bl	8003334 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800b910:	4604      	mov	r4, r0
 800b912:	b110      	cbz	r0, 800b91a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 800b914:	280a      	cmp	r0, #10
 800b916:	d1f2      	bne.n	800b8fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
 800b918:	e754      	b.n	800b7c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800b91a:	2400      	movs	r4, #0
 800b91c:	e753      	b.n	800b7c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800b91e:	f1bb 0f00 	cmp.w	fp, #0
 800b922:	f43f af44 	beq.w	800b7ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800b926:	e75e      	b.n	800b7e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

0800b928 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800b928:	b530      	push	{r4, r5, lr}
 800b92a:	8ac4      	ldrh	r4, [r0, #22]
 800b92c:	8b45      	ldrh	r5, [r0, #26]
 800b92e:	8343      	strh	r3, [r0, #26]
 800b930:	442c      	add	r4, r5
 800b932:	1ae4      	subs	r4, r4, r3
 800b934:	82c4      	strh	r4, [r0, #22]
 800b936:	8b83      	ldrh	r3, [r0, #28]
 800b938:	8b04      	ldrh	r4, [r0, #24]
 800b93a:	4422      	add	r2, r4
 800b93c:	440c      	add	r4, r1
 800b93e:	1a59      	subs	r1, r3, r1
 800b940:	83c2      	strh	r2, [r0, #30]
 800b942:	8304      	strh	r4, [r0, #24]
 800b944:	8381      	strh	r1, [r0, #28]
 800b946:	bd30      	pop	{r4, r5, pc}

0800b948 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 800b948:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b94c:	4604      	mov	r4, r0
 800b94e:	8a47      	ldrh	r7, [r0, #18]
 800b950:	68c0      	ldr	r0, [r0, #12]
 800b952:	6803      	ldr	r3, [r0, #0]
 800b954:	b085      	sub	sp, #20
 800b956:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b958:	4798      	blx	r3
 800b95a:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 800b95e:	7a63      	ldrb	r3, [r4, #9]
 800b960:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 800b964:	42b7      	cmp	r7, r6
 800b966:	f103 33ff 	add.w	r3, r3, #4294967295
 800b96a:	bfac      	ite	ge
 800b96c:	f04f 0900 	movge.w	r9, #0
 800b970:	f04f 0901 	movlt.w	r9, #1
 800b974:	2b05      	cmp	r3, #5
 800b976:	d804      	bhi.n	800b982 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 800b978:	e8df f003 	tbb	[pc, r3]
 800b97c:	470e0854 	.word	0x470e0854
 800b980:	4c4c      	.short	0x4c4c
 800b982:	2500      	movs	r5, #0
 800b984:	46a9      	mov	r9, r5
 800b986:	462e      	mov	r6, r5
 800b988:	462f      	mov	r7, r5
 800b98a:	e00d      	b.n	800b9a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800b98c:	42b7      	cmp	r7, r6
 800b98e:	bfb4      	ite	lt
 800b990:	2600      	movlt	r6, #0
 800b992:	2601      	movge	r6, #1
 800b994:	2500      	movs	r5, #0
 800b996:	e7f7      	b.n	800b988 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 800b998:	42b7      	cmp	r7, r6
 800b99a:	464d      	mov	r5, r9
 800b99c:	f04f 0900 	mov.w	r9, #0
 800b9a0:	bfb4      	ite	lt
 800b9a2:	2600      	movlt	r6, #0
 800b9a4:	2601      	movge	r6, #1
 800b9a6:	464f      	mov	r7, r9
 800b9a8:	f04f 0800 	mov.w	r8, #0
 800b9ac:	f8a4 8016 	strh.w	r8, [r4, #22]
 800b9b0:	f8a4 8018 	strh.w	r8, [r4, #24]
 800b9b4:	f8cd 8004 	str.w	r8, [sp, #4]
 800b9b8:	2300      	movs	r3, #0
 800b9ba:	9303      	str	r3, [sp, #12]
 800b9bc:	8823      	ldrh	r3, [r4, #0]
 800b9be:	2b20      	cmp	r3, #32
 800b9c0:	d034      	beq.n	800ba2c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 800b9c2:	f242 010b 	movw	r1, #8203	@ 0x200b
 800b9c6:	1a5a      	subs	r2, r3, r1
 800b9c8:	f1d2 0a00 	rsbs	sl, r2, #0
 800b9cc:	eb4a 0a02 	adc.w	sl, sl, r2
 800b9d0:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 800b9d4:	4293      	cmp	r3, r2
 800b9d6:	d009      	beq.n	800b9ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 800b9d8:	428b      	cmp	r3, r1
 800b9da:	9a01      	ldr	r2, [sp, #4]
 800b9dc:	bf18      	it	ne
 800b9de:	461a      	movne	r2, r3
 800b9e0:	9201      	str	r2, [sp, #4]
 800b9e2:	bf0c      	ite	eq
 800b9e4:	f04f 0a01 	moveq.w	sl, #1
 800b9e8:	f04f 0a00 	movne.w	sl, #0
 800b9ec:	ab03      	add	r3, sp, #12
 800b9ee:	68e2      	ldr	r2, [r4, #12]
 800b9f0:	7a21      	ldrb	r1, [r4, #8]
 800b9f2:	6860      	ldr	r0, [r4, #4]
 800b9f4:	f002 fdf8 	bl	800e5e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800b9f8:	8020      	strh	r0, [r4, #0]
 800b9fa:	b9d8      	cbnz	r0, 800ba34 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 800b9fc:	8ba2      	ldrh	r2, [r4, #28]
 800b9fe:	2300      	movs	r3, #0
 800ba00:	4611      	mov	r1, r2
 800ba02:	4620      	mov	r0, r4
 800ba04:	f7ff ff90 	bl	800b928 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800ba08:	e06e      	b.n	800bae8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 800ba0a:	2500      	movs	r5, #0
 800ba0c:	46a9      	mov	r9, r5
 800ba0e:	462e      	mov	r6, r5
 800ba10:	2701      	movs	r7, #1
 800ba12:	e7c9      	b.n	800b9a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800ba14:	42b7      	cmp	r7, r6
 800ba16:	f04f 0500 	mov.w	r5, #0
 800ba1a:	bfb4      	ite	lt
 800ba1c:	2700      	movlt	r7, #0
 800ba1e:	2701      	movge	r7, #1
 800ba20:	462e      	mov	r6, r5
 800ba22:	e7c1      	b.n	800b9a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800ba24:	2500      	movs	r5, #0
 800ba26:	46a9      	mov	r9, r5
 800ba28:	2601      	movs	r6, #1
 800ba2a:	e7ad      	b.n	800b988 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 800ba2c:	9301      	str	r3, [sp, #4]
 800ba2e:	f04f 0a01 	mov.w	sl, #1
 800ba32:	e7db      	b.n	800b9ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 800ba34:	8b63      	ldrh	r3, [r4, #26]
 800ba36:	280a      	cmp	r0, #10
 800ba38:	f103 0301 	add.w	r3, r3, #1
 800ba3c:	8363      	strh	r3, [r4, #26]
 800ba3e:	d0dd      	beq.n	800b9fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 800ba40:	9a03      	ldr	r2, [sp, #12]
 800ba42:	bb62      	cbnz	r2, 800ba9e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 800ba44:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800ba48:	4298      	cmp	r0, r3
 800ba4a:	d003      	beq.n	800ba54 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 800ba4c:	f242 030b 	movw	r3, #8203	@ 0x200b
 800ba50:	4298      	cmp	r0, r3
 800ba52:	d1b1      	bne.n	800b9b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800ba54:	8823      	ldrh	r3, [r4, #0]
 800ba56:	8ba1      	ldrh	r1, [r4, #28]
 800ba58:	2b20      	cmp	r3, #32
 800ba5a:	d003      	beq.n	800ba64 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 800ba5c:	f242 000b 	movw	r0, #8203	@ 0x200b
 800ba60:	4283      	cmp	r3, r0
 800ba62:	d131      	bne.n	800bac8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 800ba64:	f1ba 0f00 	cmp.w	sl, #0
 800ba68:	bf0a      	itet	eq
 800ba6a:	4688      	moveq	r8, r1
 800ba6c:	4650      	movne	r0, sl
 800ba6e:	2001      	moveq	r0, #1
 800ba70:	440a      	add	r2, r1
 800ba72:	8b23      	ldrh	r3, [r4, #24]
 800ba74:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800ba78:	b292      	uxth	r2, r2
 800ba7a:	83a2      	strh	r2, [r4, #28]
 800ba7c:	4413      	add	r3, r2
 800ba7e:	f1b9 0f00 	cmp.w	r9, #0
 800ba82:	d102      	bne.n	800ba8a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 800ba84:	2d00      	cmp	r5, #0
 800ba86:	d042      	beq.n	800bb0e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 800ba88:	b300      	cbz	r0, 800bacc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 800ba8a:	8c21      	ldrh	r1, [r4, #32]
 800ba8c:	4419      	add	r1, r3
 800ba8e:	458c      	cmp	ip, r1
 800ba90:	da37      	bge.n	800bb02 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 800ba92:	8ae1      	ldrh	r1, [r4, #22]
 800ba94:	2900      	cmp	r1, #0
 800ba96:	d034      	beq.n	800bb02 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 800ba98:	4563      	cmp	r3, ip
 800ba9a:	dd8d      	ble.n	800b9b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800ba9c:	e01d      	b.n	800bada <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 800ba9e:	8893      	ldrh	r3, [r2, #4]
 800baa0:	8023      	strh	r3, [r4, #0]
 800baa2:	f892 b00d 	ldrb.w	fp, [r2, #13]
 800baa6:	9901      	ldr	r1, [sp, #4]
 800baa8:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 800baac:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
 800bab0:	f892 b00a 	ldrb.w	fp, [r2, #10]
 800bab4:	ea4b 0b00 	orr.w	fp, fp, r0
 800bab8:	68e0      	ldr	r0, [r4, #12]
 800baba:	6803      	ldr	r3, [r0, #0]
 800babc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800babe:	4798      	blx	r3
 800bac0:	eb0b 0200 	add.w	r2, fp, r0
 800bac4:	b292      	uxth	r2, r2
 800bac6:	e7c5      	b.n	800ba54 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 800bac8:	2000      	movs	r0, #0
 800baca:	e7d1      	b.n	800ba70 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 800bacc:	4563      	cmp	r3, ip
 800bace:	f77f af73 	ble.w	800b9b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800bad2:	8ae3      	ldrh	r3, [r4, #22]
 800bad4:	2b00      	cmp	r3, #0
 800bad6:	f43f af6f 	beq.w	800b9b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800bada:	2301      	movs	r3, #1
 800badc:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 800bae0:	8c22      	ldrh	r2, [r4, #32]
 800bae2:	8be3      	ldrh	r3, [r4, #30]
 800bae4:	4413      	add	r3, r2
 800bae6:	83e3      	strh	r3, [r4, #30]
 800bae8:	68e0      	ldr	r0, [r4, #12]
 800baea:	6803      	ldr	r3, [r0, #0]
 800baec:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800baee:	4798      	blx	r3
 800baf0:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 800baf4:	4418      	add	r0, r3
 800baf6:	8a63      	ldrh	r3, [r4, #18]
 800baf8:	1a18      	subs	r0, r3, r0
 800bafa:	8260      	strh	r0, [r4, #18]
 800bafc:	b005      	add	sp, #20
 800bafe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bb02:	2300      	movs	r3, #0
 800bb04:	4611      	mov	r1, r2
 800bb06:	4620      	mov	r0, r4
 800bb08:	f7ff ff0e 	bl	800b928 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800bb0c:	e754      	b.n	800b9b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800bb0e:	4563      	cmp	r3, ip
 800bb10:	dd14      	ble.n	800bb3c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 800bb12:	b117      	cbz	r7, 800bb1a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 800bb14:	2301      	movs	r3, #1
 800bb16:	460a      	mov	r2, r1
 800bb18:	e772      	b.n	800ba00 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 800bb1a:	2e00      	cmp	r6, #0
 800bb1c:	f43f af4c 	beq.w	800b9b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800bb20:	2800      	cmp	r0, #0
 800bb22:	f47f af49 	bne.w	800b9b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800bb26:	f1ba 0f00 	cmp.w	sl, #0
 800bb2a:	d002      	beq.n	800bb32 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 800bb2c:	2301      	movs	r3, #1
 800bb2e:	4642      	mov	r2, r8
 800bb30:	e767      	b.n	800ba02 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 800bb32:	8ae3      	ldrh	r3, [r4, #22]
 800bb34:	2b00      	cmp	r3, #0
 800bb36:	f43f af3f 	beq.w	800b9b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800bb3a:	e7d5      	b.n	800bae8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 800bb3c:	2800      	cmp	r0, #0
 800bb3e:	f47f af3b 	bne.w	800b9b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800bb42:	f1ba 0f00 	cmp.w	sl, #0
 800bb46:	f43f af37 	beq.w	800b9b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800bb4a:	2301      	movs	r3, #1
 800bb4c:	4642      	mov	r2, r8
 800bb4e:	e7da      	b.n	800bb06 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

0800bb50 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800bb50:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bb52:	4605      	mov	r5, r0
 800bb54:	b08f      	sub	sp, #60	@ 0x3c
 800bb56:	4617      	mov	r7, r2
 800bb58:	461c      	mov	r4, r3
 800bb5a:	460e      	mov	r6, r1
 800bb5c:	b1d1      	cbz	r1, 800bb94 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800bb5e:	681b      	ldr	r3, [r3, #0]
 800bb60:	4620      	mov	r0, r4
 800bb62:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800bb64:	4798      	blx	r3
 800bb66:	4240      	negs	r0, r0
 800bb68:	b200      	sxth	r0, r0
 800bb6a:	e9cd 4001 	strd	r4, r0, [sp, #4]
 800bb6e:	9603      	str	r6, [sp, #12]
 800bb70:	9700      	str	r7, [sp, #0]
 800bb72:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800bb76:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 800bb7a:	4629      	mov	r1, r5
 800bb7c:	a805      	add	r0, sp, #20
 800bb7e:	f7ff fcab 	bl	800b4d8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800bb82:	2401      	movs	r4, #1
 800bb84:	a805      	add	r0, sp, #20
 800bb86:	f7ff fedf 	bl	800b948 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800bb8a:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800bb8e:	b163      	cbz	r3, 800bbaa <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 800bb90:	3401      	adds	r4, #1
 800bb92:	e7f7      	b.n	800bb84 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800bb94:	f002 fdf6 	bl	800e784 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800bb98:	2401      	movs	r4, #1
 800bb9a:	280a      	cmp	r0, #10
 800bb9c:	4628      	mov	r0, r5
 800bb9e:	bf08      	it	eq
 800bba0:	3401      	addeq	r4, #1
 800bba2:	f002 fdef 	bl	800e784 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800bba6:	2800      	cmp	r0, #0
 800bba8:	d1f7      	bne.n	800bb9a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 800bbaa:	b2a0      	uxth	r0, r4
 800bbac:	b00f      	add	sp, #60	@ 0x3c
 800bbae:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800bbb0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800bbb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bbb4:	b0e3      	sub	sp, #396	@ 0x18c
 800bbb6:	461c      	mov	r4, r3
 800bbb8:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
 800bbba:	4683      	mov	fp, r0
 800bbbc:	4688      	mov	r8, r1
 800bbbe:	2b00      	cmp	r3, #0
 800bbc0:	f000 8112 	beq.w	800bde8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800bbc4:	6823      	ldr	r3, [r4, #0]
 800bbc6:	2b00      	cmp	r3, #0
 800bbc8:	f000 810e 	beq.w	800bde8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800bbcc:	7ba3      	ldrb	r3, [r4, #14]
 800bbce:	2b00      	cmp	r3, #0
 800bbd0:	f000 810a 	beq.w	800bde8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800bbd4:	6810      	ldr	r0, [r2, #0]
 800bbd6:	6851      	ldr	r1, [r2, #4]
 800bbd8:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 800bbdc:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800bbe0:	ad0a      	add	r5, sp, #40	@ 0x28
 800bbe2:	462b      	mov	r3, r5
 800bbe4:	c303      	stmia	r3!, {r0, r1}
 800bbe6:	2100      	movs	r1, #0
 800bbe8:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800bbec:	910c      	str	r1, [sp, #48]	@ 0x30
 800bbee:	79a2      	ldrb	r2, [r4, #6]
 800bbf0:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800bbf4:	a90c      	add	r1, sp, #48	@ 0x30
 800bbf6:	4628      	mov	r0, r5
 800bbf8:	f7ff fced 	bl	800b5d6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800bbfc:	a90c      	add	r1, sp, #48	@ 0x30
 800bbfe:	4608      	mov	r0, r1
 800bc00:	79a2      	ldrb	r2, [r4, #6]
 800bc02:	f7ff fce8 	bl	800b5d6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800bc06:	a817      	add	r0, sp, #92	@ 0x5c
 800bc08:	f002 f9a9 	bl	800df5e <_ZN8touchgfx12TextProviderC1Ev>
 800bc0c:	6820      	ldr	r0, [r4, #0]
 800bc0e:	6803      	ldr	r3, [r0, #0]
 800bc10:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800bc12:	4798      	blx	r3
 800bc14:	4606      	mov	r6, r0
 800bc16:	6820      	ldr	r0, [r4, #0]
 800bc18:	6803      	ldr	r3, [r0, #0]
 800bc1a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800bc1c:	4798      	blx	r3
 800bc1e:	4633      	mov	r3, r6
 800bc20:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 800bc22:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 800bc24:	9000      	str	r0, [sp, #0]
 800bc26:	a817      	add	r0, sp, #92	@ 0x5c
 800bc28:	f002 f9ec 	bl	800e004 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800bc2c:	6820      	ldr	r0, [r4, #0]
 800bc2e:	f894 a004 	ldrb.w	sl, [r4, #4]
 800bc32:	6803      	ldr	r3, [r0, #0]
 800bc34:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800bc36:	4798      	blx	r3
 800bc38:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 800bc3c:	6823      	ldr	r3, [r4, #0]
 800bc3e:	4607      	mov	r7, r0
 800bc40:	4406      	add	r6, r0
 800bc42:	a830      	add	r0, sp, #192	@ 0xc0
 800bc44:	f893 9009 	ldrb.w	r9, [r3, #9]
 800bc48:	f002 f989 	bl	800df5e <_ZN8touchgfx12TextProviderC1Ev>
 800bc4c:	7c23      	ldrb	r3, [r4, #16]
 800bc4e:	b17b      	cbz	r3, 800bc70 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 800bc50:	6820      	ldr	r0, [r4, #0]
 800bc52:	6803      	ldr	r3, [r0, #0]
 800bc54:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800bc56:	4798      	blx	r3
 800bc58:	9009      	str	r0, [sp, #36]	@ 0x24
 800bc5a:	6820      	ldr	r0, [r4, #0]
 800bc5c:	6802      	ldr	r2, [r0, #0]
 800bc5e:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 800bc60:	4790      	blx	r2
 800bc62:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800bc64:	9000      	str	r0, [sp, #0]
 800bc66:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 800bc68:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 800bc6a:	a830      	add	r0, sp, #192	@ 0xc0
 800bc6c:	f002 f9ca 	bl	800e004 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800bc70:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 800bc74:	7be2      	ldrb	r2, [r4, #15]
 800bc76:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 800bc7a:	1a8a      	subs	r2, r1, r2
 800bc7c:	7c21      	ldrb	r1, [r4, #16]
 800bc7e:	9103      	str	r1, [sp, #12]
 800bc80:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 800bc84:	9102      	str	r1, [sp, #8]
 800bc86:	6821      	ldr	r1, [r4, #0]
 800bc88:	9101      	str	r1, [sp, #4]
 800bc8a:	7961      	ldrb	r1, [r4, #5]
 800bc8c:	9100      	str	r1, [sp, #0]
 800bc8e:	b292      	uxth	r2, r2
 800bc90:	a930      	add	r1, sp, #192	@ 0xc0
 800bc92:	a80e      	add	r0, sp, #56	@ 0x38
 800bc94:	f7ff fc20 	bl	800b4d8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800bc98:	2e00      	cmp	r6, #0
 800bc9a:	dc5b      	bgt.n	800bd54 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 800bc9c:	af17      	add	r7, sp, #92	@ 0x5c
 800bc9e:	f04f 0900 	mov.w	r9, #0
 800bca2:	7c23      	ldrb	r3, [r4, #16]
 800bca4:	2b00      	cmp	r3, #0
 800bca6:	f000 80b1 	beq.w	800be0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 800bcaa:	a80e      	add	r0, sp, #56	@ 0x38
 800bcac:	f7ff fe4c 	bl	800b948 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800bcb0:	f1ba 0f00 	cmp.w	sl, #0
 800bcb4:	f000 80a5 	beq.w	800be02 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800bcb8:	7c23      	ldrb	r3, [r4, #16]
 800bcba:	9309      	str	r3, [sp, #36]	@ 0x24
 800bcbc:	2264      	movs	r2, #100	@ 0x64
 800bcbe:	4639      	mov	r1, r7
 800bcc0:	a849      	add	r0, sp, #292	@ 0x124
 800bcc2:	f011 fcba 	bl	801d63a <memcpy>
 800bcc6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800bcc8:	2b00      	cmp	r3, #0
 800bcca:	f000 80a7 	beq.w	800be1c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 800bcce:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
 800bcd2:	7922      	ldrb	r2, [r4, #4]
 800bcd4:	2a01      	cmp	r2, #1
 800bcd6:	f040 808a 	bne.w	800bdee <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800bcda:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 800bcde:	1ac0      	subs	r0, r0, r3
 800bce0:	2302      	movs	r3, #2
 800bce2:	fb90 f0f3 	sdiv	r0, r0, r3
 800bce6:	b200      	sxth	r0, r0
 800bce8:	7c23      	ldrb	r3, [r4, #16]
 800bcea:	2b00      	cmp	r3, #0
 800bcec:	f000 808b 	beq.w	800be06 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800bcf0:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
 800bcf4:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
 800bcf8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800bcfc:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800bd00:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 800bd04:	4410      	add	r0, r2
 800bd06:	b200      	sxth	r0, r0
 800bd08:	9000      	str	r0, [sp, #0]
 800bd0a:	e9cd 9703 	strd	r9, r7, [sp, #12]
 800bd0e:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800bd12:	4642      	mov	r2, r8
 800bd14:	2100      	movs	r1, #0
 800bd16:	4658      	mov	r0, fp
 800bd18:	f7ff fc8e 	bl	800b638 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800bd1c:	2800      	cmp	r0, #0
 800bd1e:	d163      	bne.n	800bde8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800bd20:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 800bd24:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 800bd28:	b2b2      	uxth	r2, r6
 800bd2a:	4413      	add	r3, r2
 800bd2c:	1a8a      	subs	r2, r1, r2
 800bd2e:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 800bd32:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
 800bd36:	b21b      	sxth	r3, r3
 800bd38:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800bd3c:	2a00      	cmp	r2, #0
 800bd3e:	d153      	bne.n	800bde8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800bd40:	6822      	ldr	r2, [r4, #0]
 800bd42:	8869      	ldrh	r1, [r5, #2]
 800bd44:	7a12      	ldrb	r2, [r2, #8]
 800bd46:	1a9b      	subs	r3, r3, r2
 800bd48:	88ea      	ldrh	r2, [r5, #6]
 800bd4a:	440a      	add	r2, r1
 800bd4c:	b212      	sxth	r2, r2
 800bd4e:	4293      	cmp	r3, r2
 800bd50:	dda7      	ble.n	800bca2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 800bd52:	e049      	b.n	800bde8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800bd54:	7c23      	ldrb	r3, [r4, #16]
 800bd56:	444f      	add	r7, r9
 800bd58:	b1c3      	cbz	r3, 800bd8c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 800bd5a:	f64f 79ff 	movw	r9, #65535	@ 0xffff
 800bd5e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800bd62:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800bd66:	443b      	add	r3, r7
 800bd68:	4293      	cmp	r3, r2
 800bd6a:	da97      	bge.n	800bc9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800bd6c:	a80e      	add	r0, sp, #56	@ 0x38
 800bd6e:	f7ff fdeb 	bl	800b948 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800bd72:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
 800bd76:	3b01      	subs	r3, #1
 800bd78:	b29b      	uxth	r3, r3
 800bd7a:	454b      	cmp	r3, r9
 800bd7c:	9309      	str	r3, [sp, #36]	@ 0x24
 800bd7e:	d021      	beq.n	800bdc4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 800bd80:	7961      	ldrb	r1, [r4, #5]
 800bd82:	a817      	add	r0, sp, #92	@ 0x5c
 800bd84:	f7f7 fad6 	bl	8003334 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800bd88:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800bd8a:	e7f4      	b.n	800bd76 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 800bd8c:	fa1f f986 	uxth.w	r9, r6
 800bd90:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800bd94:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800bd98:	443b      	add	r3, r7
 800bd9a:	4293      	cmp	r3, r2
 800bd9c:	f6bf af7e 	bge.w	800bc9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800bda0:	a817      	add	r0, sp, #92	@ 0x5c
 800bda2:	f002 fcef 	bl	800e784 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800bda6:	b1f8      	cbz	r0, 800bde8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800bda8:	280a      	cmp	r0, #10
 800bdaa:	d1f1      	bne.n	800bd90 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800bdac:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 800bdb0:	444b      	add	r3, r9
 800bdb2:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800bdb6:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 800bdba:	eba3 0309 	sub.w	r3, r3, r9
 800bdbe:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800bdc2:	e7e5      	b.n	800bd90 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800bdc4:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 800bdc8:	b2b3      	uxth	r3, r6
 800bdca:	441a      	add	r2, r3
 800bdcc:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 800bdd0:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 800bdd4:	1ad3      	subs	r3, r2, r3
 800bdd6:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800bdda:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800bdde:	b11b      	cbz	r3, 800bde8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800bde0:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
 800bde4:	2b00      	cmp	r3, #0
 800bde6:	d0ba      	beq.n	800bd5e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 800bde8:	b063      	add	sp, #396	@ 0x18c
 800bdea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bdee:	2a02      	cmp	r2, #2
 800bdf0:	d105      	bne.n	800bdfe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 800bdf2:	7be2      	ldrb	r2, [r4, #15]
 800bdf4:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 800bdf8:	1a80      	subs	r0, r0, r2
 800bdfa:	1ac0      	subs	r0, r0, r3
 800bdfc:	e773      	b.n	800bce6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 800bdfe:	2000      	movs	r0, #0
 800be00:	e772      	b.n	800bce8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800be02:	7be0      	ldrb	r0, [r4, #15]
 800be04:	e770      	b.n	800bce8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800be06:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800be0a:	e773      	b.n	800bcf4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 800be0c:	f1ba 0f00 	cmp.w	sl, #0
 800be10:	d0f7      	beq.n	800be02 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800be12:	2264      	movs	r2, #100	@ 0x64
 800be14:	4639      	mov	r1, r7
 800be16:	a849      	add	r0, sp, #292	@ 0x124
 800be18:	f011 fc0f 	bl	801d63a <memcpy>
 800be1c:	2300      	movs	r3, #0
 800be1e:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800be22:	6821      	ldr	r1, [r4, #0]
 800be24:	a849      	add	r0, sp, #292	@ 0x124
 800be26:	f7ff fb9a 	bl	800b55e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800be2a:	b203      	sxth	r3, r0
 800be2c:	e751      	b.n	800bcd2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

0800be2e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800be2e:	2b03      	cmp	r3, #3
 800be30:	d818      	bhi.n	800be64 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800be32:	e8df f003 	tbb	[pc, r3]
 800be36:	0602      	.short	0x0602
 800be38:	130d      	.short	0x130d
 800be3a:	f9b0 2000 	ldrsh.w	r2, [r0]
 800be3e:	1850      	adds	r0, r2, r1
 800be40:	4770      	bx	lr
 800be42:	8803      	ldrh	r3, [r0, #0]
 800be44:	8880      	ldrh	r0, [r0, #4]
 800be46:	4418      	add	r0, r3
 800be48:	b200      	sxth	r0, r0
 800be4a:	1a80      	subs	r0, r0, r2
 800be4c:	3801      	subs	r0, #1
 800be4e:	4770      	bx	lr
 800be50:	8803      	ldrh	r3, [r0, #0]
 800be52:	8880      	ldrh	r0, [r0, #4]
 800be54:	4418      	add	r0, r3
 800be56:	b200      	sxth	r0, r0
 800be58:	1a40      	subs	r0, r0, r1
 800be5a:	e7f7      	b.n	800be4c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800be5c:	f9b0 0000 	ldrsh.w	r0, [r0]
 800be60:	4410      	add	r0, r2
 800be62:	4770      	bx	lr
 800be64:	2000      	movs	r0, #0
 800be66:	4770      	bx	lr

0800be68 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800be68:	2b03      	cmp	r3, #3
 800be6a:	d817      	bhi.n	800be9c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800be6c:	e8df f003 	tbb	[pc, r3]
 800be70:	10090602 	.word	0x10090602
 800be74:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800be78:	1850      	adds	r0, r2, r1
 800be7a:	4770      	bx	lr
 800be7c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800be80:	e7fa      	b.n	800be78 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800be82:	8843      	ldrh	r3, [r0, #2]
 800be84:	88c0      	ldrh	r0, [r0, #6]
 800be86:	4418      	add	r0, r3
 800be88:	b200      	sxth	r0, r0
 800be8a:	1a80      	subs	r0, r0, r2
 800be8c:	3801      	subs	r0, #1
 800be8e:	4770      	bx	lr
 800be90:	8843      	ldrh	r3, [r0, #2]
 800be92:	88c0      	ldrh	r0, [r0, #6]
 800be94:	4418      	add	r0, r3
 800be96:	b200      	sxth	r0, r0
 800be98:	1a40      	subs	r0, r0, r1
 800be9a:	e7f7      	b.n	800be8c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800be9c:	2000      	movs	r0, #0
 800be9e:	4770      	bx	lr

0800bea0 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800bea0:	4b01      	ldr	r3, [pc, #4]	@ (800bea8 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800bea2:	2200      	movs	r2, #0
 800bea4:	601a      	str	r2, [r3, #0]
 800bea6:	4770      	bx	lr
 800bea8:	200119dc 	.word	0x200119dc

0800beac <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800beac:	4603      	mov	r3, r0
 800beae:	b1c8      	cbz	r0, 800bee4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800beb0:	0c02      	lsrs	r2, r0, #16
 800beb2:	0412      	lsls	r2, r2, #16
 800beb4:	b9a2      	cbnz	r2, 800bee0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800beb6:	0403      	lsls	r3, r0, #16
 800beb8:	2010      	movs	r0, #16
 800beba:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 800bebe:	bf04      	itt	eq
 800bec0:	021b      	lsleq	r3, r3, #8
 800bec2:	3008      	addeq	r0, #8
 800bec4:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 800bec8:	bf04      	itt	eq
 800beca:	011b      	lsleq	r3, r3, #4
 800becc:	3004      	addeq	r0, #4
 800bece:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 800bed2:	bf04      	itt	eq
 800bed4:	009b      	lsleq	r3, r3, #2
 800bed6:	3002      	addeq	r0, #2
 800bed8:	2b00      	cmp	r3, #0
 800beda:	db04      	blt.n	800bee6 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800bedc:	3001      	adds	r0, #1
 800bede:	4770      	bx	lr
 800bee0:	2000      	movs	r0, #0
 800bee2:	e7ea      	b.n	800beba <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800bee4:	2020      	movs	r0, #32
 800bee6:	4770      	bx	lr

0800bee8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800bee8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800beec:	b087      	sub	sp, #28
 800beee:	460d      	mov	r5, r1
 800bef0:	4616      	mov	r6, r2
 800bef2:	4698      	mov	r8, r3
 800bef4:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 800bef8:	4601      	mov	r1, r0
 800befa:	b120      	cbz	r0, 800bf06 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800befc:	b11a      	cbz	r2, 800bf06 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800befe:	2d1f      	cmp	r5, #31
 800bf00:	d801      	bhi.n	800bf06 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800bf02:	2b1f      	cmp	r3, #31
 800bf04:	d904      	bls.n	800bf10 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 800bf06:	2000      	movs	r0, #0
 800bf08:	6038      	str	r0, [r7, #0]
 800bf0a:	b007      	add	sp, #28
 800bf0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bf10:	b97d      	cbnz	r5, 800bf32 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 800bf12:	b143      	cbz	r3, 800bf26 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 800bf14:	4602      	mov	r2, r0
 800bf16:	e9cd 4700 	strd	r4, r7, [sp]
 800bf1a:	462b      	mov	r3, r5
 800bf1c:	4641      	mov	r1, r8
 800bf1e:	4630      	mov	r0, r6
 800bf20:	f7ff ffe2 	bl	800bee8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800bf24:	e7f1      	b.n	800bf0a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800bf26:	f04f 33ff 	mov.w	r3, #4294967295
 800bf2a:	603b      	str	r3, [r7, #0]
 800bf2c:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 800bf30:	e7eb      	b.n	800bf0a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800bf32:	fa32 fa05 	lsrs.w	sl, r2, r5
 800bf36:	d106      	bne.n	800bf46 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 800bf38:	4346      	muls	r6, r0
 800bf3a:	fbb6 f0f4 	udiv	r0, r6, r4
 800bf3e:	fb04 6610 	mls	r6, r4, r0, r6
 800bf42:	603e      	str	r6, [r7, #0]
 800bf44:	e7e1      	b.n	800bf0a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800bf46:	2201      	movs	r2, #1
 800bf48:	40aa      	lsls	r2, r5
 800bf4a:	3a01      	subs	r2, #1
 800bf4c:	4016      	ands	r6, r2
 800bf4e:	fa00 fb05 	lsl.w	fp, r0, r5
 800bf52:	4630      	mov	r0, r6
 800bf54:	fbbb f9f4 	udiv	r9, fp, r4
 800bf58:	fb0a f309 	mul.w	r3, sl, r9
 800bf5c:	9303      	str	r3, [sp, #12]
 800bf5e:	f7ff ffa5 	bl	800beac <_ZN8touchgfx16TouchCalibration4clzuEm>
 800bf62:	462b      	mov	r3, r5
 800bf64:	460a      	mov	r2, r1
 800bf66:	e9cd 4700 	strd	r4, r7, [sp]
 800bf6a:	4601      	mov	r1, r0
 800bf6c:	4630      	mov	r0, r6
 800bf6e:	f7ff ffbb 	bl	800bee8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800bf72:	fb04 b919 	mls	r9, r4, r9, fp
 800bf76:	4606      	mov	r6, r0
 800bf78:	4648      	mov	r0, r9
 800bf7a:	eb05 0108 	add.w	r1, r5, r8
 800bf7e:	f7ff ff95 	bl	800beac <_ZN8touchgfx16TouchCalibration4clzuEm>
 800bf82:	ab05      	add	r3, sp, #20
 800bf84:	e9cd 4300 	strd	r4, r3, [sp]
 800bf88:	464a      	mov	r2, r9
 800bf8a:	4603      	mov	r3, r0
 800bf8c:	4650      	mov	r0, sl
 800bf8e:	f7ff ffab 	bl	800bee8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800bf92:	6839      	ldr	r1, [r7, #0]
 800bf94:	9a05      	ldr	r2, [sp, #20]
 800bf96:	9b03      	ldr	r3, [sp, #12]
 800bf98:	4411      	add	r1, r2
 800bf9a:	fbb1 f2f4 	udiv	r2, r1, r4
 800bf9e:	18d3      	adds	r3, r2, r3
 800bfa0:	441e      	add	r6, r3
 800bfa2:	fb04 1412 	mls	r4, r4, r2, r1
 800bfa6:	4430      	add	r0, r6
 800bfa8:	603c      	str	r4, [r7, #0]
 800bfaa:	e7ae      	b.n	800bf0a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0800bfac <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800bfac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bfb0:	b085      	sub	sp, #20
 800bfb2:	f1b0 0900 	subs.w	r9, r0, #0
 800bfb6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 800bfb8:	461d      	mov	r5, r3
 800bfba:	bfbf      	itttt	lt
 800bfbc:	6823      	ldrlt	r3, [r4, #0]
 800bfbe:	425b      	neglt	r3, r3
 800bfc0:	f1c9 0900 	rsblt	r9, r9, #0
 800bfc4:	6023      	strlt	r3, [r4, #0]
 800bfc6:	bfb4      	ite	lt
 800bfc8:	f04f 36ff 	movlt.w	r6, #4294967295
 800bfcc:	2601      	movge	r6, #1
 800bfce:	2a00      	cmp	r2, #0
 800bfd0:	4617      	mov	r7, r2
 800bfd2:	da04      	bge.n	800bfde <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800bfd4:	6823      	ldr	r3, [r4, #0]
 800bfd6:	425b      	negs	r3, r3
 800bfd8:	4257      	negs	r7, r2
 800bfda:	4276      	negs	r6, r6
 800bfdc:	6023      	str	r3, [r4, #0]
 800bfde:	2d00      	cmp	r5, #0
 800bfe0:	4638      	mov	r0, r7
 800bfe2:	bfba      	itte	lt
 800bfe4:	426d      	neglt	r5, r5
 800bfe6:	f04f 38ff 	movlt.w	r8, #4294967295
 800bfea:	f04f 0801 	movge.w	r8, #1
 800bfee:	f7ff ff5d 	bl	800beac <_ZN8touchgfx16TouchCalibration4clzuEm>
 800bff2:	ab03      	add	r3, sp, #12
 800bff4:	e9cd 5300 	strd	r5, r3, [sp]
 800bff8:	463a      	mov	r2, r7
 800bffa:	4603      	mov	r3, r0
 800bffc:	4648      	mov	r0, r9
 800bffe:	f7ff ff73 	bl	800bee8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c002:	6823      	ldr	r3, [r4, #0]
 800c004:	9a03      	ldr	r2, [sp, #12]
 800c006:	4546      	cmp	r6, r8
 800c008:	441a      	add	r2, r3
 800c00a:	fb92 f3f5 	sdiv	r3, r2, r5
 800c00e:	4418      	add	r0, r3
 800c010:	bf18      	it	ne
 800c012:	4240      	negne	r0, r0
 800c014:	fb05 2313 	mls	r3, r5, r3, r2
 800c018:	1c72      	adds	r2, r6, #1
 800c01a:	6023      	str	r3, [r4, #0]
 800c01c:	d105      	bne.n	800c02a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800c01e:	2b00      	cmp	r3, #0
 800c020:	f1c3 0200 	rsb	r2, r3, #0
 800c024:	db0b      	blt.n	800c03e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800c026:	6022      	str	r2, [r4, #0]
 800c028:	e006      	b.n	800c038 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c02a:	2e01      	cmp	r6, #1
 800c02c:	d104      	bne.n	800c038 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c02e:	2b00      	cmp	r3, #0
 800c030:	da02      	bge.n	800c038 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c032:	442b      	add	r3, r5
 800c034:	3801      	subs	r0, #1
 800c036:	6023      	str	r3, [r4, #0]
 800c038:	b005      	add	sp, #20
 800c03a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c03e:	3801      	subs	r0, #1
 800c040:	1b52      	subs	r2, r2, r5
 800c042:	e7f0      	b.n	800c026 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0800c044 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800c044:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800c048:	4c1c      	ldr	r4, [pc, #112]	@ (800c0bc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800c04a:	6807      	ldr	r7, [r0, #0]
 800c04c:	69a3      	ldr	r3, [r4, #24]
 800c04e:	4605      	mov	r5, r0
 800c050:	b92b      	cbnz	r3, 800c05e <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800c052:	6840      	ldr	r0, [r0, #4]
 800c054:	e9c5 7000 	strd	r7, r0, [r5]
 800c058:	b004      	add	sp, #16
 800c05a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c05e:	68a2      	ldr	r2, [r4, #8]
 800c060:	6820      	ldr	r0, [r4, #0]
 800c062:	ae04      	add	r6, sp, #16
 800c064:	f04f 0802 	mov.w	r8, #2
 800c068:	fb93 f1f8 	sdiv	r1, r3, r8
 800c06c:	440a      	add	r2, r1
 800c06e:	f846 2d04 	str.w	r2, [r6, #-4]!
 800c072:	69e1      	ldr	r1, [r4, #28]
 800c074:	9600      	str	r6, [sp, #0]
 800c076:	463a      	mov	r2, r7
 800c078:	f7ff ff98 	bl	800bfac <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c07c:	69a3      	ldr	r3, [r4, #24]
 800c07e:	686a      	ldr	r2, [r5, #4]
 800c080:	6a21      	ldr	r1, [r4, #32]
 800c082:	9600      	str	r6, [sp, #0]
 800c084:	4607      	mov	r7, r0
 800c086:	6860      	ldr	r0, [r4, #4]
 800c088:	f7ff ff90 	bl	800bfac <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c08c:	6962      	ldr	r2, [r4, #20]
 800c08e:	69a3      	ldr	r3, [r4, #24]
 800c090:	fb93 f8f8 	sdiv	r8, r3, r8
 800c094:	4442      	add	r2, r8
 800c096:	9203      	str	r2, [sp, #12]
 800c098:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800c09a:	682a      	ldr	r2, [r5, #0]
 800c09c:	9600      	str	r6, [sp, #0]
 800c09e:	4407      	add	r7, r0
 800c0a0:	68e0      	ldr	r0, [r4, #12]
 800c0a2:	f7ff ff83 	bl	800bfac <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c0a6:	9600      	str	r6, [sp, #0]
 800c0a8:	4680      	mov	r8, r0
 800c0aa:	69a3      	ldr	r3, [r4, #24]
 800c0ac:	686a      	ldr	r2, [r5, #4]
 800c0ae:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800c0b0:	6920      	ldr	r0, [r4, #16]
 800c0b2:	f7ff ff7b 	bl	800bfac <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c0b6:	4440      	add	r0, r8
 800c0b8:	e7cc      	b.n	800c054 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800c0ba:	bf00      	nop
 800c0bc:	200119e0 	.word	0x200119e0

0800c0c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800c0c0:	4b07      	ldr	r3, [pc, #28]	@ (800c0e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800c0c2:	781b      	ldrb	r3, [r3, #0]
 800c0c4:	2b01      	cmp	r3, #1
 800c0c6:	d109      	bne.n	800c0dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800c0c8:	f9b1 3000 	ldrsh.w	r3, [r1]
 800c0cc:	f9b0 2000 	ldrsh.w	r2, [r0]
 800c0d0:	8003      	strh	r3, [r0, #0]
 800c0d2:	4b04      	ldr	r3, [pc, #16]	@ (800c0e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800c0d4:	881b      	ldrh	r3, [r3, #0]
 800c0d6:	3b01      	subs	r3, #1
 800c0d8:	1a9b      	subs	r3, r3, r2
 800c0da:	800b      	strh	r3, [r1, #0]
 800c0dc:	4770      	bx	lr
 800c0de:	bf00      	nop
 800c0e0:	200119cc 	.word	0x200119cc
 800c0e4:	200119c8 	.word	0x200119c8

0800c0e8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800c0e8:	b510      	push	{r4, lr}
 800c0ea:	4b07      	ldr	r3, [pc, #28]	@ (800c108 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800c0ec:	781b      	ldrb	r3, [r3, #0]
 800c0ee:	2b01      	cmp	r3, #1
 800c0f0:	d108      	bne.n	800c104 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800c0f2:	4b06      	ldr	r3, [pc, #24]	@ (800c10c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800c0f4:	880c      	ldrh	r4, [r1, #0]
 800c0f6:	881b      	ldrh	r3, [r3, #0]
 800c0f8:	f9b0 2000 	ldrsh.w	r2, [r0]
 800c0fc:	3b01      	subs	r3, #1
 800c0fe:	1b1b      	subs	r3, r3, r4
 800c100:	8003      	strh	r3, [r0, #0]
 800c102:	800a      	strh	r2, [r1, #0]
 800c104:	bd10      	pop	{r4, pc}
 800c106:	bf00      	nop
 800c108:	200119cc 	.word	0x200119cc
 800c10c:	200119c8 	.word	0x200119c8

0800c110 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800c110:	b510      	push	{r4, lr}
 800c112:	4b0a      	ldr	r3, [pc, #40]	@ (800c13c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800c114:	781b      	ldrb	r3, [r3, #0]
 800c116:	2b01      	cmp	r3, #1
 800c118:	d10e      	bne.n	800c138 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800c11a:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800c11e:	8843      	ldrh	r3, [r0, #2]
 800c120:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c124:	8044      	strh	r4, [r0, #2]
 800c126:	18ca      	adds	r2, r1, r3
 800c128:	4b05      	ldr	r3, [pc, #20]	@ (800c140 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800c12a:	881b      	ldrh	r3, [r3, #0]
 800c12c:	1a9b      	subs	r3, r3, r2
 800c12e:	8003      	strh	r3, [r0, #0]
 800c130:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c134:	80c3      	strh	r3, [r0, #6]
 800c136:	8081      	strh	r1, [r0, #4]
 800c138:	bd10      	pop	{r4, pc}
 800c13a:	bf00      	nop
 800c13c:	200119cc 	.word	0x200119cc
 800c140:	200119c8 	.word	0x200119c8

0800c144 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800c144:	4b08      	ldr	r3, [pc, #32]	@ (800c168 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800c146:	781b      	ldrb	r3, [r3, #0]
 800c148:	2b01      	cmp	r3, #1
 800c14a:	d10c      	bne.n	800c166 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800c14c:	8803      	ldrh	r3, [r0, #0]
 800c14e:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800c152:	8842      	ldrh	r2, [r0, #2]
 800c154:	8002      	strh	r2, [r0, #0]
 800c156:	185a      	adds	r2, r3, r1
 800c158:	4b04      	ldr	r3, [pc, #16]	@ (800c16c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800c15a:	881b      	ldrh	r3, [r3, #0]
 800c15c:	1a9b      	subs	r3, r3, r2
 800c15e:	8043      	strh	r3, [r0, #2]
 800c160:	88c3      	ldrh	r3, [r0, #6]
 800c162:	8083      	strh	r3, [r0, #4]
 800c164:	80c1      	strh	r1, [r0, #6]
 800c166:	4770      	bx	lr
 800c168:	200119cc 	.word	0x200119cc
 800c16c:	200119c8 	.word	0x200119c8

0800c170 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800c170:	b510      	push	{r4, lr}
 800c172:	4b07      	ldr	r3, [pc, #28]	@ (800c190 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800c174:	781b      	ldrb	r3, [r3, #0]
 800c176:	2b01      	cmp	r3, #1
 800c178:	d108      	bne.n	800c18c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800c17a:	f9b1 3000 	ldrsh.w	r3, [r1]
 800c17e:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c182:	8003      	strh	r3, [r0, #0]
 800c184:	8893      	ldrh	r3, [r2, #4]
 800c186:	3b01      	subs	r3, #1
 800c188:	1b1b      	subs	r3, r3, r4
 800c18a:	800b      	strh	r3, [r1, #0]
 800c18c:	bd10      	pop	{r4, pc}
 800c18e:	bf00      	nop
 800c190:	200119cc 	.word	0x200119cc

0800c194 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800c194:	b510      	push	{r4, lr}
 800c196:	4b0a      	ldr	r3, [pc, #40]	@ (800c1c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800c198:	781b      	ldrb	r3, [r3, #0]
 800c19a:	2b01      	cmp	r3, #1
 800c19c:	460a      	mov	r2, r1
 800c19e:	d10d      	bne.n	800c1bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800c1a0:	8881      	ldrh	r1, [r0, #4]
 800c1a2:	8803      	ldrh	r3, [r0, #0]
 800c1a4:	440b      	add	r3, r1
 800c1a6:	4601      	mov	r1, r0
 800c1a8:	3b01      	subs	r3, #1
 800c1aa:	f821 3b02 	strh.w	r3, [r1], #2
 800c1ae:	f7ff ffdf 	bl	800c170 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800c1b2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c1b6:	88c2      	ldrh	r2, [r0, #6]
 800c1b8:	8082      	strh	r2, [r0, #4]
 800c1ba:	80c3      	strh	r3, [r0, #6]
 800c1bc:	bd10      	pop	{r4, pc}
 800c1be:	bf00      	nop
 800c1c0:	200119cc 	.word	0x200119cc

0800c1c4 <_ZN8touchgfx11Application13requestRedrawEv>:
 800c1c4:	4b06      	ldr	r3, [pc, #24]	@ (800c1e0 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800c1c6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c1ca:	4b06      	ldr	r3, [pc, #24]	@ (800c1e4 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800c1cc:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 800c1d0:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c1d4:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 800c1d8:	2100      	movs	r1, #0
 800c1da:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 800c1de:	4770      	bx	lr
 800c1e0:	200119c8 	.word	0x200119c8
 800c1e4:	200119ca 	.word	0x200119ca

0800c1e8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800c1e8:	4b03      	ldr	r3, [pc, #12]	@ (800c1f8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800c1ea:	6818      	ldr	r0, [r3, #0]
 800c1ec:	b110      	cbz	r0, 800c1f4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800c1ee:	6803      	ldr	r3, [r0, #0]
 800c1f0:	699b      	ldr	r3, [r3, #24]
 800c1f2:	4718      	bx	r3
 800c1f4:	4770      	bx	lr
 800c1f6:	bf00      	nop
 800c1f8:	20011a10 	.word	0x20011a10

0800c1fc <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800c1fc:	4770      	bx	lr
	...

0800c200 <_ZN8touchgfx11Application4drawEv>:
 800c200:	b507      	push	{r0, r1, r2, lr}
 800c202:	4b09      	ldr	r3, [pc, #36]	@ (800c228 <_ZN8touchgfx11Application4drawEv+0x28>)
 800c204:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c208:	4b08      	ldr	r3, [pc, #32]	@ (800c22c <_ZN8touchgfx11Application4drawEv+0x2c>)
 800c20a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800c20e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c212:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c216:	6803      	ldr	r3, [r0, #0]
 800c218:	2100      	movs	r1, #0
 800c21a:	9100      	str	r1, [sp, #0]
 800c21c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800c21e:	4669      	mov	r1, sp
 800c220:	4798      	blx	r3
 800c222:	b003      	add	sp, #12
 800c224:	f85d fb04 	ldr.w	pc, [sp], #4
 800c228:	200119c8 	.word	0x200119c8
 800c22c:	200119ca 	.word	0x200119ca

0800c230 <_ZN8touchgfx11Application10invalidateEv>:
 800c230:	4b09      	ldr	r3, [pc, #36]	@ (800c258 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800c232:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c236:	4b09      	ldr	r3, [pc, #36]	@ (800c25c <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800c238:	b082      	sub	sp, #8
 800c23a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c23e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800c242:	2100      	movs	r1, #0
 800c244:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c248:	9100      	str	r1, [sp, #0]
 800c24a:	6803      	ldr	r3, [r0, #0]
 800c24c:	aa02      	add	r2, sp, #8
 800c24e:	e912 0006 	ldmdb	r2, {r1, r2}
 800c252:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800c254:	b002      	add	sp, #8
 800c256:	4718      	bx	r3
 800c258:	200119c8 	.word	0x200119c8
 800c25c:	200119ca 	.word	0x200119ca

0800c260 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800c260:	4b03      	ldr	r3, [pc, #12]	@ (800c270 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800c262:	6818      	ldr	r0, [r3, #0]
 800c264:	b110      	cbz	r0, 800c26c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800c266:	6803      	ldr	r3, [r0, #0]
 800c268:	69db      	ldr	r3, [r3, #28]
 800c26a:	4718      	bx	r3
 800c26c:	4770      	bx	lr
 800c26e:	bf00      	nop
 800c270:	20011a10 	.word	0x20011a10

0800c274 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800c274:	4b03      	ldr	r3, [pc, #12]	@ (800c284 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800c276:	6818      	ldr	r0, [r3, #0]
 800c278:	b110      	cbz	r0, 800c280 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800c27a:	6803      	ldr	r3, [r0, #0]
 800c27c:	6a1b      	ldr	r3, [r3, #32]
 800c27e:	4718      	bx	r3
 800c280:	4770      	bx	lr
 800c282:	bf00      	nop
 800c284:	20011a10 	.word	0x20011a10

0800c288 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800c288:	2300      	movs	r3, #0
 800c28a:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 800c28e:	4770      	bx	lr

0800c290 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800c290:	4b03      	ldr	r3, [pc, #12]	@ (800c2a0 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800c292:	6818      	ldr	r0, [r3, #0]
 800c294:	b110      	cbz	r0, 800c29c <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800c296:	6803      	ldr	r3, [r0, #0]
 800c298:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800c29a:	4718      	bx	r3
 800c29c:	4770      	bx	lr
 800c29e:	bf00      	nop
 800c2a0:	20011a10 	.word	0x20011a10

0800c2a4 <_ZN8touchgfx11ApplicationD1Ev>:
 800c2a4:	4770      	bx	lr

0800c2a6 <_ZN8touchgfx11ApplicationD0Ev>:
 800c2a6:	b510      	push	{r4, lr}
 800c2a8:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 800c2ac:	4604      	mov	r4, r0
 800c2ae:	f010 fe49 	bl	801cf44 <_ZdlPvj>
 800c2b2:	4620      	mov	r0, r4
 800c2b4:	bd10      	pop	{r4, pc}

0800c2b6 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800c2b6:	b510      	push	{r4, lr}
 800c2b8:	f9b1 4000 	ldrsh.w	r4, [r1]
 800c2bc:	888a      	ldrh	r2, [r1, #4]
 800c2be:	f9b0 3000 	ldrsh.w	r3, [r0]
 800c2c2:	4422      	add	r2, r4
 800c2c4:	b212      	sxth	r2, r2
 800c2c6:	4293      	cmp	r3, r2
 800c2c8:	da15      	bge.n	800c2f6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800c2ca:	8882      	ldrh	r2, [r0, #4]
 800c2cc:	4413      	add	r3, r2
 800c2ce:	b21b      	sxth	r3, r3
 800c2d0:	429c      	cmp	r4, r3
 800c2d2:	da10      	bge.n	800c2f6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800c2d4:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800c2d8:	88c9      	ldrh	r1, [r1, #6]
 800c2da:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800c2de:	4419      	add	r1, r3
 800c2e0:	b209      	sxth	r1, r1
 800c2e2:	428a      	cmp	r2, r1
 800c2e4:	da07      	bge.n	800c2f6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800c2e6:	88c0      	ldrh	r0, [r0, #6]
 800c2e8:	4410      	add	r0, r2
 800c2ea:	b200      	sxth	r0, r0
 800c2ec:	4283      	cmp	r3, r0
 800c2ee:	bfac      	ite	ge
 800c2f0:	2000      	movge	r0, #0
 800c2f2:	2001      	movlt	r0, #1
 800c2f4:	bd10      	pop	{r4, pc}
 800c2f6:	2000      	movs	r0, #0
 800c2f8:	e7fc      	b.n	800c2f4 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800c2fa <_ZN8touchgfx4Rect10restrictToEss>:
 800c2fa:	f9b0 3000 	ldrsh.w	r3, [r0]
 800c2fe:	2b00      	cmp	r3, #0
 800c300:	b510      	push	{r4, lr}
 800c302:	da04      	bge.n	800c30e <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800c304:	8884      	ldrh	r4, [r0, #4]
 800c306:	4423      	add	r3, r4
 800c308:	8083      	strh	r3, [r0, #4]
 800c30a:	2300      	movs	r3, #0
 800c30c:	8003      	strh	r3, [r0, #0]
 800c30e:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c312:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c316:	1b09      	subs	r1, r1, r4
 800c318:	428b      	cmp	r3, r1
 800c31a:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800c31e:	bfc8      	it	gt
 800c320:	8081      	strhgt	r1, [r0, #4]
 800c322:	2b00      	cmp	r3, #0
 800c324:	da04      	bge.n	800c330 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800c326:	88c1      	ldrh	r1, [r0, #6]
 800c328:	440b      	add	r3, r1
 800c32a:	80c3      	strh	r3, [r0, #6]
 800c32c:	2300      	movs	r3, #0
 800c32e:	8043      	strh	r3, [r0, #2]
 800c330:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800c334:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800c338:	1a52      	subs	r2, r2, r1
 800c33a:	4293      	cmp	r3, r2
 800c33c:	bfc8      	it	gt
 800c33e:	80c2      	strhgt	r2, [r0, #6]
 800c340:	bd10      	pop	{r4, pc}
	...

0800c344 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800c344:	b510      	push	{r4, lr}
 800c346:	4b10      	ldr	r3, [pc, #64]	@ (800c388 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800c348:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c34c:	4b0f      	ldr	r3, [pc, #60]	@ (800c38c <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800c34e:	460c      	mov	r4, r1
 800c350:	4620      	mov	r0, r4
 800c352:	f9b3 1000 	ldrsh.w	r1, [r3]
 800c356:	f7ff ffd0 	bl	800c2fa <_ZN8touchgfx4Rect10restrictToEss>
 800c35a:	4b0d      	ldr	r3, [pc, #52]	@ (800c390 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800c35c:	6818      	ldr	r0, [r3, #0]
 800c35e:	b190      	cbz	r0, 800c386 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800c360:	6803      	ldr	r3, [r0, #0]
 800c362:	4621      	mov	r1, r4
 800c364:	689b      	ldr	r3, [r3, #8]
 800c366:	4798      	blx	r3
 800c368:	4b0a      	ldr	r3, [pc, #40]	@ (800c394 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800c36a:	6818      	ldr	r0, [r3, #0]
 800c36c:	b118      	cbz	r0, 800c376 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800c36e:	6803      	ldr	r3, [r0, #0]
 800c370:	4621      	mov	r1, r4
 800c372:	689b      	ldr	r3, [r3, #8]
 800c374:	4798      	blx	r3
 800c376:	4b08      	ldr	r3, [pc, #32]	@ (800c398 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800c378:	6818      	ldr	r0, [r3, #0]
 800c37a:	6803      	ldr	r3, [r0, #0]
 800c37c:	4621      	mov	r1, r4
 800c37e:	69db      	ldr	r3, [r3, #28]
 800c380:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c384:	4718      	bx	r3
 800c386:	bd10      	pop	{r4, pc}
 800c388:	200119ca 	.word	0x200119ca
 800c38c:	200119c8 	.word	0x200119c8
 800c390:	20011a10 	.word	0x20011a10
 800c394:	20011a0c 	.word	0x20011a0c
 800c398:	200119d4 	.word	0x200119d4

0800c39c <_ZNK8touchgfx4Rect8includesERKS0_>:
 800c39c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c39e:	4606      	mov	r6, r0
 800c3a0:	4608      	mov	r0, r1
 800c3a2:	460f      	mov	r7, r1
 800c3a4:	f7fc fee9 	bl	800917a <_ZNK8touchgfx4Rect7isEmptyEv>
 800c3a8:	b9e8      	cbnz	r0, 800c3e6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800c3aa:	f9b7 5000 	ldrsh.w	r5, [r7]
 800c3ae:	f9b6 4000 	ldrsh.w	r4, [r6]
 800c3b2:	42a5      	cmp	r5, r4
 800c3b4:	db17      	blt.n	800c3e6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800c3b6:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800c3ba:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800c3be:	429a      	cmp	r2, r3
 800c3c0:	db11      	blt.n	800c3e6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800c3c2:	88b9      	ldrh	r1, [r7, #4]
 800c3c4:	440d      	add	r5, r1
 800c3c6:	88b1      	ldrh	r1, [r6, #4]
 800c3c8:	440c      	add	r4, r1
 800c3ca:	b22d      	sxth	r5, r5
 800c3cc:	b224      	sxth	r4, r4
 800c3ce:	42a5      	cmp	r5, r4
 800c3d0:	dc09      	bgt.n	800c3e6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800c3d2:	88f8      	ldrh	r0, [r7, #6]
 800c3d4:	4410      	add	r0, r2
 800c3d6:	88f2      	ldrh	r2, [r6, #6]
 800c3d8:	4413      	add	r3, r2
 800c3da:	b200      	sxth	r0, r0
 800c3dc:	b21b      	sxth	r3, r3
 800c3de:	4298      	cmp	r0, r3
 800c3e0:	bfcc      	ite	gt
 800c3e2:	2000      	movgt	r0, #0
 800c3e4:	2001      	movle	r0, #1
 800c3e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800c3e8 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800c3e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c3ea:	4604      	mov	r4, r0
 800c3ec:	4608      	mov	r0, r1
 800c3ee:	460d      	mov	r5, r1
 800c3f0:	f7fc fec3 	bl	800917a <_ZNK8touchgfx4Rect7isEmptyEv>
 800c3f4:	b978      	cbnz	r0, 800c416 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800c3f6:	4620      	mov	r0, r4
 800c3f8:	f7fc febf 	bl	800917a <_ZNK8touchgfx4Rect7isEmptyEv>
 800c3fc:	f9b5 6000 	ldrsh.w	r6, [r5]
 800c400:	b150      	cbz	r0, 800c418 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800c402:	8026      	strh	r6, [r4, #0]
 800c404:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800c408:	8063      	strh	r3, [r4, #2]
 800c40a:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800c40e:	80a3      	strh	r3, [r4, #4]
 800c410:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800c414:	80e3      	strh	r3, [r4, #6]
 800c416:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c418:	f9b4 1000 	ldrsh.w	r1, [r4]
 800c41c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800c420:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800c424:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800c428:	88ed      	ldrh	r5, [r5, #6]
 800c42a:	42b1      	cmp	r1, r6
 800c42c:	460f      	mov	r7, r1
 800c42e:	bfa8      	it	ge
 800c430:	4637      	movge	r7, r6
 800c432:	4293      	cmp	r3, r2
 800c434:	4618      	mov	r0, r3
 800c436:	4466      	add	r6, ip
 800c438:	bfa8      	it	ge
 800c43a:	4610      	movge	r0, r2
 800c43c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800c440:	8027      	strh	r7, [r4, #0]
 800c442:	442a      	add	r2, r5
 800c444:	88e5      	ldrh	r5, [r4, #6]
 800c446:	8060      	strh	r0, [r4, #2]
 800c448:	4461      	add	r1, ip
 800c44a:	442b      	add	r3, r5
 800c44c:	b236      	sxth	r6, r6
 800c44e:	b209      	sxth	r1, r1
 800c450:	b212      	sxth	r2, r2
 800c452:	b21b      	sxth	r3, r3
 800c454:	428e      	cmp	r6, r1
 800c456:	bfac      	ite	ge
 800c458:	ebc7 0106 	rsbge	r1, r7, r6
 800c45c:	ebc7 0101 	rsblt	r1, r7, r1
 800c460:	429a      	cmp	r2, r3
 800c462:	bfac      	ite	ge
 800c464:	ebc0 0202 	rsbge	r2, r0, r2
 800c468:	ebc0 0203 	rsblt	r2, r0, r3
 800c46c:	80a1      	strh	r1, [r4, #4]
 800c46e:	80e2      	strh	r2, [r4, #6]
 800c470:	e7d1      	b.n	800c416 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800c474 <_ZN8touchgfx11Application11getInstanceEv>:
 800c474:	4b01      	ldr	r3, [pc, #4]	@ (800c47c <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800c476:	6818      	ldr	r0, [r3, #0]
 800c478:	4770      	bx	lr
 800c47a:	bf00      	nop
 800c47c:	20011a20 	.word	0x20011a20

0800c480 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 800c480:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c482:	4b10      	ldr	r3, [pc, #64]	@ (800c4c4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 800c484:	781b      	ldrb	r3, [r3, #0]
 800c486:	4605      	mov	r5, r0
 800c488:	b1d3      	cbz	r3, 800c4c0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 800c48a:	4b0f      	ldr	r3, [pc, #60]	@ (800c4c8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 800c48c:	4f0f      	ldr	r7, [pc, #60]	@ (800c4cc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 800c48e:	881c      	ldrh	r4, [r3, #0]
 800c490:	f100 06ee 	add.w	r6, r0, #238	@ 0xee
 800c494:	f8b5 312e 	ldrh.w	r3, [r5, #302]	@ 0x12e
 800c498:	42a3      	cmp	r3, r4
 800c49a:	d90e      	bls.n	800c4ba <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 800c49c:	683b      	ldr	r3, [r7, #0]
 800c49e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800c4a2:	b10a      	cbz	r2, 800c4a8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 800c4a4:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800c4a6:	b900      	cbnz	r0, 800c4aa <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 800c4a8:	6898      	ldr	r0, [r3, #8]
 800c4aa:	6803      	ldr	r3, [r0, #0]
 800c4ac:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 800c4b0:	69db      	ldr	r3, [r3, #28]
 800c4b2:	3401      	adds	r4, #1
 800c4b4:	4798      	blx	r3
 800c4b6:	b2a4      	uxth	r4, r4
 800c4b8:	e7ec      	b.n	800c494 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 800c4ba:	2300      	movs	r3, #0
 800c4bc:	f8a5 312e 	strh.w	r3, [r5, #302]	@ 0x12e
 800c4c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c4c2:	bf00      	nop
 800c4c4:	200119d2 	.word	0x200119d2
 800c4c8:	20000084 	.word	0x20000084
 800c4cc:	200119d4 	.word	0x200119d4

0800c4d0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800c4d0:	b510      	push	{r4, lr}
 800c4d2:	2300      	movs	r3, #0
 800c4d4:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 800c4d8:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800c4dc:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800c4e0:	4604      	mov	r4, r0
 800c4e2:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800c4e6:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 800c4ea:	429a      	cmp	r2, r3
 800c4ec:	d90e      	bls.n	800c50c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800c4ee:	18e2      	adds	r2, r4, r3
 800c4f0:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 800c4f4:	b122      	cbz	r2, 800c500 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 800c4f6:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800c4fa:	6803      	ldr	r3, [r0, #0]
 800c4fc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800c4fe:	4798      	blx	r3
 800c500:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800c504:	3301      	adds	r3, #1
 800c506:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800c50a:	e7ea      	b.n	800c4e2 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 800c50c:	bd10      	pop	{r4, pc}

0800c50e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 800c50e:	b530      	push	{r4, r5, lr}
 800c510:	f8b0 5080 	ldrh.w	r5, [r0, #128]	@ 0x80
 800c514:	2200      	movs	r2, #0
 800c516:	b293      	uxth	r3, r2
 800c518:	429d      	cmp	r5, r3
 800c51a:	d90e      	bls.n	800c53a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 800c51c:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 800c520:	428b      	cmp	r3, r1
 800c522:	d10b      	bne.n	800c53c <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 800c524:	1884      	adds	r4, r0, r2
 800c526:	f894 3084 	ldrb.w	r3, [r4, #132]	@ 0x84
 800c52a:	b13b      	cbz	r3, 800c53c <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 800c52c:	3b01      	subs	r3, #1
 800c52e:	b2db      	uxtb	r3, r3
 800c530:	f884 3084 	strb.w	r3, [r4, #132]	@ 0x84
 800c534:	b90b      	cbnz	r3, 800c53a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 800c536:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 800c53a:	bd30      	pop	{r4, r5, pc}
 800c53c:	3201      	adds	r2, #1
 800c53e:	e7ea      	b.n	800c516 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

0800c540 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800c540:	2300      	movs	r3, #0
 800c542:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800c546:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 800c54a:	30a4      	adds	r0, #164	@ 0xa4
 800c54c:	f802 3b01 	strb.w	r3, [r2], #1
 800c550:	4282      	cmp	r2, r0
 800c552:	d1fb      	bne.n	800c54c <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800c554:	4770      	bx	lr
	...

0800c558 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800c558:	b570      	push	{r4, r5, r6, lr}
 800c55a:	4c0b      	ldr	r4, [pc, #44]	@ (800c588 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800c55c:	4605      	mov	r5, r0
 800c55e:	6820      	ldr	r0, [r4, #0]
 800c560:	460e      	mov	r6, r1
 800c562:	b110      	cbz	r0, 800c56a <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 800c564:	6803      	ldr	r3, [r0, #0]
 800c566:	695b      	ldr	r3, [r3, #20]
 800c568:	4798      	blx	r3
 800c56a:	1d28      	adds	r0, r5, #4
 800c56c:	f7ff ffe8 	bl	800c540 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800c570:	6026      	str	r6, [r4, #0]
 800c572:	6833      	ldr	r3, [r6, #0]
 800c574:	4630      	mov	r0, r6
 800c576:	68db      	ldr	r3, [r3, #12]
 800c578:	4798      	blx	r3
 800c57a:	682b      	ldr	r3, [r5, #0]
 800c57c:	4628      	mov	r0, r5
 800c57e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800c580:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c584:	4718      	bx	r3
 800c586:	bf00      	nop
 800c588:	20011a10 	.word	0x20011a10

0800c58c <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800c58c:	2300      	movs	r3, #0
 800c58e:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 800c592:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 800c596:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c598:	461a      	mov	r2, r3
 800c59a:	461c      	mov	r4, r3
 800c59c:	461d      	mov	r5, r3
 800c59e:	459c      	cmp	ip, r3
 800c5a0:	dd1a      	ble.n	800c5d8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800c5a2:	18c6      	adds	r6, r0, r3
 800c5a4:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 800c5a8:	b16e      	cbz	r6, 800c5c6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 800c5aa:	429a      	cmp	r2, r3
 800c5ac:	d008      	beq.n	800c5c0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 800c5ae:	fa1f fe82 	uxth.w	lr, r2
 800c5b2:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 800c5b6:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 800c5ba:	1887      	adds	r7, r0, r2
 800c5bc:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 800c5c0:	3201      	adds	r2, #1
 800c5c2:	3301      	adds	r3, #1
 800c5c4:	e7eb      	b.n	800c59e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 800c5c6:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 800c5ca:	4299      	cmp	r1, r3
 800c5cc:	bfa8      	it	ge
 800c5ce:	3501      	addge	r5, #1
 800c5d0:	429e      	cmp	r6, r3
 800c5d2:	bfc8      	it	gt
 800c5d4:	3401      	addgt	r4, #1
 800c5d6:	e7f4      	b.n	800c5c2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 800c5d8:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 800c5dc:	1b49      	subs	r1, r1, r5
 800c5de:	1b1b      	subs	r3, r3, r4
 800c5e0:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 800c5e4:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800c5e8:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800c5ec:	4293      	cmp	r3, r2
 800c5ee:	dd03      	ble.n	800c5f8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 800c5f0:	3b01      	subs	r3, #1
 800c5f2:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800c5f6:	e7f7      	b.n	800c5e8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 800c5f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800c5fc <_ZN8touchgfx11Application15handleTickEventEv>:
 800c5fc:	b570      	push	{r4, r5, r6, lr}
 800c5fe:	4d16      	ldr	r5, [pc, #88]	@ (800c658 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 800c600:	4604      	mov	r4, r0
 800c602:	6828      	ldr	r0, [r5, #0]
 800c604:	b140      	cbz	r0, 800c618 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800c606:	7a03      	ldrb	r3, [r0, #8]
 800c608:	b933      	cbnz	r3, 800c618 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800c60a:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800c60e:	6803      	ldr	r3, [r0, #0]
 800c610:	689b      	ldr	r3, [r3, #8]
 800c612:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c616:	4718      	bx	r3
 800c618:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 800c61c:	4e0f      	ldr	r6, [pc, #60]	@ (800c65c <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 800c61e:	b973      	cbnz	r3, 800c63e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800c620:	b168      	cbz	r0, 800c63e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800c622:	7a03      	ldrb	r3, [r0, #8]
 800c624:	b15b      	cbz	r3, 800c63e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800c626:	6830      	ldr	r0, [r6, #0]
 800c628:	b110      	cbz	r0, 800c630 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800c62a:	6803      	ldr	r3, [r0, #0]
 800c62c:	691b      	ldr	r3, [r3, #16]
 800c62e:	4798      	blx	r3
 800c630:	6828      	ldr	r0, [r5, #0]
 800c632:	6803      	ldr	r3, [r0, #0]
 800c634:	68db      	ldr	r3, [r3, #12]
 800c636:	4798      	blx	r3
 800c638:	2301      	movs	r3, #1
 800c63a:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800c63e:	3404      	adds	r4, #4
 800c640:	4620      	mov	r0, r4
 800c642:	f7ff ff45 	bl	800c4d0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 800c646:	4620      	mov	r0, r4
 800c648:	f7ff ffa0 	bl	800c58c <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800c64c:	6830      	ldr	r0, [r6, #0]
 800c64e:	b110      	cbz	r0, 800c656 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 800c650:	6803      	ldr	r3, [r0, #0]
 800c652:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800c654:	e7dd      	b.n	800c612 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800c656:	bd70      	pop	{r4, r5, r6, pc}
 800c658:	20011a14 	.word	0x20011a14
 800c65c:	20011a10 	.word	0x20011a10

0800c660 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 800c660:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c662:	2300      	movs	r3, #0
 800c664:	4604      	mov	r4, r0
 800c666:	460d      	mov	r5, r1
 800c668:	f8b0 1080 	ldrh.w	r1, [r0, #128]	@ 0x80
 800c66c:	4618      	mov	r0, r3
 800c66e:	b29a      	uxth	r2, r3
 800c670:	4291      	cmp	r1, r2
 800c672:	d911      	bls.n	800c698 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 800c674:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 800c678:	18e6      	adds	r6, r4, r3
 800c67a:	42af      	cmp	r7, r5
 800c67c:	f896 2084 	ldrb.w	r2, [r6, #132]	@ 0x84
 800c680:	d105      	bne.n	800c68e <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 800c682:	2aff      	cmp	r2, #255	@ 0xff
 800c684:	d002      	beq.n	800c68c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 800c686:	3201      	adds	r2, #1
 800c688:	f886 2084 	strb.w	r2, [r6, #132]	@ 0x84
 800c68c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c68e:	2a00      	cmp	r2, #0
 800c690:	bf08      	it	eq
 800c692:	2001      	moveq	r0, #1
 800c694:	3301      	adds	r3, #1
 800c696:	e7ea      	b.n	800c66e <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 800c698:	b120      	cbz	r0, 800c6a4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 800c69a:	2920      	cmp	r1, #32
 800c69c:	d102      	bne.n	800c6a4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 800c69e:	4620      	mov	r0, r4
 800c6a0:	f7ff ff74 	bl	800c58c <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800c6a4:	f8b4 3080 	ldrh.w	r3, [r4, #128]	@ 0x80
 800c6a8:	2b1f      	cmp	r3, #31
 800c6aa:	d8ef      	bhi.n	800c68c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 800c6ac:	18e2      	adds	r2, r4, r3
 800c6ae:	2101      	movs	r1, #1
 800c6b0:	f882 1084 	strb.w	r1, [r2, #132]	@ 0x84
 800c6b4:	185a      	adds	r2, r3, r1
 800c6b6:	f8a4 2080 	strh.w	r2, [r4, #128]	@ 0x80
 800c6ba:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 800c6be:	e7e5      	b.n	800c68c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

0800c6c0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800c6c0:	4603      	mov	r3, r0
 800c6c2:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 800c6c6:	2200      	movs	r2, #0
 800c6c8:	801a      	strh	r2, [r3, #0]
 800c6ca:	805a      	strh	r2, [r3, #2]
 800c6cc:	809a      	strh	r2, [r3, #4]
 800c6ce:	80da      	strh	r2, [r3, #6]
 800c6d0:	3308      	adds	r3, #8
 800c6d2:	428b      	cmp	r3, r1
 800c6d4:	d1f8      	bne.n	800c6c8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800c6d6:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 800c6da:	4770      	bx	lr

0800c6dc <_ZN8touchgfx11ApplicationC1Ev>:
 800c6dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c6de:	4606      	mov	r6, r0
 800c6e0:	4b1c      	ldr	r3, [pc, #112]	@ (800c754 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800c6e2:	f846 3b04 	str.w	r3, [r6], #4
 800c6e6:	4604      	mov	r4, r0
 800c6e8:	2500      	movs	r5, #0
 800c6ea:	22a8      	movs	r2, #168	@ 0xa8
 800c6ec:	2100      	movs	r1, #0
 800c6ee:	4630      	mov	r0, r6
 800c6f0:	f010 fe7d 	bl	801d3ee <memset>
 800c6f4:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 800c6f8:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800c6fc:	f7ff ffe0 	bl	800c6c0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800c700:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800c704:	f7ff ffdc 	bl	800c6c0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800c708:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 800c70c:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 800c710:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 800c714:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 800c718:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 800c71c:	490e      	ldr	r1, [pc, #56]	@ (800c758 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800c71e:	480f      	ldr	r0, [pc, #60]	@ (800c75c <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800c720:	4f0f      	ldr	r7, [pc, #60]	@ (800c760 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800c722:	f010 fac7 	bl	801ccb4 <CRC_Lock>
 800c726:	4b0f      	ldr	r3, [pc, #60]	@ (800c764 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 800c728:	b158      	cbz	r0, 800c742 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 800c72a:	801d      	strh	r5, [r3, #0]
 800c72c:	4a0e      	ldr	r2, [pc, #56]	@ (800c768 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 800c72e:	2300      	movs	r3, #0
 800c730:	6013      	str	r3, [r2, #0]
 800c732:	4a0e      	ldr	r2, [pc, #56]	@ (800c76c <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 800c734:	603b      	str	r3, [r7, #0]
 800c736:	4630      	mov	r0, r6
 800c738:	6013      	str	r3, [r2, #0]
 800c73a:	f7ff ff01 	bl	800c540 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800c73e:	4620      	mov	r0, r4
 800c740:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c742:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800c746:	2002      	movs	r0, #2
 800c748:	801a      	strh	r2, [r3, #0]
 800c74a:	6038      	str	r0, [r7, #0]
 800c74c:	f001 fa5a 	bl	800dc04 <_ZN8touchgfx6Screen4drawEv>
 800c750:	e7ec      	b.n	800c72c <_ZN8touchgfx11ApplicationC1Ev+0x50>
 800c752:	bf00      	nop
 800c754:	0801fca4 	.word	0x0801fca4
 800c758:	b5e8b5cd 	.word	0xb5e8b5cd
 800c75c:	f407a5c2 	.word	0xf407a5c2
 800c760:	20011a10 	.word	0x20011a10
 800c764:	20000084 	.word	0x20000084
 800c768:	20011a20 	.word	0x20011a20
 800c76c:	20011a14 	.word	0x20011a14

0800c770 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800c770:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 800c774:	3b01      	subs	r3, #1
 800c776:	b29b      	uxth	r3, r3
 800c778:	428b      	cmp	r3, r1
 800c77a:	b510      	push	{r4, lr}
 800c77c:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 800c780:	d908      	bls.n	800c794 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800c782:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800c786:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800c78a:	681a      	ldr	r2, [r3, #0]
 800c78c:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800c790:	685a      	ldr	r2, [r3, #4]
 800c792:	6062      	str	r2, [r4, #4]
 800c794:	bd10      	pop	{r4, pc}
	...

0800c798 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800c798:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c79c:	4b8f      	ldr	r3, [pc, #572]	@ (800c9dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 800c79e:	b08f      	sub	sp, #60	@ 0x3c
 800c7a0:	ac0a      	add	r4, sp, #40	@ 0x28
 800c7a2:	e884 0006 	stmia.w	r4, {r1, r2}
 800c7a6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c7aa:	4b8d      	ldr	r3, [pc, #564]	@ (800c9e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 800c7ac:	4683      	mov	fp, r0
 800c7ae:	f9b3 1000 	ldrsh.w	r1, [r3]
 800c7b2:	4620      	mov	r0, r4
 800c7b4:	f7ff fda1 	bl	800c2fa <_ZN8touchgfx4Rect10restrictToEss>
 800c7b8:	4620      	mov	r0, r4
 800c7ba:	f7fc fcde 	bl	800917a <_ZNK8touchgfx4Rect7isEmptyEv>
 800c7be:	2800      	cmp	r0, #0
 800c7c0:	d16a      	bne.n	800c898 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800c7c2:	9403      	str	r4, [sp, #12]
 800c7c4:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800c7c8:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800c7cc:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 800c7d0:	35a4      	adds	r5, #164	@ 0xa4
 800c7d2:	9301      	str	r3, [sp, #4]
 800c7d4:	b15c      	cbz	r4, 800c7ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800c7d6:	4629      	mov	r1, r5
 800c7d8:	9803      	ldr	r0, [sp, #12]
 800c7da:	f7ff fddf 	bl	800c39c <_ZNK8touchgfx4Rect8includesERKS0_>
 800c7de:	3c01      	subs	r4, #1
 800c7e0:	b118      	cbz	r0, 800c7ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 800c7e2:	b2a1      	uxth	r1, r4
 800c7e4:	9801      	ldr	r0, [sp, #4]
 800c7e6:	f7ff ffc3 	bl	800c770 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800c7ea:	3d08      	subs	r5, #8
 800c7ec:	e7f2      	b.n	800c7d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 800c7ee:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 800c7f2:	f8cd a010 	str.w	sl, [sp, #16]
 800c7f6:	f10a 33ff 	add.w	r3, sl, #4294967295
 800c7fa:	9302      	str	r3, [sp, #8]
 800c7fc:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 800c800:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 800c804:	9306      	str	r3, [sp, #24]
 800c806:	445c      	add	r4, fp
 800c808:	2500      	movs	r5, #0
 800c80a:	4626      	mov	r6, r4
 800c80c:	f8cd a014 	str.w	sl, [sp, #20]
 800c810:	462f      	mov	r7, r5
 800c812:	9b05      	ldr	r3, [sp, #20]
 800c814:	2b00      	cmp	r3, #0
 800c816:	d073      	beq.n	800c900 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800c818:	9903      	ldr	r1, [sp, #12]
 800c81a:	4630      	mov	r0, r6
 800c81c:	f7ff fd4b 	bl	800c2b6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800c820:	b350      	cbz	r0, 800c878 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800c822:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 800c826:	f9b6 c000 	ldrsh.w	ip, [r6]
 800c82a:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 800c82e:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 800c832:	45e6      	cmp	lr, ip
 800c834:	db33      	blt.n	800c89e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800c836:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800c83a:	88b3      	ldrh	r3, [r6, #4]
 800c83c:	4472      	add	r2, lr
 800c83e:	4463      	add	r3, ip
 800c840:	b212      	sxth	r2, r2
 800c842:	b21b      	sxth	r3, r3
 800c844:	429a      	cmp	r2, r3
 800c846:	dc2a      	bgt.n	800c89e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800c848:	88f3      	ldrh	r3, [r6, #6]
 800c84a:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800c84e:	fa1f f289 	uxth.w	r2, r9
 800c852:	4413      	add	r3, r2
 800c854:	b29b      	uxth	r3, r3
 800c856:	45c8      	cmp	r8, r9
 800c858:	fa1f fc88 	uxth.w	ip, r8
 800c85c:	fa0f fe83 	sxth.w	lr, r3
 800c860:	db0f      	blt.n	800c882 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800c862:	eba3 030c 	sub.w	r3, r3, ip
 800c866:	1ac9      	subs	r1, r1, r3
 800c868:	b209      	sxth	r1, r1
 800c86a:	2900      	cmp	r1, #0
 800c86c:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800c870:	dd12      	ble.n	800c898 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800c872:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 800c876:	4605      	mov	r5, r0
 800c878:	9b05      	ldr	r3, [sp, #20]
 800c87a:	3b01      	subs	r3, #1
 800c87c:	9305      	str	r3, [sp, #20]
 800c87e:	3e08      	subs	r6, #8
 800c880:	e7c7      	b.n	800c812 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800c882:	4461      	add	r1, ip
 800c884:	b209      	sxth	r1, r1
 800c886:	4571      	cmp	r1, lr
 800c888:	dc38      	bgt.n	800c8fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800c88a:	eba2 020c 	sub.w	r2, r2, ip
 800c88e:	b212      	sxth	r2, r2
 800c890:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 800c894:	2a00      	cmp	r2, #0
 800c896:	dcee      	bgt.n	800c876 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800c898:	b00f      	add	sp, #60	@ 0x3c
 800c89a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c89e:	45c8      	cmp	r8, r9
 800c8a0:	db2c      	blt.n	800c8fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800c8a2:	88f3      	ldrh	r3, [r6, #6]
 800c8a4:	4499      	add	r9, r3
 800c8a6:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 800c8aa:	4498      	add	r8, r3
 800c8ac:	fa0f f989 	sxth.w	r9, r9
 800c8b0:	fa0f f888 	sxth.w	r8, r8
 800c8b4:	45c1      	cmp	r9, r8
 800c8b6:	db21      	blt.n	800c8fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800c8b8:	88b3      	ldrh	r3, [r6, #4]
 800c8ba:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 800c8be:	fa1f f28c 	uxth.w	r2, ip
 800c8c2:	4413      	add	r3, r2
 800c8c4:	b29b      	uxth	r3, r3
 800c8c6:	45e6      	cmp	lr, ip
 800c8c8:	fa1f f88e 	uxth.w	r8, lr
 800c8cc:	fa0f f983 	sxth.w	r9, r3
 800c8d0:	db0a      	blt.n	800c8e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 800c8d2:	eba3 0308 	sub.w	r3, r3, r8
 800c8d6:	1ac9      	subs	r1, r1, r3
 800c8d8:	b209      	sxth	r1, r1
 800c8da:	2900      	cmp	r1, #0
 800c8dc:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 800c8e0:	ddda      	ble.n	800c898 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800c8e2:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800c8e6:	e7c6      	b.n	800c876 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800c8e8:	4441      	add	r1, r8
 800c8ea:	b209      	sxth	r1, r1
 800c8ec:	4549      	cmp	r1, r9
 800c8ee:	dc05      	bgt.n	800c8fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800c8f0:	eba2 0208 	sub.w	r2, r2, r8
 800c8f4:	b212      	sxth	r2, r2
 800c8f6:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800c8fa:	e7cb      	b.n	800c894 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 800c8fc:	4607      	mov	r7, r0
 800c8fe:	e7bb      	b.n	800c878 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800c900:	2d00      	cmp	r5, #0
 800c902:	d181      	bne.n	800c808 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 800c904:	2f00      	cmp	r7, #0
 800c906:	f000 81dd 	beq.w	800ccc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800c90a:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 800c90e:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 800c912:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 800c916:	b2b3      	uxth	r3, r6
 800c918:	9305      	str	r3, [sp, #20]
 800c91a:	9a05      	ldr	r2, [sp, #20]
 800c91c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800c920:	4413      	add	r3, r2
 800c922:	b2ba      	uxth	r2, r7
 800c924:	4492      	add	sl, r2
 800c926:	b29b      	uxth	r3, r3
 800c928:	fa1f fa8a 	uxth.w	sl, sl
 800c92c:	fa0f f883 	sxth.w	r8, r3
 800c930:	fa0f f98a 	sxth.w	r9, sl
 800c934:	e9cd 2307 	strd	r2, r3, [sp, #28]
 800c938:	9b04      	ldr	r3, [sp, #16]
 800c93a:	2b00      	cmp	r3, #0
 800c93c:	d052      	beq.n	800c9e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800c93e:	9903      	ldr	r1, [sp, #12]
 800c940:	4620      	mov	r0, r4
 800c942:	f7ff fcb8 	bl	800c2b6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800c946:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800c94a:	b1c0      	cbz	r0, 800c97e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800c94c:	f9b4 e000 	ldrsh.w	lr, [r4]
 800c950:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800c954:	4576      	cmp	r6, lr
 800c956:	dc22      	bgt.n	800c99e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800c958:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800c95c:	44f4      	add	ip, lr
 800c95e:	fa0f fc8c 	sxth.w	ip, ip
 800c962:	45e0      	cmp	r8, ip
 800c964:	db1b      	blt.n	800c99e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800c966:	428f      	cmp	r7, r1
 800c968:	fa1f fc81 	uxth.w	ip, r1
 800c96c:	88e1      	ldrh	r1, [r4, #6]
 800c96e:	dc0d      	bgt.n	800c98c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800c970:	ebaa 0c0c 	sub.w	ip, sl, ip
 800c974:	eba1 010c 	sub.w	r1, r1, ip
 800c978:	f8a4 9002 	strh.w	r9, [r4, #2]
 800c97c:	80e1      	strh	r1, [r4, #6]
 800c97e:	4628      	mov	r0, r5
 800c980:	9904      	ldr	r1, [sp, #16]
 800c982:	3901      	subs	r1, #1
 800c984:	9104      	str	r1, [sp, #16]
 800c986:	3c08      	subs	r4, #8
 800c988:	4605      	mov	r5, r0
 800c98a:	e7d3      	b.n	800c934 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 800c98c:	4461      	add	r1, ip
 800c98e:	b209      	sxth	r1, r1
 800c990:	4549      	cmp	r1, r9
 800c992:	dcf5      	bgt.n	800c980 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800c994:	eba2 0c0c 	sub.w	ip, r2, ip
 800c998:	f8a4 c006 	strh.w	ip, [r4, #6]
 800c99c:	e7ef      	b.n	800c97e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800c99e:	428f      	cmp	r7, r1
 800c9a0:	dcee      	bgt.n	800c980 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800c9a2:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 800c9a6:	4461      	add	r1, ip
 800c9a8:	b209      	sxth	r1, r1
 800c9aa:	4589      	cmp	r9, r1
 800c9ac:	dbe8      	blt.n	800c980 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800c9ae:	4576      	cmp	r6, lr
 800c9b0:	fa1f fc8e 	uxth.w	ip, lr
 800c9b4:	88a1      	ldrh	r1, [r4, #4]
 800c9b6:	dc07      	bgt.n	800c9c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 800c9b8:	eba3 0c0c 	sub.w	ip, r3, ip
 800c9bc:	eba1 010c 	sub.w	r1, r1, ip
 800c9c0:	f8a4 8000 	strh.w	r8, [r4]
 800c9c4:	80a1      	strh	r1, [r4, #4]
 800c9c6:	e7da      	b.n	800c97e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800c9c8:	4461      	add	r1, ip
 800c9ca:	b209      	sxth	r1, r1
 800c9cc:	4588      	cmp	r8, r1
 800c9ce:	dbd7      	blt.n	800c980 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800c9d0:	9905      	ldr	r1, [sp, #20]
 800c9d2:	eba1 0c0c 	sub.w	ip, r1, ip
 800c9d6:	f8a4 c004 	strh.w	ip, [r4, #4]
 800c9da:	e7d0      	b.n	800c97e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800c9dc:	200119ca 	.word	0x200119ca
 800c9e0:	200119c8 	.word	0x200119c8
 800c9e4:	2d00      	cmp	r5, #0
 800c9e6:	f000 816d 	beq.w	800ccc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800c9ea:	9b06      	ldr	r3, [sp, #24]
 800c9ec:	445b      	add	r3, fp
 800c9ee:	461c      	mov	r4, r3
 800c9f0:	9b02      	ldr	r3, [sp, #8]
 800c9f2:	3301      	adds	r3, #1
 800c9f4:	f000 8166 	beq.w	800ccc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800c9f8:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 800c9fc:	4629      	mov	r1, r5
 800c9fe:	9803      	ldr	r0, [sp, #12]
 800ca00:	f7ff fccc 	bl	800c39c <_ZNK8touchgfx4Rect8includesERKS0_>
 800ca04:	b120      	cbz	r0, 800ca10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 800ca06:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800ca0a:	9801      	ldr	r0, [sp, #4]
 800ca0c:	f7ff feb0 	bl	800c770 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800ca10:	9903      	ldr	r1, [sp, #12]
 800ca12:	4628      	mov	r0, r5
 800ca14:	f7ff fc4f 	bl	800c2b6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800ca18:	2800      	cmp	r0, #0
 800ca1a:	f000 809c 	beq.w	800cb56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800ca1e:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 800ca22:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800ca26:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800ca2a:	9309      	str	r3, [sp, #36]	@ 0x24
 800ca2c:	fa1f f189 	uxth.w	r1, r9
 800ca30:	eb01 0c03 	add.w	ip, r1, r3
 800ca34:	fa1f fa8c 	uxth.w	sl, ip
 800ca38:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 800ca3c:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 800ca40:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 800ca44:	b283      	uxth	r3, r0
 800ca46:	eb03 050c 	add.w	r5, r3, ip
 800ca4a:	b2ad      	uxth	r5, r5
 800ca4c:	9505      	str	r5, [sp, #20]
 800ca4e:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 800ca52:	9504      	str	r5, [sp, #16]
 800ca54:	4548      	cmp	r0, r9
 800ca56:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 800ca5a:	f340 8099 	ble.w	800cb90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 800ca5e:	1a5b      	subs	r3, r3, r1
 800ca60:	b29b      	uxth	r3, r3
 800ca62:	4596      	cmp	lr, r2
 800ca64:	fa0f f08a 	sxth.w	r0, sl
 800ca68:	b21e      	sxth	r6, r3
 800ca6a:	dd2e      	ble.n	800caca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 800ca6c:	9f02      	ldr	r7, [sp, #8]
 800ca6e:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 800ca72:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 800ca76:	9f04      	ldr	r7, [sp, #16]
 800ca78:	1a3f      	subs	r7, r7, r0
 800ca7a:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 800ca7e:	fa1f fe8e 	uxth.w	lr, lr
 800ca82:	b292      	uxth	r2, r2
 800ca84:	ebae 0102 	sub.w	r1, lr, r2
 800ca88:	44a6      	add	lr, r4
 800ca8a:	4402      	add	r2, r0
 800ca8c:	b289      	uxth	r1, r1
 800ca8e:	fa0f fe8e 	sxth.w	lr, lr
 800ca92:	b212      	sxth	r2, r2
 800ca94:	b20d      	sxth	r5, r1
 800ca96:	ebae 0202 	sub.w	r2, lr, r2
 800ca9a:	436f      	muls	r7, r5
 800ca9c:	4372      	muls	r2, r6
 800ca9e:	4297      	cmp	r7, r2
 800caa0:	db09      	blt.n	800cab6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 800caa2:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 800caa6:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 800caaa:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800caae:	449c      	add	ip, r3
 800cab0:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800cab4:	e686      	b.n	800c7c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800cab6:	4421      	add	r1, r4
 800cab8:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 800cabc:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 800cac0:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800cac4:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800cac8:	e67c      	b.n	800c7c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800caca:	9f04      	ldr	r7, [sp, #16]
 800cacc:	42b8      	cmp	r0, r7
 800cace:	da27      	bge.n	800cb20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 800cad0:	9902      	ldr	r1, [sp, #8]
 800cad2:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 800cad6:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 800cada:	eb05 010e 	add.w	r1, r5, lr
 800cade:	fa1f f881 	uxth.w	r8, r1
 800cae2:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 800cae6:	4411      	add	r1, r2
 800cae8:	eba1 0108 	sub.w	r1, r1, r8
 800caec:	b289      	uxth	r1, r1
 800caee:	fa0f f988 	sxth.w	r9, r8
 800caf2:	eba2 020e 	sub.w	r2, r2, lr
 800caf6:	fa0f f881 	sxth.w	r8, r1
 800cafa:	1a3f      	subs	r7, r7, r0
 800cafc:	4372      	muls	r2, r6
 800cafe:	fb08 f707 	mul.w	r7, r8, r7
 800cb02:	42ba      	cmp	r2, r7
 800cb04:	dc06      	bgt.n	800cb14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 800cb06:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 800cb0a:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 800cb0e:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 800cb12:	e7ca      	b.n	800caaa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 800cb14:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 800cb18:	4429      	add	r1, r5
 800cb1a:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800cb1e:	e651      	b.n	800c7c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800cb20:	9805      	ldr	r0, [sp, #20]
 800cb22:	ebaa 0000 	sub.w	r0, sl, r0
 800cb26:	b280      	uxth	r0, r0
 800cb28:	2d06      	cmp	r5, #6
 800cb2a:	fa0f fe80 	sxth.w	lr, r0
 800cb2e:	d817      	bhi.n	800cb60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 800cb30:	9b04      	ldr	r3, [sp, #16]
 800cb32:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800cb36:	1c6b      	adds	r3, r5, #1
 800cb38:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 800cb3c:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 800cb40:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800cb44:	9b01      	ldr	r3, [sp, #4]
 800cb46:	9801      	ldr	r0, [sp, #4]
 800cb48:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800cb4c:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800cb50:	805a      	strh	r2, [r3, #2]
 800cb52:	809e      	strh	r6, [r3, #4]
 800cb54:	80d9      	strh	r1, [r3, #6]
 800cb56:	9b02      	ldr	r3, [sp, #8]
 800cb58:	3b01      	subs	r3, #1
 800cb5a:	9302      	str	r3, [sp, #8]
 800cb5c:	3c08      	subs	r4, #8
 800cb5e:	e747      	b.n	800c9f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 800cb60:	9a02      	ldr	r2, [sp, #8]
 800cb62:	45b6      	cmp	lr, r6
 800cb64:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800cb68:	db0d      	blt.n	800cb86 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 800cb6a:	449c      	add	ip, r3
 800cb6c:	fa1f fc8c 	uxth.w	ip, ip
 800cb70:	445a      	add	r2, fp
 800cb72:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800cb76:	448c      	add	ip, r1
 800cb78:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800cb7c:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 800cb80:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 800cb84:	e61e      	b.n	800c7c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800cb86:	445a      	add	r2, fp
 800cb88:	4484      	add	ip, r0
 800cb8a:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 800cb8e:	e78f      	b.n	800cab0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800cb90:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 800cb94:	fa1f f18e 	uxth.w	r1, lr
 800cb98:	eb01 0806 	add.w	r8, r1, r6
 800cb9c:	b293      	uxth	r3, r2
 800cb9e:	fa1f f888 	uxth.w	r8, r8
 800cba2:	9306      	str	r3, [sp, #24]
 800cba4:	fa0f f388 	sxth.w	r3, r8
 800cba8:	9307      	str	r3, [sp, #28]
 800cbaa:	9f06      	ldr	r7, [sp, #24]
 800cbac:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800cbb0:	443b      	add	r3, r7
 800cbb2:	b29b      	uxth	r3, r3
 800cbb4:	4596      	cmp	lr, r2
 800cbb6:	9308      	str	r3, [sp, #32]
 800cbb8:	da24      	bge.n	800cc04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 800cbba:	9905      	ldr	r1, [sp, #20]
 800cbbc:	eba3 0308 	sub.w	r3, r3, r8
 800cbc0:	ebaa 0401 	sub.w	r4, sl, r1
 800cbc4:	b2a4      	uxth	r4, r4
 800cbc6:	b29b      	uxth	r3, r3
 800cbc8:	b225      	sxth	r5, r4
 800cbca:	b219      	sxth	r1, r3
 800cbcc:	eba2 020e 	sub.w	r2, r2, lr
 800cbd0:	eba9 0000 	sub.w	r0, r9, r0
 800cbd4:	436a      	muls	r2, r5
 800cbd6:	4348      	muls	r0, r1
 800cbd8:	4282      	cmp	r2, r0
 800cbda:	9a02      	ldr	r2, [sp, #8]
 800cbdc:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800cbe0:	445a      	add	r2, fp
 800cbe2:	dc06      	bgt.n	800cbf2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 800cbe4:	9b07      	ldr	r3, [sp, #28]
 800cbe6:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 800cbea:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 800cbee:	44a4      	add	ip, r4
 800cbf0:	e75e      	b.n	800cab0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800cbf2:	9904      	ldr	r1, [sp, #16]
 800cbf4:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 800cbf8:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 800cbfc:	4433      	add	r3, r6
 800cbfe:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800cc02:	e5df      	b.n	800c7c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800cc04:	9f06      	ldr	r7, [sp, #24]
 800cc06:	9b04      	ldr	r3, [sp, #16]
 800cc08:	1bc9      	subs	r1, r1, r7
 800cc0a:	fa0f f78a 	sxth.w	r7, sl
 800cc0e:	b289      	uxth	r1, r1
 800cc10:	429f      	cmp	r7, r3
 800cc12:	fa0f fe81 	sxth.w	lr, r1
 800cc16:	dd23      	ble.n	800cc60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 800cc18:	9a05      	ldr	r2, [sp, #20]
 800cc1a:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800cc1e:	9d07      	ldr	r5, [sp, #28]
 800cc20:	ebaa 0202 	sub.w	r2, sl, r2
 800cc24:	b292      	uxth	r2, r2
 800cc26:	eba5 0a03 	sub.w	sl, r5, r3
 800cc2a:	b214      	sxth	r4, r2
 800cc2c:	eba9 0000 	sub.w	r0, r9, r0
 800cc30:	9b02      	ldr	r3, [sp, #8]
 800cc32:	fb0e f000 	mul.w	r0, lr, r0
 800cc36:	fb04 fa0a 	mul.w	sl, r4, sl
 800cc3a:	00db      	lsls	r3, r3, #3
 800cc3c:	4550      	cmp	r0, sl
 800cc3e:	445b      	add	r3, fp
 800cc40:	db03      	blt.n	800cc4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 800cc42:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 800cc46:	4494      	add	ip, r2
 800cc48:	e732      	b.n	800cab0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800cc4a:	9a04      	ldr	r2, [sp, #16]
 800cc4c:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 800cc50:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 800cc54:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 800cc58:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800cc5c:	4431      	add	r1, r6
 800cc5e:	e75c      	b.n	800cb1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 800cc60:	9b08      	ldr	r3, [sp, #32]
 800cc62:	eba3 0308 	sub.w	r3, r3, r8
 800cc66:	b29b      	uxth	r3, r3
 800cc68:	2d06      	cmp	r5, #6
 800cc6a:	b218      	sxth	r0, r3
 800cc6c:	d813      	bhi.n	800cc96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 800cc6e:	9b07      	ldr	r3, [sp, #28]
 800cc70:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 800cc74:	1c6b      	adds	r3, r5, #1
 800cc76:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 800cc7a:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800cc7e:	9b01      	ldr	r3, [sp, #4]
 800cc80:	9901      	ldr	r1, [sp, #4]
 800cc82:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800cc86:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 800cc8a:	805a      	strh	r2, [r3, #2]
 800cc8c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800cc8e:	809a      	strh	r2, [r3, #4]
 800cc90:	f8a3 e006 	strh.w	lr, [r3, #6]
 800cc94:	e75f      	b.n	800cb56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800cc96:	9c02      	ldr	r4, [sp, #8]
 800cc98:	4570      	cmp	r0, lr
 800cc9a:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800cc9e:	db0d      	blt.n	800ccbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 800cca0:	4431      	add	r1, r6
 800cca2:	9b06      	ldr	r3, [sp, #24]
 800cca4:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 800cca8:	b289      	uxth	r1, r1
 800ccaa:	445c      	add	r4, fp
 800ccac:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800ccb0:	4419      	add	r1, r3
 800ccb2:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 800ccb6:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 800ccba:	e583      	b.n	800c7c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800ccbc:	445c      	add	r4, fp
 800ccbe:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 800ccc2:	e79b      	b.n	800cbfc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 800ccc4:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800ccc8:	1e65      	subs	r5, r4, #1
 800ccca:	b2ad      	uxth	r5, r5
 800cccc:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 800ccd0:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 800ccd4:	42b5      	cmp	r5, r6
 800ccd6:	d044      	beq.n	800cd62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 800ccd8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 800ccdc:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 800cce0:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 800cce4:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 800cce8:	4282      	cmp	r2, r0
 800ccea:	d11f      	bne.n	800cd2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 800ccec:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 800ccf0:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800ccf4:	459c      	cmp	ip, r3
 800ccf6:	d119      	bne.n	800cd2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 800ccf8:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 800ccfc:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800cd00:	19d8      	adds	r0, r3, r7
 800cd02:	b200      	sxth	r0, r0
 800cd04:	4288      	cmp	r0, r1
 800cd06:	d109      	bne.n	800cd1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 800cd08:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 800cd0c:	4413      	add	r3, r2
 800cd0e:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 800cd12:	4629      	mov	r1, r5
 800cd14:	9801      	ldr	r0, [sp, #4]
 800cd16:	f7ff fd2b 	bl	800c770 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800cd1a:	e003      	b.n	800cd24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800cd1c:	4411      	add	r1, r2
 800cd1e:	b209      	sxth	r1, r1
 800cd20:	42b9      	cmp	r1, r7
 800cd22:	d0f3      	beq.n	800cd0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 800cd24:	3d01      	subs	r5, #1
 800cd26:	b2ad      	uxth	r5, r5
 800cd28:	3c08      	subs	r4, #8
 800cd2a:	e7d3      	b.n	800ccd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 800cd2c:	42b9      	cmp	r1, r7
 800cd2e:	d1f9      	bne.n	800cd24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800cd30:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 800cd34:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800cd38:	4299      	cmp	r1, r3
 800cd3a:	d1f3      	bne.n	800cd24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800cd3c:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800cd40:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800cd44:	181f      	adds	r7, r3, r0
 800cd46:	b23f      	sxth	r7, r7
 800cd48:	42ba      	cmp	r2, r7
 800cd4a:	d105      	bne.n	800cd58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 800cd4c:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 800cd50:	440b      	add	r3, r1
 800cd52:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800cd56:	e7dc      	b.n	800cd12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 800cd58:	440a      	add	r2, r1
 800cd5a:	b212      	sxth	r2, r2
 800cd5c:	4290      	cmp	r0, r2
 800cd5e:	d1e1      	bne.n	800cd24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800cd60:	e7f6      	b.n	800cd50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 800cd62:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 800cd66:	2e07      	cmp	r6, #7
 800cd68:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 800cd6c:	d812      	bhi.n	800cd94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 800cd6e:	1c75      	adds	r5, r6, #1
 800cd70:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 800cd74:	9d01      	ldr	r5, [sp, #4]
 800cd76:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800cd7a:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 800cd7e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 800cd82:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 800cd86:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 800cd8a:	442c      	add	r4, r5
 800cd8c:	8061      	strh	r1, [r4, #2]
 800cd8e:	80a2      	strh	r2, [r4, #4]
 800cd90:	80e3      	strh	r3, [r4, #6]
 800cd92:	e581      	b.n	800c898 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800cd94:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800cd98:	3e01      	subs	r6, #1
 800cd9a:	445c      	add	r4, fp
 800cd9c:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 800cda0:	f04f 37ff 	mov.w	r7, #4294967295
 800cda4:	2500      	movs	r5, #0
 800cda6:	9305      	str	r3, [sp, #20]
 800cda8:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800cdac:	9302      	str	r3, [sp, #8]
 800cdae:	1e72      	subs	r2, r6, #1
 800cdb0:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800cdb4:	9304      	str	r3, [sp, #16]
 800cdb6:	4691      	mov	r9, r2
 800cdb8:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 800cdbc:	f1b9 3fff 	cmp.w	r9, #4294967295
 800cdc0:	bf14      	ite	ne
 800cdc2:	9905      	ldrne	r1, [sp, #20]
 800cdc4:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 800cdc8:	6818      	ldr	r0, [r3, #0]
 800cdca:	9207      	str	r2, [sp, #28]
 800cdcc:	bf18      	it	ne
 800cdce:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 800cdd2:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800cdd6:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800cdda:	f8be 8004 	ldrh.w	r8, [lr, #4]
 800cdde:	9306      	str	r3, [sp, #24]
 800cde0:	fb18 f801 	smulbb	r8, r8, r1
 800cde4:	6859      	ldr	r1, [r3, #4]
 800cde6:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800cdea:	4671      	mov	r1, lr
 800cdec:	a80c      	add	r0, sp, #48	@ 0x30
 800cdee:	f7ff fafb 	bl	800c3e8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800cdf2:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 800cdf6:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 800cdfa:	9b04      	ldr	r3, [sp, #16]
 800cdfc:	9a02      	ldr	r2, [sp, #8]
 800cdfe:	fb10 f001 	smulbb	r0, r0, r1
 800ce02:	fb02 8803 	mla	r8, r2, r3, r8
 800ce06:	eba0 0108 	sub.w	r1, r0, r8
 800ce0a:	f04f 0c08 	mov.w	ip, #8
 800ce0e:	fb90 f0fc 	sdiv	r0, r0, ip
 800ce12:	4288      	cmp	r0, r1
 800ce14:	dc20      	bgt.n	800ce58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 800ce16:	4551      	cmp	r1, sl
 800ce18:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800ce1c:	da03      	bge.n	800ce26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 800ce1e:	b1d9      	cbz	r1, 800ce58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 800ce20:	468a      	mov	sl, r1
 800ce22:	464f      	mov	r7, r9
 800ce24:	4635      	mov	r5, r6
 800ce26:	f109 39ff 	add.w	r9, r9, #4294967295
 800ce2a:	f119 0f02 	cmn.w	r9, #2
 800ce2e:	d1c5      	bne.n	800cdbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 800ce30:	4616      	mov	r6, r2
 800ce32:	3201      	adds	r2, #1
 800ce34:	f1a4 0408 	sub.w	r4, r4, #8
 800ce38:	d1b6      	bne.n	800cda8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 800ce3a:	9b01      	ldr	r3, [sp, #4]
 800ce3c:	b2ac      	uxth	r4, r5
 800ce3e:	00ed      	lsls	r5, r5, #3
 800ce40:	1958      	adds	r0, r3, r5
 800ce42:	1c7b      	adds	r3, r7, #1
 800ce44:	d10b      	bne.n	800ce5e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 800ce46:	4601      	mov	r1, r0
 800ce48:	9803      	ldr	r0, [sp, #12]
 800ce4a:	f7ff facd 	bl	800c3e8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800ce4e:	4621      	mov	r1, r4
 800ce50:	9801      	ldr	r0, [sp, #4]
 800ce52:	f7ff fc8d 	bl	800c770 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800ce56:	e4b5      	b.n	800c7c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800ce58:	464f      	mov	r7, r9
 800ce5a:	4635      	mov	r5, r6
 800ce5c:	e7ed      	b.n	800ce3a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 800ce5e:	9b01      	ldr	r3, [sp, #4]
 800ce60:	00ff      	lsls	r7, r7, #3
 800ce62:	19d9      	adds	r1, r3, r7
 800ce64:	f7ff fac0 	bl	800c3e8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800ce68:	9b03      	ldr	r3, [sp, #12]
 800ce6a:	cb03      	ldmia	r3!, {r0, r1}
 800ce6c:	445f      	add	r7, fp
 800ce6e:	445d      	add	r5, fp
 800ce70:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 800ce74:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 800ce78:	f855 0fac 	ldr.w	r0, [r5, #172]!
 800ce7c:	9b03      	ldr	r3, [sp, #12]
 800ce7e:	6869      	ldr	r1, [r5, #4]
 800ce80:	c303      	stmia	r3!, {r0, r1}
 800ce82:	e7e4      	b.n	800ce4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

0800ce84 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 800ce84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce88:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 800ce8c:	b09b      	sub	sp, #108	@ 0x6c
 800ce8e:	4604      	mov	r4, r0
 800ce90:	4630      	mov	r0, r6
 800ce92:	f7fc f972 	bl	800917a <_ZNK8touchgfx4Rect7isEmptyEv>
 800ce96:	4605      	mov	r5, r0
 800ce98:	b948      	cbnz	r0, 800ceae <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 800ce9a:	6823      	ldr	r3, [r4, #0]
 800ce9c:	e896 0006 	ldmia.w	r6, {r1, r2}
 800cea0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800cea2:	4620      	mov	r0, r4
 800cea4:	4798      	blx	r3
 800cea6:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 800ceaa:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 800ceae:	4bc6      	ldr	r3, [pc, #792]	@ (800d1c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 800ceb0:	681b      	ldr	r3, [r3, #0]
 800ceb2:	2b00      	cmp	r3, #0
 800ceb4:	d03f      	beq.n	800cf36 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 800ceb6:	4dc5      	ldr	r5, [pc, #788]	@ (800d1cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 800ceb8:	4628      	mov	r0, r5
 800ceba:	f7fc f95e 	bl	800917a <_ZNK8touchgfx4Rect7isEmptyEv>
 800cebe:	4606      	mov	r6, r0
 800cec0:	2800      	cmp	r0, #0
 800cec2:	d138      	bne.n	800cf36 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 800cec4:	4628      	mov	r0, r5
 800cec6:	f7ff f923 	bl	800c110 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800ceca:	6823      	ldr	r3, [r4, #0]
 800cecc:	6829      	ldr	r1, [r5, #0]
 800cece:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800ced0:	686a      	ldr	r2, [r5, #4]
 800ced2:	4620      	mov	r0, r4
 800ced4:	4798      	blx	r3
 800ced6:	802e      	strh	r6, [r5, #0]
 800ced8:	806e      	strh	r6, [r5, #2]
 800ceda:	80ae      	strh	r6, [r5, #4]
 800cedc:	80ee      	strh	r6, [r5, #6]
 800cede:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 800cee2:	4dbb      	ldr	r5, [pc, #748]	@ (800d1d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 800cee4:	4640      	mov	r0, r8
 800cee6:	f7ff fbeb 	bl	800c6c0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800ceea:	882e      	ldrh	r6, [r5, #0]
 800ceec:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 800cef0:	4633      	mov	r3, r6
 800cef2:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800cef6:	42bb      	cmp	r3, r7
 800cef8:	d224      	bcs.n	800cf44 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800cefa:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 800cefe:	2907      	cmp	r1, #7
 800cf00:	d816      	bhi.n	800cf30 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 800cf02:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 800cf06:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 800cf0a:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 800cf0e:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 800cf12:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 800cf16:	1c4a      	adds	r2, r1, #1
 800cf18:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
 800cf1c:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 800cf20:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 800cf24:	f8a2 a002 	strh.w	sl, [r2, #2]
 800cf28:	f8a2 e004 	strh.w	lr, [r2, #4]
 800cf2c:	f8a2 c006 	strh.w	ip, [r2, #6]
 800cf30:	3301      	adds	r3, #1
 800cf32:	b29b      	uxth	r3, r3
 800cf34:	e7df      	b.n	800cef6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 800cf36:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800cf3a:	2b00      	cmp	r3, #0
 800cf3c:	d1cf      	bne.n	800cede <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 800cf3e:	b01b      	add	sp, #108	@ 0x6c
 800cf40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cf44:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 800cf48:	42b3      	cmp	r3, r6
 800cf4a:	d90c      	bls.n	800cf66 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 800cf4c:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800cf50:	6822      	ldr	r2, [r4, #0]
 800cf52:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 800cf56:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 800cf58:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 800cf5c:	4620      	mov	r0, r4
 800cf5e:	3601      	adds	r6, #1
 800cf60:	47b8      	blx	r7
 800cf62:	b2b6      	uxth	r6, r6
 800cf64:	e7ee      	b.n	800cf44 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800cf66:	4a9b      	ldr	r2, [pc, #620]	@ (800d1d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800cf68:	6813      	ldr	r3, [r2, #0]
 800cf6a:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 800cf6e:	2b01      	cmp	r3, #1
 800cf70:	4691      	mov	r9, r2
 800cf72:	f040 80e2 	bne.w	800d13a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 800cf76:	8829      	ldrh	r1, [r5, #0]
 800cf78:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 800cf7c:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 800cf80:	33ae      	adds	r3, #174	@ 0xae
 800cf82:	2600      	movs	r6, #0
 800cf84:	428f      	cmp	r7, r1
 800cf86:	f103 0308 	add.w	r3, r3, #8
 800cf8a:	dd0a      	ble.n	800cfa2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 800cf8c:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 800cf90:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 800cf94:	4402      	add	r2, r0
 800cf96:	b212      	sxth	r2, r2
 800cf98:	4296      	cmp	r6, r2
 800cf9a:	bfb8      	it	lt
 800cf9c:	4616      	movlt	r6, r2
 800cf9e:	3101      	adds	r1, #1
 800cfa0:	e7f0      	b.n	800cf84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 800cfa2:	4b8d      	ldr	r3, [pc, #564]	@ (800d1d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 800cfa4:	f8df 922c 	ldr.w	r9, [pc, #556]	@ 800d1d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 800cfa8:	881b      	ldrh	r3, [r3, #0]
 800cfaa:	2b0f      	cmp	r3, #15
 800cfac:	bf88      	it	hi
 800cfae:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 800cfb2:	f04f 0300 	mov.w	r3, #0
 800cfb6:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800cfba:	bf98      	it	ls
 800cfbc:	f04f 0b01 	movls.w	fp, #1
 800cfc0:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 800cfc4:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 800cfc8:	4b82      	ldr	r3, [pc, #520]	@ (800d1d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800cfca:	4438      	add	r0, r7
 800cfcc:	b207      	sxth	r7, r0
 800cfce:	6818      	ldr	r0, [r3, #0]
 800cfd0:	42b7      	cmp	r7, r6
 800cfd2:	6803      	ldr	r3, [r0, #0]
 800cfd4:	f280 8083 	bge.w	800d0de <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 800cfd8:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 800cfdc:	4798      	blx	r3
 800cfde:	eb07 030b 	add.w	r3, r7, fp
 800cfe2:	4298      	cmp	r0, r3
 800cfe4:	da07      	bge.n	800cff6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 800cfe6:	42b0      	cmp	r0, r6
 800cfe8:	da05      	bge.n	800cff6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 800cfea:	4287      	cmp	r7, r0
 800cfec:	dd6c      	ble.n	800d0c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 800cfee:	2f00      	cmp	r7, #0
 800cff0:	dd6a      	ble.n	800d0c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 800cff2:	4630      	mov	r0, r6
 800cff4:	e004      	b.n	800d000 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 800cff6:	4287      	cmp	r7, r0
 800cff8:	dcfb      	bgt.n	800cff2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 800cffa:	42b0      	cmp	r0, r6
 800cffc:	bfa8      	it	ge
 800cffe:	4630      	movge	r0, r6
 800d000:	4b76      	ldr	r3, [pc, #472]	@ (800d1dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 800d002:	f8ad 7016 	strh.w	r7, [sp, #22]
 800d006:	1bc0      	subs	r0, r0, r7
 800d008:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d00c:	882f      	ldrh	r7, [r5, #0]
 800d00e:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d012:	2200      	movs	r2, #0
 800d014:	f8ad 2014 	strh.w	r2, [sp, #20]
 800d018:	f8ad 001a 	strh.w	r0, [sp, #26]
 800d01c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800d020:	42bb      	cmp	r3, r7
 800d022:	d9cd      	bls.n	800cfc0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 800d024:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 800d028:	ab07      	add	r3, sp, #28
 800d02a:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800d02e:	6851      	ldr	r1, [r2, #4]
 800d030:	c303      	stmia	r3!, {r0, r1}
 800d032:	a905      	add	r1, sp, #20
 800d034:	a807      	add	r0, sp, #28
 800d036:	f7ff f93e 	bl	800c2b6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d03a:	2800      	cmp	r0, #0
 800d03c:	d04c      	beq.n	800d0d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 800d03e:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 800d042:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 800d046:	f8bd a020 	ldrh.w	sl, [sp, #32]
 800d04a:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 800d04e:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800d052:	9302      	str	r3, [sp, #8]
 800d054:	4686      	mov	lr, r0
 800d056:	4290      	cmp	r0, r2
 800d058:	4450      	add	r0, sl
 800d05a:	f8bd a018 	ldrh.w	sl, [sp, #24]
 800d05e:	bfb8      	it	lt
 800d060:	4696      	movlt	lr, r2
 800d062:	4452      	add	r2, sl
 800d064:	4299      	cmp	r1, r3
 800d066:	b280      	uxth	r0, r0
 800d068:	b292      	uxth	r2, r2
 800d06a:	468c      	mov	ip, r1
 800d06c:	fa0f fa82 	sxth.w	sl, r2
 800d070:	bfb8      	it	lt
 800d072:	469c      	movlt	ip, r3
 800d074:	b203      	sxth	r3, r0
 800d076:	4553      	cmp	r3, sl
 800d078:	bfb8      	it	lt
 800d07a:	4602      	movlt	r2, r0
 800d07c:	eba2 020e 	sub.w	r2, r2, lr
 800d080:	f8ad 2020 	strh.w	r2, [sp, #32]
 800d084:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 800d088:	9b02      	ldr	r3, [sp, #8]
 800d08a:	f8ad e01c 	strh.w	lr, [sp, #28]
 800d08e:	4411      	add	r1, r2
 800d090:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800d094:	f8ad c01e 	strh.w	ip, [sp, #30]
 800d098:	4413      	add	r3, r2
 800d09a:	b289      	uxth	r1, r1
 800d09c:	b29b      	uxth	r3, r3
 800d09e:	b208      	sxth	r0, r1
 800d0a0:	b21a      	sxth	r2, r3
 800d0a2:	4290      	cmp	r0, r2
 800d0a4:	bfb8      	it	lt
 800d0a6:	460b      	movlt	r3, r1
 800d0a8:	eba3 030c 	sub.w	r3, r3, ip
 800d0ac:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800d0b0:	a807      	add	r0, sp, #28
 800d0b2:	f7fc f862 	bl	800917a <_ZNK8touchgfx4Rect7isEmptyEv>
 800d0b6:	b920      	cbnz	r0, 800d0c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 800d0b8:	6823      	ldr	r3, [r4, #0]
 800d0ba:	a907      	add	r1, sp, #28
 800d0bc:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800d0be:	4620      	mov	r0, r4
 800d0c0:	4798      	blx	r3
 800d0c2:	3701      	adds	r7, #1
 800d0c4:	b2bf      	uxth	r7, r7
 800d0c6:	e7a9      	b.n	800d01c <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 800d0c8:	f8d9 0000 	ldr.w	r0, [r9]
 800d0cc:	6803      	ldr	r3, [r0, #0]
 800d0ce:	2101      	movs	r1, #1
 800d0d0:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800d0d4:	4798      	blx	r3
 800d0d6:	e773      	b.n	800cfc0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 800d0d8:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800d0dc:	e7e8      	b.n	800d0b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 800d0de:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d0e0:	4798      	blx	r3
 800d0e2:	4b3f      	ldr	r3, [pc, #252]	@ (800d1e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 800d0e4:	781b      	ldrb	r3, [r3, #0]
 800d0e6:	2b00      	cmp	r3, #0
 800d0e8:	f43f af29 	beq.w	800cf3e <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 800d0ec:	2300      	movs	r3, #0
 800d0ee:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 800d0f2:	882b      	ldrh	r3, [r5, #0]
 800d0f4:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 800d0f8:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800d0fc:	42ab      	cmp	r3, r5
 800d0fe:	f4bf af1e 	bcs.w	800cf3e <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 800d102:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 800d106:	2907      	cmp	r1, #7
 800d108:	d814      	bhi.n	800d134 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 800d10a:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 800d10e:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 800d112:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 800d116:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 800d11a:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 800d11e:	1c4a      	adds	r2, r1, #1
 800d120:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 800d124:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 800d128:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 800d12c:	f8a2 c002 	strh.w	ip, [r2, #2]
 800d130:	8097      	strh	r7, [r2, #4]
 800d132:	80d6      	strh	r6, [r2, #6]
 800d134:	3301      	adds	r3, #1
 800d136:	b29b      	uxth	r3, r3
 800d138:	e7e0      	b.n	800d0fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 800d13a:	2b02      	cmp	r3, #2
 800d13c:	f040 8133 	bne.w	800d3a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 800d140:	4b28      	ldr	r3, [pc, #160]	@ (800d1e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 800d142:	781b      	ldrb	r3, [r3, #0]
 800d144:	2b01      	cmp	r3, #1
 800d146:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 800d14a:	f000 8098 	beq.w	800d27e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800d14e:	882a      	ldrh	r2, [r5, #0]
 800d150:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 800d154:	3201      	adds	r2, #1
 800d156:	b292      	uxth	r2, r2
 800d158:	2900      	cmp	r1, #0
 800d15a:	d0c2      	beq.n	800d0e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800d15c:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
 800d160:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
 800d164:	441e      	add	r6, r3
 800d166:	b236      	sxth	r6, r6
 800d168:	4694      	mov	ip, r2
 800d16a:	f04f 0900 	mov.w	r9, #0
 800d16e:	fa1f f38c 	uxth.w	r3, ip
 800d172:	4299      	cmp	r1, r3
 800d174:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 800d178:	f240 80bf 	bls.w	800d2fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 800d17c:	4427      	add	r7, r4
 800d17e:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 800d182:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 800d186:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 800d18a:	4283      	cmp	r3, r0
 800d18c:	f340 80a1 	ble.w	800d2d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 800d190:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
 800d194:	4406      	add	r6, r0
 800d196:	b236      	sxth	r6, r6
 800d198:	429e      	cmp	r6, r3
 800d19a:	bfa8      	it	ge
 800d19c:	461e      	movge	r6, r3
 800d19e:	46e1      	mov	r9, ip
 800d1a0:	f10c 0c01 	add.w	ip, ip, #1
 800d1a4:	e7e3      	b.n	800d16e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 800d1a6:	d10a      	bne.n	800d1be <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 800d1a8:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
 800d1ac:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 800d1b0:	4562      	cmp	r2, ip
 800d1b2:	bfb8      	it	lt
 800d1b4:	4662      	movlt	r2, ip
 800d1b6:	4288      	cmp	r0, r1
 800d1b8:	bfb8      	it	lt
 800d1ba:	461f      	movlt	r7, r3
 800d1bc:	e087      	b.n	800d2ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 800d1be:	428a      	cmp	r2, r1
 800d1c0:	bfb8      	it	lt
 800d1c2:	460a      	movlt	r2, r1
 800d1c4:	e083      	b.n	800d2ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 800d1c6:	bf00      	nop
 800d1c8:	20011a0c 	.word	0x20011a0c
 800d1cc:	20011a18 	.word	0x20011a18
 800d1d0:	20000084 	.word	0x20000084
 800d1d4:	200119d4 	.word	0x200119d4
 800d1d8:	200119ca 	.word	0x200119ca
 800d1dc:	200119c8 	.word	0x200119c8
 800d1e0:	200119d2 	.word	0x200119d2
 800d1e4:	200119cc 	.word	0x200119cc
 800d1e8:	19a1      	adds	r1, r4, r6
 800d1ea:	ab07      	add	r3, sp, #28
 800d1ec:	f851 0fac 	ldr.w	r0, [r1, #172]!
 800d1f0:	6849      	ldr	r1, [r1, #4]
 800d1f2:	c303      	stmia	r3!, {r0, r1}
 800d1f4:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d1f8:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800d1fc:	2b13      	cmp	r3, #19
 800d1fe:	bfd8      	it	le
 800d200:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800d204:	f8ad 201c 	strh.w	r2, [sp, #28]
 800d208:	440b      	add	r3, r1
 800d20a:	1a9b      	subs	r3, r3, r2
 800d20c:	a807      	add	r0, sp, #28
 800d20e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d212:	f7fe ff97 	bl	800c144 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800d216:	a807      	add	r0, sp, #28
 800d218:	f7fb ffaf 	bl	800917a <_ZNK8touchgfx4Rect7isEmptyEv>
 800d21c:	bb78      	cbnz	r0, 800d27e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800d21e:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
 800d222:	f8d9 0000 	ldr.w	r0, [r9]
 800d226:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800d22a:	f8d0 e000 	ldr.w	lr, [r0]
 800d22e:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800d232:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800d236:	f1bc 0f14 	cmp.w	ip, #20
 800d23a:	bfa8      	it	ge
 800d23c:	f04f 0c14 	movge.w	ip, #20
 800d240:	fa1f fc8c 	uxth.w	ip, ip
 800d244:	f8cd c000 	str.w	ip, [sp]
 800d248:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
 800d24c:	47d8      	blx	fp
 800d24e:	4683      	mov	fp, r0
 800d250:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800d254:	a807      	add	r0, sp, #28
 800d256:	f7fe ff5b 	bl	800c110 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d25a:	6823      	ldr	r3, [r4, #0]
 800d25c:	4426      	add	r6, r4
 800d25e:	4620      	mov	r0, r4
 800d260:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800d262:	a907      	add	r1, sp, #28
 800d264:	4798      	blx	r3
 800d266:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 800d26a:	eba0 000b 	sub.w	r0, r0, fp
 800d26e:	b200      	sxth	r0, r0
 800d270:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
 800d274:	b918      	cbnz	r0, 800d27e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800d276:	b2b9      	uxth	r1, r7
 800d278:	4650      	mov	r0, sl
 800d27a:	f7ff fa79 	bl	800c770 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d27e:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 800d282:	f1bb 0f00 	cmp.w	fp, #0
 800d286:	f43f af2c 	beq.w	800d0e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800d28a:	882b      	ldrh	r3, [r5, #0]
 800d28c:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 800d290:	3301      	adds	r3, #1
 800d292:	b29b      	uxth	r3, r3
 800d294:	2700      	movs	r7, #0
 800d296:	b299      	uxth	r1, r3
 800d298:	458b      	cmp	fp, r1
 800d29a:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 800d29e:	d9a3      	bls.n	800d1e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 800d2a0:	4426      	add	r6, r4
 800d2a2:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 800d2a6:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
 800d2aa:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 800d2ae:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 800d2b2:	4408      	add	r0, r1
 800d2b4:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 800d2b8:	4461      	add	r1, ip
 800d2ba:	b200      	sxth	r0, r0
 800d2bc:	b209      	sxth	r1, r1
 800d2be:	4288      	cmp	r0, r1
 800d2c0:	f6bf af71 	bge.w	800d1a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 800d2c4:	4584      	cmp	ip, r0
 800d2c6:	4662      	mov	r2, ip
 800d2c8:	461f      	mov	r7, r3
 800d2ca:	bfb8      	it	lt
 800d2cc:	4602      	movlt	r2, r0
 800d2ce:	3301      	adds	r3, #1
 800d2d0:	e7e1      	b.n	800d296 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 800d2d2:	d10e      	bne.n	800d2f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 800d2d4:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 800d2d8:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 800d2dc:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 800d2e0:	4473      	add	r3, lr
 800d2e2:	b21b      	sxth	r3, r3
 800d2e4:	429e      	cmp	r6, r3
 800d2e6:	bfa8      	it	ge
 800d2e8:	461e      	movge	r6, r3
 800d2ea:	4287      	cmp	r7, r0
 800d2ec:	bfb8      	it	lt
 800d2ee:	46e1      	movlt	r9, ip
 800d2f0:	e756      	b.n	800d1a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 800d2f2:	4286      	cmp	r6, r0
 800d2f4:	bfa8      	it	ge
 800d2f6:	4606      	movge	r6, r0
 800d2f8:	e752      	b.n	800d1a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 800d2fa:	eb0a 0007 	add.w	r0, sl, r7
 800d2fe:	4427      	add	r7, r4
 800d300:	e9cd 2102 	strd	r2, r1, [sp, #8]
 800d304:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 800d308:	f1bb 0f13 	cmp.w	fp, #19
 800d30c:	bfde      	ittt	le
 800d30e:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
 800d312:	445e      	addle	r6, fp
 800d314:	b236      	sxthle	r6, r6
 800d316:	f7fb ff30 	bl	800917a <_ZNK8touchgfx4Rect7isEmptyEv>
 800d31a:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 800d31e:	2800      	cmp	r0, #0
 800d320:	f47f af1a 	bne.w	800d158 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 800d324:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 800d328:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800d32c:	482a      	ldr	r0, [pc, #168]	@ (800d3d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 800d32e:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 800d332:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 800d336:	6800      	ldr	r0, [r0, #0]
 800d338:	f8ad 101c 	strh.w	r1, [sp, #28]
 800d33c:	1ab6      	subs	r6, r6, r2
 800d33e:	2e14      	cmp	r6, #20
 800d340:	f8ad 201e 	strh.w	r2, [sp, #30]
 800d344:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d348:	bfa8      	it	ge
 800d34a:	2614      	movge	r6, #20
 800d34c:	f8d0 c000 	ldr.w	ip, [r0]
 800d350:	b2b6      	uxth	r6, r6
 800d352:	fa1f fb8b 	uxth.w	fp, fp
 800d356:	455e      	cmp	r6, fp
 800d358:	bf94      	ite	ls
 800d35a:	9600      	strls	r6, [sp, #0]
 800d35c:	f8cd b000 	strhi.w	fp, [sp]
 800d360:	b292      	uxth	r2, r2
 800d362:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
 800d366:	b29b      	uxth	r3, r3
 800d368:	b289      	uxth	r1, r1
 800d36a:	47b0      	blx	r6
 800d36c:	6823      	ldr	r3, [r4, #0]
 800d36e:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800d372:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800d374:	a907      	add	r1, sp, #28
 800d376:	4620      	mov	r0, r4
 800d378:	4798      	blx	r3
 800d37a:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 800d37e:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 800d382:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 800d386:	1a5b      	subs	r3, r3, r1
 800d388:	440a      	add	r2, r1
 800d38a:	b21b      	sxth	r3, r3
 800d38c:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 800d390:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 800d394:	2b00      	cmp	r3, #0
 800d396:	f47f aeda 	bne.w	800d14e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 800d39a:	fa1f f189 	uxth.w	r1, r9
 800d39e:	4650      	mov	r0, sl
 800d3a0:	f7ff f9e6 	bl	800c770 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d3a4:	e6d3      	b.n	800d14e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 800d3a6:	882e      	ldrh	r6, [r5, #0]
 800d3a8:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800d3ac:	42b3      	cmp	r3, r6
 800d3ae:	f67f ae98 	bls.w	800d0e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800d3b2:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 800d3b6:	ab07      	add	r3, sp, #28
 800d3b8:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800d3bc:	6851      	ldr	r1, [r2, #4]
 800d3be:	c303      	stmia	r3!, {r0, r1}
 800d3c0:	a807      	add	r0, sp, #28
 800d3c2:	f7fb feda 	bl	800917a <_ZNK8touchgfx4Rect7isEmptyEv>
 800d3c6:	b920      	cbnz	r0, 800d3d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 800d3c8:	6823      	ldr	r3, [r4, #0]
 800d3ca:	a907      	add	r1, sp, #28
 800d3cc:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800d3ce:	4620      	mov	r0, r4
 800d3d0:	4798      	blx	r3
 800d3d2:	3601      	adds	r6, #1
 800d3d4:	b2b6      	uxth	r6, r6
 800d3d6:	e7e7      	b.n	800d3a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 800d3d8:	200119d4 	.word	0x200119d4

0800d3dc <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800d3dc:	4b03      	ldr	r3, [pc, #12]	@ (800d3ec <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800d3de:	2200      	movs	r2, #0
 800d3e0:	801a      	strh	r2, [r3, #0]
 800d3e2:	805a      	strh	r2, [r3, #2]
 800d3e4:	809a      	strh	r2, [r3, #4]
 800d3e6:	80da      	strh	r2, [r3, #6]
 800d3e8:	4770      	bx	lr
 800d3ea:	bf00      	nop
 800d3ec:	20011a18 	.word	0x20011a18

0800d3f0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800d3f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d3f4:	4606      	mov	r6, r0
 800d3f6:	b09d      	sub	sp, #116	@ 0x74
 800d3f8:	a803      	add	r0, sp, #12
 800d3fa:	4614      	mov	r4, r2
 800d3fc:	468a      	mov	sl, r1
 800d3fe:	461d      	mov	r5, r3
 800d400:	f000 fdad 	bl	800df5e <_ZN8touchgfx12TextProviderC1Ev>
 800d404:	6833      	ldr	r3, [r6, #0]
 800d406:	4630      	mov	r0, r6
 800d408:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d40a:	4798      	blx	r3
 800d40c:	6833      	ldr	r3, [r6, #0]
 800d40e:	4607      	mov	r7, r0
 800d410:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800d412:	4630      	mov	r0, r6
 800d414:	4798      	blx	r3
 800d416:	462a      	mov	r2, r5
 800d418:	9000      	str	r0, [sp, #0]
 800d41a:	4621      	mov	r1, r4
 800d41c:	463b      	mov	r3, r7
 800d41e:	a803      	add	r0, sp, #12
 800d420:	f000 fdf0 	bl	800e004 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d424:	2500      	movs	r5, #0
 800d426:	462c      	mov	r4, r5
 800d428:	46a9      	mov	r9, r5
 800d42a:	46a8      	mov	r8, r5
 800d42c:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 800d430:	2300      	movs	r3, #0
 800d432:	9302      	str	r3, [sp, #8]
 800d434:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800d438:	429c      	cmp	r4, r3
 800d43a:	d002      	beq.n	800d442 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800d43c:	455c      	cmp	r4, fp
 800d43e:	bf18      	it	ne
 800d440:	4625      	movne	r5, r4
 800d442:	ab02      	add	r3, sp, #8
 800d444:	4632      	mov	r2, r6
 800d446:	4651      	mov	r1, sl
 800d448:	a803      	add	r0, sp, #12
 800d44a:	f001 f8cd 	bl	800e5e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d44e:	4604      	mov	r4, r0
 800d450:	b108      	cbz	r0, 800d456 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800d452:	280a      	cmp	r0, #10
 800d454:	d10a      	bne.n	800d46c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800d456:	45c1      	cmp	r9, r8
 800d458:	bf38      	it	cc
 800d45a:	46c1      	movcc	r9, r8
 800d45c:	f04f 0800 	mov.w	r8, #0
 800d460:	2c00      	cmp	r4, #0
 800d462:	d1e5      	bne.n	800d430 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800d464:	4648      	mov	r0, r9
 800d466:	b01d      	add	sp, #116	@ 0x74
 800d468:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d46c:	9a02      	ldr	r2, [sp, #8]
 800d46e:	2a00      	cmp	r2, #0
 800d470:	d0de      	beq.n	800d430 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800d472:	7b57      	ldrb	r7, [r2, #13]
 800d474:	6833      	ldr	r3, [r6, #0]
 800d476:	8894      	ldrh	r4, [r2, #4]
 800d478:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800d47a:	007f      	lsls	r7, r7, #1
 800d47c:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 800d480:	7a97      	ldrb	r7, [r2, #10]
 800d482:	4629      	mov	r1, r5
 800d484:	4307      	orrs	r7, r0
 800d486:	4630      	mov	r0, r6
 800d488:	4798      	blx	r3
 800d48a:	4438      	add	r0, r7
 800d48c:	4480      	add	r8, r0
 800d48e:	fa1f f888 	uxth.w	r8, r8
 800d492:	e7e5      	b.n	800d460 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800d494 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800d494:	b508      	push	{r3, lr}
 800d496:	6803      	ldr	r3, [r0, #0]
 800d498:	68db      	ldr	r3, [r3, #12]
 800d49a:	4798      	blx	r3
 800d49c:	b128      	cbz	r0, 800d4aa <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800d49e:	7b43      	ldrb	r3, [r0, #13]
 800d4a0:	7a80      	ldrb	r0, [r0, #10]
 800d4a2:	005b      	lsls	r3, r3, #1
 800d4a4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800d4a8:	4318      	orrs	r0, r3
 800d4aa:	bd08      	pop	{r3, pc}

0800d4ac <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800d4ac:	b40e      	push	{r1, r2, r3}
 800d4ae:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d4b0:	b09e      	sub	sp, #120	@ 0x78
 800d4b2:	ab23      	add	r3, sp, #140	@ 0x8c
 800d4b4:	4605      	mov	r5, r0
 800d4b6:	f853 4b04 	ldr.w	r4, [r3], #4
 800d4ba:	9303      	str	r3, [sp, #12]
 800d4bc:	a805      	add	r0, sp, #20
 800d4be:	f000 fd4e 	bl	800df5e <_ZN8touchgfx12TextProviderC1Ev>
 800d4c2:	682b      	ldr	r3, [r5, #0]
 800d4c4:	4628      	mov	r0, r5
 800d4c6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d4c8:	4798      	blx	r3
 800d4ca:	682b      	ldr	r3, [r5, #0]
 800d4cc:	4606      	mov	r6, r0
 800d4ce:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800d4d0:	4628      	mov	r0, r5
 800d4d2:	4798      	blx	r3
 800d4d4:	4633      	mov	r3, r6
 800d4d6:	ae1e      	add	r6, sp, #120	@ 0x78
 800d4d8:	4621      	mov	r1, r4
 800d4da:	9000      	str	r0, [sp, #0]
 800d4dc:	9a03      	ldr	r2, [sp, #12]
 800d4de:	2400      	movs	r4, #0
 800d4e0:	a805      	add	r0, sp, #20
 800d4e2:	f000 fd8f 	bl	800e004 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d4e6:	f846 4d68 	str.w	r4, [r6, #-104]!
 800d4ea:	462a      	mov	r2, r5
 800d4ec:	4633      	mov	r3, r6
 800d4ee:	4621      	mov	r1, r4
 800d4f0:	a805      	add	r0, sp, #20
 800d4f2:	f001 f879 	bl	800e5e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d4f6:	b1f0      	cbz	r0, 800d536 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 800d4f8:	280a      	cmp	r0, #10
 800d4fa:	d018      	beq.n	800d52e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800d4fc:	9f04      	ldr	r7, [sp, #16]
 800d4fe:	b1b7      	cbz	r7, 800d52e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800d500:	7b78      	ldrb	r0, [r7, #13]
 800d502:	7a3b      	ldrb	r3, [r7, #8]
 800d504:	88ea      	ldrh	r2, [r5, #6]
 800d506:	00c1      	lsls	r1, r0, #3
 800d508:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 800d50c:	4319      	orrs	r1, r3
 800d50e:	0643      	lsls	r3, r0, #25
 800d510:	bf44      	itt	mi
 800d512:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 800d516:	b219      	sxthmi	r1, r3
 800d518:	0100      	lsls	r0, r0, #4
 800d51a:	79fb      	ldrb	r3, [r7, #7]
 800d51c:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 800d520:	4303      	orrs	r3, r0
 800d522:	4413      	add	r3, r2
 800d524:	1a5b      	subs	r3, r3, r1
 800d526:	b21b      	sxth	r3, r3
 800d528:	429c      	cmp	r4, r3
 800d52a:	bfb8      	it	lt
 800d52c:	461c      	movlt	r4, r3
 800d52e:	4633      	mov	r3, r6
 800d530:	462a      	mov	r2, r5
 800d532:	2100      	movs	r1, #0
 800d534:	e7dc      	b.n	800d4f0 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800d536:	b2a0      	uxth	r0, r4
 800d538:	b01e      	add	sp, #120	@ 0x78
 800d53a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800d53e:	b003      	add	sp, #12
 800d540:	4770      	bx	lr

0800d542 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 800d542:	7a43      	ldrb	r3, [r0, #9]
 800d544:	8880      	ldrh	r0, [r0, #4]
 800d546:	4418      	add	r0, r3
 800d548:	b280      	uxth	r0, r0
 800d54a:	4770      	bx	lr

0800d54c <_ZNK8touchgfx4Font13getFontHeightEv>:
 800d54c:	6803      	ldr	r3, [r0, #0]
 800d54e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800d550:	4718      	bx	r3

0800d552 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800d552:	b40e      	push	{r1, r2, r3}
 800d554:	b570      	push	{r4, r5, r6, lr}
 800d556:	b09d      	sub	sp, #116	@ 0x74
 800d558:	ab21      	add	r3, sp, #132	@ 0x84
 800d55a:	4604      	mov	r4, r0
 800d55c:	f853 5b04 	ldr.w	r5, [r3], #4
 800d560:	9302      	str	r3, [sp, #8]
 800d562:	a803      	add	r0, sp, #12
 800d564:	f000 fcfb 	bl	800df5e <_ZN8touchgfx12TextProviderC1Ev>
 800d568:	6823      	ldr	r3, [r4, #0]
 800d56a:	4620      	mov	r0, r4
 800d56c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d56e:	4798      	blx	r3
 800d570:	6823      	ldr	r3, [r4, #0]
 800d572:	4606      	mov	r6, r0
 800d574:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800d576:	4620      	mov	r0, r4
 800d578:	4798      	blx	r3
 800d57a:	4633      	mov	r3, r6
 800d57c:	9000      	str	r0, [sp, #0]
 800d57e:	9a02      	ldr	r2, [sp, #8]
 800d580:	4629      	mov	r1, r5
 800d582:	a803      	add	r0, sp, #12
 800d584:	f000 fd3e 	bl	800e004 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d588:	a803      	add	r0, sp, #12
 800d58a:	f001 f8fb 	bl	800e784 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d58e:	2401      	movs	r4, #1
 800d590:	b2a3      	uxth	r3, r4
 800d592:	b140      	cbz	r0, 800d5a6 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 800d594:	280a      	cmp	r0, #10
 800d596:	bf08      	it	eq
 800d598:	3301      	addeq	r3, #1
 800d59a:	a803      	add	r0, sp, #12
 800d59c:	bf08      	it	eq
 800d59e:	b21c      	sxtheq	r4, r3
 800d5a0:	f001 f8f0 	bl	800e784 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d5a4:	e7f4      	b.n	800d590 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800d5a6:	4618      	mov	r0, r3
 800d5a8:	b01d      	add	sp, #116	@ 0x74
 800d5aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d5ae:	b003      	add	sp, #12
 800d5b0:	4770      	bx	lr

0800d5b2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800d5b2:	b40e      	push	{r1, r2, r3}
 800d5b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d5b6:	b09e      	sub	sp, #120	@ 0x78
 800d5b8:	ab23      	add	r3, sp, #140	@ 0x8c
 800d5ba:	4604      	mov	r4, r0
 800d5bc:	f853 5b04 	ldr.w	r5, [r3], #4
 800d5c0:	9303      	str	r3, [sp, #12]
 800d5c2:	a805      	add	r0, sp, #20
 800d5c4:	f000 fccb 	bl	800df5e <_ZN8touchgfx12TextProviderC1Ev>
 800d5c8:	6823      	ldr	r3, [r4, #0]
 800d5ca:	4620      	mov	r0, r4
 800d5cc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d5ce:	4798      	blx	r3
 800d5d0:	6823      	ldr	r3, [r4, #0]
 800d5d2:	4606      	mov	r6, r0
 800d5d4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800d5d6:	4620      	mov	r0, r4
 800d5d8:	4798      	blx	r3
 800d5da:	4633      	mov	r3, r6
 800d5dc:	4629      	mov	r1, r5
 800d5de:	9000      	str	r0, [sp, #0]
 800d5e0:	9a03      	ldr	r2, [sp, #12]
 800d5e2:	a805      	add	r0, sp, #20
 800d5e4:	ad1e      	add	r5, sp, #120	@ 0x78
 800d5e6:	f000 fd0d 	bl	800e004 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d5ea:	2100      	movs	r1, #0
 800d5ec:	f845 1d68 	str.w	r1, [r5, #-104]!
 800d5f0:	4622      	mov	r2, r4
 800d5f2:	462b      	mov	r3, r5
 800d5f4:	a805      	add	r0, sp, #20
 800d5f6:	f000 fff7 	bl	800e5e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d5fa:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 800d5fe:	b1d8      	cbz	r0, 800d638 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 800d600:	280a      	cmp	r0, #10
 800d602:	d012      	beq.n	800d62a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800d604:	9804      	ldr	r0, [sp, #16]
 800d606:	b180      	cbz	r0, 800d62a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800d608:	7b47      	ldrb	r7, [r0, #13]
 800d60a:	88e2      	ldrh	r2, [r4, #6]
 800d60c:	00fb      	lsls	r3, r7, #3
 800d60e:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800d612:	7a03      	ldrb	r3, [r0, #8]
 800d614:	430b      	orrs	r3, r1
 800d616:	0679      	lsls	r1, r7, #25
 800d618:	bf44      	itt	mi
 800d61a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800d61e:	b21b      	sxthmi	r3, r3
 800d620:	1ad3      	subs	r3, r2, r3
 800d622:	b21b      	sxth	r3, r3
 800d624:	429e      	cmp	r6, r3
 800d626:	bfa8      	it	ge
 800d628:	461e      	movge	r6, r3
 800d62a:	462b      	mov	r3, r5
 800d62c:	4622      	mov	r2, r4
 800d62e:	2100      	movs	r1, #0
 800d630:	a805      	add	r0, sp, #20
 800d632:	f000 ffd9 	bl	800e5e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d636:	e7e2      	b.n	800d5fe <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 800d638:	4630      	mov	r0, r6
 800d63a:	b01e      	add	sp, #120	@ 0x78
 800d63c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800d640:	b003      	add	sp, #12
 800d642:	4770      	bx	lr

0800d644 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800d644:	b513      	push	{r0, r1, r4, lr}
 800d646:	6803      	ldr	r3, [r0, #0]
 800d648:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800d64c:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800d650:	f8ad 1004 	strh.w	r1, [sp, #4]
 800d654:	2400      	movs	r4, #0
 800d656:	9400      	str	r4, [sp, #0]
 800d658:	f8ad 2006 	strh.w	r2, [sp, #6]
 800d65c:	691b      	ldr	r3, [r3, #16]
 800d65e:	4669      	mov	r1, sp
 800d660:	4798      	blx	r3
 800d662:	b002      	add	sp, #8
 800d664:	bd10      	pop	{r4, pc}

0800d666 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800d666:	b538      	push	{r3, r4, r5, lr}
 800d668:	680b      	ldr	r3, [r1, #0]
 800d66a:	460c      	mov	r4, r1
 800d66c:	68db      	ldr	r3, [r3, #12]
 800d66e:	4605      	mov	r5, r0
 800d670:	4798      	blx	r3
 800d672:	6823      	ldr	r3, [r4, #0]
 800d674:	4620      	mov	r0, r4
 800d676:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d678:	4629      	mov	r1, r5
 800d67a:	4798      	blx	r3
 800d67c:	4628      	mov	r0, r5
 800d67e:	bd38      	pop	{r3, r4, r5, pc}

0800d680 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800d680:	b410      	push	{r4}
 800d682:	880a      	ldrh	r2, [r1, #0]
 800d684:	8884      	ldrh	r4, [r0, #4]
 800d686:	4422      	add	r2, r4
 800d688:	800a      	strh	r2, [r1, #0]
 800d68a:	88c4      	ldrh	r4, [r0, #6]
 800d68c:	884a      	ldrh	r2, [r1, #2]
 800d68e:	4422      	add	r2, r4
 800d690:	804a      	strh	r2, [r1, #2]
 800d692:	6940      	ldr	r0, [r0, #20]
 800d694:	b120      	cbz	r0, 800d6a0 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800d696:	6803      	ldr	r3, [r0, #0]
 800d698:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d69c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d69e:	4718      	bx	r3
 800d6a0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d6a4:	4770      	bx	lr

0800d6a6 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800d6a6:	b570      	push	{r4, r5, r6, lr}
 800d6a8:	8882      	ldrh	r2, [r0, #4]
 800d6aa:	880b      	ldrh	r3, [r1, #0]
 800d6ac:	4413      	add	r3, r2
 800d6ae:	800b      	strh	r3, [r1, #0]
 800d6b0:	88c2      	ldrh	r2, [r0, #6]
 800d6b2:	884b      	ldrh	r3, [r1, #2]
 800d6b4:	460c      	mov	r4, r1
 800d6b6:	4413      	add	r3, r2
 800d6b8:	804b      	strh	r3, [r1, #2]
 800d6ba:	4605      	mov	r5, r0
 800d6bc:	1d01      	adds	r1, r0, #4
 800d6be:	4620      	mov	r0, r4
 800d6c0:	f7fb fd18 	bl	80090f4 <_ZN8touchgfx4RectaNERKS0_>
 800d6c4:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800d6c8:	2b00      	cmp	r3, #0
 800d6ca:	dd0b      	ble.n	800d6e4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800d6cc:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800d6d0:	2b00      	cmp	r3, #0
 800d6d2:	dd07      	ble.n	800d6e4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800d6d4:	6968      	ldr	r0, [r5, #20]
 800d6d6:	b128      	cbz	r0, 800d6e4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800d6d8:	6803      	ldr	r3, [r0, #0]
 800d6da:	4621      	mov	r1, r4
 800d6dc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800d6de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d6e2:	4718      	bx	r3
 800d6e4:	bd70      	pop	{r4, r5, r6, pc}
	...

0800d6e8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800d6e8:	b570      	push	{r4, r5, r6, lr}
 800d6ea:	8882      	ldrh	r2, [r0, #4]
 800d6ec:	880b      	ldrh	r3, [r1, #0]
 800d6ee:	4413      	add	r3, r2
 800d6f0:	800b      	strh	r3, [r1, #0]
 800d6f2:	88c2      	ldrh	r2, [r0, #6]
 800d6f4:	884b      	ldrh	r3, [r1, #2]
 800d6f6:	460c      	mov	r4, r1
 800d6f8:	4413      	add	r3, r2
 800d6fa:	804b      	strh	r3, [r1, #2]
 800d6fc:	4605      	mov	r5, r0
 800d6fe:	1d01      	adds	r1, r0, #4
 800d700:	4620      	mov	r0, r4
 800d702:	f7fb fcf7 	bl	80090f4 <_ZN8touchgfx4RectaNERKS0_>
 800d706:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800d70a:	2b00      	cmp	r3, #0
 800d70c:	dd19      	ble.n	800d742 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800d70e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800d712:	2b00      	cmp	r3, #0
 800d714:	dd15      	ble.n	800d742 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800d716:	6968      	ldr	r0, [r5, #20]
 800d718:	b128      	cbz	r0, 800d726 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 800d71a:	6803      	ldr	r3, [r0, #0]
 800d71c:	4621      	mov	r1, r4
 800d71e:	691b      	ldr	r3, [r3, #16]
 800d720:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d724:	4718      	bx	r3
 800d726:	4b07      	ldr	r3, [pc, #28]	@ (800d744 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 800d728:	681b      	ldr	r3, [r3, #0]
 800d72a:	3304      	adds	r3, #4
 800d72c:	429d      	cmp	r5, r3
 800d72e:	d108      	bne.n	800d742 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800d730:	f7fe fea0 	bl	800c474 <_ZN8touchgfx11Application11getInstanceEv>
 800d734:	6803      	ldr	r3, [r0, #0]
 800d736:	6821      	ldr	r1, [r4, #0]
 800d738:	6862      	ldr	r2, [r4, #4]
 800d73a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d73c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d740:	4718      	bx	r3
 800d742:	bd70      	pop	{r4, r5, r6, pc}
 800d744:	20011a10 	.word	0x20011a10

0800d748 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800d748:	b570      	push	{r4, r5, r6, lr}
 800d74a:	4604      	mov	r4, r0
 800d74c:	4616      	mov	r6, r2
 800d74e:	460d      	mov	r5, r1
 800d750:	b901      	cbnz	r1, 800d754 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800d752:	b192      	cbz	r2, 800d77a <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 800d754:	6823      	ldr	r3, [r4, #0]
 800d756:	4620      	mov	r0, r4
 800d758:	699b      	ldr	r3, [r3, #24]
 800d75a:	4798      	blx	r3
 800d75c:	88e2      	ldrh	r2, [r4, #6]
 800d75e:	88a1      	ldrh	r1, [r4, #4]
 800d760:	4432      	add	r2, r6
 800d762:	4429      	add	r1, r5
 800d764:	4620      	mov	r0, r4
 800d766:	b212      	sxth	r2, r2
 800d768:	b209      	sxth	r1, r1
 800d76a:	f7f5 f8fd 	bl	8002968 <_ZN8touchgfx8Drawable5setXYEss>
 800d76e:	6823      	ldr	r3, [r4, #0]
 800d770:	4620      	mov	r0, r4
 800d772:	699b      	ldr	r3, [r3, #24]
 800d774:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d778:	4718      	bx	r3
 800d77a:	bd70      	pop	{r4, r5, r6, pc}

0800d77c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800d77c:	b510      	push	{r4, lr}
 800d77e:	4604      	mov	r4, r0
 800d780:	4608      	mov	r0, r1
 800d782:	2300      	movs	r3, #0
 800d784:	8023      	strh	r3, [r4, #0]
 800d786:	8063      	strh	r3, [r4, #2]
 800d788:	6803      	ldr	r3, [r0, #0]
 800d78a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800d78e:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800d792:	80a1      	strh	r1, [r4, #4]
 800d794:	80e2      	strh	r2, [r4, #6]
 800d796:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d798:	4621      	mov	r1, r4
 800d79a:	4798      	blx	r3
 800d79c:	4620      	mov	r0, r4
 800d79e:	bd10      	pop	{r4, pc}

0800d7a0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 800d7a0:	b530      	push	{r4, r5, lr}
 800d7a2:	8083      	strh	r3, [r0, #4]
 800d7a4:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800d7a8:	80c3      	strh	r3, [r0, #6]
 800d7aa:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800d7ae:	7203      	strb	r3, [r0, #8]
 800d7b0:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800d7b4:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800d7b8:	7243      	strb	r3, [r0, #9]
 800d7ba:	7a83      	ldrb	r3, [r0, #10]
 800d7bc:	6141      	str	r1, [r0, #20]
 800d7be:	f365 0306 	bfi	r3, r5, #0, #7
 800d7c2:	f89d 501c 	ldrb.w	r5, [sp, #28]
 800d7c6:	8302      	strh	r2, [r0, #24]
 800d7c8:	f365 13c7 	bfi	r3, r5, #7, #1
 800d7cc:	7283      	strb	r3, [r0, #10]
 800d7ce:	f89d 3020 	ldrb.w	r3, [sp, #32]
 800d7d2:	72c3      	strb	r3, [r0, #11]
 800d7d4:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 800d7d8:	7303      	strb	r3, [r0, #12]
 800d7da:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 800d7de:	81c3      	strh	r3, [r0, #14]
 800d7e0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800d7e4:	8203      	strh	r3, [r0, #16]
 800d7e6:	4b01      	ldr	r3, [pc, #4]	@ (800d7ec <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 800d7e8:	6003      	str	r3, [r0, #0]
 800d7ea:	bd30      	pop	{r4, r5, pc}
 800d7ec:	0801fcf8 	.word	0x0801fcf8

0800d7f0 <_ZNK8touchgfx9ConstFont4findEt>:
 800d7f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d7f2:	6944      	ldr	r4, [r0, #20]
 800d7f4:	b3bc      	cbz	r4, 800d866 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d7f6:	88a3      	ldrh	r3, [r4, #4]
 800d7f8:	8b02      	ldrh	r2, [r0, #24]
 800d7fa:	1acb      	subs	r3, r1, r3
 800d7fc:	f102 32ff 	add.w	r2, r2, #4294967295
 800d800:	d431      	bmi.n	800d866 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d802:	4293      	cmp	r3, r2
 800d804:	dd0c      	ble.n	800d820 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800d806:	230e      	movs	r3, #14
 800d808:	fb03 4302 	mla	r3, r3, r2, r4
 800d80c:	889b      	ldrh	r3, [r3, #4]
 800d80e:	1a5b      	subs	r3, r3, r1
 800d810:	1ad3      	subs	r3, r2, r3
 800d812:	429a      	cmp	r2, r3
 800d814:	db27      	blt.n	800d866 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d816:	2b00      	cmp	r3, #0
 800d818:	bfbc      	itt	lt
 800d81a:	2302      	movlt	r3, #2
 800d81c:	fb92 f3f3 	sdivlt	r3, r2, r3
 800d820:	2500      	movs	r5, #0
 800d822:	260e      	movs	r6, #14
 800d824:	4295      	cmp	r5, r2
 800d826:	dc1e      	bgt.n	800d866 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d828:	fb06 4003 	mla	r0, r6, r3, r4
 800d82c:	8887      	ldrh	r7, [r0, #4]
 800d82e:	42b9      	cmp	r1, r7
 800d830:	d01a      	beq.n	800d868 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800d832:	d20d      	bcs.n	800d850 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800d834:	1e5a      	subs	r2, r3, #1
 800d836:	4295      	cmp	r5, r2
 800d838:	dc15      	bgt.n	800d866 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d83a:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800d83e:	1a5b      	subs	r3, r3, r1
 800d840:	1ad3      	subs	r3, r2, r3
 800d842:	429a      	cmp	r2, r3
 800d844:	db0f      	blt.n	800d866 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d846:	429d      	cmp	r5, r3
 800d848:	ddec      	ble.n	800d824 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800d84a:	1953      	adds	r3, r2, r5
 800d84c:	105b      	asrs	r3, r3, #1
 800d84e:	e7e9      	b.n	800d824 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800d850:	1c5d      	adds	r5, r3, #1
 800d852:	42aa      	cmp	r2, r5
 800d854:	db07      	blt.n	800d866 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d856:	8a43      	ldrh	r3, [r0, #18]
 800d858:	1acb      	subs	r3, r1, r3
 800d85a:	442b      	add	r3, r5
 800d85c:	429d      	cmp	r5, r3
 800d85e:	dc02      	bgt.n	800d866 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d860:	429a      	cmp	r2, r3
 800d862:	dadf      	bge.n	800d824 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800d864:	e7f1      	b.n	800d84a <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800d866:	2000      	movs	r0, #0
 800d868:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d86a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800d86a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d86c:	4604      	mov	r4, r0
 800d86e:	4617      	mov	r7, r2
 800d870:	461e      	mov	r6, r3
 800d872:	b911      	cbnz	r1, 800d87a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800d874:	2500      	movs	r5, #0
 800d876:	4628      	mov	r0, r5
 800d878:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d87a:	290a      	cmp	r1, #10
 800d87c:	d0fa      	beq.n	800d874 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800d87e:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 800d882:	4291      	cmp	r1, r2
 800d884:	d0f6      	beq.n	800d874 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800d886:	f242 020b 	movw	r2, #8203	@ 0x200b
 800d88a:	4291      	cmp	r1, r2
 800d88c:	d0f2      	beq.n	800d874 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800d88e:	f7ff ffaf 	bl	800d7f0 <_ZNK8touchgfx9ConstFont4findEt>
 800d892:	4605      	mov	r5, r0
 800d894:	b950      	cbnz	r0, 800d8ac <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800d896:	6823      	ldr	r3, [r4, #0]
 800d898:	4620      	mov	r0, r4
 800d89a:	691b      	ldr	r3, [r3, #16]
 800d89c:	4798      	blx	r3
 800d89e:	4601      	mov	r1, r0
 800d8a0:	4620      	mov	r0, r4
 800d8a2:	f7ff ffa5 	bl	800d7f0 <_ZNK8touchgfx9ConstFont4findEt>
 800d8a6:	4605      	mov	r5, r0
 800d8a8:	2800      	cmp	r0, #0
 800d8aa:	d0e3      	beq.n	800d874 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800d8ac:	6823      	ldr	r3, [r4, #0]
 800d8ae:	4629      	mov	r1, r5
 800d8b0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800d8b2:	4620      	mov	r0, r4
 800d8b4:	4798      	blx	r3
 800d8b6:	6038      	str	r0, [r7, #0]
 800d8b8:	6823      	ldr	r3, [r4, #0]
 800d8ba:	4620      	mov	r0, r4
 800d8bc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800d8be:	4798      	blx	r3
 800d8c0:	7030      	strb	r0, [r6, #0]
 800d8c2:	e7d8      	b.n	800d876 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800d8c4 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 800d8c4:	2000      	movs	r0, #0
 800d8c6:	4770      	bx	lr

0800d8c8 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 800d8c8:	2001      	movs	r0, #1
 800d8ca:	4770      	bx	lr

0800d8cc <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 800d8cc:	2002      	movs	r0, #2
 800d8ce:	4770      	bx	lr

0800d8d0 <_ZN8touchgfx6ScreenD1Ev>:
 800d8d0:	4770      	bx	lr

0800d8d2 <_ZN8touchgfx12GestureEventD1Ev>:
 800d8d2:	4770      	bx	lr

0800d8d4 <_ZN8touchgfx9DragEventD1Ev>:
 800d8d4:	4770      	bx	lr

0800d8d6 <_ZN8touchgfx10ClickEventD1Ev>:
 800d8d6:	4770      	bx	lr

0800d8d8 <_ZN8touchgfx10ClickEventD0Ev>:
 800d8d8:	b510      	push	{r4, lr}
 800d8da:	210c      	movs	r1, #12
 800d8dc:	4604      	mov	r4, r0
 800d8de:	f00f fb31 	bl	801cf44 <_ZdlPvj>
 800d8e2:	4620      	mov	r0, r4
 800d8e4:	bd10      	pop	{r4, pc}

0800d8e6 <_ZN8touchgfx9DragEventD0Ev>:
 800d8e6:	b510      	push	{r4, lr}
 800d8e8:	2110      	movs	r1, #16
 800d8ea:	4604      	mov	r4, r0
 800d8ec:	f00f fb2a 	bl	801cf44 <_ZdlPvj>
 800d8f0:	4620      	mov	r0, r4
 800d8f2:	bd10      	pop	{r4, pc}

0800d8f4 <_ZN8touchgfx12GestureEventD0Ev>:
 800d8f4:	b510      	push	{r4, lr}
 800d8f6:	210c      	movs	r1, #12
 800d8f8:	4604      	mov	r4, r0
 800d8fa:	f00f fb23 	bl	801cf44 <_ZdlPvj>
 800d8fe:	4620      	mov	r0, r4
 800d900:	bd10      	pop	{r4, pc}

0800d902 <_ZN8touchgfx6ScreenD0Ev>:
 800d902:	b510      	push	{r4, lr}
 800d904:	213c      	movs	r1, #60	@ 0x3c
 800d906:	4604      	mov	r4, r0
 800d908:	f00f fb1c 	bl	801cf44 <_ZdlPvj>
 800d90c:	4620      	mov	r0, r4
 800d90e:	bd10      	pop	{r4, pc}

0800d910 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800d910:	b530      	push	{r4, r5, lr}
 800d912:	460d      	mov	r5, r1
 800d914:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 800d916:	b087      	sub	sp, #28
 800d918:	4604      	mov	r4, r0
 800d91a:	b301      	cbz	r1, 800d95e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800d91c:	a801      	add	r0, sp, #4
 800d91e:	f7ff ff2d 	bl	800d77c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d922:	892a      	ldrh	r2, [r5, #8]
 800d924:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800d928:	7928      	ldrb	r0, [r5, #4]
 800d92a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800d92e:	f88d 0010 	strb.w	r0, [sp, #16]
 800d932:	1ad2      	subs	r2, r2, r3
 800d934:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 800d936:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800d938:	f8ad 1012 	strh.w	r1, [sp, #18]
 800d93c:	441a      	add	r2, r3
 800d93e:	896b      	ldrh	r3, [r5, #10]
 800d940:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800d944:	f8ad 2014 	strh.w	r2, [sp, #20]
 800d948:	1b5b      	subs	r3, r3, r5
 800d94a:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 800d94c:	442b      	add	r3, r5
 800d94e:	4d05      	ldr	r5, [pc, #20]	@ (800d964 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800d950:	9503      	str	r5, [sp, #12]
 800d952:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d956:	6803      	ldr	r3, [r0, #0]
 800d958:	a903      	add	r1, sp, #12
 800d95a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800d95c:	4798      	blx	r3
 800d95e:	b007      	add	sp, #28
 800d960:	bd30      	pop	{r4, r5, pc}
 800d962:	bf00      	nop
 800d964:	0801fd88 	.word	0x0801fd88

0800d968 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800d968:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d96c:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 800d96e:	b08a      	sub	sp, #40	@ 0x28
 800d970:	4604      	mov	r4, r0
 800d972:	460d      	mov	r5, r1
 800d974:	b113      	cbz	r3, 800d97c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 800d976:	790b      	ldrb	r3, [r1, #4]
 800d978:	2b00      	cmp	r3, #0
 800d97a:	d044      	beq.n	800da06 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800d97c:	f104 0804 	add.w	r8, r4, #4
 800d980:	4641      	mov	r1, r8
 800d982:	a803      	add	r0, sp, #12
 800d984:	f7ff fefa 	bl	800d77c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d988:	792b      	ldrb	r3, [r5, #4]
 800d98a:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 800d98e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800d992:	b983      	cbnz	r3, 800d9b6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 800d994:	892a      	ldrh	r2, [r5, #8]
 800d996:	88e9      	ldrh	r1, [r5, #6]
 800d998:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 800d99c:	1b92      	subs	r2, r2, r6
 800d99e:	1bc9      	subs	r1, r1, r7
 800d9a0:	9301      	str	r3, [sp, #4]
 800d9a2:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 800d9a6:	9300      	str	r3, [sp, #0]
 800d9a8:	b212      	sxth	r2, r2
 800d9aa:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 800d9ae:	b209      	sxth	r1, r1
 800d9b0:	4640      	mov	r0, r8
 800d9b2:	f7fb fabb 	bl	8008f2c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 800d9b6:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800d9b8:	b329      	cbz	r1, 800da06 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800d9ba:	a805      	add	r0, sp, #20
 800d9bc:	f7ff fede 	bl	800d77c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d9c0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d9c4:	792b      	ldrb	r3, [r5, #4]
 800d9c6:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800d9c8:	f88d 3020 	strb.w	r3, [sp, #32]
 800d9cc:	1abf      	subs	r7, r7, r2
 800d9ce:	88ea      	ldrh	r2, [r5, #6]
 800d9d0:	4417      	add	r7, r2
 800d9d2:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 800d9d4:	4417      	add	r7, r2
 800d9d6:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800d9da:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 800d9de:	1ab6      	subs	r6, r6, r2
 800d9e0:	892a      	ldrh	r2, [r5, #8]
 800d9e2:	4416      	add	r6, r2
 800d9e4:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800d9e6:	4416      	add	r6, r2
 800d9e8:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 800d9ec:	4a07      	ldr	r2, [pc, #28]	@ (800da0c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 800d9ee:	9207      	str	r2, [sp, #28]
 800d9f0:	2600      	movs	r6, #0
 800d9f2:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 800d9f6:	6803      	ldr	r3, [r0, #0]
 800d9f8:	a907      	add	r1, sp, #28
 800d9fa:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800d9fc:	4798      	blx	r3
 800d9fe:	792b      	ldrb	r3, [r5, #4]
 800da00:	b10b      	cbz	r3, 800da06 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800da02:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 800da06:	b00a      	add	sp, #40	@ 0x28
 800da08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800da0c:	0801fd60 	.word	0x0801fd60

0800da10 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800da10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800da14:	460c      	mov	r4, r1
 800da16:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 800da18:	b088      	sub	sp, #32
 800da1a:	4605      	mov	r5, r0
 800da1c:	2900      	cmp	r1, #0
 800da1e:	d06d      	beq.n	800dafc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 800da20:	4668      	mov	r0, sp
 800da22:	f7ff feab 	bl	800d77c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800da26:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 800da28:	88e3      	ldrh	r3, [r4, #6]
 800da2a:	f9bd 8000 	ldrsh.w	r8, [sp]
 800da2e:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 800da32:	440b      	add	r3, r1
 800da34:	b21b      	sxth	r3, r3
 800da36:	4543      	cmp	r3, r8
 800da38:	db31      	blt.n	800da9e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800da3a:	f8bd c004 	ldrh.w	ip, [sp, #4]
 800da3e:	44c4      	add	ip, r8
 800da40:	fa0f fc8c 	sxth.w	ip, ip
 800da44:	4563      	cmp	r3, ip
 800da46:	da2a      	bge.n	800da9e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800da48:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 800da4a:	8926      	ldrh	r6, [r4, #8]
 800da4c:	4416      	add	r6, r2
 800da4e:	b236      	sxth	r6, r6
 800da50:	42be      	cmp	r6, r7
 800da52:	db24      	blt.n	800da9e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800da54:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800da58:	4438      	add	r0, r7
 800da5a:	b200      	sxth	r0, r0
 800da5c:	4286      	cmp	r6, r0
 800da5e:	da1e      	bge.n	800da9e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800da60:	8963      	ldrh	r3, [r4, #10]
 800da62:	4419      	add	r1, r3
 800da64:	b209      	sxth	r1, r1
 800da66:	4541      	cmp	r1, r8
 800da68:	db08      	blt.n	800da7c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800da6a:	4561      	cmp	r1, ip
 800da6c:	da06      	bge.n	800da7c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800da6e:	89a3      	ldrh	r3, [r4, #12]
 800da70:	441a      	add	r2, r3
 800da72:	b212      	sxth	r2, r2
 800da74:	42ba      	cmp	r2, r7
 800da76:	db01      	blt.n	800da7c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800da78:	4282      	cmp	r2, r0
 800da7a:	db10      	blt.n	800da9e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800da7c:	4b21      	ldr	r3, [pc, #132]	@ (800db04 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 800da7e:	9304      	str	r3, [sp, #16]
 800da80:	2302      	movs	r3, #2
 800da82:	f88d 3014 	strb.w	r3, [sp, #20]
 800da86:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 800da88:	2300      	movs	r3, #0
 800da8a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800da8e:	f8ad 3018 	strh.w	r3, [sp, #24]
 800da92:	f8ad 301a 	strh.w	r3, [sp, #26]
 800da96:	6803      	ldr	r3, [r0, #0]
 800da98:	a904      	add	r1, sp, #16
 800da9a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800da9c:	4798      	blx	r3
 800da9e:	1d29      	adds	r1, r5, #4
 800daa0:	a802      	add	r0, sp, #8
 800daa2:	f7ff fe6b 	bl	800d77c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800daa6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800daaa:	88e0      	ldrh	r0, [r4, #6]
 800daac:	7921      	ldrb	r1, [r4, #4]
 800daae:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 800dab2:	8922      	ldrh	r2, [r4, #8]
 800dab4:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 800dab6:	f88d 1014 	strb.w	r1, [sp, #20]
 800daba:	eba3 0808 	sub.w	r8, r3, r8
 800dabe:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800dac2:	1bdf      	subs	r7, r3, r7
 800dac4:	b2bb      	uxth	r3, r7
 800dac6:	fa1f f888 	uxth.w	r8, r8
 800daca:	8967      	ldrh	r7, [r4, #10]
 800dacc:	89a4      	ldrh	r4, [r4, #12]
 800dace:	4440      	add	r0, r8
 800dad0:	4460      	add	r0, ip
 800dad2:	441a      	add	r2, r3
 800dad4:	44b8      	add	r8, r7
 800dad6:	4423      	add	r3, r4
 800dad8:	f8ad 0016 	strh.w	r0, [sp, #22]
 800dadc:	4433      	add	r3, r6
 800dade:	4432      	add	r2, r6
 800dae0:	44e0      	add	r8, ip
 800dae2:	4c09      	ldr	r4, [pc, #36]	@ (800db08 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 800dae4:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 800dae6:	9404      	str	r4, [sp, #16]
 800dae8:	f8ad 2018 	strh.w	r2, [sp, #24]
 800daec:	f8ad 801a 	strh.w	r8, [sp, #26]
 800daf0:	f8ad 301c 	strh.w	r3, [sp, #28]
 800daf4:	6803      	ldr	r3, [r0, #0]
 800daf6:	a904      	add	r1, sp, #16
 800daf8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800dafa:	4798      	blx	r3
 800dafc:	b008      	add	sp, #32
 800dafe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800db02:	bf00      	nop
 800db04:	0801fd60 	.word	0x0801fd60
 800db08:	0801fd74 	.word	0x0801fd74

0800db0c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800db0c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800db0e:	4604      	mov	r4, r0
 800db10:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800db14:	3201      	adds	r2, #1
 800db16:	d112      	bne.n	800db3e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800db18:	6803      	ldr	r3, [r0, #0]
 800db1a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800db1e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800db22:	f8ad 1004 	strh.w	r1, [sp, #4]
 800db26:	2500      	movs	r5, #0
 800db28:	9500      	str	r5, [sp, #0]
 800db2a:	466d      	mov	r5, sp
 800db2c:	4629      	mov	r1, r5
 800db2e:	f8ad 2006 	strh.w	r2, [sp, #6]
 800db32:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800db34:	4798      	blx	r3
 800db36:	e895 0003 	ldmia.w	r5, {r0, r1}
 800db3a:	e884 0003 	stmia.w	r4, {r0, r1}
 800db3e:	4620      	mov	r0, r4
 800db40:	b003      	add	sp, #12
 800db42:	bd30      	pop	{r4, r5, pc}

0800db44 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800db44:	b513      	push	{r0, r1, r4, lr}
 800db46:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800db4a:	3301      	adds	r3, #1
 800db4c:	4604      	mov	r4, r0
 800db4e:	d109      	bne.n	800db64 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800db50:	4601      	mov	r1, r0
 800db52:	4668      	mov	r0, sp
 800db54:	f7ff fe12 	bl	800d77c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800db58:	f8bd 3000 	ldrh.w	r3, [sp]
 800db5c:	8423      	strh	r3, [r4, #32]
 800db5e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800db62:	8463      	strh	r3, [r4, #34]	@ 0x22
 800db64:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800db68:	b002      	add	sp, #8
 800db6a:	bd10      	pop	{r4, pc}

0800db6c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800db6c:	b513      	push	{r0, r1, r4, lr}
 800db6e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 800db72:	3301      	adds	r3, #1
 800db74:	4604      	mov	r4, r0
 800db76:	d109      	bne.n	800db8c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800db78:	4601      	mov	r1, r0
 800db7a:	4668      	mov	r0, sp
 800db7c:	f7ff fdfe 	bl	800d77c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800db80:	f8bd 3000 	ldrh.w	r3, [sp]
 800db84:	8423      	strh	r3, [r4, #32]
 800db86:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800db8a:	8463      	strh	r3, [r4, #34]	@ 0x22
 800db8c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 800db90:	b002      	add	sp, #8
 800db92:	bd10      	pop	{r4, pc}

0800db94 <_ZN8touchgfx6ScreenC1Ev>:
 800db94:	b570      	push	{r4, r5, r6, lr}
 800db96:	4605      	mov	r5, r0
 800db98:	4b16      	ldr	r3, [pc, #88]	@ (800dbf4 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800db9a:	f845 3b04 	str.w	r3, [r5], #4
 800db9e:	2300      	movs	r3, #0
 800dba0:	8103      	strh	r3, [r0, #8]
 800dba2:	8143      	strh	r3, [r0, #10]
 800dba4:	8183      	strh	r3, [r0, #12]
 800dba6:	81c3      	strh	r3, [r0, #14]
 800dba8:	8203      	strh	r3, [r0, #16]
 800dbaa:	8243      	strh	r3, [r0, #18]
 800dbac:	8283      	strh	r3, [r0, #20]
 800dbae:	82c3      	strh	r3, [r0, #22]
 800dbb0:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800dbb4:	6203      	str	r3, [r0, #32]
 800dbb6:	8483      	strh	r3, [r0, #36]	@ 0x24
 800dbb8:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800dbba:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 800dbbe:	4a0e      	ldr	r2, [pc, #56]	@ (800dbf8 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800dbc0:	6343      	str	r3, [r0, #52]	@ 0x34
 800dbc2:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 800dbc6:	4b0d      	ldr	r3, [pc, #52]	@ (800dbfc <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800dbc8:	6042      	str	r2, [r0, #4]
 800dbca:	f9b3 6000 	ldrsh.w	r6, [r3]
 800dbce:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 800dbd0:	4a0b      	ldr	r2, [pc, #44]	@ (800dc00 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800dbd2:	4604      	mov	r4, r0
 800dbd4:	2101      	movs	r1, #1
 800dbd6:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 800dbda:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 800dbde:	f9b2 1000 	ldrsh.w	r1, [r2]
 800dbe2:	4628      	mov	r0, r5
 800dbe4:	4798      	blx	r3
 800dbe6:	6863      	ldr	r3, [r4, #4]
 800dbe8:	4628      	mov	r0, r5
 800dbea:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800dbec:	4631      	mov	r1, r6
 800dbee:	4798      	blx	r3
 800dbf0:	4620      	mov	r0, r4
 800dbf2:	bd70      	pop	{r4, r5, r6, pc}
 800dbf4:	0801fd9c 	.word	0x0801fd9c
 800dbf8:	0801fa20 	.word	0x0801fa20
 800dbfc:	200119ca 	.word	0x200119ca
 800dc00:	200119c8 	.word	0x200119c8

0800dc04 <_ZN8touchgfx6Screen4drawEv>:
 800dc04:	b507      	push	{r0, r1, r2, lr}
 800dc06:	4b09      	ldr	r3, [pc, #36]	@ (800dc2c <_ZN8touchgfx6Screen4drawEv+0x28>)
 800dc08:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dc0c:	4b08      	ldr	r3, [pc, #32]	@ (800dc30 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800dc0e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800dc12:	f9b3 3000 	ldrsh.w	r3, [r3]
 800dc16:	f8ad 3006 	strh.w	r3, [sp, #6]
 800dc1a:	6803      	ldr	r3, [r0, #0]
 800dc1c:	2100      	movs	r1, #0
 800dc1e:	9100      	str	r1, [sp, #0]
 800dc20:	689b      	ldr	r3, [r3, #8]
 800dc22:	4669      	mov	r1, sp
 800dc24:	4798      	blx	r3
 800dc26:	b003      	add	sp, #12
 800dc28:	f85d fb04 	ldr.w	pc, [sp], #4
 800dc2c:	200119c8 	.word	0x200119c8
 800dc30:	200119ca 	.word	0x200119ca

0800dc34 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800dc34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dc38:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800dc3c:	2b00      	cmp	r3, #0
 800dc3e:	b089      	sub	sp, #36	@ 0x24
 800dc40:	4680      	mov	r8, r0
 800dc42:	460c      	mov	r4, r1
 800dc44:	4615      	mov	r5, r2
 800dc46:	dd0e      	ble.n	800dc66 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800dc48:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800dc4c:	2b00      	cmp	r3, #0
 800dc4e:	dd0a      	ble.n	800dc66 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800dc50:	4628      	mov	r0, r5
 800dc52:	f7ff ff5b 	bl	800db0c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800dc56:	4621      	mov	r1, r4
 800dc58:	f7fe fb2d 	bl	800c2b6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800dc5c:	69eb      	ldr	r3, [r5, #28]
 800dc5e:	b928      	cbnz	r0, 800dc6c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800dc60:	461d      	mov	r5, r3
 800dc62:	2b00      	cmp	r3, #0
 800dc64:	d1f4      	bne.n	800dc50 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800dc66:	b009      	add	sp, #36	@ 0x24
 800dc68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dc6c:	ae04      	add	r6, sp, #16
 800dc6e:	2b00      	cmp	r3, #0
 800dc70:	f000 80b5 	beq.w	800ddde <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800dc74:	682b      	ldr	r3, [r5, #0]
 800dc76:	4629      	mov	r1, r5
 800dc78:	68db      	ldr	r3, [r3, #12]
 800dc7a:	a802      	add	r0, sp, #8
 800dc7c:	4798      	blx	r3
 800dc7e:	4628      	mov	r0, r5
 800dc80:	f7ff ff60 	bl	800db44 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800dc84:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800dc88:	4407      	add	r7, r0
 800dc8a:	4628      	mov	r0, r5
 800dc8c:	f7ff ff6e 	bl	800db6c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800dc90:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800dc94:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800dc98:	f8ad 2014 	strh.w	r2, [sp, #20]
 800dc9c:	4418      	add	r0, r3
 800dc9e:	4621      	mov	r1, r4
 800dca0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800dca4:	f8ad 0012 	strh.w	r0, [sp, #18]
 800dca8:	b23f      	sxth	r7, r7
 800dcaa:	4630      	mov	r0, r6
 800dcac:	f8ad 3016 	strh.w	r3, [sp, #22]
 800dcb0:	f8ad 7010 	strh.w	r7, [sp, #16]
 800dcb4:	f7fb fa1e 	bl	80090f4 <_ZN8touchgfx4RectaNERKS0_>
 800dcb8:	4628      	mov	r0, r5
 800dcba:	f7ff ff27 	bl	800db0c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800dcbe:	4602      	mov	r2, r0
 800dcc0:	e896 0003 	ldmia.w	r6, {r0, r1}
 800dcc4:	ab06      	add	r3, sp, #24
 800dcc6:	e883 0003 	stmia.w	r3, {r0, r1}
 800dcca:	4611      	mov	r1, r2
 800dccc:	4618      	mov	r0, r3
 800dcce:	f7fb fa11 	bl	80090f4 <_ZN8touchgfx4RectaNERKS0_>
 800dcd2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800dcd6:	f9b4 1000 	ldrsh.w	r1, [r4]
 800dcda:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800dcde:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800dce2:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800dce6:	4299      	cmp	r1, r3
 800dce8:	d10b      	bne.n	800dd02 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800dcea:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800dcee:	4552      	cmp	r2, sl
 800dcf0:	d107      	bne.n	800dd02 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800dcf2:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800dcf6:	455a      	cmp	r2, fp
 800dcf8:	d103      	bne.n	800dd02 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800dcfa:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800dcfe:	454a      	cmp	r2, r9
 800dd00:	d06d      	beq.n	800ddde <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800dd02:	f1bb 0f00 	cmp.w	fp, #0
 800dd06:	dd65      	ble.n	800ddd4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800dd08:	f1b9 0f00 	cmp.w	r9, #0
 800dd0c:	dd62      	ble.n	800ddd4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800dd0e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800dd12:	fa1f f08a 	uxth.w	r0, sl
 800dd16:	4552      	cmp	r2, sl
 800dd18:	9000      	str	r0, [sp, #0]
 800dd1a:	da12      	bge.n	800dd42 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800dd1c:	9301      	str	r3, [sp, #4]
 800dd1e:	9b00      	ldr	r3, [sp, #0]
 800dd20:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800dd24:	f8ad 2012 	strh.w	r2, [sp, #18]
 800dd28:	1a9a      	subs	r2, r3, r2
 800dd2a:	f8ad 1010 	strh.w	r1, [sp, #16]
 800dd2e:	f8ad 0014 	strh.w	r0, [sp, #20]
 800dd32:	f8ad 2016 	strh.w	r2, [sp, #22]
 800dd36:	69ea      	ldr	r2, [r5, #28]
 800dd38:	4631      	mov	r1, r6
 800dd3a:	4640      	mov	r0, r8
 800dd3c:	f7ff ff7a 	bl	800dc34 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800dd40:	9b01      	ldr	r3, [sp, #4]
 800dd42:	f9b4 2000 	ldrsh.w	r2, [r4]
 800dd46:	429a      	cmp	r2, r3
 800dd48:	b29f      	uxth	r7, r3
 800dd4a:	da0d      	bge.n	800dd68 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800dd4c:	f8ad 2010 	strh.w	r2, [sp, #16]
 800dd50:	1aba      	subs	r2, r7, r2
 800dd52:	f8ad a012 	strh.w	sl, [sp, #18]
 800dd56:	f8ad 2014 	strh.w	r2, [sp, #20]
 800dd5a:	f8ad 9016 	strh.w	r9, [sp, #22]
 800dd5e:	69ea      	ldr	r2, [r5, #28]
 800dd60:	4631      	mov	r1, r6
 800dd62:	4640      	mov	r0, r8
 800dd64:	f7ff ff66 	bl	800dc34 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800dd68:	8822      	ldrh	r2, [r4, #0]
 800dd6a:	88a3      	ldrh	r3, [r4, #4]
 800dd6c:	445f      	add	r7, fp
 800dd6e:	4413      	add	r3, r2
 800dd70:	b29b      	uxth	r3, r3
 800dd72:	b2bf      	uxth	r7, r7
 800dd74:	b23a      	sxth	r2, r7
 800dd76:	b219      	sxth	r1, r3
 800dd78:	4291      	cmp	r1, r2
 800dd7a:	dd0d      	ble.n	800dd98 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800dd7c:	1bdb      	subs	r3, r3, r7
 800dd7e:	f8ad 2010 	strh.w	r2, [sp, #16]
 800dd82:	f8ad a012 	strh.w	sl, [sp, #18]
 800dd86:	f8ad 3014 	strh.w	r3, [sp, #20]
 800dd8a:	f8ad 9016 	strh.w	r9, [sp, #22]
 800dd8e:	69ea      	ldr	r2, [r5, #28]
 800dd90:	4631      	mov	r1, r6
 800dd92:	4640      	mov	r0, r8
 800dd94:	f7ff ff4e 	bl	800dc34 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800dd98:	88e2      	ldrh	r2, [r4, #6]
 800dd9a:	8863      	ldrh	r3, [r4, #2]
 800dd9c:	4413      	add	r3, r2
 800dd9e:	9a00      	ldr	r2, [sp, #0]
 800dda0:	444a      	add	r2, r9
 800dda2:	b29b      	uxth	r3, r3
 800dda4:	fa1f f982 	uxth.w	r9, r2
 800dda8:	fa0f f289 	sxth.w	r2, r9
 800ddac:	b219      	sxth	r1, r3
 800ddae:	428a      	cmp	r2, r1
 800ddb0:	da15      	bge.n	800ddde <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800ddb2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800ddb6:	f9b4 0000 	ldrsh.w	r0, [r4]
 800ddba:	f8ad 1014 	strh.w	r1, [sp, #20]
 800ddbe:	eba3 0309 	sub.w	r3, r3, r9
 800ddc2:	f8ad 0010 	strh.w	r0, [sp, #16]
 800ddc6:	f8ad 2012 	strh.w	r2, [sp, #18]
 800ddca:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ddce:	69ea      	ldr	r2, [r5, #28]
 800ddd0:	4631      	mov	r1, r6
 800ddd2:	e001      	b.n	800ddd8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800ddd4:	69ea      	ldr	r2, [r5, #28]
 800ddd6:	4621      	mov	r1, r4
 800ddd8:	4640      	mov	r0, r8
 800ddda:	f7ff ff2b 	bl	800dc34 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800ddde:	4628      	mov	r0, r5
 800dde0:	f7ff fe94 	bl	800db0c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800dde4:	6861      	ldr	r1, [r4, #4]
 800dde6:	4602      	mov	r2, r0
 800dde8:	6820      	ldr	r0, [r4, #0]
 800ddea:	4633      	mov	r3, r6
 800ddec:	c303      	stmia	r3!, {r0, r1}
 800ddee:	4611      	mov	r1, r2
 800ddf0:	4630      	mov	r0, r6
 800ddf2:	f7fb f97f 	bl	80090f4 <_ZN8touchgfx4RectaNERKS0_>
 800ddf6:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800ddfa:	2b00      	cmp	r3, #0
 800ddfc:	f77f af33 	ble.w	800dc66 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800de00:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800de04:	2b00      	cmp	r3, #0
 800de06:	f77f af2e 	ble.w	800dc66 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800de0a:	4628      	mov	r0, r5
 800de0c:	f7ff fe9a 	bl	800db44 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800de10:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800de14:	1a18      	subs	r0, r3, r0
 800de16:	f8ad 0010 	strh.w	r0, [sp, #16]
 800de1a:	4628      	mov	r0, r5
 800de1c:	f7ff fea6 	bl	800db6c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800de20:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800de24:	1a18      	subs	r0, r3, r0
 800de26:	f8ad 0012 	strh.w	r0, [sp, #18]
 800de2a:	682b      	ldr	r3, [r5, #0]
 800de2c:	4631      	mov	r1, r6
 800de2e:	689b      	ldr	r3, [r3, #8]
 800de30:	4628      	mov	r0, r5
 800de32:	4798      	blx	r3
 800de34:	e717      	b.n	800dc66 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800de36 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800de36:	b570      	push	{r4, r5, r6, lr}
 800de38:	460c      	mov	r4, r1
 800de3a:	b086      	sub	sp, #24
 800de3c:	1d06      	adds	r6, r0, #4
 800de3e:	2300      	movs	r3, #0
 800de40:	4631      	mov	r1, r6
 800de42:	4605      	mov	r5, r0
 800de44:	a802      	add	r0, sp, #8
 800de46:	9301      	str	r3, [sp, #4]
 800de48:	f7ff fc98 	bl	800d77c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800de4c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800de50:	8822      	ldrh	r2, [r4, #0]
 800de52:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800de56:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800de5a:	f8ad 0014 	strh.w	r0, [sp, #20]
 800de5e:	1ad2      	subs	r2, r2, r3
 800de60:	8863      	ldrh	r3, [r4, #2]
 800de62:	f8ad 2010 	strh.w	r2, [sp, #16]
 800de66:	1a5b      	subs	r3, r3, r1
 800de68:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800de6c:	f8ad 1016 	strh.w	r1, [sp, #22]
 800de70:	aa01      	add	r2, sp, #4
 800de72:	a904      	add	r1, sp, #16
 800de74:	4630      	mov	r0, r6
 800de76:	f8ad 3012 	strh.w	r3, [sp, #18]
 800de7a:	f7fb fa13 	bl	80092a4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800de7e:	9a01      	ldr	r2, [sp, #4]
 800de80:	b11a      	cbz	r2, 800de8a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 800de82:	4621      	mov	r1, r4
 800de84:	4628      	mov	r0, r5
 800de86:	f7ff fed5 	bl	800dc34 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800de8a:	b006      	add	sp, #24
 800de8c:	bd70      	pop	{r4, r5, r6, pc}

0800de8e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800de8e:	b530      	push	{r4, r5, lr}
 800de90:	4602      	mov	r2, r0
 800de92:	4604      	mov	r4, r0
 800de94:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800de98:	b085      	sub	sp, #20
 800de9a:	460d      	mov	r5, r1
 800de9c:	6851      	ldr	r1, [r2, #4]
 800de9e:	466b      	mov	r3, sp
 800dea0:	c303      	stmia	r3!, {r0, r1}
 800dea2:	4629      	mov	r1, r5
 800dea4:	4668      	mov	r0, sp
 800dea6:	f7fb f925 	bl	80090f4 <_ZN8touchgfx4RectaNERKS0_>
 800deaa:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800deae:	b12b      	cbz	r3, 800debc <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 800deb0:	4669      	mov	r1, sp
 800deb2:	4620      	mov	r0, r4
 800deb4:	f7ff ffbf 	bl	800de36 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800deb8:	b005      	add	sp, #20
 800deba:	bd30      	pop	{r4, r5, pc}
 800debc:	3404      	adds	r4, #4
 800debe:	4621      	mov	r1, r4
 800dec0:	a802      	add	r0, sp, #8
 800dec2:	f7ff fc5b 	bl	800d77c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dec6:	f8bd 3000 	ldrh.w	r3, [sp]
 800deca:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800dece:	1a9b      	subs	r3, r3, r2
 800ded0:	f8ad 3000 	strh.w	r3, [sp]
 800ded4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800ded8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800dedc:	4669      	mov	r1, sp
 800dede:	1a9b      	subs	r3, r3, r2
 800dee0:	4620      	mov	r0, r4
 800dee2:	f8ad 3002 	strh.w	r3, [sp, #2]
 800dee6:	f7fb f9a4 	bl	8009232 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800deea:	e7e5      	b.n	800deb8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0800deec <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800deec:	680a      	ldr	r2, [r1, #0]
 800deee:	460b      	mov	r3, r1
 800def0:	6992      	ldr	r2, [r2, #24]
 800def2:	1d01      	adds	r1, r0, #4
 800def4:	4618      	mov	r0, r3
 800def6:	4710      	bx	r2

0800def8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 800def8:	4298      	cmp	r0, r3
 800defa:	d200      	bcs.n	800defe <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 800defc:	b913      	cbnz	r3, 800df04 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 800defe:	440a      	add	r2, r1
 800df00:	b210      	sxth	r0, r2
 800df02:	4770      	bx	lr
 800df04:	ee07 0a90 	vmov	s15, r0
 800df08:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800df0c:	ee07 3a90 	vmov	s15, r3
 800df10:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800df14:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800df18:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800df1c:	ee37 7a66 	vsub.f32	s14, s14, s13
 800df20:	ee07 2a90 	vmov	s15, r2
 800df24:	ee67 5a07 	vmul.f32	s11, s14, s14
 800df28:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 800df2c:	eee5 6a87 	vfma.f32	s13, s11, s14
 800df30:	ee07 1a90 	vmov	s15, r1
 800df34:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800df38:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800df3c:	eee6 7a26 	vfma.f32	s15, s12, s13
 800df40:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800df44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800df48:	bfcc      	ite	gt
 800df4a:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 800df4e:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 800df52:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800df56:	ee17 3a90 	vmov	r3, s15
 800df5a:	b218      	sxth	r0, r3
 800df5c:	4770      	bx	lr

0800df5e <_ZN8touchgfx12TextProviderC1Ev>:
 800df5e:	b538      	push	{r3, r4, r5, lr}
 800df60:	2500      	movs	r5, #0
 800df62:	2302      	movs	r3, #2
 800df64:	4604      	mov	r4, r0
 800df66:	e9c0 5500 	strd	r5, r5, [r0]
 800df6a:	7403      	strb	r3, [r0, #16]
 800df6c:	6145      	str	r5, [r0, #20]
 800df6e:	7605      	strb	r5, [r0, #24]
 800df70:	83c5      	strh	r5, [r0, #30]
 800df72:	8405      	strh	r5, [r0, #32]
 800df74:	86c5      	strh	r5, [r0, #54]	@ 0x36
 800df76:	8705      	strh	r5, [r0, #56]	@ 0x38
 800df78:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 800df7a:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 800df7e:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 800df82:	220e      	movs	r2, #14
 800df84:	4629      	mov	r1, r5
 800df86:	304c      	adds	r0, #76	@ 0x4c
 800df88:	f00f fa31 	bl	801d3ee <memset>
 800df8c:	2301      	movs	r3, #1
 800df8e:	4620      	mov	r0, r4
 800df90:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 800df94:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800df98:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 800df9c:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 800dfa0:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 800dfa4:	f7f5 fa08 	bl	80033b8 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800dfa8:	4620      	mov	r0, r4
 800dfaa:	bd38      	pop	{r3, r4, r5, pc}

0800dfac <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800dfac:	b530      	push	{r4, r5, lr}
 800dfae:	2500      	movs	r5, #0
 800dfb0:	2401      	movs	r4, #1
 800dfb2:	6843      	ldr	r3, [r0, #4]
 800dfb4:	b913      	cbnz	r3, 800dfbc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800dfb6:	6803      	ldr	r3, [r0, #0]
 800dfb8:	b313      	cbz	r3, 800e000 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800dfba:	6043      	str	r3, [r0, #4]
 800dfbc:	7e03      	ldrb	r3, [r0, #24]
 800dfbe:	b143      	cbz	r3, 800dfd2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800dfc0:	6943      	ldr	r3, [r0, #20]
 800dfc2:	b12b      	cbz	r3, 800dfd0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800dfc4:	881a      	ldrh	r2, [r3, #0]
 800dfc6:	b11a      	cbz	r2, 800dfd0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800dfc8:	1c9a      	adds	r2, r3, #2
 800dfca:	6142      	str	r2, [r0, #20]
 800dfcc:	8818      	ldrh	r0, [r3, #0]
 800dfce:	bd30      	pop	{r4, r5, pc}
 800dfd0:	7605      	strb	r5, [r0, #24]
 800dfd2:	6843      	ldr	r3, [r0, #4]
 800dfd4:	8819      	ldrh	r1, [r3, #0]
 800dfd6:	b199      	cbz	r1, 800e000 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800dfd8:	1c9a      	adds	r2, r3, #2
 800dfda:	2902      	cmp	r1, #2
 800dfdc:	6042      	str	r2, [r0, #4]
 800dfde:	d1f5      	bne.n	800dfcc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800dfe0:	7c03      	ldrb	r3, [r0, #16]
 800dfe2:	2b01      	cmp	r3, #1
 800dfe4:	d8e5      	bhi.n	800dfb2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800dfe6:	1c5a      	adds	r2, r3, #1
 800dfe8:	3302      	adds	r3, #2
 800dfea:	7402      	strb	r2, [r0, #16]
 800dfec:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800dff0:	6143      	str	r3, [r0, #20]
 800dff2:	2b00      	cmp	r3, #0
 800dff4:	d0dd      	beq.n	800dfb2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800dff6:	881b      	ldrh	r3, [r3, #0]
 800dff8:	2b00      	cmp	r3, #0
 800dffa:	d0da      	beq.n	800dfb2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800dffc:	7604      	strb	r4, [r0, #24]
 800dffe:	e7d8      	b.n	800dfb2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e000:	2000      	movs	r0, #0
 800e002:	e7e4      	b.n	800dfce <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800e004 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 800e004:	b430      	push	{r4, r5}
 800e006:	6001      	str	r1, [r0, #0]
 800e008:	2100      	movs	r1, #0
 800e00a:	6041      	str	r1, [r0, #4]
 800e00c:	6815      	ldr	r5, [r2, #0]
 800e00e:	6085      	str	r5, [r0, #8]
 800e010:	6852      	ldr	r2, [r2, #4]
 800e012:	6443      	str	r3, [r0, #68]	@ 0x44
 800e014:	9b02      	ldr	r3, [sp, #8]
 800e016:	60c2      	str	r2, [r0, #12]
 800e018:	7401      	strb	r1, [r0, #16]
 800e01a:	6141      	str	r1, [r0, #20]
 800e01c:	7601      	strb	r1, [r0, #24]
 800e01e:	8701      	strh	r1, [r0, #56]	@ 0x38
 800e020:	8401      	strh	r1, [r0, #32]
 800e022:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 800e026:	6483      	str	r3, [r0, #72]	@ 0x48
 800e028:	bc30      	pop	{r4, r5}
 800e02a:	f7f5 b9c5 	b.w	80033b8 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800e02e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800e02e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e030:	4605      	mov	r5, r0
 800e032:	4608      	mov	r0, r1
 800e034:	b1e9      	cbz	r1, 800e072 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800e036:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 800e03a:	460b      	mov	r3, r1
 800e03c:	f101 0708 	add.w	r7, r1, #8
 800e040:	4622      	mov	r2, r4
 800e042:	6818      	ldr	r0, [r3, #0]
 800e044:	6859      	ldr	r1, [r3, #4]
 800e046:	4626      	mov	r6, r4
 800e048:	c603      	stmia	r6!, {r0, r1}
 800e04a:	3308      	adds	r3, #8
 800e04c:	42bb      	cmp	r3, r7
 800e04e:	4634      	mov	r4, r6
 800e050:	d1f7      	bne.n	800e042 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800e052:	6818      	ldr	r0, [r3, #0]
 800e054:	6030      	str	r0, [r6, #0]
 800e056:	889b      	ldrh	r3, [r3, #4]
 800e058:	80b3      	strh	r3, [r6, #4]
 800e05a:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 800e05e:	015b      	lsls	r3, r3, #5
 800e060:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800e064:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 800e068:	430b      	orrs	r3, r1
 800e06a:	425b      	negs	r3, r3
 800e06c:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 800e070:	4610      	mov	r0, r2
 800e072:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e074 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800e074:	b538      	push	{r3, r4, r5, lr}
 800e076:	460c      	mov	r4, r1
 800e078:	6811      	ldr	r1, [r2, #0]
 800e07a:	4610      	mov	r0, r2
 800e07c:	68cd      	ldr	r5, [r1, #12]
 800e07e:	4619      	mov	r1, r3
 800e080:	47a8      	blx	r5
 800e082:	2800      	cmp	r0, #0
 800e084:	bf08      	it	eq
 800e086:	4620      	moveq	r0, r4
 800e088:	bd38      	pop	{r3, r4, r5, pc}
	...

0800e08c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800e08c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e08e:	4604      	mov	r4, r0
 800e090:	4615      	mov	r5, r2
 800e092:	4608      	mov	r0, r1
 800e094:	b93a      	cbnz	r2, 800e0a6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800e096:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 800e09a:	f8a4 205c 	strh.w	r2, [r4, #92]	@ 0x5c
 800e09e:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
 800e0a2:	4628      	mov	r0, r5
 800e0a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e0a6:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800e0aa:	8893      	ldrh	r3, [r2, #4]
 800e0ac:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800e0b0:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 800e0b4:	79ee      	ldrb	r6, [r5, #7]
 800e0b6:	f46f 6763 	mvn.w	r7, #3632	@ 0xe30
 800e0ba:	4316      	orrs	r6, r2
 800e0bc:	19da      	adds	r2, r3, r7
 800e0be:	b291      	uxth	r1, r2
 800e0c0:	291d      	cmp	r1, #29
 800e0c2:	b2b7      	uxth	r7, r6
 800e0c4:	d87a      	bhi.n	800e1bc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 800e0c6:	2201      	movs	r2, #1
 800e0c8:	408a      	lsls	r2, r1
 800e0ca:	4975      	ldr	r1, [pc, #468]	@ (800e2a0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 800e0cc:	420a      	tst	r2, r1
 800e0ce:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800e0d2:	d12d      	bne.n	800e130 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 800e0d4:	f412 7f60 	tst.w	r2, #896	@ 0x380
 800e0d8:	d070      	beq.n	800e1bc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 800e0da:	f104 024c 	add.w	r2, r4, #76	@ 0x4c
 800e0de:	462b      	mov	r3, r5
 800e0e0:	f105 0e08 	add.w	lr, r5, #8
 800e0e4:	4615      	mov	r5, r2
 800e0e6:	6818      	ldr	r0, [r3, #0]
 800e0e8:	6859      	ldr	r1, [r3, #4]
 800e0ea:	4694      	mov	ip, r2
 800e0ec:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800e0f0:	3308      	adds	r3, #8
 800e0f2:	4573      	cmp	r3, lr
 800e0f4:	4662      	mov	r2, ip
 800e0f6:	d1f6      	bne.n	800e0e6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 800e0f8:	6818      	ldr	r0, [r3, #0]
 800e0fa:	f8cc 0000 	str.w	r0, [ip]
 800e0fe:	889b      	ldrh	r3, [r3, #4]
 800e100:	f8ac 3004 	strh.w	r3, [ip, #4]
 800e104:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
 800e108:	f894 0059 	ldrb.w	r0, [r4, #89]	@ 0x59
 800e10c:	b2b3      	uxth	r3, r6
 800e10e:	1aca      	subs	r2, r1, r3
 800e110:	b292      	uxth	r2, r2
 800e112:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
 800e116:	10d2      	asrs	r2, r2, #3
 800e118:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 800e11c:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 800e120:	4302      	orrs	r2, r0
 800e122:	1bcf      	subs	r7, r1, r7
 800e124:	f884 2059 	strb.w	r2, [r4, #89]	@ 0x59
 800e128:	1afb      	subs	r3, r7, r3
 800e12a:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 800e12e:	e7b8      	b.n	800e0a2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800e130:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800e132:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800e136:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 800e138:	f640 6333 	movw	r3, #3635	@ 0xe33
 800e13c:	4299      	cmp	r1, r3
 800e13e:	d110      	bne.n	800e162 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 800e140:	6803      	ldr	r3, [r0, #0]
 800e142:	68db      	ldr	r3, [r3, #12]
 800e144:	4798      	blx	r3
 800e146:	7b41      	ldrb	r1, [r0, #13]
 800e148:	00cb      	lsls	r3, r1, #3
 800e14a:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800e14e:	7a03      	ldrb	r3, [r0, #8]
 800e150:	0648      	lsls	r0, r1, #25
 800e152:	ea43 0302 	orr.w	r3, r3, r2
 800e156:	bf44      	itt	mi
 800e158:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800e15c:	b21b      	sxthmi	r3, r3
 800e15e:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800e162:	f8b4 305a 	ldrh.w	r3, [r4, #90]	@ 0x5a
 800e166:	443b      	add	r3, r7
 800e168:	4433      	add	r3, r6
 800e16a:	b29b      	uxth	r3, r3
 800e16c:	f104 064c 	add.w	r6, r4, #76	@ 0x4c
 800e170:	462a      	mov	r2, r5
 800e172:	f105 0c08 	add.w	ip, r5, #8
 800e176:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800e17a:	4635      	mov	r5, r6
 800e17c:	6810      	ldr	r0, [r2, #0]
 800e17e:	6851      	ldr	r1, [r2, #4]
 800e180:	4637      	mov	r7, r6
 800e182:	c703      	stmia	r7!, {r0, r1}
 800e184:	3208      	adds	r2, #8
 800e186:	4562      	cmp	r2, ip
 800e188:	463e      	mov	r6, r7
 800e18a:	d1f7      	bne.n	800e17c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 800e18c:	6810      	ldr	r0, [r2, #0]
 800e18e:	6038      	str	r0, [r7, #0]
 800e190:	8892      	ldrh	r2, [r2, #4]
 800e192:	80ba      	strh	r2, [r7, #4]
 800e194:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 800e198:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800e19c:	10db      	asrs	r3, r3, #3
 800e19e:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800e1a2:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800e1a6:	4313      	orrs	r3, r2
 800e1a8:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 800e1ac:	f894 205e 	ldrb.w	r2, [r4, #94]	@ 0x5e
 800e1b0:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
 800e1b4:	1a9b      	subs	r3, r3, r2
 800e1b6:	f884 3055 	strb.w	r3, [r4, #85]	@ 0x55
 800e1ba:	e772      	b.n	800e0a2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800e1bc:	f023 0204 	bic.w	r2, r3, #4
 800e1c0:	f640 611b 	movw	r1, #3611	@ 0xe1b
 800e1c4:	428a      	cmp	r2, r1
 800e1c6:	d003      	beq.n	800e1d0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 800e1c8:	f640 621d 	movw	r2, #3613	@ 0xe1d
 800e1cc:	4293      	cmp	r3, r2
 800e1ce:	d120      	bne.n	800e212 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 800e1d0:	3b01      	subs	r3, #1
 800e1d2:	4602      	mov	r2, r0
 800e1d4:	b29b      	uxth	r3, r3
 800e1d6:	4629      	mov	r1, r5
 800e1d8:	4620      	mov	r0, r4
 800e1da:	f7ff ff4b 	bl	800e074 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800e1de:	7b41      	ldrb	r1, [r0, #13]
 800e1e0:	00cb      	lsls	r3, r1, #3
 800e1e2:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800e1e6:	7a03      	ldrb	r3, [r0, #8]
 800e1e8:	0649      	lsls	r1, r1, #25
 800e1ea:	ea43 0302 	orr.w	r3, r3, r2
 800e1ee:	bf44      	itt	mi
 800e1f0:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800e1f4:	b21b      	sxthmi	r3, r3
 800e1f6:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800e1fa:	7b6b      	ldrb	r3, [r5, #13]
 800e1fc:	7aaa      	ldrb	r2, [r5, #10]
 800e1fe:	005b      	lsls	r3, r3, #1
 800e200:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800e204:	4313      	orrs	r3, r2
 800e206:	115a      	asrs	r2, r3, #5
 800e208:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800e20c:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 800e210:	e036      	b.n	800e280 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 800e212:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800e216:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 800e21a:	7a2a      	ldrb	r2, [r5, #8]
 800e21c:	f01c 0f40 	tst.w	ip, #64	@ 0x40
 800e220:	ea42 0201 	orr.w	r2, r2, r1
 800e224:	bf1c      	itt	ne
 800e226:	f5a2 7200 	subne.w	r2, r2, #512	@ 0x200
 800e22a:	b212      	sxthne	r2, r2
 800e22c:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 800e230:	f640 6109 	movw	r1, #3593	@ 0xe09
 800e234:	f023 0210 	bic.w	r2, r3, #16
 800e238:	428a      	cmp	r2, r1
 800e23a:	d003      	beq.n	800e244 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 800e23c:	f640 6213 	movw	r2, #3603	@ 0xe13
 800e240:	4293      	cmp	r3, r2
 800e242:	d12a      	bne.n	800e29a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 800e244:	7b6e      	ldrb	r6, [r5, #13]
 800e246:	0076      	lsls	r6, r6, #1
 800e248:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 800e24c:	7aae      	ldrb	r6, [r5, #10]
 800e24e:	4316      	orrs	r6, r2
 800e250:	f640 6213 	movw	r2, #3603	@ 0xe13
 800e254:	4293      	cmp	r3, r2
 800e256:	bf18      	it	ne
 800e258:	f103 33ff 	addne.w	r3, r3, #4294967295
 800e25c:	4602      	mov	r2, r0
 800e25e:	bf14      	ite	ne
 800e260:	b29b      	uxthne	r3, r3
 800e262:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 800e266:	4629      	mov	r1, r5
 800e268:	4620      	mov	r0, r4
 800e26a:	f7ff ff03 	bl	800e074 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800e26e:	7b43      	ldrb	r3, [r0, #13]
 800e270:	7a82      	ldrb	r2, [r0, #10]
 800e272:	005b      	lsls	r3, r3, #1
 800e274:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800e278:	4313      	orrs	r3, r2
 800e27a:	1af6      	subs	r6, r6, r3
 800e27c:	f8a4 605e 	strh.w	r6, [r4, #94]	@ 0x5e
 800e280:	7b69      	ldrb	r1, [r5, #13]
 800e282:	00cb      	lsls	r3, r1, #3
 800e284:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800e288:	7a2b      	ldrb	r3, [r5, #8]
 800e28a:	4313      	orrs	r3, r2
 800e28c:	064a      	lsls	r2, r1, #25
 800e28e:	bf44      	itt	mi
 800e290:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800e294:	b21b      	sxthmi	r3, r3
 800e296:	1bdb      	subs	r3, r3, r7
 800e298:	e747      	b.n	800e12a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 800e29a:	2300      	movs	r3, #0
 800e29c:	e7b6      	b.n	800e20c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 800e29e:	bf00      	nop
 800e2a0:	3fc00079 	.word	0x3fc00079

0800e2a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800e2a4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e2a8:	4604      	mov	r4, r0
 800e2aa:	b942      	cbnz	r2, 800e2be <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800e2ac:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800e2b0:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 800e2b4:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 800e2b8:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 800e2bc:	e047      	b.n	800e34e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 800e2be:	7b51      	ldrb	r1, [r2, #13]
 800e2c0:	8893      	ldrh	r3, [r2, #4]
 800e2c2:	010d      	lsls	r5, r1, #4
 800e2c4:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 800e2c8:	79d5      	ldrb	r5, [r2, #7]
 800e2ca:	4305      	orrs	r5, r0
 800e2cc:	2d04      	cmp	r5, #4
 800e2ce:	bfcc      	ite	gt
 800e2d0:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 800e2d4:	f04f 0e01 	movle.w	lr, #1
 800e2d8:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 800e2dc:	f200 80ab 	bhi.w	800e436 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 800e2e0:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 800e2e4:	4283      	cmp	r3, r0
 800e2e6:	d216      	bcs.n	800e316 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800e2e8:	f240 605b 	movw	r0, #1627	@ 0x65b
 800e2ec:	4283      	cmp	r3, r0
 800e2ee:	d859      	bhi.n	800e3a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 800e2f0:	f240 6057 	movw	r0, #1623	@ 0x657
 800e2f4:	4283      	cmp	r3, r0
 800e2f6:	d20e      	bcs.n	800e316 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800e2f8:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 800e2fc:	d24a      	bcs.n	800e394 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 800e2fe:	f240 604e 	movw	r0, #1614	@ 0x64e
 800e302:	4283      	cmp	r3, r0
 800e304:	d207      	bcs.n	800e316 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800e306:	f240 601a 	movw	r0, #1562	@ 0x61a
 800e30a:	4283      	cmp	r3, r0
 800e30c:	d02a      	beq.n	800e364 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800e30e:	d821      	bhi.n	800e354 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 800e310:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 800e314:	d35b      	bcc.n	800e3ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800e316:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 800e31a:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800e31e:	f040 80d0 	bne.w	800e4c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 800e322:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 800e326:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800e32a:	f040 80ca 	bne.w	800e4c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 800e32e:	00cb      	lsls	r3, r1, #3
 800e330:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800e334:	7a13      	ldrb	r3, [r2, #8]
 800e336:	0649      	lsls	r1, r1, #25
 800e338:	ea43 0300 	orr.w	r3, r3, r0
 800e33c:	bf44      	itt	mi
 800e33e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800e342:	b21b      	sxthmi	r3, r3
 800e344:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800e348:	1b5d      	subs	r5, r3, r5
 800e34a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800e34e:	4610      	mov	r0, r2
 800e350:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e354:	f240 604b 	movw	r0, #1611	@ 0x64b
 800e358:	4283      	cmp	r3, r0
 800e35a:	d338      	bcc.n	800e3ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800e35c:	f240 604c 	movw	r0, #1612	@ 0x64c
 800e360:	4283      	cmp	r3, r0
 800e362:	d9d8      	bls.n	800e316 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800e364:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 800e368:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 800e36c:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800e370:	f040 80f2 	bne.w	800e558 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 800e374:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800e378:	f040 80ee 	bne.w	800e558 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 800e37c:	00cb      	lsls	r3, r1, #3
 800e37e:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800e382:	7a13      	ldrb	r3, [r2, #8]
 800e384:	064e      	lsls	r6, r1, #25
 800e386:	ea43 0300 	orr.w	r3, r3, r0
 800e38a:	bf44      	itt	mi
 800e38c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800e390:	b21b      	sxthmi	r3, r3
 800e392:	e7d9      	b.n	800e348 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 800e394:	f240 6054 	movw	r0, #1620	@ 0x654
 800e398:	4283      	cmp	r3, r0
 800e39a:	d8e3      	bhi.n	800e364 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800e39c:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 800e3a0:	d9e0      	bls.n	800e364 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800e3a2:	e7b8      	b.n	800e316 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800e3a4:	f240 6074 	movw	r0, #1652	@ 0x674
 800e3a8:	4283      	cmp	r3, r0
 800e3aa:	d0b4      	beq.n	800e316 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800e3ac:	d82d      	bhi.n	800e40a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 800e3ae:	f240 605e 	movw	r0, #1630	@ 0x65e
 800e3b2:	4283      	cmp	r3, r0
 800e3b4:	d804      	bhi.n	800e3c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 800e3b6:	f240 605d 	movw	r0, #1629	@ 0x65d
 800e3ba:	4283      	cmp	r3, r0
 800e3bc:	d3d2      	bcc.n	800e364 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800e3be:	e7aa      	b.n	800e316 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800e3c0:	f240 605f 	movw	r0, #1631	@ 0x65f
 800e3c4:	4283      	cmp	r3, r0
 800e3c6:	d0cd      	beq.n	800e364 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800e3c8:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 800e3cc:	d0a3      	beq.n	800e316 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800e3ce:	00cb      	lsls	r3, r1, #3
 800e3d0:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800e3d4:	7a13      	ldrb	r3, [r2, #8]
 800e3d6:	0649      	lsls	r1, r1, #25
 800e3d8:	ea43 0300 	orr.w	r3, r3, r0
 800e3dc:	bf44      	itt	mi
 800e3de:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800e3e2:	b21b      	sxthmi	r3, r3
 800e3e4:	1b5d      	subs	r5, r3, r5
 800e3e6:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800e3ea:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800e3ee:	7b53      	ldrb	r3, [r2, #13]
 800e3f0:	015b      	lsls	r3, r3, #5
 800e3f2:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800e3f6:	7993      	ldrb	r3, [r2, #6]
 800e3f8:	430b      	orrs	r3, r1
 800e3fa:	005b      	lsls	r3, r3, #1
 800e3fc:	2105      	movs	r1, #5
 800e3fe:	fb93 f3f1 	sdiv	r3, r3, r1
 800e402:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800e406:	440b      	add	r3, r1
 800e408:	e756      	b.n	800e2b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800e40a:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 800e40e:	4283      	cmp	r3, r0
 800e410:	d809      	bhi.n	800e426 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 800e412:	f240 60df 	movw	r0, #1759	@ 0x6df
 800e416:	4283      	cmp	r3, r0
 800e418:	f4bf af7d 	bcs.w	800e316 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800e41c:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 800e420:	2b05      	cmp	r3, #5
 800e422:	d8d4      	bhi.n	800e3ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800e424:	e777      	b.n	800e316 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800e426:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 800e42a:	4283      	cmp	r3, r0
 800e42c:	d09a      	beq.n	800e364 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800e42e:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 800e432:	4283      	cmp	r3, r0
 800e434:	e7ca      	b.n	800e3cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800e436:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 800e43a:	d22b      	bcs.n	800e494 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 800e43c:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 800e440:	4283      	cmp	r3, r0
 800e442:	d28f      	bcs.n	800e364 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800e444:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 800e448:	4283      	cmp	r3, r0
 800e44a:	d816      	bhi.n	800e47a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 800e44c:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 800e450:	4283      	cmp	r3, r0
 800e452:	f4bf af60 	bcs.w	800e316 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800e456:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 800e45a:	4283      	cmp	r3, r0
 800e45c:	d80a      	bhi.n	800e474 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 800e45e:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 800e462:	4283      	cmp	r3, r0
 800e464:	f4bf af57 	bcs.w	800e316 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800e468:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 800e46c:	4283      	cmp	r3, r0
 800e46e:	f43f af79 	beq.w	800e364 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800e472:	e7ac      	b.n	800e3ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800e474:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 800e478:	e7f8      	b.n	800e46c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 800e47a:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 800e47e:	4283      	cmp	r3, r0
 800e480:	d802      	bhi.n	800e488 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 800e482:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 800e486:	e798      	b.n	800e3ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 800e488:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 800e48c:	4283      	cmp	r3, r0
 800e48e:	f47f af42 	bne.w	800e316 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800e492:	e767      	b.n	800e364 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800e494:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 800e498:	4283      	cmp	r3, r0
 800e49a:	f43f af63 	beq.w	800e364 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800e49e:	d802      	bhi.n	800e4a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 800e4a0:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 800e4a4:	e7f2      	b.n	800e48c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 800e4a6:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 800e4aa:	4283      	cmp	r3, r0
 800e4ac:	d805      	bhi.n	800e4ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 800e4ae:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 800e4b2:	4283      	cmp	r3, r0
 800e4b4:	f4ff af2f 	bcc.w	800e316 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800e4b8:	e754      	b.n	800e364 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800e4ba:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 800e4be:	4283      	cmp	r3, r0
 800e4c0:	e7af      	b.n	800e422 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 800e4c2:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 800e4c6:	4617      	mov	r7, r2
 800e4c8:	f102 0808 	add.w	r8, r2, #8
 800e4cc:	4666      	mov	r6, ip
 800e4ce:	6838      	ldr	r0, [r7, #0]
 800e4d0:	6879      	ldr	r1, [r7, #4]
 800e4d2:	46e6      	mov	lr, ip
 800e4d4:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800e4d8:	3708      	adds	r7, #8
 800e4da:	4547      	cmp	r7, r8
 800e4dc:	46f4      	mov	ip, lr
 800e4de:	d1f6      	bne.n	800e4ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 800e4e0:	6838      	ldr	r0, [r7, #0]
 800e4e2:	f8ce 0000 	str.w	r0, [lr]
 800e4e6:	88b9      	ldrh	r1, [r7, #4]
 800e4e8:	f8ae 1004 	strh.w	r1, [lr, #4]
 800e4ec:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 800e4f0:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800e4f4:	d009      	beq.n	800e50a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 800e4f6:	7b51      	ldrb	r1, [r2, #13]
 800e4f8:	7992      	ldrb	r2, [r2, #6]
 800e4fa:	0149      	lsls	r1, r1, #5
 800e4fc:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 800e500:	4311      	orrs	r1, r2
 800e502:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800e506:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 800e50a:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800e50e:	b2ad      	uxth	r5, r5
 800e510:	d00d      	beq.n	800e52e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 800e512:	442b      	add	r3, r5
 800e514:	b29b      	uxth	r3, r3
 800e516:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 800e51a:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800e51e:	10db      	asrs	r3, r3, #3
 800e520:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800e524:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800e528:	4313      	orrs	r3, r2
 800e52a:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 800e52e:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 800e532:	00cb      	lsls	r3, r1, #3
 800e534:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800e538:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 800e53c:	064f      	lsls	r7, r1, #25
 800e53e:	ea43 0302 	orr.w	r3, r3, r2
 800e542:	bf44      	itt	mi
 800e544:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800e548:	b21b      	sxthmi	r3, r3
 800e54a:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800e54e:	1b5b      	subs	r3, r3, r5
 800e550:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 800e554:	4632      	mov	r2, r6
 800e556:	e6fa      	b.n	800e34e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 800e558:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 800e55c:	4617      	mov	r7, r2
 800e55e:	f102 0908 	add.w	r9, r2, #8
 800e562:	4666      	mov	r6, ip
 800e564:	6838      	ldr	r0, [r7, #0]
 800e566:	6879      	ldr	r1, [r7, #4]
 800e568:	46e0      	mov	r8, ip
 800e56a:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800e56e:	3708      	adds	r7, #8
 800e570:	454f      	cmp	r7, r9
 800e572:	46c4      	mov	ip, r8
 800e574:	d1f6      	bne.n	800e564 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 800e576:	6838      	ldr	r0, [r7, #0]
 800e578:	f8c8 0000 	str.w	r0, [r8]
 800e57c:	88b9      	ldrh	r1, [r7, #4]
 800e57e:	f8a8 1004 	strh.w	r1, [r8, #4]
 800e582:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 800e586:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800e58a:	d009      	beq.n	800e5a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 800e58c:	7b51      	ldrb	r1, [r2, #13]
 800e58e:	7992      	ldrb	r2, [r2, #6]
 800e590:	0149      	lsls	r1, r1, #5
 800e592:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 800e596:	4311      	orrs	r1, r2
 800e598:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800e59c:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 800e5a0:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800e5a4:	d00e      	beq.n	800e5c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 800e5a6:	eba3 030e 	sub.w	r3, r3, lr
 800e5aa:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 800e5ae:	b29b      	uxth	r3, r3
 800e5b0:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800e5b4:	10db      	asrs	r3, r3, #3
 800e5b6:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800e5ba:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800e5be:	4313      	orrs	r3, r2
 800e5c0:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 800e5c4:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 800e5c8:	00cb      	lsls	r3, r1, #3
 800e5ca:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800e5ce:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 800e5d2:	0648      	lsls	r0, r1, #25
 800e5d4:	ea43 0302 	orr.w	r3, r3, r2
 800e5d8:	bf44      	itt	mi
 800e5da:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800e5de:	b21b      	sxthmi	r3, r3
 800e5e0:	1b5d      	subs	r5, r3, r5
 800e5e2:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800e5e6:	e7b5      	b.n	800e554 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0800e5e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800e5e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e5ec:	461e      	mov	r6, r3
 800e5ee:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800e5f0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800e5f4:	4604      	mov	r4, r0
 800e5f6:	4617      	mov	r7, r2
 800e5f8:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 800e5fc:	f7f4 fe9a 	bl	8003334 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800e600:	4605      	mov	r5, r0
 800e602:	b918      	cbnz	r0, 800e60c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 800e604:	6030      	str	r0, [r6, #0]
 800e606:	4628      	mov	r0, r5
 800e608:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e60c:	683b      	ldr	r3, [r7, #0]
 800e60e:	4601      	mov	r1, r0
 800e610:	68db      	ldr	r3, [r3, #12]
 800e612:	4638      	mov	r0, r7
 800e614:	4798      	blx	r3
 800e616:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 800e61a:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800e61e:	4602      	mov	r2, r0
 800e620:	6030      	str	r0, [r6, #0]
 800e622:	d213      	bcs.n	800e64c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 800e624:	4643      	mov	r3, r8
 800e626:	4639      	mov	r1, r7
 800e628:	4620      	mov	r0, r4
 800e62a:	f7ff fe3b 	bl	800e2a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800e62e:	6030      	str	r0, [r6, #0]
 800e630:	6833      	ldr	r3, [r6, #0]
 800e632:	b143      	cbz	r3, 800e646 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 800e634:	7b5a      	ldrb	r2, [r3, #13]
 800e636:	7a9b      	ldrb	r3, [r3, #10]
 800e638:	0052      	lsls	r2, r2, #1
 800e63a:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 800e63e:	4313      	orrs	r3, r2
 800e640:	bf0c      	ite	eq
 800e642:	2301      	moveq	r3, #1
 800e644:	2300      	movne	r3, #0
 800e646:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 800e64a:	e7dc      	b.n	800e606 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 800e64c:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 800e650:	b29b      	uxth	r3, r3
 800e652:	2b7f      	cmp	r3, #127	@ 0x7f
 800e654:	d804      	bhi.n	800e660 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 800e656:	4639      	mov	r1, r7
 800e658:	4620      	mov	r0, r4
 800e65a:	f7ff fd17 	bl	800e08c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800e65e:	e7e6      	b.n	800e62e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 800e660:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 800e664:	2b00      	cmp	r3, #0
 800e666:	d0e3      	beq.n	800e630 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 800e668:	f640 1302 	movw	r3, #2306	@ 0x902
 800e66c:	429d      	cmp	r5, r3
 800e66e:	d1df      	bne.n	800e630 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 800e670:	4601      	mov	r1, r0
 800e672:	4620      	mov	r0, r4
 800e674:	f7ff fcdb 	bl	800e02e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800e678:	e7d9      	b.n	800e62e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0800e67a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800e67a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e67e:	461e      	mov	r6, r3
 800e680:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800e682:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800e686:	4604      	mov	r4, r0
 800e688:	4617      	mov	r7, r2
 800e68a:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 800e68e:	f7f4 fe51 	bl	8003334 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800e692:	4605      	mov	r5, r0
 800e694:	b918      	cbnz	r0, 800e69e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 800e696:	6030      	str	r0, [r6, #0]
 800e698:	4628      	mov	r0, r5
 800e69a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e69e:	683b      	ldr	r3, [r7, #0]
 800e6a0:	4601      	mov	r1, r0
 800e6a2:	f8d3 9008 	ldr.w	r9, [r3, #8]
 800e6a6:	4638      	mov	r0, r7
 800e6a8:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800e6ac:	47c8      	blx	r9
 800e6ae:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 800e6b2:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800e6b6:	4602      	mov	r2, r0
 800e6b8:	6030      	str	r0, [r6, #0]
 800e6ba:	d213      	bcs.n	800e6e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 800e6bc:	4643      	mov	r3, r8
 800e6be:	4639      	mov	r1, r7
 800e6c0:	4620      	mov	r0, r4
 800e6c2:	f7ff fdef 	bl	800e2a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800e6c6:	6030      	str	r0, [r6, #0]
 800e6c8:	6833      	ldr	r3, [r6, #0]
 800e6ca:	b143      	cbz	r3, 800e6de <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 800e6cc:	7b5a      	ldrb	r2, [r3, #13]
 800e6ce:	7a9b      	ldrb	r3, [r3, #10]
 800e6d0:	0052      	lsls	r2, r2, #1
 800e6d2:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 800e6d6:	4313      	orrs	r3, r2
 800e6d8:	bf0c      	ite	eq
 800e6da:	2301      	moveq	r3, #1
 800e6dc:	2300      	movne	r3, #0
 800e6de:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 800e6e2:	e7d9      	b.n	800e698 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 800e6e4:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 800e6e8:	b29b      	uxth	r3, r3
 800e6ea:	2b7f      	cmp	r3, #127	@ 0x7f
 800e6ec:	d804      	bhi.n	800e6f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 800e6ee:	4639      	mov	r1, r7
 800e6f0:	4620      	mov	r0, r4
 800e6f2:	f7ff fccb 	bl	800e08c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800e6f6:	e7e6      	b.n	800e6c6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 800e6f8:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 800e6fc:	2b00      	cmp	r3, #0
 800e6fe:	d0e3      	beq.n	800e6c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 800e700:	f640 1302 	movw	r3, #2306	@ 0x902
 800e704:	429d      	cmp	r5, r3
 800e706:	d1df      	bne.n	800e6c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 800e708:	4601      	mov	r1, r0
 800e70a:	4620      	mov	r0, r4
 800e70c:	f7ff fc8f 	bl	800e02e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800e710:	e7d9      	b.n	800e6c6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0800e712 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800e712:	b510      	push	{r4, lr}
 800e714:	4604      	mov	r4, r0
 800e716:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 800e71a:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800e71c:	b1f1      	cbz	r1, 800e75c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 800e71e:	2b0a      	cmp	r3, #10
 800e720:	d02f      	beq.n	800e782 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 800e722:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 800e724:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800e728:	3901      	subs	r1, #1
 800e72a:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 800e72c:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 800e730:	1c51      	adds	r1, r2, #1
 800e732:	b289      	uxth	r1, r1
 800e734:	2901      	cmp	r1, #1
 800e736:	bf84      	itt	hi
 800e738:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800e73c:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 800e73e:	f103 0201 	add.w	r2, r3, #1
 800e742:	8722      	strh	r2, [r4, #56]	@ 0x38
 800e744:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800e746:	bf98      	it	ls
 800e748:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 800e74a:	4413      	add	r3, r2
 800e74c:	b29b      	uxth	r3, r3
 800e74e:	2b09      	cmp	r3, #9
 800e750:	bf88      	it	hi
 800e752:	3b0a      	subhi	r3, #10
 800e754:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800e758:	8458      	strh	r0, [r3, #34]	@ 0x22
 800e75a:	e7dc      	b.n	800e716 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800e75c:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800e75e:	2b0a      	cmp	r3, #10
 800e760:	d00f      	beq.n	800e782 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 800e762:	4620      	mov	r0, r4
 800e764:	f7ff fc22 	bl	800dfac <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800e768:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800e76a:	1c5a      	adds	r2, r3, #1
 800e76c:	8722      	strh	r2, [r4, #56]	@ 0x38
 800e76e:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800e770:	4413      	add	r3, r2
 800e772:	b29b      	uxth	r3, r3
 800e774:	2b09      	cmp	r3, #9
 800e776:	bf88      	it	hi
 800e778:	3b0a      	subhi	r3, #10
 800e77a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800e77e:	8458      	strh	r0, [r3, #34]	@ 0x22
 800e780:	e7ec      	b.n	800e75c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 800e782:	bd10      	pop	{r4, pc}

0800e784 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800e784:	b538      	push	{r3, r4, r5, lr}
 800e786:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800e788:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 800e78c:	4604      	mov	r4, r0
 800e78e:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 800e790:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 800e792:	3a01      	subs	r2, #1
 800e794:	8702      	strh	r2, [r0, #56]	@ 0x38
 800e796:	1c5a      	adds	r2, r3, #1
 800e798:	b292      	uxth	r2, r2
 800e79a:	2a09      	cmp	r2, #9
 800e79c:	bf86      	itte	hi
 800e79e:	3b09      	subhi	r3, #9
 800e7a0:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 800e7a2:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 800e7a4:	f7ff ffb5 	bl	800e712 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800e7a8:	8c23      	ldrh	r3, [r4, #32]
 800e7aa:	2b01      	cmp	r3, #1
 800e7ac:	bf9c      	itt	ls
 800e7ae:	3301      	addls	r3, #1
 800e7b0:	8423      	strhls	r3, [r4, #32]
 800e7b2:	8be3      	ldrh	r3, [r4, #30]
 800e7b4:	b90b      	cbnz	r3, 800e7ba <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 800e7b6:	2302      	movs	r3, #2
 800e7b8:	83e3      	strh	r3, [r4, #30]
 800e7ba:	8be3      	ldrh	r3, [r4, #30]
 800e7bc:	3b01      	subs	r3, #1
 800e7be:	b29b      	uxth	r3, r3
 800e7c0:	83e3      	strh	r3, [r4, #30]
 800e7c2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800e7c6:	4628      	mov	r0, r5
 800e7c8:	8365      	strh	r5, [r4, #26]
 800e7ca:	bd38      	pop	{r3, r4, r5, pc}

0800e7cc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800e7cc:	428a      	cmp	r2, r1
 800e7ce:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e7d2:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 800e7d4:	d931      	bls.n	800e83a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 800e7d6:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 800e7d8:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 800e7dc:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 800e7e0:	19ee      	adds	r6, r5, r7
 800e7e2:	1a54      	subs	r4, r2, r1
 800e7e4:	3e01      	subs	r6, #1
 800e7e6:	fa1f fe84 	uxth.w	lr, r4
 800e7ea:	b2b4      	uxth	r4, r6
 800e7ec:	eba4 090e 	sub.w	r9, r4, lr
 800e7f0:	fa1f f989 	uxth.w	r9, r9
 800e7f4:	2c09      	cmp	r4, #9
 800e7f6:	4626      	mov	r6, r4
 800e7f8:	bf88      	it	hi
 800e7fa:	f1a4 060a 	subhi.w	r6, r4, #10
 800e7fe:	f1bc 0f00 	cmp.w	ip, #0
 800e802:	bf08      	it	eq
 800e804:	f04f 0c02 	moveq.w	ip, #2
 800e808:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 800e80c:	f10c 3cff 	add.w	ip, ip, #4294967295
 800e810:	fa1f fc8c 	uxth.w	ip, ip
 800e814:	3c01      	subs	r4, #1
 800e816:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 800e81a:	b2a4      	uxth	r4, r4
 800e81c:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 800e820:	454c      	cmp	r4, r9
 800e822:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 800e826:	d1e5      	bne.n	800e7f4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 800e828:	eba5 050e 	sub.w	r5, r5, lr
 800e82c:	eb0e 0408 	add.w	r4, lr, r8
 800e830:	8705      	strh	r5, [r0, #56]	@ 0x38
 800e832:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 800e836:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 800e83a:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 800e83c:	1a64      	subs	r4, r4, r1
 800e83e:	4439      	add	r1, r7
 800e840:	b289      	uxth	r1, r1
 800e842:	2909      	cmp	r1, #9
 800e844:	bf88      	it	hi
 800e846:	390a      	subhi	r1, #10
 800e848:	8704      	strh	r4, [r0, #56]	@ 0x38
 800e84a:	86c1      	strh	r1, [r0, #54]	@ 0x36
 800e84c:	250a      	movs	r5, #10
 800e84e:	b18a      	cbz	r2, 800e874 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 800e850:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 800e852:	3a01      	subs	r2, #1
 800e854:	b292      	uxth	r2, r2
 800e856:	3101      	adds	r1, #1
 800e858:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800e85c:	8701      	strh	r1, [r0, #56]	@ 0x38
 800e85e:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 800e860:	b901      	cbnz	r1, 800e864 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 800e862:	86c5      	strh	r5, [r0, #54]	@ 0x36
 800e864:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 800e866:	3901      	subs	r1, #1
 800e868:	b289      	uxth	r1, r1
 800e86a:	86c1      	strh	r1, [r0, #54]	@ 0x36
 800e86c:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800e870:	844c      	strh	r4, [r1, #34]	@ 0x22
 800e872:	e7ec      	b.n	800e84e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 800e874:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e878:	f7ff bf4b 	b.w	800e712 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800e87c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800e87c:	b570      	push	{r4, r5, r6, lr}
 800e87e:	2500      	movs	r5, #0
 800e880:	4295      	cmp	r5, r2
 800e882:	d011      	beq.n	800e8a8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 800e884:	8bc4      	ldrh	r4, [r0, #30]
 800e886:	f831 6b02 	ldrh.w	r6, [r1], #2
 800e88a:	4414      	add	r4, r2
 800e88c:	3c01      	subs	r4, #1
 800e88e:	1b64      	subs	r4, r4, r5
 800e890:	b2a4      	uxth	r4, r4
 800e892:	2c01      	cmp	r4, #1
 800e894:	bf88      	it	hi
 800e896:	3c02      	subhi	r4, #2
 800e898:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800e89c:	8b64      	ldrh	r4, [r4, #26]
 800e89e:	42b4      	cmp	r4, r6
 800e8a0:	d117      	bne.n	800e8d2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 800e8a2:	3501      	adds	r5, #1
 800e8a4:	b2ad      	uxth	r5, r5
 800e8a6:	e7eb      	b.n	800e880 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 800e8a8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800e8ac:	2400      	movs	r4, #0
 800e8ae:	4413      	add	r3, r2
 800e8b0:	b2a2      	uxth	r2, r4
 800e8b2:	429a      	cmp	r2, r3
 800e8b4:	da0f      	bge.n	800e8d6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 800e8b6:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 800e8b8:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800e8bc:	4432      	add	r2, r6
 800e8be:	b292      	uxth	r2, r2
 800e8c0:	2a09      	cmp	r2, #9
 800e8c2:	bf88      	it	hi
 800e8c4:	3a0a      	subhi	r2, #10
 800e8c6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800e8ca:	3401      	adds	r4, #1
 800e8cc:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 800e8ce:	42aa      	cmp	r2, r5
 800e8d0:	d0ee      	beq.n	800e8b0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 800e8d2:	2000      	movs	r0, #0
 800e8d4:	bd70      	pop	{r4, r5, r6, pc}
 800e8d6:	2001      	movs	r0, #1
 800e8d8:	e7fc      	b.n	800e8d4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0800e8da <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800e8da:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e8de:	4605      	mov	r5, r0
 800e8e0:	4616      	mov	r6, r2
 800e8e2:	1c8c      	adds	r4, r1, #2
 800e8e4:	8809      	ldrh	r1, [r1, #0]
 800e8e6:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800e8ea:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800e8ee:	42b3      	cmp	r3, r6
 800e8f0:	d124      	bne.n	800e93c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800e8f2:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800e8f6:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800e8fa:	f001 070f 	and.w	r7, r1, #15
 800e8fe:	f8cd 8000 	str.w	r8, [sp]
 800e902:	464b      	mov	r3, r9
 800e904:	4652      	mov	r2, sl
 800e906:	4621      	mov	r1, r4
 800e908:	4628      	mov	r0, r5
 800e90a:	f7ff ffb7 	bl	800e87c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800e90e:	4683      	mov	fp, r0
 800e910:	b168      	cbz	r0, 800e92e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800e912:	eb0a 0109 	add.w	r1, sl, r9
 800e916:	4441      	add	r1, r8
 800e918:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800e91c:	463a      	mov	r2, r7
 800e91e:	4649      	mov	r1, r9
 800e920:	4628      	mov	r0, r5
 800e922:	f7ff ff53 	bl	800e7cc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800e926:	4658      	mov	r0, fp
 800e928:	b003      	add	sp, #12
 800e92a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e92e:	eb07 010a 	add.w	r1, r7, sl
 800e932:	4449      	add	r1, r9
 800e934:	4441      	add	r1, r8
 800e936:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800e93a:	e7d2      	b.n	800e8e2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800e93c:	f04f 0b00 	mov.w	fp, #0
 800e940:	e7f1      	b.n	800e926 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800e942 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800e942:	b570      	push	{r4, r5, r6, lr}
 800e944:	8810      	ldrh	r0, [r2, #0]
 800e946:	4298      	cmp	r0, r3
 800e948:	d817      	bhi.n	800e97a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800e94a:	1e48      	subs	r0, r1, #1
 800e94c:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800e950:	4298      	cmp	r0, r3
 800e952:	d312      	bcc.n	800e97a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800e954:	2400      	movs	r4, #0
 800e956:	428c      	cmp	r4, r1
 800e958:	d20f      	bcs.n	800e97a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800e95a:	1860      	adds	r0, r4, r1
 800e95c:	1040      	asrs	r0, r0, #1
 800e95e:	0085      	lsls	r5, r0, #2
 800e960:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800e964:	42b3      	cmp	r3, r6
 800e966:	d902      	bls.n	800e96e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800e968:	3001      	adds	r0, #1
 800e96a:	b284      	uxth	r4, r0
 800e96c:	e7f3      	b.n	800e956 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800e96e:	d201      	bcs.n	800e974 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800e970:	b281      	uxth	r1, r0
 800e972:	e7f0      	b.n	800e956 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800e974:	442a      	add	r2, r5
 800e976:	8850      	ldrh	r0, [r2, #2]
 800e978:	bd70      	pop	{r4, r5, r6, pc}
 800e97a:	2000      	movs	r0, #0
 800e97c:	e7fc      	b.n	800e978 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800e97e <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800e97e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e982:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 800e984:	886f      	ldrh	r7, [r5, #2]
 800e986:	4604      	mov	r4, r0
 800e988:	087f      	lsrs	r7, r7, #1
 800e98a:	260b      	movs	r6, #11
 800e98c:	3e01      	subs	r6, #1
 800e98e:	d013      	beq.n	800e9b8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 800e990:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800e992:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800e996:	462a      	mov	r2, r5
 800e998:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 800e99c:	4639      	mov	r1, r7
 800e99e:	4643      	mov	r3, r8
 800e9a0:	4620      	mov	r0, r4
 800e9a2:	f7ff ffce 	bl	800e942 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800e9a6:	b138      	cbz	r0, 800e9b8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 800e9a8:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800e9ac:	4642      	mov	r2, r8
 800e9ae:	4620      	mov	r0, r4
 800e9b0:	f7ff ff93 	bl	800e8da <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800e9b4:	2800      	cmp	r0, #0
 800e9b6:	d1e9      	bne.n	800e98c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800e9b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e9bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 800e9bc:	b570      	push	{r4, r5, r6, lr}
 800e9be:	694a      	ldr	r2, [r1, #20]
 800e9c0:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800e9c2:	684b      	ldr	r3, [r1, #4]
 800e9c4:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 800e9c6:	1b54      	subs	r4, r2, r5
 800e9c8:	f000 8106 	beq.w	800ebd8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 800e9cc:	1b9b      	subs	r3, r3, r6
 800e9ce:	d003      	beq.n	800e9d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800e9d0:	4363      	muls	r3, r4
 800e9d2:	2210      	movs	r2, #16
 800e9d4:	fb93 f3f2 	sdiv	r3, r3, r2
 800e9d8:	680c      	ldr	r4, [r1, #0]
 800e9da:	698a      	ldr	r2, [r1, #24]
 800e9dc:	1b65      	subs	r5, r4, r5
 800e9de:	f000 80fd 	beq.w	800ebdc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 800e9e2:	1b92      	subs	r2, r2, r6
 800e9e4:	d003      	beq.n	800e9ee <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800e9e6:	436a      	muls	r2, r5
 800e9e8:	2410      	movs	r4, #16
 800e9ea:	fb92 f2f4 	sdiv	r2, r2, r4
 800e9ee:	1a9b      	subs	r3, r3, r2
 800e9f0:	ee07 3a90 	vmov	s15, r3
 800e9f4:	ed9f 4a88 	vldr	s8, [pc, #544]	@ 800ec18 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 800e9f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e9fc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800ea00:	ee67 7a84 	vmul.f32	s15, s15, s8
 800ea04:	460a      	mov	r2, r1
 800ea06:	ee87 3a27 	vdiv.f32	s6, s14, s15
 800ea0a:	4603      	mov	r3, r0
 800ea0c:	f100 040c 	add.w	r4, r0, #12
 800ea10:	eeb1 6a43 	vneg.f32	s12, s6
 800ea14:	edd2 7a02 	vldr	s15, [r2, #8]
 800ea18:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800ea1c:	3214      	adds	r2, #20
 800ea1e:	ece3 6a01 	vstmia	r3!, {s13}
 800ea22:	ed52 7a02 	vldr	s15, [r2, #-8]
 800ea26:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800ea2a:	429c      	cmp	r4, r3
 800ea2c:	edc3 7a02 	vstr	s15, [r3, #8]
 800ea30:	ed52 7a01 	vldr	s15, [r2, #-4]
 800ea34:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800ea38:	edc3 7a05 	vstr	s15, [r3, #20]
 800ea3c:	d1ea      	bne.n	800ea14 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 800ea3e:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800ea40:	698b      	ldr	r3, [r1, #24]
 800ea42:	edd0 4a02 	vldr	s9, [r0, #8]
 800ea46:	edd0 3a00 	vldr	s7, [r0]
 800ea4a:	edd0 6a01 	vldr	s13, [r0, #4]
 800ea4e:	ed90 5a05 	vldr	s10, [r0, #20]
 800ea52:	ed90 2a03 	vldr	s4, [r0, #12]
 800ea56:	edd0 5a04 	vldr	s11, [r0, #16]
 800ea5a:	ed90 1a07 	vldr	s2, [r0, #28]
 800ea5e:	edd0 2a06 	vldr	s5, [r0, #24]
 800ea62:	1a9b      	subs	r3, r3, r2
 800ea64:	ee07 3a90 	vmov	s15, r3
 800ea68:	684b      	ldr	r3, [r1, #4]
 800ea6a:	1a9b      	subs	r3, r3, r2
 800ea6c:	ee07 3a10 	vmov	s14, r3
 800ea70:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ea74:	ee76 6ae4 	vsub.f32	s13, s13, s9
 800ea78:	ee67 7a84 	vmul.f32	s15, s15, s8
 800ea7c:	ee73 4ae4 	vsub.f32	s9, s7, s9
 800ea80:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ea84:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 800ea88:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ea8c:	ee75 5ac5 	vsub.f32	s11, s11, s10
 800ea90:	eee6 7a87 	vfma.f32	s15, s13, s14
 800ea94:	ee32 5a45 	vsub.f32	s10, s4, s10
 800ea98:	ee67 7a83 	vmul.f32	s15, s15, s6
 800ea9c:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 800eaa0:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 800eaa2:	694a      	ldr	r2, [r1, #20]
 800eaa4:	1b13      	subs	r3, r2, r4
 800eaa6:	ee07 3a10 	vmov	s14, r3
 800eaaa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800eaae:	680b      	ldr	r3, [r1, #0]
 800eab0:	ee27 7a04 	vmul.f32	s14, s14, s8
 800eab4:	1b1b      	subs	r3, r3, r4
 800eab6:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 800eaba:	ee07 3a10 	vmov	s14, r3
 800eabe:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800eac2:	ee27 7a04 	vmul.f32	s14, s14, s8
 800eac6:	eee6 4a87 	vfma.f32	s9, s13, s14
 800eaca:	ee64 4a86 	vmul.f32	s9, s9, s12
 800eace:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 800ead2:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800ead4:	698b      	ldr	r3, [r1, #24]
 800ead6:	1a9b      	subs	r3, r3, r2
 800ead8:	ee06 3a90 	vmov	s13, r3
 800eadc:	684b      	ldr	r3, [r1, #4]
 800eade:	1a9b      	subs	r3, r3, r2
 800eae0:	ee07 3a10 	vmov	s14, r3
 800eae4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800eae8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800eaec:	ee66 6a84 	vmul.f32	s13, s13, s8
 800eaf0:	ee27 7a04 	vmul.f32	s14, s14, s8
 800eaf4:	ee65 6a66 	vnmul.f32	s13, s10, s13
 800eaf8:	eee5 6a87 	vfma.f32	s13, s11, s14
 800eafc:	ee66 6a83 	vmul.f32	s13, s13, s6
 800eb00:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 800eb04:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 800eb06:	694a      	ldr	r2, [r1, #20]
 800eb08:	1b13      	subs	r3, r2, r4
 800eb0a:	ee07 3a10 	vmov	s14, r3
 800eb0e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800eb12:	680b      	ldr	r3, [r1, #0]
 800eb14:	ee27 7a04 	vmul.f32	s14, s14, s8
 800eb18:	1b1b      	subs	r3, r3, r4
 800eb1a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 800eb1e:	ee07 3a10 	vmov	s14, r3
 800eb22:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800eb26:	ee27 7a04 	vmul.f32	s14, s14, s8
 800eb2a:	eea5 5a87 	vfma.f32	s10, s11, s14
 800eb2e:	edd0 5a08 	vldr	s11, [r0, #32]
 800eb32:	ee25 5a06 	vmul.f32	s10, s10, s12
 800eb36:	ee31 1a65 	vsub.f32	s2, s2, s11
 800eb3a:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 800eb3e:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800eb40:	698b      	ldr	r3, [r1, #24]
 800eb42:	1a9b      	subs	r3, r3, r2
 800eb44:	ee07 3a10 	vmov	s14, r3
 800eb48:	684b      	ldr	r3, [r1, #4]
 800eb4a:	1a9b      	subs	r3, r3, r2
 800eb4c:	ee01 3a90 	vmov	s3, r3
 800eb50:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800eb54:	ee72 5ae5 	vsub.f32	s11, s5, s11
 800eb58:	ee27 7a04 	vmul.f32	s14, s14, s8
 800eb5c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 800eb60:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 800eb64:	ee61 1a84 	vmul.f32	s3, s3, s8
 800eb68:	eea1 7a21 	vfma.f32	s14, s2, s3
 800eb6c:	ee27 7a03 	vmul.f32	s14, s14, s6
 800eb70:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 800eb74:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 800eb76:	694a      	ldr	r2, [r1, #20]
 800eb78:	1b13      	subs	r3, r2, r4
 800eb7a:	ee03 3a10 	vmov	s6, r3
 800eb7e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800eb82:	680b      	ldr	r3, [r1, #0]
 800eb84:	ee23 3a04 	vmul.f32	s6, s6, s8
 800eb88:	1b1b      	subs	r3, r3, r4
 800eb8a:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 800eb8e:	ee03 3a10 	vmov	s6, r3
 800eb92:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800eb96:	ee23 4a04 	vmul.f32	s8, s6, s8
 800eb9a:	eee1 5a04 	vfma.f32	s11, s2, s8
 800eb9e:	ee25 6a86 	vmul.f32	s12, s11, s12
 800eba2:	ee62 5a67 	vnmul.f32	s11, s4, s15
 800eba6:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 800ebaa:	eee3 5aa6 	vfma.f32	s11, s7, s13
 800ebae:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 800ebb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ebb6:	dd13      	ble.n	800ebe0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 800ebb8:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800ebbc:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 800ebc0:	63c3      	str	r3, [r0, #60]	@ 0x3c
 800ebc2:	eee3 7a87 	vfma.f32	s15, s7, s14
 800ebc6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800ebca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ebce:	dd15      	ble.n	800ebfc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 800ebd0:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800ebd4:	6403      	str	r3, [r0, #64]	@ 0x40
 800ebd6:	bd70      	pop	{r4, r5, r6, pc}
 800ebd8:	4623      	mov	r3, r4
 800ebda:	e6fd      	b.n	800e9d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800ebdc:	462a      	mov	r2, r5
 800ebde:	e706      	b.n	800e9ee <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800ebe0:	d502      	bpl.n	800ebe8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 800ebe2:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 800ebe6:	e7e9      	b.n	800ebbc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 800ebe8:	ee22 2a64 	vnmul.f32	s4, s4, s9
 800ebec:	eea3 2a85 	vfma.f32	s4, s7, s10
 800ebf0:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 800ebf4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ebf8:	dade      	bge.n	800ebb8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 800ebfa:	e7f2      	b.n	800ebe2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 800ebfc:	d502      	bpl.n	800ec04 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 800ebfe:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 800ec02:	e7e7      	b.n	800ebd4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 800ec04:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 800ec08:	eee3 4a86 	vfma.f32	s9, s7, s12
 800ec0c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 800ec10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ec14:	dadc      	bge.n	800ebd0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 800ec16:	e7f2      	b.n	800ebfe <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 800ec18:	3d800000 	.word	0x3d800000

0800ec1c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 800ec1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ec20:	2714      	movs	r7, #20
 800ec22:	435f      	muls	r7, r3
 800ec24:	eb02 0c07 	add.w	ip, r2, r7
 800ec28:	f8dc 5004 	ldr.w	r5, [ip, #4]
 800ec2c:	f115 0e0f 	adds.w	lr, r5, #15
 800ec30:	f100 80a2 	bmi.w	800ed78 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 800ec34:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 800ec38:	9c08      	ldr	r4, [sp, #32]
 800ec3a:	f8c0 e014 	str.w	lr, [r0, #20]
 800ec3e:	2614      	movs	r6, #20
 800ec40:	4366      	muls	r6, r4
 800ec42:	eb02 0806 	add.w	r8, r2, r6
 800ec46:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800ec4a:	f115 040f 	adds.w	r4, r5, #15
 800ec4e:	f100 809f 	bmi.w	800ed90 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 800ec52:	1124      	asrs	r4, r4, #4
 800ec54:	eba4 040e 	sub.w	r4, r4, lr
 800ec58:	6184      	str	r4, [r0, #24]
 800ec5a:	2c00      	cmp	r4, #0
 800ec5c:	f000 808a 	beq.w	800ed74 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 800ec60:	f8dc 9004 	ldr.w	r9, [ip, #4]
 800ec64:	f8d8 4004 	ldr.w	r4, [r8, #4]
 800ec68:	5995      	ldr	r5, [r2, r6]
 800ec6a:	eba4 0809 	sub.w	r8, r4, r9
 800ec6e:	59d4      	ldr	r4, [r2, r7]
 800ec70:	eba5 0a04 	sub.w	sl, r5, r4
 800ec74:	ea4f 150a 	mov.w	r5, sl, lsl #4
 800ec78:	fb0e fe05 	mul.w	lr, lr, r5
 800ec7c:	fb0a ee19 	mls	lr, sl, r9, lr
 800ec80:	fb08 e404 	mla	r4, r8, r4, lr
 800ec84:	ea4f 1608 	mov.w	r6, r8, lsl #4
 800ec88:	3c01      	subs	r4, #1
 800ec8a:	19a4      	adds	r4, r4, r6
 800ec8c:	f100 808c 	bmi.w	800eda8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 800ec90:	fb94 fef6 	sdiv	lr, r4, r6
 800ec94:	f8c0 e000 	str.w	lr, [r0]
 800ec98:	fb06 441e 	mls	r4, r6, lr, r4
 800ec9c:	6104      	str	r4, [r0, #16]
 800ec9e:	2d00      	cmp	r5, #0
 800eca0:	f2c0 8095 	blt.w	800edce <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 800eca4:	fb95 f4f6 	sdiv	r4, r5, r6
 800eca8:	6044      	str	r4, [r0, #4]
 800ecaa:	fb06 5514 	mls	r5, r6, r4, r5
 800ecae:	6085      	str	r5, [r0, #8]
 800ecb0:	60c6      	str	r6, [r0, #12]
 800ecb2:	f8dc 4004 	ldr.w	r4, [ip, #4]
 800ecb6:	6945      	ldr	r5, [r0, #20]
 800ecb8:	59d2      	ldr	r2, [r2, r7]
 800ecba:	eddf 6a4d 	vldr	s13, [pc, #308]	@ 800edf0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 800ecbe:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 800ecc2:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 800ecc6:	ee07 4a10 	vmov	s14, r4
 800ecca:	6804      	ldr	r4, [r0, #0]
 800eccc:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 800ecd0:	ee07 2a90 	vmov	s15, r2
 800ecd4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ecd8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ecdc:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 800ece0:	ee27 7a26 	vmul.f32	s14, s14, s13
 800ece4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800ece8:	edd3 6a00 	vldr	s13, [r3]
 800ecec:	eee6 6a07 	vfma.f32	s13, s12, s14
 800ecf0:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 800ecf4:	eee6 6a27 	vfma.f32	s13, s12, s15
 800ecf8:	edc0 6a07 	vstr	s13, [r0, #28]
 800ecfc:	edd0 6a01 	vldr	s13, [r0, #4]
 800ed00:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 800ed04:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 800ed08:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800ed0c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800ed10:	ed80 6a08 	vstr	s12, [r0, #32]
 800ed14:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 800ed16:	6242      	str	r2, [r0, #36]	@ 0x24
 800ed18:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 800ed1c:	ed93 6a03 	vldr	s12, [r3, #12]
 800ed20:	eea5 6a87 	vfma.f32	s12, s11, s14
 800ed24:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 800ed28:	eea5 6aa7 	vfma.f32	s12, s11, s15
 800ed2c:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 800ed30:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 800ed34:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 800ed38:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800ed3c:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 800ed40:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800ed42:	6302      	str	r2, [r0, #48]	@ 0x30
 800ed44:	ed93 6a06 	vldr	s12, [r3, #24]
 800ed48:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 800ed4c:	eea5 6a87 	vfma.f32	s12, s11, s14
 800ed50:	eeb0 7a46 	vmov.f32	s14, s12
 800ed54:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 800ed58:	eea6 7a27 	vfma.f32	s14, s12, s15
 800ed5c:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 800ed60:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 800ed64:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 800ed68:	eee6 7a87 	vfma.f32	s15, s13, s14
 800ed6c:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 800ed70:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 800ed72:	63c3      	str	r3, [r0, #60]	@ 0x3c
 800ed74:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ed78:	f1c5 0501 	rsb	r5, r5, #1
 800ed7c:	f015 050f 	ands.w	r5, r5, #15
 800ed80:	bf18      	it	ne
 800ed82:	2501      	movne	r5, #1
 800ed84:	2410      	movs	r4, #16
 800ed86:	fb9e fef4 	sdiv	lr, lr, r4
 800ed8a:	ebae 0e05 	sub.w	lr, lr, r5
 800ed8e:	e753      	b.n	800ec38 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 800ed90:	f1c5 0501 	rsb	r5, r5, #1
 800ed94:	f015 050f 	ands.w	r5, r5, #15
 800ed98:	bf18      	it	ne
 800ed9a:	2501      	movne	r5, #1
 800ed9c:	f04f 0910 	mov.w	r9, #16
 800eda0:	fb94 f4f9 	sdiv	r4, r4, r9
 800eda4:	1b64      	subs	r4, r4, r5
 800eda6:	e755      	b.n	800ec54 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 800eda8:	4264      	negs	r4, r4
 800edaa:	fb94 fef6 	sdiv	lr, r4, r6
 800edae:	f1ce 0800 	rsb	r8, lr, #0
 800edb2:	fb06 441e 	mls	r4, r6, lr, r4
 800edb6:	f8c0 8000 	str.w	r8, [r0]
 800edba:	6104      	str	r4, [r0, #16]
 800edbc:	2c00      	cmp	r4, #0
 800edbe:	f43f af6e 	beq.w	800ec9e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 800edc2:	ea6f 0e0e 	mvn.w	lr, lr
 800edc6:	f8c0 e000 	str.w	lr, [r0]
 800edca:	1b34      	subs	r4, r6, r4
 800edcc:	e766      	b.n	800ec9c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 800edce:	426d      	negs	r5, r5
 800edd0:	fb95 f4f6 	sdiv	r4, r5, r6
 800edd4:	f1c4 0e00 	rsb	lr, r4, #0
 800edd8:	fb06 5514 	mls	r5, r6, r4, r5
 800eddc:	f8c0 e004 	str.w	lr, [r0, #4]
 800ede0:	6085      	str	r5, [r0, #8]
 800ede2:	2d00      	cmp	r5, #0
 800ede4:	f43f af64 	beq.w	800ecb0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 800ede8:	43e4      	mvns	r4, r4
 800edea:	6044      	str	r4, [r0, #4]
 800edec:	1b75      	subs	r5, r6, r5
 800edee:	e75e      	b.n	800ecae <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 800edf0:	3d800000 	.word	0x3d800000

0800edf4 <_ZN8touchgfx7Unicode6strlenEPKt>:
 800edf4:	4602      	mov	r2, r0
 800edf6:	b148      	cbz	r0, 800ee0c <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 800edf8:	2300      	movs	r3, #0
 800edfa:	b298      	uxth	r0, r3
 800edfc:	3301      	adds	r3, #1
 800edfe:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800ee02:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 800ee06:	2900      	cmp	r1, #0
 800ee08:	d1f7      	bne.n	800edfa <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 800ee0a:	4770      	bx	lr
 800ee0c:	4770      	bx	lr

0800ee0e <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 800ee0e:	b530      	push	{r4, r5, lr}
 800ee10:	4604      	mov	r4, r0
 800ee12:	b159      	cbz	r1, 800ee2c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 800ee14:	b148      	cbz	r0, 800ee2a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 800ee16:	2300      	movs	r3, #0
 800ee18:	b298      	uxth	r0, r3
 800ee1a:	4282      	cmp	r2, r0
 800ee1c:	d905      	bls.n	800ee2a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 800ee1e:	5ccd      	ldrb	r5, [r1, r3]
 800ee20:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 800ee24:	3301      	adds	r3, #1
 800ee26:	2d00      	cmp	r5, #0
 800ee28:	d1f6      	bne.n	800ee18 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 800ee2a:	bd30      	pop	{r4, r5, pc}
 800ee2c:	4608      	mov	r0, r1
 800ee2e:	e7fc      	b.n	800ee2a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0800ee30 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 800ee30:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ee32:	b08b      	sub	sp, #44	@ 0x2c
 800ee34:	468c      	mov	ip, r1
 800ee36:	2100      	movs	r1, #0
 800ee38:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 800ee3c:	4604      	mov	r4, r0
 800ee3e:	261f      	movs	r6, #31
 800ee40:	af01      	add	r7, sp, #4
 800ee42:	fb94 fef3 	sdiv	lr, r4, r3
 800ee46:	fb03 441e 	mls	r4, r3, lr, r4
 800ee4a:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 800ee4e:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 800ee52:	b2ec      	uxtb	r4, r5
 800ee54:	2d09      	cmp	r5, #9
 800ee56:	bfd4      	ite	le
 800ee58:	3430      	addle	r4, #48	@ 0x30
 800ee5a:	3457      	addgt	r4, #87	@ 0x57
 800ee5c:	b2e4      	uxtb	r4, r4
 800ee5e:	55bc      	strb	r4, [r7, r6]
 800ee60:	4674      	mov	r4, lr
 800ee62:	1e71      	subs	r1, r6, #1
 800ee64:	b974      	cbnz	r4, 800ee84 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 800ee66:	2800      	cmp	r0, #0
 800ee68:	da05      	bge.n	800ee76 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 800ee6a:	ab0a      	add	r3, sp, #40	@ 0x28
 800ee6c:	4419      	add	r1, r3
 800ee6e:	232d      	movs	r3, #45	@ 0x2d
 800ee70:	f801 3c24 	strb.w	r3, [r1, #-36]
 800ee74:	1eb1      	subs	r1, r6, #2
 800ee76:	3101      	adds	r1, #1
 800ee78:	4439      	add	r1, r7
 800ee7a:	4660      	mov	r0, ip
 800ee7c:	f7ff ffc7 	bl	800ee0e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800ee80:	b00b      	add	sp, #44	@ 0x2c
 800ee82:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ee84:	460e      	mov	r6, r1
 800ee86:	e7dc      	b.n	800ee42 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

0800ee88 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 800ee88:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ee8a:	b08b      	sub	sp, #44	@ 0x2c
 800ee8c:	468c      	mov	ip, r1
 800ee8e:	2100      	movs	r1, #0
 800ee90:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 800ee94:	ae01      	add	r6, sp, #4
 800ee96:	211f      	movs	r1, #31
 800ee98:	fbb0 f7f3 	udiv	r7, r0, r3
 800ee9c:	fb03 0517 	mls	r5, r3, r7, r0
 800eea0:	b2ec      	uxtb	r4, r5
 800eea2:	2d09      	cmp	r5, #9
 800eea4:	bfd4      	ite	le
 800eea6:	3430      	addle	r4, #48	@ 0x30
 800eea8:	3457      	addgt	r4, #87	@ 0x57
 800eeaa:	b2e4      	uxtb	r4, r4
 800eeac:	558c      	strb	r4, [r1, r6]
 800eeae:	4638      	mov	r0, r7
 800eeb0:	1e4c      	subs	r4, r1, #1
 800eeb2:	b92f      	cbnz	r7, 800eec0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 800eeb4:	4431      	add	r1, r6
 800eeb6:	4660      	mov	r0, ip
 800eeb8:	f7ff ffa9 	bl	800ee0e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800eebc:	b00b      	add	sp, #44	@ 0x2c
 800eebe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800eec0:	4621      	mov	r1, r4
 800eec2:	e7e9      	b.n	800ee98 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

0800eec4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 800eec4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eec8:	4691      	mov	r9, r2
 800eeca:	b085      	sub	sp, #20
 800eecc:	6802      	ldr	r2, [r0, #0]
 800eece:	9201      	str	r2, [sp, #4]
 800eed0:	4688      	mov	r8, r1
 800eed2:	4683      	mov	fp, r0
 800eed4:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
 800eed8:	9103      	str	r1, [sp, #12]
 800eeda:	4610      	mov	r0, r2
 800eedc:	461c      	mov	r4, r3
 800eede:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
 800eee2:	9302      	str	r3, [sp, #8]
 800eee4:	f7ff ff86 	bl	800edf4 <_ZN8touchgfx7Unicode6strlenEPKt>
 800eee8:	f1b8 0f00 	cmp.w	r8, #0
 800eeec:	bf0c      	ite	eq
 800eeee:	4684      	moveq	ip, r0
 800eef0:	f100 0c01 	addne.w	ip, r0, #1
 800eef4:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
 800eef8:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 800eefc:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 800eefe:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 800ef00:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 800ef04:	9903      	ldr	r1, [sp, #12]
 800ef06:	fa1f fc8c 	uxth.w	ip, ip
 800ef0a:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800ef0e:	d041      	beq.n	800ef94 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 800ef10:	d834      	bhi.n	800ef7c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 800ef12:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
 800ef16:	d059      	beq.n	800efcc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 800ef18:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
 800ef1c:	d03a      	beq.n	800ef94 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 800ef1e:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
 800ef22:	d034      	beq.n	800ef8e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 800ef24:	2400      	movs	r4, #0
 800ef26:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 800ef2a:	3a01      	subs	r2, #1
 800ef2c:	b169      	cbz	r1, 800ef4a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800ef2e:	9911      	ldr	r1, [sp, #68]	@ 0x44
 800ef30:	458c      	cmp	ip, r1
 800ef32:	da09      	bge.n	800ef48 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 800ef34:	eba1 010c 	sub.w	r1, r1, ip
 800ef38:	b289      	uxth	r1, r1
 800ef3a:	b933      	cbnz	r3, 800ef4a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800ef3c:	2e00      	cmp	r6, #0
 800ef3e:	d051      	beq.n	800efe4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 800ef40:	2800      	cmp	r0, #0
 800ef42:	d04f      	beq.n	800efe4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 800ef44:	440c      	add	r4, r1
 800ef46:	b2a4      	uxth	r4, r4
 800ef48:	2100      	movs	r1, #0
 800ef4a:	682b      	ldr	r3, [r5, #0]
 800ef4c:	4293      	cmp	r3, r2
 800ef4e:	da07      	bge.n	800ef60 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 800ef50:	f1b8 0f00 	cmp.w	r8, #0
 800ef54:	d004      	beq.n	800ef60 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 800ef56:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 800ef5a:	682b      	ldr	r3, [r5, #0]
 800ef5c:	3301      	adds	r3, #1
 800ef5e:	602b      	str	r3, [r5, #0]
 800ef60:	2730      	movs	r7, #48	@ 0x30
 800ef62:	2c00      	cmp	r4, #0
 800ef64:	d04e      	beq.n	800f004 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800ef66:	682e      	ldr	r6, [r5, #0]
 800ef68:	3c01      	subs	r4, #1
 800ef6a:	42b2      	cmp	r2, r6
 800ef6c:	b2a4      	uxth	r4, r4
 800ef6e:	dd49      	ble.n	800f004 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800ef70:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 800ef74:	682b      	ldr	r3, [r5, #0]
 800ef76:	3301      	adds	r3, #1
 800ef78:	602b      	str	r3, [r5, #0]
 800ef7a:	e7f2      	b.n	800ef62 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 800ef7c:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
 800ef80:	d01d      	beq.n	800efbe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 800ef82:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
 800ef86:	d002      	beq.n	800ef8e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 800ef88:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
 800ef8c:	e7c9      	b.n	800ef22 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 800ef8e:	4684      	mov	ip, r0
 800ef90:	f04f 0800 	mov.w	r8, #0
 800ef94:	2c00      	cmp	r4, #0
 800ef96:	d0c6      	beq.n	800ef26 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800ef98:	b947      	cbnz	r7, 800efac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 800ef9a:	2801      	cmp	r0, #1
 800ef9c:	d106      	bne.n	800efac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 800ef9e:	8814      	ldrh	r4, [r2, #0]
 800efa0:	2c30      	cmp	r4, #48	@ 0x30
 800efa2:	bf02      	ittt	eq
 800efa4:	3202      	addeq	r2, #2
 800efa6:	f8cb 2000 	streq.w	r2, [fp]
 800efaa:	4638      	moveq	r0, r7
 800efac:	45bc      	cmp	ip, r7
 800efae:	da14      	bge.n	800efda <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 800efb0:	b2bf      	uxth	r7, r7
 800efb2:	eba7 040c 	sub.w	r4, r7, ip
 800efb6:	b2a4      	uxth	r4, r4
 800efb8:	46bc      	mov	ip, r7
 800efba:	2600      	movs	r6, #0
 800efbc:	e7b3      	b.n	800ef26 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800efbe:	4684      	mov	ip, r0
 800efc0:	b16c      	cbz	r4, 800efde <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 800efc2:	42b8      	cmp	r0, r7
 800efc4:	dd00      	ble.n	800efc8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 800efc6:	b2b8      	uxth	r0, r7
 800efc8:	2400      	movs	r4, #0
 800efca:	e003      	b.n	800efd4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 800efcc:	f04f 0c01 	mov.w	ip, #1
 800efd0:	2400      	movs	r4, #0
 800efd2:	4660      	mov	r0, ip
 800efd4:	4626      	mov	r6, r4
 800efd6:	46a0      	mov	r8, r4
 800efd8:	e7a5      	b.n	800ef26 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800efda:	2400      	movs	r4, #0
 800efdc:	e7ed      	b.n	800efba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 800efde:	4626      	mov	r6, r4
 800efe0:	46a0      	mov	r8, r4
 800efe2:	e7a0      	b.n	800ef26 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800efe4:	2900      	cmp	r1, #0
 800efe6:	d0b0      	beq.n	800ef4a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800efe8:	2720      	movs	r7, #32
 800efea:	682e      	ldr	r6, [r5, #0]
 800efec:	2900      	cmp	r1, #0
 800efee:	d0ac      	beq.n	800ef4a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800eff0:	3901      	subs	r1, #1
 800eff2:	4296      	cmp	r6, r2
 800eff4:	b289      	uxth	r1, r1
 800eff6:	daa7      	bge.n	800ef48 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 800eff8:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 800effc:	682b      	ldr	r3, [r5, #0]
 800effe:	3301      	adds	r3, #1
 800f000:	602b      	str	r3, [r5, #0]
 800f002:	e7f2      	b.n	800efea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 800f004:	b188      	cbz	r0, 800f02a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 800f006:	682b      	ldr	r3, [r5, #0]
 800f008:	3801      	subs	r0, #1
 800f00a:	429a      	cmp	r2, r3
 800f00c:	b280      	uxth	r0, r0
 800f00e:	dd0c      	ble.n	800f02a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 800f010:	f8db 3000 	ldr.w	r3, [fp]
 800f014:	1c9c      	adds	r4, r3, #2
 800f016:	f8cb 4000 	str.w	r4, [fp]
 800f01a:	881c      	ldrh	r4, [r3, #0]
 800f01c:	682b      	ldr	r3, [r5, #0]
 800f01e:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 800f022:	682b      	ldr	r3, [r5, #0]
 800f024:	3301      	adds	r3, #1
 800f026:	602b      	str	r3, [r5, #0]
 800f028:	e7ec      	b.n	800f004 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800f02a:	2620      	movs	r6, #32
 800f02c:	b151      	cbz	r1, 800f044 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 800f02e:	6828      	ldr	r0, [r5, #0]
 800f030:	3901      	subs	r1, #1
 800f032:	4282      	cmp	r2, r0
 800f034:	b289      	uxth	r1, r1
 800f036:	dd05      	ble.n	800f044 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 800f038:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 800f03c:	682b      	ldr	r3, [r5, #0]
 800f03e:	3301      	adds	r3, #1
 800f040:	602b      	str	r3, [r5, #0]
 800f042:	e7f3      	b.n	800f02c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 800f044:	b005      	add	sp, #20
 800f046:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f04a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 800f04a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f04e:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 800f052:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
 800f056:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
 800f05a:	2400      	movs	r4, #0
 800f05c:	8014      	strh	r4, [r2, #0]
 800f05e:	701c      	strb	r4, [r3, #0]
 800f060:	f888 4000 	strb.w	r4, [r8]
 800f064:	f88c 4000 	strb.w	r4, [ip]
 800f068:	f88e 4000 	strb.w	r4, [lr]
 800f06c:	703c      	strb	r4, [r7, #0]
 800f06e:	6804      	ldr	r4, [r0, #0]
 800f070:	b1a4      	cbz	r4, 800f09c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 800f072:	8824      	ldrh	r4, [r4, #0]
 800f074:	f04f 0901 	mov.w	r9, #1
 800f078:	b314      	cbz	r4, 800f0c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800f07a:	2c2b      	cmp	r4, #43	@ 0x2b
 800f07c:	d001      	beq.n	800f082 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 800f07e:	2c20      	cmp	r4, #32
 800f080:	d110      	bne.n	800f0a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 800f082:	8014      	strh	r4, [r2, #0]
 800f084:	6804      	ldr	r4, [r0, #0]
 800f086:	b10c      	cbz	r4, 800f08c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 800f088:	3402      	adds	r4, #2
 800f08a:	6004      	str	r4, [r0, #0]
 800f08c:	680c      	ldr	r4, [r1, #0]
 800f08e:	b10c      	cbz	r4, 800f094 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 800f090:	3401      	adds	r4, #1
 800f092:	600c      	str	r4, [r1, #0]
 800f094:	6804      	ldr	r4, [r0, #0]
 800f096:	b17c      	cbz	r4, 800f0b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 800f098:	8824      	ldrh	r4, [r4, #0]
 800f09a:	e7ed      	b.n	800f078 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 800f09c:	680c      	ldr	r4, [r1, #0]
 800f09e:	b17c      	cbz	r4, 800f0c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800f0a0:	7824      	ldrb	r4, [r4, #0]
 800f0a2:	e7e7      	b.n	800f074 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 800f0a4:	2c2d      	cmp	r4, #45	@ 0x2d
 800f0a6:	d102      	bne.n	800f0ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 800f0a8:	f883 9000 	strb.w	r9, [r3]
 800f0ac:	e7ea      	b.n	800f084 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 800f0ae:	2c23      	cmp	r4, #35	@ 0x23
 800f0b0:	d107      	bne.n	800f0c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 800f0b2:	f888 9000 	strb.w	r9, [r8]
 800f0b6:	e7e5      	b.n	800f084 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 800f0b8:	680c      	ldr	r4, [r1, #0]
 800f0ba:	b10c      	cbz	r4, 800f0c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800f0bc:	7824      	ldrb	r4, [r4, #0]
 800f0be:	e7db      	b.n	800f078 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 800f0c0:	2400      	movs	r4, #0
 800f0c2:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 800f0c6:	2b09      	cmp	r3, #9
 800f0c8:	d901      	bls.n	800f0ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 800f0ca:	2c2a      	cmp	r4, #42	@ 0x2a
 800f0cc:	d122      	bne.n	800f114 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800f0ce:	2301      	movs	r3, #1
 800f0d0:	2c30      	cmp	r4, #48	@ 0x30
 800f0d2:	f88e 3000 	strb.w	r3, [lr]
 800f0d6:	d10d      	bne.n	800f0f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 800f0d8:	f88c 3000 	strb.w	r3, [ip]
 800f0dc:	6803      	ldr	r3, [r0, #0]
 800f0de:	b10b      	cbz	r3, 800f0e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 800f0e0:	3302      	adds	r3, #2
 800f0e2:	6003      	str	r3, [r0, #0]
 800f0e4:	680b      	ldr	r3, [r1, #0]
 800f0e6:	b10b      	cbz	r3, 800f0ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 800f0e8:	3301      	adds	r3, #1
 800f0ea:	600b      	str	r3, [r1, #0]
 800f0ec:	6803      	ldr	r3, [r0, #0]
 800f0ee:	2b00      	cmp	r3, #0
 800f0f0:	d02f      	beq.n	800f152 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 800f0f2:	881c      	ldrh	r4, [r3, #0]
 800f0f4:	2c2a      	cmp	r4, #42	@ 0x2a
 800f0f6:	d135      	bne.n	800f164 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 800f0f8:	f04f 33ff 	mov.w	r3, #4294967295
 800f0fc:	6033      	str	r3, [r6, #0]
 800f0fe:	6803      	ldr	r3, [r0, #0]
 800f100:	b10b      	cbz	r3, 800f106 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 800f102:	3302      	adds	r3, #2
 800f104:	6003      	str	r3, [r0, #0]
 800f106:	680b      	ldr	r3, [r1, #0]
 800f108:	b10b      	cbz	r3, 800f10e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 800f10a:	3301      	adds	r3, #1
 800f10c:	600b      	str	r3, [r1, #0]
 800f10e:	6803      	ldr	r3, [r0, #0]
 800f110:	b31b      	cbz	r3, 800f15a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 800f112:	881c      	ldrh	r4, [r3, #0]
 800f114:	2c2e      	cmp	r4, #46	@ 0x2e
 800f116:	d11a      	bne.n	800f14e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800f118:	2301      	movs	r3, #1
 800f11a:	703b      	strb	r3, [r7, #0]
 800f11c:	6803      	ldr	r3, [r0, #0]
 800f11e:	b10b      	cbz	r3, 800f124 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 800f120:	3302      	adds	r3, #2
 800f122:	6003      	str	r3, [r0, #0]
 800f124:	680b      	ldr	r3, [r1, #0]
 800f126:	b10b      	cbz	r3, 800f12c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 800f128:	3301      	adds	r3, #1
 800f12a:	600b      	str	r3, [r1, #0]
 800f12c:	6803      	ldr	r3, [r0, #0]
 800f12e:	2b00      	cmp	r3, #0
 800f130:	d036      	beq.n	800f1a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 800f132:	881b      	ldrh	r3, [r3, #0]
 800f134:	2b2a      	cmp	r3, #42	@ 0x2a
 800f136:	d137      	bne.n	800f1a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 800f138:	f04f 33ff 	mov.w	r3, #4294967295
 800f13c:	602b      	str	r3, [r5, #0]
 800f13e:	6803      	ldr	r3, [r0, #0]
 800f140:	b10b      	cbz	r3, 800f146 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 800f142:	3302      	adds	r3, #2
 800f144:	6003      	str	r3, [r0, #0]
 800f146:	680b      	ldr	r3, [r1, #0]
 800f148:	b10b      	cbz	r3, 800f14e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800f14a:	3301      	adds	r3, #1
 800f14c:	600b      	str	r3, [r1, #0]
 800f14e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f152:	680c      	ldr	r4, [r1, #0]
 800f154:	b134      	cbz	r4, 800f164 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 800f156:	7824      	ldrb	r4, [r4, #0]
 800f158:	e7cc      	b.n	800f0f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 800f15a:	680b      	ldr	r3, [r1, #0]
 800f15c:	2b00      	cmp	r3, #0
 800f15e:	d0f6      	beq.n	800f14e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800f160:	781c      	ldrb	r4, [r3, #0]
 800f162:	e7d7      	b.n	800f114 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800f164:	2300      	movs	r3, #0
 800f166:	6033      	str	r3, [r6, #0]
 800f168:	220a      	movs	r2, #10
 800f16a:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 800f16e:	fa1f f38c 	uxth.w	r3, ip
 800f172:	2b09      	cmp	r3, #9
 800f174:	d8ce      	bhi.n	800f114 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800f176:	6833      	ldr	r3, [r6, #0]
 800f178:	fb02 c303 	mla	r3, r2, r3, ip
 800f17c:	6033      	str	r3, [r6, #0]
 800f17e:	6803      	ldr	r3, [r0, #0]
 800f180:	b10b      	cbz	r3, 800f186 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 800f182:	3302      	adds	r3, #2
 800f184:	6003      	str	r3, [r0, #0]
 800f186:	680b      	ldr	r3, [r1, #0]
 800f188:	b10b      	cbz	r3, 800f18e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 800f18a:	3301      	adds	r3, #1
 800f18c:	600b      	str	r3, [r1, #0]
 800f18e:	6803      	ldr	r3, [r0, #0]
 800f190:	b10b      	cbz	r3, 800f196 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 800f192:	881c      	ldrh	r4, [r3, #0]
 800f194:	e7e9      	b.n	800f16a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800f196:	680c      	ldr	r4, [r1, #0]
 800f198:	2c00      	cmp	r4, #0
 800f19a:	d0e6      	beq.n	800f16a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800f19c:	7824      	ldrb	r4, [r4, #0]
 800f19e:	e7e4      	b.n	800f16a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800f1a0:	680b      	ldr	r3, [r1, #0]
 800f1a2:	b10b      	cbz	r3, 800f1a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 800f1a4:	781b      	ldrb	r3, [r3, #0]
 800f1a6:	e7c5      	b.n	800f134 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 800f1a8:	2200      	movs	r2, #0
 800f1aa:	602a      	str	r2, [r5, #0]
 800f1ac:	240a      	movs	r4, #10
 800f1ae:	3b30      	subs	r3, #48	@ 0x30
 800f1b0:	b29e      	uxth	r6, r3
 800f1b2:	2e09      	cmp	r6, #9
 800f1b4:	682a      	ldr	r2, [r5, #0]
 800f1b6:	d813      	bhi.n	800f1e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 800f1b8:	fb04 3302 	mla	r3, r4, r2, r3
 800f1bc:	602b      	str	r3, [r5, #0]
 800f1be:	6803      	ldr	r3, [r0, #0]
 800f1c0:	b10b      	cbz	r3, 800f1c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 800f1c2:	3302      	adds	r3, #2
 800f1c4:	6003      	str	r3, [r0, #0]
 800f1c6:	680b      	ldr	r3, [r1, #0]
 800f1c8:	b10b      	cbz	r3, 800f1ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 800f1ca:	3301      	adds	r3, #1
 800f1cc:	600b      	str	r3, [r1, #0]
 800f1ce:	6803      	ldr	r3, [r0, #0]
 800f1d0:	b10b      	cbz	r3, 800f1d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 800f1d2:	881b      	ldrh	r3, [r3, #0]
 800f1d4:	e7eb      	b.n	800f1ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800f1d6:	680b      	ldr	r3, [r1, #0]
 800f1d8:	2b00      	cmp	r3, #0
 800f1da:	d0e8      	beq.n	800f1ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800f1dc:	781b      	ldrb	r3, [r3, #0]
 800f1de:	e7e6      	b.n	800f1ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800f1e0:	2a06      	cmp	r2, #6
 800f1e2:	bfa8      	it	ge
 800f1e4:	2206      	movge	r2, #6
 800f1e6:	602a      	str	r2, [r5, #0]
 800f1e8:	e7b1      	b.n	800f14e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0800f1ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 800f1ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f1ee:	b0a3      	sub	sp, #140	@ 0x8c
 800f1f0:	2600      	movs	r6, #0
 800f1f2:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
 800f1f6:	4607      	mov	r7, r0
 800f1f8:	4688      	mov	r8, r1
 800f1fa:	e9cd 3208 	strd	r3, r2, [sp, #32]
 800f1fe:	4631      	mov	r1, r6
 800f200:	2242      	movs	r2, #66	@ 0x42
 800f202:	4648      	mov	r0, r9
 800f204:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
 800f206:	960d      	str	r6, [sp, #52]	@ 0x34
 800f208:	f00e f8f1 	bl	801d3ee <memset>
 800f20c:	b15f      	cbz	r7, 800f226 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 800f20e:	f108 3aff 	add.w	sl, r8, #4294967295
 800f212:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800f214:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800f216:	b152      	cbz	r2, 800f22e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 800f218:	8812      	ldrh	r2, [r2, #0]
 800f21a:	b10a      	cbz	r2, 800f220 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 800f21c:	459a      	cmp	sl, r3
 800f21e:	dc2e      	bgt.n	800f27e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 800f220:	2200      	movs	r2, #0
 800f222:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 800f226:	4638      	mov	r0, r7
 800f228:	b023      	add	sp, #140	@ 0x8c
 800f22a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f22e:	9a08      	ldr	r2, [sp, #32]
 800f230:	2a00      	cmp	r2, #0
 800f232:	d0f5      	beq.n	800f220 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 800f234:	7812      	ldrb	r2, [r2, #0]
 800f236:	e7f0      	b.n	800f21a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 800f238:	2d00      	cmp	r5, #0
 800f23a:	d0ea      	beq.n	800f212 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f23c:	782a      	ldrb	r2, [r5, #0]
 800f23e:	b142      	cbz	r2, 800f252 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 800f240:	2a25      	cmp	r2, #37	@ 0x25
 800f242:	d001      	beq.n	800f248 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 800f244:	459a      	cmp	sl, r3
 800f246:	dc08      	bgt.n	800f25a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 800f248:	f1bb 0f00 	cmp.w	fp, #0
 800f24c:	d121      	bne.n	800f292 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 800f24e:	2d00      	cmp	r5, #0
 800f250:	d0df      	beq.n	800f212 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f252:	782a      	ldrb	r2, [r5, #0]
 800f254:	f04f 0b00 	mov.w	fp, #0
 800f258:	e01d      	b.n	800f296 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 800f25a:	f1bb 0f00 	cmp.w	fp, #0
 800f25e:	d078      	beq.n	800f352 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 800f260:	f8bb 2000 	ldrh.w	r2, [fp]
 800f264:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 800f268:	f1bb 0f00 	cmp.w	fp, #0
 800f26c:	d002      	beq.n	800f274 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 800f26e:	f10b 0202 	add.w	r2, fp, #2
 800f272:	9209      	str	r2, [sp, #36]	@ 0x24
 800f274:	b10d      	cbz	r5, 800f27a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 800f276:	3501      	adds	r5, #1
 800f278:	9508      	str	r5, [sp, #32]
 800f27a:	3301      	adds	r3, #1
 800f27c:	930d      	str	r3, [sp, #52]	@ 0x34
 800f27e:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 800f282:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800f284:	f1bb 0f00 	cmp.w	fp, #0
 800f288:	d0d6      	beq.n	800f238 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 800f28a:	f8bb 2000 	ldrh.w	r2, [fp]
 800f28e:	2a00      	cmp	r2, #0
 800f290:	d1d6      	bne.n	800f240 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 800f292:	f8bb 2000 	ldrh.w	r2, [fp]
 800f296:	2a00      	cmp	r2, #0
 800f298:	d0bb      	beq.n	800f212 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f29a:	459a      	cmp	sl, r3
 800f29c:	ddb9      	ble.n	800f212 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f29e:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
 800f2a2:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
 800f2a6:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
 800f2aa:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
 800f2ae:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
 800f2b2:	960e      	str	r6, [sp, #56]	@ 0x38
 800f2b4:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
 800f2b8:	960f      	str	r6, [sp, #60]	@ 0x3c
 800f2ba:	f1bb 0f00 	cmp.w	fp, #0
 800f2be:	d002      	beq.n	800f2c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 800f2c0:	f10b 0302 	add.w	r3, fp, #2
 800f2c4:	9309      	str	r3, [sp, #36]	@ 0x24
 800f2c6:	b10d      	cbz	r5, 800f2cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 800f2c8:	1c6b      	adds	r3, r5, #1
 800f2ca:	9308      	str	r3, [sp, #32]
 800f2cc:	ab0f      	add	r3, sp, #60	@ 0x3c
 800f2ce:	9305      	str	r3, [sp, #20]
 800f2d0:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 800f2d4:	9304      	str	r3, [sp, #16]
 800f2d6:	ab0e      	add	r3, sp, #56	@ 0x38
 800f2d8:	9303      	str	r3, [sp, #12]
 800f2da:	ab0c      	add	r3, sp, #48	@ 0x30
 800f2dc:	9302      	str	r3, [sp, #8]
 800f2de:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 800f2e2:	9301      	str	r3, [sp, #4]
 800f2e4:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 800f2e8:	9300      	str	r3, [sp, #0]
 800f2ea:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 800f2ee:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 800f2f2:	a908      	add	r1, sp, #32
 800f2f4:	a809      	add	r0, sp, #36	@ 0x24
 800f2f6:	f7ff fea8 	bl	800f04a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 800f2fa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800f2fc:	2b00      	cmp	r3, #0
 800f2fe:	bfbe      	ittt	lt
 800f300:	6823      	ldrlt	r3, [r4, #0]
 800f302:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 800f306:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800f308:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800f30a:	bfb8      	it	lt
 800f30c:	3404      	addlt	r4, #4
 800f30e:	2b00      	cmp	r3, #0
 800f310:	bfb8      	it	lt
 800f312:	6823      	ldrlt	r3, [r4, #0]
 800f314:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 800f318:	bfbe      	ittt	lt
 800f31a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 800f31e:	930f      	strlt	r3, [sp, #60]	@ 0x3c
 800f320:	3404      	addlt	r4, #4
 800f322:	b1d9      	cbz	r1, 800f35c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 800f324:	880b      	ldrh	r3, [r1, #0]
 800f326:	2b69      	cmp	r3, #105	@ 0x69
 800f328:	d01f      	beq.n	800f36a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f32a:	d82f      	bhi.n	800f38c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 800f32c:	2b58      	cmp	r3, #88	@ 0x58
 800f32e:	d01c      	beq.n	800f36a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f330:	d818      	bhi.n	800f364 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 800f332:	2b25      	cmp	r3, #37	@ 0x25
 800f334:	d034      	beq.n	800f3a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 800f336:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 800f33a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800f33c:	f1bb 0f00 	cmp.w	fp, #0
 800f340:	f000 80b8 	beq.w	800f4b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 800f344:	f8bb 5000 	ldrh.w	r5, [fp]
 800f348:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 800f34c:	3301      	adds	r3, #1
 800f34e:	930d      	str	r3, [sp, #52]	@ 0x34
 800f350:	e029      	b.n	800f3a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 800f352:	b10d      	cbz	r5, 800f358 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 800f354:	782a      	ldrb	r2, [r5, #0]
 800f356:	e785      	b.n	800f264 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 800f358:	462a      	mov	r2, r5
 800f35a:	e783      	b.n	800f264 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 800f35c:	2a00      	cmp	r2, #0
 800f35e:	d0ea      	beq.n	800f336 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800f360:	7813      	ldrb	r3, [r2, #0]
 800f362:	e7e0      	b.n	800f326 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 800f364:	3b63      	subs	r3, #99	@ 0x63
 800f366:	2b01      	cmp	r3, #1
 800f368:	d8e5      	bhi.n	800f336 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800f36a:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
 800f36e:	b329      	cbz	r1, 800f3bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 800f370:	880b      	ldrh	r3, [r1, #0]
 800f372:	2b69      	cmp	r3, #105	@ 0x69
 800f374:	d063      	beq.n	800f43e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 800f376:	d825      	bhi.n	800f3c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 800f378:	2b63      	cmp	r3, #99	@ 0x63
 800f37a:	d038      	beq.n	800f3ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 800f37c:	2b64      	cmp	r3, #100	@ 0x64
 800f37e:	d05e      	beq.n	800f43e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 800f380:	2b58      	cmp	r3, #88	@ 0x58
 800f382:	d07b      	beq.n	800f47c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 800f384:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
 800f388:	4625      	mov	r5, r4
 800f38a:	e036      	b.n	800f3fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f38c:	2b73      	cmp	r3, #115	@ 0x73
 800f38e:	d0ec      	beq.n	800f36a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f390:	d802      	bhi.n	800f398 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 800f392:	2b6f      	cmp	r3, #111	@ 0x6f
 800f394:	d1cf      	bne.n	800f336 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800f396:	e7e8      	b.n	800f36a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f398:	2b75      	cmp	r3, #117	@ 0x75
 800f39a:	d0e6      	beq.n	800f36a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f39c:	2b78      	cmp	r3, #120	@ 0x78
 800f39e:	e7f9      	b.n	800f394 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 800f3a0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800f3a2:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 800f3a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f3a8:	b10b      	cbz	r3, 800f3ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 800f3aa:	3302      	adds	r3, #2
 800f3ac:	9309      	str	r3, [sp, #36]	@ 0x24
 800f3ae:	9b08      	ldr	r3, [sp, #32]
 800f3b0:	2b00      	cmp	r3, #0
 800f3b2:	f43f af2e 	beq.w	800f212 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f3b6:	3301      	adds	r3, #1
 800f3b8:	9308      	str	r3, [sp, #32]
 800f3ba:	e72a      	b.n	800f212 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f3bc:	2a00      	cmp	r2, #0
 800f3be:	d0e1      	beq.n	800f384 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800f3c0:	7813      	ldrb	r3, [r2, #0]
 800f3c2:	e7d6      	b.n	800f372 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 800f3c4:	2b73      	cmp	r3, #115	@ 0x73
 800f3c6:	d036      	beq.n	800f436 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 800f3c8:	d807      	bhi.n	800f3da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 800f3ca:	2b6f      	cmp	r3, #111	@ 0x6f
 800f3cc:	d1da      	bne.n	800f384 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800f3ce:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800f3d0:	1d25      	adds	r5, r4, #4
 800f3d2:	eba8 0202 	sub.w	r2, r8, r2
 800f3d6:	2308      	movs	r3, #8
 800f3d8:	e04a      	b.n	800f470 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 800f3da:	2b75      	cmp	r3, #117	@ 0x75
 800f3dc:	d043      	beq.n	800f466 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 800f3de:	2b78      	cmp	r3, #120	@ 0x78
 800f3e0:	d1d0      	bne.n	800f384 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800f3e2:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800f3e4:	1d25      	adds	r5, r4, #4
 800f3e6:	eba8 0202 	sub.w	r2, r8, r2
 800f3ea:	2310      	movs	r3, #16
 800f3ec:	e040      	b.n	800f470 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 800f3ee:	6823      	ldr	r3, [r4, #0]
 800f3f0:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 800f3f4:	1d25      	adds	r5, r4, #4
 800f3f6:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
 800f3fa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f3fc:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 800f400:	2b00      	cmp	r3, #0
 800f402:	d052      	beq.n	800f4aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 800f404:	881a      	ldrh	r2, [r3, #0]
 800f406:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 800f40a:	a80d      	add	r0, sp, #52	@ 0x34
 800f40c:	9005      	str	r0, [sp, #20]
 800f40e:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 800f412:	9004      	str	r0, [sp, #16]
 800f414:	980e      	ldr	r0, [sp, #56]	@ 0x38
 800f416:	9003      	str	r0, [sp, #12]
 800f418:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 800f41c:	9002      	str	r0, [sp, #8]
 800f41e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 800f420:	9001      	str	r0, [sp, #4]
 800f422:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 800f426:	9000      	str	r0, [sp, #0]
 800f428:	e9cd 8706 	strd	r8, r7, [sp, #24]
 800f42c:	a810      	add	r0, sp, #64	@ 0x40
 800f42e:	f7ff fd49 	bl	800eec4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 800f432:	462c      	mov	r4, r5
 800f434:	e7b7      	b.n	800f3a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 800f436:	6823      	ldr	r3, [r4, #0]
 800f438:	1d25      	adds	r5, r4, #4
 800f43a:	9310      	str	r3, [sp, #64]	@ 0x40
 800f43c:	e7dd      	b.n	800f3fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f43e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800f440:	6820      	ldr	r0, [r4, #0]
 800f442:	eba8 0202 	sub.w	r2, r8, r2
 800f446:	230a      	movs	r3, #10
 800f448:	b292      	uxth	r2, r2
 800f44a:	4649      	mov	r1, r9
 800f44c:	f7ff fcf0 	bl	800ee30 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 800f450:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800f454:	2b2d      	cmp	r3, #45	@ 0x2d
 800f456:	f104 0504 	add.w	r5, r4, #4
 800f45a:	d1ce      	bne.n	800f3fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f45c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800f460:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800f462:	3302      	adds	r3, #2
 800f464:	e7e9      	b.n	800f43a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 800f466:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800f468:	1d25      	adds	r5, r4, #4
 800f46a:	eba8 0202 	sub.w	r2, r8, r2
 800f46e:	230a      	movs	r3, #10
 800f470:	b292      	uxth	r2, r2
 800f472:	4649      	mov	r1, r9
 800f474:	6820      	ldr	r0, [r4, #0]
 800f476:	f7ff fd07 	bl	800ee88 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 800f47a:	e7be      	b.n	800f3fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f47c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800f47e:	6820      	ldr	r0, [r4, #0]
 800f480:	eba8 0202 	sub.w	r2, r8, r2
 800f484:	b292      	uxth	r2, r2
 800f486:	2310      	movs	r3, #16
 800f488:	4649      	mov	r1, r9
 800f48a:	f7ff fcfd 	bl	800ee88 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 800f48e:	1d25      	adds	r5, r4, #4
 800f490:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
 800f494:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 800f498:	2b00      	cmp	r3, #0
 800f49a:	d0ae      	beq.n	800f3fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f49c:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
 800f4a0:	2919      	cmp	r1, #25
 800f4a2:	d8f7      	bhi.n	800f494 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 800f4a4:	3b20      	subs	r3, #32
 800f4a6:	8013      	strh	r3, [r2, #0]
 800f4a8:	e7f4      	b.n	800f494 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 800f4aa:	9a08      	ldr	r2, [sp, #32]
 800f4ac:	2a00      	cmp	r2, #0
 800f4ae:	d0aa      	beq.n	800f406 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800f4b0:	7812      	ldrb	r2, [r2, #0]
 800f4b2:	e7a8      	b.n	800f406 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800f4b4:	2d00      	cmp	r5, #0
 800f4b6:	f43f af47 	beq.w	800f348 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 800f4ba:	782d      	ldrb	r5, [r5, #0]
 800f4bc:	e744      	b.n	800f348 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0800f4be <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 800f4be:	b507      	push	{r0, r1, r2, lr}
 800f4c0:	9300      	str	r3, [sp, #0]
 800f4c2:	4613      	mov	r3, r2
 800f4c4:	2200      	movs	r2, #0
 800f4c6:	f7ff fe90 	bl	800f1ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 800f4ca:	b003      	add	sp, #12
 800f4cc:	f85d fb04 	ldr.w	pc, [sp], #4

0800f4d0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 800f4d0:	b40c      	push	{r2, r3}
 800f4d2:	b507      	push	{r0, r1, r2, lr}
 800f4d4:	ab04      	add	r3, sp, #16
 800f4d6:	f853 2b04 	ldr.w	r2, [r3], #4
 800f4da:	9301      	str	r3, [sp, #4]
 800f4dc:	f7ff ffef 	bl	800f4be <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 800f4e0:	b003      	add	sp, #12
 800f4e2:	f85d eb04 	ldr.w	lr, [sp], #4
 800f4e6:	b002      	add	sp, #8
 800f4e8:	4770      	bx	lr
	...

0800f4ec <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800f4ec:	4b01      	ldr	r3, [pc, #4]	@ (800f4f4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800f4ee:	6018      	str	r0, [r3, #0]
 800f4f0:	4770      	bx	lr
 800f4f2:	bf00      	nop
 800f4f4:	20011a34 	.word	0x20011a34

0800f4f8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 800f4f8:	4b06      	ldr	r3, [pc, #24]	@ (800f514 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 800f4fa:	881a      	ldrh	r2, [r3, #0]
 800f4fc:	4282      	cmp	r2, r0
 800f4fe:	d807      	bhi.n	800f510 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 800f500:	4b05      	ldr	r3, [pc, #20]	@ (800f518 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 800f502:	881b      	ldrh	r3, [r3, #0]
 800f504:	4413      	add	r3, r2
 800f506:	4298      	cmp	r0, r3
 800f508:	bfac      	ite	ge
 800f50a:	2000      	movge	r0, #0
 800f50c:	2001      	movlt	r0, #1
 800f50e:	4770      	bx	lr
 800f510:	2000      	movs	r0, #0
 800f512:	4770      	bx	lr
 800f514:	20011a54 	.word	0x20011a54
 800f518:	20011a58 	.word	0x20011a58

0800f51c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800f51c:	b508      	push	{r3, lr}
 800f51e:	4601      	mov	r1, r0
 800f520:	f7ff ffea 	bl	800f4f8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 800f524:	b118      	cbz	r0, 800f52e <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 800f526:	4b02      	ldr	r3, [pc, #8]	@ (800f530 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 800f528:	681b      	ldr	r3, [r3, #0]
 800f52a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800f52e:	bd08      	pop	{r3, pc}
 800f530:	20011a38 	.word	0x20011a38

0800f534 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800f534:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f536:	4c24      	ldr	r4, [pc, #144]	@ (800f5c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 800f538:	6823      	ldr	r3, [r4, #0]
 800f53a:	2b00      	cmp	r3, #0
 800f53c:	d042      	beq.n	800f5c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 800f53e:	4a23      	ldr	r2, [pc, #140]	@ (800f5cc <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 800f540:	4d23      	ldr	r5, [pc, #140]	@ (800f5d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 800f542:	8811      	ldrh	r1, [r2, #0]
 800f544:	f8b5 c000 	ldrh.w	ip, [r5]
 800f548:	4822      	ldr	r0, [pc, #136]	@ (800f5d4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 800f54a:	4461      	add	r1, ip
 800f54c:	1c4a      	adds	r2, r1, #1
 800f54e:	f022 0201 	bic.w	r2, r2, #1
 800f552:	008f      	lsls	r7, r1, #2
 800f554:	0412      	lsls	r2, r2, #16
 800f556:	19de      	adds	r6, r3, r7
 800f558:	0c12      	lsrs	r2, r2, #16
 800f55a:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 800f55e:	6006      	str	r6, [r0, #0]
 800f560:	4e1d      	ldr	r6, [pc, #116]	@ (800f5d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 800f562:	19da      	adds	r2, r3, r7
 800f564:	6032      	str	r2, [r6, #0]
 800f566:	220e      	movs	r2, #14
 800f568:	fb02 f20c 	mul.w	r2, r2, ip
 800f56c:	3203      	adds	r2, #3
 800f56e:	f022 0203 	bic.w	r2, r2, #3
 800f572:	443a      	add	r2, r7
 800f574:	4f19      	ldr	r7, [pc, #100]	@ (800f5dc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800f576:	4413      	add	r3, r2
 800f578:	603b      	str	r3, [r7, #0]
 800f57a:	4f19      	ldr	r7, [pc, #100]	@ (800f5e0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800f57c:	2300      	movs	r3, #0
 800f57e:	803b      	strh	r3, [r7, #0]
 800f580:	4f18      	ldr	r7, [pc, #96]	@ (800f5e4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800f582:	683f      	ldr	r7, [r7, #0]
 800f584:	1aba      	subs	r2, r7, r2
 800f586:	4f18      	ldr	r7, [pc, #96]	@ (800f5e8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800f588:	603a      	str	r2, [r7, #0]
 800f58a:	4a18      	ldr	r2, [pc, #96]	@ (800f5ec <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800f58c:	469c      	mov	ip, r3
 800f58e:	8013      	strh	r3, [r2, #0]
 800f590:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 800f594:	428b      	cmp	r3, r1
 800f596:	d10d      	bne.n	800f5b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 800f598:	882d      	ldrh	r5, [r5, #0]
 800f59a:	6830      	ldr	r0, [r6, #0]
 800f59c:	2300      	movs	r3, #0
 800f59e:	240e      	movs	r4, #14
 800f5a0:	429d      	cmp	r5, r3
 800f5a2:	d90f      	bls.n	800f5c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 800f5a4:	fb04 0203 	mla	r2, r4, r3, r0
 800f5a8:	3301      	adds	r3, #1
 800f5aa:	7b11      	ldrb	r1, [r2, #12]
 800f5ac:	f36f 1145 	bfc	r1, #5, #1
 800f5b0:	7311      	strb	r1, [r2, #12]
 800f5b2:	e7f5      	b.n	800f5a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 800f5b4:	6822      	ldr	r2, [r4, #0]
 800f5b6:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800f5ba:	6802      	ldr	r2, [r0, #0]
 800f5bc:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 800f5c0:	3301      	adds	r3, #1
 800f5c2:	e7e7      	b.n	800f594 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 800f5c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f5c6:	bf00      	nop
 800f5c8:	20011a38 	.word	0x20011a38
 800f5cc:	20011a54 	.word	0x20011a54
 800f5d0:	20011a58 	.word	0x20011a58
 800f5d4:	20011a4c 	.word	0x20011a4c
 800f5d8:	20011a3c 	.word	0x20011a3c
 800f5dc:	20011a44 	.word	0x20011a44
 800f5e0:	20011a56 	.word	0x20011a56
 800f5e4:	20011a40 	.word	0x20011a40
 800f5e8:	20011a50 	.word	0x20011a50
 800f5ec:	20011a48 	.word	0x20011a48

0800f5f0 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800f5f0:	4b06      	ldr	r3, [pc, #24]	@ (800f60c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 800f5f2:	681b      	ldr	r3, [r3, #0]
 800f5f4:	b943      	cbnz	r3, 800f608 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 800f5f6:	b139      	cbz	r1, 800f608 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 800f5f8:	4b05      	ldr	r3, [pc, #20]	@ (800f610 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 800f5fa:	801a      	strh	r2, [r3, #0]
 800f5fc:	4b05      	ldr	r3, [pc, #20]	@ (800f614 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 800f5fe:	6019      	str	r1, [r3, #0]
 800f600:	4b05      	ldr	r3, [pc, #20]	@ (800f618 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 800f602:	6018      	str	r0, [r3, #0]
 800f604:	f7ff bf96 	b.w	800f534 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800f608:	4770      	bx	lr
 800f60a:	bf00      	nop
 800f60c:	20011a44 	.word	0x20011a44
 800f610:	20011a58 	.word	0x20011a58
 800f614:	20011a40 	.word	0x20011a40
 800f618:	20011a38 	.word	0x20011a38

0800f61c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800f61c:	b470      	push	{r4, r5, r6}
 800f61e:	4c07      	ldr	r4, [pc, #28]	@ (800f63c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800f620:	6826      	ldr	r6, [r4, #0]
 800f622:	4605      	mov	r5, r0
 800f624:	4610      	mov	r0, r2
 800f626:	9a03      	ldr	r2, [sp, #12]
 800f628:	b936      	cbnz	r6, 800f638 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800f62a:	6025      	str	r5, [r4, #0]
 800f62c:	4c04      	ldr	r4, [pc, #16]	@ (800f640 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800f62e:	8021      	strh	r1, [r4, #0]
 800f630:	bc70      	pop	{r4, r5, r6}
 800f632:	4619      	mov	r1, r3
 800f634:	f7ff bfdc 	b.w	800f5f0 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800f638:	bc70      	pop	{r4, r5, r6}
 800f63a:	4770      	bx	lr
 800f63c:	20011a5c 	.word	0x20011a5c
 800f640:	20011a54 	.word	0x20011a54

0800f644 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800f644:	4a12      	ldr	r2, [pc, #72]	@ (800f690 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 800f646:	8803      	ldrh	r3, [r0, #0]
 800f648:	8812      	ldrh	r2, [r2, #0]
 800f64a:	4293      	cmp	r3, r2
 800f64c:	d207      	bcs.n	800f65e <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 800f64e:	4a11      	ldr	r2, [pc, #68]	@ (800f694 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 800f650:	6812      	ldr	r2, [r2, #0]
 800f652:	2114      	movs	r1, #20
 800f654:	fb01 2303 	mla	r3, r1, r3, r2
 800f658:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 800f65c:	4770      	bx	lr
 800f65e:	490e      	ldr	r1, [pc, #56]	@ (800f698 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800f660:	8809      	ldrh	r1, [r1, #0]
 800f662:	4411      	add	r1, r2
 800f664:	428b      	cmp	r3, r1
 800f666:	da04      	bge.n	800f672 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 800f668:	1a9b      	subs	r3, r3, r2
 800f66a:	4a0c      	ldr	r2, [pc, #48]	@ (800f69c <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800f66c:	210e      	movs	r1, #14
 800f66e:	6812      	ldr	r2, [r2, #0]
 800f670:	e7f0      	b.n	800f654 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 800f672:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 800f676:	4293      	cmp	r3, r2
 800f678:	d108      	bne.n	800f68c <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 800f67a:	4b09      	ldr	r3, [pc, #36]	@ (800f6a0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800f67c:	781b      	ldrb	r3, [r3, #0]
 800f67e:	b91b      	cbnz	r3, 800f688 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 800f680:	4b08      	ldr	r3, [pc, #32]	@ (800f6a4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800f682:	f9b3 0000 	ldrsh.w	r0, [r3]
 800f686:	4770      	bx	lr
 800f688:	4b07      	ldr	r3, [pc, #28]	@ (800f6a8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800f68a:	e7fa      	b.n	800f682 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 800f68c:	2000      	movs	r0, #0
 800f68e:	4770      	bx	lr
 800f690:	20011a54 	.word	0x20011a54
 800f694:	20011a5c 	.word	0x20011a5c
 800f698:	20011a58 	.word	0x20011a58
 800f69c:	20011a3c 	.word	0x20011a3c
 800f6a0:	200119cc 	.word	0x200119cc
 800f6a4:	200119ce 	.word	0x200119ce
 800f6a8:	200119d0 	.word	0x200119d0

0800f6ac <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800f6ac:	4a12      	ldr	r2, [pc, #72]	@ (800f6f8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 800f6ae:	8803      	ldrh	r3, [r0, #0]
 800f6b0:	8812      	ldrh	r2, [r2, #0]
 800f6b2:	4293      	cmp	r3, r2
 800f6b4:	d207      	bcs.n	800f6c6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 800f6b6:	4a11      	ldr	r2, [pc, #68]	@ (800f6fc <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 800f6b8:	6812      	ldr	r2, [r2, #0]
 800f6ba:	2114      	movs	r1, #20
 800f6bc:	fb01 2303 	mla	r3, r1, r3, r2
 800f6c0:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 800f6c4:	4770      	bx	lr
 800f6c6:	490e      	ldr	r1, [pc, #56]	@ (800f700 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 800f6c8:	8809      	ldrh	r1, [r1, #0]
 800f6ca:	4411      	add	r1, r2
 800f6cc:	428b      	cmp	r3, r1
 800f6ce:	da04      	bge.n	800f6da <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 800f6d0:	1a9b      	subs	r3, r3, r2
 800f6d2:	4a0c      	ldr	r2, [pc, #48]	@ (800f704 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 800f6d4:	210e      	movs	r1, #14
 800f6d6:	6812      	ldr	r2, [r2, #0]
 800f6d8:	e7f0      	b.n	800f6bc <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 800f6da:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 800f6de:	4293      	cmp	r3, r2
 800f6e0:	d108      	bne.n	800f6f4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 800f6e2:	4b09      	ldr	r3, [pc, #36]	@ (800f708 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 800f6e4:	781b      	ldrb	r3, [r3, #0]
 800f6e6:	b91b      	cbnz	r3, 800f6f0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 800f6e8:	4b08      	ldr	r3, [pc, #32]	@ (800f70c <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800f6ea:	f9b3 0000 	ldrsh.w	r0, [r3]
 800f6ee:	4770      	bx	lr
 800f6f0:	4b07      	ldr	r3, [pc, #28]	@ (800f710 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800f6f2:	e7fa      	b.n	800f6ea <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 800f6f4:	2000      	movs	r0, #0
 800f6f6:	4770      	bx	lr
 800f6f8:	20011a54 	.word	0x20011a54
 800f6fc:	20011a5c 	.word	0x20011a5c
 800f700:	20011a58 	.word	0x20011a58
 800f704:	20011a3c 	.word	0x20011a3c
 800f708:	200119cc 	.word	0x200119cc
 800f70c:	200119d0 	.word	0x200119d0
 800f710:	200119ce 	.word	0x200119ce

0800f714 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 800f714:	b530      	push	{r4, r5, lr}
 800f716:	4a22      	ldr	r2, [pc, #136]	@ (800f7a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 800f718:	880b      	ldrh	r3, [r1, #0]
 800f71a:	8812      	ldrh	r2, [r2, #0]
 800f71c:	4293      	cmp	r3, r2
 800f71e:	d213      	bcs.n	800f748 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 800f720:	4a20      	ldr	r2, [pc, #128]	@ (800f7a4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 800f722:	6812      	ldr	r2, [r2, #0]
 800f724:	2114      	movs	r1, #20
 800f726:	fb01 2303 	mla	r3, r1, r3, r2
 800f72a:	8a1a      	ldrh	r2, [r3, #16]
 800f72c:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 800f730:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800f734:	8a5b      	ldrh	r3, [r3, #18]
 800f736:	8004      	strh	r4, [r0, #0]
 800f738:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800f73c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800f740:	8041      	strh	r1, [r0, #2]
 800f742:	8082      	strh	r2, [r0, #4]
 800f744:	80c3      	strh	r3, [r0, #6]
 800f746:	e024      	b.n	800f792 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 800f748:	4917      	ldr	r1, [pc, #92]	@ (800f7a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 800f74a:	8809      	ldrh	r1, [r1, #0]
 800f74c:	4411      	add	r1, r2
 800f74e:	428b      	cmp	r3, r1
 800f750:	da10      	bge.n	800f774 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 800f752:	1a9b      	subs	r3, r3, r2
 800f754:	220e      	movs	r2, #14
 800f756:	4353      	muls	r3, r2
 800f758:	4a14      	ldr	r2, [pc, #80]	@ (800f7ac <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 800f75a:	6811      	ldr	r1, [r2, #0]
 800f75c:	18ca      	adds	r2, r1, r3
 800f75e:	5ecd      	ldrsh	r5, [r1, r3]
 800f760:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 800f764:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 800f768:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 800f76c:	8005      	strh	r5, [r0, #0]
 800f76e:	8044      	strh	r4, [r0, #2]
 800f770:	8081      	strh	r1, [r0, #4]
 800f772:	e7e7      	b.n	800f744 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 800f774:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 800f778:	4293      	cmp	r3, r2
 800f77a:	d10b      	bne.n	800f794 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 800f77c:	4b0c      	ldr	r3, [pc, #48]	@ (800f7b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 800f77e:	f9b3 1000 	ldrsh.w	r1, [r3]
 800f782:	4b0c      	ldr	r3, [pc, #48]	@ (800f7b4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 800f784:	8081      	strh	r1, [r0, #4]
 800f786:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f78a:	80c2      	strh	r2, [r0, #6]
 800f78c:	2300      	movs	r3, #0
 800f78e:	8003      	strh	r3, [r0, #0]
 800f790:	8043      	strh	r3, [r0, #2]
 800f792:	bd30      	pop	{r4, r5, pc}
 800f794:	2300      	movs	r3, #0
 800f796:	8003      	strh	r3, [r0, #0]
 800f798:	8043      	strh	r3, [r0, #2]
 800f79a:	8083      	strh	r3, [r0, #4]
 800f79c:	e7d2      	b.n	800f744 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 800f79e:	bf00      	nop
 800f7a0:	20011a54 	.word	0x20011a54
 800f7a4:	20011a5c 	.word	0x20011a5c
 800f7a8:	20011a58 	.word	0x20011a58
 800f7ac:	20011a3c 	.word	0x20011a3c
 800f7b0:	200119c8 	.word	0x200119c8
 800f7b4:	200119ca 	.word	0x200119ca

0800f7b8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 800f7b8:	4a17      	ldr	r2, [pc, #92]	@ (800f818 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 800f7ba:	8803      	ldrh	r3, [r0, #0]
 800f7bc:	8812      	ldrh	r2, [r2, #0]
 800f7be:	4293      	cmp	r3, r2
 800f7c0:	d213      	bcs.n	800f7ea <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 800f7c2:	4a16      	ldr	r2, [pc, #88]	@ (800f81c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 800f7c4:	6812      	ldr	r2, [r2, #0]
 800f7c6:	2114      	movs	r1, #20
 800f7c8:	fb01 2303 	mla	r3, r1, r3, r2
 800f7cc:	8a1a      	ldrh	r2, [r3, #16]
 800f7ce:	8919      	ldrh	r1, [r3, #8]
 800f7d0:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800f7d4:	428a      	cmp	r2, r1
 800f7d6:	db1d      	blt.n	800f814 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 800f7d8:	8a58      	ldrh	r0, [r3, #18]
 800f7da:	f3c0 000c 	ubfx	r0, r0, #0, #13
 800f7de:	895b      	ldrh	r3, [r3, #10]
 800f7e0:	4298      	cmp	r0, r3
 800f7e2:	bfac      	ite	ge
 800f7e4:	2000      	movge	r0, #0
 800f7e6:	2001      	movlt	r0, #1
 800f7e8:	4770      	bx	lr
 800f7ea:	490d      	ldr	r1, [pc, #52]	@ (800f820 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 800f7ec:	8809      	ldrh	r1, [r1, #0]
 800f7ee:	4411      	add	r1, r2
 800f7f0:	428b      	cmp	r3, r1
 800f7f2:	da0d      	bge.n	800f810 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 800f7f4:	1a9b      	subs	r3, r3, r2
 800f7f6:	4a0b      	ldr	r2, [pc, #44]	@ (800f824 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 800f7f8:	6812      	ldr	r2, [r2, #0]
 800f7fa:	210e      	movs	r1, #14
 800f7fc:	fb01 2303 	mla	r3, r1, r3, r2
 800f800:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800f804:	891a      	ldrh	r2, [r3, #8]
 800f806:	4291      	cmp	r1, r2
 800f808:	db04      	blt.n	800f814 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 800f80a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 800f80e:	e7e6      	b.n	800f7de <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 800f810:	2000      	movs	r0, #0
 800f812:	4770      	bx	lr
 800f814:	2001      	movs	r0, #1
 800f816:	4770      	bx	lr
 800f818:	20011a54 	.word	0x20011a54
 800f81c:	20011a5c 	.word	0x20011a5c
 800f820:	20011a58 	.word	0x20011a58
 800f824:	20011a3c 	.word	0x20011a3c

0800f828 <_ZNK8touchgfx6Bitmap7getDataEv>:
 800f828:	4a12      	ldr	r2, [pc, #72]	@ (800f874 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 800f82a:	8803      	ldrh	r3, [r0, #0]
 800f82c:	8811      	ldrh	r1, [r2, #0]
 800f82e:	428b      	cmp	r3, r1
 800f830:	d20b      	bcs.n	800f84a <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 800f832:	4a11      	ldr	r2, [pc, #68]	@ (800f878 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800f834:	6812      	ldr	r2, [r2, #0]
 800f836:	b112      	cbz	r2, 800f83e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 800f838:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800f83c:	b9c0      	cbnz	r0, 800f870 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 800f83e:	4a0f      	ldr	r2, [pc, #60]	@ (800f87c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 800f840:	6811      	ldr	r1, [r2, #0]
 800f842:	2214      	movs	r2, #20
 800f844:	4353      	muls	r3, r2
 800f846:	58c8      	ldr	r0, [r1, r3]
 800f848:	4770      	bx	lr
 800f84a:	4a0d      	ldr	r2, [pc, #52]	@ (800f880 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 800f84c:	8812      	ldrh	r2, [r2, #0]
 800f84e:	440a      	add	r2, r1
 800f850:	4293      	cmp	r3, r2
 800f852:	da04      	bge.n	800f85e <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 800f854:	4a08      	ldr	r2, [pc, #32]	@ (800f878 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800f856:	6812      	ldr	r2, [r2, #0]
 800f858:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800f85c:	4770      	bx	lr
 800f85e:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 800f862:	4293      	cmp	r3, r2
 800f864:	d103      	bne.n	800f86e <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 800f866:	4b07      	ldr	r3, [pc, #28]	@ (800f884 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 800f868:	681b      	ldr	r3, [r3, #0]
 800f86a:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 800f86c:	4770      	bx	lr
 800f86e:	2000      	movs	r0, #0
 800f870:	4770      	bx	lr
 800f872:	bf00      	nop
 800f874:	20011a54 	.word	0x20011a54
 800f878:	20011a38 	.word	0x20011a38
 800f87c:	20011a5c 	.word	0x20011a5c
 800f880:	20011a58 	.word	0x20011a58
 800f884:	200119d4 	.word	0x200119d4

0800f888 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 800f888:	4b24      	ldr	r3, [pc, #144]	@ (800f91c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 800f88a:	8802      	ldrh	r2, [r0, #0]
 800f88c:	8818      	ldrh	r0, [r3, #0]
 800f88e:	4282      	cmp	r2, r0
 800f890:	d221      	bcs.n	800f8d6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 800f892:	4b23      	ldr	r3, [pc, #140]	@ (800f920 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 800f894:	6819      	ldr	r1, [r3, #0]
 800f896:	2314      	movs	r3, #20
 800f898:	fb03 1302 	mla	r3, r3, r2, r1
 800f89c:	6858      	ldr	r0, [r3, #4]
 800f89e:	2800      	cmp	r0, #0
 800f8a0:	d03a      	beq.n	800f918 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 800f8a2:	4920      	ldr	r1, [pc, #128]	@ (800f924 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800f8a4:	6809      	ldr	r1, [r1, #0]
 800f8a6:	2900      	cmp	r1, #0
 800f8a8:	d036      	beq.n	800f918 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 800f8aa:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 800f8ae:	2900      	cmp	r1, #0
 800f8b0:	d032      	beq.n	800f918 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 800f8b2:	891a      	ldrh	r2, [r3, #8]
 800f8b4:	8958      	ldrh	r0, [r3, #10]
 800f8b6:	4350      	muls	r0, r2
 800f8b8:	7c5a      	ldrb	r2, [r3, #17]
 800f8ba:	7cdb      	ldrb	r3, [r3, #19]
 800f8bc:	0952      	lsrs	r2, r2, #5
 800f8be:	f3c3 1342 	ubfx	r3, r3, #5, #3
 800f8c2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800f8c6:	2b0b      	cmp	r3, #11
 800f8c8:	bf18      	it	ne
 800f8ca:	0040      	lslne	r0, r0, #1
 800f8cc:	3003      	adds	r0, #3
 800f8ce:	f020 0003 	bic.w	r0, r0, #3
 800f8d2:	4408      	add	r0, r1
 800f8d4:	4770      	bx	lr
 800f8d6:	4b14      	ldr	r3, [pc, #80]	@ (800f928 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 800f8d8:	881b      	ldrh	r3, [r3, #0]
 800f8da:	4403      	add	r3, r0
 800f8dc:	429a      	cmp	r2, r3
 800f8de:	da1a      	bge.n	800f916 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800f8e0:	4b12      	ldr	r3, [pc, #72]	@ (800f92c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 800f8e2:	681b      	ldr	r3, [r3, #0]
 800f8e4:	1a10      	subs	r0, r2, r0
 800f8e6:	210e      	movs	r1, #14
 800f8e8:	fb01 3000 	mla	r0, r1, r0, r3
 800f8ec:	7b03      	ldrb	r3, [r0, #12]
 800f8ee:	f003 031f 	and.w	r3, r3, #31
 800f8f2:	2b0b      	cmp	r3, #11
 800f8f4:	d10b      	bne.n	800f90e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 800f8f6:	8903      	ldrh	r3, [r0, #8]
 800f8f8:	8940      	ldrh	r0, [r0, #10]
 800f8fa:	4358      	muls	r0, r3
 800f8fc:	4b09      	ldr	r3, [pc, #36]	@ (800f924 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800f8fe:	6819      	ldr	r1, [r3, #0]
 800f900:	3003      	adds	r0, #3
 800f902:	f020 0303 	bic.w	r3, r0, #3
 800f906:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 800f90a:	4418      	add	r0, r3
 800f90c:	4770      	bx	lr
 800f90e:	2b0d      	cmp	r3, #13
 800f910:	d101      	bne.n	800f916 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800f912:	300d      	adds	r0, #13
 800f914:	4770      	bx	lr
 800f916:	2000      	movs	r0, #0
 800f918:	4770      	bx	lr
 800f91a:	bf00      	nop
 800f91c:	20011a54 	.word	0x20011a54
 800f920:	20011a5c 	.word	0x20011a5c
 800f924:	20011a38 	.word	0x20011a38
 800f928:	20011a58 	.word	0x20011a58
 800f92c:	20011a3c 	.word	0x20011a3c

0800f930 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 800f930:	b510      	push	{r4, lr}
 800f932:	4a17      	ldr	r2, [pc, #92]	@ (800f990 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 800f934:	8803      	ldrh	r3, [r0, #0]
 800f936:	8812      	ldrh	r2, [r2, #0]
 800f938:	4293      	cmp	r3, r2
 800f93a:	d20c      	bcs.n	800f956 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800f93c:	4a15      	ldr	r2, [pc, #84]	@ (800f994 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 800f93e:	6812      	ldr	r2, [r2, #0]
 800f940:	2114      	movs	r1, #20
 800f942:	fb01 2303 	mla	r3, r1, r3, r2
 800f946:	7c58      	ldrb	r0, [r3, #17]
 800f948:	0942      	lsrs	r2, r0, #5
 800f94a:	7cd8      	ldrb	r0, [r3, #19]
 800f94c:	f3c0 1042 	ubfx	r0, r0, #5, #3
 800f950:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 800f954:	bd10      	pop	{r4, pc}
 800f956:	4910      	ldr	r1, [pc, #64]	@ (800f998 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 800f958:	8809      	ldrh	r1, [r1, #0]
 800f95a:	4411      	add	r1, r2
 800f95c:	428b      	cmp	r3, r1
 800f95e:	da09      	bge.n	800f974 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800f960:	1a9b      	subs	r3, r3, r2
 800f962:	4a0e      	ldr	r2, [pc, #56]	@ (800f99c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 800f964:	6812      	ldr	r2, [r2, #0]
 800f966:	210e      	movs	r1, #14
 800f968:	fb01 2303 	mla	r3, r1, r3, r2
 800f96c:	7b18      	ldrb	r0, [r3, #12]
 800f96e:	f000 001f 	and.w	r0, r0, #31
 800f972:	e7ef      	b.n	800f954 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 800f974:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 800f978:	4293      	cmp	r3, r2
 800f97a:	d106      	bne.n	800f98a <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 800f97c:	f7f2 fd50 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 800f980:	6803      	ldr	r3, [r0, #0]
 800f982:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f986:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f988:	4718      	bx	r3
 800f98a:	2000      	movs	r0, #0
 800f98c:	e7e2      	b.n	800f954 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 800f98e:	bf00      	nop
 800f990:	20011a54 	.word	0x20011a54
 800f994:	20011a5c 	.word	0x20011a5c
 800f998:	20011a58 	.word	0x20011a58
 800f99c:	20011a3c 	.word	0x20011a3c

0800f9a0 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 800f9a0:	2010      	movs	r0, #16
 800f9a2:	4770      	bx	lr

0800f9a4 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 800f9a4:	2000      	movs	r0, #0
 800f9a6:	4770      	bx	lr

0800f9a8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 800f9a8:	4b02      	ldr	r3, [pc, #8]	@ (800f9b4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 800f9aa:	8818      	ldrh	r0, [r3, #0]
 800f9ac:	0040      	lsls	r0, r0, #1
 800f9ae:	b280      	uxth	r0, r0
 800f9b0:	4770      	bx	lr
 800f9b2:	bf00      	nop
 800f9b4:	200119ce 	.word	0x200119ce

0800f9b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800f9b8:	2bff      	cmp	r3, #255	@ 0xff
 800f9ba:	d050      	beq.n	800fa5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 800f9bc:	2a0b      	cmp	r2, #11
 800f9be:	d04a      	beq.n	800fa56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800f9c0:	d80e      	bhi.n	800f9e0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 800f9c2:	2a03      	cmp	r2, #3
 800f9c4:	d03f      	beq.n	800fa46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 800f9c6:	d804      	bhi.n	800f9d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 800f9c8:	2a01      	cmp	r2, #1
 800f9ca:	d03e      	beq.n	800fa4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 800f9cc:	d93f      	bls.n	800fa4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 800f9ce:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 800f9d0:	4770      	bx	lr
 800f9d2:	2a09      	cmp	r2, #9
 800f9d4:	d03f      	beq.n	800fa56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800f9d6:	d83c      	bhi.n	800fa52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800f9d8:	2a08      	cmp	r2, #8
 800f9da:	d03a      	beq.n	800fa52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800f9dc:	2000      	movs	r0, #0
 800f9de:	4770      	bx	lr
 800f9e0:	2a2f      	cmp	r2, #47	@ 0x2f
 800f9e2:	d024      	beq.n	800fa2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 800f9e4:	d80d      	bhi.n	800fa02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 800f9e6:	2a2d      	cmp	r2, #45	@ 0x2d
 800f9e8:	d014      	beq.n	800fa14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 800f9ea:	d826      	bhi.n	800fa3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 800f9ec:	2a2c      	cmp	r2, #44	@ 0x2c
 800f9ee:	d1f5      	bne.n	800f9dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f9f0:	684b      	ldr	r3, [r1, #4]
 800f9f2:	781b      	ldrb	r3, [r3, #0]
 800f9f4:	2b01      	cmp	r3, #1
 800f9f6:	d018      	beq.n	800fa2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 800f9f8:	d323      	bcc.n	800fa42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 800f9fa:	2b02      	cmp	r3, #2
 800f9fc:	d1ee      	bne.n	800f9dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f9fe:	68c0      	ldr	r0, [r0, #12]
 800fa00:	4770      	bx	lr
 800fa02:	2a31      	cmp	r2, #49	@ 0x31
 800fa04:	d004      	beq.n	800fa10 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 800fa06:	d328      	bcc.n	800fa5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800fa08:	2a32      	cmp	r2, #50	@ 0x32
 800fa0a:	d026      	beq.n	800fa5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800fa0c:	2a33      	cmp	r2, #51	@ 0x33
 800fa0e:	d1e5      	bne.n	800f9dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fa10:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 800fa12:	4770      	bx	lr
 800fa14:	684b      	ldr	r3, [r1, #4]
 800fa16:	781b      	ldrb	r3, [r3, #0]
 800fa18:	2b01      	cmp	r3, #1
 800fa1a:	d004      	beq.n	800fa26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 800fa1c:	d30b      	bcc.n	800fa36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 800fa1e:	2b02      	cmp	r3, #2
 800fa20:	d1dc      	bne.n	800f9dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fa22:	6940      	ldr	r0, [r0, #20]
 800fa24:	4770      	bx	lr
 800fa26:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 800fa28:	4770      	bx	lr
 800fa2a:	69c0      	ldr	r0, [r0, #28]
 800fa2c:	4770      	bx	lr
 800fa2e:	684b      	ldr	r3, [r1, #4]
 800fa30:	781b      	ldrb	r3, [r3, #0]
 800fa32:	2b00      	cmp	r3, #0
 800fa34:	d1d2      	bne.n	800f9dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fa36:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 800fa38:	4770      	bx	lr
 800fa3a:	684b      	ldr	r3, [r1, #4]
 800fa3c:	781b      	ldrb	r3, [r3, #0]
 800fa3e:	2b00      	cmp	r3, #0
 800fa40:	d1cc      	bne.n	800f9dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fa42:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 800fa44:	4770      	bx	lr
 800fa46:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 800fa48:	4770      	bx	lr
 800fa4a:	6d40      	ldr	r0, [r0, #84]	@ 0x54
 800fa4c:	4770      	bx	lr
 800fa4e:	6c40      	ldr	r0, [r0, #68]	@ 0x44
 800fa50:	4770      	bx	lr
 800fa52:	6dc0      	ldr	r0, [r0, #92]	@ 0x5c
 800fa54:	4770      	bx	lr
 800fa56:	6e40      	ldr	r0, [r0, #100]	@ 0x64
 800fa58:	4770      	bx	lr
 800fa5a:	6ec0      	ldr	r0, [r0, #108]	@ 0x6c
 800fa5c:	4770      	bx	lr
 800fa5e:	2a0b      	cmp	r2, #11
 800fa60:	d049      	beq.n	800faf6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800fa62:	d80e      	bhi.n	800fa82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 800fa64:	2a03      	cmp	r2, #3
 800fa66:	d040      	beq.n	800faea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 800fa68:	d804      	bhi.n	800fa74 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 800fa6a:	2a01      	cmp	r2, #1
 800fa6c:	d03f      	beq.n	800faee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 800fa6e:	d940      	bls.n	800faf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 800fa70:	6c00      	ldr	r0, [r0, #64]	@ 0x40
 800fa72:	4770      	bx	lr
 800fa74:	2a09      	cmp	r2, #9
 800fa76:	d03e      	beq.n	800faf6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800fa78:	d801      	bhi.n	800fa7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 800fa7a:	2a08      	cmp	r2, #8
 800fa7c:	d1ae      	bne.n	800f9dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fa7e:	6e00      	ldr	r0, [r0, #96]	@ 0x60
 800fa80:	4770      	bx	lr
 800fa82:	2a2f      	cmp	r2, #47	@ 0x2f
 800fa84:	d024      	beq.n	800fad0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 800fa86:	d80d      	bhi.n	800faa4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 800fa88:	2a2d      	cmp	r2, #45	@ 0x2d
 800fa8a:	d014      	beq.n	800fab6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 800fa8c:	d826      	bhi.n	800fadc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 800fa8e:	2a2c      	cmp	r2, #44	@ 0x2c
 800fa90:	d1a4      	bne.n	800f9dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fa92:	684b      	ldr	r3, [r1, #4]
 800fa94:	781b      	ldrb	r3, [r3, #0]
 800fa96:	2b01      	cmp	r3, #1
 800fa98:	d018      	beq.n	800facc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 800fa9a:	d324      	bcc.n	800fae6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 800fa9c:	2b02      	cmp	r3, #2
 800fa9e:	d19d      	bne.n	800f9dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800faa0:	6900      	ldr	r0, [r0, #16]
 800faa2:	4770      	bx	lr
 800faa4:	2a31      	cmp	r2, #49	@ 0x31
 800faa6:	d004      	beq.n	800fab2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 800faa8:	d327      	bcc.n	800fafa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800faaa:	2a32      	cmp	r2, #50	@ 0x32
 800faac:	d025      	beq.n	800fafa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800faae:	2a33      	cmp	r2, #51	@ 0x33
 800fab0:	d194      	bne.n	800f9dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fab2:	6f80      	ldr	r0, [r0, #120]	@ 0x78
 800fab4:	4770      	bx	lr
 800fab6:	684b      	ldr	r3, [r1, #4]
 800fab8:	781b      	ldrb	r3, [r3, #0]
 800faba:	2b01      	cmp	r3, #1
 800fabc:	d004      	beq.n	800fac8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 800fabe:	d30b      	bcc.n	800fad8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 800fac0:	2b02      	cmp	r3, #2
 800fac2:	d18b      	bne.n	800f9dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fac4:	6980      	ldr	r0, [r0, #24]
 800fac6:	4770      	bx	lr
 800fac8:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800faca:	4770      	bx	lr
 800facc:	6a00      	ldr	r0, [r0, #32]
 800face:	4770      	bx	lr
 800fad0:	684b      	ldr	r3, [r1, #4]
 800fad2:	781b      	ldrb	r3, [r3, #0]
 800fad4:	2b00      	cmp	r3, #0
 800fad6:	d181      	bne.n	800f9dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fad8:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 800fada:	4770      	bx	lr
 800fadc:	684b      	ldr	r3, [r1, #4]
 800fade:	781b      	ldrb	r3, [r3, #0]
 800fae0:	2b00      	cmp	r3, #0
 800fae2:	f47f af7b 	bne.w	800f9dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fae6:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 800fae8:	4770      	bx	lr
 800faea:	6d00      	ldr	r0, [r0, #80]	@ 0x50
 800faec:	4770      	bx	lr
 800faee:	6d80      	ldr	r0, [r0, #88]	@ 0x58
 800faf0:	4770      	bx	lr
 800faf2:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 800faf4:	4770      	bx	lr
 800faf6:	6e80      	ldr	r0, [r0, #104]	@ 0x68
 800faf8:	4770      	bx	lr
 800fafa:	6f00      	ldr	r0, [r0, #112]	@ 0x70
 800fafc:	4770      	bx	lr

0800fafe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800fafe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fb02:	b087      	sub	sp, #28
 800fb04:	9815      	ldr	r0, [sp, #84]	@ 0x54
 800fb06:	9205      	str	r2, [sp, #20]
 800fb08:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800fb0c:	9202      	str	r2, [sp, #8]
 800fb0e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 800fb12:	9101      	str	r1, [sp, #4]
 800fb14:	6841      	ldr	r1, [r0, #4]
 800fb16:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 800fb1a:	fb01 2404 	mla	r4, r1, r4, r2
 800fb1e:	6802      	ldr	r2, [r0, #0]
 800fb20:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800fb24:	f8de 2000 	ldr.w	r2, [lr]
 800fb28:	9203      	str	r2, [sp, #12]
 800fb2a:	f8de 2004 	ldr.w	r2, [lr, #4]
 800fb2e:	3204      	adds	r2, #4
 800fb30:	9204      	str	r2, [sp, #16]
 800fb32:	9a02      	ldr	r2, [sp, #8]
 800fb34:	43d6      	mvns	r6, r2
 800fb36:	b2f6      	uxtb	r6, r6
 800fb38:	9a01      	ldr	r2, [sp, #4]
 800fb3a:	2a00      	cmp	r2, #0
 800fb3c:	dc03      	bgt.n	800fb46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 800fb3e:	9a05      	ldr	r2, [sp, #20]
 800fb40:	2a00      	cmp	r2, #0
 800fb42:	f340 8129 	ble.w	800fd98 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 800fb46:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 800fb48:	f9be c008 	ldrsh.w	ip, [lr, #8]
 800fb4c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 800fb50:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 800fb54:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800fb56:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 800fb5a:	2b00      	cmp	r3, #0
 800fb5c:	dd0e      	ble.n	800fb7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800fb5e:	1408      	asrs	r0, r1, #16
 800fb60:	d405      	bmi.n	800fb6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800fb62:	4560      	cmp	r0, ip
 800fb64:	da03      	bge.n	800fb6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800fb66:	1410      	asrs	r0, r2, #16
 800fb68:	d401      	bmi.n	800fb6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800fb6a:	42b8      	cmp	r0, r7
 800fb6c:	db07      	blt.n	800fb7e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 800fb6e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 800fb70:	4401      	add	r1, r0
 800fb72:	9814      	ldr	r0, [sp, #80]	@ 0x50
 800fb74:	3b01      	subs	r3, #1
 800fb76:	4402      	add	r2, r0
 800fb78:	3402      	adds	r4, #2
 800fb7a:	e7ee      	b.n	800fb5a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 800fb7c:	d071      	beq.n	800fc62 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 800fb7e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 800fb80:	1e58      	subs	r0, r3, #1
 800fb82:	fb05 1500 	mla	r5, r5, r0, r1
 800fb86:	142d      	asrs	r5, r5, #16
 800fb88:	d45f      	bmi.n	800fc4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800fb8a:	4565      	cmp	r5, ip
 800fb8c:	da5d      	bge.n	800fc4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800fb8e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 800fb90:	fb05 2000 	mla	r0, r5, r0, r2
 800fb94:	1400      	asrs	r0, r0, #16
 800fb96:	d458      	bmi.n	800fc4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800fb98:	42b8      	cmp	r0, r7
 800fb9a:	da56      	bge.n	800fc4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800fb9c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 800fba0:	4699      	mov	r9, r3
 800fba2:	46a2      	mov	sl, r4
 800fba4:	f1b9 0f00 	cmp.w	r9, #0
 800fba8:	dd57      	ble.n	800fc5a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 800fbaa:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800fbae:	9803      	ldr	r0, [sp, #12]
 800fbb0:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800fbb4:	140d      	asrs	r5, r1, #16
 800fbb6:	fb07 000c 	mla	r0, r7, ip, r0
 800fbba:	f109 39ff 	add.w	r9, r9, #4294967295
 800fbbe:	5d40      	ldrb	r0, [r0, r5]
 800fbc0:	9d04      	ldr	r5, [sp, #16]
 800fbc2:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 800fbc6:	f8ba 5000 	ldrh.w	r5, [sl]
 800fbca:	122f      	asrs	r7, r5, #8
 800fbcc:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800fbd0:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 800fbd4:	fb17 f706 	smulbb	r7, r7, r6
 800fbd8:	ea4f 08e5 	mov.w	r8, r5, asr #3
 800fbdc:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 800fbe0:	00ed      	lsls	r5, r5, #3
 800fbe2:	fb0c 7c0b 	mla	ip, ip, fp, r7
 800fbe6:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 800fbea:	10c7      	asrs	r7, r0, #3
 800fbec:	b2ed      	uxtb	r5, r5
 800fbee:	00c0      	lsls	r0, r0, #3
 800fbf0:	fb18 f806 	smulbb	r8, r8, r6
 800fbf4:	fb15 f506 	smulbb	r5, r5, r6
 800fbf8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 800fbfc:	b2c0      	uxtb	r0, r0
 800fbfe:	fa1f fc8c 	uxth.w	ip, ip
 800fc02:	fb07 870b 	mla	r7, r7, fp, r8
 800fc06:	fb00 500b 	mla	r0, r0, fp, r5
 800fc0a:	b280      	uxth	r0, r0
 800fc0c:	b2bf      	uxth	r7, r7
 800fc0e:	f10c 0501 	add.w	r5, ip, #1
 800fc12:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800fc16:	f107 0801 	add.w	r8, r7, #1
 800fc1a:	1c45      	adds	r5, r0, #1
 800fc1c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800fc20:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 800fc24:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 800fc26:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 800fc2a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800fc2e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 800fc32:	ea45 0c0c 	orr.w	ip, r5, ip
 800fc36:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 800fc3a:	4401      	add	r1, r0
 800fc3c:	9814      	ldr	r0, [sp, #80]	@ 0x50
 800fc3e:	ea4c 0c08 	orr.w	ip, ip, r8
 800fc42:	f82a cb02 	strh.w	ip, [sl], #2
 800fc46:	4402      	add	r2, r0
 800fc48:	e7ac      	b.n	800fba4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 800fc4a:	f8bd a008 	ldrh.w	sl, [sp, #8]
 800fc4e:	f04f 0800 	mov.w	r8, #0
 800fc52:	eb03 0008 	add.w	r0, r3, r8
 800fc56:	2800      	cmp	r0, #0
 800fc58:	dc41      	bgt.n	800fcde <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800fc5a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fc5e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800fc62:	9b01      	ldr	r3, [sp, #4]
 800fc64:	2b00      	cmp	r3, #0
 800fc66:	f340 8097 	ble.w	800fd98 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 800fc6a:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fc6e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800fc72:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800fc76:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800fc78:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fc7c:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fc80:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fc84:	eef0 6a62 	vmov.f32	s13, s5
 800fc88:	ee61 7a27 	vmul.f32	s15, s2, s15
 800fc8c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800fc90:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fc94:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 800fc98:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fc9c:	eef0 6a43 	vmov.f32	s13, s6
 800fca0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fca4:	ee12 2a90 	vmov	r2, s5
 800fca8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fcac:	fb92 f3f3 	sdiv	r3, r2, r3
 800fcb0:	ee13 2a10 	vmov	r2, s6
 800fcb4:	9313      	str	r3, [sp, #76]	@ 0x4c
 800fcb6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800fcb8:	fb92 f3f3 	sdiv	r3, r2, r3
 800fcbc:	9314      	str	r3, [sp, #80]	@ 0x50
 800fcbe:	9b01      	ldr	r3, [sp, #4]
 800fcc0:	9a05      	ldr	r2, [sp, #20]
 800fcc2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800fcc6:	3b01      	subs	r3, #1
 800fcc8:	9301      	str	r3, [sp, #4]
 800fcca:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 800fcce:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800fcd0:	eeb0 3a67 	vmov.f32	s6, s15
 800fcd4:	bf08      	it	eq
 800fcd6:	4613      	moveq	r3, r2
 800fcd8:	eef0 2a47 	vmov.f32	s5, s14
 800fcdc:	e72c      	b.n	800fb38 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 800fcde:	140f      	asrs	r7, r1, #16
 800fce0:	d453      	bmi.n	800fd8a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800fce2:	f8de 5008 	ldr.w	r5, [lr, #8]
 800fce6:	42bd      	cmp	r5, r7
 800fce8:	dd4f      	ble.n	800fd8a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800fcea:	ea5f 4c22 	movs.w	ip, r2, asr #16
 800fcee:	d44c      	bmi.n	800fd8a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800fcf0:	f8de 000c 	ldr.w	r0, [lr, #12]
 800fcf4:	4560      	cmp	r0, ip
 800fcf6:	dd48      	ble.n	800fd8a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800fcf8:	9803      	ldr	r0, [sp, #12]
 800fcfa:	b22d      	sxth	r5, r5
 800fcfc:	fb0c 0505 	mla	r5, ip, r5, r0
 800fd00:	5de8      	ldrb	r0, [r5, r7]
 800fd02:	9d04      	ldr	r5, [sp, #16]
 800fd04:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 800fd08:	f06f 0501 	mvn.w	r5, #1
 800fd0c:	fb05 fb08 	mul.w	fp, r5, r8
 800fd10:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800fd14:	f834 500b 	ldrh.w	r5, [r4, fp]
 800fd18:	122f      	asrs	r7, r5, #8
 800fd1a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 800fd1e:	fb17 f706 	smulbb	r7, r7, r6
 800fd22:	ea4f 09e5 	mov.w	r9, r5, asr #3
 800fd26:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 800fd2a:	00ed      	lsls	r5, r5, #3
 800fd2c:	fb0c 7c0a 	mla	ip, ip, sl, r7
 800fd30:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 800fd34:	10c7      	asrs	r7, r0, #3
 800fd36:	b2ed      	uxtb	r5, r5
 800fd38:	00c0      	lsls	r0, r0, #3
 800fd3a:	fb19 f906 	smulbb	r9, r9, r6
 800fd3e:	fb15 f506 	smulbb	r5, r5, r6
 800fd42:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 800fd46:	b2c0      	uxtb	r0, r0
 800fd48:	fa1f fc8c 	uxth.w	ip, ip
 800fd4c:	fb07 970a 	mla	r7, r7, sl, r9
 800fd50:	fb00 500a 	mla	r0, r0, sl, r5
 800fd54:	b2bf      	uxth	r7, r7
 800fd56:	b280      	uxth	r0, r0
 800fd58:	f10c 0501 	add.w	r5, ip, #1
 800fd5c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800fd60:	f107 0901 	add.w	r9, r7, #1
 800fd64:	1c45      	adds	r5, r0, #1
 800fd66:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800fd6a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800fd6e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 800fd72:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800fd76:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800fd7a:	ea45 0c0c 	orr.w	ip, r5, ip
 800fd7e:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 800fd82:	ea4c 0c09 	orr.w	ip, ip, r9
 800fd86:	f824 c00b 	strh.w	ip, [r4, fp]
 800fd8a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 800fd8c:	4401      	add	r1, r0
 800fd8e:	9814      	ldr	r0, [sp, #80]	@ 0x50
 800fd90:	f108 38ff 	add.w	r8, r8, #4294967295
 800fd94:	4402      	add	r2, r0
 800fd96:	e75c      	b.n	800fc52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 800fd98:	b007      	add	sp, #28
 800fd9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800fd9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800fd9e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fda2:	b085      	sub	sp, #20
 800fda4:	4693      	mov	fp, r2
 800fda6:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 800fda8:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 800fdaa:	6870      	ldr	r0, [r6, #4]
 800fdac:	9100      	str	r1, [sp, #0]
 800fdae:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 800fdb2:	fb00 2404 	mla	r4, r0, r4, r2
 800fdb6:	6832      	ldr	r2, [r6, #0]
 800fdb8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800fdbc:	682a      	ldr	r2, [r5, #0]
 800fdbe:	9201      	str	r2, [sp, #4]
 800fdc0:	686a      	ldr	r2, [r5, #4]
 800fdc2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 800fdc6:	3204      	adds	r2, #4
 800fdc8:	9202      	str	r2, [sp, #8]
 800fdca:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800fdce:	9a00      	ldr	r2, [sp, #0]
 800fdd0:	2a00      	cmp	r2, #0
 800fdd2:	dc03      	bgt.n	800fddc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 800fdd4:	f1bb 0f00 	cmp.w	fp, #0
 800fdd8:	f340 80a0 	ble.w	800ff1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 800fddc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 800fdde:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 800fde2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 800fde6:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 800fdea:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800fdec:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 800fdf0:	2b00      	cmp	r3, #0
 800fdf2:	dd0c      	ble.n	800fe0e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800fdf4:	1406      	asrs	r6, r0, #16
 800fdf6:	d405      	bmi.n	800fe04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800fdf8:	454e      	cmp	r6, r9
 800fdfa:	da03      	bge.n	800fe04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800fdfc:	1416      	asrs	r6, r2, #16
 800fdfe:	d401      	bmi.n	800fe04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800fe00:	4546      	cmp	r6, r8
 800fe02:	db05      	blt.n	800fe10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800fe04:	4470      	add	r0, lr
 800fe06:	4462      	add	r2, ip
 800fe08:	3b01      	subs	r3, #1
 800fe0a:	3402      	adds	r4, #2
 800fe0c:	e7f0      	b.n	800fdf0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 800fe0e:	d00f      	beq.n	800fe30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 800fe10:	1e5e      	subs	r6, r3, #1
 800fe12:	fb0e 0706 	mla	r7, lr, r6, r0
 800fe16:	143f      	asrs	r7, r7, #16
 800fe18:	d541      	bpl.n	800fe9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 800fe1a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 800fe1e:	4698      	mov	r8, r3
 800fe20:	9603      	str	r6, [sp, #12]
 800fe22:	f1b8 0f00 	cmp.w	r8, #0
 800fe26:	dc59      	bgt.n	800fedc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 800fe28:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fe2c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800fe30:	9b00      	ldr	r3, [sp, #0]
 800fe32:	2b00      	cmp	r3, #0
 800fe34:	dd72      	ble.n	800ff1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 800fe36:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fe3a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fe3e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800fe42:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800fe44:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fe48:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fe4c:	eeb0 6a62 	vmov.f32	s12, s5
 800fe50:	ee61 7a27 	vmul.f32	s15, s2, s15
 800fe54:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fe58:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fe5c:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 800fe60:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fe64:	eeb0 6a43 	vmov.f32	s12, s6
 800fe68:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fe6c:	ee12 2a90 	vmov	r2, s5
 800fe70:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fe74:	fb92 fef3 	sdiv	lr, r2, r3
 800fe78:	ee13 2a10 	vmov	r2, s6
 800fe7c:	fb92 fcf3 	sdiv	ip, r2, r3
 800fe80:	9b00      	ldr	r3, [sp, #0]
 800fe82:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fe86:	3b01      	subs	r3, #1
 800fe88:	9300      	str	r3, [sp, #0]
 800fe8a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 800fe8e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800fe90:	eeb0 3a67 	vmov.f32	s6, s15
 800fe94:	bf08      	it	eq
 800fe96:	465b      	moveq	r3, fp
 800fe98:	eef0 2a47 	vmov.f32	s5, s14
 800fe9c:	e797      	b.n	800fdce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 800fe9e:	454f      	cmp	r7, r9
 800fea0:	dabb      	bge.n	800fe1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800fea2:	fb0c 2606 	mla	r6, ip, r6, r2
 800fea6:	1436      	asrs	r6, r6, #16
 800fea8:	d4b7      	bmi.n	800fe1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800feaa:	4546      	cmp	r6, r8
 800feac:	dab5      	bge.n	800fe1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800feae:	461e      	mov	r6, r3
 800feb0:	46a0      	mov	r8, r4
 800feb2:	2e00      	cmp	r6, #0
 800feb4:	ddb8      	ble.n	800fe28 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 800feb6:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 800feba:	9901      	ldr	r1, [sp, #4]
 800febc:	1417      	asrs	r7, r2, #16
 800febe:	ea4f 4920 	mov.w	r9, r0, asr #16
 800fec2:	fb0a 1707 	mla	r7, sl, r7, r1
 800fec6:	9902      	ldr	r1, [sp, #8]
 800fec8:	f817 7009 	ldrb.w	r7, [r7, r9]
 800fecc:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 800fed0:	f828 7b02 	strh.w	r7, [r8], #2
 800fed4:	4470      	add	r0, lr
 800fed6:	4462      	add	r2, ip
 800fed8:	3e01      	subs	r6, #1
 800feda:	e7ea      	b.n	800feb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 800fedc:	ea5f 4920 	movs.w	r9, r0, asr #16
 800fee0:	d417      	bmi.n	800ff12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 800fee2:	68ae      	ldr	r6, [r5, #8]
 800fee4:	454e      	cmp	r6, r9
 800fee6:	dd14      	ble.n	800ff12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 800fee8:	ea5f 4a22 	movs.w	sl, r2, asr #16
 800feec:	d411      	bmi.n	800ff12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 800feee:	68ef      	ldr	r7, [r5, #12]
 800fef0:	4557      	cmp	r7, sl
 800fef2:	dd0e      	ble.n	800ff12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 800fef4:	9f01      	ldr	r7, [sp, #4]
 800fef6:	b236      	sxth	r6, r6
 800fef8:	fb0a 7606 	mla	r6, sl, r6, r7
 800fefc:	9f02      	ldr	r7, [sp, #8]
 800fefe:	f816 6009 	ldrb.w	r6, [r6, r9]
 800ff02:	f06f 0101 	mvn.w	r1, #1
 800ff06:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 800ff0a:	fb01 f608 	mul.w	r6, r1, r8
 800ff0e:	9903      	ldr	r1, [sp, #12]
 800ff10:	538f      	strh	r7, [r1, r6]
 800ff12:	4470      	add	r0, lr
 800ff14:	4462      	add	r2, ip
 800ff16:	f108 38ff 	add.w	r8, r8, #4294967295
 800ff1a:	e782      	b.n	800fe22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 800ff1c:	b005      	add	sp, #20
 800ff1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ff22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800ff22:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff26:	b087      	sub	sp, #28
 800ff28:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 800ff2a:	9205      	str	r2, [sp, #20]
 800ff2c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800ff30:	9203      	str	r2, [sp, #12]
 800ff32:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 800ff36:	9102      	str	r1, [sp, #8]
 800ff38:	6861      	ldr	r1, [r4, #4]
 800ff3a:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 800ff3e:	fb01 2000 	mla	r0, r1, r0, r2
 800ff42:	6822      	ldr	r2, [r4, #0]
 800ff44:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 800ff48:	9200      	str	r2, [sp, #0]
 800ff4a:	f8dc 2000 	ldr.w	r2, [ip]
 800ff4e:	9204      	str	r2, [sp, #16]
 800ff50:	f8dc 2004 	ldr.w	r2, [ip, #4]
 800ff54:	3204      	adds	r2, #4
 800ff56:	9201      	str	r2, [sp, #4]
 800ff58:	9a03      	ldr	r2, [sp, #12]
 800ff5a:	43d5      	mvns	r5, r2
 800ff5c:	b2ed      	uxtb	r5, r5
 800ff5e:	9a02      	ldr	r2, [sp, #8]
 800ff60:	2a00      	cmp	r2, #0
 800ff62:	dc03      	bgt.n	800ff6c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 800ff64:	9a05      	ldr	r2, [sp, #20]
 800ff66:	2a00      	cmp	r2, #0
 800ff68:	f340 812c 	ble.w	80101c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 800ff6c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 800ff6e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 800ff72:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 800ff76:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 800ff7a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800ff7c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 800ff80:	2b00      	cmp	r3, #0
 800ff82:	dd10      	ble.n	800ffa6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 800ff84:	140c      	asrs	r4, r1, #16
 800ff86:	d405      	bmi.n	800ff94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800ff88:	4574      	cmp	r4, lr
 800ff8a:	da03      	bge.n	800ff94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800ff8c:	1414      	asrs	r4, r2, #16
 800ff8e:	d401      	bmi.n	800ff94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800ff90:	42bc      	cmp	r4, r7
 800ff92:	db09      	blt.n	800ffa8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 800ff94:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 800ff96:	9800      	ldr	r0, [sp, #0]
 800ff98:	4421      	add	r1, r4
 800ff9a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 800ff9c:	3002      	adds	r0, #2
 800ff9e:	4422      	add	r2, r4
 800ffa0:	3b01      	subs	r3, #1
 800ffa2:	9000      	str	r0, [sp, #0]
 800ffa4:	e7ec      	b.n	800ff80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 800ffa6:	d071      	beq.n	801008c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 800ffa8:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 800ffaa:	1e5c      	subs	r4, r3, #1
 800ffac:	fb06 1604 	mla	r6, r6, r4, r1
 800ffb0:	1436      	asrs	r6, r6, #16
 800ffb2:	d45d      	bmi.n	8010070 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800ffb4:	4576      	cmp	r6, lr
 800ffb6:	da5b      	bge.n	8010070 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800ffb8:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 800ffba:	fb06 2404 	mla	r4, r6, r4, r2
 800ffbe:	1424      	asrs	r4, r4, #16
 800ffc0:	d456      	bmi.n	8010070 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800ffc2:	42bc      	cmp	r4, r7
 800ffc4:	da54      	bge.n	8010070 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800ffc6:	f8dd 9000 	ldr.w	r9, [sp]
 800ffca:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 800ffce:	4698      	mov	r8, r3
 800ffd0:	f1b8 0f00 	cmp.w	r8, #0
 800ffd4:	dd54      	ble.n	8010080 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 800ffd6:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 800ffda:	9804      	ldr	r0, [sp, #16]
 800ffdc:	1414      	asrs	r4, r2, #16
 800ffde:	fb07 0404 	mla	r4, r7, r4, r0
 800ffe2:	140e      	asrs	r6, r1, #16
 800ffe4:	9801      	ldr	r0, [sp, #4]
 800ffe6:	f814 e006 	ldrb.w	lr, [r4, r6]
 800ffea:	f8b9 4000 	ldrh.w	r4, [r9]
 800ffee:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 800fff2:	eb00 0b0e 	add.w	fp, r0, lr
 800fff6:	1227      	asrs	r7, r4, #8
 800fff8:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800fffc:	f89b b001 	ldrb.w	fp, [fp, #1]
 8010000:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8010004:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8010006:	fb16 f60a 	smulbb	r6, r6, sl
 801000a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801000e:	fb07 6705 	mla	r7, r7, r5, r6
 8010012:	10e6      	asrs	r6, r4, #3
 8010014:	00e4      	lsls	r4, r4, #3
 8010016:	b2e4      	uxtb	r4, r4
 8010018:	fb1b fb0a 	smulbb	fp, fp, sl
 801001c:	fb14 f405 	smulbb	r4, r4, r5
 8010020:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8010024:	b2bf      	uxth	r7, r7
 8010026:	fb06 b605 	mla	r6, r6, r5, fp
 801002a:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801002e:	b2b6      	uxth	r6, r6
 8010030:	fa1f fe8e 	uxth.w	lr, lr
 8010034:	1c7c      	adds	r4, r7, #1
 8010036:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801003a:	f106 0b01 	add.w	fp, r6, #1
 801003e:	f10e 0401 	add.w	r4, lr, #1
 8010042:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8010046:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801004a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801004e:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8010052:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8010056:	4327      	orrs	r7, r4
 8010058:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801005c:	4401      	add	r1, r0
 801005e:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8010060:	ea47 070b 	orr.w	r7, r7, fp
 8010064:	f829 7b02 	strh.w	r7, [r9], #2
 8010068:	4402      	add	r2, r0
 801006a:	f108 38ff 	add.w	r8, r8, #4294967295
 801006e:	e7af      	b.n	800ffd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8010070:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8010074:	f04f 0e00 	mov.w	lr, #0
 8010078:	eb03 040e 	add.w	r4, r3, lr
 801007c:	2c00      	cmp	r4, #0
 801007e:	dc43      	bgt.n	8010108 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8010080:	9a00      	ldr	r2, [sp, #0]
 8010082:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010086:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801008a:	9300      	str	r3, [sp, #0]
 801008c:	9b02      	ldr	r3, [sp, #8]
 801008e:	2b00      	cmp	r3, #0
 8010090:	f340 8098 	ble.w	80101c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8010094:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010098:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801009c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80100a0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80100a2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80100a6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80100aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80100ae:	eef0 6a62 	vmov.f32	s13, s5
 80100b2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80100b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80100ba:	ee77 2a62 	vsub.f32	s5, s14, s5
 80100be:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 80100c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80100c6:	eef0 6a43 	vmov.f32	s13, s6
 80100ca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80100ce:	ee12 2a90 	vmov	r2, s5
 80100d2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80100d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80100da:	ee13 2a10 	vmov	r2, s6
 80100de:	9313      	str	r3, [sp, #76]	@ 0x4c
 80100e0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80100e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80100e6:	9314      	str	r3, [sp, #80]	@ 0x50
 80100e8:	9b02      	ldr	r3, [sp, #8]
 80100ea:	9a05      	ldr	r2, [sp, #20]
 80100ec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80100f0:	3b01      	subs	r3, #1
 80100f2:	9302      	str	r3, [sp, #8]
 80100f4:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 80100f8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80100fa:	eeb0 3a67 	vmov.f32	s6, s15
 80100fe:	bf08      	it	eq
 8010100:	4613      	moveq	r3, r2
 8010102:	eef0 2a47 	vmov.f32	s5, s14
 8010106:	e72a      	b.n	800ff5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8010108:	140f      	asrs	r7, r1, #16
 801010a:	d454      	bmi.n	80101b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801010c:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8010110:	42be      	cmp	r6, r7
 8010112:	dd50      	ble.n	80101b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8010114:	ea5f 4822 	movs.w	r8, r2, asr #16
 8010118:	d44d      	bmi.n	80101b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801011a:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801011e:	4544      	cmp	r4, r8
 8010120:	dd49      	ble.n	80101b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8010122:	9c04      	ldr	r4, [sp, #16]
 8010124:	b236      	sxth	r6, r6
 8010126:	fb08 4606 	mla	r6, r8, r6, r4
 801012a:	f06f 0001 	mvn.w	r0, #1
 801012e:	f816 8007 	ldrb.w	r8, [r6, r7]
 8010132:	9c01      	ldr	r4, [sp, #4]
 8010134:	fb00 fa0e 	mul.w	sl, r0, lr
 8010138:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801013c:	9800      	ldr	r0, [sp, #0]
 801013e:	eb04 0b08 	add.w	fp, r4, r8
 8010142:	f830 400a 	ldrh.w	r4, [r0, sl]
 8010146:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801014a:	9801      	ldr	r0, [sp, #4]
 801014c:	f89b b001 	ldrb.w	fp, [fp, #1]
 8010150:	f810 8008 	ldrb.w	r8, [r0, r8]
 8010154:	9800      	ldr	r0, [sp, #0]
 8010156:	1227      	asrs	r7, r4, #8
 8010158:	fb16 f609 	smulbb	r6, r6, r9
 801015c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8010160:	fb07 6705 	mla	r7, r7, r5, r6
 8010164:	10e6      	asrs	r6, r4, #3
 8010166:	00e4      	lsls	r4, r4, #3
 8010168:	b2e4      	uxtb	r4, r4
 801016a:	fb1b fb09 	smulbb	fp, fp, r9
 801016e:	fb14 f405 	smulbb	r4, r4, r5
 8010172:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8010176:	b2bf      	uxth	r7, r7
 8010178:	fb06 b605 	mla	r6, r6, r5, fp
 801017c:	fb08 4809 	mla	r8, r8, r9, r4
 8010180:	b2b6      	uxth	r6, r6
 8010182:	fa1f f888 	uxth.w	r8, r8
 8010186:	1c7c      	adds	r4, r7, #1
 8010188:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801018c:	f106 0b01 	add.w	fp, r6, #1
 8010190:	f108 0401 	add.w	r4, r8, #1
 8010194:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8010198:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801019c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80101a0:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80101a4:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80101a8:	4327      	orrs	r7, r4
 80101aa:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80101ae:	ea47 070b 	orr.w	r7, r7, fp
 80101b2:	f820 700a 	strh.w	r7, [r0, sl]
 80101b6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80101b8:	4401      	add	r1, r0
 80101ba:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80101bc:	f10e 3eff 	add.w	lr, lr, #4294967295
 80101c0:	4402      	add	r2, r0
 80101c2:	e759      	b.n	8010078 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80101c4:	b007      	add	sp, #28
 80101c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080101cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80101cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80101d0:	b085      	sub	sp, #20
 80101d2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80101d6:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80101d8:	9203      	str	r2, [sp, #12]
 80101da:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80101de:	6870      	ldr	r0, [r6, #4]
 80101e0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80101e2:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 80101e6:	686f      	ldr	r7, [r5, #4]
 80101e8:	9101      	str	r1, [sp, #4]
 80101ea:	fb00 2404 	mla	r4, r0, r4, r2
 80101ee:	6832      	ldr	r2, [r6, #0]
 80101f0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80101f4:	682a      	ldr	r2, [r5, #0]
 80101f6:	9202      	str	r2, [sp, #8]
 80101f8:	3704      	adds	r7, #4
 80101fa:	9a01      	ldr	r2, [sp, #4]
 80101fc:	2a00      	cmp	r2, #0
 80101fe:	dc03      	bgt.n	8010208 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8010200:	9a03      	ldr	r2, [sp, #12]
 8010202:	2a00      	cmp	r2, #0
 8010204:	f340 80cc 	ble.w	80103a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8010208:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801020a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801020e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8010212:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8010216:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8010218:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801021c:	2b00      	cmp	r3, #0
 801021e:	dd0d      	ble.n	801023c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8010220:	1406      	asrs	r6, r0, #16
 8010222:	d405      	bmi.n	8010230 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8010224:	454e      	cmp	r6, r9
 8010226:	da03      	bge.n	8010230 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8010228:	1416      	asrs	r6, r2, #16
 801022a:	d401      	bmi.n	8010230 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801022c:	4546      	cmp	r6, r8
 801022e:	db06      	blt.n	801023e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010230:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 8010232:	4460      	add	r0, ip
 8010234:	4432      	add	r2, r6
 8010236:	3b01      	subs	r3, #1
 8010238:	3402      	adds	r4, #2
 801023a:	e7ef      	b.n	801021c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801023c:	d00f      	beq.n	801025e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801023e:	1e5e      	subs	r6, r3, #1
 8010240:	fb0c 0e06 	mla	lr, ip, r6, r0
 8010244:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8010248:	d543      	bpl.n	80102d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801024a:	4698      	mov	r8, r3
 801024c:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8010250:	f1b8 0f00 	cmp.w	r8, #0
 8010254:	dc71      	bgt.n	801033a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8010256:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801025a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801025e:	9b01      	ldr	r3, [sp, #4]
 8010260:	2b00      	cmp	r3, #0
 8010262:	f340 809d 	ble.w	80103a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8010266:	ee30 0a04 	vadd.f32	s0, s0, s8
 801026a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801026e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010272:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8010274:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010278:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801027c:	eeb0 6a62 	vmov.f32	s12, s5
 8010280:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010284:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010288:	ee77 2a62 	vsub.f32	s5, s14, s5
 801028c:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8010290:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010294:	eeb0 6a43 	vmov.f32	s12, s6
 8010298:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801029c:	ee12 2a90 	vmov	r2, s5
 80102a0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80102a4:	fb92 fcf3 	sdiv	ip, r2, r3
 80102a8:	ee13 2a10 	vmov	r2, s6
 80102ac:	fb92 f3f3 	sdiv	r3, r2, r3
 80102b0:	9312      	str	r3, [sp, #72]	@ 0x48
 80102b2:	9b01      	ldr	r3, [sp, #4]
 80102b4:	9a03      	ldr	r2, [sp, #12]
 80102b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80102ba:	3b01      	subs	r3, #1
 80102bc:	9301      	str	r3, [sp, #4]
 80102be:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80102c2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80102c4:	eeb0 3a67 	vmov.f32	s6, s15
 80102c8:	bf08      	it	eq
 80102ca:	4613      	moveq	r3, r2
 80102cc:	eef0 2a47 	vmov.f32	s5, s14
 80102d0:	e793      	b.n	80101fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80102d2:	45ce      	cmp	lr, r9
 80102d4:	dab9      	bge.n	801024a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80102d6:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80102d8:	fb01 2606 	mla	r6, r1, r6, r2
 80102dc:	1436      	asrs	r6, r6, #16
 80102de:	d4b4      	bmi.n	801024a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80102e0:	4546      	cmp	r6, r8
 80102e2:	dab2      	bge.n	801024a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80102e4:	4698      	mov	r8, r3
 80102e6:	46a2      	mov	sl, r4
 80102e8:	f1b8 0f00 	cmp.w	r8, #0
 80102ec:	ddb3      	ble.n	8010256 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80102ee:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80102f2:	9902      	ldr	r1, [sp, #8]
 80102f4:	1416      	asrs	r6, r2, #16
 80102f6:	fb09 1606 	mla	r6, r9, r6, r1
 80102fa:	ea4f 4e20 	mov.w	lr, r0, asr #16
 80102fe:	492a      	ldr	r1, [pc, #168]	@ (80103a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8010300:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8010304:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8010308:	eb07 0b0e 	add.w	fp, r7, lr
 801030c:	4460      	add	r0, ip
 801030e:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8010312:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8010316:	00f6      	lsls	r6, r6, #3
 8010318:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801031c:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8010320:	ea49 0606 	orr.w	r6, r9, r6
 8010324:	f817 900e 	ldrb.w	r9, [r7, lr]
 8010328:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801032a:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801032e:	f82a 6b02 	strh.w	r6, [sl], #2
 8010332:	440a      	add	r2, r1
 8010334:	f108 38ff 	add.w	r8, r8, #4294967295
 8010338:	e7d6      	b.n	80102e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801033a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801033e:	d429      	bmi.n	8010394 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010340:	68ae      	ldr	r6, [r5, #8]
 8010342:	454e      	cmp	r6, r9
 8010344:	dd26      	ble.n	8010394 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010346:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801034a:	d423      	bmi.n	8010394 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801034c:	68e9      	ldr	r1, [r5, #12]
 801034e:	4559      	cmp	r1, fp
 8010350:	dd20      	ble.n	8010394 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010352:	9902      	ldr	r1, [sp, #8]
 8010354:	fa0f fe86 	sxth.w	lr, r6
 8010358:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801035c:	f06f 0101 	mvn.w	r1, #1
 8010360:	f81e e009 	ldrb.w	lr, [lr, r9]
 8010364:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8010368:	eb07 060e 	add.w	r6, r7, lr
 801036c:	fb01 f908 	mul.w	r9, r1, r8
 8010370:	f896 b002 	ldrb.w	fp, [r6, #2]
 8010374:	7876      	ldrb	r6, [r6, #1]
 8010376:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 801037a:	00f6      	lsls	r6, r6, #3
 801037c:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8010380:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8010384:	ea4b 0606 	orr.w	r6, fp, r6
 8010388:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801038c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8010390:	f82a 6009 	strh.w	r6, [sl, r9]
 8010394:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8010396:	4460      	add	r0, ip
 8010398:	440a      	add	r2, r1
 801039a:	f108 38ff 	add.w	r8, r8, #4294967295
 801039e:	e757      	b.n	8010250 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80103a0:	b005      	add	sp, #20
 80103a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80103a6:	bf00      	nop
 80103a8:	fffff800 	.word	0xfffff800

080103ac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80103ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80103b0:	b087      	sub	sp, #28
 80103b2:	468b      	mov	fp, r1
 80103b4:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80103b6:	9204      	str	r2, [sp, #16]
 80103b8:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80103bc:	9205      	str	r2, [sp, #20]
 80103be:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 80103c2:	6841      	ldr	r1, [r0, #4]
 80103c4:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 80103c8:	fb01 2404 	mla	r4, r1, r4, r2
 80103cc:	6802      	ldr	r2, [r0, #0]
 80103ce:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80103d2:	f8dc 2000 	ldr.w	r2, [ip]
 80103d6:	9201      	str	r2, [sp, #4]
 80103d8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80103dc:	3204      	adds	r2, #4
 80103de:	9202      	str	r2, [sp, #8]
 80103e0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80103e4:	f1bb 0f00 	cmp.w	fp, #0
 80103e8:	dc03      	bgt.n	80103f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80103ea:	9a04      	ldr	r2, [sp, #16]
 80103ec:	2a00      	cmp	r2, #0
 80103ee:	f340 8138 	ble.w	8010662 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80103f2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80103f4:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80103f8:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 80103fc:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8010400:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8010402:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8010406:	2b00      	cmp	r3, #0
 8010408:	dd0e      	ble.n	8010428 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801040a:	1402      	asrs	r2, r0, #16
 801040c:	d405      	bmi.n	801041a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801040e:	42ba      	cmp	r2, r7
 8010410:	da03      	bge.n	801041a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8010412:	140a      	asrs	r2, r1, #16
 8010414:	d401      	bmi.n	801041a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8010416:	42b2      	cmp	r2, r6
 8010418:	db07      	blt.n	801042a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801041a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801041c:	4410      	add	r0, r2
 801041e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8010420:	3b01      	subs	r3, #1
 8010422:	4411      	add	r1, r2
 8010424:	3402      	adds	r4, #2
 8010426:	e7ee      	b.n	8010406 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8010428:	d019      	beq.n	801045e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801042a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801042c:	1e5a      	subs	r2, r3, #1
 801042e:	fb05 0502 	mla	r5, r5, r2, r0
 8010432:	142d      	asrs	r5, r5, #16
 8010434:	d409      	bmi.n	801044a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010436:	42bd      	cmp	r5, r7
 8010438:	da07      	bge.n	801044a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801043a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801043c:	fb05 1202 	mla	r2, r5, r2, r1
 8010440:	1412      	asrs	r2, r2, #16
 8010442:	d402      	bmi.n	801044a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010444:	42b2      	cmp	r2, r6
 8010446:	f2c0 80ac 	blt.w	80105a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801044a:	f04f 0e00 	mov.w	lr, #0
 801044e:	eb03 020e 	add.w	r2, r3, lr
 8010452:	2a00      	cmp	r2, #0
 8010454:	dc3e      	bgt.n	80104d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8010456:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801045a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801045e:	f1bb 0f00 	cmp.w	fp, #0
 8010462:	f340 80fe 	ble.w	8010662 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8010466:	ee30 0a04 	vadd.f32	s0, s0, s8
 801046a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801046e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010472:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8010474:	f1bb 0b01 	subs.w	fp, fp, #1
 8010478:	ee31 1a05 	vadd.f32	s2, s2, s10
 801047c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010480:	eeb0 6a62 	vmov.f32	s12, s5
 8010484:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010488:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801048c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010490:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8010494:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010498:	eeb0 6a43 	vmov.f32	s12, s6
 801049c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80104a0:	ee12 2a90 	vmov	r2, s5
 80104a4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80104a8:	fb92 f3f3 	sdiv	r3, r2, r3
 80104ac:	ee13 2a10 	vmov	r2, s6
 80104b0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80104b4:	9313      	str	r3, [sp, #76]	@ 0x4c
 80104b6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80104b8:	fb92 f3f3 	sdiv	r3, r2, r3
 80104bc:	9a04      	ldr	r2, [sp, #16]
 80104be:	9314      	str	r3, [sp, #80]	@ 0x50
 80104c0:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80104c4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80104c6:	eeb0 3a67 	vmov.f32	s6, s15
 80104ca:	bf08      	it	eq
 80104cc:	4613      	moveq	r3, r2
 80104ce:	eef0 2a47 	vmov.f32	s5, s14
 80104d2:	e787      	b.n	80103e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80104d4:	1406      	asrs	r6, r0, #16
 80104d6:	d45d      	bmi.n	8010594 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80104d8:	f8dc 5008 	ldr.w	r5, [ip, #8]
 80104dc:	42b5      	cmp	r5, r6
 80104de:	dd59      	ble.n	8010594 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80104e0:	140f      	asrs	r7, r1, #16
 80104e2:	d457      	bmi.n	8010594 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80104e4:	f8dc 200c 	ldr.w	r2, [ip, #12]
 80104e8:	42ba      	cmp	r2, r7
 80104ea:	dd53      	ble.n	8010594 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80104ec:	9a01      	ldr	r2, [sp, #4]
 80104ee:	b22d      	sxth	r5, r5
 80104f0:	fb07 2505 	mla	r5, r7, r5, r2
 80104f4:	5daa      	ldrb	r2, [r5, r6]
 80104f6:	9d02      	ldr	r5, [sp, #8]
 80104f8:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80104fc:	0e2e      	lsrs	r6, r5, #24
 80104fe:	d049      	beq.n	8010594 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010500:	f06f 0201 	mvn.w	r2, #1
 8010504:	fb02 f20e 	mul.w	r2, r2, lr
 8010508:	9203      	str	r2, [sp, #12]
 801050a:	f834 8002 	ldrh.w	r8, [r4, r2]
 801050e:	9a05      	ldr	r2, [sp, #20]
 8010510:	4356      	muls	r6, r2
 8010512:	1c72      	adds	r2, r6, #1
 8010514:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010518:	1212      	asrs	r2, r2, #8
 801051a:	fa1f f982 	uxth.w	r9, r2
 801051e:	ea4f 2728 	mov.w	r7, r8, asr #8
 8010522:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010526:	43d2      	mvns	r2, r2
 8010528:	b2d2      	uxtb	r2, r2
 801052a:	fb16 f609 	smulbb	r6, r6, r9
 801052e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8010532:	fb07 6702 	mla	r7, r7, r2, r6
 8010536:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801053a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801053e:	b2ed      	uxtb	r5, r5
 8010540:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010544:	fa5f f888 	uxtb.w	r8, r8
 8010548:	fb15 f509 	smulbb	r5, r5, r9
 801054c:	fb08 5502 	mla	r5, r8, r2, r5
 8010550:	b2bf      	uxth	r7, r7
 8010552:	fb1a fa09 	smulbb	sl, sl, r9
 8010556:	b2ad      	uxth	r5, r5
 8010558:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801055c:	fb06 a602 	mla	r6, r6, r2, sl
 8010560:	1c7a      	adds	r2, r7, #1
 8010562:	f105 0a01 	add.w	sl, r5, #1
 8010566:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801056a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801056e:	b2b6      	uxth	r6, r6
 8010570:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010574:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8010578:	ea4a 0707 	orr.w	r7, sl, r7
 801057c:	f106 0a01 	add.w	sl, r6, #1
 8010580:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010584:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010588:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801058c:	9a03      	ldr	r2, [sp, #12]
 801058e:	ea47 070a 	orr.w	r7, r7, sl
 8010592:	52a7      	strh	r7, [r4, r2]
 8010594:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8010596:	4410      	add	r0, r2
 8010598:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801059a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801059e:	4411      	add	r1, r2
 80105a0:	e755      	b.n	801044e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80105a2:	f04f 0800 	mov.w	r8, #0
 80105a6:	eba3 0208 	sub.w	r2, r3, r8
 80105aa:	2a00      	cmp	r2, #0
 80105ac:	f77f af53 	ble.w	8010456 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80105b0:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 80105b4:	9f01      	ldr	r7, [sp, #4]
 80105b6:	140a      	asrs	r2, r1, #16
 80105b8:	1405      	asrs	r5, r0, #16
 80105ba:	fb06 7202 	mla	r2, r6, r2, r7
 80105be:	5d52      	ldrb	r2, [r2, r5]
 80105c0:	9d02      	ldr	r5, [sp, #8]
 80105c2:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80105c6:	0e2e      	lsrs	r6, r5, #24
 80105c8:	d044      	beq.n	8010654 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80105ca:	9a05      	ldr	r2, [sp, #20]
 80105cc:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80105d0:	4356      	muls	r6, r2
 80105d2:	1c72      	adds	r2, r6, #1
 80105d4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80105d8:	1212      	asrs	r2, r2, #8
 80105da:	fa1f f982 	uxth.w	r9, r2
 80105de:	ea4f 272e 	mov.w	r7, lr, asr #8
 80105e2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80105e6:	43d2      	mvns	r2, r2
 80105e8:	b2d2      	uxtb	r2, r2
 80105ea:	fb16 f609 	smulbb	r6, r6, r9
 80105ee:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80105f2:	fb07 6702 	mla	r7, r7, r2, r6
 80105f6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80105fa:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80105fe:	b2ed      	uxtb	r5, r5
 8010600:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010604:	fa5f fe8e 	uxtb.w	lr, lr
 8010608:	fb15 f509 	smulbb	r5, r5, r9
 801060c:	fb0e 5502 	mla	r5, lr, r2, r5
 8010610:	b2bf      	uxth	r7, r7
 8010612:	fb1a fa09 	smulbb	sl, sl, r9
 8010616:	b2ad      	uxth	r5, r5
 8010618:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801061c:	fb06 a602 	mla	r6, r6, r2, sl
 8010620:	1c7a      	adds	r2, r7, #1
 8010622:	f105 0a01 	add.w	sl, r5, #1
 8010626:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801062a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801062e:	b2b6      	uxth	r6, r6
 8010630:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010634:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8010638:	ea4a 0707 	orr.w	r7, sl, r7
 801063c:	f106 0a01 	add.w	sl, r6, #1
 8010640:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010644:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010648:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801064c:	ea47 070a 	orr.w	r7, r7, sl
 8010650:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8010654:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8010656:	4410      	add	r0, r2
 8010658:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801065a:	f108 0801 	add.w	r8, r8, #1
 801065e:	4411      	add	r1, r2
 8010660:	e7a1      	b.n	80105a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8010662:	b007      	add	sp, #28
 8010664:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010668 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010668:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801066c:	b085      	sub	sp, #20
 801066e:	468b      	mov	fp, r1
 8010670:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8010672:	9203      	str	r2, [sp, #12]
 8010674:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8010678:	6841      	ldr	r1, [r0, #4]
 801067a:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 801067e:	fb01 2404 	mla	r4, r1, r4, r2
 8010682:	6802      	ldr	r2, [r0, #0]
 8010684:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010688:	f8de 2000 	ldr.w	r2, [lr]
 801068c:	9200      	str	r2, [sp, #0]
 801068e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8010692:	3204      	adds	r2, #4
 8010694:	9201      	str	r2, [sp, #4]
 8010696:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801069a:	f1bb 0f00 	cmp.w	fp, #0
 801069e:	dc03      	bgt.n	80106a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80106a0:	9a03      	ldr	r2, [sp, #12]
 80106a2:	2a00      	cmp	r2, #0
 80106a4:	f340 8153 	ble.w	801094e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80106a8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80106aa:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80106ae:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80106b2:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80106b6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80106b8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80106bc:	2b00      	cmp	r3, #0
 80106be:	dd0e      	ble.n	80106de <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80106c0:	1408      	asrs	r0, r1, #16
 80106c2:	d405      	bmi.n	80106d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80106c4:	42b8      	cmp	r0, r7
 80106c6:	da03      	bge.n	80106d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80106c8:	1410      	asrs	r0, r2, #16
 80106ca:	d401      	bmi.n	80106d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80106cc:	42b0      	cmp	r0, r6
 80106ce:	db07      	blt.n	80106e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80106d0:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80106d2:	4401      	add	r1, r0
 80106d4:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80106d6:	3b01      	subs	r3, #1
 80106d8:	4402      	add	r2, r0
 80106da:	3402      	adds	r4, #2
 80106dc:	e7ee      	b.n	80106bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80106de:	d017      	beq.n	8010710 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80106e0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80106e2:	1e58      	subs	r0, r3, #1
 80106e4:	fb05 1500 	mla	r5, r5, r0, r1
 80106e8:	142d      	asrs	r5, r5, #16
 80106ea:	d409      	bmi.n	8010700 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80106ec:	42bd      	cmp	r5, r7
 80106ee:	da07      	bge.n	8010700 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80106f0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80106f2:	fb05 2000 	mla	r0, r5, r0, r2
 80106f6:	1400      	asrs	r0, r0, #16
 80106f8:	d402      	bmi.n	8010700 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80106fa:	42b0      	cmp	r0, r6
 80106fc:	f2c0 80bc 	blt.w	8010878 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8010700:	2600      	movs	r6, #0
 8010702:	1998      	adds	r0, r3, r6
 8010704:	2800      	cmp	r0, #0
 8010706:	dc3e      	bgt.n	8010786 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8010708:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801070c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010710:	f1bb 0f00 	cmp.w	fp, #0
 8010714:	f340 811b 	ble.w	801094e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8010718:	ee30 0a04 	vadd.f32	s0, s0, s8
 801071c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010720:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010724:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8010726:	f1bb 0b01 	subs.w	fp, fp, #1
 801072a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801072e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010732:	eeb0 6a62 	vmov.f32	s12, s5
 8010736:	ee61 7a27 	vmul.f32	s15, s2, s15
 801073a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801073e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010742:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8010746:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801074a:	eeb0 6a43 	vmov.f32	s12, s6
 801074e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010752:	ee12 2a90 	vmov	r2, s5
 8010756:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801075a:	fb92 f3f3 	sdiv	r3, r2, r3
 801075e:	ee13 2a10 	vmov	r2, s6
 8010762:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010766:	9311      	str	r3, [sp, #68]	@ 0x44
 8010768:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801076a:	fb92 f3f3 	sdiv	r3, r2, r3
 801076e:	9a03      	ldr	r2, [sp, #12]
 8010770:	9312      	str	r3, [sp, #72]	@ 0x48
 8010772:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8010776:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8010778:	eeb0 3a67 	vmov.f32	s6, s15
 801077c:	bf08      	it	eq
 801077e:	4613      	moveq	r3, r2
 8010780:	eef0 2a47 	vmov.f32	s5, s14
 8010784:	e789      	b.n	801069a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8010786:	140f      	asrs	r7, r1, #16
 8010788:	d426      	bmi.n	80107d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801078a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801078e:	42bd      	cmp	r5, r7
 8010790:	dd22      	ble.n	80107d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010792:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8010796:	d41f      	bmi.n	80107d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010798:	f8de 000c 	ldr.w	r0, [lr, #12]
 801079c:	4560      	cmp	r0, ip
 801079e:	dd1b      	ble.n	80107d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80107a0:	9800      	ldr	r0, [sp, #0]
 80107a2:	b22d      	sxth	r5, r5
 80107a4:	fb0c 0505 	mla	r5, ip, r5, r0
 80107a8:	5de8      	ldrb	r0, [r5, r7]
 80107aa:	9d01      	ldr	r5, [sp, #4]
 80107ac:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 80107b0:	0e07      	lsrs	r7, r0, #24
 80107b2:	2fff      	cmp	r7, #255	@ 0xff
 80107b4:	d116      	bne.n	80107e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80107b6:	f06f 0501 	mvn.w	r5, #1
 80107ba:	fb05 f706 	mul.w	r7, r5, r6
 80107be:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 80107c2:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80107c6:	0945      	lsrs	r5, r0, #5
 80107c8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80107cc:	ea4c 0505 	orr.w	r5, ip, r5
 80107d0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80107d4:	4305      	orrs	r5, r0
 80107d6:	53e5      	strh	r5, [r4, r7]
 80107d8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80107da:	4401      	add	r1, r0
 80107dc:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80107de:	3e01      	subs	r6, #1
 80107e0:	4402      	add	r2, r0
 80107e2:	e78e      	b.n	8010702 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80107e4:	b2fd      	uxtb	r5, r7
 80107e6:	2f00      	cmp	r7, #0
 80107e8:	d0f6      	beq.n	80107d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80107ea:	f06f 0701 	mvn.w	r7, #1
 80107ee:	4377      	muls	r7, r6
 80107f0:	fa1f f985 	uxth.w	r9, r5
 80107f4:	f834 8007 	ldrh.w	r8, [r4, r7]
 80107f8:	9702      	str	r7, [sp, #8]
 80107fa:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80107fe:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8010802:	43ed      	mvns	r5, r5
 8010804:	b2ed      	uxtb	r5, r5
 8010806:	fb17 f709 	smulbb	r7, r7, r9
 801080a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801080e:	fb0c 7c05 	mla	ip, ip, r5, r7
 8010812:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8010816:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801081a:	b2c0      	uxtb	r0, r0
 801081c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010820:	fa5f f888 	uxtb.w	r8, r8
 8010824:	fb10 f009 	smulbb	r0, r0, r9
 8010828:	fb08 0005 	mla	r0, r8, r5, r0
 801082c:	b280      	uxth	r0, r0
 801082e:	fa1f fc8c 	uxth.w	ip, ip
 8010832:	fb1a fa09 	smulbb	sl, sl, r9
 8010836:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801083a:	fb07 a705 	mla	r7, r7, r5, sl
 801083e:	f100 0a01 	add.w	sl, r0, #1
 8010842:	f10c 0501 	add.w	r5, ip, #1
 8010846:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801084a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801084e:	b2bf      	uxth	r7, r7
 8010850:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010854:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8010858:	ea4a 0c0c 	orr.w	ip, sl, ip
 801085c:	f107 0a01 	add.w	sl, r7, #1
 8010860:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8010864:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010868:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801086c:	9802      	ldr	r0, [sp, #8]
 801086e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010872:	f824 c000 	strh.w	ip, [r4, r0]
 8010876:	e7af      	b.n	80107d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010878:	f04f 0800 	mov.w	r8, #0
 801087c:	eba3 0008 	sub.w	r0, r3, r8
 8010880:	2800      	cmp	r0, #0
 8010882:	f77f af41 	ble.w	8010708 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8010886:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801088a:	9f00      	ldr	r7, [sp, #0]
 801088c:	1410      	asrs	r0, r2, #16
 801088e:	140d      	asrs	r5, r1, #16
 8010890:	fb06 7000 	mla	r0, r6, r0, r7
 8010894:	5d40      	ldrb	r0, [r0, r5]
 8010896:	9d01      	ldr	r5, [sp, #4]
 8010898:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801089c:	0e2e      	lsrs	r6, r5, #24
 801089e:	2eff      	cmp	r6, #255	@ 0xff
 80108a0:	d112      	bne.n	80108c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 80108a2:	482c      	ldr	r0, [pc, #176]	@ (8010954 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 80108a4:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80108a8:	0968      	lsrs	r0, r5, #5
 80108aa:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80108ae:	4330      	orrs	r0, r6
 80108b0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80108b4:	4328      	orrs	r0, r5
 80108b6:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 80108ba:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80108bc:	4401      	add	r1, r0
 80108be:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80108c0:	f108 0801 	add.w	r8, r8, #1
 80108c4:	4402      	add	r2, r0
 80108c6:	e7d9      	b.n	801087c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80108c8:	b2f0      	uxtb	r0, r6
 80108ca:	2e00      	cmp	r6, #0
 80108cc:	d0f5      	beq.n	80108ba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80108ce:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 80108d2:	fa1f f980 	uxth.w	r9, r0
 80108d6:	ea4f 272c 	mov.w	r7, ip, asr #8
 80108da:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80108de:	43c0      	mvns	r0, r0
 80108e0:	b2c0      	uxtb	r0, r0
 80108e2:	fb16 f609 	smulbb	r6, r6, r9
 80108e6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80108ea:	fb07 6700 	mla	r7, r7, r0, r6
 80108ee:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80108f2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80108f6:	b2ed      	uxtb	r5, r5
 80108f8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80108fc:	fa5f fc8c 	uxtb.w	ip, ip
 8010900:	fb15 f509 	smulbb	r5, r5, r9
 8010904:	fb0c 5500 	mla	r5, ip, r0, r5
 8010908:	b2bf      	uxth	r7, r7
 801090a:	fb1a fa09 	smulbb	sl, sl, r9
 801090e:	b2ad      	uxth	r5, r5
 8010910:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8010914:	fb06 a600 	mla	r6, r6, r0, sl
 8010918:	1c78      	adds	r0, r7, #1
 801091a:	f105 0a01 	add.w	sl, r5, #1
 801091e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8010922:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010926:	b2b6      	uxth	r6, r6
 8010928:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801092c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8010930:	ea4a 0707 	orr.w	r7, sl, r7
 8010934:	f106 0a01 	add.w	sl, r6, #1
 8010938:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801093c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010940:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8010944:	ea47 070a 	orr.w	r7, r7, sl
 8010948:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801094c:	e7b5      	b.n	80108ba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801094e:	b005      	add	sp, #20
 8010950:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010954:	fffff800 	.word	0xfffff800

08010958 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010958:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801095c:	b087      	sub	sp, #28
 801095e:	468b      	mov	fp, r1
 8010960:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8010962:	9204      	str	r2, [sp, #16]
 8010964:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8010968:	9205      	str	r2, [sp, #20]
 801096a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 801096e:	6861      	ldr	r1, [r4, #4]
 8010970:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8010974:	fb01 2000 	mla	r0, r1, r0, r2
 8010978:	6822      	ldr	r2, [r4, #0]
 801097a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801097e:	f8de 2000 	ldr.w	r2, [lr]
 8010982:	9201      	str	r2, [sp, #4]
 8010984:	f8de 2004 	ldr.w	r2, [lr, #4]
 8010988:	9202      	str	r2, [sp, #8]
 801098a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801098e:	f1bb 0f00 	cmp.w	fp, #0
 8010992:	dc03      	bgt.n	801099c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8010994:	9a04      	ldr	r2, [sp, #16]
 8010996:	2a00      	cmp	r2, #0
 8010998:	f340 8142 	ble.w	8010c20 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801099c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801099e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80109a2:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80109a6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80109aa:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80109ac:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80109b0:	2b00      	cmp	r3, #0
 80109b2:	dd0e      	ble.n	80109d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80109b4:	140c      	asrs	r4, r1, #16
 80109b6:	d405      	bmi.n	80109c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80109b8:	42bc      	cmp	r4, r7
 80109ba:	da03      	bge.n	80109c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80109bc:	1414      	asrs	r4, r2, #16
 80109be:	d401      	bmi.n	80109c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80109c0:	42b4      	cmp	r4, r6
 80109c2:	db07      	blt.n	80109d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80109c4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80109c6:	4421      	add	r1, r4
 80109c8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80109ca:	3b01      	subs	r3, #1
 80109cc:	4422      	add	r2, r4
 80109ce:	3002      	adds	r0, #2
 80109d0:	e7ee      	b.n	80109b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80109d2:	d019      	beq.n	8010a08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80109d4:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80109d6:	1e5c      	subs	r4, r3, #1
 80109d8:	fb05 1504 	mla	r5, r5, r4, r1
 80109dc:	142d      	asrs	r5, r5, #16
 80109de:	d409      	bmi.n	80109f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80109e0:	42bd      	cmp	r5, r7
 80109e2:	da07      	bge.n	80109f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80109e4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80109e6:	fb05 2404 	mla	r4, r5, r4, r2
 80109ea:	1424      	asrs	r4, r4, #16
 80109ec:	d402      	bmi.n	80109f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80109ee:	42b4      	cmp	r4, r6
 80109f0:	f2c0 80b1 	blt.w	8010b56 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80109f4:	f04f 0800 	mov.w	r8, #0
 80109f8:	eb03 0408 	add.w	r4, r3, r8
 80109fc:	2c00      	cmp	r4, #0
 80109fe:	dc3e      	bgt.n	8010a7e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8010a00:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010a04:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010a08:	f1bb 0f00 	cmp.w	fp, #0
 8010a0c:	f340 8108 	ble.w	8010c20 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8010a10:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010a14:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010a18:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010a1c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8010a1e:	f1bb 0b01 	subs.w	fp, fp, #1
 8010a22:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010a26:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010a2a:	eeb0 6a62 	vmov.f32	s12, s5
 8010a2e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010a32:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010a36:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010a3a:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8010a3e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010a42:	eeb0 6a43 	vmov.f32	s12, s6
 8010a46:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010a4a:	ee12 2a90 	vmov	r2, s5
 8010a4e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010a52:	fb92 f3f3 	sdiv	r3, r2, r3
 8010a56:	ee13 2a10 	vmov	r2, s6
 8010a5a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010a5e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8010a60:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8010a62:	fb92 f3f3 	sdiv	r3, r2, r3
 8010a66:	9a04      	ldr	r2, [sp, #16]
 8010a68:	9314      	str	r3, [sp, #80]	@ 0x50
 8010a6a:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8010a6e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8010a70:	eeb0 3a67 	vmov.f32	s6, s15
 8010a74:	bf08      	it	eq
 8010a76:	4613      	moveq	r3, r2
 8010a78:	eef0 2a47 	vmov.f32	s5, s14
 8010a7c:	e787      	b.n	801098e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8010a7e:	140e      	asrs	r6, r1, #16
 8010a80:	d462      	bmi.n	8010b48 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010a82:	f8de 5008 	ldr.w	r5, [lr, #8]
 8010a86:	42b5      	cmp	r5, r6
 8010a88:	dd5e      	ble.n	8010b48 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010a8a:	1417      	asrs	r7, r2, #16
 8010a8c:	d45c      	bmi.n	8010b48 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010a8e:	f8de 400c 	ldr.w	r4, [lr, #12]
 8010a92:	42bc      	cmp	r4, r7
 8010a94:	dd58      	ble.n	8010b48 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010a96:	b22d      	sxth	r5, r5
 8010a98:	fb07 6505 	mla	r5, r7, r5, r6
 8010a9c:	9c02      	ldr	r4, [sp, #8]
 8010a9e:	5d66      	ldrb	r6, [r4, r5]
 8010aa0:	2e00      	cmp	r6, #0
 8010aa2:	d051      	beq.n	8010b48 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010aa4:	9c01      	ldr	r4, [sp, #4]
 8010aa6:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8010aaa:	f06f 0401 	mvn.w	r4, #1
 8010aae:	fb04 f408 	mul.w	r4, r4, r8
 8010ab2:	9403      	str	r4, [sp, #12]
 8010ab4:	5b05      	ldrh	r5, [r0, r4]
 8010ab6:	9c05      	ldr	r4, [sp, #20]
 8010ab8:	4366      	muls	r6, r4
 8010aba:	1c74      	adds	r4, r6, #1
 8010abc:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8010ac0:	1224      	asrs	r4, r4, #8
 8010ac2:	b2a7      	uxth	r7, r4
 8010ac4:	122e      	asrs	r6, r5, #8
 8010ac6:	43e4      	mvns	r4, r4
 8010ac8:	b2e4      	uxtb	r4, r4
 8010aca:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8010ace:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8010ad2:	fb16 f604 	smulbb	r6, r6, r4
 8010ad6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010ada:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8010ade:	00ed      	lsls	r5, r5, #3
 8010ae0:	fb0c 6c07 	mla	ip, ip, r7, r6
 8010ae4:	b2ed      	uxtb	r5, r5
 8010ae6:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8010aea:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8010aee:	fb15 f504 	smulbb	r5, r5, r4
 8010af2:	fa5f f989 	uxtb.w	r9, r9
 8010af6:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8010afa:	fb09 5507 	mla	r5, r9, r7, r5
 8010afe:	fb1a fa04 	smulbb	sl, sl, r4
 8010b02:	fa1f fc8c 	uxth.w	ip, ip
 8010b06:	b2ad      	uxth	r5, r5
 8010b08:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8010b0c:	fb06 a607 	mla	r6, r6, r7, sl
 8010b10:	f10c 0401 	add.w	r4, ip, #1
 8010b14:	f105 0a01 	add.w	sl, r5, #1
 8010b18:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8010b1c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010b20:	b2b6      	uxth	r6, r6
 8010b22:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010b26:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8010b2a:	ea4a 0c0c 	orr.w	ip, sl, ip
 8010b2e:	f106 0a01 	add.w	sl, r6, #1
 8010b32:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010b36:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010b3a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8010b3e:	9c03      	ldr	r4, [sp, #12]
 8010b40:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010b44:	f820 c004 	strh.w	ip, [r0, r4]
 8010b48:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8010b4a:	4421      	add	r1, r4
 8010b4c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8010b4e:	f108 38ff 	add.w	r8, r8, #4294967295
 8010b52:	4422      	add	r2, r4
 8010b54:	e750      	b.n	80109f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8010b56:	f04f 0900 	mov.w	r9, #0
 8010b5a:	eba3 0409 	sub.w	r4, r3, r9
 8010b5e:	2c00      	cmp	r4, #0
 8010b60:	f77f af4e 	ble.w	8010a00 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8010b64:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8010b68:	140d      	asrs	r5, r1, #16
 8010b6a:	1414      	asrs	r4, r2, #16
 8010b6c:	fb06 5404 	mla	r4, r6, r4, r5
 8010b70:	9d02      	ldr	r5, [sp, #8]
 8010b72:	5d2e      	ldrb	r6, [r5, r4]
 8010b74:	2e00      	cmp	r6, #0
 8010b76:	d04c      	beq.n	8010c12 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8010b78:	9d01      	ldr	r5, [sp, #4]
 8010b7a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8010b7e:	9c05      	ldr	r4, [sp, #20]
 8010b80:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8010b84:	4366      	muls	r6, r4
 8010b86:	1c74      	adds	r4, r6, #1
 8010b88:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8010b8c:	1224      	asrs	r4, r4, #8
 8010b8e:	b2a7      	uxth	r7, r4
 8010b90:	122e      	asrs	r6, r5, #8
 8010b92:	43e4      	mvns	r4, r4
 8010b94:	b2e4      	uxtb	r4, r4
 8010b96:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8010b9a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8010b9e:	fb16 f604 	smulbb	r6, r6, r4
 8010ba2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010ba6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8010baa:	00ed      	lsls	r5, r5, #3
 8010bac:	fb0c 6c07 	mla	ip, ip, r7, r6
 8010bb0:	b2ed      	uxtb	r5, r5
 8010bb2:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8010bb6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010bba:	fb15 f504 	smulbb	r5, r5, r4
 8010bbe:	fa5f f888 	uxtb.w	r8, r8
 8010bc2:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8010bc6:	fb08 5507 	mla	r5, r8, r7, r5
 8010bca:	fb1a fa04 	smulbb	sl, sl, r4
 8010bce:	fa1f fc8c 	uxth.w	ip, ip
 8010bd2:	b2ad      	uxth	r5, r5
 8010bd4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8010bd8:	fb06 a607 	mla	r6, r6, r7, sl
 8010bdc:	f10c 0401 	add.w	r4, ip, #1
 8010be0:	f105 0a01 	add.w	sl, r5, #1
 8010be4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8010be8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010bec:	b2b6      	uxth	r6, r6
 8010bee:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010bf2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8010bf6:	ea4a 0c0c 	orr.w	ip, sl, ip
 8010bfa:	f106 0a01 	add.w	sl, r6, #1
 8010bfe:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010c02:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010c06:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8010c0a:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010c0e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8010c12:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8010c14:	4421      	add	r1, r4
 8010c16:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8010c18:	f109 0901 	add.w	r9, r9, #1
 8010c1c:	4422      	add	r2, r4
 8010c1e:	e79c      	b.n	8010b5a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8010c20:	b007      	add	sp, #28
 8010c22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010c26 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010c26:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010c2a:	b085      	sub	sp, #20
 8010c2c:	468b      	mov	fp, r1
 8010c2e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8010c30:	9203      	str	r2, [sp, #12]
 8010c32:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 8010c36:	6861      	ldr	r1, [r4, #4]
 8010c38:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8010c3c:	fb01 2000 	mla	r0, r1, r0, r2
 8010c40:	6822      	ldr	r2, [r4, #0]
 8010c42:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8010c46:	f8d8 2000 	ldr.w	r2, [r8]
 8010c4a:	9200      	str	r2, [sp, #0]
 8010c4c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8010c50:	9201      	str	r2, [sp, #4]
 8010c52:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8010c56:	f1bb 0f00 	cmp.w	fp, #0
 8010c5a:	dc03      	bgt.n	8010c64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8010c5c:	9a03      	ldr	r2, [sp, #12]
 8010c5e:	2a00      	cmp	r2, #0
 8010c60:	f340 8146 	ble.w	8010ef0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8010c64:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8010c66:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8010c6a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8010c6e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8010c72:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8010c74:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8010c78:	2b00      	cmp	r3, #0
 8010c7a:	dd0e      	ble.n	8010c9a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8010c7c:	140c      	asrs	r4, r1, #16
 8010c7e:	d405      	bmi.n	8010c8c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010c80:	42bc      	cmp	r4, r7
 8010c82:	da03      	bge.n	8010c8c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010c84:	1414      	asrs	r4, r2, #16
 8010c86:	d401      	bmi.n	8010c8c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010c88:	42b4      	cmp	r4, r6
 8010c8a:	db07      	blt.n	8010c9c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8010c8c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8010c8e:	4421      	add	r1, r4
 8010c90:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8010c92:	3b01      	subs	r3, #1
 8010c94:	4422      	add	r2, r4
 8010c96:	3002      	adds	r0, #2
 8010c98:	e7ee      	b.n	8010c78 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8010c9a:	d017      	beq.n	8010ccc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8010c9c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8010c9e:	1e5c      	subs	r4, r3, #1
 8010ca0:	fb05 1504 	mla	r5, r5, r4, r1
 8010ca4:	142d      	asrs	r5, r5, #16
 8010ca6:	d409      	bmi.n	8010cbc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8010ca8:	42bd      	cmp	r5, r7
 8010caa:	da07      	bge.n	8010cbc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8010cac:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8010cae:	fb05 2404 	mla	r4, r5, r4, r2
 8010cb2:	1424      	asrs	r4, r4, #16
 8010cb4:	d402      	bmi.n	8010cbc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8010cb6:	42b4      	cmp	r4, r6
 8010cb8:	f2c0 80b3 	blt.w	8010e22 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8010cbc:	2600      	movs	r6, #0
 8010cbe:	199c      	adds	r4, r3, r6
 8010cc0:	2c00      	cmp	r4, #0
 8010cc2:	dc3e      	bgt.n	8010d42 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8010cc4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010cc8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010ccc:	f1bb 0f00 	cmp.w	fp, #0
 8010cd0:	f340 810e 	ble.w	8010ef0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8010cd4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010cd8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010cdc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010ce0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8010ce2:	f1bb 0b01 	subs.w	fp, fp, #1
 8010ce6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010cea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010cee:	eeb0 6a62 	vmov.f32	s12, s5
 8010cf2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010cf6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010cfa:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010cfe:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8010d02:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010d06:	eeb0 6a43 	vmov.f32	s12, s6
 8010d0a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010d0e:	ee12 2a90 	vmov	r2, s5
 8010d12:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010d16:	fb92 f3f3 	sdiv	r3, r2, r3
 8010d1a:	ee13 2a10 	vmov	r2, s6
 8010d1e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010d22:	9311      	str	r3, [sp, #68]	@ 0x44
 8010d24:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8010d26:	fb92 f3f3 	sdiv	r3, r2, r3
 8010d2a:	9a03      	ldr	r2, [sp, #12]
 8010d2c:	9312      	str	r3, [sp, #72]	@ 0x48
 8010d2e:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8010d32:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8010d34:	eeb0 3a67 	vmov.f32	s6, s15
 8010d38:	bf08      	it	eq
 8010d3a:	4613      	moveq	r3, r2
 8010d3c:	eef0 2a47 	vmov.f32	s5, s14
 8010d40:	e789      	b.n	8010c56 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8010d42:	140f      	asrs	r7, r1, #16
 8010d44:	d418      	bmi.n	8010d78 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8010d46:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8010d4a:	42bd      	cmp	r5, r7
 8010d4c:	dd14      	ble.n	8010d78 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8010d4e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8010d52:	d411      	bmi.n	8010d78 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8010d54:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8010d58:	4564      	cmp	r4, ip
 8010d5a:	dd0d      	ble.n	8010d78 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8010d5c:	b22d      	sxth	r5, r5
 8010d5e:	fb0c 7505 	mla	r5, ip, r5, r7
 8010d62:	9c01      	ldr	r4, [sp, #4]
 8010d64:	5d64      	ldrb	r4, [r4, r5]
 8010d66:	2cff      	cmp	r4, #255	@ 0xff
 8010d68:	d10c      	bne.n	8010d84 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8010d6a:	9c00      	ldr	r4, [sp, #0]
 8010d6c:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8010d70:	f06f 0401 	mvn.w	r4, #1
 8010d74:	4374      	muls	r4, r6
 8010d76:	5305      	strh	r5, [r0, r4]
 8010d78:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8010d7a:	4421      	add	r1, r4
 8010d7c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8010d7e:	3e01      	subs	r6, #1
 8010d80:	4422      	add	r2, r4
 8010d82:	e79c      	b.n	8010cbe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010d84:	2c00      	cmp	r4, #0
 8010d86:	d0f7      	beq.n	8010d78 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8010d88:	9f00      	ldr	r7, [sp, #0]
 8010d8a:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8010d8e:	f06f 0501 	mvn.w	r5, #1
 8010d92:	4375      	muls	r5, r6
 8010d94:	9502      	str	r5, [sp, #8]
 8010d96:	5b45      	ldrh	r5, [r0, r5]
 8010d98:	fa1f fc84 	uxth.w	ip, r4
 8010d9c:	122f      	asrs	r7, r5, #8
 8010d9e:	43e4      	mvns	r4, r4
 8010da0:	b2e4      	uxtb	r4, r4
 8010da2:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8010da6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8010daa:	fb17 f704 	smulbb	r7, r7, r4
 8010dae:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010db2:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8010db6:	00ed      	lsls	r5, r5, #3
 8010db8:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8010dbc:	b2ed      	uxtb	r5, r5
 8010dbe:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8010dc2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8010dc6:	fb15 f504 	smulbb	r5, r5, r4
 8010dca:	fa5f f989 	uxtb.w	r9, r9
 8010dce:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8010dd2:	fb09 550c 	mla	r5, r9, ip, r5
 8010dd6:	fb1a fa04 	smulbb	sl, sl, r4
 8010dda:	fa1f fe8e 	uxth.w	lr, lr
 8010dde:	b2ad      	uxth	r5, r5
 8010de0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8010de4:	fb07 a70c 	mla	r7, r7, ip, sl
 8010de8:	f10e 0401 	add.w	r4, lr, #1
 8010dec:	f105 0a01 	add.w	sl, r5, #1
 8010df0:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8010df4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010df8:	b2bf      	uxth	r7, r7
 8010dfa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010dfe:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8010e02:	ea4a 0e0e 	orr.w	lr, sl, lr
 8010e06:	f107 0a01 	add.w	sl, r7, #1
 8010e0a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8010e0e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010e12:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8010e16:	9c02      	ldr	r4, [sp, #8]
 8010e18:	ea4e 0e0a 	orr.w	lr, lr, sl
 8010e1c:	f820 e004 	strh.w	lr, [r0, r4]
 8010e20:	e7aa      	b.n	8010d78 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8010e22:	f04f 0900 	mov.w	r9, #0
 8010e26:	eba3 0409 	sub.w	r4, r3, r9
 8010e2a:	2c00      	cmp	r4, #0
 8010e2c:	f77f af4a 	ble.w	8010cc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010e30:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8010e34:	1414      	asrs	r4, r2, #16
 8010e36:	140d      	asrs	r5, r1, #16
 8010e38:	fb06 5504 	mla	r5, r6, r4, r5
 8010e3c:	9c01      	ldr	r4, [sp, #4]
 8010e3e:	5d64      	ldrb	r4, [r4, r5]
 8010e40:	2cff      	cmp	r4, #255	@ 0xff
 8010e42:	d10b      	bne.n	8010e5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8010e44:	9c00      	ldr	r4, [sp, #0]
 8010e46:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8010e4a:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8010e4e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8010e50:	4421      	add	r1, r4
 8010e52:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8010e54:	f109 0901 	add.w	r9, r9, #1
 8010e58:	4422      	add	r2, r4
 8010e5a:	e7e4      	b.n	8010e26 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8010e5c:	2c00      	cmp	r4, #0
 8010e5e:	d0f6      	beq.n	8010e4e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8010e60:	9e00      	ldr	r6, [sp, #0]
 8010e62:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8010e66:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8010e6a:	b2a7      	uxth	r7, r4
 8010e6c:	122e      	asrs	r6, r5, #8
 8010e6e:	43e4      	mvns	r4, r4
 8010e70:	b2e4      	uxtb	r4, r4
 8010e72:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8010e76:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8010e7a:	fb16 f604 	smulbb	r6, r6, r4
 8010e7e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010e82:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8010e86:	00ed      	lsls	r5, r5, #3
 8010e88:	fb0c 6c07 	mla	ip, ip, r7, r6
 8010e8c:	b2ed      	uxtb	r5, r5
 8010e8e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8010e92:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010e96:	fb15 f504 	smulbb	r5, r5, r4
 8010e9a:	fa5f fe8e 	uxtb.w	lr, lr
 8010e9e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8010ea2:	fb0e 5507 	mla	r5, lr, r7, r5
 8010ea6:	fb1a fa04 	smulbb	sl, sl, r4
 8010eaa:	fa1f fc8c 	uxth.w	ip, ip
 8010eae:	b2ad      	uxth	r5, r5
 8010eb0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8010eb4:	fb06 a607 	mla	r6, r6, r7, sl
 8010eb8:	f10c 0401 	add.w	r4, ip, #1
 8010ebc:	f105 0a01 	add.w	sl, r5, #1
 8010ec0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8010ec4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010ec8:	b2b6      	uxth	r6, r6
 8010eca:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010ece:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8010ed2:	ea4a 0c0c 	orr.w	ip, sl, ip
 8010ed6:	f106 0a01 	add.w	sl, r6, #1
 8010eda:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010ede:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010ee2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8010ee6:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010eea:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8010eee:	e7ae      	b.n	8010e4e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8010ef0:	b005      	add	sp, #20
 8010ef2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010ef6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010ef6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010efa:	b085      	sub	sp, #20
 8010efc:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8010efe:	9203      	str	r2, [sp, #12]
 8010f00:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 8010f04:	9201      	str	r2, [sp, #4]
 8010f06:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8010f0a:	9100      	str	r1, [sp, #0]
 8010f0c:	6841      	ldr	r1, [r0, #4]
 8010f0e:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8010f12:	fb01 2404 	mla	r4, r1, r4, r2
 8010f16:	6802      	ldr	r2, [r0, #0]
 8010f18:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010f1c:	f8de 2000 	ldr.w	r2, [lr]
 8010f20:	9202      	str	r2, [sp, #8]
 8010f22:	9a01      	ldr	r2, [sp, #4]
 8010f24:	43d6      	mvns	r6, r2
 8010f26:	b2f6      	uxtb	r6, r6
 8010f28:	9a00      	ldr	r2, [sp, #0]
 8010f2a:	2a00      	cmp	r2, #0
 8010f2c:	dc03      	bgt.n	8010f36 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8010f2e:	9a03      	ldr	r2, [sp, #12]
 8010f30:	2a00      	cmp	r2, #0
 8010f32:	f340 8124 	ble.w	801117e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8010f36:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8010f38:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8010f3c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8010f40:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8010f44:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8010f46:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8010f4a:	2b00      	cmp	r3, #0
 8010f4c:	dd0e      	ble.n	8010f6c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8010f4e:	1408      	asrs	r0, r1, #16
 8010f50:	d405      	bmi.n	8010f5e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010f52:	4560      	cmp	r0, ip
 8010f54:	da03      	bge.n	8010f5e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010f56:	1410      	asrs	r0, r2, #16
 8010f58:	d401      	bmi.n	8010f5e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010f5a:	42b8      	cmp	r0, r7
 8010f5c:	db07      	blt.n	8010f6e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8010f5e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8010f60:	4401      	add	r1, r0
 8010f62:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8010f64:	3b01      	subs	r3, #1
 8010f66:	4402      	add	r2, r0
 8010f68:	3402      	adds	r4, #2
 8010f6a:	e7ee      	b.n	8010f4a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8010f6c:	d06e      	beq.n	801104c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8010f6e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8010f70:	1e58      	subs	r0, r3, #1
 8010f72:	fb05 1500 	mla	r5, r5, r0, r1
 8010f76:	142d      	asrs	r5, r5, #16
 8010f78:	d45c      	bmi.n	8011034 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8010f7a:	4565      	cmp	r5, ip
 8010f7c:	da5a      	bge.n	8011034 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8010f7e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8010f80:	fb05 2000 	mla	r0, r5, r0, r2
 8010f84:	1400      	asrs	r0, r0, #16
 8010f86:	d455      	bmi.n	8011034 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8010f88:	42b8      	cmp	r0, r7
 8010f8a:	da53      	bge.n	8011034 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8010f8c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8010f90:	4699      	mov	r9, r3
 8010f92:	46a2      	mov	sl, r4
 8010f94:	f1b9 0f00 	cmp.w	r9, #0
 8010f98:	dd54      	ble.n	8011044 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8010f9a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8010f9e:	140d      	asrs	r5, r1, #16
 8010fa0:	1410      	asrs	r0, r2, #16
 8010fa2:	fb07 5000 	mla	r0, r7, r0, r5
 8010fa6:	9d02      	ldr	r5, [sp, #8]
 8010fa8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8010fac:	f8ba 5000 	ldrh.w	r5, [sl]
 8010fb0:	122f      	asrs	r7, r5, #8
 8010fb2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8010fb6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8010fba:	fb17 f706 	smulbb	r7, r7, r6
 8010fbe:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8010fc2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8010fc6:	00ed      	lsls	r5, r5, #3
 8010fc8:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8010fcc:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8010fd0:	10c7      	asrs	r7, r0, #3
 8010fd2:	b2ed      	uxtb	r5, r5
 8010fd4:	00c0      	lsls	r0, r0, #3
 8010fd6:	fb18 f806 	smulbb	r8, r8, r6
 8010fda:	fb15 f506 	smulbb	r5, r5, r6
 8010fde:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8010fe2:	b2c0      	uxtb	r0, r0
 8010fe4:	fa1f fc8c 	uxth.w	ip, ip
 8010fe8:	fb07 870b 	mla	r7, r7, fp, r8
 8010fec:	fb00 500b 	mla	r0, r0, fp, r5
 8010ff0:	b280      	uxth	r0, r0
 8010ff2:	b2bf      	uxth	r7, r7
 8010ff4:	f10c 0501 	add.w	r5, ip, #1
 8010ff8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8010ffc:	f107 0801 	add.w	r8, r7, #1
 8011000:	1c45      	adds	r5, r0, #1
 8011002:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8011006:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801100a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801100c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8011010:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011014:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8011018:	ea45 0c0c 	orr.w	ip, r5, ip
 801101c:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8011020:	4401      	add	r1, r0
 8011022:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8011024:	ea4c 0c08 	orr.w	ip, ip, r8
 8011028:	f82a cb02 	strh.w	ip, [sl], #2
 801102c:	4402      	add	r2, r0
 801102e:	f109 39ff 	add.w	r9, r9, #4294967295
 8011032:	e7af      	b.n	8010f94 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011034:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8011038:	f04f 0800 	mov.w	r8, #0
 801103c:	eb03 0008 	add.w	r0, r3, r8
 8011040:	2800      	cmp	r0, #0
 8011042:	dc41      	bgt.n	80110c8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8011044:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011048:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801104c:	9b00      	ldr	r3, [sp, #0]
 801104e:	2b00      	cmp	r3, #0
 8011050:	f340 8095 	ble.w	801117e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8011054:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011058:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801105c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8011060:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011062:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011066:	ee31 1a05 	vadd.f32	s2, s2, s10
 801106a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801106e:	eef0 6a62 	vmov.f32	s13, s5
 8011072:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011076:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801107a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801107e:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 8011082:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011086:	eef0 6a43 	vmov.f32	s13, s6
 801108a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801108e:	ee12 2a90 	vmov	r2, s5
 8011092:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011096:	fb92 f3f3 	sdiv	r3, r2, r3
 801109a:	ee13 2a10 	vmov	r2, s6
 801109e:	9311      	str	r3, [sp, #68]	@ 0x44
 80110a0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80110a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80110a6:	9312      	str	r3, [sp, #72]	@ 0x48
 80110a8:	9b00      	ldr	r3, [sp, #0]
 80110aa:	9a03      	ldr	r2, [sp, #12]
 80110ac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80110b0:	3b01      	subs	r3, #1
 80110b2:	9300      	str	r3, [sp, #0]
 80110b4:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 80110b8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80110ba:	eeb0 3a67 	vmov.f32	s6, s15
 80110be:	bf08      	it	eq
 80110c0:	4613      	moveq	r3, r2
 80110c2:	eef0 2a47 	vmov.f32	s5, s14
 80110c6:	e72f      	b.n	8010f28 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80110c8:	140f      	asrs	r7, r1, #16
 80110ca:	d451      	bmi.n	8011170 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80110cc:	f8de 5008 	ldr.w	r5, [lr, #8]
 80110d0:	42bd      	cmp	r5, r7
 80110d2:	dd4d      	ble.n	8011170 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80110d4:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80110d8:	d44a      	bmi.n	8011170 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80110da:	f8de 000c 	ldr.w	r0, [lr, #12]
 80110de:	4560      	cmp	r0, ip
 80110e0:	dd46      	ble.n	8011170 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80110e2:	b22d      	sxth	r5, r5
 80110e4:	fb0c 7505 	mla	r5, ip, r5, r7
 80110e8:	9802      	ldr	r0, [sp, #8]
 80110ea:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 80110ee:	f06f 0501 	mvn.w	r5, #1
 80110f2:	fb05 fb08 	mul.w	fp, r5, r8
 80110f6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80110fa:	f834 500b 	ldrh.w	r5, [r4, fp]
 80110fe:	122f      	asrs	r7, r5, #8
 8011100:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8011104:	fb17 f706 	smulbb	r7, r7, r6
 8011108:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801110c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8011110:	00ed      	lsls	r5, r5, #3
 8011112:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8011116:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801111a:	10c7      	asrs	r7, r0, #3
 801111c:	b2ed      	uxtb	r5, r5
 801111e:	00c0      	lsls	r0, r0, #3
 8011120:	fb19 f906 	smulbb	r9, r9, r6
 8011124:	fb15 f506 	smulbb	r5, r5, r6
 8011128:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801112c:	b2c0      	uxtb	r0, r0
 801112e:	fa1f fc8c 	uxth.w	ip, ip
 8011132:	fb07 970a 	mla	r7, r7, sl, r9
 8011136:	fb00 500a 	mla	r0, r0, sl, r5
 801113a:	b2bf      	uxth	r7, r7
 801113c:	b280      	uxth	r0, r0
 801113e:	f10c 0501 	add.w	r5, ip, #1
 8011142:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011146:	f107 0901 	add.w	r9, r7, #1
 801114a:	1c45      	adds	r5, r0, #1
 801114c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8011150:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8011154:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8011158:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801115c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8011160:	ea45 0c0c 	orr.w	ip, r5, ip
 8011164:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8011168:	ea4c 0c09 	orr.w	ip, ip, r9
 801116c:	f824 c00b 	strh.w	ip, [r4, fp]
 8011170:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8011172:	4401      	add	r1, r0
 8011174:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8011176:	f108 38ff 	add.w	r8, r8, #4294967295
 801117a:	4402      	add	r2, r0
 801117c:	e75e      	b.n	801103c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801117e:	b005      	add	sp, #20
 8011180:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011184 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011184:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011188:	b085      	sub	sp, #20
 801118a:	4693      	mov	fp, r2
 801118c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801118e:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8011190:	6870      	ldr	r0, [r6, #4]
 8011192:	9101      	str	r1, [sp, #4]
 8011194:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8011198:	fb00 2404 	mla	r4, r0, r4, r2
 801119c:	6832      	ldr	r2, [r6, #0]
 801119e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 80111a2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80111a6:	682a      	ldr	r2, [r5, #0]
 80111a8:	9202      	str	r2, [sp, #8]
 80111aa:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80111ae:	9a01      	ldr	r2, [sp, #4]
 80111b0:	2a00      	cmp	r2, #0
 80111b2:	dc03      	bgt.n	80111bc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80111b4:	f1bb 0f00 	cmp.w	fp, #0
 80111b8:	f340 809a 	ble.w	80112f0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80111bc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80111be:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80111c2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80111c6:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80111ca:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80111cc:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80111d0:	2b00      	cmp	r3, #0
 80111d2:	dd0c      	ble.n	80111ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80111d4:	1406      	asrs	r6, r0, #16
 80111d6:	d405      	bmi.n	80111e4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80111d8:	454e      	cmp	r6, r9
 80111da:	da03      	bge.n	80111e4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80111dc:	1416      	asrs	r6, r2, #16
 80111de:	d401      	bmi.n	80111e4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80111e0:	4546      	cmp	r6, r8
 80111e2:	db05      	blt.n	80111f0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80111e4:	4470      	add	r0, lr
 80111e6:	4462      	add	r2, ip
 80111e8:	3b01      	subs	r3, #1
 80111ea:	3402      	adds	r4, #2
 80111ec:	e7f0      	b.n	80111d0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80111ee:	d00f      	beq.n	8011210 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80111f0:	1e5e      	subs	r6, r3, #1
 80111f2:	fb0e 0706 	mla	r7, lr, r6, r0
 80111f6:	143f      	asrs	r7, r7, #16
 80111f8:	d541      	bpl.n	801127e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 80111fa:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80111fe:	4698      	mov	r8, r3
 8011200:	9603      	str	r6, [sp, #12]
 8011202:	f1b8 0f00 	cmp.w	r8, #0
 8011206:	dc56      	bgt.n	80112b6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8011208:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801120c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011210:	9b01      	ldr	r3, [sp, #4]
 8011212:	2b00      	cmp	r3, #0
 8011214:	dd6c      	ble.n	80112f0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8011216:	ee30 0a04 	vadd.f32	s0, s0, s8
 801121a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801121e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011222:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011224:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011228:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801122c:	eeb0 6a62 	vmov.f32	s12, s5
 8011230:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011234:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011238:	ee77 2a62 	vsub.f32	s5, s14, s5
 801123c:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8011240:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011244:	eeb0 6a43 	vmov.f32	s12, s6
 8011248:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801124c:	ee12 2a90 	vmov	r2, s5
 8011250:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011254:	fb92 fef3 	sdiv	lr, r2, r3
 8011258:	ee13 2a10 	vmov	r2, s6
 801125c:	fb92 fcf3 	sdiv	ip, r2, r3
 8011260:	9b01      	ldr	r3, [sp, #4]
 8011262:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011266:	3b01      	subs	r3, #1
 8011268:	9301      	str	r3, [sp, #4]
 801126a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801126e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011270:	eeb0 3a67 	vmov.f32	s6, s15
 8011274:	bf08      	it	eq
 8011276:	465b      	moveq	r3, fp
 8011278:	eef0 2a47 	vmov.f32	s5, s14
 801127c:	e797      	b.n	80111ae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801127e:	454f      	cmp	r7, r9
 8011280:	dabb      	bge.n	80111fa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011282:	fb0c 2606 	mla	r6, ip, r6, r2
 8011286:	1436      	asrs	r6, r6, #16
 8011288:	d4b7      	bmi.n	80111fa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801128a:	4546      	cmp	r6, r8
 801128c:	dab5      	bge.n	80111fa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801128e:	461e      	mov	r6, r3
 8011290:	46a0      	mov	r8, r4
 8011292:	2e00      	cmp	r6, #0
 8011294:	ddb8      	ble.n	8011208 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8011296:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801129a:	9902      	ldr	r1, [sp, #8]
 801129c:	1417      	asrs	r7, r2, #16
 801129e:	ea4f 4920 	mov.w	r9, r0, asr #16
 80112a2:	fb0a 9707 	mla	r7, sl, r7, r9
 80112a6:	4470      	add	r0, lr
 80112a8:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80112ac:	f828 7b02 	strh.w	r7, [r8], #2
 80112b0:	4462      	add	r2, ip
 80112b2:	3e01      	subs	r6, #1
 80112b4:	e7ed      	b.n	8011292 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80112b6:	ea5f 4920 	movs.w	r9, r0, asr #16
 80112ba:	d414      	bmi.n	80112e6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80112bc:	68ae      	ldr	r6, [r5, #8]
 80112be:	454e      	cmp	r6, r9
 80112c0:	dd11      	ble.n	80112e6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80112c2:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80112c6:	d40e      	bmi.n	80112e6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80112c8:	68ef      	ldr	r7, [r5, #12]
 80112ca:	4557      	cmp	r7, sl
 80112cc:	dd0b      	ble.n	80112e6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80112ce:	b236      	sxth	r6, r6
 80112d0:	fb0a 9606 	mla	r6, sl, r6, r9
 80112d4:	9f02      	ldr	r7, [sp, #8]
 80112d6:	f06f 0101 	mvn.w	r1, #1
 80112da:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80112de:	fb01 f608 	mul.w	r6, r1, r8
 80112e2:	9903      	ldr	r1, [sp, #12]
 80112e4:	538f      	strh	r7, [r1, r6]
 80112e6:	4470      	add	r0, lr
 80112e8:	4462      	add	r2, ip
 80112ea:	f108 38ff 	add.w	r8, r8, #4294967295
 80112ee:	e788      	b.n	8011202 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80112f0:	b005      	add	sp, #20
 80112f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080112f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80112f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80112fa:	b087      	sub	sp, #28
 80112fc:	468b      	mov	fp, r1
 80112fe:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8011300:	9203      	str	r2, [sp, #12]
 8011302:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8011306:	9204      	str	r2, [sp, #16]
 8011308:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 801130c:	6841      	ldr	r1, [r0, #4]
 801130e:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8011312:	fb01 2505 	mla	r5, r1, r5, r2
 8011316:	6802      	ldr	r2, [r0, #0]
 8011318:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801131c:	f8d9 2000 	ldr.w	r2, [r9]
 8011320:	9201      	str	r2, [sp, #4]
 8011322:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8011326:	f1bb 0f00 	cmp.w	fp, #0
 801132a:	dc03      	bgt.n	8011334 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801132c:	9a03      	ldr	r2, [sp, #12]
 801132e:	2a00      	cmp	r2, #0
 8011330:	f340 8159 	ble.w	80115e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8011334:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8011336:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801133a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801133e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8011342:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8011344:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8011348:	2b00      	cmp	r3, #0
 801134a:	dd0e      	ble.n	801136a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801134c:	1402      	asrs	r2, r0, #16
 801134e:	d405      	bmi.n	801135c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011350:	42ba      	cmp	r2, r7
 8011352:	da03      	bge.n	801135c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011354:	140a      	asrs	r2, r1, #16
 8011356:	d401      	bmi.n	801135c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011358:	42b2      	cmp	r2, r6
 801135a:	db07      	blt.n	801136c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801135c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801135e:	4410      	add	r0, r2
 8011360:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8011362:	3b01      	subs	r3, #1
 8011364:	4411      	add	r1, r2
 8011366:	3502      	adds	r5, #2
 8011368:	e7ee      	b.n	8011348 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801136a:	d017      	beq.n	801139c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801136c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801136e:	1e5a      	subs	r2, r3, #1
 8011370:	fb04 0402 	mla	r4, r4, r2, r0
 8011374:	1424      	asrs	r4, r4, #16
 8011376:	d409      	bmi.n	801138c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011378:	42bc      	cmp	r4, r7
 801137a:	da07      	bge.n	801138c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801137c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801137e:	fb04 1202 	mla	r2, r4, r2, r1
 8011382:	1412      	asrs	r2, r2, #16
 8011384:	d402      	bmi.n	801138c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011386:	42b2      	cmp	r2, r6
 8011388:	f2c0 80bf 	blt.w	801150a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801138c:	2700      	movs	r7, #0
 801138e:	19da      	adds	r2, r3, r7
 8011390:	2a00      	cmp	r2, #0
 8011392:	dc3e      	bgt.n	8011412 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8011394:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011398:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801139c:	f1bb 0f00 	cmp.w	fp, #0
 80113a0:	f340 8121 	ble.w	80115e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80113a4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80113a8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80113ac:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80113b0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80113b2:	f1bb 0b01 	subs.w	fp, fp, #1
 80113b6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80113ba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80113be:	eeb0 6a62 	vmov.f32	s12, s5
 80113c2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80113c6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80113ca:	ee77 2a62 	vsub.f32	s5, s14, s5
 80113ce:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80113d2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80113d6:	eeb0 6a43 	vmov.f32	s12, s6
 80113da:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80113de:	ee12 2a90 	vmov	r2, s5
 80113e2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80113e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80113ea:	ee13 2a10 	vmov	r2, s6
 80113ee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80113f2:	9313      	str	r3, [sp, #76]	@ 0x4c
 80113f4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80113f6:	fb92 f3f3 	sdiv	r3, r2, r3
 80113fa:	9a03      	ldr	r2, [sp, #12]
 80113fc:	9314      	str	r3, [sp, #80]	@ 0x50
 80113fe:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8011402:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011404:	eeb0 3a67 	vmov.f32	s6, s15
 8011408:	bf08      	it	eq
 801140a:	4613      	moveq	r3, r2
 801140c:	eef0 2a47 	vmov.f32	s5, s14
 8011410:	e789      	b.n	8011326 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8011412:	1406      	asrs	r6, r0, #16
 8011414:	d42d      	bmi.n	8011472 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011416:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801141a:	42b4      	cmp	r4, r6
 801141c:	dd29      	ble.n	8011472 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801141e:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8011422:	d426      	bmi.n	8011472 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011424:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8011428:	4562      	cmp	r2, ip
 801142a:	dd22      	ble.n	8011472 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801142c:	b224      	sxth	r4, r4
 801142e:	9a01      	ldr	r2, [sp, #4]
 8011430:	fb0c 6404 	mla	r4, ip, r4, r6
 8011434:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8011438:	0e22      	lsrs	r2, r4, #24
 801143a:	d01a      	beq.n	8011472 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801143c:	9e04      	ldr	r6, [sp, #16]
 801143e:	4372      	muls	r2, r6
 8011440:	1c56      	adds	r6, r2, #1
 8011442:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8011446:	1212      	asrs	r2, r2, #8
 8011448:	0a26      	lsrs	r6, r4, #8
 801144a:	2aff      	cmp	r2, #255	@ 0xff
 801144c:	9605      	str	r6, [sp, #20]
 801144e:	d116      	bne.n	801147e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8011450:	f06f 0201 	mvn.w	r2, #1
 8011454:	fb02 fc07 	mul.w	ip, r2, r7
 8011458:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801145c:	0962      	lsrs	r2, r4, #5
 801145e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8011462:	f026 0607 	bic.w	r6, r6, #7
 8011466:	4316      	orrs	r6, r2
 8011468:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801146c:	4326      	orrs	r6, r4
 801146e:	f825 600c 	strh.w	r6, [r5, ip]
 8011472:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8011474:	4410      	add	r0, r2
 8011476:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8011478:	3f01      	subs	r7, #1
 801147a:	4411      	add	r1, r2
 801147c:	e787      	b.n	801138e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801147e:	f06f 0601 	mvn.w	r6, #1
 8011482:	437e      	muls	r6, r7
 8011484:	fa1f fa82 	uxth.w	sl, r2
 8011488:	f835 8006 	ldrh.w	r8, [r5, r6]
 801148c:	9602      	str	r6, [sp, #8]
 801148e:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8011492:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8011496:	43d2      	mvns	r2, r2
 8011498:	b2d2      	uxtb	r2, r2
 801149a:	fb1c fc0a 	smulbb	ip, ip, sl
 801149e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80114a2:	fb0e ce02 	mla	lr, lr, r2, ip
 80114a6:	b2e4      	uxtb	r4, r4
 80114a8:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80114ac:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80114b0:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80114b4:	fa5f f888 	uxtb.w	r8, r8
 80114b8:	fb14 f40a 	smulbb	r4, r4, sl
 80114bc:	fb08 4402 	mla	r4, r8, r2, r4
 80114c0:	fa1f fe8e 	uxth.w	lr, lr
 80114c4:	fb16 f60a 	smulbb	r6, r6, sl
 80114c8:	b2a4      	uxth	r4, r4
 80114ca:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 80114ce:	fb0c 6c02 	mla	ip, ip, r2, r6
 80114d2:	f10e 0201 	add.w	r2, lr, #1
 80114d6:	1c66      	adds	r6, r4, #1
 80114d8:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80114dc:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80114e0:	fa1f fc8c 	uxth.w	ip, ip
 80114e4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80114e8:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 80114ec:	ea46 0e0e 	orr.w	lr, r6, lr
 80114f0:	f10c 0601 	add.w	r6, ip, #1
 80114f4:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80114f8:	0976      	lsrs	r6, r6, #5
 80114fa:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80114fe:	9a02      	ldr	r2, [sp, #8]
 8011500:	ea4e 0e06 	orr.w	lr, lr, r6
 8011504:	f825 e002 	strh.w	lr, [r5, r2]
 8011508:	e7b3      	b.n	8011472 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801150a:	f04f 0800 	mov.w	r8, #0
 801150e:	eba3 0208 	sub.w	r2, r3, r8
 8011512:	2a00      	cmp	r2, #0
 8011514:	f77f af3e 	ble.w	8011394 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011518:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801151c:	1404      	asrs	r4, r0, #16
 801151e:	140a      	asrs	r2, r1, #16
 8011520:	fb06 4202 	mla	r2, r6, r2, r4
 8011524:	9c01      	ldr	r4, [sp, #4]
 8011526:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801152a:	0e22      	lsrs	r2, r4, #24
 801152c:	d016      	beq.n	801155c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801152e:	9e04      	ldr	r6, [sp, #16]
 8011530:	4372      	muls	r2, r6
 8011532:	1c56      	adds	r6, r2, #1
 8011534:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8011538:	1212      	asrs	r2, r2, #8
 801153a:	2aff      	cmp	r2, #255	@ 0xff
 801153c:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8011540:	d113      	bne.n	801156a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8011542:	0962      	lsrs	r2, r4, #5
 8011544:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8011548:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801154c:	f026 0607 	bic.w	r6, r6, #7
 8011550:	4316      	orrs	r6, r2
 8011552:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8011556:	4326      	orrs	r6, r4
 8011558:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801155c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801155e:	4410      	add	r0, r2
 8011560:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8011562:	f108 0801 	add.w	r8, r8, #1
 8011566:	4411      	add	r1, r2
 8011568:	e7d1      	b.n	801150e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801156a:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801156e:	fa1f fa82 	uxth.w	sl, r2
 8011572:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011576:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801157a:	43d2      	mvns	r2, r2
 801157c:	b2d2      	uxtb	r2, r2
 801157e:	fb17 f70a 	smulbb	r7, r7, sl
 8011582:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8011586:	fb0c 7c02 	mla	ip, ip, r2, r7
 801158a:	b2e4      	uxtb	r4, r4
 801158c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8011590:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011594:	fa5f fe8e 	uxtb.w	lr, lr
 8011598:	fb14 f40a 	smulbb	r4, r4, sl
 801159c:	fb0e 4402 	mla	r4, lr, r2, r4
 80115a0:	b2f6      	uxtb	r6, r6
 80115a2:	fa1f fc8c 	uxth.w	ip, ip
 80115a6:	fb16 f60a 	smulbb	r6, r6, sl
 80115aa:	b2a4      	uxth	r4, r4
 80115ac:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80115b0:	fb07 6702 	mla	r7, r7, r2, r6
 80115b4:	f10c 0201 	add.w	r2, ip, #1
 80115b8:	1c66      	adds	r6, r4, #1
 80115ba:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80115be:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80115c2:	b2bf      	uxth	r7, r7
 80115c4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80115c8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80115cc:	ea46 0c0c 	orr.w	ip, r6, ip
 80115d0:	1c7e      	adds	r6, r7, #1
 80115d2:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80115d6:	0976      	lsrs	r6, r6, #5
 80115d8:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80115dc:	ea4c 0c06 	orr.w	ip, ip, r6
 80115e0:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 80115e4:	e7ba      	b.n	801155c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80115e6:	b007      	add	sp, #28
 80115e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080115ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80115ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80115f0:	b085      	sub	sp, #20
 80115f2:	468b      	mov	fp, r1
 80115f4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80115f6:	9203      	str	r2, [sp, #12]
 80115f8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80115fc:	6841      	ldr	r1, [r0, #4]
 80115fe:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8011602:	fb01 2404 	mla	r4, r1, r4, r2
 8011606:	6802      	ldr	r2, [r0, #0]
 8011608:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801160c:	f8d8 2000 	ldr.w	r2, [r8]
 8011610:	9201      	str	r2, [sp, #4]
 8011612:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8011616:	f1bb 0f00 	cmp.w	fp, #0
 801161a:	dc03      	bgt.n	8011624 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801161c:	9a03      	ldr	r2, [sp, #12]
 801161e:	2a00      	cmp	r2, #0
 8011620:	f340 814f 	ble.w	80118c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8011624:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8011626:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801162a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801162e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8011632:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8011634:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8011638:	2b00      	cmp	r3, #0
 801163a:	dd0e      	ble.n	801165a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801163c:	1408      	asrs	r0, r1, #16
 801163e:	d405      	bmi.n	801164c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011640:	42b8      	cmp	r0, r7
 8011642:	da03      	bge.n	801164c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011644:	1410      	asrs	r0, r2, #16
 8011646:	d401      	bmi.n	801164c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011648:	42b0      	cmp	r0, r6
 801164a:	db07      	blt.n	801165c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801164c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801164e:	4401      	add	r1, r0
 8011650:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8011652:	3b01      	subs	r3, #1
 8011654:	4402      	add	r2, r0
 8011656:	3402      	adds	r4, #2
 8011658:	e7ee      	b.n	8011638 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801165a:	d017      	beq.n	801168c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801165c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801165e:	1e58      	subs	r0, r3, #1
 8011660:	fb05 1500 	mla	r5, r5, r0, r1
 8011664:	142d      	asrs	r5, r5, #16
 8011666:	d409      	bmi.n	801167c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8011668:	42bd      	cmp	r5, r7
 801166a:	da07      	bge.n	801167c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801166c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801166e:	fb05 2000 	mla	r0, r5, r0, r2
 8011672:	1400      	asrs	r0, r0, #16
 8011674:	d402      	bmi.n	801167c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8011676:	42b0      	cmp	r0, r6
 8011678:	f2c0 80ba 	blt.w	80117f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801167c:	2600      	movs	r6, #0
 801167e:	1998      	adds	r0, r3, r6
 8011680:	2800      	cmp	r0, #0
 8011682:	dc3e      	bgt.n	8011702 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8011684:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011688:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801168c:	f1bb 0f00 	cmp.w	fp, #0
 8011690:	f340 8117 	ble.w	80118c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8011694:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011698:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801169c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80116a0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80116a2:	f1bb 0b01 	subs.w	fp, fp, #1
 80116a6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80116aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80116ae:	eeb0 6a62 	vmov.f32	s12, s5
 80116b2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80116b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80116ba:	ee77 2a62 	vsub.f32	s5, s14, s5
 80116be:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80116c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80116c6:	eeb0 6a43 	vmov.f32	s12, s6
 80116ca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80116ce:	ee12 2a90 	vmov	r2, s5
 80116d2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80116d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80116da:	ee13 2a10 	vmov	r2, s6
 80116de:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80116e2:	9311      	str	r3, [sp, #68]	@ 0x44
 80116e4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80116e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80116ea:	9a03      	ldr	r2, [sp, #12]
 80116ec:	9312      	str	r3, [sp, #72]	@ 0x48
 80116ee:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80116f2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80116f4:	eeb0 3a67 	vmov.f32	s6, s15
 80116f8:	bf08      	it	eq
 80116fa:	4613      	moveq	r3, r2
 80116fc:	eef0 2a47 	vmov.f32	s5, s14
 8011700:	e789      	b.n	8011616 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8011702:	140f      	asrs	r7, r1, #16
 8011704:	d424      	bmi.n	8011750 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011706:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801170a:	42bd      	cmp	r5, r7
 801170c:	dd20      	ble.n	8011750 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801170e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011712:	d41d      	bmi.n	8011750 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011714:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8011718:	4560      	cmp	r0, ip
 801171a:	dd19      	ble.n	8011750 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801171c:	b22d      	sxth	r5, r5
 801171e:	fb0c 7505 	mla	r5, ip, r5, r7
 8011722:	9801      	ldr	r0, [sp, #4]
 8011724:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8011728:	0e07      	lsrs	r7, r0, #24
 801172a:	2fff      	cmp	r7, #255	@ 0xff
 801172c:	d116      	bne.n	801175c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801172e:	f06f 0501 	mvn.w	r5, #1
 8011732:	fb05 f706 	mul.w	r7, r5, r6
 8011736:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 801173a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801173e:	0945      	lsrs	r5, r0, #5
 8011740:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8011744:	ea4c 0505 	orr.w	r5, ip, r5
 8011748:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801174c:	4305      	orrs	r5, r0
 801174e:	53e5      	strh	r5, [r4, r7]
 8011750:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8011752:	4401      	add	r1, r0
 8011754:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8011756:	3e01      	subs	r6, #1
 8011758:	4402      	add	r2, r0
 801175a:	e790      	b.n	801167e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801175c:	b2fd      	uxtb	r5, r7
 801175e:	2f00      	cmp	r7, #0
 8011760:	d0f6      	beq.n	8011750 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011762:	f06f 0701 	mvn.w	r7, #1
 8011766:	4377      	muls	r7, r6
 8011768:	fa1f f985 	uxth.w	r9, r5
 801176c:	f834 e007 	ldrh.w	lr, [r4, r7]
 8011770:	9702      	str	r7, [sp, #8]
 8011772:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011776:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801177a:	43ed      	mvns	r5, r5
 801177c:	b2ed      	uxtb	r5, r5
 801177e:	fb17 f709 	smulbb	r7, r7, r9
 8011782:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8011786:	fb0c 7c05 	mla	ip, ip, r5, r7
 801178a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801178e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8011792:	b2c0      	uxtb	r0, r0
 8011794:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011798:	fa5f fe8e 	uxtb.w	lr, lr
 801179c:	fb10 f009 	smulbb	r0, r0, r9
 80117a0:	fb0e 0005 	mla	r0, lr, r5, r0
 80117a4:	b280      	uxth	r0, r0
 80117a6:	fa1f fc8c 	uxth.w	ip, ip
 80117aa:	fb1a fa09 	smulbb	sl, sl, r9
 80117ae:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80117b2:	fb07 a705 	mla	r7, r7, r5, sl
 80117b6:	f100 0a01 	add.w	sl, r0, #1
 80117ba:	f10c 0501 	add.w	r5, ip, #1
 80117be:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80117c2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80117c6:	b2bf      	uxth	r7, r7
 80117c8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80117cc:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80117d0:	ea4a 0c0c 	orr.w	ip, sl, ip
 80117d4:	f107 0a01 	add.w	sl, r7, #1
 80117d8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80117dc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80117e0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80117e4:	9802      	ldr	r0, [sp, #8]
 80117e6:	ea4c 0c0a 	orr.w	ip, ip, sl
 80117ea:	f824 c000 	strh.w	ip, [r4, r0]
 80117ee:	e7af      	b.n	8011750 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80117f0:	f04f 0e00 	mov.w	lr, #0
 80117f4:	eba3 000e 	sub.w	r0, r3, lr
 80117f8:	2800      	cmp	r0, #0
 80117fa:	f77f af43 	ble.w	8011684 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80117fe:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8011802:	140d      	asrs	r5, r1, #16
 8011804:	1410      	asrs	r0, r2, #16
 8011806:	fb06 5000 	mla	r0, r6, r0, r5
 801180a:	9d01      	ldr	r5, [sp, #4]
 801180c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8011810:	0e2e      	lsrs	r6, r5, #24
 8011812:	2eff      	cmp	r6, #255	@ 0xff
 8011814:	d112      	bne.n	801183c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8011816:	482c      	ldr	r0, [pc, #176]	@ (80118c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8011818:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801181c:	0968      	lsrs	r0, r5, #5
 801181e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8011822:	4330      	orrs	r0, r6
 8011824:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8011828:	4328      	orrs	r0, r5
 801182a:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801182e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8011830:	4401      	add	r1, r0
 8011832:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8011834:	f10e 0e01 	add.w	lr, lr, #1
 8011838:	4402      	add	r2, r0
 801183a:	e7db      	b.n	80117f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801183c:	b2f0      	uxtb	r0, r6
 801183e:	2e00      	cmp	r6, #0
 8011840:	d0f5      	beq.n	801182e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8011842:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8011846:	fa1f f980 	uxth.w	r9, r0
 801184a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801184e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011852:	43c0      	mvns	r0, r0
 8011854:	b2c0      	uxtb	r0, r0
 8011856:	fb16 f609 	smulbb	r6, r6, r9
 801185a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801185e:	fb07 6700 	mla	r7, r7, r0, r6
 8011862:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011866:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801186a:	b2ed      	uxtb	r5, r5
 801186c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011870:	fa5f fc8c 	uxtb.w	ip, ip
 8011874:	fb15 f509 	smulbb	r5, r5, r9
 8011878:	fb0c 5500 	mla	r5, ip, r0, r5
 801187c:	b2bf      	uxth	r7, r7
 801187e:	fb1a fa09 	smulbb	sl, sl, r9
 8011882:	b2ad      	uxth	r5, r5
 8011884:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8011888:	fb06 a600 	mla	r6, r6, r0, sl
 801188c:	1c78      	adds	r0, r7, #1
 801188e:	f105 0a01 	add.w	sl, r5, #1
 8011892:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8011896:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801189a:	b2b6      	uxth	r6, r6
 801189c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80118a0:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80118a4:	ea4a 0707 	orr.w	r7, sl, r7
 80118a8:	f106 0a01 	add.w	sl, r6, #1
 80118ac:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80118b0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80118b4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80118b8:	ea47 070a 	orr.w	r7, r7, sl
 80118bc:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 80118c0:	e7b5      	b.n	801182e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80118c2:	b005      	add	sp, #20
 80118c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80118c8:	fffff800 	.word	0xfffff800

080118cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80118cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80118d0:	b087      	sub	sp, #28
 80118d2:	468b      	mov	fp, r1
 80118d4:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80118d6:	9203      	str	r2, [sp, #12]
 80118d8:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80118dc:	9204      	str	r2, [sp, #16]
 80118de:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 80118e2:	6841      	ldr	r1, [r0, #4]
 80118e4:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 80118e8:	fb01 2404 	mla	r4, r1, r4, r2
 80118ec:	6802      	ldr	r2, [r0, #0]
 80118ee:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80118f2:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80118f6:	3201      	adds	r2, #1
 80118f8:	f022 0201 	bic.w	r2, r2, #1
 80118fc:	9200      	str	r2, [sp, #0]
 80118fe:	f8d9 2000 	ldr.w	r2, [r9]
 8011902:	9201      	str	r2, [sp, #4]
 8011904:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8011908:	f1bb 0f00 	cmp.w	fp, #0
 801190c:	dc03      	bgt.n	8011916 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801190e:	9a03      	ldr	r2, [sp, #12]
 8011910:	2a00      	cmp	r2, #0
 8011912:	f340 8169 	ble.w	8011be8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8011916:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8011918:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801191c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8011920:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8011924:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8011926:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801192a:	2b00      	cmp	r3, #0
 801192c:	dd0e      	ble.n	801194c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801192e:	1402      	asrs	r2, r0, #16
 8011930:	d405      	bmi.n	801193e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011932:	42ba      	cmp	r2, r7
 8011934:	da03      	bge.n	801193e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011936:	140a      	asrs	r2, r1, #16
 8011938:	d401      	bmi.n	801193e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801193a:	42b2      	cmp	r2, r6
 801193c:	db07      	blt.n	801194e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801193e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8011940:	4410      	add	r0, r2
 8011942:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8011944:	3b01      	subs	r3, #1
 8011946:	4411      	add	r1, r2
 8011948:	3402      	adds	r4, #2
 801194a:	e7ee      	b.n	801192a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801194c:	d017      	beq.n	801197e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801194e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8011950:	1e5a      	subs	r2, r3, #1
 8011952:	fb05 0502 	mla	r5, r5, r2, r0
 8011956:	142d      	asrs	r5, r5, #16
 8011958:	d409      	bmi.n	801196e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801195a:	42bd      	cmp	r5, r7
 801195c:	da07      	bge.n	801196e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801195e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8011960:	fb05 1202 	mla	r2, r5, r2, r1
 8011964:	1412      	asrs	r2, r2, #16
 8011966:	d402      	bmi.n	801196e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011968:	42b2      	cmp	r2, r6
 801196a:	f2c0 80c7 	blt.w	8011afc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801196e:	2700      	movs	r7, #0
 8011970:	19da      	adds	r2, r3, r7
 8011972:	2a00      	cmp	r2, #0
 8011974:	dc3e      	bgt.n	80119f4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8011976:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801197a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801197e:	f1bb 0f00 	cmp.w	fp, #0
 8011982:	f340 8131 	ble.w	8011be8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8011986:	ee30 0a04 	vadd.f32	s0, s0, s8
 801198a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801198e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011992:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011994:	f1bb 0b01 	subs.w	fp, fp, #1
 8011998:	ee31 1a05 	vadd.f32	s2, s2, s10
 801199c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80119a0:	eeb0 6a62 	vmov.f32	s12, s5
 80119a4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80119a8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80119ac:	ee77 2a62 	vsub.f32	s5, s14, s5
 80119b0:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80119b4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80119b8:	eeb0 6a43 	vmov.f32	s12, s6
 80119bc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80119c0:	ee12 2a90 	vmov	r2, s5
 80119c4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80119c8:	fb92 f3f3 	sdiv	r3, r2, r3
 80119cc:	ee13 2a10 	vmov	r2, s6
 80119d0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80119d4:	9313      	str	r3, [sp, #76]	@ 0x4c
 80119d6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80119d8:	fb92 f3f3 	sdiv	r3, r2, r3
 80119dc:	9a03      	ldr	r2, [sp, #12]
 80119de:	9314      	str	r3, [sp, #80]	@ 0x50
 80119e0:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80119e4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80119e6:	eeb0 3a67 	vmov.f32	s6, s15
 80119ea:	bf08      	it	eq
 80119ec:	4613      	moveq	r3, r2
 80119ee:	eef0 2a47 	vmov.f32	s5, s14
 80119f2:	e789      	b.n	8011908 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80119f4:	1405      	asrs	r5, r0, #16
 80119f6:	d435      	bmi.n	8011a64 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80119f8:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80119fc:	42aa      	cmp	r2, r5
 80119fe:	dd31      	ble.n	8011a64 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011a00:	140e      	asrs	r6, r1, #16
 8011a02:	d42f      	bmi.n	8011a64 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011a04:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8011a08:	42b2      	cmp	r2, r6
 8011a0a:	dd2b      	ble.n	8011a64 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011a0c:	9a00      	ldr	r2, [sp, #0]
 8011a0e:	fb06 5502 	mla	r5, r6, r2, r5
 8011a12:	086a      	lsrs	r2, r5, #1
 8011a14:	9e01      	ldr	r6, [sp, #4]
 8011a16:	5cb2      	ldrb	r2, [r6, r2]
 8011a18:	07ee      	lsls	r6, r5, #31
 8011a1a:	bf54      	ite	pl
 8011a1c:	f002 020f 	andpl.w	r2, r2, #15
 8011a20:	1112      	asrmi	r2, r2, #4
 8011a22:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011a26:	b2d2      	uxtb	r2, r2
 8011a28:	b1e2      	cbz	r2, 8011a64 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011a2a:	9d04      	ldr	r5, [sp, #16]
 8011a2c:	436a      	muls	r2, r5
 8011a2e:	1c55      	adds	r5, r2, #1
 8011a30:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8011a34:	4d6e      	ldr	r5, [pc, #440]	@ (8011bf0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8011a36:	682d      	ldr	r5, [r5, #0]
 8011a38:	1212      	asrs	r2, r2, #8
 8011a3a:	0a2e      	lsrs	r6, r5, #8
 8011a3c:	2aff      	cmp	r2, #255	@ 0xff
 8011a3e:	9605      	str	r6, [sp, #20]
 8011a40:	d116      	bne.n	8011a70 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8011a42:	f06f 0201 	mvn.w	r2, #1
 8011a46:	fb02 fc07 	mul.w	ip, r2, r7
 8011a4a:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8011a4e:	096a      	lsrs	r2, r5, #5
 8011a50:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8011a54:	f026 0607 	bic.w	r6, r6, #7
 8011a58:	4316      	orrs	r6, r2
 8011a5a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8011a5e:	432e      	orrs	r6, r5
 8011a60:	f824 600c 	strh.w	r6, [r4, ip]
 8011a64:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8011a66:	4410      	add	r0, r2
 8011a68:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8011a6a:	3f01      	subs	r7, #1
 8011a6c:	4411      	add	r1, r2
 8011a6e:	e77f      	b.n	8011970 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8011a70:	f06f 0601 	mvn.w	r6, #1
 8011a74:	437e      	muls	r6, r7
 8011a76:	fa1f fa82 	uxth.w	sl, r2
 8011a7a:	f834 8006 	ldrh.w	r8, [r4, r6]
 8011a7e:	9602      	str	r6, [sp, #8]
 8011a80:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8011a84:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8011a88:	43d2      	mvns	r2, r2
 8011a8a:	b2d2      	uxtb	r2, r2
 8011a8c:	fb1c fc0a 	smulbb	ip, ip, sl
 8011a90:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8011a94:	fb0e ce02 	mla	lr, lr, r2, ip
 8011a98:	b2ed      	uxtb	r5, r5
 8011a9a:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8011a9e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011aa2:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8011aa6:	fa5f f888 	uxtb.w	r8, r8
 8011aaa:	fb15 f50a 	smulbb	r5, r5, sl
 8011aae:	fb08 5502 	mla	r5, r8, r2, r5
 8011ab2:	fa1f fe8e 	uxth.w	lr, lr
 8011ab6:	fb16 f60a 	smulbb	r6, r6, sl
 8011aba:	b2ad      	uxth	r5, r5
 8011abc:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8011ac0:	fb0c 6c02 	mla	ip, ip, r2, r6
 8011ac4:	f10e 0201 	add.w	r2, lr, #1
 8011ac8:	1c6e      	adds	r6, r5, #1
 8011aca:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8011ace:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8011ad2:	fa1f fc8c 	uxth.w	ip, ip
 8011ad6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011ada:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8011ade:	ea46 0e0e 	orr.w	lr, r6, lr
 8011ae2:	f10c 0601 	add.w	r6, ip, #1
 8011ae6:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8011aea:	0976      	lsrs	r6, r6, #5
 8011aec:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8011af0:	9a02      	ldr	r2, [sp, #8]
 8011af2:	ea4e 0e06 	orr.w	lr, lr, r6
 8011af6:	f824 e002 	strh.w	lr, [r4, r2]
 8011afa:	e7b3      	b.n	8011a64 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011afc:	f04f 0800 	mov.w	r8, #0
 8011b00:	eba3 0208 	sub.w	r2, r3, r8
 8011b04:	2a00      	cmp	r2, #0
 8011b06:	f77f af36 	ble.w	8011976 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8011b0a:	9e00      	ldr	r6, [sp, #0]
 8011b0c:	1402      	asrs	r2, r0, #16
 8011b0e:	140d      	asrs	r5, r1, #16
 8011b10:	fb06 2505 	mla	r5, r6, r5, r2
 8011b14:	086a      	lsrs	r2, r5, #1
 8011b16:	9e01      	ldr	r6, [sp, #4]
 8011b18:	5cb2      	ldrb	r2, [r6, r2]
 8011b1a:	07ed      	lsls	r5, r5, #31
 8011b1c:	bf54      	ite	pl
 8011b1e:	f002 020f 	andpl.w	r2, r2, #15
 8011b22:	1112      	asrmi	r2, r2, #4
 8011b24:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011b28:	b2d2      	uxtb	r2, r2
 8011b2a:	b1c2      	cbz	r2, 8011b5e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8011b2c:	9d04      	ldr	r5, [sp, #16]
 8011b2e:	436a      	muls	r2, r5
 8011b30:	1c55      	adds	r5, r2, #1
 8011b32:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8011b36:	4d2e      	ldr	r5, [pc, #184]	@ (8011bf0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8011b38:	1212      	asrs	r2, r2, #8
 8011b3a:	682e      	ldr	r6, [r5, #0]
 8011b3c:	2aff      	cmp	r2, #255	@ 0xff
 8011b3e:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8011b42:	d113      	bne.n	8011b6c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8011b44:	0972      	lsrs	r2, r6, #5
 8011b46:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8011b4a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8011b4e:	f025 0507 	bic.w	r5, r5, #7
 8011b52:	4315      	orrs	r5, r2
 8011b54:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8011b58:	4335      	orrs	r5, r6
 8011b5a:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8011b5e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8011b60:	4410      	add	r0, r2
 8011b62:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8011b64:	f108 0801 	add.w	r8, r8, #1
 8011b68:	4411      	add	r1, r2
 8011b6a:	e7c9      	b.n	8011b00 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8011b6c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8011b70:	fa1f fa82 	uxth.w	sl, r2
 8011b74:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011b78:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8011b7c:	43d2      	mvns	r2, r2
 8011b7e:	b2d2      	uxtb	r2, r2
 8011b80:	fb17 f70a 	smulbb	r7, r7, sl
 8011b84:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8011b88:	fb0c 7c02 	mla	ip, ip, r2, r7
 8011b8c:	b2f6      	uxtb	r6, r6
 8011b8e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8011b92:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011b96:	fa5f fe8e 	uxtb.w	lr, lr
 8011b9a:	fb16 f60a 	smulbb	r6, r6, sl
 8011b9e:	fb0e 6602 	mla	r6, lr, r2, r6
 8011ba2:	b2ed      	uxtb	r5, r5
 8011ba4:	fa1f fc8c 	uxth.w	ip, ip
 8011ba8:	fb15 f50a 	smulbb	r5, r5, sl
 8011bac:	b2b6      	uxth	r6, r6
 8011bae:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8011bb2:	fb07 5702 	mla	r7, r7, r2, r5
 8011bb6:	f10c 0201 	add.w	r2, ip, #1
 8011bba:	1c75      	adds	r5, r6, #1
 8011bbc:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8011bc0:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8011bc4:	b2bf      	uxth	r7, r7
 8011bc6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011bca:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8011bce:	ea45 0c0c 	orr.w	ip, r5, ip
 8011bd2:	1c7d      	adds	r5, r7, #1
 8011bd4:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8011bd8:	096d      	lsrs	r5, r5, #5
 8011bda:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8011bde:	ea4c 0c05 	orr.w	ip, ip, r5
 8011be2:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8011be6:	e7ba      	b.n	8011b5e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8011be8:	b007      	add	sp, #28
 8011bea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011bee:	bf00      	nop
 8011bf0:	200119dc 	.word	0x200119dc

08011bf4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011bf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011bf8:	b087      	sub	sp, #28
 8011bfa:	f8df 830c 	ldr.w	r8, [pc, #780]	@ 8011f08 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8011bfe:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8011c00:	9205      	str	r2, [sp, #20]
 8011c02:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8011c06:	9101      	str	r1, [sp, #4]
 8011c08:	6841      	ldr	r1, [r0, #4]
 8011c0a:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 8011c0e:	fb01 2404 	mla	r4, r1, r4, r2
 8011c12:	6802      	ldr	r2, [r0, #0]
 8011c14:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011c18:	f8db 2008 	ldr.w	r2, [fp, #8]
 8011c1c:	3201      	adds	r2, #1
 8011c1e:	f022 0201 	bic.w	r2, r2, #1
 8011c22:	9202      	str	r2, [sp, #8]
 8011c24:	f8db 2000 	ldr.w	r2, [fp]
 8011c28:	9203      	str	r2, [sp, #12]
 8011c2a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8011c2e:	9a01      	ldr	r2, [sp, #4]
 8011c30:	2a00      	cmp	r2, #0
 8011c32:	dc03      	bgt.n	8011c3c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8011c34:	9a05      	ldr	r2, [sp, #20]
 8011c36:	2a00      	cmp	r2, #0
 8011c38:	f340 8162 	ble.w	8011f00 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8011c3c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8011c3e:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8011c42:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8011c46:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8011c4a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8011c4c:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8011c50:	2b00      	cmp	r3, #0
 8011c52:	dd0e      	ble.n	8011c72 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011c54:	1402      	asrs	r2, r0, #16
 8011c56:	d405      	bmi.n	8011c64 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011c58:	42ba      	cmp	r2, r7
 8011c5a:	da03      	bge.n	8011c64 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011c5c:	140a      	asrs	r2, r1, #16
 8011c5e:	d401      	bmi.n	8011c64 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011c60:	42b2      	cmp	r2, r6
 8011c62:	db07      	blt.n	8011c74 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8011c64:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8011c66:	4410      	add	r0, r2
 8011c68:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8011c6a:	3b01      	subs	r3, #1
 8011c6c:	4411      	add	r1, r2
 8011c6e:	3402      	adds	r4, #2
 8011c70:	e7ee      	b.n	8011c50 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8011c72:	d017      	beq.n	8011ca4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8011c74:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8011c76:	1e5a      	subs	r2, r3, #1
 8011c78:	fb05 0502 	mla	r5, r5, r2, r0
 8011c7c:	142d      	asrs	r5, r5, #16
 8011c7e:	d409      	bmi.n	8011c94 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8011c80:	42bd      	cmp	r5, r7
 8011c82:	da07      	bge.n	8011c94 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8011c84:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8011c86:	fb05 1202 	mla	r2, r5, r2, r1
 8011c8a:	1412      	asrs	r2, r2, #16
 8011c8c:	d402      	bmi.n	8011c94 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8011c8e:	42b2      	cmp	r2, r6
 8011c90:	f2c0 80c3 	blt.w	8011e1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8011c94:	2500      	movs	r5, #0
 8011c96:	195a      	adds	r2, r3, r5
 8011c98:	2a00      	cmp	r2, #0
 8011c9a:	dc3f      	bgt.n	8011d1c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8011c9c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011ca0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011ca4:	9b01      	ldr	r3, [sp, #4]
 8011ca6:	2b00      	cmp	r3, #0
 8011ca8:	f340 812a 	ble.w	8011f00 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8011cac:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011cb0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011cb4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011cb8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011cba:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011cbe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011cc2:	eeb0 6a62 	vmov.f32	s12, s5
 8011cc6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011cca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011cce:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011cd2:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8011cd6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011cda:	eeb0 6a43 	vmov.f32	s12, s6
 8011cde:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011ce2:	ee12 2a90 	vmov	r2, s5
 8011ce6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011cea:	fb92 f3f3 	sdiv	r3, r2, r3
 8011cee:	ee13 2a10 	vmov	r2, s6
 8011cf2:	9313      	str	r3, [sp, #76]	@ 0x4c
 8011cf4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011cf6:	fb92 f3f3 	sdiv	r3, r2, r3
 8011cfa:	9314      	str	r3, [sp, #80]	@ 0x50
 8011cfc:	9b01      	ldr	r3, [sp, #4]
 8011cfe:	9a05      	ldr	r2, [sp, #20]
 8011d00:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011d04:	3b01      	subs	r3, #1
 8011d06:	9301      	str	r3, [sp, #4]
 8011d08:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8011d0c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011d0e:	eeb0 3a67 	vmov.f32	s6, s15
 8011d12:	bf08      	it	eq
 8011d14:	4613      	moveq	r3, r2
 8011d16:	eef0 2a47 	vmov.f32	s5, s14
 8011d1a:	e788      	b.n	8011c2e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8011d1c:	1406      	asrs	r6, r0, #16
 8011d1e:	d42c      	bmi.n	8011d7a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8011d20:	f8db 2008 	ldr.w	r2, [fp, #8]
 8011d24:	42b2      	cmp	r2, r6
 8011d26:	dd28      	ble.n	8011d7a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8011d28:	140f      	asrs	r7, r1, #16
 8011d2a:	d426      	bmi.n	8011d7a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8011d2c:	f8db 200c 	ldr.w	r2, [fp, #12]
 8011d30:	42ba      	cmp	r2, r7
 8011d32:	dd22      	ble.n	8011d7a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8011d34:	9a02      	ldr	r2, [sp, #8]
 8011d36:	fb07 6602 	mla	r6, r7, r2, r6
 8011d3a:	0872      	lsrs	r2, r6, #1
 8011d3c:	9f03      	ldr	r7, [sp, #12]
 8011d3e:	5cba      	ldrb	r2, [r7, r2]
 8011d40:	07f6      	lsls	r6, r6, #31
 8011d42:	bf54      	ite	pl
 8011d44:	f002 020f 	andpl.w	r2, r2, #15
 8011d48:	1112      	asrmi	r2, r2, #4
 8011d4a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011d4e:	b2d2      	uxtb	r2, r2
 8011d50:	2aff      	cmp	r2, #255	@ 0xff
 8011d52:	d118      	bne.n	8011d86 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8011d54:	f8d8 2000 	ldr.w	r2, [r8]
 8011d58:	f06f 0601 	mvn.w	r6, #1
 8011d5c:	fb06 f705 	mul.w	r7, r6, r5
 8011d60:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 8011d64:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8011d68:	0956      	lsrs	r6, r2, #5
 8011d6a:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8011d6e:	ea4c 0606 	orr.w	r6, ip, r6
 8011d72:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8011d76:	4316      	orrs	r6, r2
 8011d78:	53e6      	strh	r6, [r4, r7]
 8011d7a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8011d7c:	4410      	add	r0, r2
 8011d7e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8011d80:	3d01      	subs	r5, #1
 8011d82:	4411      	add	r1, r2
 8011d84:	e787      	b.n	8011c96 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011d86:	2a00      	cmp	r2, #0
 8011d88:	d0f7      	beq.n	8011d7a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8011d8a:	f06f 0601 	mvn.w	r6, #1
 8011d8e:	436e      	muls	r6, r5
 8011d90:	f8d8 c000 	ldr.w	ip, [r8]
 8011d94:	f834 e006 	ldrh.w	lr, [r4, r6]
 8011d98:	9604      	str	r6, [sp, #16]
 8011d9a:	fa1f f982 	uxth.w	r9, r2
 8011d9e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8011da2:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8011da6:	43d2      	mvns	r2, r2
 8011da8:	b2d2      	uxtb	r2, r2
 8011daa:	fb16 f609 	smulbb	r6, r6, r9
 8011dae:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8011db2:	fb07 6702 	mla	r7, r7, r2, r6
 8011db6:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8011dba:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8011dbe:	fa5f fc8c 	uxtb.w	ip, ip
 8011dc2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011dc6:	fa5f fe8e 	uxtb.w	lr, lr
 8011dca:	fb1c fc09 	smulbb	ip, ip, r9
 8011dce:	fb0e cc02 	mla	ip, lr, r2, ip
 8011dd2:	b2bf      	uxth	r7, r7
 8011dd4:	fb1a fa09 	smulbb	sl, sl, r9
 8011dd8:	fa1f fc8c 	uxth.w	ip, ip
 8011ddc:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8011de0:	fb06 a602 	mla	r6, r6, r2, sl
 8011de4:	1c7a      	adds	r2, r7, #1
 8011de6:	f10c 0a01 	add.w	sl, ip, #1
 8011dea:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8011dee:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8011df2:	b2b6      	uxth	r6, r6
 8011df4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011df8:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8011dfc:	ea4a 0707 	orr.w	r7, sl, r7
 8011e00:	f106 0a01 	add.w	sl, r6, #1
 8011e04:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011e08:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011e0c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8011e10:	9a04      	ldr	r2, [sp, #16]
 8011e12:	ea47 070a 	orr.w	r7, r7, sl
 8011e16:	52a7      	strh	r7, [r4, r2]
 8011e18:	e7af      	b.n	8011d7a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8011e1a:	f04f 0e00 	mov.w	lr, #0
 8011e1e:	eba3 020e 	sub.w	r2, r3, lr
 8011e22:	2a00      	cmp	r2, #0
 8011e24:	f77f af3a 	ble.w	8011c9c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8011e28:	9e02      	ldr	r6, [sp, #8]
 8011e2a:	1402      	asrs	r2, r0, #16
 8011e2c:	140d      	asrs	r5, r1, #16
 8011e2e:	fb06 2505 	mla	r5, r6, r5, r2
 8011e32:	086a      	lsrs	r2, r5, #1
 8011e34:	9e03      	ldr	r6, [sp, #12]
 8011e36:	5cb2      	ldrb	r2, [r6, r2]
 8011e38:	07ed      	lsls	r5, r5, #31
 8011e3a:	bf54      	ite	pl
 8011e3c:	f002 020f 	andpl.w	r2, r2, #15
 8011e40:	1112      	asrmi	r2, r2, #4
 8011e42:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011e46:	b2d2      	uxtb	r2, r2
 8011e48:	2aff      	cmp	r2, #255	@ 0xff
 8011e4a:	d115      	bne.n	8011e78 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8011e4c:	f8d8 5000 	ldr.w	r5, [r8]
 8011e50:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 8011e54:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8011e58:	096a      	lsrs	r2, r5, #5
 8011e5a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8011e5e:	4332      	orrs	r2, r6
 8011e60:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8011e64:	432a      	orrs	r2, r5
 8011e66:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8011e6a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8011e6c:	4410      	add	r0, r2
 8011e6e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8011e70:	f10e 0e01 	add.w	lr, lr, #1
 8011e74:	4411      	add	r1, r2
 8011e76:	e7d2      	b.n	8011e1e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8011e78:	2a00      	cmp	r2, #0
 8011e7a:	d0f6      	beq.n	8011e6a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8011e7c:	f8d8 7000 	ldr.w	r7, [r8]
 8011e80:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8011e84:	fa1f f982 	uxth.w	r9, r2
 8011e88:	ea4f 262c 	mov.w	r6, ip, asr #8
 8011e8c:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8011e90:	43d2      	mvns	r2, r2
 8011e92:	b2d2      	uxtb	r2, r2
 8011e94:	fb15 f509 	smulbb	r5, r5, r9
 8011e98:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8011e9c:	fb06 5602 	mla	r6, r6, r2, r5
 8011ea0:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8011ea4:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8011ea8:	b2ff      	uxtb	r7, r7
 8011eaa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011eae:	fa5f fc8c 	uxtb.w	ip, ip
 8011eb2:	fb17 f709 	smulbb	r7, r7, r9
 8011eb6:	fb0c 7702 	mla	r7, ip, r2, r7
 8011eba:	b2b6      	uxth	r6, r6
 8011ebc:	fb1a fa09 	smulbb	sl, sl, r9
 8011ec0:	b2bf      	uxth	r7, r7
 8011ec2:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8011ec6:	fb05 a502 	mla	r5, r5, r2, sl
 8011eca:	1c72      	adds	r2, r6, #1
 8011ecc:	f107 0a01 	add.w	sl, r7, #1
 8011ed0:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8011ed4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8011ed8:	b2ad      	uxth	r5, r5
 8011eda:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011ede:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8011ee2:	ea4a 0606 	orr.w	r6, sl, r6
 8011ee6:	f105 0a01 	add.w	sl, r5, #1
 8011eea:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011eee:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011ef2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8011ef6:	ea46 060a 	orr.w	r6, r6, sl
 8011efa:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8011efe:	e7b4      	b.n	8011e6a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8011f00:	b007      	add	sp, #28
 8011f02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011f06:	bf00      	nop
 8011f08:	200119dc 	.word	0x200119dc

08011f0c <_ZN8touchgfx8LCD16bppD1Ev>:
 8011f0c:	4770      	bx	lr

08011f0e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8011f0e:	4770      	bx	lr

08011f10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 8011f10:	4770      	bx	lr

08011f12 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 8011f12:	4770      	bx	lr

08011f14 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8011f14:	4770      	bx	lr

08011f16 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8011f16:	4770      	bx	lr

08011f18 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8011f18:	4770      	bx	lr

08011f1a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8011f1a:	4770      	bx	lr

08011f1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8011f1c:	4770      	bx	lr

08011f1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8011f1e:	4770      	bx	lr

08011f20 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8011f20:	4770      	bx	lr

08011f22 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8011f22:	4770      	bx	lr

08011f24 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8011f24:	4770      	bx	lr

08011f26 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8011f26:	4770      	bx	lr

08011f28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8011f28:	4770      	bx	lr

08011f2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8011f2a:	4770      	bx	lr

08011f2c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8011f2c:	4770      	bx	lr

08011f2e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8011f2e:	4770      	bx	lr

08011f30 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8011f30:	4770      	bx	lr

08011f32 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8011f32:	4770      	bx	lr

08011f34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8011f34:	4770      	bx	lr

08011f36 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8011f36:	4770      	bx	lr

08011f38 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8011f38:	4770      	bx	lr

08011f3a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8011f3a:	4770      	bx	lr

08011f3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8011f3c:	4770      	bx	lr

08011f3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8011f3e:	4770      	bx	lr

08011f40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8011f40:	4770      	bx	lr

08011f42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8011f42:	4770      	bx	lr

08011f44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8011f44:	4770      	bx	lr

08011f46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8011f46:	4770      	bx	lr

08011f48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8011f48:	4770      	bx	lr

08011f4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8011f4a:	4770      	bx	lr

08011f4c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8011f4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011f50:	b088      	sub	sp, #32
 8011f52:	ac08      	add	r4, sp, #32
 8011f54:	4606      	mov	r6, r0
 8011f56:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8011f5a:	4620      	mov	r0, r4
 8011f5c:	4688      	mov	r8, r1
 8011f5e:	4691      	mov	r9, r2
 8011f60:	f7fd fc62 	bl	800f828 <_ZNK8touchgfx6Bitmap7getDataEv>
 8011f64:	6833      	ldr	r3, [r6, #0]
 8011f66:	4605      	mov	r5, r0
 8011f68:	4620      	mov	r0, r4
 8011f6a:	699f      	ldr	r7, [r3, #24]
 8011f6c:	f7fd fb6a 	bl	800f644 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011f70:	4682      	mov	sl, r0
 8011f72:	4620      	mov	r0, r4
 8011f74:	f7fd fb9a 	bl	800f6ac <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011f78:	9500      	str	r5, [sp, #0]
 8011f7a:	e9cd a001 	strd	sl, r0, [sp, #4]
 8011f7e:	464b      	mov	r3, r9
 8011f80:	a806      	add	r0, sp, #24
 8011f82:	4642      	mov	r2, r8
 8011f84:	4631      	mov	r1, r6
 8011f86:	47b8      	blx	r7
 8011f88:	4628      	mov	r0, r5
 8011f8a:	b008      	add	sp, #32
 8011f8c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08011f90 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8011f90:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8011f94:	2300      	movs	r3, #0
 8011f96:	9300      	str	r3, [sp, #0]
 8011f98:	4b3d      	ldr	r3, [pc, #244]	@ (8012090 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8011f9a:	781b      	ldrb	r3, [r3, #0]
 8011f9c:	2b00      	cmp	r3, #0
 8011f9e:	d137      	bne.n	8012010 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8011fa0:	4a3c      	ldr	r2, [pc, #240]	@ (8012094 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8011fa2:	f9b2 2000 	ldrsh.w	r2, [r2]
 8011fa6:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011faa:	2b00      	cmp	r3, #0
 8011fac:	d132      	bne.n	8012014 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8011fae:	4b3a      	ldr	r3, [pc, #232]	@ (8012098 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8011fb0:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011fb4:	6808      	ldr	r0, [r1, #0]
 8011fb6:	6849      	ldr	r1, [r1, #4]
 8011fb8:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011fbc:	ac02      	add	r4, sp, #8
 8011fbe:	ab02      	add	r3, sp, #8
 8011fc0:	c303      	stmia	r3!, {r0, r1}
 8011fc2:	4669      	mov	r1, sp
 8011fc4:	4620      	mov	r0, r4
 8011fc6:	f7fa f8e5 	bl	800c194 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8011fca:	4668      	mov	r0, sp
 8011fcc:	f7fa f8ba 	bl	800c144 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011fd0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8011fd4:	f8bd 2000 	ldrh.w	r2, [sp]
 8011fd8:	4d30      	ldr	r5, [pc, #192]	@ (801209c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8011fda:	4413      	add	r3, r2
 8011fdc:	f8ad 3008 	strh.w	r3, [sp, #8]
 8011fe0:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8011fe4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8011fe8:	6828      	ldr	r0, [r5, #0]
 8011fea:	4413      	add	r3, r2
 8011fec:	f8ad 300a 	strh.w	r3, [sp, #10]
 8011ff0:	6803      	ldr	r3, [r0, #0]
 8011ff2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011ff4:	4798      	blx	r3
 8011ff6:	f010 0f01 	tst.w	r0, #1
 8011ffa:	462f      	mov	r7, r5
 8011ffc:	d00c      	beq.n	8012018 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8011ffe:	6828      	ldr	r0, [r5, #0]
 8012000:	6803      	ldr	r3, [r0, #0]
 8012002:	e894 0006 	ldmia.w	r4, {r1, r2}
 8012006:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8012008:	4798      	blx	r3
 801200a:	b004      	add	sp, #16
 801200c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012010:	4a21      	ldr	r2, [pc, #132]	@ (8012098 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8012012:	e7c6      	b.n	8011fa2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8012014:	4b1f      	ldr	r3, [pc, #124]	@ (8012094 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8012016:	e7cb      	b.n	8011fb0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8012018:	6838      	ldr	r0, [r7, #0]
 801201a:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801201e:	6803      	ldr	r3, [r0, #0]
 8012020:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8012024:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8012026:	4798      	blx	r3
 8012028:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801202c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8012030:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8012034:	fb16 3602 	smlabb	r6, r6, r2, r3
 8012038:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801203c:	6838      	ldr	r0, [r7, #0]
 801203e:	6803      	ldr	r3, [r0, #0]
 8012040:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012042:	4798      	blx	r3
 8012044:	4a13      	ldr	r2, [pc, #76]	@ (8012094 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8012046:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801204a:	8813      	ldrh	r3, [r2, #0]
 801204c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8012050:	fb03 1404 	mla	r4, r3, r4, r1
 8012054:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8012058:	435d      	muls	r5, r3
 801205a:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801205e:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8012062:	4691      	mov	r9, r2
 8012064:	6838      	ldr	r0, [r7, #0]
 8012066:	42ac      	cmp	r4, r5
 8012068:	6803      	ldr	r3, [r0, #0]
 801206a:	d20e      	bcs.n	801208a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801206c:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
 8012070:	4632      	mov	r2, r6
 8012072:	4643      	mov	r3, r8
 8012074:	4621      	mov	r1, r4
 8012076:	47d0      	blx	sl
 8012078:	f8b9 3000 	ldrh.w	r3, [r9]
 801207c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012080:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8012084:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8012088:	e7ec      	b.n	8012064 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801208a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801208c:	4798      	blx	r3
 801208e:	e7bc      	b.n	801200a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8012090:	200119cc 	.word	0x200119cc
 8012094:	200119ce 	.word	0x200119ce
 8012098:	200119d0 	.word	0x200119d0
 801209c:	200119d4 	.word	0x200119d4

080120a0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 80120a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80120a4:	b08b      	sub	sp, #44	@ 0x2c
 80120a6:	460f      	mov	r7, r1
 80120a8:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 80120ac:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 80120b0:	4616      	mov	r6, r2
 80120b2:	f1bb 0f00 	cmp.w	fp, #0
 80120b6:	d04a      	beq.n	801214e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 80120b8:	6810      	ldr	r0, [r2, #0]
 80120ba:	6851      	ldr	r1, [r2, #4]
 80120bc:	ad06      	add	r5, sp, #24
 80120be:	c503      	stmia	r5!, {r0, r1}
 80120c0:	6818      	ldr	r0, [r3, #0]
 80120c2:	6859      	ldr	r1, [r3, #4]
 80120c4:	ad08      	add	r5, sp, #32
 80120c6:	c503      	stmia	r5!, {r0, r1}
 80120c8:	a806      	add	r0, sp, #24
 80120ca:	f7fa f83b 	bl	800c144 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80120ce:	4631      	mov	r1, r6
 80120d0:	a808      	add	r0, sp, #32
 80120d2:	f7fa f85f 	bl	800c194 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80120d6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80120da:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 80120de:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 80120e2:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 80120e6:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 80120ea:	fb16 2103 	smlabb	r1, r6, r3, r2
 80120ee:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 80120f2:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 80120f6:	4f5f      	ldr	r7, [pc, #380]	@ (8012274 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80120f8:	440a      	add	r2, r1
 80120fa:	f8ad 2020 	strh.w	r2, [sp, #32]
 80120fe:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8012102:	6838      	ldr	r0, [r7, #0]
 8012104:	4413      	add	r3, r2
 8012106:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 801210a:	6803      	ldr	r3, [r0, #0]
 801210c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801210e:	4798      	blx	r3
 8012110:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8012114:	46b9      	mov	r9, r7
 8012116:	d11d      	bne.n	8012154 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8012118:	b9fc      	cbnz	r4, 801215a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801211a:	f010 0f01 	tst.w	r0, #1
 801211e:	d01c      	beq.n	801215a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8012120:	f8d9 0000 	ldr.w	r0, [r9]
 8012124:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8012128:	6801      	ldr	r1, [r0, #0]
 801212a:	f8cd b00c 	str.w	fp, [sp, #12]
 801212e:	2700      	movs	r7, #0
 8012130:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8012134:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8012138:	9402      	str	r4, [sp, #8]
 801213a:	b2ad      	uxth	r5, r5
 801213c:	fa1f f488 	uxth.w	r4, r8
 8012140:	9501      	str	r5, [sp, #4]
 8012142:	9400      	str	r4, [sp, #0]
 8012144:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
 8012146:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801214a:	4631      	mov	r1, r6
 801214c:	47a0      	blx	r4
 801214e:	b00b      	add	sp, #44	@ 0x2c
 8012150:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012154:	f010 0f04 	tst.w	r0, #4
 8012158:	e7e1      	b.n	801211e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801215a:	f8d9 0000 	ldr.w	r0, [r9]
 801215e:	6803      	ldr	r3, [r0, #0]
 8012160:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012162:	4798      	blx	r3
 8012164:	4b44      	ldr	r3, [pc, #272]	@ (8012278 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8012166:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 801216a:	881a      	ldrh	r2, [r3, #0]
 801216c:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8012170:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8012174:	fb02 1404 	mla	r4, r2, r4, r1
 8012178:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801217c:	469a      	mov	sl, r3
 801217e:	fb05 f502 	mul.w	r5, r5, r2
 8012182:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8012186:	d059      	beq.n	801223c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8012188:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 801218c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8012190:	fa1f f28b 	uxth.w	r2, fp
 8012194:	fa1f f989 	uxth.w	r9, r9
 8012198:	469e      	mov	lr, r3
 801219a:	42ac      	cmp	r4, r5
 801219c:	d264      	bcs.n	8012268 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801219e:	eb04 0a07 	add.w	sl, r4, r7
 80121a2:	4554      	cmp	r4, sl
 80121a4:	d23d      	bcs.n	8012222 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 80121a6:	8821      	ldrh	r1, [r4, #0]
 80121a8:	f836 3b02 	ldrh.w	r3, [r6], #2
 80121ac:	1208      	asrs	r0, r1, #8
 80121ae:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80121b2:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80121b6:	fb10 f009 	smulbb	r0, r0, r9
 80121ba:	ea4f 0be1 	mov.w	fp, r1, asr #3
 80121be:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80121c2:	00c9      	lsls	r1, r1, #3
 80121c4:	fb0c 0c02 	mla	ip, ip, r2, r0
 80121c8:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 80121cc:	10d8      	asrs	r0, r3, #3
 80121ce:	b2c9      	uxtb	r1, r1
 80121d0:	00db      	lsls	r3, r3, #3
 80121d2:	fa1f fc8c 	uxth.w	ip, ip
 80121d6:	fb1b fb09 	smulbb	fp, fp, r9
 80121da:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80121de:	b2db      	uxtb	r3, r3
 80121e0:	fb11 f109 	smulbb	r1, r1, r9
 80121e4:	fb00 b002 	mla	r0, r0, r2, fp
 80121e8:	fb03 1302 	mla	r3, r3, r2, r1
 80121ec:	f10c 0b01 	add.w	fp, ip, #1
 80121f0:	b29b      	uxth	r3, r3
 80121f2:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 80121f6:	b280      	uxth	r0, r0
 80121f8:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 80121fc:	f103 0c01 	add.w	ip, r3, #1
 8012200:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8012204:	1c43      	adds	r3, r0, #1
 8012206:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801220a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801220e:	0940      	lsrs	r0, r0, #5
 8012210:	ea4c 0c0b 	orr.w	ip, ip, fp
 8012214:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8012218:	ea4c 0c00 	orr.w	ip, ip, r0
 801221c:	f824 cb02 	strh.w	ip, [r4], #2
 8012220:	e7bf      	b.n	80121a2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8012222:	f8be 3000 	ldrh.w	r3, [lr]
 8012226:	eba3 0308 	sub.w	r3, r3, r8
 801222a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801222e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012232:	eba3 0308 	sub.w	r3, r3, r8
 8012236:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801223a:	e7ae      	b.n	801219a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801223c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8012240:	f8d9 0000 	ldr.w	r0, [r9]
 8012244:	42ac      	cmp	r4, r5
 8012246:	6803      	ldr	r3, [r0, #0]
 8012248:	d20e      	bcs.n	8012268 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801224a:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
 801224e:	4632      	mov	r2, r6
 8012250:	463b      	mov	r3, r7
 8012252:	4621      	mov	r1, r4
 8012254:	47c0      	blx	r8
 8012256:	f8ba 3000 	ldrh.w	r3, [sl]
 801225a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801225e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012262:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8012266:	e7eb      	b.n	8012240 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8012268:	4b02      	ldr	r3, [pc, #8]	@ (8012274 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801226a:	6818      	ldr	r0, [r3, #0]
 801226c:	6803      	ldr	r3, [r0, #0]
 801226e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012270:	4798      	blx	r3
 8012272:	e76c      	b.n	801214e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8012274:	200119d4 	.word	0x200119d4
 8012278:	200119ce 	.word	0x200119ce

0801227c <_ZN8touchgfx8LCD16bppD0Ev>:
 801227c:	b510      	push	{r4, lr}
 801227e:	2188      	movs	r1, #136	@ 0x88
 8012280:	4604      	mov	r4, r0
 8012282:	f00a fe5f 	bl	801cf44 <_ZdlPvj>
 8012286:	4620      	mov	r0, r4
 8012288:	bd10      	pop	{r4, pc}

0801228a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801228a:	b510      	push	{r4, lr}
 801228c:	2104      	movs	r1, #4
 801228e:	4604      	mov	r4, r0
 8012290:	f00a fe58 	bl	801cf44 <_ZdlPvj>
 8012294:	4620      	mov	r0, r4
 8012296:	bd10      	pop	{r4, pc}

08012298 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 8012298:	b510      	push	{r4, lr}
 801229a:	2104      	movs	r1, #4
 801229c:	4604      	mov	r4, r0
 801229e:	f00a fe51 	bl	801cf44 <_ZdlPvj>
 80122a2:	4620      	mov	r0, r4
 80122a4:	bd10      	pop	{r4, pc}

080122a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 80122a6:	b510      	push	{r4, lr}
 80122a8:	f640 0144 	movw	r1, #2116	@ 0x844
 80122ac:	4604      	mov	r4, r0
 80122ae:	f00a fe49 	bl	801cf44 <_ZdlPvj>
 80122b2:	4620      	mov	r0, r4
 80122b4:	bd10      	pop	{r4, pc}

080122b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80122b6:	b510      	push	{r4, lr}
 80122b8:	2104      	movs	r1, #4
 80122ba:	4604      	mov	r4, r0
 80122bc:	f00a fe42 	bl	801cf44 <_ZdlPvj>
 80122c0:	4620      	mov	r0, r4
 80122c2:	bd10      	pop	{r4, pc}

080122c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80122c4:	b510      	push	{r4, lr}
 80122c6:	2104      	movs	r1, #4
 80122c8:	4604      	mov	r4, r0
 80122ca:	f00a fe3b 	bl	801cf44 <_ZdlPvj>
 80122ce:	4620      	mov	r0, r4
 80122d0:	bd10      	pop	{r4, pc}

080122d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80122d2:	b510      	push	{r4, lr}
 80122d4:	2104      	movs	r1, #4
 80122d6:	4604      	mov	r4, r0
 80122d8:	f00a fe34 	bl	801cf44 <_ZdlPvj>
 80122dc:	4620      	mov	r0, r4
 80122de:	bd10      	pop	{r4, pc}

080122e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80122e0:	b510      	push	{r4, lr}
 80122e2:	2104      	movs	r1, #4
 80122e4:	4604      	mov	r4, r0
 80122e6:	f00a fe2d 	bl	801cf44 <_ZdlPvj>
 80122ea:	4620      	mov	r0, r4
 80122ec:	bd10      	pop	{r4, pc}

080122ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80122ee:	b510      	push	{r4, lr}
 80122f0:	2104      	movs	r1, #4
 80122f2:	4604      	mov	r4, r0
 80122f4:	f00a fe26 	bl	801cf44 <_ZdlPvj>
 80122f8:	4620      	mov	r0, r4
 80122fa:	bd10      	pop	{r4, pc}

080122fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 80122fc:	b510      	push	{r4, lr}
 80122fe:	2104      	movs	r1, #4
 8012300:	4604      	mov	r4, r0
 8012302:	f00a fe1f 	bl	801cf44 <_ZdlPvj>
 8012306:	4620      	mov	r0, r4
 8012308:	bd10      	pop	{r4, pc}

0801230a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801230a:	b510      	push	{r4, lr}
 801230c:	2104      	movs	r1, #4
 801230e:	4604      	mov	r4, r0
 8012310:	f00a fe18 	bl	801cf44 <_ZdlPvj>
 8012314:	4620      	mov	r0, r4
 8012316:	bd10      	pop	{r4, pc}

08012318 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8012318:	b510      	push	{r4, lr}
 801231a:	2104      	movs	r1, #4
 801231c:	4604      	mov	r4, r0
 801231e:	f00a fe11 	bl	801cf44 <_ZdlPvj>
 8012322:	4620      	mov	r0, r4
 8012324:	bd10      	pop	{r4, pc}

08012326 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8012326:	b510      	push	{r4, lr}
 8012328:	2104      	movs	r1, #4
 801232a:	4604      	mov	r4, r0
 801232c:	f00a fe0a 	bl	801cf44 <_ZdlPvj>
 8012330:	4620      	mov	r0, r4
 8012332:	bd10      	pop	{r4, pc}

08012334 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012334:	b510      	push	{r4, lr}
 8012336:	2104      	movs	r1, #4
 8012338:	4604      	mov	r4, r0
 801233a:	f00a fe03 	bl	801cf44 <_ZdlPvj>
 801233e:	4620      	mov	r0, r4
 8012340:	bd10      	pop	{r4, pc}

08012342 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8012342:	b510      	push	{r4, lr}
 8012344:	2104      	movs	r1, #4
 8012346:	4604      	mov	r4, r0
 8012348:	f00a fdfc 	bl	801cf44 <_ZdlPvj>
 801234c:	4620      	mov	r0, r4
 801234e:	bd10      	pop	{r4, pc}

08012350 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012350:	b510      	push	{r4, lr}
 8012352:	2104      	movs	r1, #4
 8012354:	4604      	mov	r4, r0
 8012356:	f00a fdf5 	bl	801cf44 <_ZdlPvj>
 801235a:	4620      	mov	r0, r4
 801235c:	bd10      	pop	{r4, pc}

0801235e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801235e:	b510      	push	{r4, lr}
 8012360:	2104      	movs	r1, #4
 8012362:	4604      	mov	r4, r0
 8012364:	f00a fdee 	bl	801cf44 <_ZdlPvj>
 8012368:	4620      	mov	r0, r4
 801236a:	bd10      	pop	{r4, pc}

0801236c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801236c:	b510      	push	{r4, lr}
 801236e:	2104      	movs	r1, #4
 8012370:	4604      	mov	r4, r0
 8012372:	f00a fde7 	bl	801cf44 <_ZdlPvj>
 8012376:	4620      	mov	r0, r4
 8012378:	bd10      	pop	{r4, pc}

0801237a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801237a:	b510      	push	{r4, lr}
 801237c:	2104      	movs	r1, #4
 801237e:	4604      	mov	r4, r0
 8012380:	f00a fde0 	bl	801cf44 <_ZdlPvj>
 8012384:	4620      	mov	r0, r4
 8012386:	bd10      	pop	{r4, pc}

08012388 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012388:	b510      	push	{r4, lr}
 801238a:	2104      	movs	r1, #4
 801238c:	4604      	mov	r4, r0
 801238e:	f00a fdd9 	bl	801cf44 <_ZdlPvj>
 8012392:	4620      	mov	r0, r4
 8012394:	bd10      	pop	{r4, pc}

08012396 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8012396:	b510      	push	{r4, lr}
 8012398:	2104      	movs	r1, #4
 801239a:	4604      	mov	r4, r0
 801239c:	f00a fdd2 	bl	801cf44 <_ZdlPvj>
 80123a0:	4620      	mov	r0, r4
 80123a2:	bd10      	pop	{r4, pc}

080123a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80123a4:	b510      	push	{r4, lr}
 80123a6:	2104      	movs	r1, #4
 80123a8:	4604      	mov	r4, r0
 80123aa:	f00a fdcb 	bl	801cf44 <_ZdlPvj>
 80123ae:	4620      	mov	r0, r4
 80123b0:	bd10      	pop	{r4, pc}

080123b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80123b2:	b510      	push	{r4, lr}
 80123b4:	2104      	movs	r1, #4
 80123b6:	4604      	mov	r4, r0
 80123b8:	f00a fdc4 	bl	801cf44 <_ZdlPvj>
 80123bc:	4620      	mov	r0, r4
 80123be:	bd10      	pop	{r4, pc}

080123c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 80123c0:	b510      	push	{r4, lr}
 80123c2:	2104      	movs	r1, #4
 80123c4:	4604      	mov	r4, r0
 80123c6:	f00a fdbd 	bl	801cf44 <_ZdlPvj>
 80123ca:	4620      	mov	r0, r4
 80123cc:	bd10      	pop	{r4, pc}

080123ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80123ce:	b510      	push	{r4, lr}
 80123d0:	2104      	movs	r1, #4
 80123d2:	4604      	mov	r4, r0
 80123d4:	f00a fdb6 	bl	801cf44 <_ZdlPvj>
 80123d8:	4620      	mov	r0, r4
 80123da:	bd10      	pop	{r4, pc}

080123dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80123dc:	b510      	push	{r4, lr}
 80123de:	2104      	movs	r1, #4
 80123e0:	4604      	mov	r4, r0
 80123e2:	f00a fdaf 	bl	801cf44 <_ZdlPvj>
 80123e6:	4620      	mov	r0, r4
 80123e8:	bd10      	pop	{r4, pc}

080123ea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80123ea:	b510      	push	{r4, lr}
 80123ec:	2104      	movs	r1, #4
 80123ee:	4604      	mov	r4, r0
 80123f0:	f00a fda8 	bl	801cf44 <_ZdlPvj>
 80123f4:	4620      	mov	r0, r4
 80123f6:	bd10      	pop	{r4, pc}

080123f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80123f8:	b510      	push	{r4, lr}
 80123fa:	2104      	movs	r1, #4
 80123fc:	4604      	mov	r4, r0
 80123fe:	f00a fda1 	bl	801cf44 <_ZdlPvj>
 8012402:	4620      	mov	r0, r4
 8012404:	bd10      	pop	{r4, pc}

08012406 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8012406:	b510      	push	{r4, lr}
 8012408:	2104      	movs	r1, #4
 801240a:	4604      	mov	r4, r0
 801240c:	f00a fd9a 	bl	801cf44 <_ZdlPvj>
 8012410:	4620      	mov	r0, r4
 8012412:	bd10      	pop	{r4, pc}

08012414 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8012414:	b510      	push	{r4, lr}
 8012416:	2104      	movs	r1, #4
 8012418:	4604      	mov	r4, r0
 801241a:	f00a fd93 	bl	801cf44 <_ZdlPvj>
 801241e:	4620      	mov	r0, r4
 8012420:	bd10      	pop	{r4, pc}

08012422 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8012422:	b510      	push	{r4, lr}
 8012424:	2104      	movs	r1, #4
 8012426:	4604      	mov	r4, r0
 8012428:	f00a fd8c 	bl	801cf44 <_ZdlPvj>
 801242c:	4620      	mov	r0, r4
 801242e:	bd10      	pop	{r4, pc}

08012430 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8012430:	b510      	push	{r4, lr}
 8012432:	2104      	movs	r1, #4
 8012434:	4604      	mov	r4, r0
 8012436:	f00a fd85 	bl	801cf44 <_ZdlPvj>
 801243a:	4620      	mov	r0, r4
 801243c:	bd10      	pop	{r4, pc}
	...

08012440 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8012440:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012444:	b08f      	sub	sp, #60	@ 0x3c
 8012446:	461c      	mov	r4, r3
 8012448:	9205      	str	r2, [sp, #20]
 801244a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801244e:	9100      	str	r1, [sp, #0]
 8012450:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8012452:	9201      	str	r2, [sp, #4]
 8012454:	2a00      	cmp	r2, #0
 8012456:	f000 8115 	beq.w	8012684 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801245a:	6820      	ldr	r0, [r4, #0]
 801245c:	6861      	ldr	r1, [r4, #4]
 801245e:	aa0a      	add	r2, sp, #40	@ 0x28
 8012460:	c203      	stmia	r2!, {r0, r1}
 8012462:	6818      	ldr	r0, [r3, #0]
 8012464:	6859      	ldr	r1, [r3, #4]
 8012466:	aa0c      	add	r2, sp, #48	@ 0x30
 8012468:	c203      	stmia	r2!, {r0, r1}
 801246a:	a80a      	add	r0, sp, #40	@ 0x28
 801246c:	f7f9 fe6a 	bl	800c144 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012470:	4621      	mov	r1, r4
 8012472:	a80c      	add	r0, sp, #48	@ 0x30
 8012474:	f7f9 fe8e 	bl	800c194 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012478:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801247c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8012480:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8012484:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8012488:	bfde      	ittt	le
 801248a:	b2b3      	uxthle	r3, r6
 801248c:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8012490:	fb92 f3f3 	sdivle	r3, r2, r3
 8012494:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8012498:	bfc8      	it	gt
 801249a:	2301      	movgt	r3, #1
 801249c:	fb92 f1f3 	sdiv	r1, r2, r3
 80124a0:	fa1f fc81 	uxth.w	ip, r1
 80124a4:	fb0c 2413 	mls	r4, ip, r3, r2
 80124a8:	fb14 f406 	smulbb	r4, r4, r6
 80124ac:	441d      	add	r5, r3
 80124ae:	4404      	add	r4, r0
 80124b0:	4661      	mov	r1, ip
 80124b2:	3d01      	subs	r5, #1
 80124b4:	b2a4      	uxth	r4, r4
 80124b6:	fb95 f5f3 	sdiv	r5, r5, r3
 80124ba:	b131      	cbz	r1, 80124ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 80124bc:	9b05      	ldr	r3, [sp, #20]
 80124be:	9900      	ldr	r1, [sp, #0]
 80124c0:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80124c4:	ba1b      	rev	r3, r3
 80124c6:	4419      	add	r1, r3
 80124c8:	9100      	str	r1, [sp, #0]
 80124ca:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80124ce:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 80124d2:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 80124d6:	4418      	add	r0, r3
 80124d8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80124dc:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 80124e0:	441a      	add	r2, r3
 80124e2:	4b6a      	ldr	r3, [pc, #424]	@ (801268c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 80124e4:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 80124e8:	6818      	ldr	r0, [r3, #0]
 80124ea:	6803      	ldr	r3, [r0, #0]
 80124ec:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80124ee:	4798      	blx	r3
 80124f0:	4967      	ldr	r1, [pc, #412]	@ (8012690 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 80124f2:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 80124f6:	880b      	ldrh	r3, [r1, #0]
 80124f8:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 80124fc:	9109      	str	r1, [sp, #36]	@ 0x24
 80124fe:	fb03 c202 	mla	r2, r3, r2, ip
 8012502:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012506:	4373      	muls	r3, r6
 8012508:	b2ad      	uxth	r5, r5
 801250a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801250e:	00ad      	lsls	r5, r5, #2
 8012510:	9306      	str	r3, [sp, #24]
 8012512:	1d2b      	adds	r3, r5, #4
 8012514:	9307      	str	r3, [sp, #28]
 8012516:	9b01      	ldr	r3, [sp, #4]
 8012518:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801251c:	9103      	str	r1, [sp, #12]
 801251e:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 8012522:	2c00      	cmp	r4, #0
 8012524:	bf0c      	ite	eq
 8012526:	46c6      	moveq	lr, r8
 8012528:	f04f 0e00 	movne.w	lr, #0
 801252c:	2300      	movs	r3, #0
 801252e:	b292      	uxth	r2, r2
 8012530:	fa1f fe8e 	uxth.w	lr, lr
 8012534:	9302      	str	r3, [sp, #8]
 8012536:	9204      	str	r2, [sp, #16]
 8012538:	9a06      	ldr	r2, [sp, #24]
 801253a:	4282      	cmp	r2, r0
 801253c:	f240 809d 	bls.w	801267a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 8012540:	b963      	cbnz	r3, 801255c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8012542:	9b00      	ldr	r3, [sp, #0]
 8012544:	781a      	ldrb	r2, [r3, #0]
 8012546:	0993      	lsrs	r3, r2, #6
 8012548:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801254c:	9202      	str	r2, [sp, #8]
 801254e:	1e5a      	subs	r2, r3, #1
 8012550:	2a02      	cmp	r2, #2
 8012552:	d815      	bhi.n	8012580 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 8012554:	9a00      	ldr	r2, [sp, #0]
 8012556:	3201      	adds	r2, #1
 8012558:	9200      	str	r2, [sp, #0]
 801255a:	b29b      	uxth	r3, r3
 801255c:	b1b4      	cbz	r4, 801258c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801255e:	429c      	cmp	r4, r3
 8012560:	bf95      	itete	ls
 8012562:	1b1c      	subls	r4, r3, r4
 8012564:	1ae4      	subhi	r4, r4, r3
 8012566:	fa1f fa84 	uxthls.w	sl, r4
 801256a:	b2a4      	uxthhi	r4, r4
 801256c:	bf87      	ittee	hi
 801256e:	4671      	movhi	r1, lr
 8012570:	f04f 0a00 	movhi.w	sl, #0
 8012574:	fa1f f188 	uxthls.w	r1, r8
 8012578:	2400      	movls	r4, #0
 801257a:	4653      	mov	r3, sl
 801257c:	468e      	mov	lr, r1
 801257e:	e7db      	b.n	8012538 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 8012580:	9a00      	ldr	r2, [sp, #0]
 8012582:	9b00      	ldr	r3, [sp, #0]
 8012584:	3202      	adds	r2, #2
 8012586:	785b      	ldrb	r3, [r3, #1]
 8012588:	9200      	str	r2, [sp, #0]
 801258a:	e7e7      	b.n	801255c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801258c:	2202      	movs	r2, #2
 801258e:	4615      	mov	r5, r2
 8012590:	9907      	ldr	r1, [sp, #28]
 8012592:	9a02      	ldr	r2, [sp, #8]
 8012594:	fb15 1202 	smlabb	r2, r5, r2, r1
 8012598:	9905      	ldr	r1, [sp, #20]
 801259a:	4573      	cmp	r3, lr
 801259c:	f831 c002 	ldrh.w	ip, [r1, r2]
 80125a0:	9a01      	ldr	r2, [sp, #4]
 80125a2:	bf2b      	itete	cs
 80125a4:	eba3 0a0e 	subcs.w	sl, r3, lr
 80125a8:	ebae 0103 	subcc.w	r1, lr, r3
 80125ac:	46f1      	movcs	r9, lr
 80125ae:	4699      	movcc	r9, r3
 80125b0:	bf27      	ittee	cs
 80125b2:	fa1f fa8a 	uxthcs.w	sl, sl
 80125b6:	4621      	movcs	r1, r4
 80125b8:	b289      	uxthcc	r1, r1
 80125ba:	46a2      	movcc	sl, r4
 80125bc:	2aff      	cmp	r2, #255	@ 0xff
 80125be:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80125c2:	d105      	bne.n	80125d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 80125c4:	4481      	add	r9, r0
 80125c6:	4581      	cmp	r9, r0
 80125c8:	d045      	beq.n	8012656 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 80125ca:	f820 cb02 	strh.w	ip, [r0], #2
 80125ce:	e7fa      	b.n	80125c6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 80125d0:	9d03      	ldr	r5, [sp, #12]
 80125d2:	ea4f 222c 	mov.w	r2, ip, asr #8
 80125d6:	ea4f 0bec 	mov.w	fp, ip, asr #3
 80125da:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80125de:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80125e2:	436a      	muls	r2, r5
 80125e4:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 80125e8:	fa5f fc8c 	uxtb.w	ip, ip
 80125ec:	9208      	str	r2, [sp, #32]
 80125ee:	fb0b fb05 	mul.w	fp, fp, r5
 80125f2:	fb0c fc05 	mul.w	ip, ip, r5
 80125f6:	4481      	add	r9, r0
 80125f8:	4581      	cmp	r9, r0
 80125fa:	d02c      	beq.n	8012656 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 80125fc:	8802      	ldrh	r2, [r0, #0]
 80125fe:	9d04      	ldr	r5, [sp, #16]
 8012600:	9f04      	ldr	r7, [sp, #16]
 8012602:	1216      	asrs	r6, r2, #8
 8012604:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8012608:	fb16 f605 	smulbb	r6, r6, r5
 801260c:	9d08      	ldr	r5, [sp, #32]
 801260e:	442e      	add	r6, r5
 8012610:	10d5      	asrs	r5, r2, #3
 8012612:	00d2      	lsls	r2, r2, #3
 8012614:	b2d2      	uxtb	r2, r2
 8012616:	fb12 f207 	smulbb	r2, r2, r7
 801261a:	b2b6      	uxth	r6, r6
 801261c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8012620:	4462      	add	r2, ip
 8012622:	fb15 f507 	smulbb	r5, r5, r7
 8012626:	b292      	uxth	r2, r2
 8012628:	1c77      	adds	r7, r6, #1
 801262a:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801262e:	1c57      	adds	r7, r2, #1
 8012630:	445d      	add	r5, fp
 8012632:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 8012636:	b2ad      	uxth	r5, r5
 8012638:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801263c:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8012640:	4316      	orrs	r6, r2
 8012642:	1c6a      	adds	r2, r5, #1
 8012644:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8012648:	096d      	lsrs	r5, r5, #5
 801264a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801264e:	432e      	orrs	r6, r5
 8012650:	f820 6b02 	strh.w	r6, [r0], #2
 8012654:	e7d0      	b.n	80125f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 8012656:	4573      	cmp	r3, lr
 8012658:	d38f      	bcc.n	801257a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801265a:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801265e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8012660:	fa1f f188 	uxth.w	r1, r8
 8012664:	1a64      	subs	r4, r4, r1
 8012666:	881b      	ldrh	r3, [r3, #0]
 8012668:	b2a4      	uxth	r4, r4
 801266a:	2c00      	cmp	r4, #0
 801266c:	eba3 0308 	sub.w	r3, r3, r8
 8012670:	bf18      	it	ne
 8012672:	2100      	movne	r1, #0
 8012674:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012678:	e77f      	b.n	801257a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801267a:	4b04      	ldr	r3, [pc, #16]	@ (801268c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801267c:	6818      	ldr	r0, [r3, #0]
 801267e:	6803      	ldr	r3, [r0, #0]
 8012680:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012682:	4798      	blx	r3
 8012684:	b00f      	add	sp, #60	@ 0x3c
 8012686:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801268a:	bf00      	nop
 801268c:	200119d4 	.word	0x200119d4
 8012690:	200119ce 	.word	0x200119ce

08012694 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8012694:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012698:	b09f      	sub	sp, #124	@ 0x7c
 801269a:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 801269e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 80126a2:	9209      	str	r2, [sp, #36]	@ 0x24
 80126a4:	461d      	mov	r5, r3
 80126a6:	4604      	mov	r4, r0
 80126a8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80126aa:	2a00      	cmp	r2, #0
 80126ac:	f000 81eb 	beq.w	8012a86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 80126b0:	6828      	ldr	r0, [r5, #0]
 80126b2:	6869      	ldr	r1, [r5, #4]
 80126b4:	aa1a      	add	r2, sp, #104	@ 0x68
 80126b6:	c203      	stmia	r2!, {r0, r1}
 80126b8:	6818      	ldr	r0, [r3, #0]
 80126ba:	6859      	ldr	r1, [r3, #4]
 80126bc:	aa1c      	add	r2, sp, #112	@ 0x70
 80126be:	c203      	stmia	r2!, {r0, r1}
 80126c0:	a81a      	add	r0, sp, #104	@ 0x68
 80126c2:	f7f9 fd3f 	bl	800c144 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80126c6:	4629      	mov	r1, r5
 80126c8:	a81c      	add	r0, sp, #112	@ 0x70
 80126ca:	f7f9 fd63 	bl	800c194 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80126ce:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 80126d2:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 80126d6:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 80126da:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80126de:	bfd7      	itett	le
 80126e0:	b29a      	uxthle	r2, r3
 80126e2:	2201      	movgt	r2, #1
 80126e4:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80126e8:	fb91 f2f2 	sdivle	r2, r1, r2
 80126ec:	9202      	str	r2, [sp, #8]
 80126ee:	9802      	ldr	r0, [sp, #8]
 80126f0:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 80126f4:	fb92 f0f0 	sdiv	r0, r2, r0
 80126f8:	b280      	uxth	r0, r0
 80126fa:	9010      	str	r0, [sp, #64]	@ 0x40
 80126fc:	9902      	ldr	r1, [sp, #8]
 80126fe:	9802      	ldr	r0, [sp, #8]
 8012700:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8012702:	4488      	add	r8, r1
 8012704:	fb05 2510 	mls	r5, r5, r0, r2
 8012708:	fb15 f503 	smulbb	r5, r5, r3
 801270c:	f108 38ff 	add.w	r8, r8, #4294967295
 8012710:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8012714:	fb98 f8f1 	sdiv	r8, r8, r1
 8012718:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801271c:	440d      	add	r5, r1
 801271e:	4419      	add	r1, r3
 8012720:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8012724:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8012728:	441a      	add	r2, r3
 801272a:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 801272e:	9304      	str	r3, [sp, #16]
 8012730:	4b95      	ldr	r3, [pc, #596]	@ (8012988 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8012732:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8012736:	6818      	ldr	r0, [r3, #0]
 8012738:	6803      	ldr	r3, [r0, #0]
 801273a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801273c:	4798      	blx	r3
 801273e:	4b93      	ldr	r3, [pc, #588]	@ (801298c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8012740:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8012744:	881a      	ldrh	r2, [r3, #0]
 8012746:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801274a:	9318      	str	r3, [sp, #96]	@ 0x60
 801274c:	fb02 7101 	mla	r1, r2, r1, r7
 8012750:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8012754:	4356      	muls	r6, r2
 8012756:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801275a:	f108 0801 	add.w	r8, r8, #1
 801275e:	920a      	str	r2, [sp, #40]	@ 0x28
 8012760:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8012762:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8012766:	930f      	str	r3, [sp, #60]	@ 0x3c
 8012768:	fa1f f888 	uxth.w	r8, r8
 801276c:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 8012770:	f108 0204 	add.w	r2, r8, #4
 8012774:	9211      	str	r2, [sp, #68]	@ 0x44
 8012776:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8012778:	4b85      	ldr	r3, [pc, #532]	@ (8012990 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801277a:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 801277e:	b2ad      	uxth	r5, r5
 8012780:	9215      	str	r2, [sp, #84]	@ 0x54
 8012782:	2d00      	cmp	r5, #0
 8012784:	9a04      	ldr	r2, [sp, #16]
 8012786:	f04f 0100 	mov.w	r1, #0
 801278a:	bf18      	it	ne
 801278c:	2200      	movne	r2, #0
 801278e:	1b1b      	subs	r3, r3, r4
 8012790:	b292      	uxth	r2, r2
 8012792:	910d      	str	r1, [sp, #52]	@ 0x34
 8012794:	9319      	str	r3, [sp, #100]	@ 0x64
 8012796:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8012798:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801279a:	fa11 f383 	uxtah	r3, r1, r3
 801279e:	9914      	ldr	r1, [sp, #80]	@ 0x50
 80127a0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80127a4:	3304      	adds	r3, #4
 80127a6:	9306      	str	r3, [sp, #24]
 80127a8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80127aa:	4283      	cmp	r3, r0
 80127ac:	f240 8166 	bls.w	8012a7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 80127b0:	9902      	ldr	r1, [sp, #8]
 80127b2:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 80127b6:	fbb5 f3f3 	udiv	r3, r5, r3
 80127ba:	1acb      	subs	r3, r1, r3
 80127bc:	b29b      	uxth	r3, r3
 80127be:	9316      	str	r3, [sp, #88]	@ 0x58
 80127c0:	9b06      	ldr	r3, [sp, #24]
 80127c2:	9e06      	ldr	r6, [sp, #24]
 80127c4:	7859      	ldrb	r1, [r3, #1]
 80127c6:	789b      	ldrb	r3, [r3, #2]
 80127c8:	7836      	ldrb	r6, [r6, #0]
 80127ca:	9612      	str	r6, [sp, #72]	@ 0x48
 80127cc:	021b      	lsls	r3, r3, #8
 80127ce:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80127d2:	9906      	ldr	r1, [sp, #24]
 80127d4:	78c9      	ldrb	r1, [r1, #3]
 80127d6:	430b      	orrs	r3, r1
 80127d8:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80127da:	3601      	adds	r6, #1
 80127dc:	4419      	add	r1, r3
 80127de:	9605      	str	r6, [sp, #20]
 80127e0:	1c4e      	adds	r6, r1, #1
 80127e2:	9603      	str	r6, [sp, #12]
 80127e4:	7849      	ldrb	r1, [r1, #1]
 80127e6:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80127e8:	0209      	lsls	r1, r1, #8
 80127ea:	5cf3      	ldrb	r3, [r6, r3]
 80127ec:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 80127f0:	4319      	orrs	r1, r3
 80127f2:	b28b      	uxth	r3, r1
 80127f4:	930c      	str	r3, [sp, #48]	@ 0x30
 80127f6:	2300      	movs	r3, #0
 80127f8:	f04f 0a01 	mov.w	sl, #1
 80127fc:	9307      	str	r3, [sp, #28]
 80127fe:	469c      	mov	ip, r3
 8012800:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8012804:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8012808:	46d3      	mov	fp, sl
 801280a:	4657      	mov	r7, sl
 801280c:	930e      	str	r3, [sp, #56]	@ 0x38
 801280e:	2d00      	cmp	r5, #0
 8012810:	d07e      	beq.n	8012910 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 8012812:	42af      	cmp	r7, r5
 8012814:	d26e      	bcs.n	80128f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 8012816:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8012818:	9201      	str	r2, [sp, #4]
 801281a:	1bed      	subs	r5, r5, r7
 801281c:	4283      	cmp	r3, r0
 801281e:	b2ad      	uxth	r5, r5
 8012820:	d802      	bhi.n	8012828 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 8012822:	e073      	b.n	801290c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 8012824:	2b00      	cmp	r3, #0
 8012826:	d15f      	bne.n	80128e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 8012828:	9b03      	ldr	r3, [sp, #12]
 801282a:	785b      	ldrb	r3, [r3, #1]
 801282c:	f1cb 0207 	rsb	r2, fp, #7
 8012830:	4093      	lsls	r3, r2
 8012832:	005b      	lsls	r3, r3, #1
 8012834:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8012838:	9b03      	ldr	r3, [sp, #12]
 801283a:	781b      	ldrb	r3, [r3, #0]
 801283c:	fa43 f30b 	asr.w	r3, r3, fp
 8012840:	b2db      	uxtb	r3, r3
 8012842:	4313      	orrs	r3, r2
 8012844:	f10b 0201 	add.w	r2, fp, #1
 8012848:	fa5f fb82 	uxtb.w	fp, r2
 801284c:	9a03      	ldr	r2, [sp, #12]
 801284e:	f1bb 0f08 	cmp.w	fp, #8
 8012852:	bf15      	itete	ne
 8012854:	3201      	addne	r2, #1
 8012856:	3202      	addeq	r2, #2
 8012858:	9203      	strne	r2, [sp, #12]
 801285a:	9203      	streq	r2, [sp, #12]
 801285c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801285e:	b29f      	uxth	r7, r3
 8012860:	bf08      	it	eq
 8012862:	f04f 0b00 	moveq.w	fp, #0
 8012866:	42ba      	cmp	r2, r7
 8012868:	d309      	bcc.n	801287e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801286a:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801286e:	2301      	movs	r3, #1
 8012870:	9a05      	ldr	r2, [sp, #20]
 8012872:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 8012876:	d30e      	bcc.n	8012896 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 8012878:	469a      	mov	sl, r3
 801287a:	2600      	movs	r6, #0
 801287c:	e035      	b.n	80128ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801287e:	9b05      	ldr	r3, [sp, #20]
 8012880:	429f      	cmp	r7, r3
 8012882:	d318      	bcc.n	80128b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 8012884:	eb04 030a 	add.w	r3, r4, sl
 8012888:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 801288c:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 8012890:	f10a 0301 	add.w	r3, sl, #1
 8012894:	b29b      	uxth	r3, r3
 8012896:	9a05      	ldr	r2, [sp, #20]
 8012898:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 801289c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801289e:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 80128a2:	7116      	strb	r6, [r2, #4]
 80128a4:	f10a 0601 	add.w	r6, sl, #1
 80128a8:	80d1      	strh	r1, [r2, #6]
 80128aa:	7156      	strb	r6, [r2, #5]
 80128ac:	9a05      	ldr	r2, [sp, #20]
 80128ae:	3201      	adds	r2, #1
 80128b0:	b292      	uxth	r2, r2
 80128b2:	9205      	str	r2, [sp, #20]
 80128b4:	e7e0      	b.n	8012878 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 80128b6:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 80128ba:	463a      	mov	r2, r7
 80128bc:	795b      	ldrb	r3, [r3, #5]
 80128be:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 80128c2:	4426      	add	r6, r4
 80128c4:	9919      	ldr	r1, [sp, #100]	@ 0x64
 80128c6:	eb01 0c06 	add.w	ip, r1, r6
 80128ca:	f1bc 0f00 	cmp.w	ip, #0
 80128ce:	dd07      	ble.n	80128e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 80128d0:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 80128d4:	f892 c004 	ldrb.w	ip, [r2, #4]
 80128d8:	f806 cd01 	strb.w	ip, [r6, #-1]!
 80128dc:	88d2      	ldrh	r2, [r2, #6]
 80128de:	e7f1      	b.n	80128c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 80128e0:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 80128e4:	b29b      	uxth	r3, r3
 80128e6:	e7c3      	b.n	8012870 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 80128e8:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 80128ea:	970c      	str	r7, [sp, #48]	@ 0x30
 80128ec:	9a01      	ldr	r2, [sp, #4]
 80128ee:	46b4      	mov	ip, r6
 80128f0:	461f      	mov	r7, r3
 80128f2:	e78c      	b.n	801280e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 80128f4:	1b7b      	subs	r3, r7, r5
 80128f6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80128fa:	9201      	str	r2, [sp, #4]
 80128fc:	eb0c 0605 	add.w	r6, ip, r5
 8012900:	b29b      	uxth	r3, r3
 8012902:	b2b6      	uxth	r6, r6
 8012904:	2500      	movs	r5, #0
 8012906:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8012908:	4282      	cmp	r2, r0
 801290a:	d88b      	bhi.n	8012824 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801290c:	9a01      	ldr	r2, [sp, #4]
 801290e:	e74b      	b.n	80127a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 8012910:	4297      	cmp	r7, r2
 8012912:	d332      	bcc.n	801297a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 8012914:	1abb      	subs	r3, r7, r2
 8012916:	b29b      	uxth	r3, r3
 8012918:	9208      	str	r2, [sp, #32]
 801291a:	9501      	str	r5, [sp, #4]
 801291c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801291e:	29ff      	cmp	r1, #255	@ 0xff
 8012920:	9908      	ldr	r1, [sp, #32]
 8012922:	eb0c 0601 	add.w	r6, ip, r1
 8012926:	d135      	bne.n	8012994 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 8012928:	f1a0 0e02 	sub.w	lr, r0, #2
 801292c:	b2b6      	uxth	r6, r6
 801292e:	45b4      	cmp	ip, r6
 8012930:	f040 808c 	bne.w	8012a4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 8012934:	9908      	ldr	r1, [sp, #32]
 8012936:	4297      	cmp	r7, r2
 8012938:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801293c:	d3e2      	bcc.n	8012904 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801293e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8012940:	9904      	ldr	r1, [sp, #16]
 8012942:	8812      	ldrh	r2, [r2, #0]
 8012944:	1a52      	subs	r2, r2, r1
 8012946:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801294a:	9a07      	ldr	r2, [sp, #28]
 801294c:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801294e:	3201      	adds	r2, #1
 8012950:	428a      	cmp	r2, r1
 8012952:	9207      	str	r2, [sp, #28]
 8012954:	f040 8087 	bne.w	8012a66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 8012958:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 801295c:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 8012960:	9b04      	ldr	r3, [sp, #16]
 8012962:	1bed      	subs	r5, r5, r7
 8012964:	b2ad      	uxth	r5, r5
 8012966:	2d00      	cmp	r5, #0
 8012968:	bf08      	it	eq
 801296a:	461a      	moveq	r2, r3
 801296c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801296e:	bf18      	it	ne
 8012970:	2200      	movne	r2, #0
 8012972:	3301      	adds	r3, #1
 8012974:	930d      	str	r3, [sp, #52]	@ 0x34
 8012976:	b292      	uxth	r2, r2
 8012978:	e70d      	b.n	8012796 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801297a:	1bd1      	subs	r1, r2, r7
 801297c:	b28b      	uxth	r3, r1
 801297e:	9301      	str	r3, [sp, #4]
 8012980:	9708      	str	r7, [sp, #32]
 8012982:	462b      	mov	r3, r5
 8012984:	e7ca      	b.n	801291c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 8012986:	bf00      	nop
 8012988:	200119d4 	.word	0x200119d4
 801298c:	200119ce 	.word	0x200119ce
 8012990:	fffff7fb 	.word	0xfffff7fb
 8012994:	b2b6      	uxth	r6, r6
 8012996:	900b      	str	r0, [sp, #44]	@ 0x2c
 8012998:	45b4      	cmp	ip, r6
 801299a:	d0cb      	beq.n	8012934 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801299c:	f10c 0101 	add.w	r1, ip, #1
 80129a0:	44a4      	add	ip, r4
 80129a2:	9117      	str	r1, [sp, #92]	@ 0x5c
 80129a4:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 80129a8:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80129aa:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 80129ae:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80129b0:	f8b1 c000 	ldrh.w	ip, [r1]
 80129b4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80129b6:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 80129ba:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80129be:	fb1e fe01 	smulbb	lr, lr, r1
 80129c2:	ea4f 2825 	mov.w	r8, r5, asr #8
 80129c6:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80129c8:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 80129cc:	fb08 e801 	mla	r8, r8, r1, lr
 80129d0:	ea4f 09ec 	mov.w	r9, ip, asr #3
 80129d4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80129d6:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80129da:	fb19 f901 	smulbb	r9, r9, r1
 80129de:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 80129e2:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80129e4:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80129e8:	fb0e 9e01 	mla	lr, lr, r1, r9
 80129ec:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80129f0:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80129f2:	fa5f fc8c 	uxtb.w	ip, ip
 80129f6:	fb1c fc01 	smulbb	ip, ip, r1
 80129fa:	00ed      	lsls	r5, r5, #3
 80129fc:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80129fe:	b2ed      	uxtb	r5, r5
 8012a00:	fb05 c501 	mla	r5, r5, r1, ip
 8012a04:	fa1f f888 	uxth.w	r8, r8
 8012a08:	fa1f fe8e 	uxth.w	lr, lr
 8012a0c:	b2ad      	uxth	r5, r5
 8012a0e:	f108 0c01 	add.w	ip, r8, #1
 8012a12:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8012a16:	f10e 0901 	add.w	r9, lr, #1
 8012a1a:	f105 0c01 	add.w	ip, r5, #1
 8012a1e:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8012a22:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 8012a26:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8012a2a:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8012a2e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8012a32:	ea4c 0808 	orr.w	r8, ip, r8
 8012a36:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8012a38:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 8012a3c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8012a40:	ea48 0809 	orr.w	r8, r8, r9
 8012a44:	f821 8b02 	strh.w	r8, [r1], #2
 8012a48:	910b      	str	r1, [sp, #44]	@ 0x2c
 8012a4a:	e7a5      	b.n	8012998 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 8012a4c:	f10c 0801 	add.w	r8, ip, #1
 8012a50:	44a4      	add	ip, r4
 8012a52:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8012a54:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8012a58:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8012a5c:	f82e 5f02 	strh.w	r5, [lr, #2]!
 8012a60:	fa1f fc88 	uxth.w	ip, r8
 8012a64:	e763      	b.n	801292e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 8012a66:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8012a6a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 8012a6e:	1aad      	subs	r5, r5, r2
 8012a70:	b2ad      	uxth	r5, r5
 8012a72:	2d00      	cmp	r5, #0
 8012a74:	bf18      	it	ne
 8012a76:	2200      	movne	r2, #0
 8012a78:	9201      	str	r2, [sp, #4]
 8012a7a:	e744      	b.n	8012906 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 8012a7c:	4b03      	ldr	r3, [pc, #12]	@ (8012a8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 8012a7e:	6818      	ldr	r0, [r3, #0]
 8012a80:	6803      	ldr	r3, [r0, #0]
 8012a82:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012a84:	4798      	blx	r3
 8012a86:	b01f      	add	sp, #124	@ 0x7c
 8012a88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012a8c:	200119d4 	.word	0x200119d4

08012a90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8012a90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012a94:	b08f      	sub	sp, #60	@ 0x3c
 8012a96:	461c      	mov	r4, r3
 8012a98:	9203      	str	r2, [sp, #12]
 8012a9a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8012a9e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8012aa0:	9202      	str	r2, [sp, #8]
 8012aa2:	460f      	mov	r7, r1
 8012aa4:	2a00      	cmp	r2, #0
 8012aa6:	f000 8128 	beq.w	8012cfa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 8012aaa:	6820      	ldr	r0, [r4, #0]
 8012aac:	6861      	ldr	r1, [r4, #4]
 8012aae:	aa0a      	add	r2, sp, #40	@ 0x28
 8012ab0:	c203      	stmia	r2!, {r0, r1}
 8012ab2:	6818      	ldr	r0, [r3, #0]
 8012ab4:	6859      	ldr	r1, [r3, #4]
 8012ab6:	aa0c      	add	r2, sp, #48	@ 0x30
 8012ab8:	c203      	stmia	r2!, {r0, r1}
 8012aba:	a80a      	add	r0, sp, #40	@ 0x28
 8012abc:	f7f9 fb42 	bl	800c144 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012ac0:	4621      	mov	r1, r4
 8012ac2:	a80c      	add	r0, sp, #48	@ 0x30
 8012ac4:	f7f9 fb66 	bl	800c194 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012ac8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8012acc:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8012ad0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8012ad4:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8012ad8:	bfde      	ittt	le
 8012ada:	b2b3      	uxthle	r3, r6
 8012adc:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8012ae0:	fb92 f3f3 	sdivle	r3, r2, r3
 8012ae4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8012ae8:	bfc8      	it	gt
 8012aea:	2301      	movgt	r3, #1
 8012aec:	fb92 f1f3 	sdiv	r1, r2, r3
 8012af0:	fa1f fc81 	uxth.w	ip, r1
 8012af4:	fb0c 2413 	mls	r4, ip, r3, r2
 8012af8:	fb14 f406 	smulbb	r4, r4, r6
 8012afc:	441d      	add	r5, r3
 8012afe:	4404      	add	r4, r0
 8012b00:	4661      	mov	r1, ip
 8012b02:	3d01      	subs	r5, #1
 8012b04:	b2a4      	uxth	r4, r4
 8012b06:	fb95 f5f3 	sdiv	r5, r5, r3
 8012b0a:	b121      	cbz	r1, 8012b16 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 8012b0c:	9b03      	ldr	r3, [sp, #12]
 8012b0e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8012b12:	ba1b      	rev	r3, r3
 8012b14:	441f      	add	r7, r3
 8012b16:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8012b1a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8012b1e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8012b22:	4418      	add	r0, r3
 8012b24:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8012b28:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8012b2c:	441a      	add	r2, r3
 8012b2e:	4b74      	ldr	r3, [pc, #464]	@ (8012d00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8012b30:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8012b34:	6818      	ldr	r0, [r3, #0]
 8012b36:	6803      	ldr	r3, [r0, #0]
 8012b38:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012b3a:	4798      	blx	r3
 8012b3c:	4a71      	ldr	r2, [pc, #452]	@ (8012d04 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 8012b3e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8012b42:	8813      	ldrh	r3, [r2, #0]
 8012b44:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8012b48:	9209      	str	r2, [sp, #36]	@ 0x24
 8012b4a:	fb03 c101 	mla	r1, r3, r1, ip
 8012b4e:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8012b52:	4373      	muls	r3, r6
 8012b54:	b2ad      	uxth	r5, r5
 8012b56:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012b5a:	00ad      	lsls	r5, r5, #2
 8012b5c:	2c00      	cmp	r4, #0
 8012b5e:	9304      	str	r3, [sp, #16]
 8012b60:	f105 0304 	add.w	r3, r5, #4
 8012b64:	9305      	str	r3, [sp, #20]
 8012b66:	bf0c      	ite	eq
 8012b68:	46c8      	moveq	r8, r9
 8012b6a:	f04f 0800 	movne.w	r8, #0
 8012b6e:	2300      	movs	r3, #0
 8012b70:	fa1f f888 	uxth.w	r8, r8
 8012b74:	9301      	str	r3, [sp, #4]
 8012b76:	9a04      	ldr	r2, [sp, #16]
 8012b78:	4282      	cmp	r2, r0
 8012b7a:	f240 80b9 	bls.w	8012cf0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 8012b7e:	b95b      	cbnz	r3, 8012b98 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 8012b80:	783a      	ldrb	r2, [r7, #0]
 8012b82:	0993      	lsrs	r3, r2, #6
 8012b84:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8012b88:	9201      	str	r2, [sp, #4]
 8012b8a:	1e5a      	subs	r2, r3, #1
 8012b8c:	2a02      	cmp	r2, #2
 8012b8e:	bf8d      	iteet	hi
 8012b90:	787b      	ldrbhi	r3, [r7, #1]
 8012b92:	3701      	addls	r7, #1
 8012b94:	b29b      	uxthls	r3, r3
 8012b96:	3702      	addhi	r7, #2
 8012b98:	b184      	cbz	r4, 8012bbc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 8012b9a:	429c      	cmp	r4, r3
 8012b9c:	bf95      	itete	ls
 8012b9e:	1b1c      	subls	r4, r3, r4
 8012ba0:	1ae4      	subhi	r4, r4, r3
 8012ba2:	fa1f fa84 	uxthls.w	sl, r4
 8012ba6:	b2a4      	uxthhi	r4, r4
 8012ba8:	bf87      	ittee	hi
 8012baa:	46c4      	movhi	ip, r8
 8012bac:	f04f 0a00 	movhi.w	sl, #0
 8012bb0:	fa1f fc89 	uxthls.w	ip, r9
 8012bb4:	2400      	movls	r4, #0
 8012bb6:	4653      	mov	r3, sl
 8012bb8:	46e0      	mov	r8, ip
 8012bba:	e7dc      	b.n	8012b76 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 8012bbc:	2204      	movs	r2, #4
 8012bbe:	4615      	mov	r5, r2
 8012bc0:	9905      	ldr	r1, [sp, #20]
 8012bc2:	9a01      	ldr	r2, [sp, #4]
 8012bc4:	fb15 1202 	smlabb	r2, r5, r2, r1
 8012bc8:	9903      	ldr	r1, [sp, #12]
 8012bca:	588a      	ldr	r2, [r1, r2]
 8012bcc:	4543      	cmp	r3, r8
 8012bce:	bf27      	ittee	cs
 8012bd0:	eba3 0a08 	subcs.w	sl, r3, r8
 8012bd4:	46c6      	movcs	lr, r8
 8012bd6:	eba8 0c03 	subcc.w	ip, r8, r3
 8012bda:	469e      	movcc	lr, r3
 8012bdc:	ea4f 6112 	mov.w	r1, r2, lsr #24
 8012be0:	bf27      	ittee	cs
 8012be2:	fa1f fa8a 	uxthcs.w	sl, sl
 8012be6:	46a4      	movcs	ip, r4
 8012be8:	fa1f fc8c 	uxthcc.w	ip, ip
 8012bec:	46a2      	movcc	sl, r4
 8012bee:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 8012bf2:	2900      	cmp	r1, #0
 8012bf4:	d066      	beq.n	8012cc4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 8012bf6:	29ff      	cmp	r1, #255	@ 0xff
 8012bf8:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8012bfc:	d114      	bne.n	8012c28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8012bfe:	9d02      	ldr	r5, [sp, #8]
 8012c00:	2dff      	cmp	r5, #255	@ 0xff
 8012c02:	d111      	bne.n	8012c28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8012c04:	0951      	lsrs	r1, r2, #5
 8012c06:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8012c0a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8012c0e:	f026 0607 	bic.w	r6, r6, #7
 8012c12:	430e      	orrs	r6, r1
 8012c14:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8012c18:	4316      	orrs	r6, r2
 8012c1a:	b2b6      	uxth	r6, r6
 8012c1c:	4486      	add	lr, r0
 8012c1e:	4586      	cmp	lr, r0
 8012c20:	d051      	beq.n	8012cc6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8012c22:	f820 6b02 	strh.w	r6, [r0], #2
 8012c26:	e7fa      	b.n	8012c1e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 8012c28:	9d02      	ldr	r5, [sp, #8]
 8012c2a:	4369      	muls	r1, r5
 8012c2c:	1c4d      	adds	r5, r1, #1
 8012c2e:	eb05 2521 	add.w	r5, r5, r1, asr #8
 8012c32:	122d      	asrs	r5, r5, #8
 8012c34:	ea6f 0b05 	mvn.w	fp, r5
 8012c38:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8012c3c:	b2ad      	uxth	r5, r5
 8012c3e:	b2f6      	uxtb	r6, r6
 8012c40:	b2d2      	uxtb	r2, r2
 8012c42:	fb11 f105 	smulbb	r1, r1, r5
 8012c46:	fb16 f605 	smulbb	r6, r6, r5
 8012c4a:	fb12 f205 	smulbb	r2, r2, r5
 8012c4e:	b289      	uxth	r1, r1
 8012c50:	b2b6      	uxth	r6, r6
 8012c52:	b292      	uxth	r2, r2
 8012c54:	9106      	str	r1, [sp, #24]
 8012c56:	9607      	str	r6, [sp, #28]
 8012c58:	9208      	str	r2, [sp, #32]
 8012c5a:	4486      	add	lr, r0
 8012c5c:	fa5f fb8b 	uxtb.w	fp, fp
 8012c60:	4586      	cmp	lr, r0
 8012c62:	d030      	beq.n	8012cc6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8012c64:	8802      	ldrh	r2, [r0, #0]
 8012c66:	9906      	ldr	r1, [sp, #24]
 8012c68:	1216      	asrs	r6, r2, #8
 8012c6a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8012c6e:	10d5      	asrs	r5, r2, #3
 8012c70:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8012c74:	fb06 160b 	mla	r6, r6, fp, r1
 8012c78:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8012c7c:	9907      	ldr	r1, [sp, #28]
 8012c7e:	00d2      	lsls	r2, r2, #3
 8012c80:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8012c84:	fb05 150b 	mla	r5, r5, fp, r1
 8012c88:	b2d2      	uxtb	r2, r2
 8012c8a:	9908      	ldr	r1, [sp, #32]
 8012c8c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8012c90:	b2b6      	uxth	r6, r6
 8012c92:	fb02 120b 	mla	r2, r2, fp, r1
 8012c96:	b292      	uxth	r2, r2
 8012c98:	1c71      	adds	r1, r6, #1
 8012c9a:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 8012c9e:	1c51      	adds	r1, r2, #1
 8012ca0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8012ca4:	b2ad      	uxth	r5, r5
 8012ca6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012caa:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8012cae:	4316      	orrs	r6, r2
 8012cb0:	1c6a      	adds	r2, r5, #1
 8012cb2:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8012cb6:	096d      	lsrs	r5, r5, #5
 8012cb8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8012cbc:	432e      	orrs	r6, r5
 8012cbe:	f820 6b02 	strh.w	r6, [r0], #2
 8012cc2:	e7cd      	b.n	8012c60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 8012cc4:	4470      	add	r0, lr
 8012cc6:	4543      	cmp	r3, r8
 8012cc8:	f4ff af75 	bcc.w	8012bb6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8012ccc:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8012cd0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8012cd2:	fa1f fc89 	uxth.w	ip, r9
 8012cd6:	eba4 040c 	sub.w	r4, r4, ip
 8012cda:	881b      	ldrh	r3, [r3, #0]
 8012cdc:	b2a4      	uxth	r4, r4
 8012cde:	2c00      	cmp	r4, #0
 8012ce0:	eba3 0309 	sub.w	r3, r3, r9
 8012ce4:	bf18      	it	ne
 8012ce6:	f04f 0c00 	movne.w	ip, #0
 8012cea:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012cee:	e762      	b.n	8012bb6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8012cf0:	4b03      	ldr	r3, [pc, #12]	@ (8012d00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8012cf2:	6818      	ldr	r0, [r3, #0]
 8012cf4:	6803      	ldr	r3, [r0, #0]
 8012cf6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012cf8:	4798      	blx	r3
 8012cfa:	b00f      	add	sp, #60	@ 0x3c
 8012cfc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012d00:	200119d4 	.word	0x200119d4
 8012d04:	200119ce 	.word	0x200119ce

08012d08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8012d08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012d0c:	b093      	sub	sp, #76	@ 0x4c
 8012d0e:	461c      	mov	r4, r3
 8012d10:	9205      	str	r2, [sp, #20]
 8012d12:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 8012d16:	9101      	str	r1, [sp, #4]
 8012d18:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8012d1a:	9202      	str	r2, [sp, #8]
 8012d1c:	2a00      	cmp	r2, #0
 8012d1e:	f000 812c 	beq.w	8012f7a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8012d22:	6820      	ldr	r0, [r4, #0]
 8012d24:	6861      	ldr	r1, [r4, #4]
 8012d26:	aa0e      	add	r2, sp, #56	@ 0x38
 8012d28:	c203      	stmia	r2!, {r0, r1}
 8012d2a:	6818      	ldr	r0, [r3, #0]
 8012d2c:	6859      	ldr	r1, [r3, #4]
 8012d2e:	aa10      	add	r2, sp, #64	@ 0x40
 8012d30:	c203      	stmia	r2!, {r0, r1}
 8012d32:	a80e      	add	r0, sp, #56	@ 0x38
 8012d34:	f7f9 fa06 	bl	800c144 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012d38:	4621      	mov	r1, r4
 8012d3a:	a810      	add	r0, sp, #64	@ 0x40
 8012d3c:	f7f9 fa2a 	bl	800c194 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012d40:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8012d44:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 8012d48:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 8012d4c:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8012d50:	bfde      	ittt	le
 8012d52:	b2b3      	uxthle	r3, r6
 8012d54:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8012d58:	fb92 f3f3 	sdivle	r3, r2, r3
 8012d5c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8012d60:	bfc8      	it	gt
 8012d62:	2301      	movgt	r3, #1
 8012d64:	fb92 f1f3 	sdiv	r1, r2, r3
 8012d68:	fa1f fc81 	uxth.w	ip, r1
 8012d6c:	fb0c 2413 	mls	r4, ip, r3, r2
 8012d70:	fb14 f406 	smulbb	r4, r4, r6
 8012d74:	441d      	add	r5, r3
 8012d76:	4404      	add	r4, r0
 8012d78:	4661      	mov	r1, ip
 8012d7a:	3d01      	subs	r5, #1
 8012d7c:	b2a4      	uxth	r4, r4
 8012d7e:	fb95 f5f3 	sdiv	r5, r5, r3
 8012d82:	b131      	cbz	r1, 8012d92 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 8012d84:	9b05      	ldr	r3, [sp, #20]
 8012d86:	9901      	ldr	r1, [sp, #4]
 8012d88:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8012d8c:	ba1b      	rev	r3, r3
 8012d8e:	4419      	add	r1, r3
 8012d90:	9101      	str	r1, [sp, #4]
 8012d92:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8012d96:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8012d9a:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 8012d9e:	4418      	add	r0, r3
 8012da0:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8012da4:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 8012da8:	441a      	add	r2, r3
 8012daa:	4b75      	ldr	r3, [pc, #468]	@ (8012f80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8012dac:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 8012db0:	6818      	ldr	r0, [r3, #0]
 8012db2:	6803      	ldr	r3, [r0, #0]
 8012db4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012db6:	4798      	blx	r3
 8012db8:	4972      	ldr	r1, [pc, #456]	@ (8012f84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8012dba:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 8012dbe:	880b      	ldrh	r3, [r1, #0]
 8012dc0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8012dc4:	910d      	str	r1, [sp, #52]	@ 0x34
 8012dc6:	fb03 c202 	mla	r2, r3, r2, ip
 8012dca:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012dce:	4373      	muls	r3, r6
 8012dd0:	b2ad      	uxth	r5, r5
 8012dd2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012dd6:	00ad      	lsls	r5, r5, #2
 8012dd8:	9308      	str	r3, [sp, #32]
 8012dda:	1d2b      	adds	r3, r5, #4
 8012ddc:	9309      	str	r3, [sp, #36]	@ 0x24
 8012dde:	9b02      	ldr	r3, [sp, #8]
 8012de0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8012de4:	9106      	str	r1, [sp, #24]
 8012de6:	43da      	mvns	r2, r3
 8012de8:	2c00      	cmp	r4, #0
 8012dea:	bf0c      	ite	eq
 8012dec:	46dc      	moveq	ip, fp
 8012dee:	f04f 0c00 	movne.w	ip, #0
 8012df2:	2300      	movs	r3, #0
 8012df4:	b2d2      	uxtb	r2, r2
 8012df6:	fa1f fc8c 	uxth.w	ip, ip
 8012dfa:	9303      	str	r3, [sp, #12]
 8012dfc:	9207      	str	r2, [sp, #28]
 8012dfe:	9a08      	ldr	r2, [sp, #32]
 8012e00:	4282      	cmp	r2, r0
 8012e02:	f240 80b5 	bls.w	8012f70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 8012e06:	b963      	cbnz	r3, 8012e22 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8012e08:	9b01      	ldr	r3, [sp, #4]
 8012e0a:	781a      	ldrb	r2, [r3, #0]
 8012e0c:	0993      	lsrs	r3, r2, #6
 8012e0e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8012e12:	9203      	str	r2, [sp, #12]
 8012e14:	1e5a      	subs	r2, r3, #1
 8012e16:	2a02      	cmp	r2, #2
 8012e18:	d815      	bhi.n	8012e46 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 8012e1a:	9a01      	ldr	r2, [sp, #4]
 8012e1c:	3201      	adds	r2, #1
 8012e1e:	9201      	str	r2, [sp, #4]
 8012e20:	b29b      	uxth	r3, r3
 8012e22:	b1b4      	cbz	r4, 8012e52 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 8012e24:	429c      	cmp	r4, r3
 8012e26:	bf95      	itete	ls
 8012e28:	1b1c      	subls	r4, r3, r4
 8012e2a:	1ae4      	subhi	r4, r4, r3
 8012e2c:	fa1f f884 	uxthls.w	r8, r4
 8012e30:	b2a4      	uxthhi	r4, r4
 8012e32:	bf87      	ittee	hi
 8012e34:	4666      	movhi	r6, ip
 8012e36:	f04f 0800 	movhi.w	r8, #0
 8012e3a:	fa1f f68b 	uxthls.w	r6, fp
 8012e3e:	2400      	movls	r4, #0
 8012e40:	4643      	mov	r3, r8
 8012e42:	46b4      	mov	ip, r6
 8012e44:	e7db      	b.n	8012dfe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 8012e46:	9a01      	ldr	r2, [sp, #4]
 8012e48:	9b01      	ldr	r3, [sp, #4]
 8012e4a:	3202      	adds	r2, #2
 8012e4c:	785b      	ldrb	r3, [r3, #1]
 8012e4e:	9201      	str	r2, [sp, #4]
 8012e50:	e7e7      	b.n	8012e22 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8012e52:	2203      	movs	r2, #3
 8012e54:	4615      	mov	r5, r2
 8012e56:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8012e58:	9a03      	ldr	r2, [sp, #12]
 8012e5a:	fb15 1202 	smlabb	r2, r5, r2, r1
 8012e5e:	9905      	ldr	r1, [sp, #20]
 8012e60:	4563      	cmp	r3, ip
 8012e62:	eb01 0502 	add.w	r5, r1, r2
 8012e66:	9902      	ldr	r1, [sp, #8]
 8012e68:	bf29      	itett	cs
 8012e6a:	eba3 080c 	subcs.w	r8, r3, ip
 8012e6e:	ebac 0603 	subcc.w	r6, ip, r3
 8012e72:	fa1f f888 	uxthcs.w	r8, r8
 8012e76:	46e1      	movcs	r9, ip
 8012e78:	bf2f      	iteee	cs
 8012e7a:	4626      	movcs	r6, r4
 8012e7c:	b2b6      	uxthcc	r6, r6
 8012e7e:	4699      	movcc	r9, r3
 8012e80:	46a0      	movcc	r8, r4
 8012e82:	29ff      	cmp	r1, #255	@ 0xff
 8012e84:	d04a      	beq.n	8012f1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 8012e86:	9f06      	ldr	r7, [sp, #24]
 8012e88:	78a9      	ldrb	r1, [r5, #2]
 8012e8a:	9004      	str	r0, [sp, #16]
 8012e8c:	4379      	muls	r1, r7
 8012e8e:	910a      	str	r1, [sp, #40]	@ 0x28
 8012e90:	7869      	ldrb	r1, [r5, #1]
 8012e92:	4379      	muls	r1, r7
 8012e94:	910b      	str	r1, [sp, #44]	@ 0x2c
 8012e96:	9905      	ldr	r1, [sp, #20]
 8012e98:	5c8a      	ldrb	r2, [r1, r2]
 8012e9a:	437a      	muls	r2, r7
 8012e9c:	920c      	str	r2, [sp, #48]	@ 0x30
 8012e9e:	46ca      	mov	sl, r9
 8012ea0:	f1ba 0f00 	cmp.w	sl, #0
 8012ea4:	d03d      	beq.n	8012f22 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 8012ea6:	9a04      	ldr	r2, [sp, #16]
 8012ea8:	9f07      	ldr	r7, [sp, #28]
 8012eaa:	8812      	ldrh	r2, [r2, #0]
 8012eac:	1215      	asrs	r5, r2, #8
 8012eae:	46be      	mov	lr, r7
 8012eb0:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8012eb4:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8012eb6:	10d1      	asrs	r1, r2, #3
 8012eb8:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8012ebc:	fb05 750e 	mla	r5, r5, lr, r7
 8012ec0:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8012ec4:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8012ec6:	00d2      	lsls	r2, r2, #3
 8012ec8:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8012ecc:	fb01 710e 	mla	r1, r1, lr, r7
 8012ed0:	b2d2      	uxtb	r2, r2
 8012ed2:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8012ed4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8012ed8:	b2ad      	uxth	r5, r5
 8012eda:	fb02 720e 	mla	r2, r2, lr, r7
 8012ede:	b292      	uxth	r2, r2
 8012ee0:	f105 0e01 	add.w	lr, r5, #1
 8012ee4:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8012ee8:	f102 0e01 	add.w	lr, r2, #1
 8012eec:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8012ef0:	b289      	uxth	r1, r1
 8012ef2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012ef6:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8012efa:	4315      	orrs	r5, r2
 8012efc:	1c4a      	adds	r2, r1, #1
 8012efe:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8012f02:	0949      	lsrs	r1, r1, #5
 8012f04:	9a04      	ldr	r2, [sp, #16]
 8012f06:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8012f0a:	430d      	orrs	r5, r1
 8012f0c:	f822 5b02 	strh.w	r5, [r2], #2
 8012f10:	f10a 3aff 	add.w	sl, sl, #4294967295
 8012f14:	9204      	str	r2, [sp, #16]
 8012f16:	fa1f fa8a 	uxth.w	sl, sl
 8012f1a:	e7c1      	b.n	8012ea0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 8012f1c:	4649      	mov	r1, r9
 8012f1e:	4686      	mov	lr, r0
 8012f20:	b999      	cbnz	r1, 8012f4a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8012f22:	4563      	cmp	r3, ip
 8012f24:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 8012f28:	d38a      	bcc.n	8012e40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8012f2a:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 8012f2e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8012f30:	fa1f f68b 	uxth.w	r6, fp
 8012f34:	1ba4      	subs	r4, r4, r6
 8012f36:	881b      	ldrh	r3, [r3, #0]
 8012f38:	b2a4      	uxth	r4, r4
 8012f3a:	2c00      	cmp	r4, #0
 8012f3c:	eba3 030b 	sub.w	r3, r3, fp
 8012f40:	bf18      	it	ne
 8012f42:	2600      	movne	r6, #0
 8012f44:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012f48:	e77a      	b.n	8012e40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8012f4a:	78aa      	ldrb	r2, [r5, #2]
 8012f4c:	4f0e      	ldr	r7, [pc, #56]	@ (8012f88 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 8012f4e:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 8012f52:	786a      	ldrb	r2, [r5, #1]
 8012f54:	00d2      	lsls	r2, r2, #3
 8012f56:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8012f5a:	ea4a 0202 	orr.w	r2, sl, r2
 8012f5e:	f895 a000 	ldrb.w	sl, [r5]
 8012f62:	3901      	subs	r1, #1
 8012f64:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 8012f68:	f82e 2b02 	strh.w	r2, [lr], #2
 8012f6c:	b289      	uxth	r1, r1
 8012f6e:	e7d7      	b.n	8012f20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 8012f70:	4b03      	ldr	r3, [pc, #12]	@ (8012f80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8012f72:	6818      	ldr	r0, [r3, #0]
 8012f74:	6803      	ldr	r3, [r0, #0]
 8012f76:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012f78:	4798      	blx	r3
 8012f7a:	b013      	add	sp, #76	@ 0x4c
 8012f7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012f80:	200119d4 	.word	0x200119d4
 8012f84:	200119ce 	.word	0x200119ce
 8012f88:	fffff800 	.word	0xfffff800

08012f8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8012f8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012f90:	b09d      	sub	sp, #116	@ 0x74
 8012f92:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 8012f96:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 8012f9a:	920e      	str	r2, [sp, #56]	@ 0x38
 8012f9c:	461c      	mov	r4, r3
 8012f9e:	4683      	mov	fp, r0
 8012fa0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8012fa2:	2a00      	cmp	r2, #0
 8012fa4:	f000 81e0 	beq.w	8013368 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 8012fa8:	6820      	ldr	r0, [r4, #0]
 8012faa:	6861      	ldr	r1, [r4, #4]
 8012fac:	aa18      	add	r2, sp, #96	@ 0x60
 8012fae:	c203      	stmia	r2!, {r0, r1}
 8012fb0:	6818      	ldr	r0, [r3, #0]
 8012fb2:	6859      	ldr	r1, [r3, #4]
 8012fb4:	aa1a      	add	r2, sp, #104	@ 0x68
 8012fb6:	c203      	stmia	r2!, {r0, r1}
 8012fb8:	a818      	add	r0, sp, #96	@ 0x60
 8012fba:	f7f9 f8c3 	bl	800c144 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012fbe:	4621      	mov	r1, r4
 8012fc0:	a81a      	add	r0, sp, #104	@ 0x68
 8012fc2:	f7f9 f8e7 	bl	800c194 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012fc6:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 8012fca:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 8012fce:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8012fd2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8012fd6:	bfd7      	itett	le
 8012fd8:	b29a      	uxthle	r2, r3
 8012fda:	2201      	movgt	r2, #1
 8012fdc:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8012fe0:	fb91 f2f2 	sdivle	r2, r1, r2
 8012fe4:	9202      	str	r2, [sp, #8]
 8012fe6:	9802      	ldr	r0, [sp, #8]
 8012fe8:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 8012fec:	fb92 f0f0 	sdiv	r0, r2, r0
 8012ff0:	b280      	uxth	r0, r0
 8012ff2:	900f      	str	r0, [sp, #60]	@ 0x3c
 8012ff4:	9902      	ldr	r1, [sp, #8]
 8012ff6:	9802      	ldr	r0, [sp, #8]
 8012ff8:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8012ffa:	440c      	add	r4, r1
 8012ffc:	fb05 2510 	mls	r5, r5, r0, r2
 8013000:	fb15 f503 	smulbb	r5, r5, r3
 8013004:	3c01      	subs	r4, #1
 8013006:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 801300a:	fb94 f4f1 	sdiv	r4, r4, r1
 801300e:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 8013012:	440d      	add	r5, r1
 8013014:	4419      	add	r1, r3
 8013016:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 801301a:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 801301e:	441a      	add	r2, r3
 8013020:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8013024:	9306      	str	r3, [sp, #24]
 8013026:	4bb3      	ldr	r3, [pc, #716]	@ (80132f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 8013028:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 801302c:	6818      	ldr	r0, [r3, #0]
 801302e:	6803      	ldr	r3, [r0, #0]
 8013030:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013032:	4798      	blx	r3
 8013034:	4bb0      	ldr	r3, [pc, #704]	@ (80132f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 8013036:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 801303a:	881a      	ldrh	r2, [r3, #0]
 801303c:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 8013040:	9316      	str	r3, [sp, #88]	@ 0x58
 8013042:	fb02 7101 	mla	r1, r2, r1, r7
 8013046:	3401      	adds	r4, #1
 8013048:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801304c:	b2a4      	uxth	r4, r4
 801304e:	4356      	muls	r6, r2
 8013050:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 8013054:	00a4      	lsls	r4, r4, #2
 8013056:	920a      	str	r2, [sp, #40]	@ 0x28
 8013058:	1d22      	adds	r2, r4, #4
 801305a:	b2ad      	uxth	r5, r5
 801305c:	9213      	str	r2, [sp, #76]	@ 0x4c
 801305e:	4ba7      	ldr	r3, [pc, #668]	@ (80132fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 8013060:	9a06      	ldr	r2, [sp, #24]
 8013062:	2d00      	cmp	r5, #0
 8013064:	bf0c      	ite	eq
 8013066:	4611      	moveq	r1, r2
 8013068:	2100      	movne	r1, #0
 801306a:	2200      	movs	r2, #0
 801306c:	eba3 030b 	sub.w	r3, r3, fp
 8013070:	b289      	uxth	r1, r1
 8013072:	920d      	str	r2, [sp, #52]	@ 0x34
 8013074:	9317      	str	r3, [sp, #92]	@ 0x5c
 8013076:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8013078:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801307a:	fa12 f383 	uxtah	r3, r2, r3
 801307e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013080:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8013084:	3304      	adds	r3, #4
 8013086:	9308      	str	r3, [sp, #32]
 8013088:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801308a:	4543      	cmp	r3, r8
 801308c:	f240 8167 	bls.w	801335e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 8013090:	9a02      	ldr	r2, [sp, #8]
 8013092:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 8013096:	fbb5 f3f3 	udiv	r3, r5, r3
 801309a:	1ad3      	subs	r3, r2, r3
 801309c:	b29b      	uxth	r3, r3
 801309e:	9314      	str	r3, [sp, #80]	@ 0x50
 80130a0:	9b08      	ldr	r3, [sp, #32]
 80130a2:	9808      	ldr	r0, [sp, #32]
 80130a4:	785a      	ldrb	r2, [r3, #1]
 80130a6:	789b      	ldrb	r3, [r3, #2]
 80130a8:	7800      	ldrb	r0, [r0, #0]
 80130aa:	9010      	str	r0, [sp, #64]	@ 0x40
 80130ac:	021b      	lsls	r3, r3, #8
 80130ae:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80130b2:	9a08      	ldr	r2, [sp, #32]
 80130b4:	78d2      	ldrb	r2, [r2, #3]
 80130b6:	4313      	orrs	r3, r2
 80130b8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80130ba:	3001      	adds	r0, #1
 80130bc:	441a      	add	r2, r3
 80130be:	9007      	str	r0, [sp, #28]
 80130c0:	1c50      	adds	r0, r2, #1
 80130c2:	9005      	str	r0, [sp, #20]
 80130c4:	7852      	ldrb	r2, [r2, #1]
 80130c6:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80130c8:	0212      	lsls	r2, r2, #8
 80130ca:	5cc3      	ldrb	r3, [r0, r3]
 80130cc:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 80130d0:	431a      	orrs	r2, r3
 80130d2:	b293      	uxth	r3, r2
 80130d4:	930b      	str	r3, [sp, #44]	@ 0x2c
 80130d6:	2300      	movs	r3, #0
 80130d8:	9309      	str	r3, [sp, #36]	@ 0x24
 80130da:	2301      	movs	r3, #1
 80130dc:	9301      	str	r3, [sp, #4]
 80130de:	9304      	str	r3, [sp, #16]
 80130e0:	2300      	movs	r3, #0
 80130e2:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 80130e6:	9303      	str	r3, [sp, #12]
 80130e8:	f04f 0e01 	mov.w	lr, #1
 80130ec:	2d00      	cmp	r5, #0
 80130ee:	d07c      	beq.n	80131ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 80130f0:	45ae      	cmp	lr, r5
 80130f2:	d26b      	bcs.n	80131cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 80130f4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80130f6:	eba5 050e 	sub.w	r5, r5, lr
 80130fa:	4543      	cmp	r3, r8
 80130fc:	b2ad      	uxth	r5, r5
 80130fe:	460c      	mov	r4, r1
 8013100:	d802      	bhi.n	8013108 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 8013102:	e070      	b.n	80131e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8013104:	2b00      	cmp	r3, #0
 8013106:	d15c      	bne.n	80131c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8013108:	9b05      	ldr	r3, [sp, #20]
 801310a:	9a04      	ldr	r2, [sp, #16]
 801310c:	785b      	ldrb	r3, [r3, #1]
 801310e:	9904      	ldr	r1, [sp, #16]
 8013110:	f1c2 0207 	rsb	r2, r2, #7
 8013114:	4093      	lsls	r3, r2
 8013116:	005b      	lsls	r3, r3, #1
 8013118:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801311c:	9b05      	ldr	r3, [sp, #20]
 801311e:	781b      	ldrb	r3, [r3, #0]
 8013120:	410b      	asrs	r3, r1
 8013122:	3101      	adds	r1, #1
 8013124:	b2c9      	uxtb	r1, r1
 8013126:	2908      	cmp	r1, #8
 8013128:	9104      	str	r1, [sp, #16]
 801312a:	9905      	ldr	r1, [sp, #20]
 801312c:	bf0a      	itet	eq
 801312e:	3102      	addeq	r1, #2
 8013130:	3101      	addne	r1, #1
 8013132:	9105      	streq	r1, [sp, #20]
 8013134:	b2db      	uxtb	r3, r3
 8013136:	bf0a      	itet	eq
 8013138:	2100      	moveq	r1, #0
 801313a:	9105      	strne	r1, [sp, #20]
 801313c:	9104      	streq	r1, [sp, #16]
 801313e:	4313      	orrs	r3, r2
 8013140:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8013142:	b29a      	uxth	r2, r3
 8013144:	4291      	cmp	r1, r2
 8013146:	d30a      	bcc.n	801315e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8013148:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 801314c:	2301      	movs	r3, #1
 801314e:	9907      	ldr	r1, [sp, #28]
 8013150:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8013154:	d30f      	bcc.n	8013176 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 8013156:	2100      	movs	r1, #0
 8013158:	9301      	str	r3, [sp, #4]
 801315a:	9103      	str	r1, [sp, #12]
 801315c:	e032      	b.n	80131c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801315e:	9b07      	ldr	r3, [sp, #28]
 8013160:	429a      	cmp	r2, r3
 8013162:	d318      	bcc.n	8013196 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 8013164:	9b01      	ldr	r3, [sp, #4]
 8013166:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 801316a:	445b      	add	r3, fp
 801316c:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8013170:	9b01      	ldr	r3, [sp, #4]
 8013172:	3301      	adds	r3, #1
 8013174:	b29b      	uxth	r3, r3
 8013176:	9907      	ldr	r1, [sp, #28]
 8013178:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 801317c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8013180:	7108      	strb	r0, [r1, #4]
 8013182:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8013184:	80c8      	strh	r0, [r1, #6]
 8013186:	9801      	ldr	r0, [sp, #4]
 8013188:	3001      	adds	r0, #1
 801318a:	7148      	strb	r0, [r1, #5]
 801318c:	9907      	ldr	r1, [sp, #28]
 801318e:	3101      	adds	r1, #1
 8013190:	b289      	uxth	r1, r1
 8013192:	9107      	str	r1, [sp, #28]
 8013194:	e7df      	b.n	8013156 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 8013196:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801319a:	4611      	mov	r1, r2
 801319c:	795b      	ldrb	r3, [r3, #5]
 801319e:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 80131a2:	4458      	add	r0, fp
 80131a4:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 80131a6:	4406      	add	r6, r0
 80131a8:	2e00      	cmp	r6, #0
 80131aa:	dd06      	ble.n	80131ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 80131ac:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 80131b0:	790e      	ldrb	r6, [r1, #4]
 80131b2:	f800 6d01 	strb.w	r6, [r0, #-1]!
 80131b6:	88c9      	ldrh	r1, [r1, #6]
 80131b8:	e7f4      	b.n	80131a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 80131ba:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 80131be:	b29b      	uxth	r3, r3
 80131c0:	e7c5      	b.n	801314e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 80131c2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80131c4:	920b      	str	r2, [sp, #44]	@ 0x2c
 80131c6:	4621      	mov	r1, r4
 80131c8:	469e      	mov	lr, r3
 80131ca:	e78f      	b.n	80130ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 80131cc:	9a03      	ldr	r2, [sp, #12]
 80131ce:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 80131d2:	442a      	add	r2, r5
 80131d4:	ebae 0305 	sub.w	r3, lr, r5
 80131d8:	b292      	uxth	r2, r2
 80131da:	b29b      	uxth	r3, r3
 80131dc:	9203      	str	r2, [sp, #12]
 80131de:	2500      	movs	r5, #0
 80131e0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80131e2:	4542      	cmp	r2, r8
 80131e4:	d88e      	bhi.n	8013104 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 80131e6:	4621      	mov	r1, r4
 80131e8:	e74e      	b.n	8013088 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 80131ea:	458e      	cmp	lr, r1
 80131ec:	bf29      	itett	cs
 80131ee:	ebae 0301 	subcs.w	r3, lr, r1
 80131f2:	eba1 040e 	subcc.w	r4, r1, lr
 80131f6:	b29b      	uxthcs	r3, r3
 80131f8:	910c      	strcs	r1, [sp, #48]	@ 0x30
 80131fa:	bf2f      	iteee	cs
 80131fc:	462c      	movcs	r4, r5
 80131fe:	b2a4      	uxthcc	r4, r4
 8013200:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 8013204:	462b      	movcc	r3, r5
 8013206:	f04f 0900 	mov.w	r9, #0
 801320a:	9a03      	ldr	r2, [sp, #12]
 801320c:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801320e:	444a      	add	r2, r9
 8013210:	4548      	cmp	r0, r9
 8013212:	b292      	uxth	r2, r2
 8013214:	d074      	beq.n	8013300 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 8013216:	445a      	add	r2, fp
 8013218:	2004      	movs	r0, #4
 801321a:	4605      	mov	r5, r0
 801321c:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 8013220:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8013222:	fb15 0202 	smlabb	r2, r5, r2, r0
 8013226:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013228:	5880      	ldr	r0, [r0, r2]
 801322a:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801322e:	d014      	beq.n	801325a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8013230:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8013234:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8013238:	d112      	bne.n	8013260 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801323a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801323c:	2aff      	cmp	r2, #255	@ 0xff
 801323e:	d10f      	bne.n	8013260 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8013240:	0942      	lsrs	r2, r0, #5
 8013242:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8013246:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801324a:	f025 0507 	bic.w	r5, r5, #7
 801324e:	4315      	orrs	r5, r2
 8013250:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8013254:	4305      	orrs	r5, r0
 8013256:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801325a:	f109 0901 	add.w	r9, r9, #1
 801325e:	e7d4      	b.n	801320a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 8013260:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 8013264:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8013268:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 801326c:	9215      	str	r2, [sp, #84]	@ 0x54
 801326e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8013270:	fb02 fa0a 	mul.w	sl, r2, sl
 8013274:	f10a 0201 	add.w	r2, sl, #1
 8013278:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801327c:	ea4f 272c 	mov.w	r7, ip, asr #8
 8013280:	1212      	asrs	r2, r2, #8
 8013282:	fa1f fa82 	uxth.w	sl, r2
 8013286:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801328a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801328e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013292:	43d2      	mvns	r2, r2
 8013294:	b2d2      	uxtb	r2, r2
 8013296:	fb16 f60a 	smulbb	r6, r6, sl
 801329a:	fa5f fc8c 	uxtb.w	ip, ip
 801329e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 80132a2:	b2c0      	uxtb	r0, r0
 80132a4:	fb07 6702 	mla	r7, r7, r2, r6
 80132a8:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 80132ac:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 80132ae:	fb10 f00a 	smulbb	r0, r0, sl
 80132b2:	fb0c 0002 	mla	r0, ip, r2, r0
 80132b6:	b2ed      	uxtb	r5, r5
 80132b8:	b2bf      	uxth	r7, r7
 80132ba:	fb15 f50a 	smulbb	r5, r5, sl
 80132be:	b280      	uxth	r0, r0
 80132c0:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80132c4:	fb06 5602 	mla	r6, r6, r2, r5
 80132c8:	1c7a      	adds	r2, r7, #1
 80132ca:	1c45      	adds	r5, r0, #1
 80132cc:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80132d0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80132d4:	b2b6      	uxth	r6, r6
 80132d6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80132da:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80132de:	432f      	orrs	r7, r5
 80132e0:	1c75      	adds	r5, r6, #1
 80132e2:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 80132e6:	096d      	lsrs	r5, r5, #5
 80132e8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80132ec:	432f      	orrs	r7, r5
 80132ee:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 80132f2:	e7b2      	b.n	801325a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 80132f4:	200119d4 	.word	0x200119d4
 80132f8:	200119ce 	.word	0x200119ce
 80132fc:	fffff7fb 	.word	0xfffff7fb
 8013300:	9203      	str	r2, [sp, #12]
 8013302:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8013304:	458e      	cmp	lr, r1
 8013306:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801330a:	f4ff af68 	bcc.w	80131de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801330e:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8013310:	9906      	ldr	r1, [sp, #24]
 8013312:	8812      	ldrh	r2, [r2, #0]
 8013314:	1a52      	subs	r2, r2, r1
 8013316:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801331a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801331c:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801331e:	3201      	adds	r2, #1
 8013320:	428a      	cmp	r2, r1
 8013322:	9209      	str	r2, [sp, #36]	@ 0x24
 8013324:	d111      	bne.n	801334a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 8013326:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 801332a:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 801332e:	9b06      	ldr	r3, [sp, #24]
 8013330:	eba5 0509 	sub.w	r5, r5, r9
 8013334:	b2ad      	uxth	r5, r5
 8013336:	2d00      	cmp	r5, #0
 8013338:	bf08      	it	eq
 801333a:	4619      	moveq	r1, r3
 801333c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801333e:	bf18      	it	ne
 8013340:	2100      	movne	r1, #0
 8013342:	3301      	adds	r3, #1
 8013344:	930d      	str	r3, [sp, #52]	@ 0x34
 8013346:	b289      	uxth	r1, r1
 8013348:	e695      	b.n	8013076 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801334a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801334e:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8013352:	1b2d      	subs	r5, r5, r4
 8013354:	b2ad      	uxth	r5, r5
 8013356:	2d00      	cmp	r5, #0
 8013358:	bf18      	it	ne
 801335a:	2400      	movne	r4, #0
 801335c:	e740      	b.n	80131e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801335e:	4b04      	ldr	r3, [pc, #16]	@ (8013370 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 8013360:	6818      	ldr	r0, [r3, #0]
 8013362:	6803      	ldr	r3, [r0, #0]
 8013364:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013366:	4798      	blx	r3
 8013368:	b01d      	add	sp, #116	@ 0x74
 801336a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801336e:	bf00      	nop
 8013370:	200119d4 	.word	0x200119d4

08013374 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8013374:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013378:	b09f      	sub	sp, #124	@ 0x7c
 801337a:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 801337e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8013382:	920a      	str	r2, [sp, #40]	@ 0x28
 8013384:	461d      	mov	r5, r3
 8013386:	4604      	mov	r4, r0
 8013388:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801338a:	2a00      	cmp	r2, #0
 801338c:	f000 81fa 	beq.w	8013784 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 8013390:	6828      	ldr	r0, [r5, #0]
 8013392:	6869      	ldr	r1, [r5, #4]
 8013394:	aa1a      	add	r2, sp, #104	@ 0x68
 8013396:	c203      	stmia	r2!, {r0, r1}
 8013398:	6818      	ldr	r0, [r3, #0]
 801339a:	6859      	ldr	r1, [r3, #4]
 801339c:	aa1c      	add	r2, sp, #112	@ 0x70
 801339e:	c203      	stmia	r2!, {r0, r1}
 80133a0:	a81a      	add	r0, sp, #104	@ 0x68
 80133a2:	f7f8 fecf 	bl	800c144 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80133a6:	4629      	mov	r1, r5
 80133a8:	a81c      	add	r0, sp, #112	@ 0x70
 80133aa:	f7f8 fef3 	bl	800c194 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80133ae:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 80133b2:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 80133b6:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 80133ba:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80133be:	bfd7      	itett	le
 80133c0:	b29a      	uxthle	r2, r3
 80133c2:	2201      	movgt	r2, #1
 80133c4:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80133c8:	fb91 f2f2 	sdivle	r2, r1, r2
 80133cc:	9201      	str	r2, [sp, #4]
 80133ce:	9801      	ldr	r0, [sp, #4]
 80133d0:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 80133d4:	fb92 f0f0 	sdiv	r0, r2, r0
 80133d8:	b280      	uxth	r0, r0
 80133da:	9010      	str	r0, [sp, #64]	@ 0x40
 80133dc:	9901      	ldr	r1, [sp, #4]
 80133de:	9801      	ldr	r0, [sp, #4]
 80133e0:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80133e2:	440e      	add	r6, r1
 80133e4:	fb05 2510 	mls	r5, r5, r0, r2
 80133e8:	fb15 f503 	smulbb	r5, r5, r3
 80133ec:	3e01      	subs	r6, #1
 80133ee:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 80133f2:	fb96 f6f1 	sdiv	r6, r6, r1
 80133f6:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 80133fa:	440d      	add	r5, r1
 80133fc:	4419      	add	r1, r3
 80133fe:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8013402:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8013406:	441a      	add	r2, r3
 8013408:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 801340c:	9304      	str	r3, [sp, #16]
 801340e:	4b96      	ldr	r3, [pc, #600]	@ (8013668 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8013410:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8013414:	6818      	ldr	r0, [r3, #0]
 8013416:	6803      	ldr	r3, [r0, #0]
 8013418:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801341a:	4798      	blx	r3
 801341c:	4b93      	ldr	r3, [pc, #588]	@ (801366c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801341e:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8013422:	881a      	ldrh	r2, [r3, #0]
 8013424:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 8013428:	9318      	str	r3, [sp, #96]	@ 0x60
 801342a:	fb02 c101 	mla	r1, r2, r1, ip
 801342e:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8013432:	4357      	muls	r7, r2
 8013434:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8013438:	3601      	adds	r6, #1
 801343a:	920b      	str	r2, [sp, #44]	@ 0x2c
 801343c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801343e:	4b8c      	ldr	r3, [pc, #560]	@ (8013670 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8013440:	b2b6      	uxth	r6, r6
 8013442:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8013446:	1d32      	adds	r2, r6, #4
 8013448:	9206      	str	r2, [sp, #24]
 801344a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801344c:	43d2      	mvns	r2, r2
 801344e:	b2d2      	uxtb	r2, r2
 8013450:	b2ad      	uxth	r5, r5
 8013452:	9215      	str	r2, [sp, #84]	@ 0x54
 8013454:	9a04      	ldr	r2, [sp, #16]
 8013456:	2d00      	cmp	r5, #0
 8013458:	bf0c      	ite	eq
 801345a:	4611      	moveq	r1, r2
 801345c:	2100      	movne	r1, #0
 801345e:	2200      	movs	r2, #0
 8013460:	1b1b      	subs	r3, r3, r4
 8013462:	b289      	uxth	r1, r1
 8013464:	920d      	str	r2, [sp, #52]	@ 0x34
 8013466:	9319      	str	r3, [sp, #100]	@ 0x64
 8013468:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801346a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801346c:	fa12 f383 	uxtah	r3, r2, r3
 8013470:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013472:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8013476:	3304      	adds	r3, #4
 8013478:	9307      	str	r3, [sp, #28]
 801347a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801347c:	455b      	cmp	r3, fp
 801347e:	f240 817c 	bls.w	801377a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 8013482:	9a01      	ldr	r2, [sp, #4]
 8013484:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8013488:	fbb5 f3f3 	udiv	r3, r5, r3
 801348c:	1ad3      	subs	r3, r2, r3
 801348e:	b29b      	uxth	r3, r3
 8013490:	9316      	str	r3, [sp, #88]	@ 0x58
 8013492:	9b07      	ldr	r3, [sp, #28]
 8013494:	9807      	ldr	r0, [sp, #28]
 8013496:	785a      	ldrb	r2, [r3, #1]
 8013498:	789b      	ldrb	r3, [r3, #2]
 801349a:	7800      	ldrb	r0, [r0, #0]
 801349c:	9011      	str	r0, [sp, #68]	@ 0x44
 801349e:	021b      	lsls	r3, r3, #8
 80134a0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80134a4:	9a07      	ldr	r2, [sp, #28]
 80134a6:	78d2      	ldrb	r2, [r2, #3]
 80134a8:	4313      	orrs	r3, r2
 80134aa:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80134ac:	3001      	adds	r0, #1
 80134ae:	441a      	add	r2, r3
 80134b0:	9005      	str	r0, [sp, #20]
 80134b2:	1c50      	adds	r0, r2, #1
 80134b4:	9003      	str	r0, [sp, #12]
 80134b6:	7852      	ldrb	r2, [r2, #1]
 80134b8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80134ba:	0212      	lsls	r2, r2, #8
 80134bc:	5cc3      	ldrb	r3, [r0, r3]
 80134be:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 80134c2:	431a      	orrs	r2, r3
 80134c4:	b293      	uxth	r3, r2
 80134c6:	930c      	str	r3, [sp, #48]	@ 0x30
 80134c8:	2300      	movs	r3, #0
 80134ca:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 80134ce:	9308      	str	r3, [sp, #32]
 80134d0:	461a      	mov	r2, r3
 80134d2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80134d6:	930e      	str	r3, [sp, #56]	@ 0x38
 80134d8:	f04f 0801 	mov.w	r8, #1
 80134dc:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 80134e0:	f8cd 8008 	str.w	r8, [sp, #8]
 80134e4:	46c4      	mov	ip, r8
 80134e6:	930f      	str	r3, [sp, #60]	@ 0x3c
 80134e8:	2d00      	cmp	r5, #0
 80134ea:	d07c      	beq.n	80135e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 80134ec:	45ac      	cmp	ip, r5
 80134ee:	d26c      	bcs.n	80135ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 80134f0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80134f2:	eba5 050c 	sub.w	r5, r5, ip
 80134f6:	455b      	cmp	r3, fp
 80134f8:	b2ad      	uxth	r5, r5
 80134fa:	4608      	mov	r0, r1
 80134fc:	d802      	bhi.n	8013504 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 80134fe:	e070      	b.n	80135e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 8013500:	2b00      	cmp	r3, #0
 8013502:	d15c      	bne.n	80135be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8013504:	9b03      	ldr	r3, [sp, #12]
 8013506:	9a02      	ldr	r2, [sp, #8]
 8013508:	785b      	ldrb	r3, [r3, #1]
 801350a:	9902      	ldr	r1, [sp, #8]
 801350c:	f1c2 0207 	rsb	r2, r2, #7
 8013510:	4093      	lsls	r3, r2
 8013512:	005b      	lsls	r3, r3, #1
 8013514:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8013518:	9b03      	ldr	r3, [sp, #12]
 801351a:	781b      	ldrb	r3, [r3, #0]
 801351c:	410b      	asrs	r3, r1
 801351e:	3101      	adds	r1, #1
 8013520:	b2c9      	uxtb	r1, r1
 8013522:	2908      	cmp	r1, #8
 8013524:	9102      	str	r1, [sp, #8]
 8013526:	9903      	ldr	r1, [sp, #12]
 8013528:	bf0a      	itet	eq
 801352a:	3102      	addeq	r1, #2
 801352c:	3101      	addne	r1, #1
 801352e:	9103      	streq	r1, [sp, #12]
 8013530:	b2db      	uxtb	r3, r3
 8013532:	bf0a      	itet	eq
 8013534:	2100      	moveq	r1, #0
 8013536:	9103      	strne	r1, [sp, #12]
 8013538:	9102      	streq	r1, [sp, #8]
 801353a:	4313      	orrs	r3, r2
 801353c:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801353e:	b29a      	uxth	r2, r3
 8013540:	4291      	cmp	r1, r2
 8013542:	d30a      	bcc.n	801355a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 8013544:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8013548:	2301      	movs	r3, #1
 801354a:	9905      	ldr	r1, [sp, #20]
 801354c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8013550:	d30f      	bcc.n	8013572 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 8013552:	2100      	movs	r1, #0
 8013554:	4698      	mov	r8, r3
 8013556:	9100      	str	r1, [sp, #0]
 8013558:	e032      	b.n	80135c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801355a:	9b05      	ldr	r3, [sp, #20]
 801355c:	429a      	cmp	r2, r3
 801355e:	d318      	bcc.n	8013592 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8013560:	eb04 0308 	add.w	r3, r4, r8
 8013564:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 8013568:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 801356c:	f108 0301 	add.w	r3, r8, #1
 8013570:	b29b      	uxth	r3, r3
 8013572:	9905      	ldr	r1, [sp, #20]
 8013574:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8013578:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801357c:	710e      	strb	r6, [r1, #4]
 801357e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8013580:	80ce      	strh	r6, [r1, #6]
 8013582:	f108 0601 	add.w	r6, r8, #1
 8013586:	714e      	strb	r6, [r1, #5]
 8013588:	9905      	ldr	r1, [sp, #20]
 801358a:	3101      	adds	r1, #1
 801358c:	b289      	uxth	r1, r1
 801358e:	9105      	str	r1, [sp, #20]
 8013590:	e7df      	b.n	8013552 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 8013592:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8013596:	4611      	mov	r1, r2
 8013598:	795b      	ldrb	r3, [r3, #5]
 801359a:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801359e:	4426      	add	r6, r4
 80135a0:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 80135a2:	4437      	add	r7, r6
 80135a4:	2f00      	cmp	r7, #0
 80135a6:	dd06      	ble.n	80135b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 80135a8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80135ac:	790f      	ldrb	r7, [r1, #4]
 80135ae:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80135b2:	88c9      	ldrh	r1, [r1, #6]
 80135b4:	e7f4      	b.n	80135a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 80135b6:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 80135ba:	b29b      	uxth	r3, r3
 80135bc:	e7c5      	b.n	801354a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 80135be:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80135c0:	920c      	str	r2, [sp, #48]	@ 0x30
 80135c2:	4601      	mov	r1, r0
 80135c4:	9a00      	ldr	r2, [sp, #0]
 80135c6:	469c      	mov	ip, r3
 80135c8:	e78e      	b.n	80134e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 80135ca:	1957      	adds	r7, r2, r5
 80135cc:	ebac 0305 	sub.w	r3, ip, r5
 80135d0:	b2ba      	uxth	r2, r7
 80135d2:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 80135d6:	9200      	str	r2, [sp, #0]
 80135d8:	b29b      	uxth	r3, r3
 80135da:	2500      	movs	r5, #0
 80135dc:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80135de:	455a      	cmp	r2, fp
 80135e0:	d88e      	bhi.n	8013500 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 80135e2:	4601      	mov	r1, r0
 80135e4:	e749      	b.n	801347a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 80135e6:	458c      	cmp	ip, r1
 80135e8:	bf2c      	ite	cs
 80135ea:	4628      	movcs	r0, r5
 80135ec:	462b      	movcc	r3, r5
 80135ee:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 80135f0:	bf27      	ittee	cs
 80135f2:	9109      	strcs	r1, [sp, #36]	@ 0x24
 80135f4:	ebac 0301 	subcs.w	r3, ip, r1
 80135f8:	eba1 000c 	subcc.w	r0, r1, ip
 80135fc:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 8013600:	bf2c      	ite	cs
 8013602:	b29b      	uxthcs	r3, r3
 8013604:	b280      	uxthcc	r0, r0
 8013606:	2dff      	cmp	r5, #255	@ 0xff
 8013608:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801360a:	eb02 0705 	add.w	r7, r2, r5
 801360e:	b2bd      	uxth	r5, r7
 8013610:	9500      	str	r5, [sp, #0]
 8013612:	d12f      	bne.n	8013674 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 8013614:	465e      	mov	r6, fp
 8013616:	9d00      	ldr	r5, [sp, #0]
 8013618:	42aa      	cmp	r2, r5
 801361a:	f040 8084 	bne.w	8013726 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801361e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8013620:	458c      	cmp	ip, r1
 8013622:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8013626:	d3d8      	bcc.n	80135da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 8013628:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801362a:	9904      	ldr	r1, [sp, #16]
 801362c:	8812      	ldrh	r2, [r2, #0]
 801362e:	1a52      	subs	r2, r2, r1
 8013630:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8013634:	9a08      	ldr	r2, [sp, #32]
 8013636:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8013638:	3201      	adds	r2, #1
 801363a:	428a      	cmp	r2, r1
 801363c:	9208      	str	r2, [sp, #32]
 801363e:	f040 8092 	bne.w	8013766 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 8013642:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8013646:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 801364a:	9b04      	ldr	r3, [sp, #16]
 801364c:	eba5 050c 	sub.w	r5, r5, ip
 8013650:	b2ad      	uxth	r5, r5
 8013652:	2d00      	cmp	r5, #0
 8013654:	bf08      	it	eq
 8013656:	4619      	moveq	r1, r3
 8013658:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801365a:	bf18      	it	ne
 801365c:	2100      	movne	r1, #0
 801365e:	3301      	adds	r3, #1
 8013660:	930d      	str	r3, [sp, #52]	@ 0x34
 8013662:	b289      	uxth	r1, r1
 8013664:	e700      	b.n	8013468 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8013666:	bf00      	nop
 8013668:	200119d4 	.word	0x200119d4
 801366c:	200119ce 	.word	0x200119ce
 8013670:	fffff7fb 	.word	0xfffff7fb
 8013674:	46d9      	mov	r9, fp
 8013676:	9d00      	ldr	r5, [sp, #0]
 8013678:	42aa      	cmp	r2, r5
 801367a:	d0d0      	beq.n	801361e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801367c:	1c55      	adds	r5, r2, #1
 801367e:	4422      	add	r2, r4
 8013680:	9517      	str	r5, [sp, #92]	@ 0x5c
 8013682:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 8013686:	9a06      	ldr	r2, [sp, #24]
 8013688:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801368c:	4472      	add	r2, lr
 801368e:	9212      	str	r2, [sp, #72]	@ 0x48
 8013690:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8013692:	f8b9 2000 	ldrh.w	r2, [r9]
 8013696:	f897 a002 	ldrb.w	sl, [r7, #2]
 801369a:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801369c:	1216      	asrs	r6, r2, #8
 801369e:	fb1a fa07 	smulbb	sl, sl, r7
 80136a2:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80136a6:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80136a8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80136ac:	fb06 a607 	mla	r6, r6, r7, sl
 80136b0:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 80136b2:	f897 a001 	ldrb.w	sl, [r7, #1]
 80136b6:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 80136b8:	10d5      	asrs	r5, r2, #3
 80136ba:	fb1a fa07 	smulbb	sl, sl, r7
 80136be:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80136c2:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80136c4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80136c8:	fb05 a507 	mla	r5, r5, r7, sl
 80136cc:	9f06      	ldr	r7, [sp, #24]
 80136ce:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80136d2:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 80136d4:	00d2      	lsls	r2, r2, #3
 80136d6:	fb1e fe07 	smulbb	lr, lr, r7
 80136da:	b2d2      	uxtb	r2, r2
 80136dc:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80136de:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80136e2:	b2b6      	uxth	r6, r6
 80136e4:	fb02 e207 	mla	r2, r2, r7, lr
 80136e8:	b292      	uxth	r2, r2
 80136ea:	b2ad      	uxth	r5, r5
 80136ec:	f106 0a01 	add.w	sl, r6, #1
 80136f0:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80136f4:	f102 0e01 	add.w	lr, r2, #1
 80136f8:	f105 0a01 	add.w	sl, r5, #1
 80136fc:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8013700:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013704:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8013708:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801370c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013710:	ea4e 0606 	orr.w	r6, lr, r6
 8013714:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013718:	ea46 060a 	orr.w	r6, r6, sl
 801371c:	f829 6b02 	strh.w	r6, [r9], #2
 8013720:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8013724:	e7a7      	b.n	8013676 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 8013726:	f102 0e01 	add.w	lr, r2, #1
 801372a:	4422      	add	r2, r4
 801372c:	9f06      	ldr	r7, [sp, #24]
 801372e:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 8013732:	9a06      	ldr	r2, [sp, #24]
 8013734:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8013738:	eb02 0a05 	add.w	sl, r2, r5
 801373c:	4a13      	ldr	r2, [pc, #76]	@ (801378c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801373e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8013742:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 8013746:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801374a:	00d2      	lsls	r2, r2, #3
 801374c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8013750:	ea49 0202 	orr.w	r2, r9, r2
 8013754:	f817 9005 	ldrb.w	r9, [r7, r5]
 8013758:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801375c:	f826 2b02 	strh.w	r2, [r6], #2
 8013760:	fa1f f28e 	uxth.w	r2, lr
 8013764:	e757      	b.n	8013616 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 8013766:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801376a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801376e:	1a2d      	subs	r5, r5, r0
 8013770:	b2ad      	uxth	r5, r5
 8013772:	2d00      	cmp	r5, #0
 8013774:	bf18      	it	ne
 8013776:	2000      	movne	r0, #0
 8013778:	e730      	b.n	80135dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801377a:	4b05      	ldr	r3, [pc, #20]	@ (8013790 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801377c:	6818      	ldr	r0, [r3, #0]
 801377e:	6803      	ldr	r3, [r0, #0]
 8013780:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013782:	4798      	blx	r3
 8013784:	b01f      	add	sp, #124	@ 0x7c
 8013786:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801378a:	bf00      	nop
 801378c:	fffff800 	.word	0xfffff800
 8013790:	200119d4 	.word	0x200119d4

08013794 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8013794:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013798:	b091      	sub	sp, #68	@ 0x44
 801379a:	469b      	mov	fp, r3
 801379c:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 80137a0:	4616      	mov	r6, r2
 80137a2:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 80137a6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80137aa:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 80137ae:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80137b2:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 80137b6:	4604      	mov	r4, r0
 80137b8:	460d      	mov	r5, r1
 80137ba:	4640      	mov	r0, r8
 80137bc:	4659      	mov	r1, fp
 80137be:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 80137c2:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 80137c6:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 80137ca:	f7f5 fc93 	bl	80090f4 <_ZN8touchgfx4RectaNERKS0_>
 80137ce:	4631      	mov	r1, r6
 80137d0:	4640      	mov	r0, r8
 80137d2:	f7f5 fc8f 	bl	80090f4 <_ZN8touchgfx4RectaNERKS0_>
 80137d6:	4b74      	ldr	r3, [pc, #464]	@ (80139a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 80137d8:	8818      	ldrh	r0, [r3, #0]
 80137da:	4b74      	ldr	r3, [pc, #464]	@ (80139ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 80137dc:	8819      	ldrh	r1, [r3, #0]
 80137de:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 80137e2:	2b00      	cmp	r3, #0
 80137e4:	b202      	sxth	r2, r0
 80137e6:	b20e      	sxth	r6, r1
 80137e8:	da07      	bge.n	80137fa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 80137ea:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 80137ee:	4463      	add	r3, ip
 80137f0:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 80137f4:	2300      	movs	r3, #0
 80137f6:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 80137fa:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 80137fe:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8013802:	1ad2      	subs	r2, r2, r3
 8013804:	4594      	cmp	ip, r2
 8013806:	bfc4      	itt	gt
 8013808:	1ac2      	subgt	r2, r0, r3
 801380a:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 801380e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8013812:	2a00      	cmp	r2, #0
 8013814:	da07      	bge.n	8013826 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8013816:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 801381a:	4462      	add	r2, ip
 801381c:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8013820:	2200      	movs	r2, #0
 8013822:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8013826:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 801382a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801382e:	eba6 060a 	sub.w	r6, r6, sl
 8013832:	42b2      	cmp	r2, r6
 8013834:	bfc4      	itt	gt
 8013836:	eba1 020a 	subgt.w	r2, r1, sl
 801383a:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 801383e:	4a5c      	ldr	r2, [pc, #368]	@ (80139b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8013840:	7812      	ldrb	r2, [r2, #0]
 8013842:	b9a2      	cbnz	r2, 801386e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8013844:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8013848:	4286      	cmp	r6, r0
 801384a:	4640      	mov	r0, r8
 801384c:	9303      	str	r3, [sp, #12]
 801384e:	bf14      	ite	ne
 8013850:	2600      	movne	r6, #0
 8013852:	2601      	moveq	r6, #1
 8013854:	f7f5 fc91 	bl	800917a <_ZNK8touchgfx4Rect7isEmptyEv>
 8013858:	9b03      	ldr	r3, [sp, #12]
 801385a:	b160      	cbz	r0, 8013876 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801385c:	2300      	movs	r3, #0
 801385e:	8023      	strh	r3, [r4, #0]
 8013860:	8063      	strh	r3, [r4, #2]
 8013862:	80a3      	strh	r3, [r4, #4]
 8013864:	4620      	mov	r0, r4
 8013866:	80e3      	strh	r3, [r4, #6]
 8013868:	b011      	add	sp, #68	@ 0x44
 801386a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801386e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 8013872:	428e      	cmp	r6, r1
 8013874:	e7e9      	b.n	801384a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8013876:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801387a:	9205      	str	r2, [sp, #20]
 801387c:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8013880:	9206      	str	r2, [sp, #24]
 8013882:	f8bb 2000 	ldrh.w	r2, [fp]
 8013886:	900e      	str	r0, [sp, #56]	@ 0x38
 8013888:	1a9b      	subs	r3, r3, r2
 801388a:	b21b      	sxth	r3, r3
 801388c:	9303      	str	r3, [sp, #12]
 801388e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8013892:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 8013896:	ebaa 0a03 	sub.w	sl, sl, r3
 801389a:	fa0f f38a 	sxth.w	r3, sl
 801389e:	9304      	str	r3, [sp, #16]
 80138a0:	9b03      	ldr	r3, [sp, #12]
 80138a2:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 80138a6:	9b04      	ldr	r3, [sp, #16]
 80138a8:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80138ac:	9b05      	ldr	r3, [sp, #20]
 80138ae:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 80138b2:	a90e      	add	r1, sp, #56	@ 0x38
 80138b4:	9b06      	ldr	r3, [sp, #24]
 80138b6:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 80138ba:	a80c      	add	r0, sp, #48	@ 0x30
 80138bc:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 80138c0:	f7f8 fc68 	bl	800c194 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80138c4:	4640      	mov	r0, r8
 80138c6:	f7f8 fc3d 	bl	800c144 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80138ca:	a80e      	add	r0, sp, #56	@ 0x38
 80138cc:	f7f8 fc3a 	bl	800c144 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80138d0:	4b38      	ldr	r3, [pc, #224]	@ (80139b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 80138d2:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 80138d6:	881b      	ldrh	r3, [r3, #0]
 80138d8:	9307      	str	r3, [sp, #28]
 80138da:	682b      	ldr	r3, [r5, #0]
 80138dc:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 80139b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80138e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80138e2:	4628      	mov	r0, r5
 80138e4:	4798      	blx	r3
 80138e6:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 80138ea:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 80138ee:	4681      	mov	r9, r0
 80138f0:	fb1a 3305 	smlabb	r3, sl, r5, r3
 80138f4:	f8db 0000 	ldr.w	r0, [fp]
 80138f8:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 80138fa:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80138fe:	6803      	ldr	r3, [r0, #0]
 8013900:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8013902:	4798      	blx	r3
 8013904:	4607      	mov	r7, r0
 8013906:	f8db 0000 	ldr.w	r0, [fp]
 801390a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801390e:	6803      	ldr	r3, [r0, #0]
 8013910:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8013914:	9109      	str	r1, [sp, #36]	@ 0x24
 8013916:	9208      	str	r2, [sp, #32]
 8013918:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801391a:	4798      	blx	r3
 801391c:	f010 0f01 	tst.w	r0, #1
 8013920:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8013924:	d012      	beq.n	801394c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8013926:	f8db 0000 	ldr.w	r0, [fp]
 801392a:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 801392e:	6803      	ldr	r3, [r0, #0]
 8013930:	9200      	str	r2, [sp, #0]
 8013932:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 8013934:	e898 0006 	ldmia.w	r8, {r1, r2}
 8013938:	462b      	mov	r3, r5
 801393a:	47b0      	blx	r6
 801393c:	9b03      	ldr	r3, [sp, #12]
 801393e:	8023      	strh	r3, [r4, #0]
 8013940:	9b04      	ldr	r3, [sp, #16]
 8013942:	8063      	strh	r3, [r4, #2]
 8013944:	9b05      	ldr	r3, [sp, #20]
 8013946:	80a3      	strh	r3, [r4, #4]
 8013948:	9b06      	ldr	r3, [sp, #24]
 801394a:	e78b      	b.n	8013864 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801394c:	fb09 f202 	mul.w	r2, r9, r2
 8013950:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8013954:	440f      	add	r7, r1
 8013956:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 801395a:	b166      	cbz	r6, 8013976 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801395c:	9a07      	ldr	r2, [sp, #28]
 801395e:	4592      	cmp	sl, r2
 8013960:	d109      	bne.n	8013976 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8013962:	f8db 0000 	ldr.w	r0, [fp]
 8013966:	6802      	ldr	r2, [r0, #0]
 8013968:	fb09 f303 	mul.w	r3, r9, r3
 801396c:	6b56      	ldr	r6, [r2, #52]	@ 0x34
 801396e:	4629      	mov	r1, r5
 8013970:	463a      	mov	r2, r7
 8013972:	47b0      	blx	r6
 8013974:	e7e2      	b.n	801393c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8013976:	fb0a f303 	mul.w	r3, sl, r3
 801397a:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 80139b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801397e:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8013982:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8013986:	4545      	cmp	r5, r8
 8013988:	d2d8      	bcs.n	801393c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801398a:	f8db 0000 	ldr.w	r0, [fp]
 801398e:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8013992:	6802      	ldr	r2, [r0, #0]
 8013994:	4629      	mov	r1, r5
 8013996:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
 801399a:	005b      	lsls	r3, r3, #1
 801399c:	463a      	mov	r2, r7
 801399e:	47d0      	blx	sl
 80139a0:	444f      	add	r7, r9
 80139a2:	4435      	add	r5, r6
 80139a4:	e7ef      	b.n	8013986 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 80139a6:	bf00      	nop
 80139a8:	200119c8 	.word	0x200119c8
 80139ac:	200119ca 	.word	0x200119ca
 80139b0:	200119cc 	.word	0x200119cc
 80139b4:	200119ce 	.word	0x200119ce
 80139b8:	200119d4 	.word	0x200119d4

080139bc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 80139bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80139be:	4606      	mov	r6, r0
 80139c0:	b087      	sub	sp, #28
 80139c2:	460c      	mov	r4, r1
 80139c4:	4617      	mov	r7, r2
 80139c6:	461d      	mov	r5, r3
 80139c8:	b333      	cbz	r3, 8013a18 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80139ca:	4608      	mov	r0, r1
 80139cc:	f7f5 fbd5 	bl	800917a <_ZNK8touchgfx4Rect7isEmptyEv>
 80139d0:	bb10      	cbnz	r0, 8013a18 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80139d2:	6820      	ldr	r0, [r4, #0]
 80139d4:	6861      	ldr	r1, [r4, #4]
 80139d6:	4c1c      	ldr	r4, [pc, #112]	@ (8013a48 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 80139d8:	ab04      	add	r3, sp, #16
 80139da:	c303      	stmia	r3!, {r0, r1}
 80139dc:	a804      	add	r0, sp, #16
 80139de:	f7f8 fbb1 	bl	800c144 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80139e2:	6820      	ldr	r0, [r4, #0]
 80139e4:	6803      	ldr	r3, [r0, #0]
 80139e6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80139e8:	4798      	blx	r3
 80139ea:	2dff      	cmp	r5, #255	@ 0xff
 80139ec:	d016      	beq.n	8013a1c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 80139ee:	f010 0f08 	tst.w	r0, #8
 80139f2:	6820      	ldr	r0, [r4, #0]
 80139f4:	d015      	beq.n	8013a22 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 80139f6:	2400      	movs	r4, #0
 80139f8:	6801      	ldr	r1, [r0, #0]
 80139fa:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80139fe:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013a02:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8013a06:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8013a0a:	9401      	str	r4, [sp, #4]
 8013a0c:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8013a10:	9400      	str	r4, [sp, #0]
 8013a12:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
 8013a14:	4639      	mov	r1, r7
 8013a16:	47a0      	blx	r4
 8013a18:	b007      	add	sp, #28
 8013a1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013a1c:	f010 0f02 	tst.w	r0, #2
 8013a20:	e7e7      	b.n	80139f2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8013a22:	6803      	ldr	r3, [r0, #0]
 8013a24:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013a26:	4798      	blx	r3
 8013a28:	4b08      	ldr	r3, [pc, #32]	@ (8013a4c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8013a2a:	881a      	ldrh	r2, [r3, #0]
 8013a2c:	6833      	ldr	r3, [r6, #0]
 8013a2e:	e9cd 7500 	strd	r7, r5, [sp]
 8013a32:	4601      	mov	r1, r0
 8013a34:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 8013a36:	4630      	mov	r0, r6
 8013a38:	ab04      	add	r3, sp, #16
 8013a3a:	47a8      	blx	r5
 8013a3c:	6820      	ldr	r0, [r4, #0]
 8013a3e:	6803      	ldr	r3, [r0, #0]
 8013a40:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013a42:	4798      	blx	r3
 8013a44:	e7e8      	b.n	8013a18 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8013a46:	bf00      	nop
 8013a48:	200119d4 	.word	0x200119d4
 8013a4c:	200119ce 	.word	0x200119ce

08013a50 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8013a50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013a54:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 8013a58:	9e08      	ldr	r6, [sp, #32]
 8013a5a:	4688      	mov	r8, r1
 8013a5c:	4614      	mov	r4, r2
 8013a5e:	461d      	mov	r5, r3
 8013a60:	2f00      	cmp	r7, #0
 8013a62:	f000 80a9 	beq.w	8013bb8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8013a66:	4618      	mov	r0, r3
 8013a68:	f7f5 fb87 	bl	800917a <_ZNK8touchgfx4Rect7isEmptyEv>
 8013a6c:	2800      	cmp	r0, #0
 8013a6e:	f040 80a3 	bne.w	8013bb8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8013a72:	f9b5 1000 	ldrsh.w	r1, [r5]
 8013a76:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8013a7a:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8013a7e:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8013a82:	fb04 1303 	mla	r3, r4, r3, r1
 8013a86:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8013a8a:	4365      	muls	r5, r4
 8013a8c:	2fff      	cmp	r7, #255	@ 0xff
 8013a8e:	eba4 0200 	sub.w	r2, r4, r0
 8013a92:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8013a96:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8013a9a:	d04a      	beq.n	8013b32 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8013a9c:	b2bc      	uxth	r4, r7
 8013a9e:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 8013aa2:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8013aa6:	fa5f f788 	uxtb.w	r7, r8
 8013aaa:	b2f3      	uxtb	r3, r6
 8013aac:	0040      	lsls	r0, r0, #1
 8013aae:	fb0e fe04 	mul.w	lr, lr, r4
 8013ab2:	4367      	muls	r7, r4
 8013ab4:	4363      	muls	r3, r4
 8013ab6:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8013aba:	fa1f fc8c 	uxth.w	ip, ip
 8013abe:	42a9      	cmp	r1, r5
 8013ac0:	d27a      	bcs.n	8013bb8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8013ac2:	eb01 0900 	add.w	r9, r1, r0
 8013ac6:	4549      	cmp	r1, r9
 8013ac8:	d231      	bcs.n	8013b2e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 8013aca:	880a      	ldrh	r2, [r1, #0]
 8013acc:	1214      	asrs	r4, r2, #8
 8013ace:	10d6      	asrs	r6, r2, #3
 8013ad0:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8013ad4:	00d2      	lsls	r2, r2, #3
 8013ad6:	b2d2      	uxtb	r2, r2
 8013ad8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8013adc:	fb14 f40c 	smulbb	r4, r4, ip
 8013ae0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8013ae4:	4474      	add	r4, lr
 8013ae6:	fb12 f20c 	smulbb	r2, r2, ip
 8013aea:	b2a4      	uxth	r4, r4
 8013aec:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013af0:	441a      	add	r2, r3
 8013af2:	b292      	uxth	r2, r2
 8013af4:	f104 0a01 	add.w	sl, r4, #1
 8013af8:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8013afc:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8013b00:	fb16 f60c 	smulbb	r6, r6, ip
 8013b04:	f102 0a01 	add.w	sl, r2, #1
 8013b08:	443e      	add	r6, r7
 8013b0a:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8013b0e:	b2b6      	uxth	r6, r6
 8013b10:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8013b14:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013b18:	4322      	orrs	r2, r4
 8013b1a:	1c74      	adds	r4, r6, #1
 8013b1c:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8013b20:	0976      	lsrs	r6, r6, #5
 8013b22:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8013b26:	4332      	orrs	r2, r6
 8013b28:	f821 2b02 	strh.w	r2, [r1], #2
 8013b2c:	e7cb      	b.n	8013ac6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 8013b2e:	4441      	add	r1, r8
 8013b30:	e7c5      	b.n	8013abe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8013b32:	4f22      	ldr	r7, [pc, #136]	@ (8013bbc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8013b34:	0973      	lsrs	r3, r6, #5
 8013b36:	ea08 0707 	and.w	r7, r8, r7
 8013b3a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8013b3e:	433b      	orrs	r3, r7
 8013b40:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8013b44:	4333      	orrs	r3, r6
 8013b46:	07e7      	lsls	r7, r4, #31
 8013b48:	b29b      	uxth	r3, r3
 8013b4a:	d50b      	bpl.n	8013b64 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8013b4c:	0040      	lsls	r0, r0, #1
 8013b4e:	0052      	lsls	r2, r2, #1
 8013b50:	42a9      	cmp	r1, r5
 8013b52:	d231      	bcs.n	8013bb8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8013b54:	180c      	adds	r4, r1, r0
 8013b56:	42a1      	cmp	r1, r4
 8013b58:	d202      	bcs.n	8013b60 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8013b5a:	f821 3b02 	strh.w	r3, [r1], #2
 8013b5e:	e7fa      	b.n	8013b56 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8013b60:	4411      	add	r1, r2
 8013b62:	e7f5      	b.n	8013b50 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8013b64:	078e      	lsls	r6, r1, #30
 8013b66:	d008      	beq.n	8013b7a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8013b68:	0066      	lsls	r6, r4, #1
 8013b6a:	460a      	mov	r2, r1
 8013b6c:	42aa      	cmp	r2, r5
 8013b6e:	d202      	bcs.n	8013b76 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8013b70:	8013      	strh	r3, [r2, #0]
 8013b72:	4432      	add	r2, r6
 8013b74:	e7fa      	b.n	8013b6c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8013b76:	3102      	adds	r1, #2
 8013b78:	3801      	subs	r0, #1
 8013b7a:	07c2      	lsls	r2, r0, #31
 8013b7c:	d50b      	bpl.n	8013b96 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8013b7e:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 8013b82:	3a01      	subs	r2, #1
 8013b84:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8013b88:	0066      	lsls	r6, r4, #1
 8013b8a:	42aa      	cmp	r2, r5
 8013b8c:	d202      	bcs.n	8013b94 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 8013b8e:	8013      	strh	r3, [r2, #0]
 8013b90:	4432      	add	r2, r6
 8013b92:	e7fa      	b.n	8013b8a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8013b94:	3801      	subs	r0, #1
 8013b96:	b178      	cbz	r0, 8013bb8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8013b98:	1040      	asrs	r0, r0, #1
 8013b9a:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8013b9e:	0080      	lsls	r0, r0, #2
 8013ba0:	0064      	lsls	r4, r4, #1
 8013ba2:	42a9      	cmp	r1, r5
 8013ba4:	d208      	bcs.n	8013bb8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8013ba6:	180e      	adds	r6, r1, r0
 8013ba8:	460a      	mov	r2, r1
 8013baa:	42b2      	cmp	r2, r6
 8013bac:	d202      	bcs.n	8013bb4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 8013bae:	f842 3b04 	str.w	r3, [r2], #4
 8013bb2:	e7fa      	b.n	8013baa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8013bb4:	4421      	add	r1, r4
 8013bb6:	e7f4      	b.n	8013ba2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8013bb8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013bbc:	00fff800 	.word	0x00fff800

08013bc0 <_ZN8touchgfx8LCD16bppC1Ev>:
 8013bc0:	2200      	movs	r2, #0
 8013bc2:	4912      	ldr	r1, [pc, #72]	@ (8013c0c <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 8013bc4:	6001      	str	r1, [r0, #0]
 8013bc6:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8013bca:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8013bce:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8013bd2:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8013bd6:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 8013bda:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 8013bde:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 8013be2:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 8013be6:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 8013bea:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 8013bee:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 8013bf2:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 8013bf6:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 8013bfa:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 8013bfe:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 8013c02:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 8013c06:	f8c0 2084 	str.w	r2, [r0, #132]	@ 0x84
 8013c0a:	4770      	bx	lr
 8013c0c:	08020054 	.word	0x08020054

08013c10 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8013c10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013c14:	460d      	mov	r5, r1
 8013c16:	b08d      	sub	sp, #52	@ 0x34
 8013c18:	4604      	mov	r4, r0
 8013c1a:	6808      	ldr	r0, [r1, #0]
 8013c1c:	6849      	ldr	r1, [r1, #4]
 8013c1e:	4699      	mov	r9, r3
 8013c20:	ab08      	add	r3, sp, #32
 8013c22:	c303      	stmia	r3!, {r0, r1}
 8013c24:	6810      	ldr	r0, [r2, #0]
 8013c26:	6851      	ldr	r1, [r2, #4]
 8013c28:	ab0a      	add	r3, sp, #40	@ 0x28
 8013c2a:	c303      	stmia	r3!, {r0, r1}
 8013c2c:	a808      	add	r0, sp, #32
 8013c2e:	f7f8 fa89 	bl	800c144 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013c32:	4629      	mov	r1, r5
 8013c34:	a80a      	add	r0, sp, #40	@ 0x28
 8013c36:	f7f8 faad 	bl	800c194 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013c3a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8013c3e:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 8013c42:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 8013c46:	4d63      	ldr	r5, [pc, #396]	@ (8013dd4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8013c48:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 8013c4c:	6828      	ldr	r0, [r5, #0]
 8013c4e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 8013c52:	fb11 2103 	smlabb	r1, r1, r3, r2
 8013c56:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8013c5a:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8013c5e:	440a      	add	r2, r1
 8013c60:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8013c64:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8013c68:	4413      	add	r3, r2
 8013c6a:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8013c6e:	6803      	ldr	r3, [r0, #0]
 8013c70:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013c72:	4798      	blx	r3
 8013c74:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8013c78:	d119      	bne.n	8013cae <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8013c7a:	f010 0f20 	tst.w	r0, #32
 8013c7e:	6828      	ldr	r0, [r5, #0]
 8013c80:	d018      	beq.n	8013cb4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8013c82:	2500      	movs	r5, #0
 8013c84:	6801      	ldr	r1, [r0, #0]
 8013c86:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8013c8a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8013c8e:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8013c92:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 8013c96:	9502      	str	r5, [sp, #8]
 8013c98:	b2b6      	uxth	r6, r6
 8013c9a:	fa1f f588 	uxth.w	r5, r8
 8013c9e:	9601      	str	r6, [sp, #4]
 8013ca0:	9500      	str	r5, [sp, #0]
 8013ca2:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
 8013ca4:	4621      	mov	r1, r4
 8013ca6:	47a8      	blx	r5
 8013ca8:	b00d      	add	sp, #52	@ 0x34
 8013caa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013cae:	f010 0f40 	tst.w	r0, #64	@ 0x40
 8013cb2:	e7e4      	b.n	8013c7e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8013cb4:	6803      	ldr	r3, [r0, #0]
 8013cb6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013cb8:	4798      	blx	r3
 8013cba:	4947      	ldr	r1, [pc, #284]	@ (8013dd8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8013cbc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8013cc0:	880b      	ldrh	r3, [r1, #0]
 8013cc2:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 8013cc6:	fb03 5202 	mla	r2, r3, r2, r5
 8013cca:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8013cce:	4373      	muls	r3, r6
 8013cd0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013cd4:	9307      	str	r3, [sp, #28]
 8013cd6:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8013cda:	9306      	str	r3, [sp, #24]
 8013cdc:	468a      	mov	sl, r1
 8013cde:	9b07      	ldr	r3, [sp, #28]
 8013ce0:	4298      	cmp	r0, r3
 8013ce2:	d270      	bcs.n	8013dc6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8013ce4:	9b06      	ldr	r3, [sp, #24]
 8013ce6:	4621      	mov	r1, r4
 8013ce8:	eb00 0b03 	add.w	fp, r0, r3
 8013cec:	4558      	cmp	r0, fp
 8013cee:	d25d      	bcs.n	8013dac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8013cf0:	f851 4b04 	ldr.w	r4, [r1], #4
 8013cf4:	0e23      	lsrs	r3, r4, #24
 8013cf6:	d014      	beq.n	8013d22 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8013cf8:	2bff      	cmp	r3, #255	@ 0xff
 8013cfa:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8013cfe:	d112      	bne.n	8013d26 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8013d00:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8013d04:	d10f      	bne.n	8013d26 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8013d06:	0963      	lsrs	r3, r4, #5
 8013d08:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8013d0c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8013d10:	f02c 0c07 	bic.w	ip, ip, #7
 8013d14:	ea43 0c0c 	orr.w	ip, r3, ip
 8013d18:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8013d1c:	ea4c 0404 	orr.w	r4, ip, r4
 8013d20:	8004      	strh	r4, [r0, #0]
 8013d22:	3002      	adds	r0, #2
 8013d24:	e7e2      	b.n	8013cec <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8013d26:	fb09 f303 	mul.w	r3, r9, r3
 8013d2a:	8807      	ldrh	r7, [r0, #0]
 8013d2c:	1c5a      	adds	r2, r3, #1
 8013d2e:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8013d32:	1212      	asrs	r2, r2, #8
 8013d34:	123e      	asrs	r6, r7, #8
 8013d36:	b293      	uxth	r3, r2
 8013d38:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8013d3c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8013d40:	43d2      	mvns	r2, r2
 8013d42:	b2d2      	uxtb	r2, r2
 8013d44:	10fd      	asrs	r5, r7, #3
 8013d46:	fb1e fe03 	smulbb	lr, lr, r3
 8013d4a:	00ff      	lsls	r7, r7, #3
 8013d4c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8013d50:	fb06 e602 	mla	r6, r6, r2, lr
 8013d54:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8013d58:	b2ff      	uxtb	r7, r7
 8013d5a:	fa5f fc8c 	uxtb.w	ip, ip
 8013d5e:	b2e4      	uxtb	r4, r4
 8013d60:	b2b6      	uxth	r6, r6
 8013d62:	fb1c fc03 	smulbb	ip, ip, r3
 8013d66:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8013d6a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8013d6e:	fb14 f403 	smulbb	r4, r4, r3
 8013d72:	fb05 c502 	mla	r5, r5, r2, ip
 8013d76:	f106 0e01 	add.w	lr, r6, #1
 8013d7a:	fb07 4702 	mla	r7, r7, r2, r4
 8013d7e:	b2ad      	uxth	r5, r5
 8013d80:	b2bf      	uxth	r7, r7
 8013d82:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8013d86:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 8013d8a:	f105 0c01 	add.w	ip, r5, #1
 8013d8e:	1c7e      	adds	r6, r7, #1
 8013d90:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8013d94:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8013d98:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8013d9c:	096d      	lsrs	r5, r5, #5
 8013d9e:	ea46 060e 	orr.w	r6, r6, lr
 8013da2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8013da6:	432e      	orrs	r6, r5
 8013da8:	8006      	strh	r6, [r0, #0]
 8013daa:	e7ba      	b.n	8013d22 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8013dac:	f8ba 3000 	ldrh.w	r3, [sl]
 8013db0:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 8013db4:	eba3 0308 	sub.w	r3, r3, r8
 8013db8:	eba4 0408 	sub.w	r4, r4, r8
 8013dbc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013dc0:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8013dc4:	e78b      	b.n	8013cde <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8013dc6:	4b03      	ldr	r3, [pc, #12]	@ (8013dd4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8013dc8:	6818      	ldr	r0, [r3, #0]
 8013dca:	6803      	ldr	r3, [r0, #0]
 8013dcc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013dce:	4798      	blx	r3
 8013dd0:	e76a      	b.n	8013ca8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8013dd2:	bf00      	nop
 8013dd4:	200119d4 	.word	0x200119d4
 8013dd8:	200119ce 	.word	0x200119ce

08013ddc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8013ddc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013de0:	460c      	mov	r4, r1
 8013de2:	b085      	sub	sp, #20
 8013de4:	6810      	ldr	r0, [r2, #0]
 8013de6:	6851      	ldr	r1, [r2, #4]
 8013de8:	466d      	mov	r5, sp
 8013dea:	c503      	stmia	r5!, {r0, r1}
 8013dec:	6818      	ldr	r0, [r3, #0]
 8013dee:	6859      	ldr	r1, [r3, #4]
 8013df0:	4616      	mov	r6, r2
 8013df2:	c503      	stmia	r5!, {r0, r1}
 8013df4:	4668      	mov	r0, sp
 8013df6:	f7f8 f9a5 	bl	800c144 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013dfa:	4631      	mov	r1, r6
 8013dfc:	a802      	add	r0, sp, #8
 8013dfe:	f7f8 f9c9 	bl	800c194 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013e02:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8013e06:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8013e0a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8013e0e:	4d28      	ldr	r5, [pc, #160]	@ (8013eb0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8013e10:	4e28      	ldr	r6, [pc, #160]	@ (8013eb4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8013e12:	6828      	ldr	r0, [r5, #0]
 8013e14:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8013e18:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8013e1c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8013e20:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8013e24:	f8bd 1000 	ldrh.w	r1, [sp]
 8013e28:	440a      	add	r2, r1
 8013e2a:	f8ad 2008 	strh.w	r2, [sp, #8]
 8013e2e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8013e32:	4413      	add	r3, r2
 8013e34:	f8ad 300a 	strh.w	r3, [sp, #10]
 8013e38:	6803      	ldr	r3, [r0, #0]
 8013e3a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013e3c:	4798      	blx	r3
 8013e3e:	8833      	ldrh	r3, [r6, #0]
 8013e40:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8013e44:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8013e48:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 8013eb8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8013e4c:	fb03 1202 	mla	r2, r3, r2, r1
 8013e50:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8013e54:	fb08 f303 	mul.w	r3, r8, r3
 8013e58:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013e5c:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8013e60:	4298      	cmp	r0, r3
 8013e62:	d21d      	bcs.n	8013ea0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8013e64:	eb00 080c 	add.w	r8, r0, ip
 8013e68:	4540      	cmp	r0, r8
 8013e6a:	d20f      	bcs.n	8013e8c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8013e6c:	f854 1b04 	ldr.w	r1, [r4], #4
 8013e70:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8013e74:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8013e78:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8013e7c:	ea42 0209 	orr.w	r2, r2, r9
 8013e80:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8013e84:	430a      	orrs	r2, r1
 8013e86:	f820 2b02 	strh.w	r2, [r0], #2
 8013e8a:	e7ed      	b.n	8013e68 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8013e8c:	8832      	ldrh	r2, [r6, #0]
 8013e8e:	1bd2      	subs	r2, r2, r7
 8013e90:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8013e94:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8013e98:	1bd2      	subs	r2, r2, r7
 8013e9a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8013e9e:	e7df      	b.n	8013e60 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8013ea0:	6828      	ldr	r0, [r5, #0]
 8013ea2:	6803      	ldr	r3, [r0, #0]
 8013ea4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013ea6:	4798      	blx	r3
 8013ea8:	b005      	add	sp, #20
 8013eaa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013eae:	bf00      	nop
 8013eb0:	200119d4 	.word	0x200119d4
 8013eb4:	200119ce 	.word	0x200119ce
 8013eb8:	fffff800 	.word	0xfffff800

08013ebc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8013ebc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013ec0:	460e      	mov	r6, r1
 8013ec2:	b08e      	sub	sp, #56	@ 0x38
 8013ec4:	4604      	mov	r4, r0
 8013ec6:	6808      	ldr	r0, [r1, #0]
 8013ec8:	6849      	ldr	r1, [r1, #4]
 8013eca:	f8df 81d8 	ldr.w	r8, [pc, #472]	@ 80140a4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8013ece:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 80140a8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8013ed2:	461d      	mov	r5, r3
 8013ed4:	ab0a      	add	r3, sp, #40	@ 0x28
 8013ed6:	c303      	stmia	r3!, {r0, r1}
 8013ed8:	6810      	ldr	r0, [r2, #0]
 8013eda:	6851      	ldr	r1, [r2, #4]
 8013edc:	ab0c      	add	r3, sp, #48	@ 0x30
 8013ede:	c303      	stmia	r3!, {r0, r1}
 8013ee0:	a80a      	add	r0, sp, #40	@ 0x28
 8013ee2:	f7f8 f92f 	bl	800c144 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013ee6:	4631      	mov	r1, r6
 8013ee8:	a80c      	add	r0, sp, #48	@ 0x30
 8013eea:	f7f8 f953 	bl	800c194 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013eee:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8013ef2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8013ef6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8013efa:	f8d8 0000 	ldr.w	r0, [r8]
 8013efe:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 8013f02:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8013f06:	fb11 2103 	smlabb	r1, r1, r3, r2
 8013f0a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8013f0e:	440c      	add	r4, r1
 8013f10:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 8013f14:	440a      	add	r2, r1
 8013f16:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8013f1a:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8013f1e:	4413      	add	r3, r2
 8013f20:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8013f24:	6803      	ldr	r3, [r0, #0]
 8013f26:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013f28:	4798      	blx	r3
 8013f2a:	2dff      	cmp	r5, #255	@ 0xff
 8013f2c:	d124      	bne.n	8013f78 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8013f2e:	f010 0f01 	tst.w	r0, #1
 8013f32:	f8d8 0000 	ldr.w	r0, [r8]
 8013f36:	d022      	beq.n	8013f7e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8013f38:	2100      	movs	r1, #0
 8013f3a:	f8d0 c000 	ldr.w	ip, [r0]
 8013f3e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8013f42:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8013f46:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8013f4a:	f04f 0e01 	mov.w	lr, #1
 8013f4e:	f8cd e018 	str.w	lr, [sp, #24]
 8013f52:	f8b9 e000 	ldrh.w	lr, [r9]
 8013f56:	9503      	str	r5, [sp, #12]
 8013f58:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8013f5c:	b2b6      	uxth	r6, r6
 8013f5e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8013f62:	9102      	str	r1, [sp, #8]
 8013f64:	b2bf      	uxth	r7, r7
 8013f66:	9601      	str	r6, [sp, #4]
 8013f68:	9700      	str	r7, [sp, #0]
 8013f6a:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
 8013f6e:	4621      	mov	r1, r4
 8013f70:	47a8      	blx	r5
 8013f72:	b00e      	add	sp, #56	@ 0x38
 8013f74:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013f78:	f010 0f04 	tst.w	r0, #4
 8013f7c:	e7d9      	b.n	8013f32 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8013f7e:	6803      	ldr	r3, [r0, #0]
 8013f80:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013f82:	4798      	blx	r3
 8013f84:	f8b9 3000 	ldrh.w	r3, [r9]
 8013f88:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8013f8c:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 8013f90:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8013f94:	fb03 1202 	mla	r2, r3, r2, r1
 8013f98:	ebac 0c07 	sub.w	ip, ip, r7
 8013f9c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8013fa0:	435e      	muls	r6, r3
 8013fa2:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8013fa6:	2dff      	cmp	r5, #255	@ 0xff
 8013fa8:	eba3 0707 	sub.w	r7, r3, r7
 8013fac:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8013fb0:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8013fb4:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8013fb8:	d049      	beq.n	801404e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8013fba:	43eb      	mvns	r3, r5
 8013fbc:	fa1f f985 	uxth.w	r9, r5
 8013fc0:	b2db      	uxtb	r3, r3
 8013fc2:	42b0      	cmp	r0, r6
 8013fc4:	d266      	bcs.n	8014094 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8013fc6:	eb00 0a0e 	add.w	sl, r0, lr
 8013fca:	4550      	cmp	r0, sl
 8013fcc:	4621      	mov	r1, r4
 8013fce:	f104 0403 	add.w	r4, r4, #3
 8013fd2:	d25b      	bcs.n	801408c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8013fd4:	8802      	ldrh	r2, [r0, #0]
 8013fd6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8013fda:	ea4f 2822 	mov.w	r8, r2, asr #8
 8013fde:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8013fe2:	fb11 f109 	smulbb	r1, r1, r9
 8013fe6:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8013fea:	10d5      	asrs	r5, r2, #3
 8013fec:	fb08 1803 	mla	r8, r8, r3, r1
 8013ff0:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8013ff4:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8013ff8:	fb11 f109 	smulbb	r1, r1, r9
 8013ffc:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8014000:	fb05 1503 	mla	r5, r5, r3, r1
 8014004:	00d2      	lsls	r2, r2, #3
 8014006:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801400a:	b2d2      	uxtb	r2, r2
 801400c:	fb11 f109 	smulbb	r1, r1, r9
 8014010:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8014014:	fa1f f888 	uxth.w	r8, r8
 8014018:	fb02 1203 	mla	r2, r2, r3, r1
 801401c:	b292      	uxth	r2, r2
 801401e:	f108 0101 	add.w	r1, r8, #1
 8014022:	b2ad      	uxth	r5, r5
 8014024:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8014028:	1c51      	adds	r1, r2, #1
 801402a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801402e:	1c69      	adds	r1, r5, #1
 8014030:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8014034:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8014038:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801403c:	096d      	lsrs	r5, r5, #5
 801403e:	ea42 0208 	orr.w	r2, r2, r8
 8014042:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8014046:	432a      	orrs	r2, r5
 8014048:	f820 2b02 	strh.w	r2, [r0], #2
 801404c:	e7bd      	b.n	8013fca <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801404e:	4a14      	ldr	r2, [pc, #80]	@ (80140a0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8014050:	42b0      	cmp	r0, r6
 8014052:	d21f      	bcs.n	8014094 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8014054:	eb00 050e 	add.w	r5, r0, lr
 8014058:	42a8      	cmp	r0, r5
 801405a:	4621      	mov	r1, r4
 801405c:	f104 0403 	add.w	r4, r4, #3
 8014060:	d210      	bcs.n	8014084 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8014062:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8014066:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801406a:	00db      	lsls	r3, r3, #3
 801406c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8014070:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8014074:	430b      	orrs	r3, r1
 8014076:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801407a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801407e:	f820 3b02 	strh.w	r3, [r0], #2
 8014082:	e7e9      	b.n	8014058 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8014084:	4438      	add	r0, r7
 8014086:	eb01 040c 	add.w	r4, r1, ip
 801408a:	e7e1      	b.n	8014050 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801408c:	4438      	add	r0, r7
 801408e:	eb01 040c 	add.w	r4, r1, ip
 8014092:	e796      	b.n	8013fc2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8014094:	4b03      	ldr	r3, [pc, #12]	@ (80140a4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8014096:	6818      	ldr	r0, [r3, #0]
 8014098:	6803      	ldr	r3, [r0, #0]
 801409a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801409c:	4798      	blx	r3
 801409e:	e768      	b.n	8013f72 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 80140a0:	fffff800 	.word	0xfffff800
 80140a4:	200119d4 	.word	0x200119d4
 80140a8:	200119ce 	.word	0x200119ce

080140ac <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 80140ac:	b4f0      	push	{r4, r5, r6, r7}
 80140ae:	4616      	mov	r6, r2
 80140b0:	2e01      	cmp	r6, #1
 80140b2:	461c      	mov	r4, r3
 80140b4:	460d      	mov	r5, r1
 80140b6:	9a04      	ldr	r2, [sp, #16]
 80140b8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80140bc:	f89d 7018 	ldrb.w	r7, [sp, #24]
 80140c0:	d012      	beq.n	80140e8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 80140c2:	d303      	bcc.n	80140cc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 80140c4:	2e02      	cmp	r6, #2
 80140c6:	d00a      	beq.n	80140de <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 80140c8:	bcf0      	pop	{r4, r5, r6, r7}
 80140ca:	4770      	bx	lr
 80140cc:	6805      	ldr	r5, [r0, #0]
 80140ce:	e9cd 3704 	strd	r3, r7, [sp, #16]
 80140d2:	68ed      	ldr	r5, [r5, #12]
 80140d4:	4613      	mov	r3, r2
 80140d6:	46ac      	mov	ip, r5
 80140d8:	4622      	mov	r2, r4
 80140da:	bcf0      	pop	{r4, r5, r6, r7}
 80140dc:	4760      	bx	ip
 80140de:	4621      	mov	r1, r4
 80140e0:	4628      	mov	r0, r5
 80140e2:	bcf0      	pop	{r4, r5, r6, r7}
 80140e4:	f7ff bd94 	b.w	8013c10 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80140e8:	4621      	mov	r1, r4
 80140ea:	4628      	mov	r0, r5
 80140ec:	bcf0      	pop	{r4, r5, r6, r7}
 80140ee:	f7ff bee5 	b.w	8013ebc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

080140f4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 80140f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80140f8:	4681      	mov	r9, r0
 80140fa:	b093      	sub	sp, #76	@ 0x4c
 80140fc:	6810      	ldr	r0, [r2, #0]
 80140fe:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 8014102:	4f6d      	ldr	r7, [pc, #436]	@ (80142b8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8014104:	4688      	mov	r8, r1
 8014106:	6851      	ldr	r1, [r2, #4]
 8014108:	ac0e      	add	r4, sp, #56	@ 0x38
 801410a:	c403      	stmia	r4!, {r0, r1}
 801410c:	6818      	ldr	r0, [r3, #0]
 801410e:	6859      	ldr	r1, [r3, #4]
 8014110:	ac10      	add	r4, sp, #64	@ 0x40
 8014112:	4616      	mov	r6, r2
 8014114:	c403      	stmia	r4!, {r0, r1}
 8014116:	a80e      	add	r0, sp, #56	@ 0x38
 8014118:	f7f8 f814 	bl	800c144 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801411c:	4631      	mov	r1, r6
 801411e:	a810      	add	r0, sp, #64	@ 0x40
 8014120:	f7f8 f838 	bl	800c194 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014124:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8014128:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 801412c:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8014130:	4e62      	ldr	r6, [pc, #392]	@ (80142bc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8014132:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 8014136:	6830      	ldr	r0, [r6, #0]
 8014138:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 801413c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8014140:	4489      	add	r9, r1
 8014142:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 8014146:	440a      	add	r2, r1
 8014148:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 801414c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8014150:	4413      	add	r3, r2
 8014152:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8014156:	6803      	ldr	r3, [r0, #0]
 8014158:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801415a:	4798      	blx	r3
 801415c:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8014160:	6830      	ldr	r0, [r6, #0]
 8014162:	d01d      	beq.n	80141a0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8014164:	2200      	movs	r2, #0
 8014166:	6801      	ldr	r1, [r0, #0]
 8014168:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 801416c:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8014170:	220b      	movs	r2, #11
 8014172:	9207      	str	r2, [sp, #28]
 8014174:	883a      	ldrh	r2, [r7, #0]
 8014176:	9206      	str	r2, [sp, #24]
 8014178:	2201      	movs	r2, #1
 801417a:	e9cd a204 	strd	sl, r2, [sp, #16]
 801417e:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 8014182:	9203      	str	r2, [sp, #12]
 8014184:	b2a4      	uxth	r4, r4
 8014186:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 801418a:	9200      	str	r2, [sp, #0]
 801418c:	b2ad      	uxth	r5, r5
 801418e:	9502      	str	r5, [sp, #8]
 8014190:	9401      	str	r4, [sp, #4]
 8014192:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
 8014194:	4642      	mov	r2, r8
 8014196:	4649      	mov	r1, r9
 8014198:	47a0      	blx	r4
 801419a:	b013      	add	sp, #76	@ 0x4c
 801419c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80141a0:	6803      	ldr	r3, [r0, #0]
 80141a2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80141a4:	4798      	blx	r3
 80141a6:	883b      	ldrh	r3, [r7, #0]
 80141a8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 80141ac:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 80141b0:	fb03 1202 	mla	r2, r3, r2, r1
 80141b4:	435d      	muls	r5, r3
 80141b6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80141ba:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 80141be:	920c      	str	r2, [sp, #48]	@ 0x30
 80141c0:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 80141c4:	1b12      	subs	r2, r2, r4
 80141c6:	920d      	str	r2, [sp, #52]	@ 0x34
 80141c8:	0062      	lsls	r2, r4, #1
 80141ca:	1b1c      	subs	r4, r3, r4
 80141cc:	0063      	lsls	r3, r4, #1
 80141ce:	920a      	str	r2, [sp, #40]	@ 0x28
 80141d0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80141d2:	f04f 0e04 	mov.w	lr, #4
 80141d6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80141d8:	4298      	cmp	r0, r3
 80141da:	d266      	bcs.n	80142aa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 80141dc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80141de:	eb00 0b03 	add.w	fp, r0, r3
 80141e2:	4558      	cmp	r0, fp
 80141e4:	d25c      	bcs.n	80142a0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 80141e6:	f819 3b01 	ldrb.w	r3, [r9], #1
 80141ea:	fb1e e303 	smlabb	r3, lr, r3, lr
 80141ee:	f858 2003 	ldr.w	r2, [r8, r3]
 80141f2:	0e11      	lsrs	r1, r2, #24
 80141f4:	d012      	beq.n	801421c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 80141f6:	29ff      	cmp	r1, #255	@ 0xff
 80141f8:	ea4f 2712 	mov.w	r7, r2, lsr #8
 80141fc:	d110      	bne.n	8014220 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 80141fe:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8014202:	d10d      	bne.n	8014220 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8014204:	0953      	lsrs	r3, r2, #5
 8014206:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 801420a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801420e:	f027 0707 	bic.w	r7, r7, #7
 8014212:	431f      	orrs	r7, r3
 8014214:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8014218:	433a      	orrs	r2, r7
 801421a:	8002      	strh	r2, [r0, #0]
 801421c:	3002      	adds	r0, #2
 801421e:	e7e0      	b.n	80141e2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8014220:	fb0a f101 	mul.w	r1, sl, r1
 8014224:	8806      	ldrh	r6, [r0, #0]
 8014226:	1c4b      	adds	r3, r1, #1
 8014228:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801422c:	1235      	asrs	r5, r6, #8
 801422e:	10f4      	asrs	r4, r6, #3
 8014230:	121b      	asrs	r3, r3, #8
 8014232:	00f6      	lsls	r6, r6, #3
 8014234:	b299      	uxth	r1, r3
 8014236:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801423a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801423e:	b2f6      	uxtb	r6, r6
 8014240:	43db      	mvns	r3, r3
 8014242:	b2d2      	uxtb	r2, r2
 8014244:	b2db      	uxtb	r3, r3
 8014246:	fb1c fc01 	smulbb	ip, ip, r1
 801424a:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801424e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8014252:	fb12 f201 	smulbb	r2, r2, r1
 8014256:	fb05 c503 	mla	r5, r5, r3, ip
 801425a:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801425e:	b2ff      	uxtb	r7, r7
 8014260:	fb06 2203 	mla	r2, r6, r3, r2
 8014264:	b2ad      	uxth	r5, r5
 8014266:	fb17 f701 	smulbb	r7, r7, r1
 801426a:	b292      	uxth	r2, r2
 801426c:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8014270:	fb04 7403 	mla	r4, r4, r3, r7
 8014274:	f105 0c01 	add.w	ip, r5, #1
 8014278:	1c57      	adds	r7, r2, #1
 801427a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801427e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8014282:	b2a4      	uxth	r4, r4
 8014284:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8014288:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801428c:	433d      	orrs	r5, r7
 801428e:	1c67      	adds	r7, r4, #1
 8014290:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8014294:	0964      	lsrs	r4, r4, #5
 8014296:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801429a:	4325      	orrs	r5, r4
 801429c:	8005      	strh	r5, [r0, #0]
 801429e:	e7bd      	b.n	801421c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 80142a0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80142a2:	4418      	add	r0, r3
 80142a4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80142a6:	4499      	add	r9, r3
 80142a8:	e795      	b.n	80141d6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 80142aa:	4b04      	ldr	r3, [pc, #16]	@ (80142bc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80142ac:	6818      	ldr	r0, [r3, #0]
 80142ae:	6803      	ldr	r3, [r0, #0]
 80142b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80142b2:	4798      	blx	r3
 80142b4:	e771      	b.n	801419a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 80142b6:	bf00      	nop
 80142b8:	200119ce 	.word	0x200119ce
 80142bc:	200119d4 	.word	0x200119d4

080142c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 80142c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80142c4:	b087      	sub	sp, #28
 80142c6:	4680      	mov	r8, r0
 80142c8:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 80142cc:	460d      	mov	r5, r1
 80142ce:	4614      	mov	r4, r2
 80142d0:	2e00      	cmp	r6, #0
 80142d2:	f000 80b9 	beq.w	8014448 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 80142d6:	6810      	ldr	r0, [r2, #0]
 80142d8:	6851      	ldr	r1, [r2, #4]
 80142da:	af02      	add	r7, sp, #8
 80142dc:	c703      	stmia	r7!, {r0, r1}
 80142de:	6818      	ldr	r0, [r3, #0]
 80142e0:	6859      	ldr	r1, [r3, #4]
 80142e2:	af04      	add	r7, sp, #16
 80142e4:	c703      	stmia	r7!, {r0, r1}
 80142e6:	a802      	add	r0, sp, #8
 80142e8:	f7f7 ff2c 	bl	800c144 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80142ec:	4621      	mov	r1, r4
 80142ee:	a804      	add	r0, sp, #16
 80142f0:	f7f7 ff50 	bl	800c194 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80142f4:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80142f8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80142fc:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8014300:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8014304:	fb14 2103 	smlabb	r1, r4, r3, r2
 8014308:	eb08 0401 	add.w	r4, r8, r1
 801430c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8014310:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8014314:	440a      	add	r2, r1
 8014316:	f8ad 2010 	strh.w	r2, [sp, #16]
 801431a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801431e:	4413      	add	r3, r2
 8014320:	f8ad 3012 	strh.w	r3, [sp, #18]
 8014324:	4b4a      	ldr	r3, [pc, #296]	@ (8014450 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8014326:	6818      	ldr	r0, [r3, #0]
 8014328:	6803      	ldr	r3, [r0, #0]
 801432a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801432c:	4798      	blx	r3
 801432e:	4b49      	ldr	r3, [pc, #292]	@ (8014454 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8014330:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8014334:	881a      	ldrh	r2, [r3, #0]
 8014336:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801433a:	2eff      	cmp	r6, #255	@ 0xff
 801433c:	fb02 c101 	mla	r1, r2, r1, ip
 8014340:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8014344:	fb02 f207 	mul.w	r2, r2, r7
 8014348:	f105 0104 	add.w	r1, r5, #4
 801434c:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8014350:	461d      	mov	r5, r3
 8014352:	d05a      	beq.n	801440a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8014354:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 8014358:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801435c:	b2b6      	uxth	r6, r6
 801435e:	fa1f fe8e 	uxth.w	lr, lr
 8014362:	9301      	str	r3, [sp, #4]
 8014364:	4282      	cmp	r2, r0
 8014366:	d96a      	bls.n	801443e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8014368:	eb00 0b0a 	add.w	fp, r0, sl
 801436c:	4583      	cmp	fp, r0
 801436e:	d940      	bls.n	80143f2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8014370:	f814 3b01 	ldrb.w	r3, [r4], #1
 8014374:	8805      	ldrh	r5, [r0, #0]
 8014376:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801437a:	122f      	asrs	r7, r5, #8
 801437c:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8014380:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014384:	fb17 f70e 	smulbb	r7, r7, lr
 8014388:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801438c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014390:	00ed      	lsls	r5, r5, #3
 8014392:	fb0c 7c06 	mla	ip, ip, r6, r7
 8014396:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801439a:	10df      	asrs	r7, r3, #3
 801439c:	b2ed      	uxtb	r5, r5
 801439e:	00db      	lsls	r3, r3, #3
 80143a0:	fa1f fc8c 	uxth.w	ip, ip
 80143a4:	fb19 f90e 	smulbb	r9, r9, lr
 80143a8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80143ac:	b2db      	uxtb	r3, r3
 80143ae:	fb15 f50e 	smulbb	r5, r5, lr
 80143b2:	fb07 9706 	mla	r7, r7, r6, r9
 80143b6:	fb03 5306 	mla	r3, r3, r6, r5
 80143ba:	f10c 0901 	add.w	r9, ip, #1
 80143be:	b29b      	uxth	r3, r3
 80143c0:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 80143c4:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 80143c8:	f103 0c01 	add.w	ip, r3, #1
 80143cc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80143d0:	b2bf      	uxth	r7, r7
 80143d2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80143d6:	ea4c 0c09 	orr.w	ip, ip, r9
 80143da:	f107 0901 	add.w	r9, r7, #1
 80143de:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 80143e2:	097f      	lsrs	r7, r7, #5
 80143e4:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80143e8:	ea4c 0c07 	orr.w	ip, ip, r7
 80143ec:	f820 cb02 	strh.w	ip, [r0], #2
 80143f0:	e7bc      	b.n	801436c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 80143f2:	9b01      	ldr	r3, [sp, #4]
 80143f4:	881b      	ldrh	r3, [r3, #0]
 80143f6:	eba3 0308 	sub.w	r3, r3, r8
 80143fa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80143fe:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8014402:	eba3 0308 	sub.w	r3, r3, r8
 8014406:	441c      	add	r4, r3
 8014408:	e7ac      	b.n	8014364 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801440a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801440e:	4282      	cmp	r2, r0
 8014410:	d915      	bls.n	801443e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8014412:	eb00 060a 	add.w	r6, r0, sl
 8014416:	4286      	cmp	r6, r0
 8014418:	d906      	bls.n	8014428 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801441a:	f814 3b01 	ldrb.w	r3, [r4], #1
 801441e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8014422:	f820 3b02 	strh.w	r3, [r0], #2
 8014426:	e7f6      	b.n	8014416 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8014428:	882b      	ldrh	r3, [r5, #0]
 801442a:	eba3 0308 	sub.w	r3, r3, r8
 801442e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014432:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8014436:	eba3 0308 	sub.w	r3, r3, r8
 801443a:	441c      	add	r4, r3
 801443c:	e7e7      	b.n	801440e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801443e:	4b04      	ldr	r3, [pc, #16]	@ (8014450 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8014440:	6818      	ldr	r0, [r3, #0]
 8014442:	6803      	ldr	r3, [r0, #0]
 8014444:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014446:	4798      	blx	r3
 8014448:	b007      	add	sp, #28
 801444a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801444e:	bf00      	nop
 8014450:	200119d4 	.word	0x200119d4
 8014454:	200119ce 	.word	0x200119ce

08014458 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8014458:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801445c:	b091      	sub	sp, #68	@ 0x44
 801445e:	4680      	mov	r8, r0
 8014460:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 8014464:	460f      	mov	r7, r1
 8014466:	4614      	mov	r4, r2
 8014468:	2d00      	cmp	r5, #0
 801446a:	d051      	beq.n	8014510 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801446c:	6810      	ldr	r0, [r2, #0]
 801446e:	6851      	ldr	r1, [r2, #4]
 8014470:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 8014674 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8014474:	ae0c      	add	r6, sp, #48	@ 0x30
 8014476:	c603      	stmia	r6!, {r0, r1}
 8014478:	6818      	ldr	r0, [r3, #0]
 801447a:	6859      	ldr	r1, [r3, #4]
 801447c:	ae0e      	add	r6, sp, #56	@ 0x38
 801447e:	c603      	stmia	r6!, {r0, r1}
 8014480:	a80c      	add	r0, sp, #48	@ 0x30
 8014482:	f7f7 fe5f 	bl	800c144 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014486:	4621      	mov	r1, r4
 8014488:	a80e      	add	r0, sp, #56	@ 0x38
 801448a:	f7f7 fe83 	bl	800c194 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801448e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 8014492:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8014496:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801449a:	f8d9 0000 	ldr.w	r0, [r9]
 801449e:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 80144a2:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 80144a6:	fb11 2103 	smlabb	r1, r1, r3, r2
 80144aa:	eb08 0401 	add.w	r4, r8, r1
 80144ae:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 80144b2:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 8014678 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 80144b6:	440a      	add	r2, r1
 80144b8:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 80144bc:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 80144c0:	4413      	add	r3, r2
 80144c2:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 80144c6:	6803      	ldr	r3, [r0, #0]
 80144c8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80144ca:	4798      	blx	r3
 80144cc:	f010 0f80 	tst.w	r0, #128	@ 0x80
 80144d0:	f8d9 0000 	ldr.w	r0, [r9]
 80144d4:	d01f      	beq.n	8014516 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 80144d6:	2200      	movs	r2, #0
 80144d8:	6801      	ldr	r1, [r0, #0]
 80144da:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 80144de:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80144e2:	220b      	movs	r2, #11
 80144e4:	9207      	str	r2, [sp, #28]
 80144e6:	f8b8 2000 	ldrh.w	r2, [r8]
 80144ea:	9206      	str	r2, [sp, #24]
 80144ec:	2201      	movs	r2, #1
 80144ee:	e9cd 5204 	strd	r5, r2, [sp, #16]
 80144f2:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 80144f6:	9203      	str	r2, [sp, #12]
 80144f8:	fa1f f28a 	uxth.w	r2, sl
 80144fc:	9202      	str	r2, [sp, #8]
 80144fe:	b2b6      	uxth	r6, r6
 8014500:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8014504:	9200      	str	r2, [sp, #0]
 8014506:	9601      	str	r6, [sp, #4]
 8014508:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
 801450a:	463a      	mov	r2, r7
 801450c:	4621      	mov	r1, r4
 801450e:	47a8      	blx	r5
 8014510:	b011      	add	sp, #68	@ 0x44
 8014512:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014516:	6803      	ldr	r3, [r0, #0]
 8014518:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801451a:	4798      	blx	r3
 801451c:	f8b8 2000 	ldrh.w	r2, [r8]
 8014520:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8014524:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 8014528:	2dff      	cmp	r5, #255	@ 0xff
 801452a:	fb02 1303 	mla	r3, r2, r3, r1
 801452e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014532:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8014536:	fb0a fa02 	mul.w	sl, sl, r2
 801453a:	d062      	beq.n	8014602 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801453c:	ea6f 0c05 	mvn.w	ip, r5
 8014540:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8014544:	930a      	str	r3, [sp, #40]	@ 0x28
 8014546:	b2ad      	uxth	r5, r5
 8014548:	fa5f fc8c 	uxtb.w	ip, ip
 801454c:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 8014550:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8014552:	4298      	cmp	r0, r3
 8014554:	f080 8085 	bcs.w	8014662 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8014558:	eb00 0b09 	add.w	fp, r0, r9
 801455c:	4558      	cmp	r0, fp
 801455e:	d246      	bcs.n	80145ee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8014560:	f814 eb01 	ldrb.w	lr, [r4], #1
 8014564:	2303      	movs	r3, #3
 8014566:	2204      	movs	r2, #4
 8014568:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801456c:	eb07 0a0e 	add.w	sl, r7, lr
 8014570:	8803      	ldrh	r3, [r0, #0]
 8014572:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8014576:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801457a:	1219      	asrs	r1, r3, #8
 801457c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8014580:	fb18 f805 	smulbb	r8, r8, r5
 8014584:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8014588:	10da      	asrs	r2, r3, #3
 801458a:	fb01 810c 	mla	r1, r1, ip, r8
 801458e:	00db      	lsls	r3, r3, #3
 8014590:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8014594:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8014598:	b2db      	uxtb	r3, r3
 801459a:	fb18 f805 	smulbb	r8, r8, r5
 801459e:	fb1e fe05 	smulbb	lr, lr, r5
 80145a2:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 80145a6:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 80145aa:	b289      	uxth	r1, r1
 80145ac:	fb02 820c 	mla	r2, r2, ip, r8
 80145b0:	fb03 e30c 	mla	r3, r3, ip, lr
 80145b4:	b292      	uxth	r2, r2
 80145b6:	b29b      	uxth	r3, r3
 80145b8:	f101 0801 	add.w	r8, r1, #1
 80145bc:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 80145c0:	f103 0e01 	add.w	lr, r3, #1
 80145c4:	f102 0801 	add.w	r8, r2, #1
 80145c8:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 80145cc:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 80145d0:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 80145d4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80145d8:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80145dc:	ea4e 0101 	orr.w	r1, lr, r1
 80145e0:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80145e4:	ea41 0108 	orr.w	r1, r1, r8
 80145e8:	f820 1b02 	strh.w	r1, [r0], #2
 80145ec:	e7b6      	b.n	801455c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 80145ee:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80145f0:	881b      	ldrh	r3, [r3, #0]
 80145f2:	1b9b      	subs	r3, r3, r6
 80145f4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80145f8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80145fc:	1b9b      	subs	r3, r3, r6
 80145fe:	441c      	add	r4, r3
 8014600:	e7a6      	b.n	8014550 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8014602:	491b      	ldr	r1, [pc, #108]	@ (8014670 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8014604:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8014608:	2203      	movs	r2, #3
 801460a:	2504      	movs	r5, #4
 801460c:	4550      	cmp	r0, sl
 801460e:	d228      	bcs.n	8014662 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8014610:	eb00 0c09 	add.w	ip, r0, r9
 8014614:	4560      	cmp	r0, ip
 8014616:	4623      	mov	r3, r4
 8014618:	d219      	bcs.n	801464e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801461a:	f893 e000 	ldrb.w	lr, [r3]
 801461e:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8014622:	eb07 0b0e 	add.w	fp, r7, lr
 8014626:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801462a:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801462e:	f89b b001 	ldrb.w	fp, [fp, #1]
 8014632:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8014636:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801463a:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801463e:	ea43 030b 	orr.w	r3, r3, fp
 8014642:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8014646:	3401      	adds	r4, #1
 8014648:	f820 3b02 	strh.w	r3, [r0], #2
 801464c:	e7e2      	b.n	8014614 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801464e:	f8b8 3000 	ldrh.w	r3, [r8]
 8014652:	1b9b      	subs	r3, r3, r6
 8014654:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014658:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801465c:	1b9b      	subs	r3, r3, r6
 801465e:	441c      	add	r4, r3
 8014660:	e7d4      	b.n	801460c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8014662:	4b04      	ldr	r3, [pc, #16]	@ (8014674 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8014664:	6818      	ldr	r0, [r3, #0]
 8014666:	6803      	ldr	r3, [r0, #0]
 8014668:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801466a:	4798      	blx	r3
 801466c:	e750      	b.n	8014510 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801466e:	bf00      	nop
 8014670:	fffff800 	.word	0xfffff800
 8014674:	200119d4 	.word	0x200119d4
 8014678:	200119ce 	.word	0x200119ce

0801467c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801467c:	b4f0      	push	{r4, r5, r6, r7}
 801467e:	460c      	mov	r4, r1
 8014680:	4611      	mov	r1, r2
 8014682:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8014686:	780f      	ldrb	r7, [r1, #0]
 8014688:	784e      	ldrb	r6, [r1, #1]
 801468a:	2f01      	cmp	r7, #1
 801468c:	461a      	mov	r2, r3
 801468e:	9b04      	ldr	r3, [sp, #16]
 8014690:	d038      	beq.n	8014704 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 8014692:	d31f      	bcc.n	80146d4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 8014694:	2f02      	cmp	r7, #2
 8014696:	d14d      	bne.n	8014734 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8014698:	2e03      	cmp	r6, #3
 801469a:	d84b      	bhi.n	8014734 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801469c:	e8df f006 	tbb	[pc, r6]
 80146a0:	17140702 	.word	0x17140702
 80146a4:	9504      	str	r5, [sp, #16]
 80146a6:	4620      	mov	r0, r4
 80146a8:	bcf0      	pop	{r4, r5, r6, r7}
 80146aa:	f7ff be09 	b.w	80142c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 80146ae:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 80146b0:	2800      	cmp	r0, #0
 80146b2:	d03f      	beq.n	8014734 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80146b4:	6806      	ldr	r6, [r0, #0]
 80146b6:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80146ba:	68b5      	ldr	r5, [r6, #8]
 80146bc:	4613      	mov	r3, r2
 80146be:	46ac      	mov	ip, r5
 80146c0:	460a      	mov	r2, r1
 80146c2:	4621      	mov	r1, r4
 80146c4:	bcf0      	pop	{r4, r5, r6, r7}
 80146c6:	4760      	bx	ip
 80146c8:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 80146cc:	e7f0      	b.n	80146b0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 80146ce:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 80146d2:	e7ed      	b.n	80146b0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 80146d4:	2e03      	cmp	r6, #3
 80146d6:	d82d      	bhi.n	8014734 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80146d8:	e8df f006 	tbb	[pc, r6]
 80146dc:	110e0702 	.word	0x110e0702
 80146e0:	9504      	str	r5, [sp, #16]
 80146e2:	4620      	mov	r0, r4
 80146e4:	bcf0      	pop	{r4, r5, r6, r7}
 80146e6:	f7ff bd05 	b.w	80140f4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80146ea:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 80146ec:	b310      	cbz	r0, 8014734 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80146ee:	6806      	ldr	r6, [r0, #0]
 80146f0:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80146f4:	68f5      	ldr	r5, [r6, #12]
 80146f6:	e7e1      	b.n	80146bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 80146f8:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 80146fc:	e7f6      	b.n	80146ec <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 80146fe:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8014702:	e7f3      	b.n	80146ec <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 8014704:	2e03      	cmp	r6, #3
 8014706:	d815      	bhi.n	8014734 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8014708:	e8df f006 	tbb	[pc, r6]
 801470c:	110e0702 	.word	0x110e0702
 8014710:	9504      	str	r5, [sp, #16]
 8014712:	4620      	mov	r0, r4
 8014714:	bcf0      	pop	{r4, r5, r6, r7}
 8014716:	f7ff be9f 	b.w	8014458 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801471a:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801471c:	b150      	cbz	r0, 8014734 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801471e:	6806      	ldr	r6, [r0, #0]
 8014720:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8014724:	6935      	ldr	r5, [r6, #16]
 8014726:	e7c9      	b.n	80146bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8014728:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801472c:	e7f6      	b.n	801471c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801472e:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8014732:	e7f3      	b.n	801471c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 8014734:	bcf0      	pop	{r4, r5, r6, r7}
 8014736:	4770      	bx	lr

08014738 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8014738:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801473c:	4604      	mov	r4, r0
 801473e:	b087      	sub	sp, #28
 8014740:	6810      	ldr	r0, [r2, #0]
 8014742:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 8014746:	f8df 9238 	ldr.w	r9, [pc, #568]	@ 8014980 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801474a:	460e      	mov	r6, r1
 801474c:	6851      	ldr	r1, [r2, #4]
 801474e:	ad02      	add	r5, sp, #8
 8014750:	c503      	stmia	r5!, {r0, r1}
 8014752:	6818      	ldr	r0, [r3, #0]
 8014754:	6859      	ldr	r1, [r3, #4]
 8014756:	ad04      	add	r5, sp, #16
 8014758:	4617      	mov	r7, r2
 801475a:	c503      	stmia	r5!, {r0, r1}
 801475c:	a802      	add	r0, sp, #8
 801475e:	f7f7 fcf1 	bl	800c144 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014762:	4639      	mov	r1, r7
 8014764:	a804      	add	r0, sp, #16
 8014766:	f7f7 fd15 	bl	800c194 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801476a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801476e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8014772:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8014776:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801477a:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801477e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8014782:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8014786:	440e      	add	r6, r1
 8014788:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801478c:	440a      	add	r2, r1
 801478e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8014792:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8014796:	4413      	add	r3, r2
 8014798:	f8ad 3012 	strh.w	r3, [sp, #18]
 801479c:	4b77      	ldr	r3, [pc, #476]	@ (801497c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801479e:	6818      	ldr	r0, [r3, #0]
 80147a0:	6803      	ldr	r3, [r0, #0]
 80147a2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80147a4:	4798      	blx	r3
 80147a6:	f8b9 b000 	ldrh.w	fp, [r9]
 80147aa:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80147ae:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80147b2:	fb0b 2303 	mla	r3, fp, r3, r2
 80147b6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80147ba:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80147be:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80147c2:	fb05 f50b 	mul.w	r5, r5, fp
 80147c6:	9300      	str	r3, [sp, #0]
 80147c8:	d069      	beq.n	801489e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 80147ca:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 80147ce:	4558      	cmp	r0, fp
 80147d0:	f080 80cc 	bcs.w	801496c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80147d4:	9b00      	ldr	r3, [sp, #0]
 80147d6:	18c3      	adds	r3, r0, r3
 80147d8:	9301      	str	r3, [sp, #4]
 80147da:	4631      	mov	r1, r6
 80147dc:	9b01      	ldr	r3, [sp, #4]
 80147de:	4298      	cmp	r0, r3
 80147e0:	d24f      	bcs.n	8014882 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 80147e2:	f811 2b01 	ldrb.w	r2, [r1], #1
 80147e6:	2a00      	cmp	r2, #0
 80147e8:	d048      	beq.n	801487c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80147ea:	fb0a f202 	mul.w	r2, sl, r2
 80147ee:	1c53      	adds	r3, r2, #1
 80147f0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80147f4:	121b      	asrs	r3, r3, #8
 80147f6:	d041      	beq.n	801487c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80147f8:	8802      	ldrh	r2, [r0, #0]
 80147fa:	f8b4 c000 	ldrh.w	ip, [r4]
 80147fe:	b29e      	uxth	r6, r3
 8014800:	1215      	asrs	r5, r2, #8
 8014802:	43db      	mvns	r3, r3
 8014804:	b2db      	uxtb	r3, r3
 8014806:	ea4f 272c 	mov.w	r7, ip, asr #8
 801480a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801480e:	fb15 f503 	smulbb	r5, r5, r3
 8014812:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8014816:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801481a:	00d2      	lsls	r2, r2, #3
 801481c:	fb07 5706 	mla	r7, r7, r6, r5
 8014820:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8014824:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8014828:	b2d2      	uxtb	r2, r2
 801482a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801482e:	b2bf      	uxth	r7, r7
 8014830:	fb1e fe03 	smulbb	lr, lr, r3
 8014834:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8014838:	fa5f fc8c 	uxtb.w	ip, ip
 801483c:	fb12 f203 	smulbb	r2, r2, r3
 8014840:	fb05 e506 	mla	r5, r5, r6, lr
 8014844:	fb0c 2c06 	mla	ip, ip, r6, r2
 8014848:	f107 0e01 	add.w	lr, r7, #1
 801484c:	fa1f fc8c 	uxth.w	ip, ip
 8014850:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8014854:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 8014858:	f10c 0701 	add.w	r7, ip, #1
 801485c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8014860:	b2ad      	uxth	r5, r5
 8014862:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8014866:	ea47 070e 	orr.w	r7, r7, lr
 801486a:	f105 0e01 	add.w	lr, r5, #1
 801486e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8014872:	096d      	lsrs	r5, r5, #5
 8014874:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8014878:	432f      	orrs	r7, r5
 801487a:	8007      	strh	r7, [r0, #0]
 801487c:	3002      	adds	r0, #2
 801487e:	3402      	adds	r4, #2
 8014880:	e7ac      	b.n	80147dc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8014882:	f8b9 3000 	ldrh.w	r3, [r9]
 8014886:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801488a:	eba3 0308 	sub.w	r3, r3, r8
 801488e:	eba6 0608 	sub.w	r6, r6, r8
 8014892:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8014896:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801489a:	440e      	add	r6, r1
 801489c:	e797      	b.n	80147ce <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801489e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80148a2:	42a8      	cmp	r0, r5
 80148a4:	d262      	bcs.n	801496c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80148a6:	9b00      	ldr	r3, [sp, #0]
 80148a8:	4631      	mov	r1, r6
 80148aa:	eb00 0b03 	add.w	fp, r0, r3
 80148ae:	4558      	cmp	r0, fp
 80148b0:	d24e      	bcs.n	8014950 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 80148b2:	f811 3b01 	ldrb.w	r3, [r1], #1
 80148b6:	b12b      	cbz	r3, 80148c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80148b8:	2bff      	cmp	r3, #255	@ 0xff
 80148ba:	f8b4 e000 	ldrh.w	lr, [r4]
 80148be:	d104      	bne.n	80148ca <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 80148c0:	f8a0 e000 	strh.w	lr, [r0]
 80148c4:	3002      	adds	r0, #2
 80148c6:	3402      	adds	r4, #2
 80148c8:	e7f1      	b.n	80148ae <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 80148ca:	8802      	ldrh	r2, [r0, #0]
 80148cc:	b29f      	uxth	r7, r3
 80148ce:	1216      	asrs	r6, r2, #8
 80148d0:	43db      	mvns	r3, r3
 80148d2:	b2db      	uxtb	r3, r3
 80148d4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80148d8:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80148dc:	fb16 f603 	smulbb	r6, r6, r3
 80148e0:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80148e4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80148e8:	00d2      	lsls	r2, r2, #3
 80148ea:	fb0c 6c07 	mla	ip, ip, r7, r6
 80148ee:	b2d2      	uxtb	r2, r2
 80148f0:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80148f4:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80148f8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80148fc:	fb1a fa03 	smulbb	sl, sl, r3
 8014900:	fa1f fc8c 	uxth.w	ip, ip
 8014904:	fb12 f303 	smulbb	r3, r2, r3
 8014908:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801490c:	fa5f fe8e 	uxtb.w	lr, lr
 8014910:	fb06 a607 	mla	r6, r6, r7, sl
 8014914:	f10c 0201 	add.w	r2, ip, #1
 8014918:	fb0e 3307 	mla	r3, lr, r7, r3
 801491c:	b2b6      	uxth	r6, r6
 801491e:	b29b      	uxth	r3, r3
 8014920:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8014924:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 8014928:	f106 0a01 	add.w	sl, r6, #1
 801492c:	f103 0c01 	add.w	ip, r3, #1
 8014930:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8014934:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8014938:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801493c:	0976      	lsrs	r6, r6, #5
 801493e:	ea4c 0c02 	orr.w	ip, ip, r2
 8014942:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8014946:	ea4c 0c06 	orr.w	ip, ip, r6
 801494a:	f8a0 c000 	strh.w	ip, [r0]
 801494e:	e7b9      	b.n	80148c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8014950:	f8b9 3000 	ldrh.w	r3, [r9]
 8014954:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8014958:	eba3 0308 	sub.w	r3, r3, r8
 801495c:	eba6 0608 	sub.w	r6, r6, r8
 8014960:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8014964:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014968:	440e      	add	r6, r1
 801496a:	e79a      	b.n	80148a2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801496c:	4b03      	ldr	r3, [pc, #12]	@ (801497c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801496e:	6818      	ldr	r0, [r3, #0]
 8014970:	6803      	ldr	r3, [r0, #0]
 8014972:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014974:	4798      	blx	r3
 8014976:	b007      	add	sp, #28
 8014978:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801497c:	200119d4 	.word	0x200119d4
 8014980:	200119ce 	.word	0x200119ce

08014984 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8014984:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014988:	b089      	sub	sp, #36	@ 0x24
 801498a:	4682      	mov	sl, r0
 801498c:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 8014990:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8014992:	460f      	mov	r7, r1
 8014994:	4691      	mov	r9, r2
 8014996:	4698      	mov	r8, r3
 8014998:	2e00      	cmp	r6, #0
 801499a:	d03d      	beq.n	8014a18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801499c:	4608      	mov	r0, r1
 801499e:	f7fa fe51 	bl	800f644 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80149a2:	4605      	mov	r5, r0
 80149a4:	4638      	mov	r0, r7
 80149a6:	f7fa fe81 	bl	800f6ac <_ZNK8touchgfx6Bitmap9getHeightEv>
 80149aa:	f8ad 000e 	strh.w	r0, [sp, #14]
 80149ae:	4638      	mov	r0, r7
 80149b0:	f8ad 9008 	strh.w	r9, [sp, #8]
 80149b4:	f8ad 500c 	strh.w	r5, [sp, #12]
 80149b8:	f8ad 800a 	strh.w	r8, [sp, #10]
 80149bc:	f7fa ff34 	bl	800f828 <_ZNK8touchgfx6Bitmap7getDataEv>
 80149c0:	4605      	mov	r5, r0
 80149c2:	4638      	mov	r0, r7
 80149c4:	f7fa ff60 	bl	800f888 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80149c8:	4681      	mov	r9, r0
 80149ca:	4638      	mov	r0, r7
 80149cc:	f7fa ffb0 	bl	800f930 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80149d0:	280b      	cmp	r0, #11
 80149d2:	d821      	bhi.n	8014a18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80149d4:	e8df f000 	tbb	[pc, r0]
 80149d8:	2006aebe 	.word	0x2006aebe
 80149dc:	20202020 	.word	0x20202020
 80149e0:	b5202020 	.word	0xb5202020
 80149e4:	4bb0      	ldr	r3, [pc, #704]	@ (8014ca8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 80149e6:	6818      	ldr	r0, [r3, #0]
 80149e8:	6803      	ldr	r3, [r0, #0]
 80149ea:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80149ec:	4798      	blx	r3
 80149ee:	2eff      	cmp	r6, #255	@ 0xff
 80149f0:	d101      	bne.n	80149f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 80149f2:	0683      	lsls	r3, r0, #26
 80149f4:	d506      	bpl.n	8014a04 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 80149f6:	4633      	mov	r3, r6
 80149f8:	4622      	mov	r2, r4
 80149fa:	a902      	add	r1, sp, #8
 80149fc:	4628      	mov	r0, r5
 80149fe:	f7ff f907 	bl	8013c10 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8014a02:	e009      	b.n	8014a18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8014a04:	4638      	mov	r0, r7
 8014a06:	f7fa fed7 	bl	800f7b8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8014a0a:	b940      	cbnz	r0, 8014a1e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 8014a0c:	4623      	mov	r3, r4
 8014a0e:	aa02      	add	r2, sp, #8
 8014a10:	4629      	mov	r1, r5
 8014a12:	4650      	mov	r0, sl
 8014a14:	f7ff f9e2 	bl	8013ddc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8014a18:	b009      	add	sp, #36	@ 0x24
 8014a1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014a1e:	f10d 0818 	add.w	r8, sp, #24
 8014a22:	4639      	mov	r1, r7
 8014a24:	4640      	mov	r0, r8
 8014a26:	f7fa fe75 	bl	800f714 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8014a2a:	e898 0003 	ldmia.w	r8, {r0, r1}
 8014a2e:	af04      	add	r7, sp, #16
 8014a30:	e887 0003 	stmia.w	r7, {r0, r1}
 8014a34:	4638      	mov	r0, r7
 8014a36:	4621      	mov	r1, r4
 8014a38:	f7f4 fb5c 	bl	80090f4 <_ZN8touchgfx4RectaNERKS0_>
 8014a3c:	4638      	mov	r0, r7
 8014a3e:	f7f4 fb9c 	bl	800917a <_ZNK8touchgfx4Rect7isEmptyEv>
 8014a42:	2800      	cmp	r0, #0
 8014a44:	d1d7      	bne.n	80149f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 8014a46:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8014a4a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8014a4e:	4293      	cmp	r3, r2
 8014a50:	dd12      	ble.n	8014a78 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 8014a52:	1a9b      	subs	r3, r3, r2
 8014a54:	f9b4 0000 	ldrsh.w	r0, [r4]
 8014a58:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8014a5c:	f8ad 0018 	strh.w	r0, [sp, #24]
 8014a60:	f8ad 201a 	strh.w	r2, [sp, #26]
 8014a64:	f8ad 101c 	strh.w	r1, [sp, #28]
 8014a68:	f8ad 301e 	strh.w	r3, [sp, #30]
 8014a6c:	4642      	mov	r2, r8
 8014a6e:	4633      	mov	r3, r6
 8014a70:	a902      	add	r1, sp, #8
 8014a72:	4628      	mov	r0, r5
 8014a74:	f7ff f8cc 	bl	8013c10 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8014a78:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8014a7c:	f9b4 2000 	ldrsh.w	r2, [r4]
 8014a80:	4293      	cmp	r3, r2
 8014a82:	dd12      	ble.n	8014aaa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 8014a84:	1a9b      	subs	r3, r3, r2
 8014a86:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8014a8a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8014a8e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8014a92:	f8ad 001a 	strh.w	r0, [sp, #26]
 8014a96:	f8ad 301c 	strh.w	r3, [sp, #28]
 8014a9a:	f8ad 101e 	strh.w	r1, [sp, #30]
 8014a9e:	23ff      	movs	r3, #255	@ 0xff
 8014aa0:	4642      	mov	r2, r8
 8014aa2:	a902      	add	r1, sp, #8
 8014aa4:	4628      	mov	r0, r5
 8014aa6:	f7ff f8b3 	bl	8013c10 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8014aaa:	463b      	mov	r3, r7
 8014aac:	aa02      	add	r2, sp, #8
 8014aae:	4629      	mov	r1, r5
 8014ab0:	4650      	mov	r0, sl
 8014ab2:	f7ff f993 	bl	8013ddc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8014ab6:	88a2      	ldrh	r2, [r4, #4]
 8014ab8:	8823      	ldrh	r3, [r4, #0]
 8014aba:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8014abe:	4413      	add	r3, r2
 8014ac0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8014ac4:	440a      	add	r2, r1
 8014ac6:	b29b      	uxth	r3, r3
 8014ac8:	b292      	uxth	r2, r2
 8014aca:	b211      	sxth	r1, r2
 8014acc:	b218      	sxth	r0, r3
 8014ace:	4288      	cmp	r0, r1
 8014ad0:	dd12      	ble.n	8014af8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 8014ad2:	1a9b      	subs	r3, r3, r2
 8014ad4:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8014ad8:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8014adc:	f8ad 1018 	strh.w	r1, [sp, #24]
 8014ae0:	f8ad 301c 	strh.w	r3, [sp, #28]
 8014ae4:	f8ad 001e 	strh.w	r0, [sp, #30]
 8014ae8:	23ff      	movs	r3, #255	@ 0xff
 8014aea:	4642      	mov	r2, r8
 8014aec:	a902      	add	r1, sp, #8
 8014aee:	4628      	mov	r0, r5
 8014af0:	f8ad 601a 	strh.w	r6, [sp, #26]
 8014af4:	f7ff f88c 	bl	8013c10 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8014af8:	88e2      	ldrh	r2, [r4, #6]
 8014afa:	8863      	ldrh	r3, [r4, #2]
 8014afc:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8014b00:	4413      	add	r3, r2
 8014b02:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8014b06:	440a      	add	r2, r1
 8014b08:	b29b      	uxth	r3, r3
 8014b0a:	b292      	uxth	r2, r2
 8014b0c:	b211      	sxth	r1, r2
 8014b0e:	b218      	sxth	r0, r3
 8014b10:	4288      	cmp	r0, r1
 8014b12:	dd81      	ble.n	8014a18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8014b14:	1a9b      	subs	r3, r3, r2
 8014b16:	f9b4 6000 	ldrsh.w	r6, [r4]
 8014b1a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8014b1e:	f8ad 301e 	strh.w	r3, [sp, #30]
 8014b22:	f8ad 6018 	strh.w	r6, [sp, #24]
 8014b26:	f8ad 101a 	strh.w	r1, [sp, #26]
 8014b2a:	f8ad 001c 	strh.w	r0, [sp, #28]
 8014b2e:	23ff      	movs	r3, #255	@ 0xff
 8014b30:	4642      	mov	r2, r8
 8014b32:	e762      	b.n	80149fa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 8014b34:	4633      	mov	r3, r6
 8014b36:	4622      	mov	r2, r4
 8014b38:	a902      	add	r1, sp, #8
 8014b3a:	4628      	mov	r0, r5
 8014b3c:	f7ff f9be 	bl	8013ebc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8014b40:	e76a      	b.n	8014a18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8014b42:	e9cd 4600 	strd	r4, r6, [sp]
 8014b46:	ab02      	add	r3, sp, #8
 8014b48:	464a      	mov	r2, r9
 8014b4a:	4629      	mov	r1, r5
 8014b4c:	4650      	mov	r0, sl
 8014b4e:	f7ff fd95 	bl	801467c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8014b52:	e761      	b.n	8014a18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8014b54:	4638      	mov	r0, r7
 8014b56:	f7fa fe2f 	bl	800f7b8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8014b5a:	b950      	cbnz	r0, 8014b72 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 8014b5c:	e9cd 6000 	strd	r6, r0, [sp]
 8014b60:	f8da 3000 	ldr.w	r3, [sl]
 8014b64:	aa02      	add	r2, sp, #8
 8014b66:	68de      	ldr	r6, [r3, #12]
 8014b68:	4629      	mov	r1, r5
 8014b6a:	4623      	mov	r3, r4
 8014b6c:	4650      	mov	r0, sl
 8014b6e:	47b0      	blx	r6
 8014b70:	e752      	b.n	8014a18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8014b72:	f10d 0818 	add.w	r8, sp, #24
 8014b76:	4639      	mov	r1, r7
 8014b78:	4640      	mov	r0, r8
 8014b7a:	f7fa fdcb 	bl	800f714 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8014b7e:	e898 0003 	ldmia.w	r8, {r0, r1}
 8014b82:	af04      	add	r7, sp, #16
 8014b84:	e887 0003 	stmia.w	r7, {r0, r1}
 8014b88:	4638      	mov	r0, r7
 8014b8a:	4621      	mov	r1, r4
 8014b8c:	f7f4 fab2 	bl	80090f4 <_ZN8touchgfx4RectaNERKS0_>
 8014b90:	4638      	mov	r0, r7
 8014b92:	f7f4 faf2 	bl	800917a <_ZNK8touchgfx4Rect7isEmptyEv>
 8014b96:	b138      	cbz	r0, 8014ba8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 8014b98:	9600      	str	r6, [sp, #0]
 8014b9a:	4623      	mov	r3, r4
 8014b9c:	aa02      	add	r2, sp, #8
 8014b9e:	4649      	mov	r1, r9
 8014ba0:	4628      	mov	r0, r5
 8014ba2:	f7ff fdc9 	bl	8014738 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8014ba6:	e737      	b.n	8014a18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8014ba8:	e9cd 6000 	strd	r6, r0, [sp]
 8014bac:	f8da 3000 	ldr.w	r3, [sl]
 8014bb0:	aa02      	add	r2, sp, #8
 8014bb2:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8014bb6:	4629      	mov	r1, r5
 8014bb8:	463b      	mov	r3, r7
 8014bba:	4650      	mov	r0, sl
 8014bbc:	47d8      	blx	fp
 8014bbe:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8014bc2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8014bc6:	4293      	cmp	r3, r2
 8014bc8:	dd13      	ble.n	8014bf2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 8014bca:	f9b4 0000 	ldrsh.w	r0, [r4]
 8014bce:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8014bd2:	f8ad 0018 	strh.w	r0, [sp, #24]
 8014bd6:	1a9b      	subs	r3, r3, r2
 8014bd8:	f8ad 201a 	strh.w	r2, [sp, #26]
 8014bdc:	f8ad 101c 	strh.w	r1, [sp, #28]
 8014be0:	f8ad 301e 	strh.w	r3, [sp, #30]
 8014be4:	9600      	str	r6, [sp, #0]
 8014be6:	4643      	mov	r3, r8
 8014be8:	aa02      	add	r2, sp, #8
 8014bea:	4649      	mov	r1, r9
 8014bec:	4628      	mov	r0, r5
 8014bee:	f7ff fda3 	bl	8014738 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8014bf2:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8014bf6:	f9b4 2000 	ldrsh.w	r2, [r4]
 8014bfa:	4293      	cmp	r3, r2
 8014bfc:	dd13      	ble.n	8014c26 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 8014bfe:	1a9b      	subs	r3, r3, r2
 8014c00:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8014c04:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8014c08:	f8ad 2018 	strh.w	r2, [sp, #24]
 8014c0c:	f8ad 001a 	strh.w	r0, [sp, #26]
 8014c10:	f8ad 301c 	strh.w	r3, [sp, #28]
 8014c14:	f8ad 101e 	strh.w	r1, [sp, #30]
 8014c18:	9600      	str	r6, [sp, #0]
 8014c1a:	4643      	mov	r3, r8
 8014c1c:	aa02      	add	r2, sp, #8
 8014c1e:	4649      	mov	r1, r9
 8014c20:	4628      	mov	r0, r5
 8014c22:	f7ff fd89 	bl	8014738 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8014c26:	88a2      	ldrh	r2, [r4, #4]
 8014c28:	8823      	ldrh	r3, [r4, #0]
 8014c2a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8014c2e:	4413      	add	r3, r2
 8014c30:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8014c34:	440a      	add	r2, r1
 8014c36:	b29b      	uxth	r3, r3
 8014c38:	b292      	uxth	r2, r2
 8014c3a:	b211      	sxth	r1, r2
 8014c3c:	b218      	sxth	r0, r3
 8014c3e:	4288      	cmp	r0, r1
 8014c40:	dd13      	ble.n	8014c6a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 8014c42:	1a9b      	subs	r3, r3, r2
 8014c44:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8014c48:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8014c4c:	f8ad 1018 	strh.w	r1, [sp, #24]
 8014c50:	f8ad 301c 	strh.w	r3, [sp, #28]
 8014c54:	f8ad 001e 	strh.w	r0, [sp, #30]
 8014c58:	9600      	str	r6, [sp, #0]
 8014c5a:	4643      	mov	r3, r8
 8014c5c:	aa02      	add	r2, sp, #8
 8014c5e:	4649      	mov	r1, r9
 8014c60:	4628      	mov	r0, r5
 8014c62:	f8ad 701a 	strh.w	r7, [sp, #26]
 8014c66:	f7ff fd67 	bl	8014738 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8014c6a:	88e2      	ldrh	r2, [r4, #6]
 8014c6c:	8863      	ldrh	r3, [r4, #2]
 8014c6e:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8014c72:	4413      	add	r3, r2
 8014c74:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8014c78:	440a      	add	r2, r1
 8014c7a:	b29b      	uxth	r3, r3
 8014c7c:	b292      	uxth	r2, r2
 8014c7e:	b211      	sxth	r1, r2
 8014c80:	b218      	sxth	r0, r3
 8014c82:	4288      	cmp	r0, r1
 8014c84:	f77f aec8 	ble.w	8014a18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8014c88:	f9b4 7000 	ldrsh.w	r7, [r4]
 8014c8c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8014c90:	f8ad 7018 	strh.w	r7, [sp, #24]
 8014c94:	1a9b      	subs	r3, r3, r2
 8014c96:	f8ad 301e 	strh.w	r3, [sp, #30]
 8014c9a:	f8ad 101a 	strh.w	r1, [sp, #26]
 8014c9e:	f8ad 001c 	strh.w	r0, [sp, #28]
 8014ca2:	9600      	str	r6, [sp, #0]
 8014ca4:	4643      	mov	r3, r8
 8014ca6:	e779      	b.n	8014b9c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 8014ca8:	200119d4 	.word	0x200119d4

08014cac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8014cac:	b180      	cbz	r0, 8014cd0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8014cae:	2903      	cmp	r1, #3
 8014cb0:	d81c      	bhi.n	8014cec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8014cb2:	e8df f001 	tbb	[pc, r1]
 8014cb6:	1d02      	.short	0x1d02
 8014cb8:	1f08      	.short	0x1f08
 8014cba:	4b10      	ldr	r3, [pc, #64]	@ (8014cfc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8014cbc:	8818      	ldrh	r0, [r3, #0]
 8014cbe:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8014cc2:	4240      	negs	r0, r0
 8014cc4:	4770      	bx	lr
 8014cc6:	4b0d      	ldr	r3, [pc, #52]	@ (8014cfc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8014cc8:	8818      	ldrh	r0, [r3, #0]
 8014cca:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8014cce:	4770      	bx	lr
 8014cd0:	2903      	cmp	r1, #3
 8014cd2:	d80b      	bhi.n	8014cec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8014cd4:	a301      	add	r3, pc, #4	@ (adr r3, 8014cdc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 8014cd6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8014cda:	bf00      	nop
 8014cdc:	08014cf1 	.word	0x08014cf1
 8014ce0:	08014cc7 	.word	0x08014cc7
 8014ce4:	08014cf5 	.word	0x08014cf5
 8014ce8:	08014cbb 	.word	0x08014cbb
 8014cec:	2000      	movs	r0, #0
 8014cee:	4770      	bx	lr
 8014cf0:	2001      	movs	r0, #1
 8014cf2:	4770      	bx	lr
 8014cf4:	f04f 30ff 	mov.w	r0, #4294967295
 8014cf8:	4770      	bx	lr
 8014cfa:	bf00      	nop
 8014cfc:	200119ce 	.word	0x200119ce

08014d00 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8014d00:	b180      	cbz	r0, 8014d24 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8014d02:	2903      	cmp	r1, #3
 8014d04:	d81c      	bhi.n	8014d40 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8014d06:	e8df f001 	tbb	[pc, r1]
 8014d0a:	021d      	.short	0x021d
 8014d0c:	071f      	.short	0x071f
 8014d0e:	4b10      	ldr	r3, [pc, #64]	@ (8014d50 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8014d10:	8818      	ldrh	r0, [r3, #0]
 8014d12:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8014d16:	4770      	bx	lr
 8014d18:	4b0d      	ldr	r3, [pc, #52]	@ (8014d50 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8014d1a:	8818      	ldrh	r0, [r3, #0]
 8014d1c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8014d20:	4240      	negs	r0, r0
 8014d22:	4770      	bx	lr
 8014d24:	2903      	cmp	r1, #3
 8014d26:	d80b      	bhi.n	8014d40 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8014d28:	a301      	add	r3, pc, #4	@ (adr r3, 8014d30 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8014d2a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8014d2e:	bf00      	nop
 8014d30:	08014d0f 	.word	0x08014d0f
 8014d34:	08014d49 	.word	0x08014d49
 8014d38:	08014d19 	.word	0x08014d19
 8014d3c:	08014d45 	.word	0x08014d45
 8014d40:	2000      	movs	r0, #0
 8014d42:	4770      	bx	lr
 8014d44:	2001      	movs	r0, #1
 8014d46:	4770      	bx	lr
 8014d48:	f04f 30ff 	mov.w	r0, #4294967295
 8014d4c:	4770      	bx	lr
 8014d4e:	bf00      	nop
 8014d50:	200119ce 	.word	0x200119ce

08014d54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8014d54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014d58:	b099      	sub	sp, #100	@ 0x64
 8014d5a:	910b      	str	r1, [sp, #44]	@ 0x2c
 8014d5c:	a914      	add	r1, sp, #80	@ 0x50
 8014d5e:	e881 000c 	stmia.w	r1, {r2, r3}
 8014d62:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 8014d66:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 8014d6a:	f891 900d 	ldrb.w	r9, [r1, #13]
 8014d6e:	9309      	str	r3, [sp, #36]	@ 0x24
 8014d70:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8014d74:	9310      	str	r3, [sp, #64]	@ 0x40
 8014d76:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8014d7a:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 8014d7e:	930c      	str	r3, [sp, #48]	@ 0x30
 8014d80:	f407 7380 	and.w	r3, r7, #256	@ 0x100
 8014d84:	798f      	ldrb	r7, [r1, #6]
 8014d86:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 8014d8a:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 8014d8e:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 8014d92:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
 8014d96:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 8014d9a:	431f      	orrs	r7, r3
 8014d9c:	f000 8195 	beq.w	80150ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8014da0:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8014da4:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 8014da8:	f891 9007 	ldrb.w	r9, [r1, #7]
 8014dac:	ea59 0903 	orrs.w	r9, r9, r3
 8014db0:	f000 818b 	beq.w	80150ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8014db4:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8014db8:	b29b      	uxth	r3, r3
 8014dba:	2d00      	cmp	r5, #0
 8014dbc:	f000 812e 	beq.w	801501c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8014dc0:	1aed      	subs	r5, r5, r3
 8014dc2:	b2ad      	uxth	r5, r5
 8014dc4:	042b      	lsls	r3, r5, #16
 8014dc6:	d502      	bpl.n	8014dce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8014dc8:	1b64      	subs	r4, r4, r5
 8014dca:	b224      	sxth	r4, r4
 8014dcc:	2500      	movs	r5, #0
 8014dce:	f9b2 1000 	ldrsh.w	r1, [r2]
 8014dd2:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 8014dd6:	428c      	cmp	r4, r1
 8014dd8:	b28b      	uxth	r3, r1
 8014dda:	bfbf      	itttt	lt
 8014ddc:	18ed      	addlt	r5, r5, r3
 8014dde:	1b2c      	sublt	r4, r5, r4
 8014de0:	b2a5      	uxthlt	r5, r4
 8014de2:	460c      	movlt	r4, r1
 8014de4:	8891      	ldrh	r1, [r2, #4]
 8014de6:	440b      	add	r3, r1
 8014de8:	b21b      	sxth	r3, r3
 8014dea:	930f      	str	r3, [sp, #60]	@ 0x3c
 8014dec:	88d3      	ldrh	r3, [r2, #6]
 8014dee:	8852      	ldrh	r2, [r2, #2]
 8014df0:	4413      	add	r3, r2
 8014df2:	b21b      	sxth	r3, r3
 8014df4:	930d      	str	r3, [sp, #52]	@ 0x34
 8014df6:	4bbe      	ldr	r3, [pc, #760]	@ (80150f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8014df8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8014dfa:	f893 b000 	ldrb.w	fp, [r3]
 8014dfe:	f10b 3cff 	add.w	ip, fp, #4294967295
 8014e02:	f1dc 0300 	rsbs	r3, ip, #0
 8014e06:	eb43 030c 	adc.w	r3, r3, ip
 8014e0a:	930e      	str	r3, [sp, #56]	@ 0x38
 8014e0c:	4621      	mov	r1, r4
 8014e0e:	4653      	mov	r3, sl
 8014e10:	a814      	add	r0, sp, #80	@ 0x50
 8014e12:	f7f7 f80c 	bl	800be2e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8014e16:	4621      	mov	r1, r4
 8014e18:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 8014e1c:	4653      	mov	r3, sl
 8014e1e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8014e20:	a814      	add	r0, sp, #80	@ 0x50
 8014e22:	f7f7 f821 	bl	800be68 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8014e26:	a918      	add	r1, sp, #96	@ 0x60
 8014e28:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8014e2c:	a817      	add	r0, sp, #92	@ 0x5c
 8014e2e:	f7f7 f947 	bl	800c0c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8014e32:	f1ba 0f00 	cmp.w	sl, #0
 8014e36:	f040 80f4 	bne.w	8015022 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8014e3a:	f1bb 0f01 	cmp.w	fp, #1
 8014e3e:	f040 80f8 	bne.w	8015032 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8014e42:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014e44:	2b00      	cmp	r3, #0
 8014e46:	f040 8145 	bne.w	80150d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 8014e4a:	b2ba      	uxth	r2, r7
 8014e4c:	b905      	cbnz	r5, 8014e50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8014e4e:	b16e      	cbz	r6, 8014e6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8014e50:	fb06 5302 	mla	r3, r6, r2, r5
 8014e54:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 8014e56:	fb08 f303 	mul.w	r3, r8, r3
 8014e5a:	4631      	mov	r1, r6
 8014e5c:	f003 0607 	and.w	r6, r3, #7
 8014e60:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8014e64:	9328      	str	r3, [sp, #160]	@ 0xa0
 8014e66:	eba9 0301 	sub.w	r3, r9, r1
 8014e6a:	930a      	str	r3, [sp, #40]	@ 0x28
 8014e6c:	4651      	mov	r1, sl
 8014e6e:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8014e70:	f7ff ff1c 	bl	8014cac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8014e74:	4681      	mov	r9, r0
 8014e76:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8014e78:	f7ff ff42 	bl	8014d00 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8014e7c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014e7e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8014e80:	eba3 0a01 	sub.w	sl, r3, r1
 8014e84:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8014e86:	459a      	cmp	sl, r3
 8014e88:	bfa8      	it	ge
 8014e8a:	469a      	movge	sl, r3
 8014e8c:	f1ba 0f00 	cmp.w	sl, #0
 8014e90:	4683      	mov	fp, r0
 8014e92:	f340 811a 	ble.w	80150ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8014e96:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8014e98:	1b64      	subs	r4, r4, r5
 8014e9a:	1b1c      	subs	r4, r3, r4
 8014e9c:	42bc      	cmp	r4, r7
 8014e9e:	bfd4      	ite	le
 8014ea0:	ebc5 0504 	rsble	r5, r5, r4
 8014ea4:	ebc5 0507 	rsbgt	r5, r5, r7
 8014ea8:	2d00      	cmp	r5, #0
 8014eaa:	f340 810e 	ble.w	80150ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8014eae:	1b52      	subs	r2, r2, r5
 8014eb0:	fb08 f302 	mul.w	r3, r8, r2
 8014eb4:	930f      	str	r3, [sp, #60]	@ 0x3c
 8014eb6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8014eb8:	2b00      	cmp	r3, #0
 8014eba:	f040 8116 	bne.w	80150ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8014ebe:	4b8d      	ldr	r3, [pc, #564]	@ (80150f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8014ec0:	6818      	ldr	r0, [r3, #0]
 8014ec2:	6803      	ldr	r3, [r0, #0]
 8014ec4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014ec6:	4798      	blx	r3
 8014ec8:	2301      	movs	r3, #1
 8014eca:	fa03 f308 	lsl.w	r3, r3, r8
 8014ece:	4a8a      	ldr	r2, [pc, #552]	@ (80150f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8014ed0:	3b01      	subs	r3, #1
 8014ed2:	b2db      	uxtb	r3, r3
 8014ed4:	8811      	ldrh	r1, [r2, #0]
 8014ed6:	930e      	str	r3, [sp, #56]	@ 0x38
 8014ed8:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
 8014edc:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
 8014ee0:	fb01 2303 	mla	r3, r1, r3, r2
 8014ee4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8014ee8:	930a      	str	r3, [sp, #40]	@ 0x28
 8014eea:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8014eec:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8014ef0:	9313      	str	r3, [sp, #76]	@ 0x4c
 8014ef2:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8014ef4:	0a19      	lsrs	r1, r3, #8
 8014ef6:	b2cb      	uxtb	r3, r1
 8014ef8:	9312      	str	r3, [sp, #72]	@ 0x48
 8014efa:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8014efc:	b2db      	uxtb	r3, r3
 8014efe:	9311      	str	r3, [sp, #68]	@ 0x44
 8014f00:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8014f02:	095a      	lsrs	r2, r3, #5
 8014f04:	4b7d      	ldr	r3, [pc, #500]	@ (80150fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8014f06:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8014f0a:	400b      	ands	r3, r1
 8014f0c:	4313      	orrs	r3, r2
 8014f0e:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8014f10:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8014f14:	4313      	orrs	r3, r2
 8014f16:	b29b      	uxth	r3, r3
 8014f18:	9310      	str	r3, [sp, #64]	@ 0x40
 8014f1a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8014f1c:	781a      	ldrb	r2, [r3, #0]
 8014f1e:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8014f22:	4132      	asrs	r2, r6
 8014f24:	fb05 b919 	mls	r9, r5, r9, fp
 8014f28:	fb03 fb05 	mul.w	fp, r3, r5
 8014f2c:	b2d2      	uxtb	r2, r2
 8014f2e:	930d      	str	r3, [sp, #52]	@ 0x34
 8014f30:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8014f34:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8014f38:	f0c0 80f5 	bcc.w	8015126 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8014f3c:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
 8014f40:	46ae      	mov	lr, r5
 8014f42:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8014f46:	f0c0 80dd 	bcc.w	8015104 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8014f4a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014f4c:	4013      	ands	r3, r2
 8014f4e:	d055      	beq.n	8014ffc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8014f50:	20ff      	movs	r0, #255	@ 0xff
 8014f52:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8014f54:	fb90 f1f1 	sdiv	r1, r0, r1
 8014f58:	434b      	muls	r3, r1
 8014f5a:	2bfe      	cmp	r3, #254	@ 0xfe
 8014f5c:	dd03      	ble.n	8014f66 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8014f5e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8014f60:	4281      	cmp	r1, r0
 8014f62:	f000 80cd 	beq.w	8015100 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8014f66:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8014f68:	f8bc 4000 	ldrh.w	r4, [ip]
 8014f6c:	fb11 f303 	smulbb	r3, r1, r3
 8014f70:	b29b      	uxth	r3, r3
 8014f72:	1c59      	adds	r1, r3, #1
 8014f74:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8014f78:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8014f7c:	b29f      	uxth	r7, r3
 8014f7e:	43db      	mvns	r3, r3
 8014f80:	b2db      	uxtb	r3, r3
 8014f82:	9309      	str	r3, [sp, #36]	@ 0x24
 8014f84:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8014f86:	1220      	asrs	r0, r4, #8
 8014f88:	fb13 f907 	smulbb	r9, r3, r7
 8014f8c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8014f90:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8014f92:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8014f96:	fb00 9003 	mla	r0, r0, r3, r9
 8014f9a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8014f9c:	10e1      	asrs	r1, r4, #3
 8014f9e:	fb13 f907 	smulbb	r9, r3, r7
 8014fa2:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8014fa6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8014fa8:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8014fac:	fb01 9103 	mla	r1, r1, r3, r9
 8014fb0:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8014fb2:	00e4      	lsls	r4, r4, #3
 8014fb4:	fb13 f707 	smulbb	r7, r3, r7
 8014fb8:	b2e4      	uxtb	r4, r4
 8014fba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8014fbc:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8014fc0:	fb04 7403 	mla	r4, r4, r3, r7
 8014fc4:	b280      	uxth	r0, r0
 8014fc6:	b2a4      	uxth	r4, r4
 8014fc8:	1c43      	adds	r3, r0, #1
 8014fca:	f104 0901 	add.w	r9, r4, #1
 8014fce:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8014fd2:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8014fd6:	b289      	uxth	r1, r1
 8014fd8:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8014fdc:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8014fe0:	ea49 0000 	orr.w	r0, r9, r0
 8014fe4:	f101 0901 	add.w	r9, r1, #1
 8014fe8:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8014fec:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8014ff0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8014ff4:	ea40 0009 	orr.w	r0, r0, r9
 8014ff8:	f8ac 0000 	strh.w	r0, [ip]
 8014ffc:	4446      	add	r6, r8
 8014ffe:	b2b6      	uxth	r6, r6
 8015000:	2e07      	cmp	r6, #7
 8015002:	bf81      	itttt	hi
 8015004:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
 8015006:	785a      	ldrbhi	r2, [r3, #1]
 8015008:	3301      	addhi	r3, #1
 801500a:	9328      	strhi	r3, [sp, #160]	@ 0xa0
 801500c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801500e:	bf9a      	itte	ls
 8015010:	fa42 f208 	asrls.w	r2, r2, r8
 8015014:	b2d2      	uxtbls	r2, r2
 8015016:	2600      	movhi	r6, #0
 8015018:	449c      	add	ip, r3
 801501a:	e792      	b.n	8014f42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801501c:	441c      	add	r4, r3
 801501e:	b224      	sxth	r4, r4
 8015020:	e6d5      	b.n	8014dce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8015022:	f1ba 0f01 	cmp.w	sl, #1
 8015026:	f47f af0c 	bne.w	8014e42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801502a:	f1bb 0f01 	cmp.w	fp, #1
 801502e:	f47f af08 	bne.w	8014e42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8015032:	f8df b0c0 	ldr.w	fp, [pc, #192]	@ 80150f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8015036:	f8db 0000 	ldr.w	r0, [fp]
 801503a:	6803      	ldr	r3, [r0, #0]
 801503c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801503e:	4798      	blx	r3
 8015040:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 8015044:	465a      	mov	r2, fp
 8015046:	d006      	beq.n	8015056 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8015048:	f1b8 0f04 	cmp.w	r8, #4
 801504c:	d140      	bne.n	80150d0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801504e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015050:	3300      	adds	r3, #0
 8015052:	bf18      	it	ne
 8015054:	2301      	movne	r3, #1
 8015056:	0580      	lsls	r0, r0, #22
 8015058:	d56e      	bpl.n	8015138 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801505a:	f1b8 0f08 	cmp.w	r8, #8
 801505e:	d16b      	bne.n	8015138 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8015060:	2b00      	cmp	r3, #0
 8015062:	bf0c      	ite	eq
 8015064:	f44f 7100 	moveq.w	r1, #512	@ 0x200
 8015068:	f44f 7180 	movne.w	r1, #256	@ 0x100
 801506c:	2d00      	cmp	r5, #0
 801506e:	f47f aee8 	bne.w	8014e42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8015072:	2e00      	cmp	r6, #0
 8015074:	f47f aee5 	bne.w	8014e42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8015078:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801507a:	19e3      	adds	r3, r4, r7
 801507c:	4283      	cmp	r3, r0
 801507e:	f73f aee0 	bgt.w	8014e42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8015082:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015084:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8015086:	444b      	add	r3, r9
 8015088:	4283      	cmp	r3, r0
 801508a:	f73f aeda 	bgt.w	8014e42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801508e:	6810      	ldr	r0, [r2, #0]
 8015090:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
 8015094:	6804      	ldr	r4, [r0, #0]
 8015096:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801509a:	b2bf      	uxth	r7, r7
 801509c:	f1b8 0f08 	cmp.w	r8, #8
 80150a0:	f04f 0500 	mov.w	r5, #0
 80150a4:	bf18      	it	ne
 80150a6:	3701      	addne	r7, #1
 80150a8:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80150ac:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80150ae:	9104      	str	r1, [sp, #16]
 80150b0:	bf18      	it	ne
 80150b2:	f027 0701 	bicne.w	r7, r7, #1
 80150b6:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 80150b8:	bf18      	it	ne
 80150ba:	b2bf      	uxthne	r7, r7
 80150bc:	e9cd 7102 	strd	r7, r1, [sp, #8]
 80150c0:	e9cd 7900 	strd	r7, r9, [sp]
 80150c4:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 80150c6:	6d64      	ldr	r4, [r4, #84]	@ 0x54
 80150c8:	47a0      	blx	r4
 80150ca:	b019      	add	sp, #100	@ 0x64
 80150cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80150d0:	2300      	movs	r3, #0
 80150d2:	e7c0      	b.n	8015056 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 80150d4:	2208      	movs	r2, #8
 80150d6:	fb92 f3f8 	sdiv	r3, r2, r8
 80150da:	1e5a      	subs	r2, r3, #1
 80150dc:	443a      	add	r2, r7
 80150de:	fb92 f2f3 	sdiv	r2, r2, r3
 80150e2:	fb12 f203 	smulbb	r2, r2, r3
 80150e6:	b292      	uxth	r2, r2
 80150e8:	e6b0      	b.n	8014e4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 80150ea:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80150ec:	e6ec      	b.n	8014ec8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 80150ee:	bf00      	nop
 80150f0:	200119cc 	.word	0x200119cc
 80150f4:	200119d4 	.word	0x200119d4
 80150f8:	200119ce 	.word	0x200119ce
 80150fc:	00fff800 	.word	0x00fff800
 8015100:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8015102:	e779      	b.n	8014ff8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8015104:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8015106:	b153      	cbz	r3, 801511e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8015108:	441e      	add	r6, r3
 801510a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801510c:	b2b6      	uxth	r6, r6
 801510e:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8015112:	f006 0607 	and.w	r6, r6, #7
 8015116:	781a      	ldrb	r2, [r3, #0]
 8015118:	9328      	str	r3, [sp, #160]	@ 0xa0
 801511a:	4132      	asrs	r2, r6
 801511c:	b2d2      	uxtb	r2, r2
 801511e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8015120:	445b      	add	r3, fp
 8015122:	930a      	str	r3, [sp, #40]	@ 0x28
 8015124:	e706      	b.n	8014f34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8015126:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8015128:	2b00      	cmp	r3, #0
 801512a:	d1ce      	bne.n	80150ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801512c:	4b05      	ldr	r3, [pc, #20]	@ (8015144 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801512e:	6818      	ldr	r0, [r3, #0]
 8015130:	6803      	ldr	r3, [r0, #0]
 8015132:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015134:	4798      	blx	r3
 8015136:	e7c8      	b.n	80150ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8015138:	2b00      	cmp	r3, #0
 801513a:	f43f ae82 	beq.w	8014e42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801513e:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8015142:	e793      	b.n	801506c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8015144:	200119d4 	.word	0x200119d4

08015148 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8015148:	b538      	push	{r3, r4, r5, lr}
 801514a:	4c15      	ldr	r4, [pc, #84]	@ (80151a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801514c:	7823      	ldrb	r3, [r4, #0]
 801514e:	f3bf 8f5b 	dmb	ish
 8015152:	07da      	lsls	r2, r3, #31
 8015154:	4605      	mov	r5, r0
 8015156:	d40b      	bmi.n	8015170 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8015158:	4620      	mov	r0, r4
 801515a:	f007 fef5 	bl	801cf48 <__cxa_guard_acquire>
 801515e:	b138      	cbz	r0, 8015170 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8015160:	4620      	mov	r0, r4
 8015162:	f007 fefd 	bl	801cf60 <__cxa_guard_release>
 8015166:	4a0f      	ldr	r2, [pc, #60]	@ (80151a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8015168:	490f      	ldr	r1, [pc, #60]	@ (80151a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801516a:	4810      	ldr	r0, [pc, #64]	@ (80151ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801516c:	f007 fee5 	bl	801cf3a <__aeabi_atexit>
 8015170:	4c0f      	ldr	r4, [pc, #60]	@ (80151b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8015172:	7823      	ldrb	r3, [r4, #0]
 8015174:	f3bf 8f5b 	dmb	ish
 8015178:	07db      	lsls	r3, r3, #31
 801517a:	d40b      	bmi.n	8015194 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801517c:	4620      	mov	r0, r4
 801517e:	f007 fee3 	bl	801cf48 <__cxa_guard_acquire>
 8015182:	b138      	cbz	r0, 8015194 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8015184:	4620      	mov	r0, r4
 8015186:	f007 feeb 	bl	801cf60 <__cxa_guard_release>
 801518a:	4a06      	ldr	r2, [pc, #24]	@ (80151a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801518c:	4909      	ldr	r1, [pc, #36]	@ (80151b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801518e:	480a      	ldr	r0, [pc, #40]	@ (80151b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8015190:	f007 fed3 	bl	801cf3a <__aeabi_atexit>
 8015194:	4b05      	ldr	r3, [pc, #20]	@ (80151ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8015196:	616b      	str	r3, [r5, #20]
 8015198:	4b07      	ldr	r3, [pc, #28]	@ (80151b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801519a:	61ab      	str	r3, [r5, #24]
 801519c:	bd38      	pop	{r3, r4, r5, pc}
 801519e:	bf00      	nop
 80151a0:	20011aac 	.word	0x20011aac
 80151a4:	20000000 	.word	0x20000000
 80151a8:	08011f47 	.word	0x08011f47
 80151ac:	200000d0 	.word	0x200000d0
 80151b0:	20011ab0 	.word	0x20011ab0
 80151b4:	08011f45 	.word	0x08011f45
 80151b8:	200000d4 	.word	0x200000d4

080151bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 80151bc:	b538      	push	{r3, r4, r5, lr}
 80151be:	4c15      	ldr	r4, [pc, #84]	@ (8015214 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 80151c0:	7823      	ldrb	r3, [r4, #0]
 80151c2:	f3bf 8f5b 	dmb	ish
 80151c6:	07da      	lsls	r2, r3, #31
 80151c8:	4605      	mov	r5, r0
 80151ca:	d40b      	bmi.n	80151e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80151cc:	4620      	mov	r0, r4
 80151ce:	f007 febb 	bl	801cf48 <__cxa_guard_acquire>
 80151d2:	b138      	cbz	r0, 80151e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80151d4:	4620      	mov	r0, r4
 80151d6:	f007 fec3 	bl	801cf60 <__cxa_guard_release>
 80151da:	4a0f      	ldr	r2, [pc, #60]	@ (8015218 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80151dc:	490f      	ldr	r1, [pc, #60]	@ (801521c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 80151de:	4810      	ldr	r0, [pc, #64]	@ (8015220 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80151e0:	f007 feab 	bl	801cf3a <__aeabi_atexit>
 80151e4:	4c0f      	ldr	r4, [pc, #60]	@ (8015224 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 80151e6:	7823      	ldrb	r3, [r4, #0]
 80151e8:	f3bf 8f5b 	dmb	ish
 80151ec:	07db      	lsls	r3, r3, #31
 80151ee:	d40b      	bmi.n	8015208 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80151f0:	4620      	mov	r0, r4
 80151f2:	f007 fea9 	bl	801cf48 <__cxa_guard_acquire>
 80151f6:	b138      	cbz	r0, 8015208 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80151f8:	4620      	mov	r0, r4
 80151fa:	f007 feb1 	bl	801cf60 <__cxa_guard_release>
 80151fe:	4a06      	ldr	r2, [pc, #24]	@ (8015218 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8015200:	4909      	ldr	r1, [pc, #36]	@ (8015228 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8015202:	480a      	ldr	r0, [pc, #40]	@ (801522c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8015204:	f007 fe99 	bl	801cf3a <__aeabi_atexit>
 8015208:	4b05      	ldr	r3, [pc, #20]	@ (8015220 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801520a:	60eb      	str	r3, [r5, #12]
 801520c:	4b07      	ldr	r3, [pc, #28]	@ (801522c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801520e:	612b      	str	r3, [r5, #16]
 8015210:	bd38      	pop	{r3, r4, r5, pc}
 8015212:	bf00      	nop
 8015214:	20011a84 	.word	0x20011a84
 8015218:	20000000 	.word	0x20000000
 801521c:	08011f4b 	.word	0x08011f4b
 8015220:	200000a8 	.word	0x200000a8
 8015224:	20011a88 	.word	0x20011a88
 8015228:	08011f49 	.word	0x08011f49
 801522c:	200000ac 	.word	0x200000ac

08015230 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8015230:	b510      	push	{r4, lr}
 8015232:	4604      	mov	r4, r0
 8015234:	f7ff ff88 	bl	8015148 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8015238:	4620      	mov	r0, r4
 801523a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801523e:	f7ff bfbd 	b.w	80151bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08015244 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8015244:	b538      	push	{r3, r4, r5, lr}
 8015246:	4c15      	ldr	r4, [pc, #84]	@ (801529c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8015248:	7823      	ldrb	r3, [r4, #0]
 801524a:	f3bf 8f5b 	dmb	ish
 801524e:	07da      	lsls	r2, r3, #31
 8015250:	4605      	mov	r5, r0
 8015252:	d40b      	bmi.n	801526c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8015254:	4620      	mov	r0, r4
 8015256:	f007 fe77 	bl	801cf48 <__cxa_guard_acquire>
 801525a:	b138      	cbz	r0, 801526c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801525c:	4620      	mov	r0, r4
 801525e:	f007 fe7f 	bl	801cf60 <__cxa_guard_release>
 8015262:	4a0f      	ldr	r2, [pc, #60]	@ (80152a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8015264:	490f      	ldr	r1, [pc, #60]	@ (80152a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8015266:	4810      	ldr	r0, [pc, #64]	@ (80152a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8015268:	f007 fe67 	bl	801cf3a <__aeabi_atexit>
 801526c:	4c0f      	ldr	r4, [pc, #60]	@ (80152ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801526e:	7823      	ldrb	r3, [r4, #0]
 8015270:	f3bf 8f5b 	dmb	ish
 8015274:	07db      	lsls	r3, r3, #31
 8015276:	d40b      	bmi.n	8015290 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8015278:	4620      	mov	r0, r4
 801527a:	f007 fe65 	bl	801cf48 <__cxa_guard_acquire>
 801527e:	b138      	cbz	r0, 8015290 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8015280:	4620      	mov	r0, r4
 8015282:	f007 fe6d 	bl	801cf60 <__cxa_guard_release>
 8015286:	4a06      	ldr	r2, [pc, #24]	@ (80152a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8015288:	4909      	ldr	r1, [pc, #36]	@ (80152b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801528a:	480a      	ldr	r0, [pc, #40]	@ (80152b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801528c:	f007 fe55 	bl	801cf3a <__aeabi_atexit>
 8015290:	4b05      	ldr	r3, [pc, #20]	@ (80152a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8015292:	626b      	str	r3, [r5, #36]	@ 0x24
 8015294:	4b07      	ldr	r3, [pc, #28]	@ (80152b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8015296:	62ab      	str	r3, [r5, #40]	@ 0x28
 8015298:	bd38      	pop	{r3, r4, r5, pc}
 801529a:	bf00      	nop
 801529c:	20011ab4 	.word	0x20011ab4
 80152a0:	20000000 	.word	0x20000000
 80152a4:	08011f3f 	.word	0x08011f3f
 80152a8:	200000d8 	.word	0x200000d8
 80152ac:	20011ab8 	.word	0x20011ab8
 80152b0:	08011f3d 	.word	0x08011f3d
 80152b4:	200000dc 	.word	0x200000dc

080152b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 80152b8:	b538      	push	{r3, r4, r5, lr}
 80152ba:	4c15      	ldr	r4, [pc, #84]	@ (8015310 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 80152bc:	7823      	ldrb	r3, [r4, #0]
 80152be:	f3bf 8f5b 	dmb	ish
 80152c2:	07da      	lsls	r2, r3, #31
 80152c4:	4605      	mov	r5, r0
 80152c6:	d40b      	bmi.n	80152e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80152c8:	4620      	mov	r0, r4
 80152ca:	f007 fe3d 	bl	801cf48 <__cxa_guard_acquire>
 80152ce:	b138      	cbz	r0, 80152e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80152d0:	4620      	mov	r0, r4
 80152d2:	f007 fe45 	bl	801cf60 <__cxa_guard_release>
 80152d6:	4a0f      	ldr	r2, [pc, #60]	@ (8015314 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80152d8:	490f      	ldr	r1, [pc, #60]	@ (8015318 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 80152da:	4810      	ldr	r0, [pc, #64]	@ (801531c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80152dc:	f007 fe2d 	bl	801cf3a <__aeabi_atexit>
 80152e0:	4c0f      	ldr	r4, [pc, #60]	@ (8015320 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 80152e2:	7823      	ldrb	r3, [r4, #0]
 80152e4:	f3bf 8f5b 	dmb	ish
 80152e8:	07db      	lsls	r3, r3, #31
 80152ea:	d40b      	bmi.n	8015304 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80152ec:	4620      	mov	r0, r4
 80152ee:	f007 fe2b 	bl	801cf48 <__cxa_guard_acquire>
 80152f2:	b138      	cbz	r0, 8015304 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80152f4:	4620      	mov	r0, r4
 80152f6:	f007 fe33 	bl	801cf60 <__cxa_guard_release>
 80152fa:	4a06      	ldr	r2, [pc, #24]	@ (8015314 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80152fc:	4909      	ldr	r1, [pc, #36]	@ (8015324 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 80152fe:	480a      	ldr	r0, [pc, #40]	@ (8015328 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8015300:	f007 fe1b 	bl	801cf3a <__aeabi_atexit>
 8015304:	4b05      	ldr	r3, [pc, #20]	@ (801531c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8015306:	61eb      	str	r3, [r5, #28]
 8015308:	4b07      	ldr	r3, [pc, #28]	@ (8015328 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801530a:	622b      	str	r3, [r5, #32]
 801530c:	bd38      	pop	{r3, r4, r5, pc}
 801530e:	bf00      	nop
 8015310:	20011a8c 	.word	0x20011a8c
 8015314:	20000000 	.word	0x20000000
 8015318:	08011f43 	.word	0x08011f43
 801531c:	200000b0 	.word	0x200000b0
 8015320:	20011a90 	.word	0x20011a90
 8015324:	08011f41 	.word	0x08011f41
 8015328:	200000b4 	.word	0x200000b4

0801532c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801532c:	b510      	push	{r4, lr}
 801532e:	4604      	mov	r4, r0
 8015330:	f7ff ff88 	bl	8015244 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8015334:	4620      	mov	r0, r4
 8015336:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801533a:	f7ff bfbd 	b.w	80152b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08015340 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8015340:	b538      	push	{r3, r4, r5, lr}
 8015342:	4c15      	ldr	r4, [pc, #84]	@ (8015398 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8015344:	7823      	ldrb	r3, [r4, #0]
 8015346:	f3bf 8f5b 	dmb	ish
 801534a:	07da      	lsls	r2, r3, #31
 801534c:	4605      	mov	r5, r0
 801534e:	d40b      	bmi.n	8015368 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8015350:	4620      	mov	r0, r4
 8015352:	f007 fdf9 	bl	801cf48 <__cxa_guard_acquire>
 8015356:	b138      	cbz	r0, 8015368 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8015358:	4620      	mov	r0, r4
 801535a:	f007 fe01 	bl	801cf60 <__cxa_guard_release>
 801535e:	4a0f      	ldr	r2, [pc, #60]	@ (801539c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8015360:	490f      	ldr	r1, [pc, #60]	@ (80153a0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8015362:	4810      	ldr	r0, [pc, #64]	@ (80153a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8015364:	f007 fde9 	bl	801cf3a <__aeabi_atexit>
 8015368:	4c0f      	ldr	r4, [pc, #60]	@ (80153a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801536a:	7823      	ldrb	r3, [r4, #0]
 801536c:	f3bf 8f5b 	dmb	ish
 8015370:	07db      	lsls	r3, r3, #31
 8015372:	d40b      	bmi.n	801538c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8015374:	4620      	mov	r0, r4
 8015376:	f007 fde7 	bl	801cf48 <__cxa_guard_acquire>
 801537a:	b138      	cbz	r0, 801538c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801537c:	4620      	mov	r0, r4
 801537e:	f007 fdef 	bl	801cf60 <__cxa_guard_release>
 8015382:	4a06      	ldr	r2, [pc, #24]	@ (801539c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8015384:	4909      	ldr	r1, [pc, #36]	@ (80153ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8015386:	480a      	ldr	r0, [pc, #40]	@ (80153b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8015388:	f007 fdd7 	bl	801cf3a <__aeabi_atexit>
 801538c:	4b05      	ldr	r3, [pc, #20]	@ (80153a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801538e:	636b      	str	r3, [r5, #52]	@ 0x34
 8015390:	4b07      	ldr	r3, [pc, #28]	@ (80153b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8015392:	63ab      	str	r3, [r5, #56]	@ 0x38
 8015394:	bd38      	pop	{r3, r4, r5, pc}
 8015396:	bf00      	nop
 8015398:	20011ac4 	.word	0x20011ac4
 801539c:	20000000 	.word	0x20000000
 80153a0:	08011f37 	.word	0x08011f37
 80153a4:	200000e8 	.word	0x200000e8
 80153a8:	20011ac8 	.word	0x20011ac8
 80153ac:	08011f35 	.word	0x08011f35
 80153b0:	200000ec 	.word	0x200000ec

080153b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 80153b4:	b538      	push	{r3, r4, r5, lr}
 80153b6:	4c15      	ldr	r4, [pc, #84]	@ (801540c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 80153b8:	7823      	ldrb	r3, [r4, #0]
 80153ba:	f3bf 8f5b 	dmb	ish
 80153be:	07da      	lsls	r2, r3, #31
 80153c0:	4605      	mov	r5, r0
 80153c2:	d40b      	bmi.n	80153dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80153c4:	4620      	mov	r0, r4
 80153c6:	f007 fdbf 	bl	801cf48 <__cxa_guard_acquire>
 80153ca:	b138      	cbz	r0, 80153dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80153cc:	4620      	mov	r0, r4
 80153ce:	f007 fdc7 	bl	801cf60 <__cxa_guard_release>
 80153d2:	4a0f      	ldr	r2, [pc, #60]	@ (8015410 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80153d4:	490f      	ldr	r1, [pc, #60]	@ (8015414 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 80153d6:	4810      	ldr	r0, [pc, #64]	@ (8015418 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80153d8:	f007 fdaf 	bl	801cf3a <__aeabi_atexit>
 80153dc:	4c0f      	ldr	r4, [pc, #60]	@ (801541c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 80153de:	7823      	ldrb	r3, [r4, #0]
 80153e0:	f3bf 8f5b 	dmb	ish
 80153e4:	07db      	lsls	r3, r3, #31
 80153e6:	d40b      	bmi.n	8015400 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80153e8:	4620      	mov	r0, r4
 80153ea:	f007 fdad 	bl	801cf48 <__cxa_guard_acquire>
 80153ee:	b138      	cbz	r0, 8015400 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80153f0:	4620      	mov	r0, r4
 80153f2:	f007 fdb5 	bl	801cf60 <__cxa_guard_release>
 80153f6:	4a06      	ldr	r2, [pc, #24]	@ (8015410 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80153f8:	4909      	ldr	r1, [pc, #36]	@ (8015420 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 80153fa:	480a      	ldr	r0, [pc, #40]	@ (8015424 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80153fc:	f007 fd9d 	bl	801cf3a <__aeabi_atexit>
 8015400:	4b05      	ldr	r3, [pc, #20]	@ (8015418 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8015402:	62eb      	str	r3, [r5, #44]	@ 0x2c
 8015404:	4b07      	ldr	r3, [pc, #28]	@ (8015424 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8015406:	632b      	str	r3, [r5, #48]	@ 0x30
 8015408:	bd38      	pop	{r3, r4, r5, pc}
 801540a:	bf00      	nop
 801540c:	20011a94 	.word	0x20011a94
 8015410:	20000000 	.word	0x20000000
 8015414:	08011f3b 	.word	0x08011f3b
 8015418:	200000b8 	.word	0x200000b8
 801541c:	20011a98 	.word	0x20011a98
 8015420:	08011f39 	.word	0x08011f39
 8015424:	200000bc 	.word	0x200000bc

08015428 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8015428:	b510      	push	{r4, lr}
 801542a:	4604      	mov	r4, r0
 801542c:	f7ff ff88 	bl	8015340 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8015430:	4620      	mov	r0, r4
 8015432:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015436:	f7ff bfbd 	b.w	80153b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801543c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801543c:	b538      	push	{r3, r4, r5, lr}
 801543e:	4c15      	ldr	r4, [pc, #84]	@ (8015494 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8015440:	7823      	ldrb	r3, [r4, #0]
 8015442:	f3bf 8f5b 	dmb	ish
 8015446:	07da      	lsls	r2, r3, #31
 8015448:	4605      	mov	r5, r0
 801544a:	d40b      	bmi.n	8015464 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801544c:	4620      	mov	r0, r4
 801544e:	f007 fd7b 	bl	801cf48 <__cxa_guard_acquire>
 8015452:	b138      	cbz	r0, 8015464 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8015454:	4620      	mov	r0, r4
 8015456:	f007 fd83 	bl	801cf60 <__cxa_guard_release>
 801545a:	4a0f      	ldr	r2, [pc, #60]	@ (8015498 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801545c:	490f      	ldr	r1, [pc, #60]	@ (801549c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801545e:	4810      	ldr	r0, [pc, #64]	@ (80154a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8015460:	f007 fd6b 	bl	801cf3a <__aeabi_atexit>
 8015464:	4c0f      	ldr	r4, [pc, #60]	@ (80154a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8015466:	7823      	ldrb	r3, [r4, #0]
 8015468:	f3bf 8f5b 	dmb	ish
 801546c:	07db      	lsls	r3, r3, #31
 801546e:	d40b      	bmi.n	8015488 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8015470:	4620      	mov	r0, r4
 8015472:	f007 fd69 	bl	801cf48 <__cxa_guard_acquire>
 8015476:	b138      	cbz	r0, 8015488 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8015478:	4620      	mov	r0, r4
 801547a:	f007 fd71 	bl	801cf60 <__cxa_guard_release>
 801547e:	4a06      	ldr	r2, [pc, #24]	@ (8015498 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8015480:	4909      	ldr	r1, [pc, #36]	@ (80154a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8015482:	480a      	ldr	r0, [pc, #40]	@ (80154ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8015484:	f007 fd59 	bl	801cf3a <__aeabi_atexit>
 8015488:	4b05      	ldr	r3, [pc, #20]	@ (80154a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801548a:	656b      	str	r3, [r5, #84]	@ 0x54
 801548c:	4b07      	ldr	r3, [pc, #28]	@ (80154ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801548e:	65ab      	str	r3, [r5, #88]	@ 0x58
 8015490:	bd38      	pop	{r3, r4, r5, pc}
 8015492:	bf00      	nop
 8015494:	20011acc 	.word	0x20011acc
 8015498:	20000000 	.word	0x20000000
 801549c:	08011f27 	.word	0x08011f27
 80154a0:	200000f0 	.word	0x200000f0
 80154a4:	20011ad0 	.word	0x20011ad0
 80154a8:	08011f25 	.word	0x08011f25
 80154ac:	200000f4 	.word	0x200000f4

080154b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 80154b0:	b538      	push	{r3, r4, r5, lr}
 80154b2:	4c15      	ldr	r4, [pc, #84]	@ (8015508 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80154b4:	7823      	ldrb	r3, [r4, #0]
 80154b6:	f3bf 8f5b 	dmb	ish
 80154ba:	07da      	lsls	r2, r3, #31
 80154bc:	4605      	mov	r5, r0
 80154be:	d40b      	bmi.n	80154d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80154c0:	4620      	mov	r0, r4
 80154c2:	f007 fd41 	bl	801cf48 <__cxa_guard_acquire>
 80154c6:	b138      	cbz	r0, 80154d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80154c8:	4620      	mov	r0, r4
 80154ca:	f007 fd49 	bl	801cf60 <__cxa_guard_release>
 80154ce:	4a0f      	ldr	r2, [pc, #60]	@ (801550c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80154d0:	490f      	ldr	r1, [pc, #60]	@ (8015510 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 80154d2:	4810      	ldr	r0, [pc, #64]	@ (8015514 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80154d4:	f007 fd31 	bl	801cf3a <__aeabi_atexit>
 80154d8:	4c0f      	ldr	r4, [pc, #60]	@ (8015518 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 80154da:	7823      	ldrb	r3, [r4, #0]
 80154dc:	f3bf 8f5b 	dmb	ish
 80154e0:	07db      	lsls	r3, r3, #31
 80154e2:	d40b      	bmi.n	80154fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80154e4:	4620      	mov	r0, r4
 80154e6:	f007 fd2f 	bl	801cf48 <__cxa_guard_acquire>
 80154ea:	b138      	cbz	r0, 80154fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80154ec:	4620      	mov	r0, r4
 80154ee:	f007 fd37 	bl	801cf60 <__cxa_guard_release>
 80154f2:	4a06      	ldr	r2, [pc, #24]	@ (801550c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80154f4:	4909      	ldr	r1, [pc, #36]	@ (801551c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 80154f6:	480a      	ldr	r0, [pc, #40]	@ (8015520 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80154f8:	f007 fd1f 	bl	801cf3a <__aeabi_atexit>
 80154fc:	4b05      	ldr	r3, [pc, #20]	@ (8015514 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80154fe:	64eb      	str	r3, [r5, #76]	@ 0x4c
 8015500:	4b07      	ldr	r3, [pc, #28]	@ (8015520 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8015502:	652b      	str	r3, [r5, #80]	@ 0x50
 8015504:	bd38      	pop	{r3, r4, r5, pc}
 8015506:	bf00      	nop
 8015508:	20011ad4 	.word	0x20011ad4
 801550c:	20000000 	.word	0x20000000
 8015510:	08011f2b 	.word	0x08011f2b
 8015514:	200000f8 	.word	0x200000f8
 8015518:	20011ad8 	.word	0x20011ad8
 801551c:	08011f29 	.word	0x08011f29
 8015520:	200000fc 	.word	0x200000fc

08015524 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8015524:	b538      	push	{r3, r4, r5, lr}
 8015526:	4c15      	ldr	r4, [pc, #84]	@ (801557c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8015528:	7823      	ldrb	r3, [r4, #0]
 801552a:	f3bf 8f5b 	dmb	ish
 801552e:	07da      	lsls	r2, r3, #31
 8015530:	4605      	mov	r5, r0
 8015532:	d40b      	bmi.n	801554c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8015534:	4620      	mov	r0, r4
 8015536:	f007 fd07 	bl	801cf48 <__cxa_guard_acquire>
 801553a:	b138      	cbz	r0, 801554c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801553c:	4620      	mov	r0, r4
 801553e:	f007 fd0f 	bl	801cf60 <__cxa_guard_release>
 8015542:	4a0f      	ldr	r2, [pc, #60]	@ (8015580 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8015544:	490f      	ldr	r1, [pc, #60]	@ (8015584 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8015546:	4810      	ldr	r0, [pc, #64]	@ (8015588 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8015548:	f007 fcf7 	bl	801cf3a <__aeabi_atexit>
 801554c:	4c0f      	ldr	r4, [pc, #60]	@ (801558c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801554e:	7823      	ldrb	r3, [r4, #0]
 8015550:	f3bf 8f5b 	dmb	ish
 8015554:	07db      	lsls	r3, r3, #31
 8015556:	d40b      	bmi.n	8015570 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8015558:	4620      	mov	r0, r4
 801555a:	f007 fcf5 	bl	801cf48 <__cxa_guard_acquire>
 801555e:	b138      	cbz	r0, 8015570 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8015560:	4620      	mov	r0, r4
 8015562:	f007 fcfd 	bl	801cf60 <__cxa_guard_release>
 8015566:	4a06      	ldr	r2, [pc, #24]	@ (8015580 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8015568:	4909      	ldr	r1, [pc, #36]	@ (8015590 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801556a:	480a      	ldr	r0, [pc, #40]	@ (8015594 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801556c:	f007 fce5 	bl	801cf3a <__aeabi_atexit>
 8015570:	4b05      	ldr	r3, [pc, #20]	@ (8015588 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8015572:	646b      	str	r3, [r5, #68]	@ 0x44
 8015574:	4b07      	ldr	r3, [pc, #28]	@ (8015594 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8015576:	64ab      	str	r3, [r5, #72]	@ 0x48
 8015578:	bd38      	pop	{r3, r4, r5, pc}
 801557a:	bf00      	nop
 801557c:	20011a9c 	.word	0x20011a9c
 8015580:	20000000 	.word	0x20000000
 8015584:	08011f2f 	.word	0x08011f2f
 8015588:	200000c0 	.word	0x200000c0
 801558c:	20011aa0 	.word	0x20011aa0
 8015590:	08011f2d 	.word	0x08011f2d
 8015594:	200000c4 	.word	0x200000c4

08015598 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8015598:	b538      	push	{r3, r4, r5, lr}
 801559a:	4c15      	ldr	r4, [pc, #84]	@ (80155f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801559c:	7823      	ldrb	r3, [r4, #0]
 801559e:	f3bf 8f5b 	dmb	ish
 80155a2:	07da      	lsls	r2, r3, #31
 80155a4:	4605      	mov	r5, r0
 80155a6:	d40b      	bmi.n	80155c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80155a8:	4620      	mov	r0, r4
 80155aa:	f007 fccd 	bl	801cf48 <__cxa_guard_acquire>
 80155ae:	b138      	cbz	r0, 80155c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80155b0:	4620      	mov	r0, r4
 80155b2:	f007 fcd5 	bl	801cf60 <__cxa_guard_release>
 80155b6:	4a0f      	ldr	r2, [pc, #60]	@ (80155f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80155b8:	490f      	ldr	r1, [pc, #60]	@ (80155f8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80155ba:	4810      	ldr	r0, [pc, #64]	@ (80155fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80155bc:	f007 fcbd 	bl	801cf3a <__aeabi_atexit>
 80155c0:	4c0f      	ldr	r4, [pc, #60]	@ (8015600 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80155c2:	7823      	ldrb	r3, [r4, #0]
 80155c4:	f3bf 8f5b 	dmb	ish
 80155c8:	07db      	lsls	r3, r3, #31
 80155ca:	d40b      	bmi.n	80155e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80155cc:	4620      	mov	r0, r4
 80155ce:	f007 fcbb 	bl	801cf48 <__cxa_guard_acquire>
 80155d2:	b138      	cbz	r0, 80155e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80155d4:	4620      	mov	r0, r4
 80155d6:	f007 fcc3 	bl	801cf60 <__cxa_guard_release>
 80155da:	4a06      	ldr	r2, [pc, #24]	@ (80155f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80155dc:	4909      	ldr	r1, [pc, #36]	@ (8015604 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80155de:	480a      	ldr	r0, [pc, #40]	@ (8015608 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80155e0:	f007 fcab 	bl	801cf3a <__aeabi_atexit>
 80155e4:	4b05      	ldr	r3, [pc, #20]	@ (80155fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80155e6:	63eb      	str	r3, [r5, #60]	@ 0x3c
 80155e8:	4b07      	ldr	r3, [pc, #28]	@ (8015608 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80155ea:	642b      	str	r3, [r5, #64]	@ 0x40
 80155ec:	bd38      	pop	{r3, r4, r5, pc}
 80155ee:	bf00      	nop
 80155f0:	20011abc 	.word	0x20011abc
 80155f4:	20000000 	.word	0x20000000
 80155f8:	08011f33 	.word	0x08011f33
 80155fc:	200000e0 	.word	0x200000e0
 8015600:	20011ac0 	.word	0x20011ac0
 8015604:	08011f31 	.word	0x08011f31
 8015608:	200000e4 	.word	0x200000e4

0801560c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801560c:	b510      	push	{r4, lr}
 801560e:	4604      	mov	r4, r0
 8015610:	f7ff ff14 	bl	801543c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8015614:	4620      	mov	r0, r4
 8015616:	f7ff ff85 	bl	8015524 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801561a:	4620      	mov	r0, r4
 801561c:	f7ff ff48 	bl	80154b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8015620:	4620      	mov	r0, r4
 8015622:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015626:	f7ff bfb7 	b.w	8015598 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801562c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801562c:	b538      	push	{r3, r4, r5, lr}
 801562e:	4c15      	ldr	r4, [pc, #84]	@ (8015684 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8015630:	7823      	ldrb	r3, [r4, #0]
 8015632:	f3bf 8f5b 	dmb	ish
 8015636:	07da      	lsls	r2, r3, #31
 8015638:	4605      	mov	r5, r0
 801563a:	d40b      	bmi.n	8015654 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801563c:	4620      	mov	r0, r4
 801563e:	f007 fc83 	bl	801cf48 <__cxa_guard_acquire>
 8015642:	b138      	cbz	r0, 8015654 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8015644:	4620      	mov	r0, r4
 8015646:	f007 fc8b 	bl	801cf60 <__cxa_guard_release>
 801564a:	4a0f      	ldr	r2, [pc, #60]	@ (8015688 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801564c:	490f      	ldr	r1, [pc, #60]	@ (801568c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801564e:	4810      	ldr	r0, [pc, #64]	@ (8015690 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8015650:	f007 fc73 	bl	801cf3a <__aeabi_atexit>
 8015654:	4c0f      	ldr	r4, [pc, #60]	@ (8015694 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8015656:	7823      	ldrb	r3, [r4, #0]
 8015658:	f3bf 8f5b 	dmb	ish
 801565c:	07db      	lsls	r3, r3, #31
 801565e:	d40b      	bmi.n	8015678 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8015660:	4620      	mov	r0, r4
 8015662:	f007 fc71 	bl	801cf48 <__cxa_guard_acquire>
 8015666:	b138      	cbz	r0, 8015678 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8015668:	4620      	mov	r0, r4
 801566a:	f007 fc79 	bl	801cf60 <__cxa_guard_release>
 801566e:	4a06      	ldr	r2, [pc, #24]	@ (8015688 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8015670:	4909      	ldr	r1, [pc, #36]	@ (8015698 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8015672:	480a      	ldr	r0, [pc, #40]	@ (801569c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8015674:	f007 fc61 	bl	801cf3a <__aeabi_atexit>
 8015678:	4b05      	ldr	r3, [pc, #20]	@ (8015690 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801567a:	666b      	str	r3, [r5, #100]	@ 0x64
 801567c:	4b07      	ldr	r3, [pc, #28]	@ (801569c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801567e:	66ab      	str	r3, [r5, #104]	@ 0x68
 8015680:	bd38      	pop	{r3, r4, r5, pc}
 8015682:	bf00      	nop
 8015684:	20011aa4 	.word	0x20011aa4
 8015688:	20000000 	.word	0x20000000
 801568c:	08011f1f 	.word	0x08011f1f
 8015690:	200000c8 	.word	0x200000c8
 8015694:	20011aa8 	.word	0x20011aa8
 8015698:	08011f1d 	.word	0x08011f1d
 801569c:	200000cc 	.word	0x200000cc

080156a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 80156a0:	b538      	push	{r3, r4, r5, lr}
 80156a2:	4c15      	ldr	r4, [pc, #84]	@ (80156f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80156a4:	7823      	ldrb	r3, [r4, #0]
 80156a6:	f3bf 8f5b 	dmb	ish
 80156aa:	07da      	lsls	r2, r3, #31
 80156ac:	4605      	mov	r5, r0
 80156ae:	d40b      	bmi.n	80156c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80156b0:	4620      	mov	r0, r4
 80156b2:	f007 fc49 	bl	801cf48 <__cxa_guard_acquire>
 80156b6:	b138      	cbz	r0, 80156c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80156b8:	4620      	mov	r0, r4
 80156ba:	f007 fc51 	bl	801cf60 <__cxa_guard_release>
 80156be:	4a0f      	ldr	r2, [pc, #60]	@ (80156fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80156c0:	490f      	ldr	r1, [pc, #60]	@ (8015700 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80156c2:	4810      	ldr	r0, [pc, #64]	@ (8015704 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80156c4:	f007 fc39 	bl	801cf3a <__aeabi_atexit>
 80156c8:	4c0f      	ldr	r4, [pc, #60]	@ (8015708 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80156ca:	7823      	ldrb	r3, [r4, #0]
 80156cc:	f3bf 8f5b 	dmb	ish
 80156d0:	07db      	lsls	r3, r3, #31
 80156d2:	d40b      	bmi.n	80156ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80156d4:	4620      	mov	r0, r4
 80156d6:	f007 fc37 	bl	801cf48 <__cxa_guard_acquire>
 80156da:	b138      	cbz	r0, 80156ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80156dc:	4620      	mov	r0, r4
 80156de:	f007 fc3f 	bl	801cf60 <__cxa_guard_release>
 80156e2:	4a06      	ldr	r2, [pc, #24]	@ (80156fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80156e4:	4909      	ldr	r1, [pc, #36]	@ (801570c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80156e6:	480a      	ldr	r0, [pc, #40]	@ (8015710 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80156e8:	f007 fc27 	bl	801cf3a <__aeabi_atexit>
 80156ec:	4b05      	ldr	r3, [pc, #20]	@ (8015704 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80156ee:	65eb      	str	r3, [r5, #92]	@ 0x5c
 80156f0:	4b07      	ldr	r3, [pc, #28]	@ (8015710 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80156f2:	662b      	str	r3, [r5, #96]	@ 0x60
 80156f4:	bd38      	pop	{r3, r4, r5, pc}
 80156f6:	bf00      	nop
 80156f8:	20011a7c 	.word	0x20011a7c
 80156fc:	20000000 	.word	0x20000000
 8015700:	08011f23 	.word	0x08011f23
 8015704:	200000a0 	.word	0x200000a0
 8015708:	20011a80 	.word	0x20011a80
 801570c:	08011f21 	.word	0x08011f21
 8015710:	200000a4 	.word	0x200000a4

08015714 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8015714:	b510      	push	{r4, lr}
 8015716:	4604      	mov	r4, r0
 8015718:	f7ff ff88 	bl	801562c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801571c:	4620      	mov	r0, r4
 801571e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015722:	f7ff bfbd 	b.w	80156a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08015728 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8015728:	b538      	push	{r3, r4, r5, lr}
 801572a:	4c15      	ldr	r4, [pc, #84]	@ (8015780 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801572c:	7823      	ldrb	r3, [r4, #0]
 801572e:	f3bf 8f5b 	dmb	ish
 8015732:	07da      	lsls	r2, r3, #31
 8015734:	4605      	mov	r5, r0
 8015736:	d40b      	bmi.n	8015750 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8015738:	4620      	mov	r0, r4
 801573a:	f007 fc05 	bl	801cf48 <__cxa_guard_acquire>
 801573e:	b138      	cbz	r0, 8015750 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8015740:	4620      	mov	r0, r4
 8015742:	f007 fc0d 	bl	801cf60 <__cxa_guard_release>
 8015746:	4a0f      	ldr	r2, [pc, #60]	@ (8015784 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8015748:	490f      	ldr	r1, [pc, #60]	@ (8015788 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801574a:	4810      	ldr	r0, [pc, #64]	@ (801578c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801574c:	f007 fbf5 	bl	801cf3a <__aeabi_atexit>
 8015750:	4c0f      	ldr	r4, [pc, #60]	@ (8015790 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8015752:	7823      	ldrb	r3, [r4, #0]
 8015754:	f3bf 8f5b 	dmb	ish
 8015758:	07db      	lsls	r3, r3, #31
 801575a:	d40b      	bmi.n	8015774 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801575c:	4620      	mov	r0, r4
 801575e:	f007 fbf3 	bl	801cf48 <__cxa_guard_acquire>
 8015762:	b138      	cbz	r0, 8015774 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8015764:	4620      	mov	r0, r4
 8015766:	f007 fbfb 	bl	801cf60 <__cxa_guard_release>
 801576a:	4a06      	ldr	r2, [pc, #24]	@ (8015784 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801576c:	4909      	ldr	r1, [pc, #36]	@ (8015794 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801576e:	480a      	ldr	r0, [pc, #40]	@ (8015798 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8015770:	f007 fbe3 	bl	801cf3a <__aeabi_atexit>
 8015774:	4b05      	ldr	r3, [pc, #20]	@ (801578c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8015776:	676b      	str	r3, [r5, #116]	@ 0x74
 8015778:	4b07      	ldr	r3, [pc, #28]	@ (8015798 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801577a:	67ab      	str	r3, [r5, #120]	@ 0x78
 801577c:	bd38      	pop	{r3, r4, r5, pc}
 801577e:	bf00      	nop
 8015780:	20011a74 	.word	0x20011a74
 8015784:	20000000 	.word	0x20000000
 8015788:	08011f17 	.word	0x08011f17
 801578c:	20000098 	.word	0x20000098
 8015790:	20011a78 	.word	0x20011a78
 8015794:	08011f15 	.word	0x08011f15
 8015798:	2000009c 	.word	0x2000009c

0801579c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801579c:	b538      	push	{r3, r4, r5, lr}
 801579e:	4c15      	ldr	r4, [pc, #84]	@ (80157f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80157a0:	7823      	ldrb	r3, [r4, #0]
 80157a2:	f3bf 8f5b 	dmb	ish
 80157a6:	07da      	lsls	r2, r3, #31
 80157a8:	4605      	mov	r5, r0
 80157aa:	d40b      	bmi.n	80157c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80157ac:	4620      	mov	r0, r4
 80157ae:	f007 fbcb 	bl	801cf48 <__cxa_guard_acquire>
 80157b2:	b138      	cbz	r0, 80157c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80157b4:	4620      	mov	r0, r4
 80157b6:	f007 fbd3 	bl	801cf60 <__cxa_guard_release>
 80157ba:	4a0f      	ldr	r2, [pc, #60]	@ (80157f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80157bc:	490f      	ldr	r1, [pc, #60]	@ (80157fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80157be:	4810      	ldr	r0, [pc, #64]	@ (8015800 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80157c0:	f007 fbbb 	bl	801cf3a <__aeabi_atexit>
 80157c4:	4c0f      	ldr	r4, [pc, #60]	@ (8015804 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80157c6:	7823      	ldrb	r3, [r4, #0]
 80157c8:	f3bf 8f5b 	dmb	ish
 80157cc:	07db      	lsls	r3, r3, #31
 80157ce:	d40b      	bmi.n	80157e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80157d0:	4620      	mov	r0, r4
 80157d2:	f007 fbb9 	bl	801cf48 <__cxa_guard_acquire>
 80157d6:	b138      	cbz	r0, 80157e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80157d8:	4620      	mov	r0, r4
 80157da:	f007 fbc1 	bl	801cf60 <__cxa_guard_release>
 80157de:	4a06      	ldr	r2, [pc, #24]	@ (80157f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80157e0:	4909      	ldr	r1, [pc, #36]	@ (8015808 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80157e2:	480a      	ldr	r0, [pc, #40]	@ (801580c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80157e4:	f007 fba9 	bl	801cf3a <__aeabi_atexit>
 80157e8:	4b05      	ldr	r3, [pc, #20]	@ (8015800 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80157ea:	66eb      	str	r3, [r5, #108]	@ 0x6c
 80157ec:	4b07      	ldr	r3, [pc, #28]	@ (801580c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80157ee:	672b      	str	r3, [r5, #112]	@ 0x70
 80157f0:	bd38      	pop	{r3, r4, r5, pc}
 80157f2:	bf00      	nop
 80157f4:	20011a6c 	.word	0x20011a6c
 80157f8:	20000000 	.word	0x20000000
 80157fc:	08011f1b 	.word	0x08011f1b
 8015800:	20000090 	.word	0x20000090
 8015804:	20011a70 	.word	0x20011a70
 8015808:	08011f19 	.word	0x08011f19
 801580c:	20000094 	.word	0x20000094

08015810 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8015810:	b510      	push	{r4, lr}
 8015812:	4604      	mov	r4, r0
 8015814:	f7ff ff88 	bl	8015728 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8015818:	4620      	mov	r0, r4
 801581a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801581e:	f7ff bfbd 	b.w	801579c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08015822 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8015822:	b510      	push	{r4, lr}
 8015824:	4604      	mov	r4, r0
 8015826:	f7ff fff3 	bl	8015810 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801582a:	4620      	mov	r0, r4
 801582c:	f7ff ff72 	bl	8015714 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8015830:	4620      	mov	r0, r4
 8015832:	f7ff fdf9 	bl	8015428 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8015836:	4620      	mov	r0, r4
 8015838:	f7ff fcfa 	bl	8015230 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801583c:	4620      	mov	r0, r4
 801583e:	f7ff fd75 	bl	801532c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8015842:	4620      	mov	r0, r4
 8015844:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015848:	f7ff bee0 	b.w	801560c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801584c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801584c:	b538      	push	{r3, r4, r5, lr}
 801584e:	4c0b      	ldr	r4, [pc, #44]	@ (801587c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 8015850:	7823      	ldrb	r3, [r4, #0]
 8015852:	f3bf 8f5b 	dmb	ish
 8015856:	07db      	lsls	r3, r3, #31
 8015858:	4605      	mov	r5, r0
 801585a:	d40b      	bmi.n	8015874 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801585c:	4620      	mov	r0, r4
 801585e:	f007 fb73 	bl	801cf48 <__cxa_guard_acquire>
 8015862:	b138      	cbz	r0, 8015874 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8015864:	4620      	mov	r0, r4
 8015866:	f007 fb7b 	bl	801cf60 <__cxa_guard_release>
 801586a:	4a05      	ldr	r2, [pc, #20]	@ (8015880 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801586c:	4905      	ldr	r1, [pc, #20]	@ (8015884 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801586e:	4806      	ldr	r0, [pc, #24]	@ (8015888 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8015870:	f007 fb63 	bl	801cf3a <__aeabi_atexit>
 8015874:	4b04      	ldr	r3, [pc, #16]	@ (8015888 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8015876:	67eb      	str	r3, [r5, #124]	@ 0x7c
 8015878:	bd38      	pop	{r3, r4, r5, pc}
 801587a:	bf00      	nop
 801587c:	20011a60 	.word	0x20011a60
 8015880:	20000000 	.word	0x20000000
 8015884:	08011f13 	.word	0x08011f13
 8015888:	20000088 	.word	0x20000088

0801588c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801588c:	b538      	push	{r3, r4, r5, lr}
 801588e:	4c0b      	ldr	r4, [pc, #44]	@ (80158bc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 8015890:	7823      	ldrb	r3, [r4, #0]
 8015892:	f3bf 8f5b 	dmb	ish
 8015896:	07db      	lsls	r3, r3, #31
 8015898:	4605      	mov	r5, r0
 801589a:	d40b      	bmi.n	80158b4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801589c:	4620      	mov	r0, r4
 801589e:	f007 fb53 	bl	801cf48 <__cxa_guard_acquire>
 80158a2:	b138      	cbz	r0, 80158b4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 80158a4:	4620      	mov	r0, r4
 80158a6:	f007 fb5b 	bl	801cf60 <__cxa_guard_release>
 80158aa:	4a05      	ldr	r2, [pc, #20]	@ (80158c0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 80158ac:	4905      	ldr	r1, [pc, #20]	@ (80158c4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 80158ae:	4806      	ldr	r0, [pc, #24]	@ (80158c8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80158b0:	f007 fb43 	bl	801cf3a <__aeabi_atexit>
 80158b4:	4b04      	ldr	r3, [pc, #16]	@ (80158c8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80158b6:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 80158ba:	bd38      	pop	{r3, r4, r5, pc}
 80158bc:	20011a64 	.word	0x20011a64
 80158c0:	20000000 	.word	0x20000000
 80158c4:	08011f11 	.word	0x08011f11
 80158c8:	2000008c 	.word	0x2000008c

080158cc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 80158cc:	b570      	push	{r4, r5, r6, lr}
 80158ce:	4d0d      	ldr	r5, [pc, #52]	@ (8015904 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 80158d0:	4c0d      	ldr	r4, [pc, #52]	@ (8015908 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 80158d2:	782b      	ldrb	r3, [r5, #0]
 80158d4:	f3bf 8f5b 	dmb	ish
 80158d8:	f013 0f01 	tst.w	r3, #1
 80158dc:	4606      	mov	r6, r0
 80158de:	d10d      	bne.n	80158fc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80158e0:	4628      	mov	r0, r5
 80158e2:	f007 fb31 	bl	801cf48 <__cxa_guard_acquire>
 80158e6:	b148      	cbz	r0, 80158fc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80158e8:	4b08      	ldr	r3, [pc, #32]	@ (801590c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 80158ea:	6023      	str	r3, [r4, #0]
 80158ec:	4628      	mov	r0, r5
 80158ee:	f007 fb37 	bl	801cf60 <__cxa_guard_release>
 80158f2:	4a07      	ldr	r2, [pc, #28]	@ (8015910 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 80158f4:	4907      	ldr	r1, [pc, #28]	@ (8015914 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 80158f6:	4620      	mov	r0, r4
 80158f8:	f007 fb1f 	bl	801cf3a <__aeabi_atexit>
 80158fc:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 8015900:	bd70      	pop	{r4, r5, r6, pc}
 8015902:	bf00      	nop
 8015904:	20011a68 	.word	0x20011a68
 8015908:	20011adc 	.word	0x20011adc
 801590c:	0801fe08 	.word	0x0801fe08
 8015910:	20000000 	.word	0x20000000
 8015914:	08011f0f 	.word	0x08011f0f

08015918 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 8015918:	b510      	push	{r4, lr}
 801591a:	4604      	mov	r4, r0
 801591c:	f7ff ff96 	bl	801584c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 8015920:	4620      	mov	r0, r4
 8015922:	f7ff ffb3 	bl	801588c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 8015926:	4620      	mov	r0, r4
 8015928:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801592c:	f7ff bfce 	b.w	80158cc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

08015930 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8015930:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015934:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 8015938:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 801593c:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 8015940:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 8015944:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 8015948:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 801594c:	8808      	ldrh	r0, [r1, #0]
 801594e:	fb05 4c0e 	mla	ip, r5, lr, r4
 8015952:	2d00      	cmp	r5, #0
 8015954:	eb02 0a0c 	add.w	sl, r2, ip
 8015958:	f2c0 80b0 	blt.w	8015abc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801595c:	45ab      	cmp	fp, r5
 801595e:	f340 80ad 	ble.w	8015abc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8015962:	2c00      	cmp	r4, #0
 8015964:	f2c0 80a8 	blt.w	8015ab8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8015968:	45a6      	cmp	lr, r4
 801596a:	f340 80a5 	ble.w	8015ab8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801596e:	f812 200c 	ldrb.w	r2, [r2, ip]
 8015972:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8015976:	1c62      	adds	r2, r4, #1
 8015978:	f100 80a3 	bmi.w	8015ac2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801597c:	4596      	cmp	lr, r2
 801597e:	f340 80a0 	ble.w	8015ac2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8015982:	f1b9 0f00 	cmp.w	r9, #0
 8015986:	f000 809c 	beq.w	8015ac2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801598a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801598e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8015992:	3501      	adds	r5, #1
 8015994:	f100 8099 	bmi.w	8015aca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8015998:	45ab      	cmp	fp, r5
 801599a:	f340 8096 	ble.w	8015aca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801599e:	2f00      	cmp	r7, #0
 80159a0:	f000 8093 	beq.w	8015aca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80159a4:	2c00      	cmp	r4, #0
 80159a6:	f2c0 808e 	blt.w	8015ac6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80159aa:	45a6      	cmp	lr, r4
 80159ac:	f340 808b 	ble.w	8015ac6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80159b0:	f81a 200e 	ldrb.w	r2, [sl, lr]
 80159b4:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 80159b8:	3401      	adds	r4, #1
 80159ba:	f100 8089 	bmi.w	8015ad0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80159be:	45a6      	cmp	lr, r4
 80159c0:	f340 8086 	ble.w	8015ad0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80159c4:	f1b9 0f00 	cmp.w	r9, #0
 80159c8:	f000 8082 	beq.w	8015ad0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80159cc:	44d6      	add	lr, sl
 80159ce:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80159d2:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80159d6:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80159da:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 80159de:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 80159e2:	fb19 fe07 	smulbb	lr, r9, r7
 80159e6:	ea44 0808 	orr.w	r8, r4, r8
 80159ea:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80159ee:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80159f2:	f1c7 0210 	rsb	r2, r7, #16
 80159f6:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 80159fa:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 80159fe:	ea44 0c0c 	orr.w	ip, r4, ip
 8015a02:	eba2 0209 	sub.w	r2, r2, r9
 8015a06:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8015a0a:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8015a0e:	fb04 f40c 	mul.w	r4, r4, ip
 8015a12:	fb02 4808 	mla	r8, r2, r8, r4
 8015a16:	041a      	lsls	r2, r3, #16
 8015a18:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8015a1c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8015a20:	4313      	orrs	r3, r2
 8015a22:	042a      	lsls	r2, r5, #16
 8015a24:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8015a28:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8015a2c:	fb0e 8303 	mla	r3, lr, r3, r8
 8015a30:	432a      	orrs	r2, r5
 8015a32:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8015a36:	fb07 3202 	mla	r2, r7, r2, r3
 8015a3a:	0d53      	lsrs	r3, r2, #21
 8015a3c:	0952      	lsrs	r2, r2, #5
 8015a3e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8015a42:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8015a46:	431a      	orrs	r2, r3
 8015a48:	b293      	uxth	r3, r2
 8015a4a:	b2b4      	uxth	r4, r6
 8015a4c:	1202      	asrs	r2, r0, #8
 8015a4e:	43f6      	mvns	r6, r6
 8015a50:	b2f6      	uxtb	r6, r6
 8015a52:	121d      	asrs	r5, r3, #8
 8015a54:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8015a58:	fb12 f206 	smulbb	r2, r2, r6
 8015a5c:	10c7      	asrs	r7, r0, #3
 8015a5e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8015a62:	00c0      	lsls	r0, r0, #3
 8015a64:	fb05 2504 	mla	r5, r5, r4, r2
 8015a68:	b2c0      	uxtb	r0, r0
 8015a6a:	10da      	asrs	r2, r3, #3
 8015a6c:	00db      	lsls	r3, r3, #3
 8015a6e:	b2db      	uxtb	r3, r3
 8015a70:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015a74:	fb10 f006 	smulbb	r0, r0, r6
 8015a78:	b2ad      	uxth	r5, r5
 8015a7a:	fb03 0004 	mla	r0, r3, r4, r0
 8015a7e:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8015a82:	fb17 f706 	smulbb	r7, r7, r6
 8015a86:	b280      	uxth	r0, r0
 8015a88:	1c6b      	adds	r3, r5, #1
 8015a8a:	fb02 7204 	mla	r2, r2, r4, r7
 8015a8e:	b292      	uxth	r2, r2
 8015a90:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8015a94:	1c43      	adds	r3, r0, #1
 8015a96:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8015a9a:	1c50      	adds	r0, r2, #1
 8015a9c:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8015aa0:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8015aa4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8015aa8:	0952      	lsrs	r2, r2, #5
 8015aaa:	432b      	orrs	r3, r5
 8015aac:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8015ab0:	4313      	orrs	r3, r2
 8015ab2:	800b      	strh	r3, [r1, #0]
 8015ab4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015ab8:	4680      	mov	r8, r0
 8015aba:	e75c      	b.n	8015976 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8015abc:	4684      	mov	ip, r0
 8015abe:	4680      	mov	r8, r0
 8015ac0:	e767      	b.n	8015992 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8015ac2:	4684      	mov	ip, r0
 8015ac4:	e765      	b.n	8015992 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8015ac6:	4605      	mov	r5, r0
 8015ac8:	e776      	b.n	80159b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8015aca:	4603      	mov	r3, r0
 8015acc:	4605      	mov	r5, r0
 8015ace:	e782      	b.n	80159d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8015ad0:	4603      	mov	r3, r0
 8015ad2:	e780      	b.n	80159d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08015ad4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015ad4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ad8:	b099      	sub	sp, #100	@ 0x64
 8015ada:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 8015ade:	9215      	str	r2, [sp, #84]	@ 0x54
 8015ae0:	9309      	str	r3, [sp, #36]	@ 0x24
 8015ae2:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 8015ae4:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 8015ae8:	930d      	str	r3, [sp, #52]	@ 0x34
 8015aea:	910c      	str	r1, [sp, #48]	@ 0x30
 8015aec:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 8015af0:	9016      	str	r0, [sp, #88]	@ 0x58
 8015af2:	6850      	ldr	r0, [r2, #4]
 8015af4:	6812      	ldr	r2, [r2, #0]
 8015af6:	fb00 1303 	mla	r3, r0, r3, r1
 8015afa:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8015afe:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8015b00:	681b      	ldr	r3, [r3, #0]
 8015b02:	930b      	str	r3, [sp, #44]	@ 0x2c
 8015b04:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8015b06:	685e      	ldr	r6, [r3, #4]
 8015b08:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015b0a:	43db      	mvns	r3, r3
 8015b0c:	b2db      	uxtb	r3, r3
 8015b0e:	3604      	adds	r6, #4
 8015b10:	930a      	str	r3, [sp, #40]	@ 0x28
 8015b12:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8015b14:	2b00      	cmp	r3, #0
 8015b16:	dc03      	bgt.n	8015b20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8015b18:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8015b1a:	2b00      	cmp	r3, #0
 8015b1c:	f340 8225 	ble.w	8015f6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8015b20:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8015b22:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015b26:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015b2a:	1e48      	subs	r0, r1, #1
 8015b2c:	1e57      	subs	r7, r2, #1
 8015b2e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015b30:	2b00      	cmp	r3, #0
 8015b32:	f340 80e3 	ble.w	8015cfc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015b36:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8015b3a:	ea4f 4325 	mov.w	r3, r5, asr #16
 8015b3e:	d406      	bmi.n	8015b4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015b40:	4584      	cmp	ip, r0
 8015b42:	da04      	bge.n	8015b4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015b44:	2b00      	cmp	r3, #0
 8015b46:	db02      	blt.n	8015b4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015b48:	42bb      	cmp	r3, r7
 8015b4a:	f2c0 80d8 	blt.w	8015cfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8015b4e:	f11c 0c01 	adds.w	ip, ip, #1
 8015b52:	f100 80c9 	bmi.w	8015ce8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015b56:	4561      	cmp	r1, ip
 8015b58:	f2c0 80c6 	blt.w	8015ce8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015b5c:	3301      	adds	r3, #1
 8015b5e:	f100 80c3 	bmi.w	8015ce8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015b62:	429a      	cmp	r2, r3
 8015b64:	f2c0 80c0 	blt.w	8015ce8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015b68:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8015b6c:	4647      	mov	r7, r8
 8015b6e:	f1bb 0f00 	cmp.w	fp, #0
 8015b72:	f340 80e3 	ble.w	8015d3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8015b76:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8015b78:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8015b7a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8015b7e:	689b      	ldr	r3, [r3, #8]
 8015b80:	ea5f 422a 	movs.w	r2, sl, asr #16
 8015b84:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8015b88:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8015b8c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8015b90:	f100 8121 	bmi.w	8015dd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8015b94:	f103 39ff 	add.w	r9, r3, #4294967295
 8015b98:	454a      	cmp	r2, r9
 8015b9a:	f280 811c 	bge.w	8015dd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8015b9e:	f1bc 0f00 	cmp.w	ip, #0
 8015ba2:	f2c0 8118 	blt.w	8015dd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8015ba6:	f10e 39ff 	add.w	r9, lr, #4294967295
 8015baa:	45cc      	cmp	ip, r9
 8015bac:	f280 8113 	bge.w	8015dd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8015bb0:	b21b      	sxth	r3, r3
 8015bb2:	fb0c 2203 	mla	r2, ip, r3, r2
 8015bb6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8015bb8:	eb04 0902 	add.w	r9, r4, r2
 8015bbc:	5ca2      	ldrb	r2, [r4, r2]
 8015bbe:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8015bc2:	2800      	cmp	r0, #0
 8015bc4:	f000 80fe 	beq.w	8015dc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8015bc8:	f899 2001 	ldrb.w	r2, [r9, #1]
 8015bcc:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8015bd0:	9211      	str	r2, [sp, #68]	@ 0x44
 8015bd2:	b151      	cbz	r1, 8015bea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8015bd4:	eb09 0203 	add.w	r2, r9, r3
 8015bd8:	f819 3003 	ldrb.w	r3, [r9, r3]
 8015bdc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8015be0:	930f      	str	r3, [sp, #60]	@ 0x3c
 8015be2:	7853      	ldrb	r3, [r2, #1]
 8015be4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8015be8:	9312      	str	r3, [sp, #72]	@ 0x48
 8015bea:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8015bec:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8015bee:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8015bf2:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8015bf6:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8015bfa:	ea4c 0c03 	orr.w	ip, ip, r3
 8015bfe:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8015c00:	041b      	lsls	r3, r3, #16
 8015c02:	fb10 f201 	smulbb	r2, r0, r1
 8015c06:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8015c0a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8015c0e:	10d2      	asrs	r2, r2, #3
 8015c10:	4323      	orrs	r3, r4
 8015c12:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8015c16:	4353      	muls	r3, r2
 8015c18:	fb09 330c 	mla	r3, r9, ip, r3
 8015c1c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8015c20:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8015c24:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8015c28:	ea4c 0e0e 	orr.w	lr, ip, lr
 8015c2c:	f1c1 0c10 	rsb	ip, r1, #16
 8015c30:	ebac 0c00 	sub.w	ip, ip, r0
 8015c34:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8015c38:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8015c3c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8015c3e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8015c40:	0418      	lsls	r0, r3, #16
 8015c42:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8015c46:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8015c4a:	4318      	orrs	r0, r3
 8015c4c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8015c50:	fb02 c200 	mla	r2, r2, r0, ip
 8015c54:	0d53      	lsrs	r3, r2, #21
 8015c56:	0952      	lsrs	r2, r2, #5
 8015c58:	8838      	ldrh	r0, [r7, #0]
 8015c5a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8015c5e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8015c62:	431a      	orrs	r2, r3
 8015c64:	b292      	uxth	r2, r2
 8015c66:	1201      	asrs	r1, r0, #8
 8015c68:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 8015c6c:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8015c70:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8015c74:	fb11 f104 	smulbb	r1, r1, r4
 8015c78:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8015c7c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015c80:	00c0      	lsls	r0, r0, #3
 8015c82:	fb0c 1c03 	mla	ip, ip, r3, r1
 8015c86:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8015c8a:	10d1      	asrs	r1, r2, #3
 8015c8c:	b2c0      	uxtb	r0, r0
 8015c8e:	00d2      	lsls	r2, r2, #3
 8015c90:	b2d2      	uxtb	r2, r2
 8015c92:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8015c96:	fb1e fe04 	smulbb	lr, lr, r4
 8015c9a:	fb10 f004 	smulbb	r0, r0, r4
 8015c9e:	fa1f fc8c 	uxth.w	ip, ip
 8015ca2:	fb01 e103 	mla	r1, r1, r3, lr
 8015ca6:	fb02 0303 	mla	r3, r2, r3, r0
 8015caa:	b29a      	uxth	r2, r3
 8015cac:	f10c 0301 	add.w	r3, ip, #1
 8015cb0:	b289      	uxth	r1, r1
 8015cb2:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8015cb6:	1c53      	adds	r3, r2, #1
 8015cb8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8015cbc:	1c4a      	adds	r2, r1, #1
 8015cbe:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8015cc2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015cc6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8015cca:	0949      	lsrs	r1, r1, #5
 8015ccc:	ea43 030c 	orr.w	r3, r3, ip
 8015cd0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8015cd4:	430b      	orrs	r3, r1
 8015cd6:	803b      	strh	r3, [r7, #0]
 8015cd8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8015cda:	449a      	add	sl, r3
 8015cdc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8015cde:	3702      	adds	r7, #2
 8015ce0:	441d      	add	r5, r3
 8015ce2:	f10b 3bff 	add.w	fp, fp, #4294967295
 8015ce6:	e742      	b.n	8015b6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8015ce8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8015cea:	449a      	add	sl, r3
 8015cec:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8015cee:	441d      	add	r5, r3
 8015cf0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015cf2:	3b01      	subs	r3, #1
 8015cf4:	9309      	str	r3, [sp, #36]	@ 0x24
 8015cf6:	f108 0802 	add.w	r8, r8, #2
 8015cfa:	e718      	b.n	8015b2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8015cfc:	d023      	beq.n	8015d46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8015cfe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015d00:	9825      	ldr	r0, [sp, #148]	@ 0x94
 8015d02:	3b01      	subs	r3, #1
 8015d04:	fb00 a003 	mla	r0, r0, r3, sl
 8015d08:	1400      	asrs	r0, r0, #16
 8015d0a:	f53f af2d 	bmi.w	8015b68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8015d0e:	3901      	subs	r1, #1
 8015d10:	4288      	cmp	r0, r1
 8015d12:	f6bf af29 	bge.w	8015b68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8015d16:	9926      	ldr	r1, [sp, #152]	@ 0x98
 8015d18:	fb01 5303 	mla	r3, r1, r3, r5
 8015d1c:	141b      	asrs	r3, r3, #16
 8015d1e:	f53f af23 	bmi.w	8015b68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8015d22:	3a01      	subs	r2, #1
 8015d24:	4293      	cmp	r3, r2
 8015d26:	f6bf af1f 	bge.w	8015b68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8015d2a:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8015d2e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 8015d32:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 8015d36:	f1be 0f00 	cmp.w	lr, #0
 8015d3a:	dc6c      	bgt.n	8015e16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8015d3c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015d3e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8015d42:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8015d46:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8015d48:	2b00      	cmp	r3, #0
 8015d4a:	f340 810e 	ble.w	8015f6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8015d4e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015d52:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8015d56:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8015d5a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8015d5c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015d60:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015d64:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015d68:	eef0 6a62 	vmov.f32	s13, s5
 8015d6c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015d70:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015d74:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015d78:	ee16 aa90 	vmov	sl, s13
 8015d7c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015d80:	eef0 6a43 	vmov.f32	s13, s6
 8015d84:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015d88:	ee12 2a90 	vmov	r2, s5
 8015d8c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015d90:	fb92 f3f3 	sdiv	r3, r2, r3
 8015d94:	ee13 2a10 	vmov	r2, s6
 8015d98:	9325      	str	r3, [sp, #148]	@ 0x94
 8015d9a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8015d9c:	fb92 f3f3 	sdiv	r3, r2, r3
 8015da0:	9326      	str	r3, [sp, #152]	@ 0x98
 8015da2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8015da4:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8015da6:	3b01      	subs	r3, #1
 8015da8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015dac:	930c      	str	r3, [sp, #48]	@ 0x30
 8015dae:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8015db0:	bf08      	it	eq
 8015db2:	4613      	moveq	r3, r2
 8015db4:	ee16 5a90 	vmov	r5, s13
 8015db8:	9309      	str	r3, [sp, #36]	@ 0x24
 8015dba:	eeb0 3a67 	vmov.f32	s6, s15
 8015dbe:	eef0 2a47 	vmov.f32	s5, s14
 8015dc2:	e6a6      	b.n	8015b12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015dc4:	2900      	cmp	r1, #0
 8015dc6:	f43f af10 	beq.w	8015bea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8015dca:	f819 3003 	ldrb.w	r3, [r9, r3]
 8015dce:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8015dd2:	930f      	str	r3, [sp, #60]	@ 0x3c
 8015dd4:	e709      	b.n	8015bea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8015dd6:	f112 0901 	adds.w	r9, r2, #1
 8015dda:	f53f af7d 	bmi.w	8015cd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8015dde:	454b      	cmp	r3, r9
 8015de0:	f6ff af7a 	blt.w	8015cd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8015de4:	f11c 0901 	adds.w	r9, ip, #1
 8015de8:	f53f af76 	bmi.w	8015cd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8015dec:	45ce      	cmp	lr, r9
 8015dee:	f6ff af73 	blt.w	8015cd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8015df2:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8015df4:	9202      	str	r2, [sp, #8]
 8015df6:	b21b      	sxth	r3, r3
 8015df8:	fa0f f28e 	sxth.w	r2, lr
 8015dfc:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8015e00:	e9cd c003 	strd	ip, r0, [sp, #12]
 8015e04:	9201      	str	r2, [sp, #4]
 8015e06:	9300      	str	r3, [sp, #0]
 8015e08:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8015e0a:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8015e0c:	4633      	mov	r3, r6
 8015e0e:	4639      	mov	r1, r7
 8015e10:	f7ff fd8e 	bl	8015930 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8015e14:	e760      	b.n	8015cd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8015e16:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8015e18:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8015e1a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8015e1e:	ea4f 422a 	mov.w	r2, sl, asr #16
 8015e22:	1429      	asrs	r1, r5, #16
 8015e24:	fb03 2101 	mla	r1, r3, r1, r2
 8015e28:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8015e2a:	440a      	add	r2, r1
 8015e2c:	5c61      	ldrb	r1, [r4, r1]
 8015e2e:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8015e32:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8015e36:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8015e3a:	f1bc 0f00 	cmp.w	ip, #0
 8015e3e:	f000 808c 	beq.w	8015f5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8015e42:	7857      	ldrb	r7, [r2, #1]
 8015e44:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8015e48:	9413      	str	r4, [sp, #76]	@ 0x4c
 8015e4a:	b140      	cbz	r0, 8015e5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8015e4c:	18d7      	adds	r7, r2, r3
 8015e4e:	5cd3      	ldrb	r3, [r2, r3]
 8015e50:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8015e54:	9310      	str	r3, [sp, #64]	@ 0x40
 8015e56:	787b      	ldrb	r3, [r7, #1]
 8015e58:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8015e5c:	9314      	str	r3, [sp, #80]	@ 0x50
 8015e5e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8015e60:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8015e62:	fb1c f200 	smulbb	r2, ip, r0
 8015e66:	041f      	lsls	r7, r3, #16
 8015e68:	10d2      	asrs	r2, r2, #3
 8015e6a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8015e6e:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 8015e72:	431f      	orrs	r7, r3
 8015e74:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8015e78:	9317      	str	r3, [sp, #92]	@ 0x5c
 8015e7a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8015e7c:	041b      	lsls	r3, r3, #16
 8015e7e:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 8015e82:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8015e86:	ea43 030b 	orr.w	r3, r3, fp
 8015e8a:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8015e8c:	4353      	muls	r3, r2
 8015e8e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8015e92:	fb04 3707 	mla	r7, r4, r7, r3
 8015e96:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8015e9a:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 8015e9e:	ea43 0b01 	orr.w	fp, r3, r1
 8015ea2:	f1c0 0110 	rsb	r1, r0, #16
 8015ea6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015ea8:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8015eaa:	eba1 0c0c 	sub.w	ip, r1, ip
 8015eae:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8015eb2:	fb0c 770b 	mla	r7, ip, fp, r7
 8015eb6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8015eba:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 8015ebe:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8015ec2:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8015ec6:	ea4c 0c0b 	orr.w	ip, ip, fp
 8015eca:	fb02 770c 	mla	r7, r2, ip, r7
 8015ece:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8015ed0:	0d79      	lsrs	r1, r7, #21
 8015ed2:	097f      	lsrs	r7, r7, #5
 8015ed4:	8812      	ldrh	r2, [r2, #0]
 8015ed6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8015eda:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8015ede:	430f      	orrs	r7, r1
 8015ee0:	b2bb      	uxth	r3, r7
 8015ee2:	1211      	asrs	r1, r2, #8
 8015ee4:	1218      	asrs	r0, r3, #8
 8015ee6:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8015eea:	fb11 f104 	smulbb	r1, r1, r4
 8015eee:	10d7      	asrs	r7, r2, #3
 8015ef0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8015ef4:	00d2      	lsls	r2, r2, #3
 8015ef6:	fb00 1009 	mla	r0, r0, r9, r1
 8015efa:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015efe:	10d9      	asrs	r1, r3, #3
 8015f00:	b2d2      	uxtb	r2, r2
 8015f02:	00db      	lsls	r3, r3, #3
 8015f04:	fb17 f704 	smulbb	r7, r7, r4
 8015f08:	fb12 f204 	smulbb	r2, r2, r4
 8015f0c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8015f10:	b2db      	uxtb	r3, r3
 8015f12:	b280      	uxth	r0, r0
 8015f14:	fb01 7109 	mla	r1, r1, r9, r7
 8015f18:	fb03 2309 	mla	r3, r3, r9, r2
 8015f1c:	b29b      	uxth	r3, r3
 8015f1e:	b289      	uxth	r1, r1
 8015f20:	1c42      	adds	r2, r0, #1
 8015f22:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8015f26:	1c4f      	adds	r7, r1, #1
 8015f28:	1c5a      	adds	r2, r3, #1
 8015f2a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8015f2e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8015f32:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8015f36:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015f3a:	0949      	lsrs	r1, r1, #5
 8015f3c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015f3e:	4310      	orrs	r0, r2
 8015f40:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8015f44:	4308      	orrs	r0, r1
 8015f46:	f823 0b02 	strh.w	r0, [r3], #2
 8015f4a:	930e      	str	r3, [sp, #56]	@ 0x38
 8015f4c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8015f4e:	449a      	add	sl, r3
 8015f50:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8015f52:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015f56:	441d      	add	r5, r3
 8015f58:	e6ed      	b.n	8015d36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8015f5a:	2800      	cmp	r0, #0
 8015f5c:	f43f af7f 	beq.w	8015e5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8015f60:	5cd3      	ldrb	r3, [r2, r3]
 8015f62:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8015f66:	9310      	str	r3, [sp, #64]	@ 0x40
 8015f68:	e779      	b.n	8015e5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8015f6a:	b019      	add	sp, #100	@ 0x64
 8015f6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015f70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8015f70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015f74:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 8015f78:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8015f7c:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 8015f80:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 8015f84:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 8015f88:	8808      	ldrh	r0, [r1, #0]
 8015f8a:	fb08 470e 	mla	r7, r8, lr, r4
 8015f8e:	f1b8 0f00 	cmp.w	r8, #0
 8015f92:	eb02 0907 	add.w	r9, r2, r7
 8015f96:	db67      	blt.n	8016068 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8015f98:	45c2      	cmp	sl, r8
 8015f9a:	dd65      	ble.n	8016068 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8015f9c:	2c00      	cmp	r4, #0
 8015f9e:	db61      	blt.n	8016064 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8015fa0:	45a6      	cmp	lr, r4
 8015fa2:	dd5f      	ble.n	8016064 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8015fa4:	5dd2      	ldrb	r2, [r2, r7]
 8015fa6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8015faa:	1c62      	adds	r2, r4, #1
 8015fac:	d45f      	bmi.n	801606e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8015fae:	4596      	cmp	lr, r2
 8015fb0:	dd5d      	ble.n	801606e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8015fb2:	2d00      	cmp	r5, #0
 8015fb4:	d05b      	beq.n	801606e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8015fb6:	f899 2001 	ldrb.w	r2, [r9, #1]
 8015fba:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8015fbe:	f118 0801 	adds.w	r8, r8, #1
 8015fc2:	d458      	bmi.n	8016076 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8015fc4:	45c2      	cmp	sl, r8
 8015fc6:	dd56      	ble.n	8016076 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8015fc8:	2e00      	cmp	r6, #0
 8015fca:	d054      	beq.n	8016076 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8015fcc:	2c00      	cmp	r4, #0
 8015fce:	db50      	blt.n	8016072 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8015fd0:	45a6      	cmp	lr, r4
 8015fd2:	dd4e      	ble.n	8016072 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8015fd4:	f819 200e 	ldrb.w	r2, [r9, lr]
 8015fd8:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8015fdc:	3401      	adds	r4, #1
 8015fde:	d407      	bmi.n	8015ff0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8015fe0:	45a6      	cmp	lr, r4
 8015fe2:	dd05      	ble.n	8015ff0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8015fe4:	b125      	cbz	r5, 8015ff0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8015fe6:	44ce      	add	lr, r9
 8015fe8:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8015fec:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8015ff0:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8015ff4:	fb15 f406 	smulbb	r4, r5, r6
 8015ff8:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8015ffc:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8016000:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8016004:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8016008:	ea43 0c0c 	orr.w	ip, r3, ip
 801600c:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8016010:	f1c6 0310 	rsb	r3, r6, #16
 8016014:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8016018:	1b5b      	subs	r3, r3, r5
 801601a:	ea4e 0707 	orr.w	r7, lr, r7
 801601e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8016022:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016026:	437d      	muls	r5, r7
 8016028:	fb03 5c0c 	mla	ip, r3, ip, r5
 801602c:	0403      	lsls	r3, r0, #16
 801602e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8016032:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8016036:	4318      	orrs	r0, r3
 8016038:	0413      	lsls	r3, r2, #16
 801603a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801603e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8016042:	4313      	orrs	r3, r2
 8016044:	fb04 c000 	mla	r0, r4, r0, ip
 8016048:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801604c:	fb06 0003 	mla	r0, r6, r3, r0
 8016050:	0d43      	lsrs	r3, r0, #21
 8016052:	0940      	lsrs	r0, r0, #5
 8016054:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8016058:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801605c:	4318      	orrs	r0, r3
 801605e:	8008      	strh	r0, [r1, #0]
 8016060:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016064:	4684      	mov	ip, r0
 8016066:	e7a0      	b.n	8015faa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8016068:	4607      	mov	r7, r0
 801606a:	4684      	mov	ip, r0
 801606c:	e7a7      	b.n	8015fbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801606e:	4607      	mov	r7, r0
 8016070:	e7a5      	b.n	8015fbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8016072:	4602      	mov	r2, r0
 8016074:	e7b2      	b.n	8015fdc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8016076:	4602      	mov	r2, r0
 8016078:	e7ba      	b.n	8015ff0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801607a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801607a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801607e:	b093      	sub	sp, #76	@ 0x4c
 8016080:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8016084:	920f      	str	r2, [sp, #60]	@ 0x3c
 8016086:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8016088:	9108      	str	r1, [sp, #32]
 801608a:	9306      	str	r3, [sp, #24]
 801608c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8016090:	9010      	str	r0, [sp, #64]	@ 0x40
 8016092:	6850      	ldr	r0, [r2, #4]
 8016094:	6812      	ldr	r2, [r2, #0]
 8016096:	fb00 1303 	mla	r3, r0, r3, r1
 801609a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801609e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80160a0:	681b      	ldr	r3, [r3, #0]
 80160a2:	9307      	str	r3, [sp, #28]
 80160a4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80160a6:	685f      	ldr	r7, [r3, #4]
 80160a8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80160ac:	3704      	adds	r7, #4
 80160ae:	9b08      	ldr	r3, [sp, #32]
 80160b0:	2b00      	cmp	r3, #0
 80160b2:	dc03      	bgt.n	80160bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 80160b4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80160b6:	2b00      	cmp	r3, #0
 80160b8:	f340 81b2 	ble.w	8016420 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80160bc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80160be:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80160c2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80160c6:	1e48      	subs	r0, r1, #1
 80160c8:	f102 3cff 	add.w	ip, r2, #4294967295
 80160cc:	9b06      	ldr	r3, [sp, #24]
 80160ce:	2b00      	cmp	r3, #0
 80160d0:	f340 80a9 	ble.w	8016226 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 80160d4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80160d8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80160dc:	d406      	bmi.n	80160ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80160de:	4586      	cmp	lr, r0
 80160e0:	da04      	bge.n	80160ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80160e2:	2b00      	cmp	r3, #0
 80160e4:	db02      	blt.n	80160ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80160e6:	4563      	cmp	r3, ip
 80160e8:	f2c0 809e 	blt.w	8016228 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80160ec:	f11e 0e01 	adds.w	lr, lr, #1
 80160f0:	f100 808f 	bmi.w	8016212 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80160f4:	4571      	cmp	r1, lr
 80160f6:	f2c0 808c 	blt.w	8016212 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80160fa:	3301      	adds	r3, #1
 80160fc:	f100 8089 	bmi.w	8016212 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016100:	429a      	cmp	r2, r3
 8016102:	f2c0 8086 	blt.w	8016212 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016106:	f8dd b018 	ldr.w	fp, [sp, #24]
 801610a:	46c8      	mov	r8, r9
 801610c:	f1bb 0f00 	cmp.w	fp, #0
 8016110:	f340 80a6 	ble.w	8016260 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8016114:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8016116:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8016118:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801611c:	689b      	ldr	r3, [r3, #8]
 801611e:	1422      	asrs	r2, r4, #16
 8016120:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8016124:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8016128:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801612c:	f100 80e3 	bmi.w	80162f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8016130:	f103 3aff 	add.w	sl, r3, #4294967295
 8016134:	4552      	cmp	r2, sl
 8016136:	f280 80de 	bge.w	80162f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801613a:	f1bc 0f00 	cmp.w	ip, #0
 801613e:	f2c0 80da 	blt.w	80162f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8016142:	f10e 3aff 	add.w	sl, lr, #4294967295
 8016146:	45d4      	cmp	ip, sl
 8016148:	f280 80d5 	bge.w	80162f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801614c:	b21b      	sxth	r3, r3
 801614e:	fb0c 2203 	mla	r2, ip, r3, r2
 8016152:	9d07      	ldr	r5, [sp, #28]
 8016154:	eb05 0a02 	add.w	sl, r5, r2
 8016158:	5caa      	ldrb	r2, [r5, r2]
 801615a:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801615e:	2800      	cmp	r0, #0
 8016160:	f000 80c0 	beq.w	80162e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8016164:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8016168:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801616c:	920b      	str	r2, [sp, #44]	@ 0x2c
 801616e:	b151      	cbz	r1, 8016186 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8016170:	eb0a 0203 	add.w	r2, sl, r3
 8016174:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8016178:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801617c:	9309      	str	r3, [sp, #36]	@ 0x24
 801617e:	7853      	ldrb	r3, [r2, #1]
 8016180:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8016184:	930c      	str	r3, [sp, #48]	@ 0x30
 8016186:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8016188:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801618a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801618e:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8016192:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8016196:	ea4c 0c03 	orr.w	ip, ip, r3
 801619a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801619c:	041b      	lsls	r3, r3, #16
 801619e:	fb10 f201 	smulbb	r2, r0, r1
 80161a2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80161a6:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 80161aa:	10d2      	asrs	r2, r2, #3
 80161ac:	432b      	orrs	r3, r5
 80161ae:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 80161b2:	4353      	muls	r3, r2
 80161b4:	fb0a 330c 	mla	r3, sl, ip, r3
 80161b8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80161bc:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80161c0:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 80161c4:	ea4c 0e0e 	orr.w	lr, ip, lr
 80161c8:	f1c1 0c10 	rsb	ip, r1, #16
 80161cc:	ebac 0c00 	sub.w	ip, ip, r0
 80161d0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80161d4:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80161d8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80161da:	0418      	lsls	r0, r3, #16
 80161dc:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 80161e0:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80161e4:	4318      	orrs	r0, r3
 80161e6:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80161ea:	fb02 c200 	mla	r2, r2, r0, ip
 80161ee:	0d53      	lsrs	r3, r2, #21
 80161f0:	0952      	lsrs	r2, r2, #5
 80161f2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80161f6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80161fa:	431a      	orrs	r2, r3
 80161fc:	f8a8 2000 	strh.w	r2, [r8]
 8016200:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8016202:	441c      	add	r4, r3
 8016204:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8016206:	f108 0802 	add.w	r8, r8, #2
 801620a:	441e      	add	r6, r3
 801620c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8016210:	e77c      	b.n	801610c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016212:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8016214:	441c      	add	r4, r3
 8016216:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8016218:	441e      	add	r6, r3
 801621a:	9b06      	ldr	r3, [sp, #24]
 801621c:	3b01      	subs	r3, #1
 801621e:	9306      	str	r3, [sp, #24]
 8016220:	f109 0902 	add.w	r9, r9, #2
 8016224:	e752      	b.n	80160cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8016226:	d020      	beq.n	801626a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8016228:	9b06      	ldr	r3, [sp, #24]
 801622a:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801622c:	3b01      	subs	r3, #1
 801622e:	fb00 4003 	mla	r0, r0, r3, r4
 8016232:	1400      	asrs	r0, r0, #16
 8016234:	f53f af67 	bmi.w	8016106 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016238:	3901      	subs	r1, #1
 801623a:	4288      	cmp	r0, r1
 801623c:	f6bf af63 	bge.w	8016106 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016240:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8016242:	fb01 6303 	mla	r3, r1, r3, r6
 8016246:	141b      	asrs	r3, r3, #16
 8016248:	f53f af5d 	bmi.w	8016106 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801624c:	3a01      	subs	r2, #1
 801624e:	4293      	cmp	r3, r2
 8016250:	f6bf af59 	bge.w	8016106 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016254:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8016258:	46ca      	mov	sl, r9
 801625a:	f1b8 0f00 	cmp.w	r8, #0
 801625e:	dc67      	bgt.n	8016330 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8016260:	9b06      	ldr	r3, [sp, #24]
 8016262:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8016266:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801626a:	9b08      	ldr	r3, [sp, #32]
 801626c:	2b00      	cmp	r3, #0
 801626e:	f340 80d7 	ble.w	8016420 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8016272:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016276:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801627a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801627e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8016280:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016284:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016288:	eeb0 6a62 	vmov.f32	s12, s5
 801628c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016290:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016294:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016298:	ee16 4a10 	vmov	r4, s12
 801629c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80162a0:	eeb0 6a43 	vmov.f32	s12, s6
 80162a4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80162a8:	ee12 2a90 	vmov	r2, s5
 80162ac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80162b0:	fb92 f3f3 	sdiv	r3, r2, r3
 80162b4:	ee13 2a10 	vmov	r2, s6
 80162b8:	931f      	str	r3, [sp, #124]	@ 0x7c
 80162ba:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80162bc:	fb92 f3f3 	sdiv	r3, r2, r3
 80162c0:	9320      	str	r3, [sp, #128]	@ 0x80
 80162c2:	9b08      	ldr	r3, [sp, #32]
 80162c4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80162c6:	3b01      	subs	r3, #1
 80162c8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80162cc:	9308      	str	r3, [sp, #32]
 80162ce:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80162d0:	bf08      	it	eq
 80162d2:	4613      	moveq	r3, r2
 80162d4:	ee16 6a10 	vmov	r6, s12
 80162d8:	9306      	str	r3, [sp, #24]
 80162da:	eeb0 3a67 	vmov.f32	s6, s15
 80162de:	eef0 2a47 	vmov.f32	s5, s14
 80162e2:	e6e4      	b.n	80160ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80162e4:	2900      	cmp	r1, #0
 80162e6:	f43f af4e 	beq.w	8016186 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80162ea:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80162ee:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80162f2:	9309      	str	r3, [sp, #36]	@ 0x24
 80162f4:	e747      	b.n	8016186 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80162f6:	f112 0a01 	adds.w	sl, r2, #1
 80162fa:	d481      	bmi.n	8016200 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80162fc:	4553      	cmp	r3, sl
 80162fe:	f6ff af7f 	blt.w	8016200 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016302:	f11c 0a01 	adds.w	sl, ip, #1
 8016306:	f53f af7b 	bmi.w	8016200 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801630a:	45d6      	cmp	lr, sl
 801630c:	f6ff af78 	blt.w	8016200 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016310:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8016314:	b21b      	sxth	r3, r3
 8016316:	fa0f f28e 	sxth.w	r2, lr
 801631a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801631e:	9201      	str	r2, [sp, #4]
 8016320:	9300      	str	r3, [sp, #0]
 8016322:	9a07      	ldr	r2, [sp, #28]
 8016324:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8016326:	463b      	mov	r3, r7
 8016328:	4641      	mov	r1, r8
 801632a:	f7ff fe21 	bl	8015f70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801632e:	e767      	b.n	8016200 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016330:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8016332:	9d07      	ldr	r5, [sp, #28]
 8016334:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8016338:	1422      	asrs	r2, r4, #16
 801633a:	1431      	asrs	r1, r6, #16
 801633c:	fb03 2101 	mla	r1, r3, r1, r2
 8016340:	9a07      	ldr	r2, [sp, #28]
 8016342:	440a      	add	r2, r1
 8016344:	5c69      	ldrb	r1, [r5, r1]
 8016346:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801634a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801634e:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8016352:	f1be 0f00 	cmp.w	lr, #0
 8016356:	d05c      	beq.n	8016412 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8016358:	f892 c001 	ldrb.w	ip, [r2, #1]
 801635c:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8016360:	950d      	str	r5, [sp, #52]	@ 0x34
 8016362:	b150      	cbz	r0, 801637a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8016364:	eb02 0c03 	add.w	ip, r2, r3
 8016368:	5cd3      	ldrb	r3, [r2, r3]
 801636a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801636e:	930a      	str	r3, [sp, #40]	@ 0x28
 8016370:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8016374:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8016378:	930e      	str	r3, [sp, #56]	@ 0x38
 801637a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801637c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801637e:	fb1e f200 	smulbb	r2, lr, r0
 8016382:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8016386:	10d2      	asrs	r2, r2, #3
 8016388:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801638c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8016390:	ea4c 0c03 	orr.w	ip, ip, r3
 8016394:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8016398:	9311      	str	r3, [sp, #68]	@ 0x44
 801639a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801639c:	041b      	lsls	r3, r3, #16
 801639e:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 80163a2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80163a6:	ea43 030b 	orr.w	r3, r3, fp
 80163aa:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80163ac:	4353      	muls	r3, r2
 80163ae:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80163b2:	fb05 3c0c 	mla	ip, r5, ip, r3
 80163b6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 80163ba:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 80163be:	ea43 0b01 	orr.w	fp, r3, r1
 80163c2:	f1c0 0110 	rsb	r1, r0, #16
 80163c6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80163c8:	eba1 0e0e 	sub.w	lr, r1, lr
 80163cc:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 80163d0:	fb0e cc0b 	mla	ip, lr, fp, ip
 80163d4:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80163d8:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 80163dc:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80163e0:	ea4b 0e0e 	orr.w	lr, fp, lr
 80163e4:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80163e8:	fb02 cc0e 	mla	ip, r2, lr, ip
 80163ec:	ea4f 535c 	mov.w	r3, ip, lsr #21
 80163f0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80163f4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80163f8:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 80163fc:	ea43 0c0c 	orr.w	ip, r3, ip
 8016400:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8016402:	f82a cb02 	strh.w	ip, [sl], #2
 8016406:	441c      	add	r4, r3
 8016408:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801640a:	f108 38ff 	add.w	r8, r8, #4294967295
 801640e:	441e      	add	r6, r3
 8016410:	e723      	b.n	801625a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8016412:	2800      	cmp	r0, #0
 8016414:	d0b1      	beq.n	801637a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8016416:	5cd3      	ldrb	r3, [r2, r3]
 8016418:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801641c:	930a      	str	r3, [sp, #40]	@ 0x28
 801641e:	e7ac      	b.n	801637a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8016420:	b013      	add	sp, #76	@ 0x4c
 8016422:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016426 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8016426:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801642a:	880d      	ldrh	r5, [r1, #0]
 801642c:	b087      	sub	sp, #28
 801642e:	10ef      	asrs	r7, r5, #3
 8016430:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8016434:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8016438:	00ed      	lsls	r5, r5, #3
 801643a:	9701      	str	r7, [sp, #4]
 801643c:	b2ed      	uxtb	r5, r5
 801643e:	9502      	str	r5, [sp, #8]
 8016440:	9d01      	ldr	r5, [sp, #4]
 8016442:	9103      	str	r1, [sp, #12]
 8016444:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 8016448:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 801644c:	9902      	ldr	r1, [sp, #8]
 801644e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8016452:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 8016456:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 801645a:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 801645e:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 8016462:	022d      	lsls	r5, r5, #8
 8016464:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8016468:	fb06 0709 	mla	r7, r6, r9, r0
 801646c:	430d      	orrs	r5, r1
 801646e:	2e00      	cmp	r6, #0
 8016470:	eb02 0c07 	add.w	ip, r2, r7
 8016474:	9505      	str	r5, [sp, #20]
 8016476:	f2c0 80b6 	blt.w	80165e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801647a:	45b3      	cmp	fp, r6
 801647c:	f340 80b3 	ble.w	80165e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8016480:	2800      	cmp	r0, #0
 8016482:	f2c0 80ae 	blt.w	80165e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8016486:	4581      	cmp	r9, r0
 8016488:	f340 80ab 	ble.w	80165e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801648c:	5dd7      	ldrb	r7, [r2, r7]
 801648e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8016492:	441f      	add	r7, r3
 8016494:	1c42      	adds	r2, r0, #1
 8016496:	f100 80a9 	bmi.w	80165ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801649a:	4591      	cmp	r9, r2
 801649c:	f340 80a6 	ble.w	80165ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80164a0:	2c00      	cmp	r4, #0
 80164a2:	f000 80a3 	beq.w	80165ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80164a6:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80164aa:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80164ae:	441d      	add	r5, r3
 80164b0:	3601      	adds	r6, #1
 80164b2:	f100 809f 	bmi.w	80165f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80164b6:	45b3      	cmp	fp, r6
 80164b8:	f340 809c 	ble.w	80165f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80164bc:	f1be 0f00 	cmp.w	lr, #0
 80164c0:	f000 8098 	beq.w	80165f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80164c4:	2800      	cmp	r0, #0
 80164c6:	f2c0 8093 	blt.w	80165f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80164ca:	4581      	cmp	r9, r0
 80164cc:	f340 8090 	ble.w	80165f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80164d0:	f81c 6009 	ldrb.w	r6, [ip, r9]
 80164d4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80164d8:	441e      	add	r6, r3
 80164da:	3001      	adds	r0, #1
 80164dc:	f100 808d 	bmi.w	80165fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80164e0:	4581      	cmp	r9, r0
 80164e2:	f340 808a 	ble.w	80165fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80164e6:	2c00      	cmp	r4, #0
 80164e8:	f000 8087 	beq.w	80165fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80164ec:	44e1      	add	r9, ip
 80164ee:	f899 2001 	ldrb.w	r2, [r9, #1]
 80164f2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80164f6:	4413      	add	r3, r2
 80164f8:	b2a4      	uxth	r4, r4
 80164fa:	fa1f fe8e 	uxth.w	lr, lr
 80164fe:	fb04 fb0e 	mul.w	fp, r4, lr
 8016502:	0124      	lsls	r4, r4, #4
 8016504:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8016508:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 801650c:	eba4 040b 	sub.w	r4, r4, fp
 8016510:	fa1f f08e 	uxth.w	r0, lr
 8016514:	b2a2      	uxth	r2, r4
 8016516:	78ac      	ldrb	r4, [r5, #2]
 8016518:	f897 c002 	ldrb.w	ip, [r7, #2]
 801651c:	9901      	ldr	r1, [sp, #4]
 801651e:	eba9 0900 	sub.w	r9, r9, r0
 8016522:	fa1f f989 	uxth.w	r9, r9
 8016526:	4354      	muls	r4, r2
 8016528:	fb09 440c 	mla	r4, r9, ip, r4
 801652c:	f896 c002 	ldrb.w	ip, [r6, #2]
 8016530:	fb00 440c 	mla	r4, r0, ip, r4
 8016534:	f893 c002 	ldrb.w	ip, [r3, #2]
 8016538:	fa1f fe88 	uxth.w	lr, r8
 801653c:	ea6f 0808 	mvn.w	r8, r8
 8016540:	fa5f f888 	uxtb.w	r8, r8
 8016544:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8016548:	fb1a fa08 	smulbb	sl, sl, r8
 801654c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8016550:	fb0c ac0e 	mla	ip, ip, lr, sl
 8016554:	f895 a001 	ldrb.w	sl, [r5, #1]
 8016558:	787c      	ldrb	r4, [r7, #1]
 801655a:	782d      	ldrb	r5, [r5, #0]
 801655c:	783f      	ldrb	r7, [r7, #0]
 801655e:	fb02 fa0a 	mul.w	sl, r2, sl
 8016562:	fb09 aa04 	mla	sl, r9, r4, sl
 8016566:	7874      	ldrb	r4, [r6, #1]
 8016568:	436a      	muls	r2, r5
 801656a:	7835      	ldrb	r5, [r6, #0]
 801656c:	fb00 aa04 	mla	sl, r0, r4, sl
 8016570:	fb09 2207 	mla	r2, r9, r7, r2
 8016574:	785c      	ldrb	r4, [r3, #1]
 8016576:	781b      	ldrb	r3, [r3, #0]
 8016578:	fb00 2005 	mla	r0, r0, r5, r2
 801657c:	fb0b a404 	mla	r4, fp, r4, sl
 8016580:	fb0b 0b03 	mla	fp, fp, r3, r0
 8016584:	9b02      	ldr	r3, [sp, #8]
 8016586:	fb11 fa08 	smulbb	sl, r1, r8
 801658a:	fa1f fc8c 	uxth.w	ip, ip
 801658e:	fb13 f808 	smulbb	r8, r3, r8
 8016592:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8016596:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801659a:	fb04 a40e 	mla	r4, r4, lr, sl
 801659e:	f10c 0301 	add.w	r3, ip, #1
 80165a2:	fb0b 8e0e 	mla	lr, fp, lr, r8
 80165a6:	fa1f fe8e 	uxth.w	lr, lr
 80165aa:	b2a4      	uxth	r4, r4
 80165ac:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80165b0:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 80165b4:	f104 0a01 	add.w	sl, r4, #1
 80165b8:	f10e 0c01 	add.w	ip, lr, #1
 80165bc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80165c0:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80165c4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80165c8:	0964      	lsrs	r4, r4, #5
 80165ca:	ea4c 0c03 	orr.w	ip, ip, r3
 80165ce:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80165d2:	9b03      	ldr	r3, [sp, #12]
 80165d4:	ea4c 0c04 	orr.w	ip, ip, r4
 80165d8:	f8a3 c000 	strh.w	ip, [r3]
 80165dc:	b007      	add	sp, #28
 80165de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80165e2:	af05      	add	r7, sp, #20
 80165e4:	e756      	b.n	8016494 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 80165e6:	ad05      	add	r5, sp, #20
 80165e8:	462f      	mov	r7, r5
 80165ea:	e761      	b.n	80164b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80165ec:	ad05      	add	r5, sp, #20
 80165ee:	e75f      	b.n	80164b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80165f0:	ae05      	add	r6, sp, #20
 80165f2:	e772      	b.n	80164da <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 80165f4:	ab05      	add	r3, sp, #20
 80165f6:	461e      	mov	r6, r3
 80165f8:	e77e      	b.n	80164f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 80165fa:	ab05      	add	r3, sp, #20
 80165fc:	e77c      	b.n	80164f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

080165fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80165fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016602:	b095      	sub	sp, #84	@ 0x54
 8016604:	9212      	str	r2, [sp, #72]	@ 0x48
 8016606:	9309      	str	r3, [sp, #36]	@ 0x24
 8016608:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801660a:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 801660e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8016610:	910e      	str	r1, [sp, #56]	@ 0x38
 8016612:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 8016616:	9013      	str	r0, [sp, #76]	@ 0x4c
 8016618:	6850      	ldr	r0, [r2, #4]
 801661a:	6812      	ldr	r2, [r2, #0]
 801661c:	fb00 1303 	mla	r3, r0, r3, r1
 8016620:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016624:	930a      	str	r3, [sp, #40]	@ 0x28
 8016626:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8016628:	681b      	ldr	r3, [r3, #0]
 801662a:	930d      	str	r3, [sp, #52]	@ 0x34
 801662c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801662e:	685c      	ldr	r4, [r3, #4]
 8016630:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8016632:	43db      	mvns	r3, r3
 8016634:	b2db      	uxtb	r3, r3
 8016636:	3404      	adds	r4, #4
 8016638:	930b      	str	r3, [sp, #44]	@ 0x2c
 801663a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801663c:	2b00      	cmp	r3, #0
 801663e:	dc03      	bgt.n	8016648 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8016640:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8016642:	2b00      	cmp	r3, #0
 8016644:	f340 8255 	ble.w	8016af2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8016648:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801664a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801664e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016652:	1e48      	subs	r0, r1, #1
 8016654:	1e55      	subs	r5, r2, #1
 8016656:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016658:	2b00      	cmp	r3, #0
 801665a:	f340 80f9 	ble.w	8016850 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801665e:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 8016660:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8016662:	1436      	asrs	r6, r6, #16
 8016664:	ea4f 4323 	mov.w	r3, r3, asr #16
 8016668:	d406      	bmi.n	8016678 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801666a:	4286      	cmp	r6, r0
 801666c:	da04      	bge.n	8016678 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801666e:	2b00      	cmp	r3, #0
 8016670:	db02      	blt.n	8016678 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8016672:	42ab      	cmp	r3, r5
 8016674:	f2c0 80ed 	blt.w	8016852 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8016678:	3601      	adds	r6, #1
 801667a:	f100 80da 	bmi.w	8016832 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801667e:	42b1      	cmp	r1, r6
 8016680:	f2c0 80d7 	blt.w	8016832 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8016684:	3301      	adds	r3, #1
 8016686:	f100 80d4 	bmi.w	8016832 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801668a:	429a      	cmp	r2, r3
 801668c:	f2c0 80d1 	blt.w	8016832 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8016690:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016692:	9311      	str	r3, [sp, #68]	@ 0x44
 8016694:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016696:	930c      	str	r3, [sp, #48]	@ 0x30
 8016698:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801669a:	2b00      	cmp	r3, #0
 801669c:	f340 80fa 	ble.w	8016894 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 80166a0:	9826      	ldr	r0, [sp, #152]	@ 0x98
 80166a2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80166a4:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80166a6:	68c6      	ldr	r6, [r0, #12]
 80166a8:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80166aa:	141d      	asrs	r5, r3, #16
 80166ac:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80166b0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80166b2:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 80166b4:	1400      	asrs	r0, r0, #16
 80166b6:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80166ba:	6892      	ldr	r2, [r2, #8]
 80166bc:	f100 813e 	bmi.w	801693c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80166c0:	1e57      	subs	r7, r2, #1
 80166c2:	42b8      	cmp	r0, r7
 80166c4:	f280 813a 	bge.w	801693c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80166c8:	2d00      	cmp	r5, #0
 80166ca:	f2c0 8137 	blt.w	801693c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80166ce:	1e77      	subs	r7, r6, #1
 80166d0:	42bd      	cmp	r5, r7
 80166d2:	f280 8133 	bge.w	801693c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80166d6:	b212      	sxth	r2, r2
 80166d8:	fb05 0002 	mla	r0, r5, r2, r0
 80166dc:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80166de:	f815 a000 	ldrb.w	sl, [r5, r0]
 80166e2:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80166e6:	182e      	adds	r6, r5, r0
 80166e8:	eb04 050a 	add.w	r5, r4, sl
 80166ec:	2b00      	cmp	r3, #0
 80166ee:	f000 8117 	beq.w	8016920 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 80166f2:	f896 c001 	ldrb.w	ip, [r6, #1]
 80166f6:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80166fa:	44a4      	add	ip, r4
 80166fc:	2900      	cmp	r1, #0
 80166fe:	f000 8117 	beq.w	8016930 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8016702:	18b0      	adds	r0, r6, r2
 8016704:	5cb2      	ldrb	r2, [r6, r2]
 8016706:	7840      	ldrb	r0, [r0, #1]
 8016708:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801670c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8016710:	4422      	add	r2, r4
 8016712:	4420      	add	r0, r4
 8016714:	b29b      	uxth	r3, r3
 8016716:	b289      	uxth	r1, r1
 8016718:	fb03 f901 	mul.w	r9, r3, r1
 801671c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8016720:	011b      	lsls	r3, r3, #4
 8016722:	b289      	uxth	r1, r1
 8016724:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8016728:	f895 b002 	ldrb.w	fp, [r5, #2]
 801672c:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801672e:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8016732:	f8b6 e000 	ldrh.w	lr, [r6]
 8016736:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 801673a:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 801673e:	eba3 0309 	sub.w	r3, r3, r9
 8016742:	b29b      	uxth	r3, r3
 8016744:	eba8 0801 	sub.w	r8, r8, r1
 8016748:	fa1f f888 	uxth.w	r8, r8
 801674c:	435f      	muls	r7, r3
 801674e:	fb08 770b 	mla	r7, r8, fp, r7
 8016752:	f892 b002 	ldrb.w	fp, [r2, #2]
 8016756:	9310      	str	r3, [sp, #64]	@ 0x40
 8016758:	fb01 770b 	mla	r7, r1, fp, r7
 801675c:	f890 b002 	ldrb.w	fp, [r0, #2]
 8016760:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8016762:	fb09 770b 	mla	r7, r9, fp, r7
 8016766:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801676a:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801676e:	fb1b fb03 	smulbb	fp, fp, r3
 8016772:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8016776:	fb07 b706 	mla	r7, r7, r6, fp
 801677a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801677c:	f895 b001 	ldrb.w	fp, [r5, #1]
 8016780:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8016784:	f89c c000 	ldrb.w	ip, [ip]
 8016788:	435d      	muls	r5, r3
 801678a:	fb08 550b 	mla	r5, r8, fp, r5
 801678e:	f892 b001 	ldrb.w	fp, [r2, #1]
 8016792:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8016794:	fb01 550b 	mla	r5, r1, fp, r5
 8016798:	f890 b001 	ldrb.w	fp, [r0, #1]
 801679c:	fb09 550b 	mla	r5, r9, fp, r5
 80167a0:	ea4f 0bee 	mov.w	fp, lr, asr #3
 80167a4:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 80167a8:	fb1b fb03 	smulbb	fp, fp, r3
 80167ac:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80167ae:	fb03 f30c 	mul.w	r3, r3, ip
 80167b2:	f892 c000 	ldrb.w	ip, [r2]
 80167b6:	fb08 330a 	mla	r3, r8, sl, r3
 80167ba:	fb01 330c 	mla	r3, r1, ip, r3
 80167be:	f890 c000 	ldrb.w	ip, [r0]
 80167c2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80167c6:	fb09 3c0c 	mla	ip, r9, ip, r3
 80167ca:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80167cc:	fa5f fe8e 	uxtb.w	lr, lr
 80167d0:	b2bf      	uxth	r7, r7
 80167d2:	fb1e fe03 	smulbb	lr, lr, r3
 80167d6:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80167da:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80167de:	fb05 b506 	mla	r5, r5, r6, fp
 80167e2:	1c7b      	adds	r3, r7, #1
 80167e4:	fb0c e606 	mla	r6, ip, r6, lr
 80167e8:	b2ad      	uxth	r5, r5
 80167ea:	b2b6      	uxth	r6, r6
 80167ec:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80167f0:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 80167f4:	f105 0b01 	add.w	fp, r5, #1
 80167f8:	1c77      	adds	r7, r6, #1
 80167fa:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 80167fe:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8016802:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8016806:	096d      	lsrs	r5, r5, #5
 8016808:	431f      	orrs	r7, r3
 801680a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801680e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8016810:	433d      	orrs	r5, r7
 8016812:	801d      	strh	r5, [r3, #0]
 8016814:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8016816:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8016818:	3302      	adds	r3, #2
 801681a:	930c      	str	r3, [sp, #48]	@ 0x30
 801681c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801681e:	4413      	add	r3, r2
 8016820:	931f      	str	r3, [sp, #124]	@ 0x7c
 8016822:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8016824:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8016826:	4413      	add	r3, r2
 8016828:	9320      	str	r3, [sp, #128]	@ 0x80
 801682a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801682c:	3b01      	subs	r3, #1
 801682e:	9311      	str	r3, [sp, #68]	@ 0x44
 8016830:	e732      	b.n	8016698 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8016832:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8016834:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 8016836:	4433      	add	r3, r6
 8016838:	931f      	str	r3, [sp, #124]	@ 0x7c
 801683a:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801683c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801683e:	4433      	add	r3, r6
 8016840:	9320      	str	r3, [sp, #128]	@ 0x80
 8016842:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016844:	3b01      	subs	r3, #1
 8016846:	9309      	str	r3, [sp, #36]	@ 0x24
 8016848:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801684a:	3302      	adds	r3, #2
 801684c:	930a      	str	r3, [sp, #40]	@ 0x28
 801684e:	e702      	b.n	8016656 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8016850:	d027      	beq.n	80168a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8016852:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016854:	9821      	ldr	r0, [sp, #132]	@ 0x84
 8016856:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 8016858:	3b01      	subs	r3, #1
 801685a:	fb00 5003 	mla	r0, r0, r3, r5
 801685e:	1400      	asrs	r0, r0, #16
 8016860:	f53f af16 	bmi.w	8016690 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016864:	3901      	subs	r1, #1
 8016866:	4288      	cmp	r0, r1
 8016868:	f6bf af12 	bge.w	8016690 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801686c:	9922      	ldr	r1, [sp, #136]	@ 0x88
 801686e:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8016870:	fb01 0303 	mla	r3, r1, r3, r0
 8016874:	141b      	asrs	r3, r3, #16
 8016876:	f53f af0b 	bmi.w	8016690 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801687a:	3a01      	subs	r2, #1
 801687c:	4293      	cmp	r3, r2
 801687e:	f6bf af07 	bge.w	8016690 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016882:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016884:	9311      	str	r3, [sp, #68]	@ 0x44
 8016886:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 801688a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801688c:	930c      	str	r3, [sp, #48]	@ 0x30
 801688e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8016890:	2b00      	cmp	r3, #0
 8016892:	dc70      	bgt.n	8016976 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8016894:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016896:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8016898:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801689c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80168a0:	930a      	str	r3, [sp, #40]	@ 0x28
 80168a2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80168a4:	2b00      	cmp	r3, #0
 80168a6:	f340 8124 	ble.w	8016af2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80168aa:	ee30 0a04 	vadd.f32	s0, s0, s8
 80168ae:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80168b2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80168b6:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80168b8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80168bc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80168c0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80168c4:	eef0 6a62 	vmov.f32	s13, s5
 80168c8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80168cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80168d0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80168d4:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 80168d8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80168dc:	eef0 6a43 	vmov.f32	s13, s6
 80168e0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80168e4:	ee12 2a90 	vmov	r2, s5
 80168e8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80168ec:	fb92 f3f3 	sdiv	r3, r2, r3
 80168f0:	ee13 2a10 	vmov	r2, s6
 80168f4:	9321      	str	r3, [sp, #132]	@ 0x84
 80168f6:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80168f8:	fb92 f3f3 	sdiv	r3, r2, r3
 80168fc:	9322      	str	r3, [sp, #136]	@ 0x88
 80168fe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016900:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8016902:	3b01      	subs	r3, #1
 8016904:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016908:	930e      	str	r3, [sp, #56]	@ 0x38
 801690a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801690c:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 8016910:	bf08      	it	eq
 8016912:	4613      	moveq	r3, r2
 8016914:	9309      	str	r3, [sp, #36]	@ 0x24
 8016916:	eeb0 3a67 	vmov.f32	s6, s15
 801691a:	eef0 2a47 	vmov.f32	s5, s14
 801691e:	e68c      	b.n	801663a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8016920:	b149      	cbz	r1, 8016936 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 8016922:	5cb2      	ldrb	r2, [r6, r2]
 8016924:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016928:	4422      	add	r2, r4
 801692a:	4628      	mov	r0, r5
 801692c:	46ac      	mov	ip, r5
 801692e:	e6f1      	b.n	8016714 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8016930:	4628      	mov	r0, r5
 8016932:	462a      	mov	r2, r5
 8016934:	e6ee      	b.n	8016714 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8016936:	4628      	mov	r0, r5
 8016938:	462a      	mov	r2, r5
 801693a:	e7f7      	b.n	801692c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801693c:	1c47      	adds	r7, r0, #1
 801693e:	f53f af69 	bmi.w	8016814 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8016942:	42ba      	cmp	r2, r7
 8016944:	f6ff af66 	blt.w	8016814 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8016948:	1c6f      	adds	r7, r5, #1
 801694a:	f53f af63 	bmi.w	8016814 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801694e:	42be      	cmp	r6, r7
 8016950:	f6ff af60 	blt.w	8016814 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8016954:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8016956:	9002      	str	r0, [sp, #8]
 8016958:	b236      	sxth	r6, r6
 801695a:	b212      	sxth	r2, r2
 801695c:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8016960:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8016964:	9200      	str	r2, [sp, #0]
 8016966:	9601      	str	r6, [sp, #4]
 8016968:	4623      	mov	r3, r4
 801696a:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 801696e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8016970:	f7ff fd59 	bl	8016426 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8016974:	e74e      	b.n	8016814 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8016976:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8016978:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801697a:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801697c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801697e:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8016982:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8016984:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8016988:	142d      	asrs	r5, r5, #16
 801698a:	1400      	asrs	r0, r0, #16
 801698c:	fb02 5000 	mla	r0, r2, r0, r5
 8016990:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8016992:	f815 9000 	ldrb.w	r9, [r5, r0]
 8016996:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801699a:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801699e:	182e      	adds	r6, r5, r0
 80169a0:	eb04 0509 	add.w	r5, r4, r9
 80169a4:	2b00      	cmp	r3, #0
 80169a6:	f000 8096 	beq.w	8016ad6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80169aa:	7877      	ldrb	r7, [r6, #1]
 80169ac:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80169b0:	4427      	add	r7, r4
 80169b2:	2900      	cmp	r1, #0
 80169b4:	f000 8097 	beq.w	8016ae6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 80169b8:	18b0      	adds	r0, r6, r2
 80169ba:	5cb2      	ldrb	r2, [r6, r2]
 80169bc:	7840      	ldrb	r0, [r0, #1]
 80169be:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80169c2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80169c6:	4422      	add	r2, r4
 80169c8:	4420      	add	r0, r4
 80169ca:	b29b      	uxth	r3, r3
 80169cc:	b289      	uxth	r1, r1
 80169ce:	fb03 f801 	mul.w	r8, r3, r1
 80169d2:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80169d4:	f895 b002 	ldrb.w	fp, [r5, #2]
 80169d8:	f8b6 c000 	ldrh.w	ip, [r6]
 80169dc:	78be      	ldrb	r6, [r7, #2]
 80169de:	f814 9009 	ldrb.w	r9, [r4, r9]
 80169e2:	011b      	lsls	r3, r3, #4
 80169e4:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80169e8:	b289      	uxth	r1, r1
 80169ea:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 80169ee:	eba3 0308 	sub.w	r3, r3, r8
 80169f2:	b29b      	uxth	r3, r3
 80169f4:	ebae 0e01 	sub.w	lr, lr, r1
 80169f8:	fa1f fe8e 	uxth.w	lr, lr
 80169fc:	435e      	muls	r6, r3
 80169fe:	fb0e 660b 	mla	r6, lr, fp, r6
 8016a02:	f892 b002 	ldrb.w	fp, [r2, #2]
 8016a06:	9310      	str	r3, [sp, #64]	@ 0x40
 8016a08:	fb01 660b 	mla	r6, r1, fp, r6
 8016a0c:	f890 b002 	ldrb.w	fp, [r0, #2]
 8016a10:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8016a12:	fb08 660b 	mla	r6, r8, fp, r6
 8016a16:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8016a1a:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 8016a1e:	fb1b fb03 	smulbb	fp, fp, r3
 8016a22:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8016a26:	fb06 b60a 	mla	r6, r6, sl, fp
 8016a2a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016a2c:	f895 b001 	ldrb.w	fp, [r5, #1]
 8016a30:	787d      	ldrb	r5, [r7, #1]
 8016a32:	783f      	ldrb	r7, [r7, #0]
 8016a34:	435d      	muls	r5, r3
 8016a36:	fb0e 550b 	mla	r5, lr, fp, r5
 8016a3a:	f892 b001 	ldrb.w	fp, [r2, #1]
 8016a3e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8016a40:	fb01 550b 	mla	r5, r1, fp, r5
 8016a44:	f890 b001 	ldrb.w	fp, [r0, #1]
 8016a48:	fb08 550b 	mla	r5, r8, fp, r5
 8016a4c:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8016a50:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8016a54:	fb1b fb03 	smulbb	fp, fp, r3
 8016a58:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016a5a:	437b      	muls	r3, r7
 8016a5c:	7817      	ldrb	r7, [r2, #0]
 8016a5e:	fb0e 3309 	mla	r3, lr, r9, r3
 8016a62:	fb01 3307 	mla	r3, r1, r7, r3
 8016a66:	7807      	ldrb	r7, [r0, #0]
 8016a68:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016a6c:	fb08 3707 	mla	r7, r8, r7, r3
 8016a70:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8016a72:	fa5f fc8c 	uxtb.w	ip, ip
 8016a76:	fb1c fc03 	smulbb	ip, ip, r3
 8016a7a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8016a7e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8016a82:	fb05 b50a 	mla	r5, r5, sl, fp
 8016a86:	fb07 c70a 	mla	r7, r7, sl, ip
 8016a8a:	b2b6      	uxth	r6, r6
 8016a8c:	b2ad      	uxth	r5, r5
 8016a8e:	b2bf      	uxth	r7, r7
 8016a90:	1c73      	adds	r3, r6, #1
 8016a92:	1c7a      	adds	r2, r7, #1
 8016a94:	f105 0b01 	add.w	fp, r5, #1
 8016a98:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8016a9c:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8016aa0:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8016aa4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016aa8:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8016aac:	096d      	lsrs	r5, r5, #5
 8016aae:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8016ab0:	4316      	orrs	r6, r2
 8016ab2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016ab6:	432e      	orrs	r6, r5
 8016ab8:	f823 6b02 	strh.w	r6, [r3], #2
 8016abc:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8016abe:	930c      	str	r3, [sp, #48]	@ 0x30
 8016ac0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8016ac2:	4413      	add	r3, r2
 8016ac4:	931f      	str	r3, [sp, #124]	@ 0x7c
 8016ac6:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8016ac8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8016aca:	4413      	add	r3, r2
 8016acc:	9320      	str	r3, [sp, #128]	@ 0x80
 8016ace:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8016ad0:	3b01      	subs	r3, #1
 8016ad2:	9311      	str	r3, [sp, #68]	@ 0x44
 8016ad4:	e6db      	b.n	801688e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8016ad6:	b149      	cbz	r1, 8016aec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8016ad8:	5cb2      	ldrb	r2, [r6, r2]
 8016ada:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016ade:	4422      	add	r2, r4
 8016ae0:	4628      	mov	r0, r5
 8016ae2:	462f      	mov	r7, r5
 8016ae4:	e771      	b.n	80169ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8016ae6:	4628      	mov	r0, r5
 8016ae8:	462a      	mov	r2, r5
 8016aea:	e76e      	b.n	80169ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8016aec:	4628      	mov	r0, r5
 8016aee:	462a      	mov	r2, r5
 8016af0:	e7f7      	b.n	8016ae2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8016af2:	b015      	add	sp, #84	@ 0x54
 8016af4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016af8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8016af8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016afc:	880f      	ldrh	r7, [r1, #0]
 8016afe:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 8016b02:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8016b06:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 8016b0a:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8016b0e:	023c      	lsls	r4, r7, #8
 8016b10:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 8016b14:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 8016b18:	017c      	lsls	r4, r7, #5
 8016b1a:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 8016b1e:	00ff      	lsls	r7, r7, #3
 8016b20:	ea4b 0404 	orr.w	r4, fp, r4
 8016b24:	b2ff      	uxtb	r7, r7
 8016b26:	fb05 ca0e 	mla	sl, r5, lr, ip
 8016b2a:	4327      	orrs	r7, r4
 8016b2c:	2d00      	cmp	r5, #0
 8016b2e:	eb02 080a 	add.w	r8, r2, sl
 8016b32:	9701      	str	r7, [sp, #4]
 8016b34:	db7e      	blt.n	8016c34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8016b36:	45a9      	cmp	r9, r5
 8016b38:	dd7c      	ble.n	8016c34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8016b3a:	f1bc 0f00 	cmp.w	ip, #0
 8016b3e:	db77      	blt.n	8016c30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8016b40:	45e6      	cmp	lr, ip
 8016b42:	dd75      	ble.n	8016c30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8016b44:	f812 700a 	ldrb.w	r7, [r2, sl]
 8016b48:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8016b4c:	441f      	add	r7, r3
 8016b4e:	f11c 0201 	adds.w	r2, ip, #1
 8016b52:	d472      	bmi.n	8016c3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8016b54:	4596      	cmp	lr, r2
 8016b56:	dd70      	ble.n	8016c3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8016b58:	2800      	cmp	r0, #0
 8016b5a:	d06e      	beq.n	8016c3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8016b5c:	f898 4001 	ldrb.w	r4, [r8, #1]
 8016b60:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8016b64:	441c      	add	r4, r3
 8016b66:	3501      	adds	r5, #1
 8016b68:	d46b      	bmi.n	8016c42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8016b6a:	45a9      	cmp	r9, r5
 8016b6c:	dd69      	ble.n	8016c42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8016b6e:	2e00      	cmp	r6, #0
 8016b70:	d067      	beq.n	8016c42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8016b72:	f1bc 0f00 	cmp.w	ip, #0
 8016b76:	db62      	blt.n	8016c3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8016b78:	45e6      	cmp	lr, ip
 8016b7a:	dd60      	ble.n	8016c3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8016b7c:	f818 500e 	ldrb.w	r5, [r8, lr]
 8016b80:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8016b84:	441d      	add	r5, r3
 8016b86:	f11c 0201 	adds.w	r2, ip, #1
 8016b8a:	d45d      	bmi.n	8016c48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8016b8c:	4596      	cmp	lr, r2
 8016b8e:	dd5b      	ble.n	8016c48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8016b90:	2800      	cmp	r0, #0
 8016b92:	d059      	beq.n	8016c48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8016b94:	44c6      	add	lr, r8
 8016b96:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8016b9a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016b9e:	4413      	add	r3, r2
 8016ba0:	b280      	uxth	r0, r0
 8016ba2:	b2b2      	uxth	r2, r6
 8016ba4:	fb00 f602 	mul.w	r6, r0, r2
 8016ba8:	0100      	lsls	r0, r0, #4
 8016baa:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8016bae:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 8016bb2:	1b80      	subs	r0, r0, r6
 8016bb4:	fa1f fc82 	uxth.w	ip, r2
 8016bb8:	b282      	uxth	r2, r0
 8016bba:	78a0      	ldrb	r0, [r4, #2]
 8016bbc:	f897 e002 	ldrb.w	lr, [r7, #2]
 8016bc0:	f897 9000 	ldrb.w	r9, [r7]
 8016bc4:	787f      	ldrb	r7, [r7, #1]
 8016bc6:	eba8 080c 	sub.w	r8, r8, ip
 8016bca:	fa1f f888 	uxth.w	r8, r8
 8016bce:	4350      	muls	r0, r2
 8016bd0:	fb08 0e0e 	mla	lr, r8, lr, r0
 8016bd4:	78a8      	ldrb	r0, [r5, #2]
 8016bd6:	fb0c e000 	mla	r0, ip, r0, lr
 8016bda:	f893 e002 	ldrb.w	lr, [r3, #2]
 8016bde:	fb06 0e0e 	mla	lr, r6, lr, r0
 8016be2:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 8016be6:	f894 e000 	ldrb.w	lr, [r4]
 8016bea:	fb02 fe0e 	mul.w	lr, r2, lr
 8016bee:	fb08 e909 	mla	r9, r8, r9, lr
 8016bf2:	f895 e000 	ldrb.w	lr, [r5]
 8016bf6:	fb0c 990e 	mla	r9, ip, lr, r9
 8016bfa:	f893 e000 	ldrb.w	lr, [r3]
 8016bfe:	785b      	ldrb	r3, [r3, #1]
 8016c00:	fb06 9e0e 	mla	lr, r6, lr, r9
 8016c04:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8016c08:	ea4e 0e00 	orr.w	lr, lr, r0
 8016c0c:	7860      	ldrb	r0, [r4, #1]
 8016c0e:	4350      	muls	r0, r2
 8016c10:	786a      	ldrb	r2, [r5, #1]
 8016c12:	fb08 0007 	mla	r0, r8, r7, r0
 8016c16:	fb0c 0202 	mla	r2, ip, r2, r0
 8016c1a:	fb06 2303 	mla	r3, r6, r3, r2
 8016c1e:	095b      	lsrs	r3, r3, #5
 8016c20:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8016c24:	ea4e 0303 	orr.w	r3, lr, r3
 8016c28:	800b      	strh	r3, [r1, #0]
 8016c2a:	b003      	add	sp, #12
 8016c2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016c30:	af01      	add	r7, sp, #4
 8016c32:	e78c      	b.n	8016b4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8016c34:	ac01      	add	r4, sp, #4
 8016c36:	4627      	mov	r7, r4
 8016c38:	e795      	b.n	8016b66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8016c3a:	ac01      	add	r4, sp, #4
 8016c3c:	e793      	b.n	8016b66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8016c3e:	ad01      	add	r5, sp, #4
 8016c40:	e7a1      	b.n	8016b86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8016c42:	ab01      	add	r3, sp, #4
 8016c44:	461d      	mov	r5, r3
 8016c46:	e7ab      	b.n	8016ba0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8016c48:	ab01      	add	r3, sp, #4
 8016c4a:	e7a9      	b.n	8016ba0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08016c4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016c4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016c50:	b08f      	sub	sp, #60	@ 0x3c
 8016c52:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 8016c56:	920c      	str	r2, [sp, #48]	@ 0x30
 8016c58:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 8016c5a:	910a      	str	r1, [sp, #40]	@ 0x28
 8016c5c:	9306      	str	r3, [sp, #24]
 8016c5e:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 8016c62:	900d      	str	r0, [sp, #52]	@ 0x34
 8016c64:	6850      	ldr	r0, [r2, #4]
 8016c66:	6812      	ldr	r2, [r2, #0]
 8016c68:	fb00 1303 	mla	r3, r0, r3, r1
 8016c6c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016c70:	9307      	str	r3, [sp, #28]
 8016c72:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8016c74:	681b      	ldr	r3, [r3, #0]
 8016c76:	9308      	str	r3, [sp, #32]
 8016c78:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8016c7a:	685c      	ldr	r4, [r3, #4]
 8016c7c:	3404      	adds	r4, #4
 8016c7e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016c80:	2b00      	cmp	r3, #0
 8016c82:	dc03      	bgt.n	8016c8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8016c84:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8016c86:	2b00      	cmp	r3, #0
 8016c88:	f340 81d6 	ble.w	8017038 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8016c8c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8016c8e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016c92:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016c96:	1e48      	subs	r0, r1, #1
 8016c98:	1e56      	subs	r6, r2, #1
 8016c9a:	9b06      	ldr	r3, [sp, #24]
 8016c9c:	2b00      	cmp	r3, #0
 8016c9e:	f340 80b7 	ble.w	8016e10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8016ca2:	ea5f 472b 	movs.w	r7, fp, asr #16
 8016ca6:	ea4f 4325 	mov.w	r3, r5, asr #16
 8016caa:	d406      	bmi.n	8016cba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8016cac:	4287      	cmp	r7, r0
 8016cae:	da04      	bge.n	8016cba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8016cb0:	2b00      	cmp	r3, #0
 8016cb2:	db02      	blt.n	8016cba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8016cb4:	42b3      	cmp	r3, r6
 8016cb6:	f2c0 80ac 	blt.w	8016e12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8016cba:	3701      	adds	r7, #1
 8016cbc:	f100 809d 	bmi.w	8016dfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8016cc0:	42b9      	cmp	r1, r7
 8016cc2:	f2c0 809a 	blt.w	8016dfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8016cc6:	3301      	adds	r3, #1
 8016cc8:	f100 8097 	bmi.w	8016dfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8016ccc:	429a      	cmp	r2, r3
 8016cce:	f2c0 8094 	blt.w	8016dfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8016cd2:	9b06      	ldr	r3, [sp, #24]
 8016cd4:	930b      	str	r3, [sp, #44]	@ 0x2c
 8016cd6:	9b07      	ldr	r3, [sp, #28]
 8016cd8:	9309      	str	r3, [sp, #36]	@ 0x24
 8016cda:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8016cdc:	2b00      	cmp	r3, #0
 8016cde:	f340 80b5 	ble.w	8016e4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8016ce2:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8016ce4:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8016ce6:	68c7      	ldr	r7, [r0, #12]
 8016ce8:	6892      	ldr	r2, [r2, #8]
 8016cea:	ea5f 402b 	movs.w	r0, fp, asr #16
 8016cee:	ea4f 4625 	mov.w	r6, r5, asr #16
 8016cf2:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8016cf6:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8016cfa:	f100 80fb 	bmi.w	8016ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8016cfe:	f102 3cff 	add.w	ip, r2, #4294967295
 8016d02:	4560      	cmp	r0, ip
 8016d04:	f280 80f6 	bge.w	8016ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8016d08:	2e00      	cmp	r6, #0
 8016d0a:	f2c0 80f3 	blt.w	8016ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8016d0e:	f107 3cff 	add.w	ip, r7, #4294967295
 8016d12:	4566      	cmp	r6, ip
 8016d14:	f280 80ee 	bge.w	8016ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8016d18:	b212      	sxth	r2, r2
 8016d1a:	fb06 0002 	mla	r0, r6, r2, r0
 8016d1e:	9e08      	ldr	r6, [sp, #32]
 8016d20:	1837      	adds	r7, r6, r0
 8016d22:	5c30      	ldrb	r0, [r6, r0]
 8016d24:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8016d28:	eb04 0c08 	add.w	ip, r4, r8
 8016d2c:	2b00      	cmp	r3, #0
 8016d2e:	f000 80d3 	beq.w	8016ed8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8016d32:	787e      	ldrb	r6, [r7, #1]
 8016d34:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8016d38:	4426      	add	r6, r4
 8016d3a:	2900      	cmp	r1, #0
 8016d3c:	f000 80d4 	beq.w	8016ee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8016d40:	18b8      	adds	r0, r7, r2
 8016d42:	5cba      	ldrb	r2, [r7, r2]
 8016d44:	7840      	ldrb	r0, [r0, #1]
 8016d46:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016d4a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8016d4e:	4422      	add	r2, r4
 8016d50:	4420      	add	r0, r4
 8016d52:	b29b      	uxth	r3, r3
 8016d54:	b289      	uxth	r1, r1
 8016d56:	fb03 f901 	mul.w	r9, r3, r1
 8016d5a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8016d5e:	011b      	lsls	r3, r3, #4
 8016d60:	b289      	uxth	r1, r1
 8016d62:	78b7      	ldrb	r7, [r6, #2]
 8016d64:	f89c a002 	ldrb.w	sl, [ip, #2]
 8016d68:	f89c c001 	ldrb.w	ip, [ip, #1]
 8016d6c:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 8016d70:	eba3 0309 	sub.w	r3, r3, r9
 8016d74:	b29b      	uxth	r3, r3
 8016d76:	ebae 0e01 	sub.w	lr, lr, r1
 8016d7a:	fa1f fe8e 	uxth.w	lr, lr
 8016d7e:	435f      	muls	r7, r3
 8016d80:	fb0e 770a 	mla	r7, lr, sl, r7
 8016d84:	f892 a002 	ldrb.w	sl, [r2, #2]
 8016d88:	fb01 770a 	mla	r7, r1, sl, r7
 8016d8c:	f890 a002 	ldrb.w	sl, [r0, #2]
 8016d90:	fb09 7a0a 	mla	sl, r9, sl, r7
 8016d94:	f814 7008 	ldrb.w	r7, [r4, r8]
 8016d98:	f896 8000 	ldrb.w	r8, [r6]
 8016d9c:	7876      	ldrb	r6, [r6, #1]
 8016d9e:	fb03 f808 	mul.w	r8, r3, r8
 8016da2:	fb0e 8807 	mla	r8, lr, r7, r8
 8016da6:	7817      	ldrb	r7, [r2, #0]
 8016da8:	fb01 8807 	mla	r8, r1, r7, r8
 8016dac:	7807      	ldrb	r7, [r0, #0]
 8016dae:	fb09 8707 	mla	r7, r9, r7, r8
 8016db2:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 8016db6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8016dba:	ea47 070a 	orr.w	r7, r7, sl
 8016dbe:	4373      	muls	r3, r6
 8016dc0:	f892 a001 	ldrb.w	sl, [r2, #1]
 8016dc4:	fb0e 330c 	mla	r3, lr, ip, r3
 8016dc8:	fb01 310a 	mla	r1, r1, sl, r3
 8016dcc:	f890 a001 	ldrb.w	sl, [r0, #1]
 8016dd0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016dd2:	fb09 1a0a 	mla	sl, r9, sl, r1
 8016dd6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016dda:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8016dde:	ea47 070a 	orr.w	r7, r7, sl
 8016de2:	801f      	strh	r7, [r3, #0]
 8016de4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016de6:	3302      	adds	r3, #2
 8016de8:	9309      	str	r3, [sp, #36]	@ 0x24
 8016dea:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8016dec:	449b      	add	fp, r3
 8016dee:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8016df0:	441d      	add	r5, r3
 8016df2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8016df4:	3b01      	subs	r3, #1
 8016df6:	930b      	str	r3, [sp, #44]	@ 0x2c
 8016df8:	e76f      	b.n	8016cda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8016dfa:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8016dfc:	449b      	add	fp, r3
 8016dfe:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8016e00:	441d      	add	r5, r3
 8016e02:	9b06      	ldr	r3, [sp, #24]
 8016e04:	3b01      	subs	r3, #1
 8016e06:	9306      	str	r3, [sp, #24]
 8016e08:	9b07      	ldr	r3, [sp, #28]
 8016e0a:	3302      	adds	r3, #2
 8016e0c:	9307      	str	r3, [sp, #28]
 8016e0e:	e744      	b.n	8016c9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8016e10:	d023      	beq.n	8016e5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8016e12:	9b06      	ldr	r3, [sp, #24]
 8016e14:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8016e16:	3b01      	subs	r3, #1
 8016e18:	fb00 b003 	mla	r0, r0, r3, fp
 8016e1c:	1400      	asrs	r0, r0, #16
 8016e1e:	f53f af58 	bmi.w	8016cd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8016e22:	3901      	subs	r1, #1
 8016e24:	4288      	cmp	r0, r1
 8016e26:	f6bf af54 	bge.w	8016cd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8016e2a:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8016e2c:	fb01 5303 	mla	r3, r1, r3, r5
 8016e30:	141b      	asrs	r3, r3, #16
 8016e32:	f53f af4e 	bmi.w	8016cd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8016e36:	3a01      	subs	r2, #1
 8016e38:	4293      	cmp	r3, r2
 8016e3a:	f6bf af4a 	bge.w	8016cd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8016e3e:	9b06      	ldr	r3, [sp, #24]
 8016e40:	9309      	str	r3, [sp, #36]	@ 0x24
 8016e42:	9b07      	ldr	r3, [sp, #28]
 8016e44:	930b      	str	r3, [sp, #44]	@ 0x2c
 8016e46:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016e48:	2b00      	cmp	r3, #0
 8016e4a:	dc70      	bgt.n	8016f2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8016e4c:	9b06      	ldr	r3, [sp, #24]
 8016e4e:	9a07      	ldr	r2, [sp, #28]
 8016e50:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016e54:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016e58:	9307      	str	r3, [sp, #28]
 8016e5a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016e5c:	2b00      	cmp	r3, #0
 8016e5e:	f340 80eb 	ble.w	8017038 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8016e62:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016e66:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8016e6a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8016e6e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8016e70:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016e74:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016e78:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016e7c:	eef0 6a62 	vmov.f32	s13, s5
 8016e80:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016e84:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016e88:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016e8c:	ee16 ba90 	vmov	fp, s13
 8016e90:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016e94:	eef0 6a43 	vmov.f32	s13, s6
 8016e98:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016e9c:	ee12 2a90 	vmov	r2, s5
 8016ea0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016ea4:	fb92 f3f3 	sdiv	r3, r2, r3
 8016ea8:	ee13 2a10 	vmov	r2, s6
 8016eac:	931b      	str	r3, [sp, #108]	@ 0x6c
 8016eae:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8016eb0:	fb92 f3f3 	sdiv	r3, r2, r3
 8016eb4:	931c      	str	r3, [sp, #112]	@ 0x70
 8016eb6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016eb8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8016eba:	3b01      	subs	r3, #1
 8016ebc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016ec0:	930a      	str	r3, [sp, #40]	@ 0x28
 8016ec2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8016ec4:	bf08      	it	eq
 8016ec6:	4613      	moveq	r3, r2
 8016ec8:	ee16 5a90 	vmov	r5, s13
 8016ecc:	9306      	str	r3, [sp, #24]
 8016ece:	eeb0 3a67 	vmov.f32	s6, s15
 8016ed2:	eef0 2a47 	vmov.f32	s5, s14
 8016ed6:	e6d2      	b.n	8016c7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8016ed8:	b149      	cbz	r1, 8016eee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8016eda:	5cba      	ldrb	r2, [r7, r2]
 8016edc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016ee0:	4422      	add	r2, r4
 8016ee2:	4660      	mov	r0, ip
 8016ee4:	4666      	mov	r6, ip
 8016ee6:	e734      	b.n	8016d52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8016ee8:	4660      	mov	r0, ip
 8016eea:	4662      	mov	r2, ip
 8016eec:	e731      	b.n	8016d52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8016eee:	4660      	mov	r0, ip
 8016ef0:	4662      	mov	r2, ip
 8016ef2:	e7f7      	b.n	8016ee4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8016ef4:	f110 0c01 	adds.w	ip, r0, #1
 8016ef8:	f53f af74 	bmi.w	8016de4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016efc:	4562      	cmp	r2, ip
 8016efe:	f6ff af71 	blt.w	8016de4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016f02:	f116 0c01 	adds.w	ip, r6, #1
 8016f06:	f53f af6d 	bmi.w	8016de4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016f0a:	4567      	cmp	r7, ip
 8016f0c:	f6ff af6a 	blt.w	8016de4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016f10:	b23f      	sxth	r7, r7
 8016f12:	b212      	sxth	r2, r2
 8016f14:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8016f18:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8016f1c:	9200      	str	r2, [sp, #0]
 8016f1e:	9701      	str	r7, [sp, #4]
 8016f20:	4623      	mov	r3, r4
 8016f22:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8016f26:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8016f28:	f7ff fde6 	bl	8016af8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8016f2c:	e75a      	b.n	8016de4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016f2e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8016f30:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8016f34:	ea4f 462b 	mov.w	r6, fp, asr #16
 8016f38:	1428      	asrs	r0, r5, #16
 8016f3a:	fb02 6000 	mla	r0, r2, r0, r6
 8016f3e:	9e08      	ldr	r6, [sp, #32]
 8016f40:	f816 8000 	ldrb.w	r8, [r6, r0]
 8016f44:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8016f48:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8016f4c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8016f50:	1837      	adds	r7, r6, r0
 8016f52:	eb04 0c08 	add.w	ip, r4, r8
 8016f56:	2b00      	cmp	r3, #0
 8016f58:	d060      	beq.n	801701c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8016f5a:	787e      	ldrb	r6, [r7, #1]
 8016f5c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8016f60:	4426      	add	r6, r4
 8016f62:	2900      	cmp	r1, #0
 8016f64:	d062      	beq.n	801702c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8016f66:	18b8      	adds	r0, r7, r2
 8016f68:	5cba      	ldrb	r2, [r7, r2]
 8016f6a:	7840      	ldrb	r0, [r0, #1]
 8016f6c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016f70:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8016f74:	4422      	add	r2, r4
 8016f76:	4420      	add	r0, r4
 8016f78:	b29b      	uxth	r3, r3
 8016f7a:	b289      	uxth	r1, r1
 8016f7c:	fb03 f901 	mul.w	r9, r3, r1
 8016f80:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8016f84:	011b      	lsls	r3, r3, #4
 8016f86:	b289      	uxth	r1, r1
 8016f88:	78b7      	ldrb	r7, [r6, #2]
 8016f8a:	f89c a002 	ldrb.w	sl, [ip, #2]
 8016f8e:	f89c c001 	ldrb.w	ip, [ip, #1]
 8016f92:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 8016f96:	eba3 0309 	sub.w	r3, r3, r9
 8016f9a:	b29b      	uxth	r3, r3
 8016f9c:	ebae 0e01 	sub.w	lr, lr, r1
 8016fa0:	fa1f fe8e 	uxth.w	lr, lr
 8016fa4:	435f      	muls	r7, r3
 8016fa6:	fb0e 770a 	mla	r7, lr, sl, r7
 8016faa:	f892 a002 	ldrb.w	sl, [r2, #2]
 8016fae:	fb01 770a 	mla	r7, r1, sl, r7
 8016fb2:	f890 a002 	ldrb.w	sl, [r0, #2]
 8016fb6:	fb09 7a0a 	mla	sl, r9, sl, r7
 8016fba:	f814 7008 	ldrb.w	r7, [r4, r8]
 8016fbe:	f896 8000 	ldrb.w	r8, [r6]
 8016fc2:	7876      	ldrb	r6, [r6, #1]
 8016fc4:	fb03 f808 	mul.w	r8, r3, r8
 8016fc8:	fb0e 8807 	mla	r8, lr, r7, r8
 8016fcc:	7817      	ldrb	r7, [r2, #0]
 8016fce:	fb01 8807 	mla	r8, r1, r7, r8
 8016fd2:	7807      	ldrb	r7, [r0, #0]
 8016fd4:	fb09 8707 	mla	r7, r9, r7, r8
 8016fd8:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 8016fdc:	4373      	muls	r3, r6
 8016fde:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8016fe2:	7856      	ldrb	r6, [r2, #1]
 8016fe4:	ea47 070a 	orr.w	r7, r7, sl
 8016fe8:	fb0e 330c 	mla	r3, lr, ip, r3
 8016fec:	f890 a001 	ldrb.w	sl, [r0, #1]
 8016ff0:	fb01 3306 	mla	r3, r1, r6, r3
 8016ff4:	fb09 3a0a 	mla	sl, r9, sl, r3
 8016ff8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016ffc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8016ffe:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8017002:	ea47 070a 	orr.w	r7, r7, sl
 8017006:	f823 7b02 	strh.w	r7, [r3], #2
 801700a:	930b      	str	r3, [sp, #44]	@ 0x2c
 801700c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801700e:	449b      	add	fp, r3
 8017010:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8017012:	441d      	add	r5, r3
 8017014:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017016:	3b01      	subs	r3, #1
 8017018:	9309      	str	r3, [sp, #36]	@ 0x24
 801701a:	e714      	b.n	8016e46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801701c:	b149      	cbz	r1, 8017032 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801701e:	5cba      	ldrb	r2, [r7, r2]
 8017020:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017024:	4422      	add	r2, r4
 8017026:	4660      	mov	r0, ip
 8017028:	4666      	mov	r6, ip
 801702a:	e7a5      	b.n	8016f78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801702c:	4660      	mov	r0, ip
 801702e:	4662      	mov	r2, ip
 8017030:	e7a2      	b.n	8016f78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8017032:	4660      	mov	r0, ip
 8017034:	4662      	mov	r2, ip
 8017036:	e7f7      	b.n	8017028 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8017038:	b00f      	add	sp, #60	@ 0x3c
 801703a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801703e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801703e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017042:	b085      	sub	sp, #20
 8017044:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 8017048:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 801704c:	9102      	str	r1, [sp, #8]
 801704e:	2c00      	cmp	r4, #0
 8017050:	fb04 710c 	mla	r1, r4, ip, r7
 8017054:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 8017058:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 801705c:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 8017060:	eb02 0e01 	add.w	lr, r2, r1
 8017064:	f2c0 8122 	blt.w	80172ac <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8017068:	45a0      	cmp	r8, r4
 801706a:	f340 811f 	ble.w	80172ac <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801706e:	2f00      	cmp	r7, #0
 8017070:	f2c0 811a 	blt.w	80172a8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8017074:	45bc      	cmp	ip, r7
 8017076:	f340 8117 	ble.w	80172a8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801707a:	5c52      	ldrb	r2, [r2, r1]
 801707c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8017080:	1c7a      	adds	r2, r7, #1
 8017082:	f100 8116 	bmi.w	80172b2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8017086:	4594      	cmp	ip, r2
 8017088:	f340 8113 	ble.w	80172b2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801708c:	2e00      	cmp	r6, #0
 801708e:	f000 8112 	beq.w	80172b6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8017092:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8017096:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801709a:	3401      	adds	r4, #1
 801709c:	f100 810f 	bmi.w	80172be <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80170a0:	45a0      	cmp	r8, r4
 80170a2:	f340 810c 	ble.w	80172be <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80170a6:	2800      	cmp	r0, #0
 80170a8:	f000 810c 	beq.w	80172c4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 80170ac:	2f00      	cmp	r7, #0
 80170ae:	f2c0 8104 	blt.w	80172ba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 80170b2:	45bc      	cmp	ip, r7
 80170b4:	f340 8101 	ble.w	80172ba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 80170b8:	f81e 200c 	ldrb.w	r2, [lr, ip]
 80170bc:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 80170c0:	3701      	adds	r7, #1
 80170c2:	f100 8102 	bmi.w	80172ca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 80170c6:	45bc      	cmp	ip, r7
 80170c8:	f340 80ff 	ble.w	80172ca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 80170cc:	2e00      	cmp	r6, #0
 80170ce:	f000 80fe 	beq.w	80172ce <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 80170d2:	44f4      	add	ip, lr
 80170d4:	f89c 2001 	ldrb.w	r2, [ip, #1]
 80170d8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80170dc:	b2b6      	uxth	r6, r6
 80170de:	b280      	uxth	r0, r0
 80170e0:	fb00 fe06 	mul.w	lr, r0, r6
 80170e4:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80170e8:	0136      	lsls	r6, r6, #4
 80170ea:	eba6 070e 	sub.w	r7, r6, lr
 80170ee:	b280      	uxth	r0, r0
 80170f0:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 80170f4:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80170f8:	b2bf      	uxth	r7, r7
 80170fa:	1a1b      	subs	r3, r3, r0
 80170fc:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8017100:	b29b      	uxth	r3, r3
 8017102:	fb0a f607 	mul.w	r6, sl, r7
 8017106:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801710a:	fb0b 6603 	mla	r6, fp, r3, r6
 801710e:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8017112:	fb00 6609 	mla	r6, r0, r9, r6
 8017116:	fb0e 6608 	mla	r6, lr, r8, r6
 801711a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801711e:	9600      	str	r6, [sp, #0]
 8017120:	2e00      	cmp	r6, #0
 8017122:	f000 80be 	beq.w	80172a2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8017126:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801712a:	fb0b fc0c 	mul.w	ip, fp, ip
 801712e:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8017132:	fb0b f505 	mul.w	r5, fp, r5
 8017136:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801713a:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801713e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8017142:	44dc      	add	ip, fp
 8017144:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017148:	9501      	str	r5, [sp, #4]
 801714a:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801714e:	9503      	str	r5, [sp, #12]
 8017150:	9d01      	ldr	r5, [sp, #4]
 8017152:	9e02      	ldr	r6, [sp, #8]
 8017154:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 8017158:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801715c:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 8017160:	fb0a fc0c 	mul.w	ip, sl, ip
 8017164:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8017168:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801716c:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8017170:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8017174:	4465      	add	r5, ip
 8017176:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801717a:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801717e:	fb09 fc0c 	mul.w	ip, r9, ip
 8017182:	fb09 f904 	mul.w	r9, r9, r4
 8017186:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801718a:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801718e:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8017192:	fb08 f404 	mul.w	r4, r8, r4
 8017196:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801719a:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801719e:	fb08 f802 	mul.w	r8, r8, r2
 80171a2:	fb0a fa01 	mul.w	sl, sl, r1
 80171a6:	0a22      	lsrs	r2, r4, #8
 80171a8:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 80171ac:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80171b0:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 80171b4:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80171b8:	4414      	add	r4, r2
 80171ba:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80171be:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 80171c2:	0a2d      	lsrs	r5, r5, #8
 80171c4:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80171c8:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80171cc:	9a03      	ldr	r2, [sp, #12]
 80171ce:	8836      	ldrh	r6, [r6, #0]
 80171d0:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80171d4:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80171d8:	437d      	muls	r5, r7
 80171da:	4461      	add	r1, ip
 80171dc:	0a24      	lsrs	r4, r4, #8
 80171de:	fb02 5503 	mla	r5, r2, r3, r5
 80171e2:	0a09      	lsrs	r1, r1, #8
 80171e4:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 80171e8:	fb04 540e 	mla	r4, r4, lr, r5
 80171ec:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80171f0:	fb01 4100 	mla	r1, r1, r0, r4
 80171f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80171f8:	0a09      	lsrs	r1, r1, #8
 80171fa:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80171fe:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8017202:	fb07 f70a 	mul.w	r7, r7, sl
 8017206:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801720a:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801720e:	fb03 7101 	mla	r1, r3, r1, r7
 8017212:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017216:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801721a:	fb0e 1e08 	mla	lr, lr, r8, r1
 801721e:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8017222:	fb00 e101 	mla	r1, r0, r1, lr
 8017226:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 801722a:	9a00      	ldr	r2, [sp, #0]
 801722c:	b287      	uxth	r7, r0
 801722e:	437a      	muls	r2, r7
 8017230:	0a09      	lsrs	r1, r1, #8
 8017232:	1c53      	adds	r3, r2, #1
 8017234:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8017238:	4321      	orrs	r1, r4
 801723a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801723e:	1235      	asrs	r5, r6, #8
 8017240:	0c0a      	lsrs	r2, r1, #16
 8017242:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8017246:	b2db      	uxtb	r3, r3
 8017248:	fb12 f207 	smulbb	r2, r2, r7
 801724c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8017250:	fb05 2503 	mla	r5, r5, r3, r2
 8017254:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8017258:	10f2      	asrs	r2, r6, #3
 801725a:	b2c8      	uxtb	r0, r1
 801725c:	00f6      	lsls	r6, r6, #3
 801725e:	fb14 f407 	smulbb	r4, r4, r7
 8017262:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8017266:	b2f6      	uxtb	r6, r6
 8017268:	fb10 f007 	smulbb	r0, r0, r7
 801726c:	fb02 4203 	mla	r2, r2, r3, r4
 8017270:	b2ad      	uxth	r5, r5
 8017272:	fb06 0303 	mla	r3, r6, r3, r0
 8017276:	b299      	uxth	r1, r3
 8017278:	b294      	uxth	r4, r2
 801727a:	1c6b      	adds	r3, r5, #1
 801727c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8017280:	1c62      	adds	r2, r4, #1
 8017282:	1c4b      	adds	r3, r1, #1
 8017284:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8017288:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801728c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8017290:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8017294:	0952      	lsrs	r2, r2, #5
 8017296:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801729a:	432b      	orrs	r3, r5
 801729c:	4313      	orrs	r3, r2
 801729e:	9a02      	ldr	r2, [sp, #8]
 80172a0:	8013      	strh	r3, [r2, #0]
 80172a2:	b005      	add	sp, #20
 80172a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80172a8:	2500      	movs	r5, #0
 80172aa:	e6e9      	b.n	8017080 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 80172ac:	2100      	movs	r1, #0
 80172ae:	460d      	mov	r5, r1
 80172b0:	e6f3      	b.n	801709a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80172b2:	2100      	movs	r1, #0
 80172b4:	e6f1      	b.n	801709a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80172b6:	4631      	mov	r1, r6
 80172b8:	e6ef      	b.n	801709a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80172ba:	2400      	movs	r4, #0
 80172bc:	e700      	b.n	80170c0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 80172be:	2200      	movs	r2, #0
 80172c0:	4614      	mov	r4, r2
 80172c2:	e70b      	b.n	80170dc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80172c4:	4602      	mov	r2, r0
 80172c6:	4604      	mov	r4, r0
 80172c8:	e708      	b.n	80170dc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80172ca:	2200      	movs	r2, #0
 80172cc:	e706      	b.n	80170dc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80172ce:	4632      	mov	r2, r6
 80172d0:	e704      	b.n	80170dc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

080172d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80172d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80172d6:	b09f      	sub	sp, #124	@ 0x7c
 80172d8:	921b      	str	r2, [sp, #108]	@ 0x6c
 80172da:	9309      	str	r3, [sp, #36]	@ 0x24
 80172dc:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 80172de:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 80172e2:	931c      	str	r3, [sp, #112]	@ 0x70
 80172e4:	9119      	str	r1, [sp, #100]	@ 0x64
 80172e6:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 80172ea:	901d      	str	r0, [sp, #116]	@ 0x74
 80172ec:	6850      	ldr	r0, [r2, #4]
 80172ee:	6812      	ldr	r2, [r2, #0]
 80172f0:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 80172f2:	fb00 1303 	mla	r3, r0, r3, r1
 80172f6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80172fa:	930c      	str	r3, [sp, #48]	@ 0x30
 80172fc:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 80172fe:	681b      	ldr	r3, [r3, #0]
 8017300:	9312      	str	r3, [sp, #72]	@ 0x48
 8017302:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8017304:	685e      	ldr	r6, [r3, #4]
 8017306:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 801730a:	930d      	str	r3, [sp, #52]	@ 0x34
 801730c:	3604      	adds	r6, #4
 801730e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8017310:	2b00      	cmp	r3, #0
 8017312:	dc03      	bgt.n	801731c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8017314:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8017316:	2b00      	cmp	r3, #0
 8017318:	f340 8388 	ble.w	8017a2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801731c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801731e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017322:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017326:	1e48      	subs	r0, r1, #1
 8017328:	1e57      	subs	r7, r2, #1
 801732a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801732c:	2b00      	cmp	r3, #0
 801732e:	f340 8195 	ble.w	801765c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8017332:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8017334:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8017338:	ea4f 4325 	mov.w	r3, r5, asr #16
 801733c:	d406      	bmi.n	801734c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801733e:	4584      	cmp	ip, r0
 8017340:	da04      	bge.n	801734c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8017342:	2b00      	cmp	r3, #0
 8017344:	db02      	blt.n	801734c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8017346:	42bb      	cmp	r3, r7
 8017348:	f2c0 8189 	blt.w	801765e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801734c:	f11c 0c01 	adds.w	ip, ip, #1
 8017350:	f100 8177 	bmi.w	8017642 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8017354:	4561      	cmp	r1, ip
 8017356:	f2c0 8174 	blt.w	8017642 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801735a:	3301      	adds	r3, #1
 801735c:	f100 8171 	bmi.w	8017642 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8017360:	429a      	cmp	r2, r3
 8017362:	f2c0 816e 	blt.w	8017642 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8017366:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017368:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801736a:	931a      	str	r3, [sp, #104]	@ 0x68
 801736c:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801736e:	2b00      	cmp	r3, #0
 8017370:	f340 8193 	ble.w	801769a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8017374:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8017376:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801737a:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801737c:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8017380:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8017382:	141b      	asrs	r3, r3, #16
 8017384:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8017388:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801738c:	f100 81d6 	bmi.w	801773c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8017390:	f100 38ff 	add.w	r8, r0, #4294967295
 8017394:	4543      	cmp	r3, r8
 8017396:	f280 81d1 	bge.w	801773c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801739a:	f1bc 0f00 	cmp.w	ip, #0
 801739e:	f2c0 81cd 	blt.w	801773c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80173a2:	f10e 38ff 	add.w	r8, lr, #4294967295
 80173a6:	45c4      	cmp	ip, r8
 80173a8:	f280 81c8 	bge.w	801773c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80173ac:	b200      	sxth	r0, r0
 80173ae:	fb0c 3300 	mla	r3, ip, r0, r3
 80173b2:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80173b4:	eb04 0803 	add.w	r8, r4, r3
 80173b8:	5ce3      	ldrb	r3, [r4, r3]
 80173ba:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80173be:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80173c2:	2a00      	cmp	r2, #0
 80173c4:	f000 81af 	beq.w	8017726 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80173c8:	f898 c001 	ldrb.w	ip, [r8, #1]
 80173cc:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80173d0:	940e      	str	r4, [sp, #56]	@ 0x38
 80173d2:	0e24      	lsrs	r4, r4, #24
 80173d4:	9415      	str	r4, [sp, #84]	@ 0x54
 80173d6:	b179      	cbz	r1, 80173f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80173d8:	eb08 0c00 	add.w	ip, r8, r0
 80173dc:	f818 0000 	ldrb.w	r0, [r8, r0]
 80173e0:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80173e4:	900a      	str	r0, [sp, #40]	@ 0x28
 80173e6:	0e00      	lsrs	r0, r0, #24
 80173e8:	9013      	str	r0, [sp, #76]	@ 0x4c
 80173ea:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80173ee:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80173f2:	900f      	str	r0, [sp, #60]	@ 0x3c
 80173f4:	0e00      	lsrs	r0, r0, #24
 80173f6:	9016      	str	r0, [sp, #88]	@ 0x58
 80173f8:	b292      	uxth	r2, r2
 80173fa:	b289      	uxth	r1, r1
 80173fc:	fb02 f901 	mul.w	r9, r2, r1
 8017400:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8017404:	0112      	lsls	r2, r2, #4
 8017406:	eba2 0809 	sub.w	r8, r2, r9
 801740a:	b289      	uxth	r1, r1
 801740c:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8017410:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8017412:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8017414:	fa1f f888 	uxth.w	r8, r8
 8017418:	1a52      	subs	r2, r2, r1
 801741a:	b292      	uxth	r2, r2
 801741c:	fb08 f000 	mul.w	r0, r8, r0
 8017420:	fb02 000e 	mla	r0, r2, lr, r0
 8017424:	fb01 0004 	mla	r0, r1, r4, r0
 8017428:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801742a:	fb09 0004 	mla	r0, r9, r4, r0
 801742e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8017432:	2800      	cmp	r0, #0
 8017434:	f000 80fa 	beq.w	801762c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8017438:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801743c:	d01b      	beq.n	8017476 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801743e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8017442:	fb0e fa0a 	mul.w	sl, lr, sl
 8017446:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801744a:	fb0e fe03 	mul.w	lr, lr, r3
 801744e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8017452:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8017456:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801745a:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801745e:	4453      	add	r3, sl
 8017460:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8017464:	0a1b      	lsrs	r3, r3, #8
 8017466:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801746a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801746e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8017472:	ea43 030c 	orr.w	r3, r3, ip
 8017476:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8017478:	2cff      	cmp	r4, #255	@ 0xff
 801747a:	d021      	beq.n	80174c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801747c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801747e:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8017482:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8017484:	fb04 fb0b 	mul.w	fp, r4, fp
 8017488:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801748a:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801748e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8017490:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017494:	fb04 fa0a 	mul.w	sl, r4, sl
 8017498:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801749c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80174a0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80174a4:	44de      	add	lr, fp
 80174a6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80174aa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80174ae:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80174b2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80174b6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80174ba:	ea4e 040a 	orr.w	r4, lr, sl
 80174be:	940e      	str	r4, [sp, #56]	@ 0x38
 80174c0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80174c2:	2cff      	cmp	r4, #255	@ 0xff
 80174c4:	d021      	beq.n	801750a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80174c6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80174c8:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 80174cc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80174ce:	fb04 fb0b 	mul.w	fp, r4, fp
 80174d2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80174d4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80174d8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80174da:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80174de:	fb04 fa0a 	mul.w	sl, r4, sl
 80174e2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80174e6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80174ea:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80174ee:	44de      	add	lr, fp
 80174f0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80174f4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80174f8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80174fc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8017500:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8017504:	ea4e 040a 	orr.w	r4, lr, sl
 8017508:	940a      	str	r4, [sp, #40]	@ 0x28
 801750a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801750c:	2cff      	cmp	r4, #255	@ 0xff
 801750e:	d021      	beq.n	8017554 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8017510:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8017512:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8017516:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8017518:	fb04 fb0b 	mul.w	fp, r4, fp
 801751c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801751e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8017522:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8017524:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017528:	fb04 fa0a 	mul.w	sl, r4, sl
 801752c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8017530:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8017534:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8017538:	44de      	add	lr, fp
 801753a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801753e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017542:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017546:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801754a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801754e:	ea4e 040a 	orr.w	r4, lr, sl
 8017552:	940f      	str	r4, [sp, #60]	@ 0x3c
 8017554:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8017556:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801755a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801755c:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 8017560:	fb08 fc0c 	mul.w	ip, r8, ip
 8017564:	fb02 cc0e 	mla	ip, r2, lr, ip
 8017568:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801756c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801756e:	fb01 cc0e 	mla	ip, r1, lr, ip
 8017572:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8017576:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8017578:	fb09 cc0e 	mla	ip, r9, lr, ip
 801757c:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 8017580:	fb08 f80e 	mul.w	r8, r8, lr
 8017584:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8017588:	fb02 8303 	mla	r3, r2, r3, r8
 801758c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801758e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8017590:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8017594:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8017596:	fb01 330a 	mla	r3, r1, sl, r3
 801759a:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 801759e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80175a0:	fb09 3901 	mla	r9, r9, r1, r3
 80175a4:	4342      	muls	r2, r0
 80175a6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80175aa:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80175ae:	883b      	ldrh	r3, [r7, #0]
 80175b0:	1c50      	adds	r0, r2, #1
 80175b2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80175b6:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 80175ba:	ea4c 0c09 	orr.w	ip, ip, r9
 80175be:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80175c2:	1219      	asrs	r1, r3, #8
 80175c4:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80175c8:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80175cc:	b2c0      	uxtb	r0, r0
 80175ce:	fb12 f204 	smulbb	r2, r2, r4
 80175d2:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80175d6:	fb01 2100 	mla	r1, r1, r0, r2
 80175da:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80175de:	10da      	asrs	r2, r3, #3
 80175e0:	fa5f fc8c 	uxtb.w	ip, ip
 80175e4:	00db      	lsls	r3, r3, #3
 80175e6:	fb1c fc04 	smulbb	ip, ip, r4
 80175ea:	b2db      	uxtb	r3, r3
 80175ec:	b289      	uxth	r1, r1
 80175ee:	fb03 c300 	mla	r3, r3, r0, ip
 80175f2:	fa1f fc83 	uxth.w	ip, r3
 80175f6:	1c4b      	adds	r3, r1, #1
 80175f8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80175fc:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8017600:	fb1e fe04 	smulbb	lr, lr, r4
 8017604:	f10c 0301 	add.w	r3, ip, #1
 8017608:	fb02 e200 	mla	r2, r2, r0, lr
 801760c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8017610:	b292      	uxth	r2, r2
 8017612:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8017616:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801761a:	430b      	orrs	r3, r1
 801761c:	1c51      	adds	r1, r2, #1
 801761e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017622:	0952      	lsrs	r2, r2, #5
 8017624:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8017628:	4313      	orrs	r3, r2
 801762a:	803b      	strh	r3, [r7, #0]
 801762c:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801762e:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8017630:	441a      	add	r2, r3
 8017632:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8017634:	9229      	str	r2, [sp, #164]	@ 0xa4
 8017636:	441d      	add	r5, r3
 8017638:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801763a:	3b01      	subs	r3, #1
 801763c:	3702      	adds	r7, #2
 801763e:	931a      	str	r3, [sp, #104]	@ 0x68
 8017640:	e694      	b.n	801736c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8017642:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8017644:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8017646:	441c      	add	r4, r3
 8017648:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801764a:	9429      	str	r4, [sp, #164]	@ 0xa4
 801764c:	441d      	add	r5, r3
 801764e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017650:	3b01      	subs	r3, #1
 8017652:	9309      	str	r3, [sp, #36]	@ 0x24
 8017654:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8017656:	3302      	adds	r3, #2
 8017658:	930c      	str	r3, [sp, #48]	@ 0x30
 801765a:	e666      	b.n	801732a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801765c:	d024      	beq.n	80176a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801765e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017660:	982b      	ldr	r0, [sp, #172]	@ 0xac
 8017662:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8017664:	3b01      	subs	r3, #1
 8017666:	fb00 4003 	mla	r0, r0, r3, r4
 801766a:	1400      	asrs	r0, r0, #16
 801766c:	f53f ae7b 	bmi.w	8017366 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8017670:	3901      	subs	r1, #1
 8017672:	4288      	cmp	r0, r1
 8017674:	f6bf ae77 	bge.w	8017366 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8017678:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 801767a:	fb01 5303 	mla	r3, r1, r3, r5
 801767e:	141b      	asrs	r3, r3, #16
 8017680:	f53f ae71 	bmi.w	8017366 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8017684:	3a01      	subs	r2, #1
 8017686:	4293      	cmp	r3, r2
 8017688:	f6bf ae6d 	bge.w	8017366 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801768c:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8017690:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 8017694:	f1bb 0f00 	cmp.w	fp, #0
 8017698:	dc70      	bgt.n	801777c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801769a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801769c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80176a0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80176a2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80176a6:	930c      	str	r3, [sp, #48]	@ 0x30
 80176a8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80176aa:	2b00      	cmp	r3, #0
 80176ac:	f340 81be 	ble.w	8017a2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80176b0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80176b4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80176b8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80176bc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80176be:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80176c2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80176c6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80176ca:	eef0 6a62 	vmov.f32	s13, s5
 80176ce:	ee61 7a27 	vmul.f32	s15, s2, s15
 80176d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80176d6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80176da:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 80176de:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80176e2:	eef0 6a43 	vmov.f32	s13, s6
 80176e6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80176ea:	ee12 2a90 	vmov	r2, s5
 80176ee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80176f2:	fb92 f3f3 	sdiv	r3, r2, r3
 80176f6:	ee13 2a10 	vmov	r2, s6
 80176fa:	932b      	str	r3, [sp, #172]	@ 0xac
 80176fc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80176fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8017702:	932c      	str	r3, [sp, #176]	@ 0xb0
 8017704:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8017706:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8017708:	3b01      	subs	r3, #1
 801770a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801770e:	9319      	str	r3, [sp, #100]	@ 0x64
 8017710:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8017712:	bf08      	it	eq
 8017714:	4613      	moveq	r3, r2
 8017716:	ee16 5a90 	vmov	r5, s13
 801771a:	9309      	str	r3, [sp, #36]	@ 0x24
 801771c:	eeb0 3a67 	vmov.f32	s6, s15
 8017720:	eef0 2a47 	vmov.f32	s5, s14
 8017724:	e5f3      	b.n	801730e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8017726:	2900      	cmp	r1, #0
 8017728:	f43f ae66 	beq.w	80173f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801772c:	f818 0000 	ldrb.w	r0, [r8, r0]
 8017730:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8017734:	900a      	str	r0, [sp, #40]	@ 0x28
 8017736:	0e00      	lsrs	r0, r0, #24
 8017738:	9013      	str	r0, [sp, #76]	@ 0x4c
 801773a:	e65d      	b.n	80173f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801773c:	f113 0801 	adds.w	r8, r3, #1
 8017740:	f53f af74 	bmi.w	801762c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8017744:	4540      	cmp	r0, r8
 8017746:	f6ff af71 	blt.w	801762c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801774a:	f11c 0801 	adds.w	r8, ip, #1
 801774e:	f53f af6d 	bmi.w	801762c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8017752:	45c6      	cmp	lr, r8
 8017754:	f6ff af6a 	blt.w	801762c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8017758:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 801775a:	9302      	str	r3, [sp, #8]
 801775c:	b200      	sxth	r0, r0
 801775e:	fa0f f38e 	sxth.w	r3, lr
 8017762:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8017766:	e9cd c203 	strd	ip, r2, [sp, #12]
 801776a:	9301      	str	r3, [sp, #4]
 801776c:	9000      	str	r0, [sp, #0]
 801776e:	4633      	mov	r3, r6
 8017770:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8017772:	981d      	ldr	r0, [sp, #116]	@ 0x74
 8017774:	4639      	mov	r1, r7
 8017776:	f7ff fc62 	bl	801703e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801777a:	e757      	b.n	801762c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801777c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801777e:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8017780:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017784:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8017786:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801778a:	1427      	asrs	r7, r4, #16
 801778c:	142b      	asrs	r3, r5, #16
 801778e:	fb01 7303 	mla	r3, r1, r3, r7
 8017792:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8017794:	18e7      	adds	r7, r4, r3
 8017796:	5ce3      	ldrb	r3, [r4, r3]
 8017798:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801779c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80177a0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80177a4:	2a00      	cmp	r2, #0
 80177a6:	f000 8137 	beq.w	8017a18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80177aa:	f897 e001 	ldrb.w	lr, [r7, #1]
 80177ae:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80177b2:	9410      	str	r4, [sp, #64]	@ 0x40
 80177b4:	0e24      	lsrs	r4, r4, #24
 80177b6:	9417      	str	r4, [sp, #92]	@ 0x5c
 80177b8:	b170      	cbz	r0, 80177d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80177ba:	eb07 0e01 	add.w	lr, r7, r1
 80177be:	5c79      	ldrb	r1, [r7, r1]
 80177c0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80177c4:	910b      	str	r1, [sp, #44]	@ 0x2c
 80177c6:	0e09      	lsrs	r1, r1, #24
 80177c8:	9114      	str	r1, [sp, #80]	@ 0x50
 80177ca:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80177ce:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80177d2:	9111      	str	r1, [sp, #68]	@ 0x44
 80177d4:	0e09      	lsrs	r1, r1, #24
 80177d6:	9118      	str	r1, [sp, #96]	@ 0x60
 80177d8:	b292      	uxth	r2, r2
 80177da:	b280      	uxth	r0, r0
 80177dc:	fb02 f800 	mul.w	r8, r2, r0
 80177e0:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80177e4:	0112      	lsls	r2, r2, #4
 80177e6:	eba2 0e08 	sub.w	lr, r2, r8
 80177ea:	b280      	uxth	r0, r0
 80177ec:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 80177f0:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 80177f2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80177f4:	fa1f fe8e 	uxth.w	lr, lr
 80177f8:	1a12      	subs	r2, r2, r0
 80177fa:	b292      	uxth	r2, r2
 80177fc:	fb0e f101 	mul.w	r1, lr, r1
 8017800:	fb02 110c 	mla	r1, r2, ip, r1
 8017804:	fb00 1104 	mla	r1, r0, r4, r1
 8017808:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801780a:	fb08 1104 	mla	r1, r8, r4, r1
 801780e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8017812:	2900      	cmp	r1, #0
 8017814:	f000 80f5 	beq.w	8017a02 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8017818:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801781c:	d019      	beq.n	8017852 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801781e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8017822:	fb0c fa0a 	mul.w	sl, ip, sl
 8017826:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801782a:	fb0c fc03 	mul.w	ip, ip, r3
 801782e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8017832:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8017836:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801783a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801783e:	4453      	add	r3, sl
 8017840:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8017844:	0a1b      	lsrs	r3, r3, #8
 8017846:	0a3f      	lsrs	r7, r7, #8
 8017848:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801784c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8017850:	433b      	orrs	r3, r7
 8017852:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8017854:	2cff      	cmp	r4, #255	@ 0xff
 8017856:	d020      	beq.n	801789a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8017858:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801785a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801785e:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8017860:	4367      	muls	r7, r4
 8017862:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8017864:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8017868:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801786a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801786e:	fb04 fa0a 	mul.w	sl, r4, sl
 8017872:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8017876:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801787a:	44bc      	add	ip, r7
 801787c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8017880:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8017884:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017888:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801788c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8017890:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8017894:	ea4c 040a 	orr.w	r4, ip, sl
 8017898:	9410      	str	r4, [sp, #64]	@ 0x40
 801789a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801789c:	2cff      	cmp	r4, #255	@ 0xff
 801789e:	d020      	beq.n	80178e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 80178a0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80178a2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80178a6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80178a8:	4367      	muls	r7, r4
 80178aa:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80178ac:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80178b0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80178b2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80178b6:	fb04 fa0a 	mul.w	sl, r4, sl
 80178ba:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80178be:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80178c2:	44bc      	add	ip, r7
 80178c4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80178c8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80178cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80178d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80178d4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80178d8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80178dc:	ea4c 040a 	orr.w	r4, ip, sl
 80178e0:	940b      	str	r4, [sp, #44]	@ 0x2c
 80178e2:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 80178e4:	2cff      	cmp	r4, #255	@ 0xff
 80178e6:	d020      	beq.n	801792a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 80178e8:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80178ea:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80178ee:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 80178f0:	4367      	muls	r7, r4
 80178f2:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80178f4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80178f8:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 80178fa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80178fe:	fb04 fa0a 	mul.w	sl, r4, sl
 8017902:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8017906:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801790a:	44bc      	add	ip, r7
 801790c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8017910:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8017914:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017918:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801791c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8017920:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8017924:	ea4c 040a 	orr.w	r4, ip, sl
 8017928:	9411      	str	r4, [sp, #68]	@ 0x44
 801792a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801792c:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8017930:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8017932:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8017936:	fb0e f707 	mul.w	r7, lr, r7
 801793a:	fb02 770c 	mla	r7, r2, ip, r7
 801793e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8017942:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8017944:	fb00 770c 	mla	r7, r0, ip, r7
 8017948:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801794c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801794e:	fb08 770c 	mla	r7, r8, ip, r7
 8017952:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 8017956:	fb0e fe0c 	mul.w	lr, lr, ip
 801795a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801795e:	fb02 e303 	mla	r3, r2, r3, lr
 8017962:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8017964:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8017966:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801796a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801796c:	fb00 330a 	mla	r3, r0, sl, r3
 8017970:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 8017974:	fb08 3c0c 	mla	ip, r8, ip, r3
 8017978:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801797a:	f8b9 0000 	ldrh.w	r0, [r9]
 801797e:	434b      	muls	r3, r1
 8017980:	0a3f      	lsrs	r7, r7, #8
 8017982:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017986:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801798a:	1c59      	adds	r1, r3, #1
 801798c:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8017990:	ea47 070c 	orr.w	r7, r7, ip
 8017994:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8017998:	1202      	asrs	r2, r0, #8
 801799a:	0c3b      	lsrs	r3, r7, #16
 801799c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80179a0:	b2c9      	uxtb	r1, r1
 80179a2:	fb13 f304 	smulbb	r3, r3, r4
 80179a6:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80179aa:	fb02 3201 	mla	r2, r2, r1, r3
 80179ae:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80179b2:	10c3      	asrs	r3, r0, #3
 80179b4:	b2ff      	uxtb	r7, r7
 80179b6:	00c0      	lsls	r0, r0, #3
 80179b8:	b292      	uxth	r2, r2
 80179ba:	fb1c fc04 	smulbb	ip, ip, r4
 80179be:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80179c2:	b2c0      	uxtb	r0, r0
 80179c4:	fb17 f704 	smulbb	r7, r7, r4
 80179c8:	fb03 c301 	mla	r3, r3, r1, ip
 80179cc:	fb00 7001 	mla	r0, r0, r1, r7
 80179d0:	f102 0c01 	add.w	ip, r2, #1
 80179d4:	b280      	uxth	r0, r0
 80179d6:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80179da:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 80179de:	1c42      	adds	r2, r0, #1
 80179e0:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80179e4:	b29b      	uxth	r3, r3
 80179e6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80179ea:	ea42 020c 	orr.w	r2, r2, ip
 80179ee:	f103 0c01 	add.w	ip, r3, #1
 80179f2:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80179f6:	095b      	lsrs	r3, r3, #5
 80179f8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80179fc:	431a      	orrs	r2, r3
 80179fe:	f8a9 2000 	strh.w	r2, [r9]
 8017a02:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8017a04:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8017a06:	441a      	add	r2, r3
 8017a08:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8017a0a:	9229      	str	r2, [sp, #164]	@ 0xa4
 8017a0c:	f109 0902 	add.w	r9, r9, #2
 8017a10:	441d      	add	r5, r3
 8017a12:	f10b 3bff 	add.w	fp, fp, #4294967295
 8017a16:	e63d      	b.n	8017694 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8017a18:	2800      	cmp	r0, #0
 8017a1a:	f43f aedd 	beq.w	80177d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8017a1e:	5c79      	ldrb	r1, [r7, r1]
 8017a20:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017a24:	910b      	str	r1, [sp, #44]	@ 0x2c
 8017a26:	0e09      	lsrs	r1, r1, #24
 8017a28:	9114      	str	r1, [sp, #80]	@ 0x50
 8017a2a:	e6d5      	b.n	80177d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8017a2c:	b01f      	add	sp, #124	@ 0x7c
 8017a2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017a32 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8017a32:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017a36:	b089      	sub	sp, #36	@ 0x24
 8017a38:	9101      	str	r1, [sp, #4]
 8017a3a:	9801      	ldr	r0, [sp, #4]
 8017a3c:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 8017a40:	8800      	ldrh	r0, [r0, #0]
 8017a42:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 8017a46:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 8017a4a:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 8017a4e:	1206      	asrs	r6, r0, #8
 8017a50:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 8017a54:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8017a58:	9602      	str	r6, [sp, #8]
 8017a5a:	10c6      	asrs	r6, r0, #3
 8017a5c:	00c0      	lsls	r0, r0, #3
 8017a5e:	b2c0      	uxtb	r0, r0
 8017a60:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8017a64:	9004      	str	r0, [sp, #16]
 8017a66:	2f00      	cmp	r7, #0
 8017a68:	fb07 100c 	mla	r0, r7, ip, r1
 8017a6c:	9603      	str	r6, [sp, #12]
 8017a6e:	eb02 0e00 	add.w	lr, r2, r0
 8017a72:	f2c0 810a 	blt.w	8017c8a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8017a76:	45b8      	cmp	r8, r7
 8017a78:	f340 8107 	ble.w	8017c8a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8017a7c:	2900      	cmp	r1, #0
 8017a7e:	f2c0 8102 	blt.w	8017c86 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8017a82:	458c      	cmp	ip, r1
 8017a84:	f340 80ff 	ble.w	8017c86 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8017a88:	5c12      	ldrb	r2, [r2, r0]
 8017a8a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8017a8e:	1c4a      	adds	r2, r1, #1
 8017a90:	f100 80fe 	bmi.w	8017c90 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8017a94:	4594      	cmp	ip, r2
 8017a96:	f340 80fb 	ble.w	8017c90 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8017a9a:	2d00      	cmp	r5, #0
 8017a9c:	f000 80fa 	beq.w	8017c94 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8017aa0:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8017aa4:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8017aa8:	3701      	adds	r7, #1
 8017aaa:	f100 80f7 	bmi.w	8017c9c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8017aae:	45b8      	cmp	r8, r7
 8017ab0:	f340 80f4 	ble.w	8017c9c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8017ab4:	2c00      	cmp	r4, #0
 8017ab6:	f000 80f4 	beq.w	8017ca2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8017aba:	2900      	cmp	r1, #0
 8017abc:	eb0e 020c 	add.w	r2, lr, ip
 8017ac0:	f2c0 80ea 	blt.w	8017c98 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8017ac4:	458c      	cmp	ip, r1
 8017ac6:	f340 80e7 	ble.w	8017c98 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8017aca:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8017ace:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8017ad2:	3101      	adds	r1, #1
 8017ad4:	f100 80e8 	bmi.w	8017ca8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8017ad8:	458c      	cmp	ip, r1
 8017ada:	f340 80e5 	ble.w	8017ca8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8017ade:	2d00      	cmp	r5, #0
 8017ae0:	f000 80e4 	beq.w	8017cac <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8017ae4:	7852      	ldrb	r2, [r2, #1]
 8017ae6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8017aea:	0e0b      	lsrs	r3, r1, #24
 8017aec:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8017af0:	9300      	str	r3, [sp, #0]
 8017af2:	b2a4      	uxth	r4, r4
 8017af4:	b2ab      	uxth	r3, r5
 8017af6:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 8017afa:	fb03 f904 	mul.w	r9, r3, r4
 8017afe:	fb0a f505 	mul.w	r5, sl, r5
 8017b02:	011b      	lsls	r3, r3, #4
 8017b04:	eba3 0e09 	sub.w	lr, r3, r9
 8017b08:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 8017b0c:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 8017b10:	0a28      	lsrs	r0, r5, #8
 8017b12:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8017b16:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 8017b1a:	4405      	add	r5, r0
 8017b1c:	0a2d      	lsrs	r5, r5, #8
 8017b1e:	fb0a f303 	mul.w	r3, sl, r3
 8017b22:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 8017b26:	9005      	str	r0, [sp, #20]
 8017b28:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 8017b2c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8017b30:	0a1b      	lsrs	r3, r3, #8
 8017b32:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8017b36:	9306      	str	r3, [sp, #24]
 8017b38:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 8017b3c:	fb0b f303 	mul.w	r3, fp, r3
 8017b40:	0a1d      	lsrs	r5, r3, #8
 8017b42:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 8017b46:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8017b4a:	fb0b f606 	mul.w	r6, fp, r6
 8017b4e:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 8017b52:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 8017b56:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8017b5a:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8017b5e:	fb08 f707 	mul.w	r7, r8, r7
 8017b62:	441d      	add	r5, r3
 8017b64:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 8017b68:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8017b6c:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 8017b70:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8017b74:	fb08 fc0c 	mul.w	ip, r8, ip
 8017b78:	0a1b      	lsrs	r3, r3, #8
 8017b7a:	9307      	str	r3, [sp, #28]
 8017b7c:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8017b80:	0e0b      	lsrs	r3, r1, #24
 8017b82:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 8017b86:	435f      	muls	r7, r3
 8017b88:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8017b8c:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8017b90:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8017b94:	4460      	add	r0, ip
 8017b96:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8017b9a:	b2a4      	uxth	r4, r4
 8017b9c:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8017ba0:	0a2d      	lsrs	r5, r5, #8
 8017ba2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8017ba6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8017baa:	fa1f fe8e 	uxth.w	lr, lr
 8017bae:	4359      	muls	r1, r3
 8017bb0:	1b12      	subs	r2, r2, r4
 8017bb2:	9b05      	ldr	r3, [sp, #20]
 8017bb4:	44bc      	add	ip, r7
 8017bb6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8017bba:	b292      	uxth	r2, r2
 8017bbc:	fb05 f50e 	mul.w	r5, r5, lr
 8017bc0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017bc4:	fb03 5502 	mla	r5, r3, r2, r5
 8017bc8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8017bcc:	9b06      	ldr	r3, [sp, #24]
 8017bce:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 8017bd2:	0a36      	lsrs	r6, r6, #8
 8017bd4:	0a00      	lsrs	r0, r0, #8
 8017bd6:	fb0c 5509 	mla	r5, ip, r9, r5
 8017bda:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8017bde:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8017be2:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 8017be6:	fb00 5504 	mla	r5, r0, r4, r5
 8017bea:	fb0e f606 	mul.w	r6, lr, r6
 8017bee:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 8017bf2:	0a09      	lsrs	r1, r1, #8
 8017bf4:	9b07      	ldr	r3, [sp, #28]
 8017bf6:	fb02 6000 	mla	r0, r2, r0, r6
 8017bfa:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8017bfe:	fb09 0001 	mla	r0, r9, r1, r0
 8017c02:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8017c06:	fb0e fe0b 	mul.w	lr, lr, fp
 8017c0a:	fb04 0003 	mla	r0, r4, r3, r0
 8017c0e:	fb02 e20a 	mla	r2, r2, sl, lr
 8017c12:	9b00      	ldr	r3, [sp, #0]
 8017c14:	fb04 2408 	mla	r4, r4, r8, r2
 8017c18:	fb09 4903 	mla	r9, r9, r3, r4
 8017c1c:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8017c20:	9b02      	ldr	r3, [sp, #8]
 8017c22:	9a04      	ldr	r2, [sp, #16]
 8017c24:	fa5f f989 	uxtb.w	r9, r9
 8017c28:	fb03 f109 	mul.w	r1, r3, r9
 8017c2c:	9b03      	ldr	r3, [sp, #12]
 8017c2e:	0a2d      	lsrs	r5, r5, #8
 8017c30:	0a00      	lsrs	r0, r0, #8
 8017c32:	fb03 f309 	mul.w	r3, r3, r9
 8017c36:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 8017c3a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8017c3e:	4305      	orrs	r5, r0
 8017c40:	fb02 f909 	mul.w	r9, r2, r9
 8017c44:	1c58      	adds	r0, r3, #1
 8017c46:	1c4a      	adds	r2, r1, #1
 8017c48:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8017c4c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017c50:	0a2b      	lsrs	r3, r5, #8
 8017c52:	0c2a      	lsrs	r2, r5, #16
 8017c54:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8017c58:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8017c5c:	00db      	lsls	r3, r3, #3
 8017c5e:	0212      	lsls	r2, r2, #8
 8017c60:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8017c64:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017c68:	4313      	orrs	r3, r2
 8017c6a:	f109 0201 	add.w	r2, r9, #1
 8017c6e:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8017c72:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8017c76:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8017c7a:	431d      	orrs	r5, r3
 8017c7c:	9b01      	ldr	r3, [sp, #4]
 8017c7e:	801d      	strh	r5, [r3, #0]
 8017c80:	b009      	add	sp, #36	@ 0x24
 8017c82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017c86:	2000      	movs	r0, #0
 8017c88:	e701      	b.n	8017a8e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8017c8a:	2600      	movs	r6, #0
 8017c8c:	4630      	mov	r0, r6
 8017c8e:	e70b      	b.n	8017aa8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8017c90:	2600      	movs	r6, #0
 8017c92:	e709      	b.n	8017aa8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8017c94:	462e      	mov	r6, r5
 8017c96:	e707      	b.n	8017aa8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8017c98:	2700      	movs	r7, #0
 8017c9a:	e71a      	b.n	8017ad2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8017c9c:	2100      	movs	r1, #0
 8017c9e:	460f      	mov	r7, r1
 8017ca0:	e723      	b.n	8017aea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8017ca2:	4621      	mov	r1, r4
 8017ca4:	4627      	mov	r7, r4
 8017ca6:	e720      	b.n	8017aea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8017ca8:	2100      	movs	r1, #0
 8017caa:	e71e      	b.n	8017aea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8017cac:	4629      	mov	r1, r5
 8017cae:	e71c      	b.n	8017aea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08017cb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017cb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017cb4:	b09b      	sub	sp, #108	@ 0x6c
 8017cb6:	9218      	str	r2, [sp, #96]	@ 0x60
 8017cb8:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8017cba:	9116      	str	r1, [sp, #88]	@ 0x58
 8017cbc:	9307      	str	r3, [sp, #28]
 8017cbe:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 8017cc2:	9019      	str	r0, [sp, #100]	@ 0x64
 8017cc4:	6850      	ldr	r0, [r2, #4]
 8017cc6:	6812      	ldr	r2, [r2, #0]
 8017cc8:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 8017cca:	fb00 1303 	mla	r3, r0, r3, r1
 8017cce:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017cd2:	930a      	str	r3, [sp, #40]	@ 0x28
 8017cd4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8017cd6:	681b      	ldr	r3, [r3, #0]
 8017cd8:	930f      	str	r3, [sp, #60]	@ 0x3c
 8017cda:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8017cdc:	685e      	ldr	r6, [r3, #4]
 8017cde:	3604      	adds	r6, #4
 8017ce0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8017ce2:	2b00      	cmp	r3, #0
 8017ce4:	dc03      	bgt.n	8017cee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8017ce6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8017ce8:	2b00      	cmp	r3, #0
 8017cea:	f340 8373 	ble.w	80183d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8017cee:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8017cf0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017cf4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017cf8:	1e48      	subs	r0, r1, #1
 8017cfa:	1e57      	subs	r7, r2, #1
 8017cfc:	9b07      	ldr	r3, [sp, #28]
 8017cfe:	2b00      	cmp	r3, #0
 8017d00:	f340 8190 	ble.w	8018024 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8017d04:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8017d06:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8017d0a:	ea4f 4325 	mov.w	r3, r5, asr #16
 8017d0e:	d406      	bmi.n	8017d1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017d10:	4584      	cmp	ip, r0
 8017d12:	da04      	bge.n	8017d1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017d14:	2b00      	cmp	r3, #0
 8017d16:	db02      	blt.n	8017d1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017d18:	42bb      	cmp	r3, r7
 8017d1a:	f2c0 8184 	blt.w	8018026 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8017d1e:	f11c 0c01 	adds.w	ip, ip, #1
 8017d22:	f100 8172 	bmi.w	801800a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8017d26:	4561      	cmp	r1, ip
 8017d28:	f2c0 816f 	blt.w	801800a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8017d2c:	3301      	adds	r3, #1
 8017d2e:	f100 816c 	bmi.w	801800a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8017d32:	429a      	cmp	r2, r3
 8017d34:	f2c0 8169 	blt.w	801800a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8017d38:	9b07      	ldr	r3, [sp, #28]
 8017d3a:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8017d3c:	9317      	str	r3, [sp, #92]	@ 0x5c
 8017d3e:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8017d40:	2b00      	cmp	r3, #0
 8017d42:	f340 818e 	ble.w	8018062 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8017d46:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8017d48:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017d4c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8017d4e:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8017d52:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8017d54:	141b      	asrs	r3, r3, #16
 8017d56:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8017d5a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8017d5e:	f100 81d1 	bmi.w	8018104 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8017d62:	f101 38ff 	add.w	r8, r1, #4294967295
 8017d66:	4543      	cmp	r3, r8
 8017d68:	f280 81cc 	bge.w	8018104 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8017d6c:	f1bc 0f00 	cmp.w	ip, #0
 8017d70:	f2c0 81c8 	blt.w	8018104 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8017d74:	f10e 38ff 	add.w	r8, lr, #4294967295
 8017d78:	45c4      	cmp	ip, r8
 8017d7a:	f280 81c3 	bge.w	8018104 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8017d7e:	b209      	sxth	r1, r1
 8017d80:	fb0c 3301 	mla	r3, ip, r1, r3
 8017d84:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8017d86:	eb04 0803 	add.w	r8, r4, r3
 8017d8a:	5ce3      	ldrb	r3, [r4, r3]
 8017d8c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8017d90:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8017d94:	2a00      	cmp	r2, #0
 8017d96:	f000 81aa 	beq.w	80180ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8017d9a:	f898 c001 	ldrb.w	ip, [r8, #1]
 8017d9e:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8017da2:	940b      	str	r4, [sp, #44]	@ 0x2c
 8017da4:	0e24      	lsrs	r4, r4, #24
 8017da6:	9412      	str	r4, [sp, #72]	@ 0x48
 8017da8:	b178      	cbz	r0, 8017dca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8017daa:	eb08 0c01 	add.w	ip, r8, r1
 8017dae:	f818 1001 	ldrb.w	r1, [r8, r1]
 8017db2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017db6:	9108      	str	r1, [sp, #32]
 8017db8:	0e09      	lsrs	r1, r1, #24
 8017dba:	9110      	str	r1, [sp, #64]	@ 0x40
 8017dbc:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8017dc0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017dc4:	910c      	str	r1, [sp, #48]	@ 0x30
 8017dc6:	0e09      	lsrs	r1, r1, #24
 8017dc8:	9113      	str	r1, [sp, #76]	@ 0x4c
 8017dca:	b292      	uxth	r2, r2
 8017dcc:	b280      	uxth	r0, r0
 8017dce:	fb02 f900 	mul.w	r9, r2, r0
 8017dd2:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8017dd6:	0112      	lsls	r2, r2, #4
 8017dd8:	eba2 0809 	sub.w	r8, r2, r9
 8017ddc:	b280      	uxth	r0, r0
 8017dde:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8017de2:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8017de4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8017de6:	fa1f f888 	uxth.w	r8, r8
 8017dea:	1a12      	subs	r2, r2, r0
 8017dec:	b292      	uxth	r2, r2
 8017dee:	fb08 f101 	mul.w	r1, r8, r1
 8017df2:	fb02 110e 	mla	r1, r2, lr, r1
 8017df6:	fb00 1104 	mla	r1, r0, r4, r1
 8017dfa:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8017dfc:	fb09 1104 	mla	r1, r9, r4, r1
 8017e00:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8017e04:	2900      	cmp	r1, #0
 8017e06:	f000 80f5 	beq.w	8017ff4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8017e0a:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8017e0e:	d01b      	beq.n	8017e48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017e10:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8017e14:	fb0e fa0a 	mul.w	sl, lr, sl
 8017e18:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8017e1c:	fb0e fe03 	mul.w	lr, lr, r3
 8017e20:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8017e24:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8017e28:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8017e2c:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8017e30:	4453      	add	r3, sl
 8017e32:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8017e36:	0a1b      	lsrs	r3, r3, #8
 8017e38:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017e3c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8017e40:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8017e44:	ea43 030c 	orr.w	r3, r3, ip
 8017e48:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8017e4a:	2cff      	cmp	r4, #255	@ 0xff
 8017e4c:	d021      	beq.n	8017e92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8017e4e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8017e50:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8017e54:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8017e56:	fb04 fb0b 	mul.w	fp, r4, fp
 8017e5a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8017e5c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8017e60:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8017e62:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017e66:	fb04 fa0a 	mul.w	sl, r4, sl
 8017e6a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8017e6e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8017e72:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8017e76:	44de      	add	lr, fp
 8017e78:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017e7c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017e80:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017e84:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8017e88:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8017e8c:	ea4e 040a 	orr.w	r4, lr, sl
 8017e90:	940b      	str	r4, [sp, #44]	@ 0x2c
 8017e92:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8017e94:	2cff      	cmp	r4, #255	@ 0xff
 8017e96:	d021      	beq.n	8017edc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8017e98:	9c08      	ldr	r4, [sp, #32]
 8017e9a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8017e9e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8017ea0:	fb04 fb0b 	mul.w	fp, r4, fp
 8017ea4:	9c08      	ldr	r4, [sp, #32]
 8017ea6:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8017eaa:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8017eac:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017eb0:	fb04 fa0a 	mul.w	sl, r4, sl
 8017eb4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8017eb8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8017ebc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8017ec0:	44de      	add	lr, fp
 8017ec2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017ec6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017eca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017ece:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8017ed2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8017ed6:	ea4e 040a 	orr.w	r4, lr, sl
 8017eda:	9408      	str	r4, [sp, #32]
 8017edc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8017ede:	2cff      	cmp	r4, #255	@ 0xff
 8017ee0:	d021      	beq.n	8017f26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8017ee2:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8017ee4:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8017ee8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8017eea:	fb04 fb0b 	mul.w	fp, r4, fp
 8017eee:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8017ef0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8017ef4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8017ef6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017efa:	fb04 fa0a 	mul.w	sl, r4, sl
 8017efe:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8017f02:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8017f06:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8017f0a:	44de      	add	lr, fp
 8017f0c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017f10:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017f14:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017f18:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8017f1c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8017f20:	ea4e 040a 	orr.w	r4, lr, sl
 8017f24:	940c      	str	r4, [sp, #48]	@ 0x30
 8017f26:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8017f28:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8017f2c:	9c08      	ldr	r4, [sp, #32]
 8017f2e:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 8017f32:	fb08 fc0c 	mul.w	ip, r8, ip
 8017f36:	fb02 cc0e 	mla	ip, r2, lr, ip
 8017f3a:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8017f3e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8017f40:	fb00 cc0e 	mla	ip, r0, lr, ip
 8017f44:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8017f48:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8017f4a:	fb09 cc0e 	mla	ip, r9, lr, ip
 8017f4e:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 8017f52:	fb08 f80e 	mul.w	r8, r8, lr
 8017f56:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8017f5a:	fb02 8303 	mla	r3, r2, r3, r8
 8017f5e:	9a08      	ldr	r2, [sp, #32]
 8017f60:	f8b7 8000 	ldrh.w	r8, [r7]
 8017f64:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8017f68:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8017f6a:	fb00 330a 	mla	r3, r0, sl, r3
 8017f6e:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 8017f72:	fb09 3900 	mla	r9, r9, r0, r3
 8017f76:	43c9      	mvns	r1, r1
 8017f78:	ea4f 2228 	mov.w	r2, r8, asr #8
 8017f7c:	fa5f fe81 	uxtb.w	lr, r1
 8017f80:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017f84:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017f88:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8017f8c:	fb02 f20e 	mul.w	r2, r2, lr
 8017f90:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8017f94:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8017f98:	ea4c 0c09 	orr.w	ip, ip, r9
 8017f9c:	1c53      	adds	r3, r2, #1
 8017f9e:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8017fa2:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8017fa6:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8017faa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8017fae:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8017fb2:	4a63      	ldr	r2, [pc, #396]	@ (8018140 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8017fb4:	fb00 f00e 	mul.w	r0, r0, lr
 8017fb8:	b2db      	uxtb	r3, r3
 8017fba:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8017fbe:	1c43      	adds	r3, r0, #1
 8017fc0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8017fc4:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8017fc8:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8017fcc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8017fd0:	b2c9      	uxtb	r1, r1
 8017fd2:	00db      	lsls	r3, r3, #3
 8017fd4:	fb01 f10e 	mul.w	r1, r1, lr
 8017fd8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017fdc:	4313      	orrs	r3, r2
 8017fde:	1c4a      	adds	r2, r1, #1
 8017fe0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017fe4:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8017fe8:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8017fec:	ea4c 0c03 	orr.w	ip, ip, r3
 8017ff0:	f8a7 c000 	strh.w	ip, [r7]
 8017ff4:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8017ff6:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8017ff8:	441a      	add	r2, r3
 8017ffa:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8017ffc:	9225      	str	r2, [sp, #148]	@ 0x94
 8017ffe:	441d      	add	r5, r3
 8018000:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8018002:	3b01      	subs	r3, #1
 8018004:	3702      	adds	r7, #2
 8018006:	9317      	str	r3, [sp, #92]	@ 0x5c
 8018008:	e699      	b.n	8017d3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801800a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801800c:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801800e:	441c      	add	r4, r3
 8018010:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8018012:	9425      	str	r4, [sp, #148]	@ 0x94
 8018014:	441d      	add	r5, r3
 8018016:	9b07      	ldr	r3, [sp, #28]
 8018018:	3b01      	subs	r3, #1
 801801a:	9307      	str	r3, [sp, #28]
 801801c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801801e:	3302      	adds	r3, #2
 8018020:	930a      	str	r3, [sp, #40]	@ 0x28
 8018022:	e66b      	b.n	8017cfc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8018024:	d024      	beq.n	8018070 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8018026:	9b07      	ldr	r3, [sp, #28]
 8018028:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801802a:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801802c:	3b01      	subs	r3, #1
 801802e:	fb00 4003 	mla	r0, r0, r3, r4
 8018032:	1400      	asrs	r0, r0, #16
 8018034:	f53f ae80 	bmi.w	8017d38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8018038:	3901      	subs	r1, #1
 801803a:	4288      	cmp	r0, r1
 801803c:	f6bf ae7c 	bge.w	8017d38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8018040:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8018042:	fb01 5303 	mla	r3, r1, r3, r5
 8018046:	141b      	asrs	r3, r3, #16
 8018048:	f53f ae76 	bmi.w	8017d38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801804c:	3a01      	subs	r2, #1
 801804e:	4293      	cmp	r3, r2
 8018050:	f6bf ae72 	bge.w	8017d38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8018054:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8018058:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801805c:	f1bb 0f00 	cmp.w	fp, #0
 8018060:	dc70      	bgt.n	8018144 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8018062:	9b07      	ldr	r3, [sp, #28]
 8018064:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018068:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801806a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801806e:	930a      	str	r3, [sp, #40]	@ 0x28
 8018070:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8018072:	2b00      	cmp	r3, #0
 8018074:	f340 81ae 	ble.w	80183d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8018078:	ee30 0a04 	vadd.f32	s0, s0, s8
 801807c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8018080:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018084:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8018086:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801808a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801808e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018092:	eef0 6a62 	vmov.f32	s13, s5
 8018096:	ee61 7a27 	vmul.f32	s15, s2, s15
 801809a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801809e:	ee77 2a62 	vsub.f32	s5, s14, s5
 80180a2:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 80180a6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80180aa:	eef0 6a43 	vmov.f32	s13, s6
 80180ae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80180b2:	ee12 2a90 	vmov	r2, s5
 80180b6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80180ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80180be:	ee13 2a10 	vmov	r2, s6
 80180c2:	9327      	str	r3, [sp, #156]	@ 0x9c
 80180c4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80180c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80180ca:	9328      	str	r3, [sp, #160]	@ 0xa0
 80180cc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80180ce:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80180d0:	3b01      	subs	r3, #1
 80180d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80180d6:	9316      	str	r3, [sp, #88]	@ 0x58
 80180d8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80180da:	bf08      	it	eq
 80180dc:	4613      	moveq	r3, r2
 80180de:	ee16 5a90 	vmov	r5, s13
 80180e2:	9307      	str	r3, [sp, #28]
 80180e4:	eeb0 3a67 	vmov.f32	s6, s15
 80180e8:	eef0 2a47 	vmov.f32	s5, s14
 80180ec:	e5f8      	b.n	8017ce0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80180ee:	2800      	cmp	r0, #0
 80180f0:	f43f ae6b 	beq.w	8017dca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80180f4:	f818 1001 	ldrb.w	r1, [r8, r1]
 80180f8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80180fc:	9108      	str	r1, [sp, #32]
 80180fe:	0e09      	lsrs	r1, r1, #24
 8018100:	9110      	str	r1, [sp, #64]	@ 0x40
 8018102:	e662      	b.n	8017dca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8018104:	f113 0801 	adds.w	r8, r3, #1
 8018108:	f53f af74 	bmi.w	8017ff4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801810c:	4541      	cmp	r1, r8
 801810e:	f6ff af71 	blt.w	8017ff4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8018112:	f11c 0801 	adds.w	r8, ip, #1
 8018116:	f53f af6d 	bmi.w	8017ff4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801811a:	45c6      	cmp	lr, r8
 801811c:	f6ff af6a 	blt.w	8017ff4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8018120:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8018124:	b209      	sxth	r1, r1
 8018126:	fa0f f38e 	sxth.w	r3, lr
 801812a:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801812e:	9301      	str	r3, [sp, #4]
 8018130:	9100      	str	r1, [sp, #0]
 8018132:	4633      	mov	r3, r6
 8018134:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8018136:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8018138:	4639      	mov	r1, r7
 801813a:	f7ff fc7a 	bl	8017a32 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801813e:	e759      	b.n	8017ff4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8018140:	fffff800 	.word	0xfffff800
 8018144:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8018146:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8018148:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801814c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801814e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018152:	1427      	asrs	r7, r4, #16
 8018154:	142b      	asrs	r3, r5, #16
 8018156:	fb01 7303 	mla	r3, r1, r3, r7
 801815a:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801815c:	18e7      	adds	r7, r4, r3
 801815e:	5ce3      	ldrb	r3, [r4, r3]
 8018160:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8018164:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8018168:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801816c:	2a00      	cmp	r2, #0
 801816e:	f000 8127 	beq.w	80183c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8018172:	f897 e001 	ldrb.w	lr, [r7, #1]
 8018176:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801817a:	940d      	str	r4, [sp, #52]	@ 0x34
 801817c:	0e24      	lsrs	r4, r4, #24
 801817e:	9414      	str	r4, [sp, #80]	@ 0x50
 8018180:	b170      	cbz	r0, 80181a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8018182:	eb07 0e01 	add.w	lr, r7, r1
 8018186:	5c79      	ldrb	r1, [r7, r1]
 8018188:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801818c:	9109      	str	r1, [sp, #36]	@ 0x24
 801818e:	0e09      	lsrs	r1, r1, #24
 8018190:	9111      	str	r1, [sp, #68]	@ 0x44
 8018192:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8018196:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801819a:	910e      	str	r1, [sp, #56]	@ 0x38
 801819c:	0e09      	lsrs	r1, r1, #24
 801819e:	9115      	str	r1, [sp, #84]	@ 0x54
 80181a0:	b292      	uxth	r2, r2
 80181a2:	b280      	uxth	r0, r0
 80181a4:	fb02 f800 	mul.w	r8, r2, r0
 80181a8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80181ac:	0112      	lsls	r2, r2, #4
 80181ae:	eba2 0e08 	sub.w	lr, r2, r8
 80181b2:	b280      	uxth	r0, r0
 80181b4:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 80181b8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80181ba:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80181bc:	fa1f fe8e 	uxth.w	lr, lr
 80181c0:	1a09      	subs	r1, r1, r0
 80181c2:	b289      	uxth	r1, r1
 80181c4:	fb0e f202 	mul.w	r2, lr, r2
 80181c8:	fb01 220c 	mla	r2, r1, ip, r2
 80181cc:	fb00 2204 	mla	r2, r0, r4, r2
 80181d0:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80181d2:	fb08 2204 	mla	r2, r8, r4, r2
 80181d6:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80181da:	2a00      	cmp	r2, #0
 80181dc:	f000 80e5 	beq.w	80183aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 80181e0:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 80181e4:	d019      	beq.n	801821a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 80181e6:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 80181ea:	fb0c fa0a 	mul.w	sl, ip, sl
 80181ee:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80181f2:	fb0c fc03 	mul.w	ip, ip, r3
 80181f6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80181fa:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80181fe:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8018202:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8018206:	4453      	add	r3, sl
 8018208:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801820c:	0a1b      	lsrs	r3, r3, #8
 801820e:	0a3f      	lsrs	r7, r7, #8
 8018210:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8018214:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8018218:	433b      	orrs	r3, r7
 801821a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801821c:	2cff      	cmp	r4, #255	@ 0xff
 801821e:	d020      	beq.n	8018262 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8018220:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8018222:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8018226:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8018228:	4367      	muls	r7, r4
 801822a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801822c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8018230:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8018232:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018236:	fb04 fa0a 	mul.w	sl, r4, sl
 801823a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801823e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8018242:	44bc      	add	ip, r7
 8018244:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8018248:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801824c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018250:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018254:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8018258:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801825c:	ea4c 040a 	orr.w	r4, ip, sl
 8018260:	940d      	str	r4, [sp, #52]	@ 0x34
 8018262:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8018264:	2cff      	cmp	r4, #255	@ 0xff
 8018266:	d020      	beq.n	80182aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8018268:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801826a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801826e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8018270:	4367      	muls	r7, r4
 8018272:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8018274:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8018278:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801827a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801827e:	fb04 fa0a 	mul.w	sl, r4, sl
 8018282:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8018286:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801828a:	44bc      	add	ip, r7
 801828c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8018290:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018294:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018298:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801829c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80182a0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80182a4:	ea4c 040a 	orr.w	r4, ip, sl
 80182a8:	9409      	str	r4, [sp, #36]	@ 0x24
 80182aa:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80182ac:	2cff      	cmp	r4, #255	@ 0xff
 80182ae:	d020      	beq.n	80182f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 80182b0:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80182b2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80182b6:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80182b8:	4367      	muls	r7, r4
 80182ba:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80182bc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80182c0:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80182c2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80182c6:	fb04 fa0a 	mul.w	sl, r4, sl
 80182ca:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80182ce:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80182d2:	44bc      	add	ip, r7
 80182d4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80182d8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80182dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80182e0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80182e4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80182e8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80182ec:	ea4c 040a 	orr.w	r4, ip, sl
 80182f0:	940e      	str	r4, [sp, #56]	@ 0x38
 80182f2:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80182f4:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80182f8:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 80182fa:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 80182fe:	fb0e f707 	mul.w	r7, lr, r7
 8018302:	fb01 770c 	mla	r7, r1, ip, r7
 8018306:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801830a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801830c:	fb00 770c 	mla	r7, r0, ip, r7
 8018310:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8018314:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8018316:	fb08 770c 	mla	r7, r8, ip, r7
 801831a:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801831e:	fb0e fe0c 	mul.w	lr, lr, ip
 8018322:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8018326:	fb01 e303 	mla	r3, r1, r3, lr
 801832a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801832c:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8018330:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8018332:	fb00 330a 	mla	r3, r0, sl, r3
 8018336:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801833a:	fb08 3c0c 	mla	ip, r8, ip, r3
 801833e:	f8b9 3000 	ldrh.w	r3, [r9]
 8018342:	43d2      	mvns	r2, r2
 8018344:	1218      	asrs	r0, r3, #8
 8018346:	b2d2      	uxtb	r2, r2
 8018348:	10d9      	asrs	r1, r3, #3
 801834a:	0a3f      	lsrs	r7, r7, #8
 801834c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018350:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8018354:	00db      	lsls	r3, r3, #3
 8018356:	4350      	muls	r0, r2
 8018358:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801835c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8018360:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8018364:	b2db      	uxtb	r3, r3
 8018366:	ea47 070c 	orr.w	r7, r7, ip
 801836a:	4351      	muls	r1, r2
 801836c:	4353      	muls	r3, r2
 801836e:	1c42      	adds	r2, r0, #1
 8018370:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018374:	0c3a      	lsrs	r2, r7, #16
 8018376:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801837a:	4a18      	ldr	r2, [pc, #96]	@ (80183dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801837c:	b2c0      	uxtb	r0, r0
 801837e:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8018382:	1c4a      	adds	r2, r1, #1
 8018384:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018388:	0a3a      	lsrs	r2, r7, #8
 801838a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801838e:	00c9      	lsls	r1, r1, #3
 8018390:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8018394:	4301      	orrs	r1, r0
 8018396:	1c58      	adds	r0, r3, #1
 8018398:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801839c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80183a0:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 80183a4:	4308      	orrs	r0, r1
 80183a6:	f8a9 0000 	strh.w	r0, [r9]
 80183aa:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 80183ac:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 80183ae:	441a      	add	r2, r3
 80183b0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80183b2:	9225      	str	r2, [sp, #148]	@ 0x94
 80183b4:	f109 0902 	add.w	r9, r9, #2
 80183b8:	441d      	add	r5, r3
 80183ba:	f10b 3bff 	add.w	fp, fp, #4294967295
 80183be:	e64d      	b.n	801805c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 80183c0:	2800      	cmp	r0, #0
 80183c2:	f43f aeed 	beq.w	80181a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80183c6:	5c79      	ldrb	r1, [r7, r1]
 80183c8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80183cc:	9109      	str	r1, [sp, #36]	@ 0x24
 80183ce:	0e09      	lsrs	r1, r1, #24
 80183d0:	9111      	str	r1, [sp, #68]	@ 0x44
 80183d2:	e6e5      	b.n	80181a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80183d4:	b01b      	add	sp, #108	@ 0x6c
 80183d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80183da:	bf00      	nop
 80183dc:	fffff800 	.word	0xfffff800

080183e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 80183e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80183e4:	b085      	sub	sp, #20
 80183e6:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 80183ea:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 80183ee:	9103      	str	r1, [sp, #12]
 80183f0:	fb00 7406 	mla	r4, r0, r6, r7
 80183f4:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 80183f8:	2800      	cmp	r0, #0
 80183fa:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 80183fe:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 8018402:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 8018406:	9501      	str	r5, [sp, #4]
 8018408:	eb03 0904 	add.w	r9, r3, r4
 801840c:	f2c0 8150 	blt.w	80186b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8018410:	4583      	cmp	fp, r0
 8018412:	f340 814d 	ble.w	80186b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8018416:	2f00      	cmp	r7, #0
 8018418:	f2c0 8146 	blt.w	80186a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801841c:	42be      	cmp	r6, r7
 801841e:	f340 8143 	ble.w	80186a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8018422:	f813 c004 	ldrb.w	ip, [r3, r4]
 8018426:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801842a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801842e:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 8018432:	4355      	muls	r5, r2
 8018434:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018438:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801843c:	fb0c f203 	mul.w	r2, ip, r3
 8018440:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8018444:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 8018448:	441d      	add	r5, r3
 801844a:	f102 0320 	add.w	r3, r2, #32
 801844e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018452:	0a1b      	lsrs	r3, r3, #8
 8018454:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8018458:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801845c:	431c      	orrs	r4, r3
 801845e:	1c7b      	adds	r3, r7, #1
 8018460:	f100 812b 	bmi.w	80186ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8018464:	429e      	cmp	r6, r3
 8018466:	f340 8128 	ble.w	80186ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801846a:	2900      	cmp	r1, #0
 801846c:	f000 8128 	beq.w	80186c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8018470:	9a01      	ldr	r2, [sp, #4]
 8018472:	f899 3001 	ldrb.w	r3, [r9, #1]
 8018476:	8855      	ldrh	r5, [r2, #2]
 8018478:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801847c:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 8018480:	fb08 f802 	mul.w	r8, r8, r2
 8018484:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018488:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801848c:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8018490:	435d      	muls	r5, r3
 8018492:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8018496:	44d0      	add	r8, sl
 8018498:	f105 0a20 	add.w	sl, r5, #32
 801849c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80184a0:	0a2d      	lsrs	r5, r5, #8
 80184a2:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80184a6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80184aa:	432a      	orrs	r2, r5
 80184ac:	3001      	adds	r0, #1
 80184ae:	f100 810d 	bmi.w	80186cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80184b2:	4583      	cmp	fp, r0
 80184b4:	f340 810a 	ble.w	80186cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80184b8:	f1be 0f00 	cmp.w	lr, #0
 80184bc:	f000 810b 	beq.w	80186d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 80184c0:	2f00      	cmp	r7, #0
 80184c2:	f2c0 8100 	blt.w	80186c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80184c6:	42be      	cmp	r6, r7
 80184c8:	f340 80fd 	ble.w	80186c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80184cc:	9801      	ldr	r0, [sp, #4]
 80184ce:	f819 5006 	ldrb.w	r5, [r9, r6]
 80184d2:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80184d6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80184da:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 80184de:	fb0a fa00 	mul.w	sl, sl, r0
 80184e2:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 80184e6:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80184ea:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80184ee:	fb05 f808 	mul.w	r8, r5, r8
 80184f2:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 80184f6:	4482      	add	sl, r0
 80184f8:	f108 0020 	add.w	r0, r8, #32
 80184fc:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8018500:	0a00      	lsrs	r0, r0, #8
 8018502:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8018506:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801850a:	ea4b 0b00 	orr.w	fp, fp, r0
 801850e:	3701      	adds	r7, #1
 8018510:	f100 80e6 	bmi.w	80186e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8018514:	42be      	cmp	r6, r7
 8018516:	f340 80e3 	ble.w	80186e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801851a:	2900      	cmp	r1, #0
 801851c:	f000 80e3 	beq.w	80186e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8018520:	3601      	adds	r6, #1
 8018522:	9801      	ldr	r0, [sp, #4]
 8018524:	f819 7006 	ldrb.w	r7, [r9, r6]
 8018528:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801852c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8018530:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 8018534:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8018538:	fb09 f906 	mul.w	r9, r9, r6
 801853c:	fb07 f800 	mul.w	r8, r7, r0
 8018540:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 8018544:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8018548:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801854c:	44d1      	add	r9, sl
 801854e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8018552:	f108 0020 	add.w	r0, r8, #32
 8018556:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801855a:	0a00      	lsrs	r0, r0, #8
 801855c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8018560:	4330      	orrs	r0, r6
 8018562:	b28e      	uxth	r6, r1
 8018564:	fa1f f98e 	uxth.w	r9, lr
 8018568:	fb06 f809 	mul.w	r8, r6, r9
 801856c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8018570:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8018574:	0136      	lsls	r6, r6, #4
 8018576:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801857a:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801857e:	9601      	str	r6, [sp, #4]
 8018580:	ea4a 0404 	orr.w	r4, sl, r4
 8018584:	fa1f f689 	uxth.w	r6, r9
 8018588:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801858c:	fb11 f90e 	smulbb	r9, r1, lr
 8018590:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8018594:	9602      	str	r6, [sp, #8]
 8018596:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801859a:	4626      	mov	r6, r4
 801859c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80185a0:	f1ce 0410 	rsb	r4, lr, #16
 80185a4:	1a64      	subs	r4, r4, r1
 80185a6:	ea4a 0202 	orr.w	r2, sl, r2
 80185aa:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80185ae:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80185b2:	434a      	muls	r2, r1
 80185b4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80185b8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80185bc:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80185c0:	fb04 2406 	mla	r4, r4, r6, r2
 80185c4:	ea4a 0000 	orr.w	r0, sl, r0
 80185c8:	fb09 4200 	mla	r2, r9, r0, r4
 80185cc:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80185d0:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 80185d4:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 80185d8:	ea44 0b0b 	orr.w	fp, r4, fp
 80185dc:	9c01      	ldr	r4, [sp, #4]
 80185de:	9e02      	ldr	r6, [sp, #8]
 80185e0:	9903      	ldr	r1, [sp, #12]
 80185e2:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 80185e6:	1ba4      	subs	r4, r4, r6
 80185e8:	9e01      	ldr	r6, [sp, #4]
 80185ea:	8808      	ldrh	r0, [r1, #0]
 80185ec:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 80185f0:	eba6 0608 	sub.w	r6, r6, r8
 80185f4:	b2b6      	uxth	r6, r6
 80185f6:	b2a4      	uxth	r4, r4
 80185f8:	4373      	muls	r3, r6
 80185fa:	fb0c 3304 	mla	r3, ip, r4, r3
 80185fe:	9c02      	ldr	r4, [sp, #8]
 8018600:	fb04 3505 	mla	r5, r4, r5, r3
 8018604:	fb08 5707 	mla	r7, r8, r7, r5
 8018608:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801860c:	b289      	uxth	r1, r1
 801860e:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8018612:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8018616:	434f      	muls	r7, r1
 8018618:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801861c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8018620:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8018624:	1c7b      	adds	r3, r7, #1
 8018626:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801862a:	ea42 0e0e 	orr.w	lr, r2, lr
 801862e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8018632:	fa1f f28e 	uxth.w	r2, lr
 8018636:	1203      	asrs	r3, r0, #8
 8018638:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801863c:	b2ff      	uxtb	r7, r7
 801863e:	1215      	asrs	r5, r2, #8
 8018640:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8018644:	fb13 f307 	smulbb	r3, r3, r7
 8018648:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801864c:	fb05 3501 	mla	r5, r5, r1, r3
 8018650:	10c3      	asrs	r3, r0, #3
 8018652:	10d4      	asrs	r4, r2, #3
 8018654:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8018658:	fb13 f307 	smulbb	r3, r3, r7
 801865c:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8018660:	fb04 3401 	mla	r4, r4, r1, r3
 8018664:	00c3      	lsls	r3, r0, #3
 8018666:	00d2      	lsls	r2, r2, #3
 8018668:	b2db      	uxtb	r3, r3
 801866a:	fb13 f307 	smulbb	r3, r3, r7
 801866e:	b2d2      	uxtb	r2, r2
 8018670:	fb02 3101 	mla	r1, r2, r1, r3
 8018674:	b2ad      	uxth	r5, r5
 8018676:	b289      	uxth	r1, r1
 8018678:	b2a4      	uxth	r4, r4
 801867a:	1c6b      	adds	r3, r5, #1
 801867c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8018680:	1c62      	adds	r2, r4, #1
 8018682:	1c4b      	adds	r3, r1, #1
 8018684:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8018688:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801868c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8018690:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018694:	0964      	lsrs	r4, r4, #5
 8018696:	432b      	orrs	r3, r5
 8018698:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801869c:	9a03      	ldr	r2, [sp, #12]
 801869e:	4323      	orrs	r3, r4
 80186a0:	8013      	strh	r3, [r2, #0]
 80186a2:	b005      	add	sp, #20
 80186a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80186a8:	f04f 0c00 	mov.w	ip, #0
 80186ac:	4664      	mov	r4, ip
 80186ae:	e6d6      	b.n	801845e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 80186b0:	2300      	movs	r3, #0
 80186b2:	469c      	mov	ip, r3
 80186b4:	461a      	mov	r2, r3
 80186b6:	461c      	mov	r4, r3
 80186b8:	e6f8      	b.n	80184ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80186ba:	2300      	movs	r3, #0
 80186bc:	461a      	mov	r2, r3
 80186be:	e6f5      	b.n	80184ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80186c0:	460b      	mov	r3, r1
 80186c2:	460a      	mov	r2, r1
 80186c4:	e6f2      	b.n	80184ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80186c6:	2500      	movs	r5, #0
 80186c8:	46ab      	mov	fp, r5
 80186ca:	e720      	b.n	801850e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 80186cc:	2700      	movs	r7, #0
 80186ce:	463d      	mov	r5, r7
 80186d0:	4638      	mov	r0, r7
 80186d2:	46bb      	mov	fp, r7
 80186d4:	e745      	b.n	8018562 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80186d6:	4677      	mov	r7, lr
 80186d8:	4675      	mov	r5, lr
 80186da:	4670      	mov	r0, lr
 80186dc:	46f3      	mov	fp, lr
 80186de:	e740      	b.n	8018562 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80186e0:	2700      	movs	r7, #0
 80186e2:	4638      	mov	r0, r7
 80186e4:	e73d      	b.n	8018562 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80186e6:	460f      	mov	r7, r1
 80186e8:	4608      	mov	r0, r1
 80186ea:	e73a      	b.n	8018562 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

080186ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80186ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80186f0:	b097      	sub	sp, #92	@ 0x5c
 80186f2:	9214      	str	r2, [sp, #80]	@ 0x50
 80186f4:	9308      	str	r3, [sp, #32]
 80186f6:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 80186f8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 80186fc:	9312      	str	r3, [sp, #72]	@ 0x48
 80186fe:	9111      	str	r1, [sp, #68]	@ 0x44
 8018700:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 8018704:	9015      	str	r0, [sp, #84]	@ 0x54
 8018706:	6850      	ldr	r0, [r2, #4]
 8018708:	6812      	ldr	r2, [r2, #0]
 801870a:	fb00 1303 	mla	r3, r0, r3, r1
 801870e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018712:	9309      	str	r3, [sp, #36]	@ 0x24
 8018714:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8018716:	681b      	ldr	r3, [r3, #0]
 8018718:	930b      	str	r3, [sp, #44]	@ 0x2c
 801871a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801871c:	685b      	ldr	r3, [r3, #4]
 801871e:	930c      	str	r3, [sp, #48]	@ 0x30
 8018720:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8018724:	930a      	str	r3, [sp, #40]	@ 0x28
 8018726:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8018728:	2b00      	cmp	r3, #0
 801872a:	dc03      	bgt.n	8018734 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801872c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801872e:	2b00      	cmp	r3, #0
 8018730:	f340 83cb 	ble.w	8018eca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8018734:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8018736:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801873a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801873e:	1e48      	subs	r0, r1, #1
 8018740:	1e55      	subs	r5, r2, #1
 8018742:	9b08      	ldr	r3, [sp, #32]
 8018744:	2b00      	cmp	r3, #0
 8018746:	f340 81a3 	ble.w	8018a90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801874a:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801874c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801874e:	1436      	asrs	r6, r6, #16
 8018750:	ea4f 4323 	mov.w	r3, r3, asr #16
 8018754:	d406      	bmi.n	8018764 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8018756:	4286      	cmp	r6, r0
 8018758:	da04      	bge.n	8018764 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801875a:	2b00      	cmp	r3, #0
 801875c:	db02      	blt.n	8018764 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801875e:	42ab      	cmp	r3, r5
 8018760:	f2c0 8197 	blt.w	8018a92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8018764:	3601      	adds	r6, #1
 8018766:	f100 8184 	bmi.w	8018a72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801876a:	42b1      	cmp	r1, r6
 801876c:	f2c0 8181 	blt.w	8018a72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8018770:	3301      	adds	r3, #1
 8018772:	f100 817e 	bmi.w	8018a72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8018776:	429a      	cmp	r2, r3
 8018778:	f2c0 817b 	blt.w	8018a72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801877c:	9b08      	ldr	r3, [sp, #32]
 801877e:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8018780:	9313      	str	r3, [sp, #76]	@ 0x4c
 8018782:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8018786:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8018788:	2b00      	cmp	r3, #0
 801878a:	f340 81a4 	ble.w	8018ad6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801878e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8018790:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 8018792:	1418      	asrs	r0, r3, #16
 8018794:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8018796:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801879a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801879c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80187a0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80187a2:	142d      	asrs	r5, r5, #16
 80187a4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80187a8:	f100 81f8 	bmi.w	8018b9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80187ac:	f102 3eff 	add.w	lr, r2, #4294967295
 80187b0:	4575      	cmp	r5, lr
 80187b2:	f280 81f3 	bge.w	8018b9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80187b6:	2800      	cmp	r0, #0
 80187b8:	f2c0 81f0 	blt.w	8018b9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80187bc:	f103 3eff 	add.w	lr, r3, #4294967295
 80187c0:	4570      	cmp	r0, lr
 80187c2:	f280 81eb 	bge.w	8018b9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80187c6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80187c8:	b212      	sxth	r2, r2
 80187ca:	fb00 5002 	mla	r0, r0, r2, r5
 80187ce:	fa1f fe81 	uxth.w	lr, r1
 80187d2:	eb03 0a00 	add.w	sl, r3, r0
 80187d6:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80187da:	f813 9000 	ldrb.w	r9, [r3, r0]
 80187de:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80187e2:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 80187e6:	b29b      	uxth	r3, r3
 80187e8:	f1bc 0f00 	cmp.w	ip, #0
 80187ec:	f000 81b9 	beq.w	8018b62 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80187f0:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80187f4:	940d      	str	r4, [sp, #52]	@ 0x34
 80187f6:	eb0a 0b02 	add.w	fp, sl, r2
 80187fa:	fa1f fa8c 	uxth.w	sl, ip
 80187fe:	fb0a fe0e 	mul.w	lr, sl, lr
 8018802:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8018806:	fa1f fa8a 	uxth.w	sl, sl
 801880a:	eba5 050e 	sub.w	r5, r5, lr
 801880e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8018812:	940e      	str	r4, [sp, #56]	@ 0x38
 8018814:	eba3 030a 	sub.w	r3, r3, sl
 8018818:	b2ad      	uxth	r5, r5
 801881a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801881c:	b29b      	uxth	r3, r3
 801881e:	fb08 f505 	mul.w	r5, r8, r5
 8018822:	fb09 5303 	mla	r3, r9, r3, r5
 8018826:	fb0a 3304 	mla	r3, sl, r4, r3
 801882a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801882c:	fb0e 3304 	mla	r3, lr, r4, r3
 8018830:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018834:	2b00      	cmp	r3, #0
 8018836:	f000 810f 	beq.w	8018a58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801883a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801883c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8018840:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8018844:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8018848:	f000 8190 	beq.w	8018b6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801884c:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8018850:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8018854:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8018858:	fb09 f000 	mul.w	r0, r9, r0
 801885c:	fb0a fe0e 	mul.w	lr, sl, lr
 8018860:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8018864:	f100 0b20 	add.w	fp, r0, #32
 8018868:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801886c:	44ce      	add	lr, r9
 801886e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8018872:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018876:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801887a:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801887e:	ea4e 0909 	orr.w	r9, lr, r9
 8018882:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8018886:	8868      	ldrh	r0, [r5, #2]
 8018888:	d019      	beq.n	80188be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801888a:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801888e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8018892:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8018896:	fb08 f800 	mul.w	r8, r8, r0
 801889a:	fb0a fe0e 	mul.w	lr, sl, lr
 801889e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80188a2:	f108 0b20 	add.w	fp, r8, #32
 80188a6:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 80188aa:	4486      	add	lr, r0
 80188ac:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80188b0:	0a00      	lsrs	r0, r0, #8
 80188b2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80188b6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80188ba:	ea4e 0000 	orr.w	r0, lr, r0
 80188be:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80188c2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80188c6:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 80188ca:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 80188ce:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80188d2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80188d6:	ea4e 0909 	orr.w	r9, lr, r9
 80188da:	ea4a 0000 	orr.w	r0, sl, r0
 80188de:	f1bc 0f00 	cmp.w	ip, #0
 80188e2:	f000 8145 	beq.w	8018b70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 80188e6:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 80188ea:	3a01      	subs	r2, #1
 80188ec:	0052      	lsls	r2, r2, #1
 80188ee:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80188f0:	3202      	adds	r2, #2
 80188f2:	2cff      	cmp	r4, #255	@ 0xff
 80188f4:	eb05 0e02 	add.w	lr, r5, r2
 80188f8:	5aaa      	ldrh	r2, [r5, r2]
 80188fa:	d018      	beq.n	801892e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80188fc:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 8018900:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8018904:	fb04 fa02 	mul.w	sl, r4, r2
 8018908:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801890c:	fb08 f805 	mul.w	r8, r8, r5
 8018910:	f10a 0520 	add.w	r5, sl, #32
 8018914:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8018918:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801891c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8018920:	4442      	add	r2, r8
 8018922:	0a2d      	lsrs	r5, r5, #8
 8018924:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8018928:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801892c:	432a      	orrs	r2, r5
 801892e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8018930:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8018934:	2cff      	cmp	r4, #255	@ 0xff
 8018936:	d01a      	beq.n	801896e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8018938:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801893c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018940:	fb04 fa05 	mul.w	sl, r4, r5
 8018944:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018948:	fb08 f80e 	mul.w	r8, r8, lr
 801894c:	f10a 0e20 	add.w	lr, sl, #32
 8018950:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8018954:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8018958:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801895c:	4445      	add	r5, r8
 801895e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018962:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8018966:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801896a:	ea45 050e 	orr.w	r5, r5, lr
 801896e:	fb1c fe01 	smulbb	lr, ip, r1
 8018972:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8018976:	f1cc 0810 	rsb	r8, ip, #16
 801897a:	eba8 0801 	sub.w	r8, r8, r1
 801897e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8018982:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8018986:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801898a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801898e:	4341      	muls	r1, r0
 8018990:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8018994:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8018998:	ea4a 0202 	orr.w	r2, sl, r2
 801899c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80189a0:	fb09 1108 	mla	r1, r9, r8, r1
 80189a4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80189a8:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 80189ac:	fb0c 1102 	mla	r1, ip, r2, r1
 80189b0:	ea4b 0505 	orr.w	r5, fp, r5
 80189b4:	fb0e 1e05 	mla	lr, lr, r5, r1
 80189b8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80189bc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80189c0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80189c4:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 80189c8:	ea42 0e0e 	orr.w	lr, r2, lr
 80189cc:	fa1f f28e 	uxth.w	r2, lr
 80189d0:	2bff      	cmp	r3, #255	@ 0xff
 80189d2:	d103      	bne.n	80189dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80189d4:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80189d6:	29ff      	cmp	r1, #255	@ 0xff
 80189d8:	f000 80de 	beq.w	8018b98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 80189dc:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80189de:	8838      	ldrh	r0, [r7, #0]
 80189e0:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80189e2:	434b      	muls	r3, r1
 80189e4:	f103 0c01 	add.w	ip, r3, #1
 80189e8:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 80189ec:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80189f0:	fa5f fc83 	uxtb.w	ip, r3
 80189f4:	1203      	asrs	r3, r0, #8
 80189f6:	1215      	asrs	r5, r2, #8
 80189f8:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 80189fc:	fb13 f30c 	smulbb	r3, r3, ip
 8018a00:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8018a04:	fb05 3501 	mla	r5, r5, r1, r3
 8018a08:	10c3      	asrs	r3, r0, #3
 8018a0a:	10d1      	asrs	r1, r2, #3
 8018a0c:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8018a10:	fb13 f30c 	smulbb	r3, r3, ip
 8018a14:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8018a18:	fb01 3104 	mla	r1, r1, r4, r3
 8018a1c:	00c3      	lsls	r3, r0, #3
 8018a1e:	00d2      	lsls	r2, r2, #3
 8018a20:	b2db      	uxtb	r3, r3
 8018a22:	b2d2      	uxtb	r2, r2
 8018a24:	fb13 f30c 	smulbb	r3, r3, ip
 8018a28:	b2ad      	uxth	r5, r5
 8018a2a:	fb02 3304 	mla	r3, r2, r4, r3
 8018a2e:	b29a      	uxth	r2, r3
 8018a30:	1c6b      	adds	r3, r5, #1
 8018a32:	b289      	uxth	r1, r1
 8018a34:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8018a38:	1c53      	adds	r3, r2, #1
 8018a3a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018a3e:	1c4a      	adds	r2, r1, #1
 8018a40:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018a44:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8018a48:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018a4c:	0949      	lsrs	r1, r1, #5
 8018a4e:	432b      	orrs	r3, r5
 8018a50:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8018a54:	430b      	orrs	r3, r1
 8018a56:	803b      	strh	r3, [r7, #0]
 8018a58:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8018a5a:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8018a5c:	4413      	add	r3, r2
 8018a5e:	9321      	str	r3, [sp, #132]	@ 0x84
 8018a60:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8018a62:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8018a64:	441a      	add	r2, r3
 8018a66:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8018a68:	9222      	str	r2, [sp, #136]	@ 0x88
 8018a6a:	3b01      	subs	r3, #1
 8018a6c:	3702      	adds	r7, #2
 8018a6e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8018a70:	e689      	b.n	8018786 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018a72:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8018a74:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 8018a76:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 8018a78:	4433      	add	r3, r6
 8018a7a:	9321      	str	r3, [sp, #132]	@ 0x84
 8018a7c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8018a7e:	441c      	add	r4, r3
 8018a80:	9b08      	ldr	r3, [sp, #32]
 8018a82:	9422      	str	r4, [sp, #136]	@ 0x88
 8018a84:	3b01      	subs	r3, #1
 8018a86:	9308      	str	r3, [sp, #32]
 8018a88:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018a8a:	3302      	adds	r3, #2
 8018a8c:	9309      	str	r3, [sp, #36]	@ 0x24
 8018a8e:	e658      	b.n	8018742 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8018a90:	d028      	beq.n	8018ae4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8018a92:	9b08      	ldr	r3, [sp, #32]
 8018a94:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8018a96:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 8018a98:	3b01      	subs	r3, #1
 8018a9a:	fb00 5003 	mla	r0, r0, r3, r5
 8018a9e:	1400      	asrs	r0, r0, #16
 8018aa0:	f53f ae6c 	bmi.w	801877c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8018aa4:	3901      	subs	r1, #1
 8018aa6:	4288      	cmp	r0, r1
 8018aa8:	f6bf ae68 	bge.w	801877c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8018aac:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8018aae:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8018ab0:	fb01 0303 	mla	r3, r1, r3, r0
 8018ab4:	141b      	asrs	r3, r3, #16
 8018ab6:	f53f ae61 	bmi.w	801877c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8018aba:	3a01      	subs	r2, #1
 8018abc:	4293      	cmp	r3, r2
 8018abe:	f6bf ae5d 	bge.w	801877c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8018ac2:	9b08      	ldr	r3, [sp, #32]
 8018ac4:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8018ac8:	9313      	str	r3, [sp, #76]	@ 0x4c
 8018aca:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8018ace:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8018ad0:	2b00      	cmp	r3, #0
 8018ad2:	f300 8082 	bgt.w	8018bda <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8018ad6:	9b08      	ldr	r3, [sp, #32]
 8018ad8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018adc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018ade:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8018ae2:	9309      	str	r3, [sp, #36]	@ 0x24
 8018ae4:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8018ae6:	2b00      	cmp	r3, #0
 8018ae8:	f340 81ef 	ble.w	8018eca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8018aec:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018af0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8018af4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018af8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8018afa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018afe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018b02:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018b06:	eef0 6a62 	vmov.f32	s13, s5
 8018b0a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018b0e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018b12:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018b16:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 8018b1a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018b1e:	eef0 6a43 	vmov.f32	s13, s6
 8018b22:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018b26:	ee12 2a90 	vmov	r2, s5
 8018b2a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018b2e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018b32:	ee13 2a10 	vmov	r2, s6
 8018b36:	9323      	str	r3, [sp, #140]	@ 0x8c
 8018b38:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8018b3a:	fb92 f3f3 	sdiv	r3, r2, r3
 8018b3e:	9324      	str	r3, [sp, #144]	@ 0x90
 8018b40:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8018b42:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8018b44:	3b01      	subs	r3, #1
 8018b46:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018b4a:	9311      	str	r3, [sp, #68]	@ 0x44
 8018b4c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8018b4e:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 8018b52:	bf08      	it	eq
 8018b54:	4613      	moveq	r3, r2
 8018b56:	9308      	str	r3, [sp, #32]
 8018b58:	eeb0 3a67 	vmov.f32	s6, s15
 8018b5c:	eef0 2a47 	vmov.f32	s5, s14
 8018b60:	e5e1      	b.n	8018726 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8018b62:	fb08 f505 	mul.w	r5, r8, r5
 8018b66:	fb09 5303 	mla	r3, r9, r3, r5
 8018b6a:	e661      	b.n	8018830 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8018b6c:	4681      	mov	r9, r0
 8018b6e:	e688      	b.n	8018882 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8018b70:	f1c1 0210 	rsb	r2, r1, #16
 8018b74:	4341      	muls	r1, r0
 8018b76:	fb09 1902 	mla	r9, r9, r2, r1
 8018b7a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8018b7e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8018b82:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018b86:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8018b8a:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8018b8e:	ea42 0909 	orr.w	r9, r2, r9
 8018b92:	fa1f f289 	uxth.w	r2, r9
 8018b96:	e71b      	b.n	80189d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8018b98:	803a      	strh	r2, [r7, #0]
 8018b9a:	e75d      	b.n	8018a58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8018b9c:	f115 0e01 	adds.w	lr, r5, #1
 8018ba0:	f53f af5a 	bmi.w	8018a58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8018ba4:	4572      	cmp	r2, lr
 8018ba6:	f6ff af57 	blt.w	8018a58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8018baa:	f110 0e01 	adds.w	lr, r0, #1
 8018bae:	f53f af53 	bmi.w	8018a58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8018bb2:	4573      	cmp	r3, lr
 8018bb4:	f6ff af50 	blt.w	8018a58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8018bb8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8018bba:	9502      	str	r5, [sp, #8]
 8018bbc:	b21b      	sxth	r3, r3
 8018bbe:	b212      	sxth	r2, r2
 8018bc0:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8018bc4:	9301      	str	r3, [sp, #4]
 8018bc6:	9200      	str	r2, [sp, #0]
 8018bc8:	e9cd c405 	strd	ip, r4, [sp, #20]
 8018bcc:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 8018bd0:	4639      	mov	r1, r7
 8018bd2:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8018bd4:	f7ff fc04 	bl	80183e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8018bd8:	e73e      	b.n	8018a58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8018bda:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8018bdc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018be0:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8018be2:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8018be6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8018be8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018bec:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8018bee:	141f      	asrs	r7, r3, #16
 8018bf0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8018bf2:	141b      	asrs	r3, r3, #16
 8018bf4:	fb01 3707 	mla	r7, r1, r7, r3
 8018bf8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018bfa:	fa1f fc82 	uxth.w	ip, r2
 8018bfe:	eb03 0a07 	add.w	sl, r3, r7
 8018c02:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8018c06:	f813 9007 	ldrb.w	r9, [r3, r7]
 8018c0a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8018c0e:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 8018c12:	b29b      	uxth	r3, r3
 8018c14:	2d00      	cmp	r5, #0
 8018c16:	f000 813d 	beq.w	8018e94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8018c1a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8018c1e:	940f      	str	r4, [sp, #60]	@ 0x3c
 8018c20:	eb0a 0b01 	add.w	fp, sl, r1
 8018c24:	fa1f fa85 	uxth.w	sl, r5
 8018c28:	fb0a fc0c 	mul.w	ip, sl, ip
 8018c2c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8018c30:	fa1f fa8a 	uxth.w	sl, sl
 8018c34:	eba0 000c 	sub.w	r0, r0, ip
 8018c38:	eba3 030a 	sub.w	r3, r3, sl
 8018c3c:	b280      	uxth	r0, r0
 8018c3e:	fb08 f000 	mul.w	r0, r8, r0
 8018c42:	b29b      	uxth	r3, r3
 8018c44:	fb09 0303 	mla	r3, r9, r3, r0
 8018c48:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8018c4a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8018c4e:	9410      	str	r4, [sp, #64]	@ 0x40
 8018c50:	fb0a 3300 	mla	r3, sl, r0, r3
 8018c54:	fb0c 3304 	mla	r3, ip, r4, r3
 8018c58:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018c5c:	2b00      	cmp	r3, #0
 8018c5e:	f000 810b 	beq.w	8018e78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8018c62:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8018c64:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8018c66:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8018c6a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8018c6e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8018c72:	f000 8114 	beq.w	8018e9e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8018c76:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8018c7a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8018c7e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8018c82:	fb09 f707 	mul.w	r7, r9, r7
 8018c86:	fb0a fc0c 	mul.w	ip, sl, ip
 8018c8a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8018c8e:	f107 0b20 	add.w	fp, r7, #32
 8018c92:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8018c96:	44cc      	add	ip, r9
 8018c98:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8018c9c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018ca0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8018ca4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8018ca8:	ea4c 0909 	orr.w	r9, ip, r9
 8018cac:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8018cb0:	8847      	ldrh	r7, [r0, #2]
 8018cb2:	d019      	beq.n	8018ce8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8018cb4:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8018cb8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8018cbc:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8018cc0:	fb08 f807 	mul.w	r8, r8, r7
 8018cc4:	fb0a fc0c 	mul.w	ip, sl, ip
 8018cc8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8018ccc:	f108 0b20 	add.w	fp, r8, #32
 8018cd0:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8018cd4:	44bc      	add	ip, r7
 8018cd6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8018cda:	0a3f      	lsrs	r7, r7, #8
 8018cdc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8018ce0:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8018ce4:	ea4c 0707 	orr.w	r7, ip, r7
 8018ce8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8018cec:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8018cf0:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8018cf4:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8018cf8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8018cfc:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8018d00:	ea4c 0909 	orr.w	r9, ip, r9
 8018d04:	ea4a 0707 	orr.w	r7, sl, r7
 8018d08:	2d00      	cmp	r5, #0
 8018d0a:	f000 80ca 	beq.w	8018ea2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8018d0e:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 8018d12:	3901      	subs	r1, #1
 8018d14:	0049      	lsls	r1, r1, #1
 8018d16:	3102      	adds	r1, #2
 8018d18:	eb00 0c01 	add.w	ip, r0, r1
 8018d1c:	5a41      	ldrh	r1, [r0, r1]
 8018d1e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8018d20:	28ff      	cmp	r0, #255	@ 0xff
 8018d22:	d019      	beq.n	8018d58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8018d24:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8018d26:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 8018d2a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8018d2e:	fb04 fa01 	mul.w	sl, r4, r1
 8018d32:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018d36:	fb08 f800 	mul.w	r8, r8, r0
 8018d3a:	f10a 0020 	add.w	r0, sl, #32
 8018d3e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8018d42:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8018d46:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8018d4a:	4441      	add	r1, r8
 8018d4c:	0a00      	lsrs	r0, r0, #8
 8018d4e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8018d52:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8018d56:	4301      	orrs	r1, r0
 8018d58:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8018d5a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8018d5e:	2cff      	cmp	r4, #255	@ 0xff
 8018d60:	d01a      	beq.n	8018d98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8018d62:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 8018d66:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8018d6a:	fb04 fa00 	mul.w	sl, r4, r0
 8018d6e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018d72:	fb08 f80c 	mul.w	r8, r8, ip
 8018d76:	f10a 0c20 	add.w	ip, sl, #32
 8018d7a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8018d7e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8018d82:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8018d86:	4440      	add	r0, r8
 8018d88:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018d8c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8018d90:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8018d94:	ea40 000c 	orr.w	r0, r0, ip
 8018d98:	fb15 fc02 	smulbb	ip, r5, r2
 8018d9c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8018da0:	f1c5 0810 	rsb	r8, r5, #16
 8018da4:	eba8 0802 	sub.w	r8, r8, r2
 8018da8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8018dac:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8018db0:	437a      	muls	r2, r7
 8018db2:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8018db6:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8018dba:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8018dbe:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8018dc2:	fb09 2208 	mla	r2, r9, r8, r2
 8018dc6:	ea4a 0101 	orr.w	r1, sl, r1
 8018dca:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8018dce:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8018dd2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8018dd6:	fb05 2201 	mla	r2, r5, r1, r2
 8018dda:	ea4b 0000 	orr.w	r0, fp, r0
 8018dde:	fb0c 2200 	mla	r2, ip, r0, r2
 8018de2:	0d57      	lsrs	r7, r2, #21
 8018de4:	0952      	lsrs	r2, r2, #5
 8018de6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8018dea:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8018dee:	433a      	orrs	r2, r7
 8018df0:	2bff      	cmp	r3, #255	@ 0xff
 8018df2:	b292      	uxth	r2, r2
 8018df4:	d102      	bne.n	8018dfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8018df6:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8018df8:	29ff      	cmp	r1, #255	@ 0xff
 8018dfa:	d063      	beq.n	8018ec4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8018dfc:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8018dfe:	f8be 1000 	ldrh.w	r1, [lr]
 8018e02:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8018e04:	4343      	muls	r3, r0
 8018e06:	1c58      	adds	r0, r3, #1
 8018e08:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8018e0c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8018e10:	1208      	asrs	r0, r1, #8
 8018e12:	b2db      	uxtb	r3, r3
 8018e14:	1215      	asrs	r5, r2, #8
 8018e16:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8018e1a:	fb10 f003 	smulbb	r0, r0, r3
 8018e1e:	10cf      	asrs	r7, r1, #3
 8018e20:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8018e24:	00c9      	lsls	r1, r1, #3
 8018e26:	fb05 0504 	mla	r5, r5, r4, r0
 8018e2a:	b2c9      	uxtb	r1, r1
 8018e2c:	10d0      	asrs	r0, r2, #3
 8018e2e:	00d2      	lsls	r2, r2, #3
 8018e30:	fb11 f103 	smulbb	r1, r1, r3
 8018e34:	b2d2      	uxtb	r2, r2
 8018e36:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8018e3a:	fb02 1204 	mla	r2, r2, r4, r1
 8018e3e:	fb17 f703 	smulbb	r7, r7, r3
 8018e42:	b2ad      	uxth	r5, r5
 8018e44:	b292      	uxth	r2, r2
 8018e46:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8018e4a:	fb00 7004 	mla	r0, r0, r4, r7
 8018e4e:	1c6b      	adds	r3, r5, #1
 8018e50:	1c57      	adds	r7, r2, #1
 8018e52:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8018e56:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8018e5a:	b280      	uxth	r0, r0
 8018e5c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8018e60:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8018e64:	433d      	orrs	r5, r7
 8018e66:	1c47      	adds	r7, r0, #1
 8018e68:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8018e6c:	097f      	lsrs	r7, r7, #5
 8018e6e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8018e72:	433d      	orrs	r5, r7
 8018e74:	f8ae 5000 	strh.w	r5, [lr]
 8018e78:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8018e7a:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8018e7c:	4413      	add	r3, r2
 8018e7e:	9321      	str	r3, [sp, #132]	@ 0x84
 8018e80:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8018e82:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8018e84:	441a      	add	r2, r3
 8018e86:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8018e88:	9222      	str	r2, [sp, #136]	@ 0x88
 8018e8a:	3b01      	subs	r3, #1
 8018e8c:	f10e 0e02 	add.w	lr, lr, #2
 8018e90:	9313      	str	r3, [sp, #76]	@ 0x4c
 8018e92:	e61c      	b.n	8018ace <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8018e94:	fb08 f000 	mul.w	r0, r8, r0
 8018e98:	fb09 0303 	mla	r3, r9, r3, r0
 8018e9c:	e6dc      	b.n	8018c58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8018e9e:	46b9      	mov	r9, r7
 8018ea0:	e704      	b.n	8018cac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8018ea2:	f1c2 0110 	rsb	r1, r2, #16
 8018ea6:	437a      	muls	r2, r7
 8018ea8:	fb09 2901 	mla	r9, r9, r1, r2
 8018eac:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8018eb0:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8018eb4:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8018eb8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8018ebc:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8018ec0:	4302      	orrs	r2, r0
 8018ec2:	e795      	b.n	8018df0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8018ec4:	f8ae 2000 	strh.w	r2, [lr]
 8018ec8:	e7d6      	b.n	8018e78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8018eca:	b017      	add	sp, #92	@ 0x5c
 8018ecc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018ed0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8018ed0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ed4:	b085      	sub	sp, #20
 8018ed6:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 8018eda:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 8018ede:	9103      	str	r1, [sp, #12]
 8018ee0:	fb00 7406 	mla	r4, r0, r6, r7
 8018ee4:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8018ee8:	2800      	cmp	r0, #0
 8018eea:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 8018eee:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 8018ef2:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 8018ef6:	9501      	str	r5, [sp, #4]
 8018ef8:	eb02 0904 	add.w	r9, r2, r4
 8018efc:	f2c0 8141 	blt.w	8019182 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8018f00:	4583      	cmp	fp, r0
 8018f02:	f340 813e 	ble.w	8019182 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8018f06:	2f00      	cmp	r7, #0
 8018f08:	f2c0 8137 	blt.w	801917a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8018f0c:	42be      	cmp	r6, r7
 8018f0e:	f340 8134 	ble.w	801917a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8018f12:	f812 c004 	ldrb.w	ip, [r2, r4]
 8018f16:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8018f1a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8018f1e:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 8018f22:	4355      	muls	r5, r2
 8018f24:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018f28:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 8018f2c:	fb0c f203 	mul.w	r2, ip, r3
 8018f30:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8018f34:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 8018f38:	441d      	add	r5, r3
 8018f3a:	f102 0320 	add.w	r3, r2, #32
 8018f3e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018f42:	0a1b      	lsrs	r3, r3, #8
 8018f44:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8018f48:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018f4c:	431c      	orrs	r4, r3
 8018f4e:	1c7b      	adds	r3, r7, #1
 8018f50:	f100 811c 	bmi.w	801918c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8018f54:	429e      	cmp	r6, r3
 8018f56:	f340 8119 	ble.w	801918c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8018f5a:	2900      	cmp	r1, #0
 8018f5c:	f000 8119 	beq.w	8019192 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8018f60:	9a01      	ldr	r2, [sp, #4]
 8018f62:	f899 3001 	ldrb.w	r3, [r9, #1]
 8018f66:	8855      	ldrh	r5, [r2, #2]
 8018f68:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8018f6c:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 8018f70:	fb08 f802 	mul.w	r8, r8, r2
 8018f74:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018f78:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 8018f7c:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8018f80:	435d      	muls	r5, r3
 8018f82:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8018f86:	44d0      	add	r8, sl
 8018f88:	f105 0a20 	add.w	sl, r5, #32
 8018f8c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8018f90:	0a2d      	lsrs	r5, r5, #8
 8018f92:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8018f96:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018f9a:	432a      	orrs	r2, r5
 8018f9c:	3001      	adds	r0, #1
 8018f9e:	f100 80fe 	bmi.w	801919e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8018fa2:	4583      	cmp	fp, r0
 8018fa4:	f340 80fb 	ble.w	801919e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8018fa8:	f1be 0f00 	cmp.w	lr, #0
 8018fac:	f000 80fc 	beq.w	80191a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8018fb0:	2f00      	cmp	r7, #0
 8018fb2:	f2c0 80f1 	blt.w	8019198 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8018fb6:	42be      	cmp	r6, r7
 8018fb8:	f340 80ee 	ble.w	8019198 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8018fbc:	9801      	ldr	r0, [sp, #4]
 8018fbe:	f819 5006 	ldrb.w	r5, [r9, r6]
 8018fc2:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8018fc6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8018fca:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 8018fce:	fb0a fa00 	mul.w	sl, sl, r0
 8018fd2:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 8018fd6:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8018fda:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8018fde:	fb05 f808 	mul.w	r8, r5, r8
 8018fe2:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 8018fe6:	4482      	add	sl, r0
 8018fe8:	f108 0020 	add.w	r0, r8, #32
 8018fec:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8018ff0:	0a00      	lsrs	r0, r0, #8
 8018ff2:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8018ff6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8018ffa:	ea4b 0b00 	orr.w	fp, fp, r0
 8018ffe:	3701      	adds	r7, #1
 8019000:	f100 80d7 	bmi.w	80191b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8019004:	42be      	cmp	r6, r7
 8019006:	f340 80d4 	ble.w	80191b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801900a:	2900      	cmp	r1, #0
 801900c:	f000 80d4 	beq.w	80191b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8019010:	3601      	adds	r6, #1
 8019012:	9801      	ldr	r0, [sp, #4]
 8019014:	f819 7006 	ldrb.w	r7, [r9, r6]
 8019018:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801901c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8019020:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 8019024:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8019028:	fb09 f906 	mul.w	r9, r9, r6
 801902c:	fb07 f800 	mul.w	r8, r7, r0
 8019030:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 8019034:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8019038:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801903c:	44d1      	add	r9, sl
 801903e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8019042:	f108 0020 	add.w	r0, r8, #32
 8019046:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801904a:	0a00      	lsrs	r0, r0, #8
 801904c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8019050:	4330      	orrs	r0, r6
 8019052:	b28e      	uxth	r6, r1
 8019054:	fa1f f98e 	uxth.w	r9, lr
 8019058:	fb06 f809 	mul.w	r8, r6, r9
 801905c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8019060:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8019064:	0136      	lsls	r6, r6, #4
 8019066:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801906a:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801906e:	9601      	str	r6, [sp, #4]
 8019070:	ea4a 0404 	orr.w	r4, sl, r4
 8019074:	fa1f f689 	uxth.w	r6, r9
 8019078:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801907c:	fb11 f90e 	smulbb	r9, r1, lr
 8019080:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8019084:	9602      	str	r6, [sp, #8]
 8019086:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801908a:	4626      	mov	r6, r4
 801908c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019090:	f1ce 0410 	rsb	r4, lr, #16
 8019094:	1a64      	subs	r4, r4, r1
 8019096:	ea4a 0202 	orr.w	r2, sl, r2
 801909a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801909e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80190a2:	434a      	muls	r2, r1
 80190a4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80190a8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80190ac:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80190b0:	fb04 2406 	mla	r4, r4, r6, r2
 80190b4:	ea4a 0000 	orr.w	r0, sl, r0
 80190b8:	fb09 4200 	mla	r2, r9, r0, r4
 80190bc:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80190c0:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 80190c4:	9801      	ldr	r0, [sp, #4]
 80190c6:	9903      	ldr	r1, [sp, #12]
 80190c8:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 80190cc:	ea44 0b0b 	orr.w	fp, r4, fp
 80190d0:	9c02      	ldr	r4, [sp, #8]
 80190d2:	8809      	ldrh	r1, [r1, #0]
 80190d4:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 80190d8:	1b00      	subs	r0, r0, r4
 80190da:	9c01      	ldr	r4, [sp, #4]
 80190dc:	eba4 0608 	sub.w	r6, r4, r8
 80190e0:	b2b6      	uxth	r6, r6
 80190e2:	b280      	uxth	r0, r0
 80190e4:	4373      	muls	r3, r6
 80190e6:	fb0c 3300 	mla	r3, ip, r0, r3
 80190ea:	9802      	ldr	r0, [sp, #8]
 80190ec:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80190f0:	fb00 3505 	mla	r5, r0, r5, r3
 80190f4:	fb0e 2e0b 	mla	lr, lr, fp, r2
 80190f8:	fb08 5707 	mla	r7, r8, r7, r5
 80190fc:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8019100:	120b      	asrs	r3, r1, #8
 8019102:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8019106:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801910a:	b2ff      	uxtb	r7, r7
 801910c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019110:	10c8      	asrs	r0, r1, #3
 8019112:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8019116:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801911a:	00c9      	lsls	r1, r1, #3
 801911c:	437b      	muls	r3, r7
 801911e:	ea42 0e0e 	orr.w	lr, r2, lr
 8019122:	b2c9      	uxtb	r1, r1
 8019124:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8019128:	fa1f f28e 	uxth.w	r2, lr
 801912c:	4378      	muls	r0, r7
 801912e:	434f      	muls	r7, r1
 8019130:	1c59      	adds	r1, r3, #1
 8019132:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8019136:	1213      	asrs	r3, r2, #8
 8019138:	f023 0307 	bic.w	r3, r3, #7
 801913c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8019140:	1c41      	adds	r1, r0, #1
 8019142:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8019146:	10d1      	asrs	r1, r2, #3
 8019148:	f021 0103 	bic.w	r1, r1, #3
 801914c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8019150:	021b      	lsls	r3, r3, #8
 8019152:	00c9      	lsls	r1, r1, #3
 8019154:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8019158:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801915c:	430b      	orrs	r3, r1
 801915e:	1c79      	adds	r1, r7, #1
 8019160:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8019164:	00d2      	lsls	r2, r2, #3
 8019166:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801916a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801916e:	431a      	orrs	r2, r3
 8019170:	9b03      	ldr	r3, [sp, #12]
 8019172:	801a      	strh	r2, [r3, #0]
 8019174:	b005      	add	sp, #20
 8019176:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801917a:	f04f 0c00 	mov.w	ip, #0
 801917e:	4664      	mov	r4, ip
 8019180:	e6e5      	b.n	8018f4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8019182:	2300      	movs	r3, #0
 8019184:	469c      	mov	ip, r3
 8019186:	461a      	mov	r2, r3
 8019188:	461c      	mov	r4, r3
 801918a:	e707      	b.n	8018f9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801918c:	2300      	movs	r3, #0
 801918e:	461a      	mov	r2, r3
 8019190:	e704      	b.n	8018f9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8019192:	460b      	mov	r3, r1
 8019194:	460a      	mov	r2, r1
 8019196:	e701      	b.n	8018f9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8019198:	2500      	movs	r5, #0
 801919a:	46ab      	mov	fp, r5
 801919c:	e72f      	b.n	8018ffe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801919e:	2700      	movs	r7, #0
 80191a0:	463d      	mov	r5, r7
 80191a2:	4638      	mov	r0, r7
 80191a4:	46bb      	mov	fp, r7
 80191a6:	e754      	b.n	8019052 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80191a8:	4677      	mov	r7, lr
 80191aa:	4675      	mov	r5, lr
 80191ac:	4670      	mov	r0, lr
 80191ae:	46f3      	mov	fp, lr
 80191b0:	e74f      	b.n	8019052 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80191b2:	2700      	movs	r7, #0
 80191b4:	4638      	mov	r0, r7
 80191b6:	e74c      	b.n	8019052 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80191b8:	460f      	mov	r7, r1
 80191ba:	4608      	mov	r0, r1
 80191bc:	e749      	b.n	8019052 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

080191c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80191c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80191c4:	b093      	sub	sp, #76	@ 0x4c
 80191c6:	9210      	str	r2, [sp, #64]	@ 0x40
 80191c8:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80191ca:	910e      	str	r1, [sp, #56]	@ 0x38
 80191cc:	9306      	str	r3, [sp, #24]
 80191ce:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 80191d2:	9011      	str	r0, [sp, #68]	@ 0x44
 80191d4:	6850      	ldr	r0, [r2, #4]
 80191d6:	6812      	ldr	r2, [r2, #0]
 80191d8:	fb00 1303 	mla	r3, r0, r3, r1
 80191dc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80191e0:	9307      	str	r3, [sp, #28]
 80191e2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80191e4:	681b      	ldr	r3, [r3, #0]
 80191e6:	9308      	str	r3, [sp, #32]
 80191e8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80191ea:	685b      	ldr	r3, [r3, #4]
 80191ec:	9309      	str	r3, [sp, #36]	@ 0x24
 80191ee:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80191f0:	2b00      	cmp	r3, #0
 80191f2:	dc03      	bgt.n	80191fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80191f4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80191f6:	2b00      	cmp	r3, #0
 80191f8:	f340 83b4 	ble.w	8019964 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 80191fc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80191fe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019202:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019206:	1e48      	subs	r0, r1, #1
 8019208:	1e55      	subs	r5, r2, #1
 801920a:	9b06      	ldr	r3, [sp, #24]
 801920c:	2b00      	cmp	r3, #0
 801920e:	f340 8163 	ble.w	80194d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8019212:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 8019214:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8019216:	1436      	asrs	r6, r6, #16
 8019218:	ea4f 4323 	mov.w	r3, r3, asr #16
 801921c:	d406      	bmi.n	801922c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801921e:	4286      	cmp	r6, r0
 8019220:	da04      	bge.n	801922c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019222:	2b00      	cmp	r3, #0
 8019224:	db02      	blt.n	801922c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019226:	42ab      	cmp	r3, r5
 8019228:	f2c0 8157 	blt.w	80194da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801922c:	3601      	adds	r6, #1
 801922e:	f100 8144 	bmi.w	80194ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8019232:	42b1      	cmp	r1, r6
 8019234:	f2c0 8141 	blt.w	80194ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8019238:	3301      	adds	r3, #1
 801923a:	f100 813e 	bmi.w	80194ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801923e:	429a      	cmp	r2, r3
 8019240:	f2c0 813b 	blt.w	80194ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8019244:	9b06      	ldr	r3, [sp, #24]
 8019246:	9f07      	ldr	r7, [sp, #28]
 8019248:	930f      	str	r3, [sp, #60]	@ 0x3c
 801924a:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801924e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8019250:	2b00      	cmp	r3, #0
 8019252:	f340 8164 	ble.w	801951e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8019256:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8019258:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801925a:	1418      	asrs	r0, r3, #16
 801925c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801925e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8019262:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8019264:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8019268:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801926a:	142d      	asrs	r5, r5, #16
 801926c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8019270:	f100 81ee 	bmi.w	8019650 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8019274:	f102 3eff 	add.w	lr, r2, #4294967295
 8019278:	4575      	cmp	r5, lr
 801927a:	f280 81e9 	bge.w	8019650 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801927e:	2800      	cmp	r0, #0
 8019280:	f2c0 81e6 	blt.w	8019650 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8019284:	f103 3eff 	add.w	lr, r3, #4294967295
 8019288:	4570      	cmp	r0, lr
 801928a:	f280 81e1 	bge.w	8019650 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801928e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019290:	b212      	sxth	r2, r2
 8019292:	fb00 5002 	mla	r0, r0, r2, r5
 8019296:	fa1f fe81 	uxth.w	lr, r1
 801929a:	eb03 0a00 	add.w	sl, r3, r0
 801929e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80192a2:	f813 9000 	ldrb.w	r9, [r3, r0]
 80192a6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80192aa:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 80192ae:	b29b      	uxth	r3, r3
 80192b0:	f1bc 0f00 	cmp.w	ip, #0
 80192b4:	f000 8179 	beq.w	80195aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80192b8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80192bc:	940a      	str	r4, [sp, #40]	@ 0x28
 80192be:	eb0a 0b02 	add.w	fp, sl, r2
 80192c2:	fa1f fa8c 	uxth.w	sl, ip
 80192c6:	fb0a fe0e 	mul.w	lr, sl, lr
 80192ca:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80192ce:	fa1f fa8a 	uxth.w	sl, sl
 80192d2:	eba5 050e 	sub.w	r5, r5, lr
 80192d6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80192da:	940b      	str	r4, [sp, #44]	@ 0x2c
 80192dc:	eba3 030a 	sub.w	r3, r3, sl
 80192e0:	b2ad      	uxth	r5, r5
 80192e2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80192e4:	b29b      	uxth	r3, r3
 80192e6:	fb08 f505 	mul.w	r5, r8, r5
 80192ea:	fb09 5303 	mla	r3, r9, r3, r5
 80192ee:	fb0a 3304 	mla	r3, sl, r4, r3
 80192f2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80192f4:	fb0e 3304 	mla	r3, lr, r4, r3
 80192f8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80192fc:	2b00      	cmp	r3, #0
 80192fe:	f000 80cf 	beq.w	80194a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8019302:	9c08      	ldr	r4, [sp, #32]
 8019304:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8019308:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801930c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8019310:	f000 8150 	beq.w	80195b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8019314:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8019318:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801931c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8019320:	fb09 f000 	mul.w	r0, r9, r0
 8019324:	fb0a fe0e 	mul.w	lr, sl, lr
 8019328:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801932c:	f100 0b20 	add.w	fp, r0, #32
 8019330:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8019334:	44ce      	add	lr, r9
 8019336:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801933a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801933e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8019342:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8019346:	ea4e 0909 	orr.w	r9, lr, r9
 801934a:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801934e:	8868      	ldrh	r0, [r5, #2]
 8019350:	d019      	beq.n	8019386 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8019352:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8019356:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801935a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801935e:	fb08 f800 	mul.w	r8, r8, r0
 8019362:	fb0a fe0e 	mul.w	lr, sl, lr
 8019366:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801936a:	f108 0b20 	add.w	fp, r8, #32
 801936e:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8019372:	4486      	add	lr, r0
 8019374:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8019378:	0a00      	lsrs	r0, r0, #8
 801937a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801937e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8019382:	ea4e 0000 	orr.w	r0, lr, r0
 8019386:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801938a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801938e:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8019392:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8019396:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801939a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801939e:	ea4e 0909 	orr.w	r9, lr, r9
 80193a2:	ea4a 0000 	orr.w	r0, sl, r0
 80193a6:	f1bc 0f00 	cmp.w	ip, #0
 80193aa:	f000 8105 	beq.w	80195b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80193ae:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 80193b2:	3a01      	subs	r2, #1
 80193b4:	0052      	lsls	r2, r2, #1
 80193b6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80193b8:	3202      	adds	r2, #2
 80193ba:	2cff      	cmp	r4, #255	@ 0xff
 80193bc:	eb05 0e02 	add.w	lr, r5, r2
 80193c0:	5aaa      	ldrh	r2, [r5, r2]
 80193c2:	d018      	beq.n	80193f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80193c4:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 80193c8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80193cc:	fb04 fa02 	mul.w	sl, r4, r2
 80193d0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80193d4:	fb08 f805 	mul.w	r8, r8, r5
 80193d8:	f10a 0520 	add.w	r5, sl, #32
 80193dc:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80193e0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80193e4:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80193e8:	4442      	add	r2, r8
 80193ea:	0a2d      	lsrs	r5, r5, #8
 80193ec:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80193f0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80193f4:	432a      	orrs	r2, r5
 80193f6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80193f8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80193fc:	2cff      	cmp	r4, #255	@ 0xff
 80193fe:	d01a      	beq.n	8019436 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8019400:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 8019404:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019408:	fb04 fa05 	mul.w	sl, r4, r5
 801940c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019410:	fb08 f80e 	mul.w	r8, r8, lr
 8019414:	f10a 0e20 	add.w	lr, sl, #32
 8019418:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801941c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8019420:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8019424:	4445      	add	r5, r8
 8019426:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801942a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801942e:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8019432:	ea45 050e 	orr.w	r5, r5, lr
 8019436:	fb1c fe01 	smulbb	lr, ip, r1
 801943a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801943e:	f1cc 0810 	rsb	r8, ip, #16
 8019442:	eba8 0801 	sub.w	r8, r8, r1
 8019446:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801944a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801944e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8019452:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8019456:	4341      	muls	r1, r0
 8019458:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801945c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019460:	ea4a 0202 	orr.w	r2, sl, r2
 8019464:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8019468:	fb09 1108 	mla	r1, r9, r8, r1
 801946c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8019470:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8019474:	fb0c 1102 	mla	r1, ip, r2, r1
 8019478:	ea4b 0505 	orr.w	r5, fp, r5
 801947c:	fb0e 1e05 	mla	lr, lr, r5, r1
 8019480:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8019484:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8019488:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801948c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8019490:	ea42 0e0e 	orr.w	lr, r2, lr
 8019494:	fa1f f28e 	uxth.w	r2, lr
 8019498:	2bff      	cmp	r3, #255	@ 0xff
 801949a:	f040 80a1 	bne.w	80195e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801949e:	803a      	strh	r2, [r7, #0]
 80194a0:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80194a2:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 80194a4:	4413      	add	r3, r2
 80194a6:	931d      	str	r3, [sp, #116]	@ 0x74
 80194a8:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 80194aa:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80194ac:	441a      	add	r2, r3
 80194ae:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80194b0:	921e      	str	r2, [sp, #120]	@ 0x78
 80194b2:	3b01      	subs	r3, #1
 80194b4:	3702      	adds	r7, #2
 80194b6:	930f      	str	r3, [sp, #60]	@ 0x3c
 80194b8:	e6c9      	b.n	801924e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80194ba:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80194bc:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 80194be:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 80194c0:	4433      	add	r3, r6
 80194c2:	931d      	str	r3, [sp, #116]	@ 0x74
 80194c4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80194c6:	441c      	add	r4, r3
 80194c8:	9b06      	ldr	r3, [sp, #24]
 80194ca:	941e      	str	r4, [sp, #120]	@ 0x78
 80194cc:	3b01      	subs	r3, #1
 80194ce:	9306      	str	r3, [sp, #24]
 80194d0:	9b07      	ldr	r3, [sp, #28]
 80194d2:	3302      	adds	r3, #2
 80194d4:	9307      	str	r3, [sp, #28]
 80194d6:	e698      	b.n	801920a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80194d8:	d028      	beq.n	801952c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80194da:	9b06      	ldr	r3, [sp, #24]
 80194dc:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80194de:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 80194e0:	3b01      	subs	r3, #1
 80194e2:	fb00 5003 	mla	r0, r0, r3, r5
 80194e6:	1400      	asrs	r0, r0, #16
 80194e8:	f53f aeac 	bmi.w	8019244 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80194ec:	3901      	subs	r1, #1
 80194ee:	4288      	cmp	r0, r1
 80194f0:	f6bf aea8 	bge.w	8019244 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80194f4:	9920      	ldr	r1, [sp, #128]	@ 0x80
 80194f6:	981e      	ldr	r0, [sp, #120]	@ 0x78
 80194f8:	fb01 0303 	mla	r3, r1, r3, r0
 80194fc:	141b      	asrs	r3, r3, #16
 80194fe:	f53f aea1 	bmi.w	8019244 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019502:	3a01      	subs	r2, #1
 8019504:	4293      	cmp	r3, r2
 8019506:	f6bf ae9d 	bge.w	8019244 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801950a:	9b06      	ldr	r3, [sp, #24]
 801950c:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8019510:	930f      	str	r3, [sp, #60]	@ 0x3c
 8019512:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8019516:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8019518:	2b00      	cmp	r3, #0
 801951a:	f300 80b6 	bgt.w	801968a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801951e:	9b06      	ldr	r3, [sp, #24]
 8019520:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019524:	9b07      	ldr	r3, [sp, #28]
 8019526:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801952a:	9307      	str	r3, [sp, #28]
 801952c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801952e:	2b00      	cmp	r3, #0
 8019530:	f340 8218 	ble.w	8019964 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8019534:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019538:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801953c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019540:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8019542:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019546:	ee31 1a05 	vadd.f32	s2, s2, s10
 801954a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801954e:	eef0 6a62 	vmov.f32	s13, s5
 8019552:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019556:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801955a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801955e:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 8019562:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019566:	eef0 6a43 	vmov.f32	s13, s6
 801956a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801956e:	ee12 2a90 	vmov	r2, s5
 8019572:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019576:	fb92 f3f3 	sdiv	r3, r2, r3
 801957a:	ee13 2a10 	vmov	r2, s6
 801957e:	931f      	str	r3, [sp, #124]	@ 0x7c
 8019580:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8019582:	fb92 f3f3 	sdiv	r3, r2, r3
 8019586:	9320      	str	r3, [sp, #128]	@ 0x80
 8019588:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801958a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801958c:	3b01      	subs	r3, #1
 801958e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019592:	930e      	str	r3, [sp, #56]	@ 0x38
 8019594:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8019596:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 801959a:	bf08      	it	eq
 801959c:	4613      	moveq	r3, r2
 801959e:	9306      	str	r3, [sp, #24]
 80195a0:	eeb0 3a67 	vmov.f32	s6, s15
 80195a4:	eef0 2a47 	vmov.f32	s5, s14
 80195a8:	e621      	b.n	80191ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80195aa:	fb08 f505 	mul.w	r5, r8, r5
 80195ae:	fb09 5303 	mla	r3, r9, r3, r5
 80195b2:	e6a1      	b.n	80192f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80195b4:	4681      	mov	r9, r0
 80195b6:	e6c8      	b.n	801934a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 80195b8:	f1c1 0210 	rsb	r2, r1, #16
 80195bc:	4341      	muls	r1, r0
 80195be:	fb09 1902 	mla	r9, r9, r2, r1
 80195c2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80195c6:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80195ca:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80195ce:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80195d2:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 80195d6:	ea42 0909 	orr.w	r9, r2, r9
 80195da:	fa1f f289 	uxth.w	r2, r9
 80195de:	e75b      	b.n	8019498 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80195e0:	f8b7 c000 	ldrh.w	ip, [r7]
 80195e4:	43db      	mvns	r3, r3
 80195e6:	ea4f 202c 	mov.w	r0, ip, asr #8
 80195ea:	fa5f fe83 	uxtb.w	lr, r3
 80195ee:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80195f2:	fb00 f00e 	mul.w	r0, r0, lr
 80195f6:	1c41      	adds	r1, r0, #1
 80195f8:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80195fc:	1211      	asrs	r1, r2, #8
 80195fe:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8019602:	f021 0107 	bic.w	r1, r1, #7
 8019606:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801960a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801960e:	48d7      	ldr	r0, [pc, #860]	@ (801996c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8019610:	fb05 f50e 	mul.w	r5, r5, lr
 8019614:	b2c9      	uxtb	r1, r1
 8019616:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801961a:	1c69      	adds	r1, r5, #1
 801961c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8019620:	10d1      	asrs	r1, r2, #3
 8019622:	f021 0103 	bic.w	r1, r1, #3
 8019626:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801962a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801962e:	b2db      	uxtb	r3, r3
 8019630:	00c9      	lsls	r1, r1, #3
 8019632:	fb03 f30e 	mul.w	r3, r3, lr
 8019636:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801963a:	4301      	orrs	r1, r0
 801963c:	1c58      	adds	r0, r3, #1
 801963e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8019642:	00d2      	lsls	r2, r2, #3
 8019644:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8019648:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801964c:	430a      	orrs	r2, r1
 801964e:	e726      	b.n	801949e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8019650:	f115 0e01 	adds.w	lr, r5, #1
 8019654:	f53f af24 	bmi.w	80194a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8019658:	4572      	cmp	r2, lr
 801965a:	f6ff af21 	blt.w	80194a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801965e:	f110 0e01 	adds.w	lr, r0, #1
 8019662:	f53f af1d 	bmi.w	80194a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8019666:	4573      	cmp	r3, lr
 8019668:	f6ff af1a 	blt.w	80194a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801966c:	b21b      	sxth	r3, r3
 801966e:	b212      	sxth	r2, r2
 8019670:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8019674:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8019678:	9301      	str	r3, [sp, #4]
 801967a:	9200      	str	r2, [sp, #0]
 801967c:	4639      	mov	r1, r7
 801967e:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8019682:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8019684:	f7ff fc24 	bl	8018ed0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8019688:	e70a      	b.n	80194a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801968a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801968c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8019690:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8019692:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8019696:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019698:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801969c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801969e:	141f      	asrs	r7, r3, #16
 80196a0:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80196a2:	141b      	asrs	r3, r3, #16
 80196a4:	fb01 3707 	mla	r7, r1, r7, r3
 80196a8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80196aa:	fa1f fc82 	uxth.w	ip, r2
 80196ae:	eb03 0a07 	add.w	sl, r3, r7
 80196b2:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80196b6:	f813 9007 	ldrb.w	r9, [r3, r7]
 80196ba:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80196be:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 80196c2:	b29b      	uxth	r3, r3
 80196c4:	2d00      	cmp	r5, #0
 80196c6:	f000 80fe 	beq.w	80198c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 80196ca:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80196ce:	940c      	str	r4, [sp, #48]	@ 0x30
 80196d0:	eb0a 0b01 	add.w	fp, sl, r1
 80196d4:	fa1f fa85 	uxth.w	sl, r5
 80196d8:	fb0a fc0c 	mul.w	ip, sl, ip
 80196dc:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80196e0:	fa1f fa8a 	uxth.w	sl, sl
 80196e4:	eba0 000c 	sub.w	r0, r0, ip
 80196e8:	eba3 030a 	sub.w	r3, r3, sl
 80196ec:	b280      	uxth	r0, r0
 80196ee:	fb08 f000 	mul.w	r0, r8, r0
 80196f2:	b29b      	uxth	r3, r3
 80196f4:	fb09 0303 	mla	r3, r9, r3, r0
 80196f8:	980c      	ldr	r0, [sp, #48]	@ 0x30
 80196fa:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80196fe:	940d      	str	r4, [sp, #52]	@ 0x34
 8019700:	fb0a 3300 	mla	r3, sl, r0, r3
 8019704:	fb0c 3304 	mla	r3, ip, r4, r3
 8019708:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801970c:	2b00      	cmp	r3, #0
 801970e:	f000 80cc 	beq.w	80198aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8019712:	9808      	ldr	r0, [sp, #32]
 8019714:	9c08      	ldr	r4, [sp, #32]
 8019716:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801971a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801971e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8019722:	f000 80d5 	beq.w	80198d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8019726:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801972a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801972e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8019732:	fb09 f707 	mul.w	r7, r9, r7
 8019736:	fb0a fc0c 	mul.w	ip, sl, ip
 801973a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801973e:	f107 0b20 	add.w	fp, r7, #32
 8019742:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8019746:	44cc      	add	ip, r9
 8019748:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801974c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019750:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8019754:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8019758:	ea4c 0909 	orr.w	r9, ip, r9
 801975c:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8019760:	8847      	ldrh	r7, [r0, #2]
 8019762:	d019      	beq.n	8019798 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8019764:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8019768:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801976c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8019770:	fb08 f807 	mul.w	r8, r8, r7
 8019774:	fb0a fc0c 	mul.w	ip, sl, ip
 8019778:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801977c:	f108 0b20 	add.w	fp, r8, #32
 8019780:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8019784:	44bc      	add	ip, r7
 8019786:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801978a:	0a3f      	lsrs	r7, r7, #8
 801978c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8019790:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8019794:	ea4c 0707 	orr.w	r7, ip, r7
 8019798:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801979c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80197a0:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80197a4:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 80197a8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80197ac:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 80197b0:	ea4c 0909 	orr.w	r9, ip, r9
 80197b4:	ea4a 0707 	orr.w	r7, sl, r7
 80197b8:	2d00      	cmp	r5, #0
 80197ba:	f000 808b 	beq.w	80198d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 80197be:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 80197c2:	3901      	subs	r1, #1
 80197c4:	0049      	lsls	r1, r1, #1
 80197c6:	3102      	adds	r1, #2
 80197c8:	eb00 0c01 	add.w	ip, r0, r1
 80197cc:	5a41      	ldrh	r1, [r0, r1]
 80197ce:	980c      	ldr	r0, [sp, #48]	@ 0x30
 80197d0:	28ff      	cmp	r0, #255	@ 0xff
 80197d2:	d019      	beq.n	8019808 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 80197d4:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80197d6:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 80197da:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80197de:	fb04 fa01 	mul.w	sl, r4, r1
 80197e2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80197e6:	fb08 f800 	mul.w	r8, r8, r0
 80197ea:	f10a 0020 	add.w	r0, sl, #32
 80197ee:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80197f2:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80197f6:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80197fa:	4441      	add	r1, r8
 80197fc:	0a00      	lsrs	r0, r0, #8
 80197fe:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8019802:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8019806:	4301      	orrs	r1, r0
 8019808:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801980a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801980e:	2cff      	cmp	r4, #255	@ 0xff
 8019810:	d01a      	beq.n	8019848 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8019812:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 8019816:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801981a:	fb04 fa00 	mul.w	sl, r4, r0
 801981e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019822:	fb08 f80c 	mul.w	r8, r8, ip
 8019826:	f10a 0c20 	add.w	ip, sl, #32
 801982a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801982e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8019832:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8019836:	4440      	add	r0, r8
 8019838:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801983c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8019840:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8019844:	ea40 000c 	orr.w	r0, r0, ip
 8019848:	fb15 fc02 	smulbb	ip, r5, r2
 801984c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8019850:	f1c5 0810 	rsb	r8, r5, #16
 8019854:	eba8 0802 	sub.w	r8, r8, r2
 8019858:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801985c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8019860:	437a      	muls	r2, r7
 8019862:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8019866:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801986a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801986e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8019872:	fb09 2208 	mla	r2, r9, r8, r2
 8019876:	ea4a 0101 	orr.w	r1, sl, r1
 801987a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801987e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8019882:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8019886:	fb05 2201 	mla	r2, r5, r1, r2
 801988a:	ea4b 0000 	orr.w	r0, fp, r0
 801988e:	fb0c 2200 	mla	r2, ip, r0, r2
 8019892:	0d57      	lsrs	r7, r2, #21
 8019894:	0952      	lsrs	r2, r2, #5
 8019896:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801989a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801989e:	433a      	orrs	r2, r7
 80198a0:	2bff      	cmp	r3, #255	@ 0xff
 80198a2:	b292      	uxth	r2, r2
 80198a4:	d127      	bne.n	80198f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 80198a6:	f8ae 2000 	strh.w	r2, [lr]
 80198aa:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80198ac:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 80198ae:	4413      	add	r3, r2
 80198b0:	931d      	str	r3, [sp, #116]	@ 0x74
 80198b2:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 80198b4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80198b6:	441a      	add	r2, r3
 80198b8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80198ba:	921e      	str	r2, [sp, #120]	@ 0x78
 80198bc:	3b01      	subs	r3, #1
 80198be:	f10e 0e02 	add.w	lr, lr, #2
 80198c2:	930f      	str	r3, [sp, #60]	@ 0x3c
 80198c4:	e627      	b.n	8019516 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80198c6:	fb08 f000 	mul.w	r0, r8, r0
 80198ca:	fb09 0303 	mla	r3, r9, r3, r0
 80198ce:	e71b      	b.n	8019708 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 80198d0:	46b9      	mov	r9, r7
 80198d2:	e743      	b.n	801975c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 80198d4:	f1c2 0110 	rsb	r1, r2, #16
 80198d8:	437a      	muls	r2, r7
 80198da:	fb09 2901 	mla	r9, r9, r1, r2
 80198de:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80198e2:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80198e6:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80198ea:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80198ee:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80198f2:	4302      	orrs	r2, r0
 80198f4:	e7d4      	b.n	80198a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 80198f6:	f8be 7000 	ldrh.w	r7, [lr]
 80198fa:	4c1c      	ldr	r4, [pc, #112]	@ (801996c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80198fc:	43db      	mvns	r3, r3
 80198fe:	1238      	asrs	r0, r7, #8
 8019900:	fa5f fc83 	uxtb.w	ip, r3
 8019904:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8019908:	10fd      	asrs	r5, r7, #3
 801990a:	fb00 f00c 	mul.w	r0, r0, ip
 801990e:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8019912:	fb05 f10c 	mul.w	r1, r5, ip
 8019916:	1c45      	adds	r5, r0, #1
 8019918:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801991c:	1215      	asrs	r5, r2, #8
 801991e:	f025 0507 	bic.w	r5, r5, #7
 8019922:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8019926:	1c4d      	adds	r5, r1, #1
 8019928:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801992c:	10d1      	asrs	r1, r2, #3
 801992e:	f021 0103 	bic.w	r1, r1, #3
 8019932:	00fb      	lsls	r3, r7, #3
 8019934:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8019938:	b2db      	uxtb	r3, r3
 801993a:	b2c0      	uxtb	r0, r0
 801993c:	00c9      	lsls	r1, r1, #3
 801993e:	fb03 f30c 	mul.w	r3, r3, ip
 8019942:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8019946:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801994a:	4308      	orrs	r0, r1
 801994c:	1c59      	adds	r1, r3, #1
 801994e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8019952:	00d2      	lsls	r2, r2, #3
 8019954:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8019958:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801995c:	4318      	orrs	r0, r3
 801995e:	f8ae 0000 	strh.w	r0, [lr]
 8019962:	e7a2      	b.n	80198aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8019964:	b013      	add	sp, #76	@ 0x4c
 8019966:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801996a:	bf00      	nop
 801996c:	fffff800 	.word	0xfffff800

08019970 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8019970:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019974:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 8019978:	fb05 4c03 	mla	ip, r5, r3, r4
 801997c:	2d00      	cmp	r5, #0
 801997e:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8019982:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 8019986:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801998a:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801998e:	8808      	ldrh	r0, [r1, #0]
 8019990:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8019994:	f2c0 80a7 	blt.w	8019ae6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8019998:	45aa      	cmp	sl, r5
 801999a:	f340 80a4 	ble.w	8019ae6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801999e:	2c00      	cmp	r4, #0
 80199a0:	f2c0 809f 	blt.w	8019ae2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80199a4:	42a3      	cmp	r3, r4
 80199a6:	f340 809c 	ble.w	8019ae2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80199aa:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 80199ae:	1c62      	adds	r2, r4, #1
 80199b0:	f100 809c 	bmi.w	8019aec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80199b4:	4293      	cmp	r3, r2
 80199b6:	f340 8099 	ble.w	8019aec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80199ba:	f1b9 0f00 	cmp.w	r9, #0
 80199be:	f000 8095 	beq.w	8019aec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80199c2:	f8be c002 	ldrh.w	ip, [lr, #2]
 80199c6:	3501      	adds	r5, #1
 80199c8:	f100 8094 	bmi.w	8019af4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80199cc:	45aa      	cmp	sl, r5
 80199ce:	f340 8091 	ble.w	8019af4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80199d2:	2f00      	cmp	r7, #0
 80199d4:	f000 808e 	beq.w	8019af4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80199d8:	2c00      	cmp	r4, #0
 80199da:	f2c0 8089 	blt.w	8019af0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80199de:	42a3      	cmp	r3, r4
 80199e0:	f340 8086 	ble.w	8019af0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80199e4:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 80199e8:	3401      	adds	r4, #1
 80199ea:	f100 8086 	bmi.w	8019afa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80199ee:	42a3      	cmp	r3, r4
 80199f0:	f340 8083 	ble.w	8019afa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80199f4:	f1b9 0f00 	cmp.w	r9, #0
 80199f8:	d07f      	beq.n	8019afa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80199fa:	3301      	adds	r3, #1
 80199fc:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8019a00:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8019a04:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8019a08:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 8019a0c:	fb19 fe07 	smulbb	lr, r9, r7
 8019a10:	ea44 0808 	orr.w	r8, r4, r8
 8019a14:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8019a18:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8019a1c:	f1c7 0210 	rsb	r2, r7, #16
 8019a20:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8019a24:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8019a28:	ea44 0c0c 	orr.w	ip, r4, ip
 8019a2c:	eba2 0209 	sub.w	r2, r2, r9
 8019a30:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8019a34:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8019a38:	fb04 f40c 	mul.w	r4, r4, ip
 8019a3c:	fb02 4808 	mla	r8, r2, r8, r4
 8019a40:	041a      	lsls	r2, r3, #16
 8019a42:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8019a46:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019a4a:	4313      	orrs	r3, r2
 8019a4c:	042a      	lsls	r2, r5, #16
 8019a4e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8019a52:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8019a56:	fb0e 8303 	mla	r3, lr, r3, r8
 8019a5a:	432a      	orrs	r2, r5
 8019a5c:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8019a60:	fb07 3202 	mla	r2, r7, r2, r3
 8019a64:	0d53      	lsrs	r3, r2, #21
 8019a66:	0952      	lsrs	r2, r2, #5
 8019a68:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019a6c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019a70:	431a      	orrs	r2, r3
 8019a72:	b293      	uxth	r3, r2
 8019a74:	b2b4      	uxth	r4, r6
 8019a76:	1202      	asrs	r2, r0, #8
 8019a78:	43f6      	mvns	r6, r6
 8019a7a:	b2f6      	uxtb	r6, r6
 8019a7c:	121d      	asrs	r5, r3, #8
 8019a7e:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8019a82:	fb12 f206 	smulbb	r2, r2, r6
 8019a86:	10c7      	asrs	r7, r0, #3
 8019a88:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8019a8c:	00c0      	lsls	r0, r0, #3
 8019a8e:	fb05 2504 	mla	r5, r5, r4, r2
 8019a92:	b2c0      	uxtb	r0, r0
 8019a94:	10da      	asrs	r2, r3, #3
 8019a96:	00db      	lsls	r3, r3, #3
 8019a98:	b2db      	uxtb	r3, r3
 8019a9a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019a9e:	fb10 f006 	smulbb	r0, r0, r6
 8019aa2:	b2ad      	uxth	r5, r5
 8019aa4:	fb03 0004 	mla	r0, r3, r4, r0
 8019aa8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8019aac:	fb17 f706 	smulbb	r7, r7, r6
 8019ab0:	b280      	uxth	r0, r0
 8019ab2:	1c6b      	adds	r3, r5, #1
 8019ab4:	fb02 7204 	mla	r2, r2, r4, r7
 8019ab8:	b292      	uxth	r2, r2
 8019aba:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019abe:	1c43      	adds	r3, r0, #1
 8019ac0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8019ac4:	1c50      	adds	r0, r2, #1
 8019ac6:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8019aca:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8019ace:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019ad2:	0952      	lsrs	r2, r2, #5
 8019ad4:	432b      	orrs	r3, r5
 8019ad6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019ada:	4313      	orrs	r3, r2
 8019adc:	800b      	strh	r3, [r1, #0]
 8019ade:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019ae2:	4680      	mov	r8, r0
 8019ae4:	e763      	b.n	80199ae <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8019ae6:	4684      	mov	ip, r0
 8019ae8:	4680      	mov	r8, r0
 8019aea:	e76c      	b.n	80199c6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8019aec:	4684      	mov	ip, r0
 8019aee:	e76a      	b.n	80199c6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8019af0:	4605      	mov	r5, r0
 8019af2:	e779      	b.n	80199e8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8019af4:	4603      	mov	r3, r0
 8019af6:	4605      	mov	r5, r0
 8019af8:	e782      	b.n	8019a00 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8019afa:	4603      	mov	r3, r0
 8019afc:	e780      	b.n	8019a00 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08019afe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019afe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019b02:	b093      	sub	sp, #76	@ 0x4c
 8019b04:	461d      	mov	r5, r3
 8019b06:	9210      	str	r2, [sp, #64]	@ 0x40
 8019b08:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8019b0a:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 8019b0e:	920b      	str	r2, [sp, #44]	@ 0x2c
 8019b10:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 8019b14:	910a      	str	r1, [sp, #40]	@ 0x28
 8019b16:	6859      	ldr	r1, [r3, #4]
 8019b18:	681b      	ldr	r3, [r3, #0]
 8019b1a:	9011      	str	r0, [sp, #68]	@ 0x44
 8019b1c:	fb01 2707 	mla	r7, r1, r7, r2
 8019b20:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8019b24:	9307      	str	r3, [sp, #28]
 8019b26:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019b28:	681b      	ldr	r3, [r3, #0]
 8019b2a:	9309      	str	r3, [sp, #36]	@ 0x24
 8019b2c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8019b2e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8019b32:	43db      	mvns	r3, r3
 8019b34:	b2db      	uxtb	r3, r3
 8019b36:	9308      	str	r3, [sp, #32]
 8019b38:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019b3a:	2b00      	cmp	r3, #0
 8019b3c:	dc03      	bgt.n	8019b46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8019b3e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019b40:	2b00      	cmp	r3, #0
 8019b42:	f340 8203 	ble.w	8019f4c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8019b46:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019b48:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019b4c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019b50:	1e48      	subs	r0, r1, #1
 8019b52:	f102 3cff 	add.w	ip, r2, #4294967295
 8019b56:	2d00      	cmp	r5, #0
 8019b58:	f340 80da 	ble.w	8019d10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8019b5c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8019b60:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019b64:	d406      	bmi.n	8019b74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019b66:	4586      	cmp	lr, r0
 8019b68:	da04      	bge.n	8019b74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019b6a:	2b00      	cmp	r3, #0
 8019b6c:	db02      	blt.n	8019b74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019b6e:	4563      	cmp	r3, ip
 8019b70:	f2c0 80cf 	blt.w	8019d12 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019b74:	f11e 0e01 	adds.w	lr, lr, #1
 8019b78:	f100 80c1 	bmi.w	8019cfe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8019b7c:	4571      	cmp	r1, lr
 8019b7e:	f2c0 80be 	blt.w	8019cfe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8019b82:	3301      	adds	r3, #1
 8019b84:	f100 80bb 	bmi.w	8019cfe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8019b88:	429a      	cmp	r2, r3
 8019b8a:	f2c0 80b8 	blt.w	8019cfe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8019b8e:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8019b92:	46a9      	mov	r9, r5
 8019b94:	f1b9 0f00 	cmp.w	r9, #0
 8019b98:	f340 80d8 	ble.w	8019d4c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8019b9c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019b9e:	1421      	asrs	r1, r4, #16
 8019ba0:	ea4f 4026 	mov.w	r0, r6, asr #16
 8019ba4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019ba8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8019bac:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8019bb0:	f100 8111 	bmi.w	8019dd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8019bb4:	f10e 3aff 	add.w	sl, lr, #4294967295
 8019bb8:	4551      	cmp	r1, sl
 8019bba:	f280 810c 	bge.w	8019dd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8019bbe:	2800      	cmp	r0, #0
 8019bc0:	f2c0 8109 	blt.w	8019dd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8019bc4:	f103 3aff 	add.w	sl, r3, #4294967295
 8019bc8:	4550      	cmp	r0, sl
 8019bca:	f280 8104 	bge.w	8019dd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8019bce:	fa0f f38e 	sxth.w	r3, lr
 8019bd2:	fb00 1103 	mla	r1, r0, r3, r1
 8019bd6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8019bd8:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8019bdc:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8019be0:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8019be4:	f1bc 0f00 	cmp.w	ip, #0
 8019be8:	d007      	beq.n	8019bfa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8019bea:	005b      	lsls	r3, r3, #1
 8019bec:	eb0a 0003 	add.w	r0, sl, r3
 8019bf0:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8019bf4:	930c      	str	r3, [sp, #48]	@ 0x30
 8019bf6:	8843      	ldrh	r3, [r0, #2]
 8019bf8:	930d      	str	r3, [sp, #52]	@ 0x34
 8019bfa:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8019bfe:	fb12 f30c 	smulbb	r3, r2, ip
 8019c02:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8019c06:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8019c0a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8019c0e:	10db      	asrs	r3, r3, #3
 8019c10:	ea40 000e 	orr.w	r0, r0, lr
 8019c14:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8019c18:	f1cc 0e10 	rsb	lr, ip, #16
 8019c1c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8019c20:	ebae 0e02 	sub.w	lr, lr, r2
 8019c24:	ea4a 0101 	orr.w	r1, sl, r1
 8019c28:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8019c2c:	4351      	muls	r1, r2
 8019c2e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8019c30:	9f08      	ldr	r7, [sp, #32]
 8019c32:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8019c36:	fb0e 1e00 	mla	lr, lr, r0, r1
 8019c3a:	0410      	lsls	r0, r2, #16
 8019c3c:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8019c40:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019c44:	4310      	orrs	r0, r2
 8019c46:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8019c48:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8019c4a:	0412      	lsls	r2, r2, #16
 8019c4c:	fb03 e000 	mla	r0, r3, r0, lr
 8019c50:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8019c54:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 8019c58:	ea42 020e 	orr.w	r2, r2, lr
 8019c5c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8019c60:	fb03 0302 	mla	r3, r3, r2, r0
 8019c64:	0d5a      	lsrs	r2, r3, #21
 8019c66:	095b      	lsrs	r3, r3, #5
 8019c68:	f8b8 0000 	ldrh.w	r0, [r8]
 8019c6c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019c70:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019c74:	4313      	orrs	r3, r2
 8019c76:	b29b      	uxth	r3, r3
 8019c78:	1201      	asrs	r1, r0, #8
 8019c7a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8019c7e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8019c82:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8019c86:	fb11 f107 	smulbb	r1, r1, r7
 8019c8a:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8019c8e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8019c92:	00c0      	lsls	r0, r0, #3
 8019c94:	fb0c 1c02 	mla	ip, ip, r2, r1
 8019c98:	b2c0      	uxtb	r0, r0
 8019c9a:	10d9      	asrs	r1, r3, #3
 8019c9c:	00db      	lsls	r3, r3, #3
 8019c9e:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8019ca2:	b2db      	uxtb	r3, r3
 8019ca4:	fb10 f007 	smulbb	r0, r0, r7
 8019ca8:	fa1f fc8c 	uxth.w	ip, ip
 8019cac:	fb03 0302 	mla	r3, r3, r2, r0
 8019cb0:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8019cb4:	fb1e fe07 	smulbb	lr, lr, r7
 8019cb8:	fb01 e102 	mla	r1, r1, r2, lr
 8019cbc:	b29a      	uxth	r2, r3
 8019cbe:	f10c 0301 	add.w	r3, ip, #1
 8019cc2:	b289      	uxth	r1, r1
 8019cc4:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8019cc8:	1c53      	adds	r3, r2, #1
 8019cca:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019cce:	1c4a      	adds	r2, r1, #1
 8019cd0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019cd4:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8019cd8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019cdc:	0949      	lsrs	r1, r1, #5
 8019cde:	ea43 030c 	orr.w	r3, r3, ip
 8019ce2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8019ce6:	430b      	orrs	r3, r1
 8019ce8:	f8a8 3000 	strh.w	r3, [r8]
 8019cec:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8019cee:	441c      	add	r4, r3
 8019cf0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8019cf2:	f108 0802 	add.w	r8, r8, #2
 8019cf6:	441e      	add	r6, r3
 8019cf8:	f109 39ff 	add.w	r9, r9, #4294967295
 8019cfc:	e74a      	b.n	8019b94 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019cfe:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8019d00:	441c      	add	r4, r3
 8019d02:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8019d04:	441e      	add	r6, r3
 8019d06:	9b07      	ldr	r3, [sp, #28]
 8019d08:	3302      	adds	r3, #2
 8019d0a:	3d01      	subs	r5, #1
 8019d0c:	9307      	str	r3, [sp, #28]
 8019d0e:	e722      	b.n	8019b56 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8019d10:	d022      	beq.n	8019d58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8019d12:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8019d14:	1e6b      	subs	r3, r5, #1
 8019d16:	fb00 4003 	mla	r0, r0, r3, r4
 8019d1a:	1400      	asrs	r0, r0, #16
 8019d1c:	f53f af37 	bmi.w	8019b8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019d20:	3901      	subs	r1, #1
 8019d22:	4288      	cmp	r0, r1
 8019d24:	f6bf af33 	bge.w	8019b8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019d28:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8019d2a:	fb01 6303 	mla	r3, r1, r3, r6
 8019d2e:	141b      	asrs	r3, r3, #16
 8019d30:	f53f af2d 	bmi.w	8019b8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019d34:	3a01      	subs	r2, #1
 8019d36:	4293      	cmp	r3, r2
 8019d38:	f6bf af29 	bge.w	8019b8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019d3c:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8019d40:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 8019d44:	46a8      	mov	r8, r5
 8019d46:	f1b8 0f00 	cmp.w	r8, #0
 8019d4a:	dc5e      	bgt.n	8019e0a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8019d4c:	9b07      	ldr	r3, [sp, #28]
 8019d4e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8019d52:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8019d56:	9307      	str	r3, [sp, #28]
 8019d58:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019d5a:	2b00      	cmp	r3, #0
 8019d5c:	f340 80f6 	ble.w	8019f4c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8019d60:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019d64:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8019d68:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019d6c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8019d6e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019d72:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019d76:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019d7a:	eef0 6a62 	vmov.f32	s13, s5
 8019d7e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019d82:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019d86:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019d8a:	ee16 4a90 	vmov	r4, s13
 8019d8e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019d92:	eef0 6a43 	vmov.f32	s13, s6
 8019d96:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019d9a:	ee12 2a90 	vmov	r2, s5
 8019d9e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019da2:	fb92 f3f3 	sdiv	r3, r2, r3
 8019da6:	ee13 2a10 	vmov	r2, s6
 8019daa:	931f      	str	r3, [sp, #124]	@ 0x7c
 8019dac:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8019dae:	fb92 f3f3 	sdiv	r3, r2, r3
 8019db2:	9320      	str	r3, [sp, #128]	@ 0x80
 8019db4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019db6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8019db8:	3b01      	subs	r3, #1
 8019dba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019dbe:	930a      	str	r3, [sp, #40]	@ 0x28
 8019dc0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8019dc2:	ee16 6a90 	vmov	r6, s13
 8019dc6:	bf14      	ite	ne
 8019dc8:	461d      	movne	r5, r3
 8019dca:	4615      	moveq	r5, r2
 8019dcc:	eeb0 3a67 	vmov.f32	s6, s15
 8019dd0:	eef0 2a47 	vmov.f32	s5, s14
 8019dd4:	e6b0      	b.n	8019b38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8019dd6:	f111 0a01 	adds.w	sl, r1, #1
 8019dda:	d487      	bmi.n	8019cec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8019ddc:	45d6      	cmp	lr, sl
 8019dde:	db85      	blt.n	8019cec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8019de0:	f110 0a01 	adds.w	sl, r0, #1
 8019de4:	d482      	bmi.n	8019cec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8019de6:	4553      	cmp	r3, sl
 8019de8:	db80      	blt.n	8019cec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8019dea:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8019dec:	9101      	str	r1, [sp, #4]
 8019dee:	b21b      	sxth	r3, r3
 8019df0:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8019df4:	9300      	str	r3, [sp, #0]
 8019df6:	e9cd c704 	strd	ip, r7, [sp, #16]
 8019dfa:	fa0f f38e 	sxth.w	r3, lr
 8019dfe:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8019e00:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8019e02:	4641      	mov	r1, r8
 8019e04:	f7ff fdb4 	bl	8019970 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8019e08:	e770      	b.n	8019cec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8019e0a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019e0c:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8019e0e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019e12:	1430      	asrs	r0, r6, #16
 8019e14:	1423      	asrs	r3, r4, #16
 8019e16:	fb01 3000 	mla	r0, r1, r0, r3
 8019e1a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019e1c:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8019e20:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8019e24:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8019e28:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019e2c:	8858      	ldrh	r0, [r3, #2]
 8019e2e:	f1be 0f00 	cmp.w	lr, #0
 8019e32:	d00b      	beq.n	8019e4c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8019e34:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 8019e38:	3901      	subs	r1, #1
 8019e3a:	0049      	lsls	r1, r1, #1
 8019e3c:	3102      	adds	r1, #2
 8019e3e:	eb03 0b01 	add.w	fp, r3, r1
 8019e42:	5a5b      	ldrh	r3, [r3, r1]
 8019e44:	930e      	str	r3, [sp, #56]	@ 0x38
 8019e46:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8019e4a:	930f      	str	r3, [sp, #60]	@ 0x3c
 8019e4c:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8019e50:	fb12 f30e 	smulbb	r3, r2, lr
 8019e54:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8019e58:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8019e5c:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 8019e60:	10db      	asrs	r3, r3, #3
 8019e62:	ea41 010c 	orr.w	r1, r1, ip
 8019e66:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8019e6a:	f1ce 0c10 	rsb	ip, lr, #16
 8019e6e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8019e72:	ebac 0c02 	sub.w	ip, ip, r2
 8019e76:	ea4b 0000 	orr.w	r0, fp, r0
 8019e7a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8019e7e:	4350      	muls	r0, r2
 8019e80:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8019e82:	9f08      	ldr	r7, [sp, #32]
 8019e84:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8019e88:	fb0c 0c01 	mla	ip, ip, r1, r0
 8019e8c:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8019e90:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 8019e94:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8019e96:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8019e98:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8019e9c:	0412      	lsls	r2, r2, #16
 8019e9e:	ea4b 0101 	orr.w	r1, fp, r1
 8019ea2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8019ea6:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8019eaa:	fb03 c101 	mla	r1, r3, r1, ip
 8019eae:	4302      	orrs	r2, r0
 8019eb0:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8019eb4:	fb03 1202 	mla	r2, r3, r2, r1
 8019eb8:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8019ebc:	0952      	lsrs	r2, r2, #5
 8019ebe:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 8019ec2:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8019ec6:	f8b9 2000 	ldrh.w	r2, [r9]
 8019eca:	ea4b 0303 	orr.w	r3, fp, r3
 8019ece:	b29b      	uxth	r3, r3
 8019ed0:	1211      	asrs	r1, r2, #8
 8019ed2:	1218      	asrs	r0, r3, #8
 8019ed4:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8019ed8:	fb11 f107 	smulbb	r1, r1, r7
 8019edc:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8019ee0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8019ee4:	00d2      	lsls	r2, r2, #3
 8019ee6:	fb00 100a 	mla	r0, r0, sl, r1
 8019eea:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8019eee:	10d9      	asrs	r1, r3, #3
 8019ef0:	b2d2      	uxtb	r2, r2
 8019ef2:	00db      	lsls	r3, r3, #3
 8019ef4:	fb1c fc07 	smulbb	ip, ip, r7
 8019ef8:	fb12 f207 	smulbb	r2, r2, r7
 8019efc:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8019f00:	b2db      	uxtb	r3, r3
 8019f02:	b280      	uxth	r0, r0
 8019f04:	fb01 c10a 	mla	r1, r1, sl, ip
 8019f08:	fb03 230a 	mla	r3, r3, sl, r2
 8019f0c:	b29b      	uxth	r3, r3
 8019f0e:	b289      	uxth	r1, r1
 8019f10:	1c42      	adds	r2, r0, #1
 8019f12:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019f16:	f101 0c01 	add.w	ip, r1, #1
 8019f1a:	1c5a      	adds	r2, r3, #1
 8019f1c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8019f20:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8019f24:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8019f26:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8019f2a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019f2e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8019f32:	4310      	orrs	r0, r2
 8019f34:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8019f38:	441c      	add	r4, r3
 8019f3a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8019f3c:	ea40 000c 	orr.w	r0, r0, ip
 8019f40:	f829 0b02 	strh.w	r0, [r9], #2
 8019f44:	441e      	add	r6, r3
 8019f46:	f108 38ff 	add.w	r8, r8, #4294967295
 8019f4a:	e6fc      	b.n	8019d46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8019f4c:	b013      	add	sp, #76	@ 0x4c
 8019f4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019f52 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8019f52:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8019f56:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8019f5a:	fb0e 4703 	mla	r7, lr, r3, r4
 8019f5e:	f1be 0f00 	cmp.w	lr, #0
 8019f62:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8019f66:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 8019f6a:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 8019f6e:	8808      	ldrh	r0, [r1, #0]
 8019f70:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8019f74:	db60      	blt.n	801a038 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8019f76:	45f1      	cmp	r9, lr
 8019f78:	dd5e      	ble.n	801a038 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8019f7a:	2c00      	cmp	r4, #0
 8019f7c:	db5a      	blt.n	801a034 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8019f7e:	42a3      	cmp	r3, r4
 8019f80:	dd58      	ble.n	801a034 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8019f82:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8019f86:	1c62      	adds	r2, r4, #1
 8019f88:	d459      	bmi.n	801a03e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8019f8a:	4293      	cmp	r3, r2
 8019f8c:	dd57      	ble.n	801a03e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8019f8e:	2d00      	cmp	r5, #0
 8019f90:	d055      	beq.n	801a03e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8019f92:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8019f96:	f11e 0e01 	adds.w	lr, lr, #1
 8019f9a:	d454      	bmi.n	801a046 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8019f9c:	45f1      	cmp	r9, lr
 8019f9e:	dd52      	ble.n	801a046 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8019fa0:	2e00      	cmp	r6, #0
 8019fa2:	d050      	beq.n	801a046 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8019fa4:	2c00      	cmp	r4, #0
 8019fa6:	db4c      	blt.n	801a042 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8019fa8:	42a3      	cmp	r3, r4
 8019faa:	dd4a      	ble.n	801a042 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8019fac:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8019fb0:	3401      	adds	r4, #1
 8019fb2:	d405      	bmi.n	8019fc0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8019fb4:	42a3      	cmp	r3, r4
 8019fb6:	dd03      	ble.n	8019fc0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8019fb8:	b115      	cbz	r5, 8019fc0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8019fba:	3301      	adds	r3, #1
 8019fbc:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8019fc0:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8019fc4:	fb15 f406 	smulbb	r4, r5, r6
 8019fc8:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8019fcc:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8019fd0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8019fd4:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8019fd8:	ea43 0c0c 	orr.w	ip, r3, ip
 8019fdc:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8019fe0:	f1c6 0310 	rsb	r3, r6, #16
 8019fe4:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8019fe8:	1b5b      	subs	r3, r3, r5
 8019fea:	ea4e 0707 	orr.w	r7, lr, r7
 8019fee:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8019ff2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8019ff6:	437d      	muls	r5, r7
 8019ff8:	fb03 5c0c 	mla	ip, r3, ip, r5
 8019ffc:	0403      	lsls	r3, r0, #16
 8019ffe:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a002:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a006:	4318      	orrs	r0, r3
 801a008:	0413      	lsls	r3, r2, #16
 801a00a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a00e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a012:	4313      	orrs	r3, r2
 801a014:	fb04 c000 	mla	r0, r4, r0, ip
 801a018:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801a01c:	fb06 0003 	mla	r0, r6, r3, r0
 801a020:	0d43      	lsrs	r3, r0, #21
 801a022:	0940      	lsrs	r0, r0, #5
 801a024:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a028:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a02c:	4318      	orrs	r0, r3
 801a02e:	8008      	strh	r0, [r1, #0]
 801a030:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801a034:	4684      	mov	ip, r0
 801a036:	e7a6      	b.n	8019f86 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801a038:	4607      	mov	r7, r0
 801a03a:	4684      	mov	ip, r0
 801a03c:	e7ab      	b.n	8019f96 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801a03e:	4607      	mov	r7, r0
 801a040:	e7a9      	b.n	8019f96 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801a042:	4602      	mov	r2, r0
 801a044:	e7b4      	b.n	8019fb0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801a046:	4602      	mov	r2, r0
 801a048:	e7ba      	b.n	8019fc0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801a04a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a04a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a04e:	b08f      	sub	sp, #60	@ 0x3c
 801a050:	461d      	mov	r5, r3
 801a052:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801a054:	920c      	str	r2, [sp, #48]	@ 0x30
 801a056:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 801a05a:	9107      	str	r1, [sp, #28]
 801a05c:	6859      	ldr	r1, [r3, #4]
 801a05e:	681b      	ldr	r3, [r3, #0]
 801a060:	900d      	str	r0, [sp, #52]	@ 0x34
 801a062:	fb01 2707 	mla	r7, r1, r7, r2
 801a066:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801a06a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a06c:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 801a070:	f8d3 8000 	ldr.w	r8, [r3]
 801a074:	9b07      	ldr	r3, [sp, #28]
 801a076:	2b00      	cmp	r3, #0
 801a078:	dc03      	bgt.n	801a082 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a07a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a07c:	2b00      	cmp	r3, #0
 801a07e:	f340 8181 	ble.w	801a384 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801a082:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a084:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a088:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a08c:	1e48      	subs	r0, r1, #1
 801a08e:	f102 3cff 	add.w	ip, r2, #4294967295
 801a092:	2d00      	cmp	r5, #0
 801a094:	f340 809b 	ble.w	801a1ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801a098:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801a09c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a0a0:	d406      	bmi.n	801a0b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a0a2:	4586      	cmp	lr, r0
 801a0a4:	da04      	bge.n	801a0b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a0a6:	2b00      	cmp	r3, #0
 801a0a8:	db02      	blt.n	801a0b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a0aa:	4563      	cmp	r3, ip
 801a0ac:	f2c0 8090 	blt.w	801a1d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a0b0:	f11e 0e01 	adds.w	lr, lr, #1
 801a0b4:	f100 8084 	bmi.w	801a1c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801a0b8:	4571      	cmp	r1, lr
 801a0ba:	f2c0 8081 	blt.w	801a1c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801a0be:	3301      	adds	r3, #1
 801a0c0:	d47e      	bmi.n	801a1c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801a0c2:	429a      	cmp	r2, r3
 801a0c4:	db7c      	blt.n	801a1c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801a0c6:	46aa      	mov	sl, r5
 801a0c8:	46b9      	mov	r9, r7
 801a0ca:	f1ba 0f00 	cmp.w	sl, #0
 801a0ce:	f340 8099 	ble.w	801a204 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801a0d2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a0d4:	1421      	asrs	r1, r4, #16
 801a0d6:	ea4f 4026 	mov.w	r0, r6, asr #16
 801a0da:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a0de:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801a0e2:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801a0e6:	f100 80d0 	bmi.w	801a28a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801a0ea:	f10e 3bff 	add.w	fp, lr, #4294967295
 801a0ee:	4559      	cmp	r1, fp
 801a0f0:	f280 80cb 	bge.w	801a28a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801a0f4:	2800      	cmp	r0, #0
 801a0f6:	f2c0 80c8 	blt.w	801a28a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801a0fa:	f103 3bff 	add.w	fp, r3, #4294967295
 801a0fe:	4558      	cmp	r0, fp
 801a100:	f280 80c3 	bge.w	801a28a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801a104:	fa0f fe8e 	sxth.w	lr, lr
 801a108:	fb00 110e 	mla	r1, r0, lr, r1
 801a10c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801a110:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801a114:	8841      	ldrh	r1, [r0, #2]
 801a116:	f1bc 0f00 	cmp.w	ip, #0
 801a11a:	d00b      	beq.n	801a134 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801a11c:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 801a120:	3b01      	subs	r3, #1
 801a122:	005b      	lsls	r3, r3, #1
 801a124:	3302      	adds	r3, #2
 801a126:	eb00 0e03 	add.w	lr, r0, r3
 801a12a:	5ac3      	ldrh	r3, [r0, r3]
 801a12c:	9308      	str	r3, [sp, #32]
 801a12e:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801a132:	9309      	str	r3, [sp, #36]	@ 0x24
 801a134:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801a138:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801a13c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801a140:	ea40 000b 	orr.w	r0, r0, fp
 801a144:	fb12 f30c 	smulbb	r3, r2, ip
 801a148:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a14c:	10db      	asrs	r3, r3, #3
 801a14e:	f1cc 0e10 	rsb	lr, ip, #16
 801a152:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801a156:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801a15a:	ebae 0e02 	sub.w	lr, lr, r2
 801a15e:	ea4b 0101 	orr.w	r1, fp, r1
 801a162:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801a166:	4351      	muls	r1, r2
 801a168:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801a16a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801a16e:	fb0e 1e00 	mla	lr, lr, r0, r1
 801a172:	0410      	lsls	r0, r2, #16
 801a174:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801a178:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a17c:	4310      	orrs	r0, r2
 801a17e:	9a08      	ldr	r2, [sp, #32]
 801a180:	9908      	ldr	r1, [sp, #32]
 801a182:	0412      	lsls	r2, r2, #16
 801a184:	fb03 e000 	mla	r0, r3, r0, lr
 801a188:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801a18c:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801a190:	ea42 020e 	orr.w	r2, r2, lr
 801a194:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801a198:	fb03 0302 	mla	r3, r3, r2, r0
 801a19c:	0d5a      	lsrs	r2, r3, #21
 801a19e:	095b      	lsrs	r3, r3, #5
 801a1a0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a1a4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a1a8:	4313      	orrs	r3, r2
 801a1aa:	f8a9 3000 	strh.w	r3, [r9]
 801a1ae:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801a1b0:	441c      	add	r4, r3
 801a1b2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a1b4:	f109 0902 	add.w	r9, r9, #2
 801a1b8:	441e      	add	r6, r3
 801a1ba:	f10a 3aff 	add.w	sl, sl, #4294967295
 801a1be:	e784      	b.n	801a0ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a1c0:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801a1c2:	441c      	add	r4, r3
 801a1c4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a1c6:	3d01      	subs	r5, #1
 801a1c8:	441e      	add	r6, r3
 801a1ca:	3702      	adds	r7, #2
 801a1cc:	e761      	b.n	801a092 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801a1ce:	d01d      	beq.n	801a20c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801a1d0:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801a1d2:	1e6b      	subs	r3, r5, #1
 801a1d4:	fb00 4003 	mla	r0, r0, r3, r4
 801a1d8:	1400      	asrs	r0, r0, #16
 801a1da:	f53f af74 	bmi.w	801a0c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a1de:	3901      	subs	r1, #1
 801a1e0:	4288      	cmp	r0, r1
 801a1e2:	f6bf af70 	bge.w	801a0c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a1e6:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801a1e8:	fb01 6303 	mla	r3, r1, r3, r6
 801a1ec:	141b      	asrs	r3, r3, #16
 801a1ee:	f53f af6a 	bmi.w	801a0c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a1f2:	3a01      	subs	r2, #1
 801a1f4:	4293      	cmp	r3, r2
 801a1f6:	f6bf af66 	bge.w	801a0c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a1fa:	46a9      	mov	r9, r5
 801a1fc:	46ba      	mov	sl, r7
 801a1fe:	f1b9 0f00 	cmp.w	r9, #0
 801a202:	dc5a      	bgt.n	801a2ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801a204:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801a208:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801a20c:	9b07      	ldr	r3, [sp, #28]
 801a20e:	2b00      	cmp	r3, #0
 801a210:	f340 80b8 	ble.w	801a384 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801a214:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a218:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801a21c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a220:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801a222:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a226:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a22a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a22e:	eef0 6a62 	vmov.f32	s13, s5
 801a232:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a236:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a23a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a23e:	ee16 4a90 	vmov	r4, s13
 801a242:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a246:	eef0 6a43 	vmov.f32	s13, s6
 801a24a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a24e:	ee12 2a90 	vmov	r2, s5
 801a252:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a256:	fb92 f3f3 	sdiv	r3, r2, r3
 801a25a:	ee13 2a10 	vmov	r2, s6
 801a25e:	931b      	str	r3, [sp, #108]	@ 0x6c
 801a260:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801a262:	fb92 f3f3 	sdiv	r3, r2, r3
 801a266:	931c      	str	r3, [sp, #112]	@ 0x70
 801a268:	9b07      	ldr	r3, [sp, #28]
 801a26a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801a26c:	3b01      	subs	r3, #1
 801a26e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a272:	9307      	str	r3, [sp, #28]
 801a274:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801a276:	ee16 6a90 	vmov	r6, s13
 801a27a:	bf14      	ite	ne
 801a27c:	461d      	movne	r5, r3
 801a27e:	4615      	moveq	r5, r2
 801a280:	eeb0 3a67 	vmov.f32	s6, s15
 801a284:	eef0 2a47 	vmov.f32	s5, s14
 801a288:	e6f4      	b.n	801a074 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801a28a:	f111 0b01 	adds.w	fp, r1, #1
 801a28e:	d48e      	bmi.n	801a1ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a290:	45de      	cmp	lr, fp
 801a292:	db8c      	blt.n	801a1ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a294:	f110 0b01 	adds.w	fp, r0, #1
 801a298:	d489      	bmi.n	801a1ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a29a:	455b      	cmp	r3, fp
 801a29c:	db87      	blt.n	801a1ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a29e:	b21b      	sxth	r3, r3
 801a2a0:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801a2a4:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801a2a8:	9300      	str	r3, [sp, #0]
 801a2aa:	4642      	mov	r2, r8
 801a2ac:	fa0f f38e 	sxth.w	r3, lr
 801a2b0:	4649      	mov	r1, r9
 801a2b2:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801a2b4:	f7ff fe4d 	bl	8019f52 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801a2b8:	e779      	b.n	801a1ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a2ba:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a2bc:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801a2c0:	1420      	asrs	r0, r4, #16
 801a2c2:	1431      	asrs	r1, r6, #16
 801a2c4:	fb03 0101 	mla	r1, r3, r1, r0
 801a2c8:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801a2cc:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801a2d0:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801a2d4:	8841      	ldrh	r1, [r0, #2]
 801a2d6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a2da:	f1be 0f00 	cmp.w	lr, #0
 801a2de:	d00b      	beq.n	801a2f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801a2e0:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801a2e4:	3b01      	subs	r3, #1
 801a2e6:	005b      	lsls	r3, r3, #1
 801a2e8:	3302      	adds	r3, #2
 801a2ea:	eb00 0b03 	add.w	fp, r0, r3
 801a2ee:	5ac3      	ldrh	r3, [r0, r3]
 801a2f0:	930a      	str	r3, [sp, #40]	@ 0x28
 801a2f2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801a2f6:	930b      	str	r3, [sp, #44]	@ 0x2c
 801a2f8:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801a2fc:	fb12 f30e 	smulbb	r3, r2, lr
 801a300:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801a304:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a308:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801a30c:	10db      	asrs	r3, r3, #3
 801a30e:	ea40 000c 	orr.w	r0, r0, ip
 801a312:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801a316:	f1ce 0c10 	rsb	ip, lr, #16
 801a31a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801a31e:	ebac 0c02 	sub.w	ip, ip, r2
 801a322:	ea4b 0101 	orr.w	r1, fp, r1
 801a326:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801a32a:	4351      	muls	r1, r2
 801a32c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801a32e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801a332:	fb0c 1c00 	mla	ip, ip, r0, r1
 801a336:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801a33a:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 801a33e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801a340:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801a342:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801a346:	0412      	lsls	r2, r2, #16
 801a348:	ea4b 0000 	orr.w	r0, fp, r0
 801a34c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801a350:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 801a354:	fb03 c000 	mla	r0, r3, r0, ip
 801a358:	ea42 0b0b 	orr.w	fp, r2, fp
 801a35c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801a360:	fb03 000b 	mla	r0, r3, fp, r0
 801a364:	0d43      	lsrs	r3, r0, #21
 801a366:	0940      	lsrs	r0, r0, #5
 801a368:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a36c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a370:	4318      	orrs	r0, r3
 801a372:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801a374:	f82a 0b02 	strh.w	r0, [sl], #2
 801a378:	441c      	add	r4, r3
 801a37a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a37c:	f109 39ff 	add.w	r9, r9, #4294967295
 801a380:	441e      	add	r6, r3
 801a382:	e73c      	b.n	801a1fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801a384:	b00f      	add	sp, #60	@ 0x3c
 801a386:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a38a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801a38a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a38e:	b085      	sub	sp, #20
 801a390:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801a394:	9102      	str	r1, [sp, #8]
 801a396:	2c00      	cmp	r4, #0
 801a398:	fb04 7103 	mla	r1, r4, r3, r7
 801a39c:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801a3a0:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801a3a4:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801a3a8:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801a3ac:	f2c0 811b 	blt.w	801a5e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801a3b0:	45a6      	cmp	lr, r4
 801a3b2:	f340 8118 	ble.w	801a5e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801a3b6:	2f00      	cmp	r7, #0
 801a3b8:	f2c0 8113 	blt.w	801a5e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801a3bc:	42bb      	cmp	r3, r7
 801a3be:	f340 8110 	ble.w	801a5e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801a3c2:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801a3c6:	1c7a      	adds	r2, r7, #1
 801a3c8:	f100 8110 	bmi.w	801a5ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801a3cc:	4293      	cmp	r3, r2
 801a3ce:	f340 810d 	ble.w	801a5ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801a3d2:	2e00      	cmp	r6, #0
 801a3d4:	f000 810c 	beq.w	801a5f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801a3d8:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801a3dc:	3401      	adds	r4, #1
 801a3de:	f100 810b 	bmi.w	801a5f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801a3e2:	45a6      	cmp	lr, r4
 801a3e4:	f340 8108 	ble.w	801a5f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801a3e8:	2800      	cmp	r0, #0
 801a3ea:	f000 8108 	beq.w	801a5fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801a3ee:	2f00      	cmp	r7, #0
 801a3f0:	f2c0 8100 	blt.w	801a5f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801a3f4:	42bb      	cmp	r3, r7
 801a3f6:	f340 80fd 	ble.w	801a5f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801a3fa:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801a3fe:	3701      	adds	r7, #1
 801a400:	f100 8100 	bmi.w	801a604 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801a404:	42bb      	cmp	r3, r7
 801a406:	f340 80fd 	ble.w	801a604 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801a40a:	2e00      	cmp	r6, #0
 801a40c:	f000 80fc 	beq.w	801a608 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801a410:	3301      	adds	r3, #1
 801a412:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801a416:	b2b6      	uxth	r6, r6
 801a418:	b280      	uxth	r0, r0
 801a41a:	fb00 fe06 	mul.w	lr, r0, r6
 801a41e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801a422:	0136      	lsls	r6, r6, #4
 801a424:	eba6 070e 	sub.w	r7, r6, lr
 801a428:	b280      	uxth	r0, r0
 801a42a:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801a42e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801a432:	b2bf      	uxth	r7, r7
 801a434:	1a1b      	subs	r3, r3, r0
 801a436:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801a43a:	b29b      	uxth	r3, r3
 801a43c:	fb0a f607 	mul.w	r6, sl, r7
 801a440:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801a444:	fb0b 6603 	mla	r6, fp, r3, r6
 801a448:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801a44c:	fb00 6609 	mla	r6, r0, r9, r6
 801a450:	fb0e 6608 	mla	r6, lr, r8, r6
 801a454:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801a458:	9600      	str	r6, [sp, #0]
 801a45a:	2e00      	cmp	r6, #0
 801a45c:	f000 80be 	beq.w	801a5dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801a460:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801a464:	fb0b fc0c 	mul.w	ip, fp, ip
 801a468:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801a46c:	fb0b f505 	mul.w	r5, fp, r5
 801a470:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801a474:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801a478:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801a47c:	44dc      	add	ip, fp
 801a47e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a482:	9501      	str	r5, [sp, #4]
 801a484:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801a488:	9503      	str	r5, [sp, #12]
 801a48a:	9d01      	ldr	r5, [sp, #4]
 801a48c:	9e02      	ldr	r6, [sp, #8]
 801a48e:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801a492:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801a496:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801a49a:	fb0a fc0c 	mul.w	ip, sl, ip
 801a49e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801a4a2:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801a4a6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801a4aa:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801a4ae:	4465      	add	r5, ip
 801a4b0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801a4b4:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801a4b8:	fb09 fc0c 	mul.w	ip, r9, ip
 801a4bc:	fb09 f904 	mul.w	r9, r9, r4
 801a4c0:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801a4c4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801a4c8:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801a4cc:	fb08 f404 	mul.w	r4, r8, r4
 801a4d0:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801a4d4:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801a4d8:	fb08 f802 	mul.w	r8, r8, r2
 801a4dc:	fb0a fa01 	mul.w	sl, sl, r1
 801a4e0:	0a22      	lsrs	r2, r4, #8
 801a4e2:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801a4e6:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801a4ea:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801a4ee:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801a4f2:	4414      	add	r4, r2
 801a4f4:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801a4f8:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801a4fc:	0a2d      	lsrs	r5, r5, #8
 801a4fe:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801a502:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801a506:	9a03      	ldr	r2, [sp, #12]
 801a508:	8836      	ldrh	r6, [r6, #0]
 801a50a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801a50e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801a512:	437d      	muls	r5, r7
 801a514:	4461      	add	r1, ip
 801a516:	0a24      	lsrs	r4, r4, #8
 801a518:	fb02 5503 	mla	r5, r2, r3, r5
 801a51c:	0a09      	lsrs	r1, r1, #8
 801a51e:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801a522:	fb04 540e 	mla	r4, r4, lr, r5
 801a526:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801a52a:	fb01 4100 	mla	r1, r1, r0, r4
 801a52e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a532:	0a09      	lsrs	r1, r1, #8
 801a534:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801a538:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801a53c:	fb07 f70a 	mul.w	r7, r7, sl
 801a540:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801a544:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801a548:	fb03 7101 	mla	r1, r3, r1, r7
 801a54c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a550:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801a554:	fb0e 1e08 	mla	lr, lr, r8, r1
 801a558:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801a55c:	fb00 e101 	mla	r1, r0, r1, lr
 801a560:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801a564:	9a00      	ldr	r2, [sp, #0]
 801a566:	b287      	uxth	r7, r0
 801a568:	437a      	muls	r2, r7
 801a56a:	0a09      	lsrs	r1, r1, #8
 801a56c:	1c53      	adds	r3, r2, #1
 801a56e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801a572:	4321      	orrs	r1, r4
 801a574:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a578:	1235      	asrs	r5, r6, #8
 801a57a:	0c0a      	lsrs	r2, r1, #16
 801a57c:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801a580:	b2db      	uxtb	r3, r3
 801a582:	fb12 f207 	smulbb	r2, r2, r7
 801a586:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801a58a:	fb05 2503 	mla	r5, r5, r3, r2
 801a58e:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801a592:	10f2      	asrs	r2, r6, #3
 801a594:	b2c8      	uxtb	r0, r1
 801a596:	00f6      	lsls	r6, r6, #3
 801a598:	fb14 f407 	smulbb	r4, r4, r7
 801a59c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801a5a0:	b2f6      	uxtb	r6, r6
 801a5a2:	fb10 f007 	smulbb	r0, r0, r7
 801a5a6:	fb02 4203 	mla	r2, r2, r3, r4
 801a5aa:	b2ad      	uxth	r5, r5
 801a5ac:	fb06 0303 	mla	r3, r6, r3, r0
 801a5b0:	b299      	uxth	r1, r3
 801a5b2:	b294      	uxth	r4, r2
 801a5b4:	1c6b      	adds	r3, r5, #1
 801a5b6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801a5ba:	1c62      	adds	r2, r4, #1
 801a5bc:	1c4b      	adds	r3, r1, #1
 801a5be:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801a5c2:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801a5c6:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801a5ca:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a5ce:	0952      	lsrs	r2, r2, #5
 801a5d0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a5d4:	432b      	orrs	r3, r5
 801a5d6:	4313      	orrs	r3, r2
 801a5d8:	9a02      	ldr	r2, [sp, #8]
 801a5da:	8013      	strh	r3, [r2, #0]
 801a5dc:	b005      	add	sp, #20
 801a5de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a5e2:	2500      	movs	r5, #0
 801a5e4:	e6ef      	b.n	801a3c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801a5e6:	2100      	movs	r1, #0
 801a5e8:	460d      	mov	r5, r1
 801a5ea:	e6f7      	b.n	801a3dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801a5ec:	2100      	movs	r1, #0
 801a5ee:	e6f5      	b.n	801a3dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801a5f0:	4631      	mov	r1, r6
 801a5f2:	e6f3      	b.n	801a3dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801a5f4:	2400      	movs	r4, #0
 801a5f6:	e702      	b.n	801a3fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801a5f8:	2200      	movs	r2, #0
 801a5fa:	4614      	mov	r4, r2
 801a5fc:	e70b      	b.n	801a416 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801a5fe:	4602      	mov	r2, r0
 801a600:	4604      	mov	r4, r0
 801a602:	e708      	b.n	801a416 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801a604:	2200      	movs	r2, #0
 801a606:	e706      	b.n	801a416 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801a608:	4632      	mov	r2, r6
 801a60a:	e704      	b.n	801a416 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801a60c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a60c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a610:	b09d      	sub	sp, #116	@ 0x74
 801a612:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 801a616:	9219      	str	r2, [sp, #100]	@ 0x64
 801a618:	9307      	str	r3, [sp, #28]
 801a61a:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 801a61c:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 801a620:	931a      	str	r3, [sp, #104]	@ 0x68
 801a622:	9117      	str	r1, [sp, #92]	@ 0x5c
 801a624:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 801a628:	901b      	str	r0, [sp, #108]	@ 0x6c
 801a62a:	6850      	ldr	r0, [r2, #4]
 801a62c:	6812      	ldr	r2, [r2, #0]
 801a62e:	fb00 1303 	mla	r3, r0, r3, r1
 801a632:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a636:	930a      	str	r3, [sp, #40]	@ 0x28
 801a638:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801a63a:	681b      	ldr	r3, [r3, #0]
 801a63c:	9310      	str	r3, [sp, #64]	@ 0x40
 801a63e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801a642:	930b      	str	r3, [sp, #44]	@ 0x2c
 801a644:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801a646:	2b00      	cmp	r3, #0
 801a648:	dc03      	bgt.n	801a652 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801a64a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801a64c:	2b00      	cmp	r3, #0
 801a64e:	f340 8375 	ble.w	801ad3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801a652:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801a654:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a658:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a65c:	1e48      	subs	r0, r1, #1
 801a65e:	1e57      	subs	r7, r2, #1
 801a660:	9b07      	ldr	r3, [sp, #28]
 801a662:	2b00      	cmp	r3, #0
 801a664:	f340 818e 	ble.w	801a984 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801a668:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801a66c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a670:	d406      	bmi.n	801a680 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801a672:	4584      	cmp	ip, r0
 801a674:	da04      	bge.n	801a680 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801a676:	2b00      	cmp	r3, #0
 801a678:	db02      	blt.n	801a680 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801a67a:	42bb      	cmp	r3, r7
 801a67c:	f2c0 8183 	blt.w	801a986 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801a680:	f11c 0c01 	adds.w	ip, ip, #1
 801a684:	f100 8173 	bmi.w	801a96e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801a688:	4561      	cmp	r1, ip
 801a68a:	f2c0 8170 	blt.w	801a96e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801a68e:	3301      	adds	r3, #1
 801a690:	f100 816d 	bmi.w	801a96e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801a694:	429a      	cmp	r2, r3
 801a696:	f2c0 816a 	blt.w	801a96e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801a69a:	9b07      	ldr	r3, [sp, #28]
 801a69c:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801a69e:	9318      	str	r3, [sp, #96]	@ 0x60
 801a6a0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801a6a2:	2b00      	cmp	r3, #0
 801a6a4:	f340 818c 	ble.w	801a9c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801a6a8:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 801a6aa:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801a6ac:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801a6b0:	689b      	ldr	r3, [r3, #8]
 801a6b2:	1422      	asrs	r2, r4, #16
 801a6b4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801a6b8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801a6bc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801a6c0:	f100 81cd 	bmi.w	801aa5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801a6c4:	f103 38ff 	add.w	r8, r3, #4294967295
 801a6c8:	4542      	cmp	r2, r8
 801a6ca:	f280 81c8 	bge.w	801aa5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801a6ce:	f1bc 0f00 	cmp.w	ip, #0
 801a6d2:	f2c0 81c4 	blt.w	801aa5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801a6d6:	f10e 38ff 	add.w	r8, lr, #4294967295
 801a6da:	45c4      	cmp	ip, r8
 801a6dc:	f280 81bf 	bge.w	801aa5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801a6e0:	b21b      	sxth	r3, r3
 801a6e2:	fb0c 2203 	mla	r2, ip, r3, r2
 801a6e6:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801a6e8:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801a6ec:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801a6f0:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801a6f4:	2800      	cmp	r0, #0
 801a6f6:	f000 81a9 	beq.w	801aa4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801a6fa:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801a6fe:	950c      	str	r5, [sp, #48]	@ 0x30
 801a700:	0e2d      	lsrs	r5, r5, #24
 801a702:	9513      	str	r5, [sp, #76]	@ 0x4c
 801a704:	b181      	cbz	r1, 801a728 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a706:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801a70a:	3b01      	subs	r3, #1
 801a70c:	009b      	lsls	r3, r3, #2
 801a70e:	3304      	adds	r3, #4
 801a710:	eb08 0c03 	add.w	ip, r8, r3
 801a714:	f858 3003 	ldr.w	r3, [r8, r3]
 801a718:	9308      	str	r3, [sp, #32]
 801a71a:	0e1b      	lsrs	r3, r3, #24
 801a71c:	9311      	str	r3, [sp, #68]	@ 0x44
 801a71e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801a722:	930d      	str	r3, [sp, #52]	@ 0x34
 801a724:	0e1b      	lsrs	r3, r3, #24
 801a726:	9314      	str	r3, [sp, #80]	@ 0x50
 801a728:	b280      	uxth	r0, r0
 801a72a:	b289      	uxth	r1, r1
 801a72c:	fb00 f901 	mul.w	r9, r0, r1
 801a730:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a734:	0100      	lsls	r0, r0, #4
 801a736:	eba0 0809 	sub.w	r8, r0, r9
 801a73a:	b289      	uxth	r1, r1
 801a73c:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801a740:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801a742:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801a744:	fa1f f888 	uxth.w	r8, r8
 801a748:	1a5b      	subs	r3, r3, r1
 801a74a:	b29b      	uxth	r3, r3
 801a74c:	fb08 f000 	mul.w	r0, r8, r0
 801a750:	fb03 000e 	mla	r0, r3, lr, r0
 801a754:	fb01 0005 	mla	r0, r1, r5, r0
 801a758:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801a75a:	fb09 0005 	mla	r0, r9, r5, r0
 801a75e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801a762:	2800      	cmp	r0, #0
 801a764:	f000 80fa 	beq.w	801a95c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801a768:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801a76c:	d01b      	beq.n	801a7a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801a76e:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801a772:	fb0e fa0a 	mul.w	sl, lr, sl
 801a776:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801a77a:	fb0e fe02 	mul.w	lr, lr, r2
 801a77e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801a782:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801a786:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801a78a:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801a78e:	4452      	add	r2, sl
 801a790:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a794:	0a12      	lsrs	r2, r2, #8
 801a796:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a79a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801a79e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801a7a2:	ea42 020c 	orr.w	r2, r2, ip
 801a7a6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801a7a8:	2dff      	cmp	r5, #255	@ 0xff
 801a7aa:	d021      	beq.n	801a7f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801a7ac:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801a7ae:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801a7b2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801a7b4:	fb05 fb0b 	mul.w	fp, r5, fp
 801a7b8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801a7ba:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801a7be:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801a7c0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a7c4:	fb05 fa0a 	mul.w	sl, r5, sl
 801a7c8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801a7cc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801a7d0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801a7d4:	44de      	add	lr, fp
 801a7d6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a7da:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a7de:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a7e2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801a7e6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801a7ea:	ea4e 050a 	orr.w	r5, lr, sl
 801a7ee:	950c      	str	r5, [sp, #48]	@ 0x30
 801a7f0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801a7f2:	2dff      	cmp	r5, #255	@ 0xff
 801a7f4:	d021      	beq.n	801a83a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801a7f6:	9d08      	ldr	r5, [sp, #32]
 801a7f8:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801a7fc:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801a7fe:	fb05 fb0b 	mul.w	fp, r5, fp
 801a802:	9d08      	ldr	r5, [sp, #32]
 801a804:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801a808:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801a80a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a80e:	fb05 fa0a 	mul.w	sl, r5, sl
 801a812:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801a816:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801a81a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801a81e:	44de      	add	lr, fp
 801a820:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a824:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a828:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a82c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801a830:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801a834:	ea4e 050a 	orr.w	r5, lr, sl
 801a838:	9508      	str	r5, [sp, #32]
 801a83a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801a83c:	2dff      	cmp	r5, #255	@ 0xff
 801a83e:	d021      	beq.n	801a884 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801a840:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801a842:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801a846:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801a848:	fb05 fb0b 	mul.w	fp, r5, fp
 801a84c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801a84e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801a852:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801a854:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a858:	fb05 fa0a 	mul.w	sl, r5, sl
 801a85c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801a860:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801a864:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801a868:	44de      	add	lr, fp
 801a86a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a86e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a872:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a876:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801a87a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801a87e:	ea4e 050a 	orr.w	r5, lr, sl
 801a882:	950d      	str	r5, [sp, #52]	@ 0x34
 801a884:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801a886:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801a88a:	9d08      	ldr	r5, [sp, #32]
 801a88c:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801a890:	fb08 fc0c 	mul.w	ip, r8, ip
 801a894:	fb03 cc0e 	mla	ip, r3, lr, ip
 801a898:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801a89c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801a89e:	fb01 cc0e 	mla	ip, r1, lr, ip
 801a8a2:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801a8a6:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801a8a8:	fb09 cc0e 	mla	ip, r9, lr, ip
 801a8ac:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801a8b0:	fb08 f80e 	mul.w	r8, r8, lr
 801a8b4:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801a8b8:	fb03 8202 	mla	r2, r3, r2, r8
 801a8bc:	9b08      	ldr	r3, [sp, #32]
 801a8be:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801a8c0:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 801a8c4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a8c6:	fb01 220a 	mla	r2, r1, sl, r2
 801a8ca:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 801a8ce:	fb09 2901 	mla	r9, r9, r1, r2
 801a8d2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801a8d4:	883b      	ldrh	r3, [r7, #0]
 801a8d6:	4342      	muls	r2, r0
 801a8d8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a8dc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a8e0:	1c50      	adds	r0, r2, #1
 801a8e2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801a8e6:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801a8ea:	ea4c 0c09 	orr.w	ip, ip, r9
 801a8ee:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801a8f2:	1219      	asrs	r1, r3, #8
 801a8f4:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801a8f8:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801a8fc:	b2c0      	uxtb	r0, r0
 801a8fe:	fb12 f205 	smulbb	r2, r2, r5
 801a902:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801a906:	fb01 2100 	mla	r1, r1, r0, r2
 801a90a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801a90e:	10da      	asrs	r2, r3, #3
 801a910:	fa5f fc8c 	uxtb.w	ip, ip
 801a914:	00db      	lsls	r3, r3, #3
 801a916:	fb1c fc05 	smulbb	ip, ip, r5
 801a91a:	b2db      	uxtb	r3, r3
 801a91c:	b289      	uxth	r1, r1
 801a91e:	fb03 c300 	mla	r3, r3, r0, ip
 801a922:	fa1f fc83 	uxth.w	ip, r3
 801a926:	1c4b      	adds	r3, r1, #1
 801a928:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801a92c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801a930:	fb1e fe05 	smulbb	lr, lr, r5
 801a934:	f10c 0301 	add.w	r3, ip, #1
 801a938:	fb02 e200 	mla	r2, r2, r0, lr
 801a93c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801a940:	b292      	uxth	r2, r2
 801a942:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801a946:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a94a:	430b      	orrs	r3, r1
 801a94c:	1c51      	adds	r1, r2, #1
 801a94e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a952:	0952      	lsrs	r2, r2, #5
 801a954:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a958:	4313      	orrs	r3, r2
 801a95a:	803b      	strh	r3, [r7, #0]
 801a95c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801a95e:	441c      	add	r4, r3
 801a960:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801a962:	441e      	add	r6, r3
 801a964:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801a966:	3b01      	subs	r3, #1
 801a968:	3702      	adds	r7, #2
 801a96a:	9318      	str	r3, [sp, #96]	@ 0x60
 801a96c:	e698      	b.n	801a6a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a96e:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801a970:	441c      	add	r4, r3
 801a972:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801a974:	441e      	add	r6, r3
 801a976:	9b07      	ldr	r3, [sp, #28]
 801a978:	3b01      	subs	r3, #1
 801a97a:	9307      	str	r3, [sp, #28]
 801a97c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a97e:	3302      	adds	r3, #2
 801a980:	930a      	str	r3, [sp, #40]	@ 0x28
 801a982:	e66d      	b.n	801a660 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801a984:	d023      	beq.n	801a9ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801a986:	9b07      	ldr	r3, [sp, #28]
 801a988:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 801a98a:	3b01      	subs	r3, #1
 801a98c:	fb00 4003 	mla	r0, r0, r3, r4
 801a990:	1400      	asrs	r0, r0, #16
 801a992:	f53f ae82 	bmi.w	801a69a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801a996:	3901      	subs	r1, #1
 801a998:	4288      	cmp	r0, r1
 801a99a:	f6bf ae7e 	bge.w	801a69a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801a99e:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801a9a0:	fb01 6303 	mla	r3, r1, r3, r6
 801a9a4:	141b      	asrs	r3, r3, #16
 801a9a6:	f53f ae78 	bmi.w	801a69a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801a9aa:	3a01      	subs	r2, #1
 801a9ac:	4293      	cmp	r3, r2
 801a9ae:	f6bf ae74 	bge.w	801a69a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801a9b2:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801a9b6:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801a9ba:	f1bb 0f00 	cmp.w	fp, #0
 801a9be:	dc6c      	bgt.n	801aa9a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801a9c0:	9b07      	ldr	r3, [sp, #28]
 801a9c2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a9c6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a9c8:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801a9cc:	930a      	str	r3, [sp, #40]	@ 0x28
 801a9ce:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801a9d0:	2b00      	cmp	r3, #0
 801a9d2:	f340 81b3 	ble.w	801ad3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801a9d6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a9da:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801a9de:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a9e2:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a9e4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a9e8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a9ec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a9f0:	eef0 6a62 	vmov.f32	s13, s5
 801a9f4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a9f8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a9fc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801aa00:	ee16 4a90 	vmov	r4, s13
 801aa04:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801aa08:	eef0 6a43 	vmov.f32	s13, s6
 801aa0c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801aa10:	ee12 2a90 	vmov	r2, s5
 801aa14:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801aa18:	fb92 f3f3 	sdiv	r3, r2, r3
 801aa1c:	ee13 2a10 	vmov	r2, s6
 801aa20:	9329      	str	r3, [sp, #164]	@ 0xa4
 801aa22:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801aa24:	fb92 f3f3 	sdiv	r3, r2, r3
 801aa28:	932a      	str	r3, [sp, #168]	@ 0xa8
 801aa2a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801aa2c:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801aa2e:	3b01      	subs	r3, #1
 801aa30:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801aa34:	9317      	str	r3, [sp, #92]	@ 0x5c
 801aa36:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801aa38:	bf08      	it	eq
 801aa3a:	4613      	moveq	r3, r2
 801aa3c:	ee16 6a90 	vmov	r6, s13
 801aa40:	9307      	str	r3, [sp, #28]
 801aa42:	eeb0 3a67 	vmov.f32	s6, s15
 801aa46:	eef0 2a47 	vmov.f32	s5, s14
 801aa4a:	e5fb      	b.n	801a644 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801aa4c:	2900      	cmp	r1, #0
 801aa4e:	f43f ae6b 	beq.w	801a728 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801aa52:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801aa56:	9308      	str	r3, [sp, #32]
 801aa58:	0e1b      	lsrs	r3, r3, #24
 801aa5a:	9311      	str	r3, [sp, #68]	@ 0x44
 801aa5c:	e664      	b.n	801a728 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801aa5e:	f112 0801 	adds.w	r8, r2, #1
 801aa62:	f53f af7b 	bmi.w	801a95c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801aa66:	4543      	cmp	r3, r8
 801aa68:	f6ff af78 	blt.w	801a95c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801aa6c:	f11c 0801 	adds.w	r8, ip, #1
 801aa70:	f53f af74 	bmi.w	801a95c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801aa74:	45c6      	cmp	lr, r8
 801aa76:	f6ff af71 	blt.w	801a95c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801aa7a:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801aa7c:	9201      	str	r2, [sp, #4]
 801aa7e:	fa0f f28e 	sxth.w	r2, lr
 801aa82:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801aa86:	e9cd c002 	strd	ip, r0, [sp, #8]
 801aa8a:	9200      	str	r2, [sp, #0]
 801aa8c:	b21b      	sxth	r3, r3
 801aa8e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801aa90:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801aa92:	4639      	mov	r1, r7
 801aa94:	f7ff fc79 	bl	801a38a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801aa98:	e760      	b.n	801a95c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801aa9a:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801aa9c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801aa9e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801aaa2:	1427      	asrs	r7, r4, #16
 801aaa4:	1433      	asrs	r3, r6, #16
 801aaa6:	fb01 7303 	mla	r3, r1, r3, r7
 801aaaa:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801aaae:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801aab2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801aab6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801aaba:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801aabe:	2a00      	cmp	r2, #0
 801aac0:	f000 8133 	beq.w	801ad2a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801aac4:	687d      	ldr	r5, [r7, #4]
 801aac6:	950e      	str	r5, [sp, #56]	@ 0x38
 801aac8:	0e2d      	lsrs	r5, r5, #24
 801aaca:	9515      	str	r5, [sp, #84]	@ 0x54
 801aacc:	b178      	cbz	r0, 801aaee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801aace:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 801aad2:	3901      	subs	r1, #1
 801aad4:	0089      	lsls	r1, r1, #2
 801aad6:	3104      	adds	r1, #4
 801aad8:	eb07 0e01 	add.w	lr, r7, r1
 801aadc:	5879      	ldr	r1, [r7, r1]
 801aade:	9109      	str	r1, [sp, #36]	@ 0x24
 801aae0:	0e09      	lsrs	r1, r1, #24
 801aae2:	9112      	str	r1, [sp, #72]	@ 0x48
 801aae4:	f8de 1004 	ldr.w	r1, [lr, #4]
 801aae8:	910f      	str	r1, [sp, #60]	@ 0x3c
 801aaea:	0e09      	lsrs	r1, r1, #24
 801aaec:	9116      	str	r1, [sp, #88]	@ 0x58
 801aaee:	b292      	uxth	r2, r2
 801aaf0:	b280      	uxth	r0, r0
 801aaf2:	fb02 f800 	mul.w	r8, r2, r0
 801aaf6:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801aafa:	0112      	lsls	r2, r2, #4
 801aafc:	eba2 0e08 	sub.w	lr, r2, r8
 801ab00:	b280      	uxth	r0, r0
 801ab02:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801ab06:	9915      	ldr	r1, [sp, #84]	@ 0x54
 801ab08:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801ab0a:	fa1f fe8e 	uxth.w	lr, lr
 801ab0e:	1a12      	subs	r2, r2, r0
 801ab10:	b292      	uxth	r2, r2
 801ab12:	fb0e f101 	mul.w	r1, lr, r1
 801ab16:	fb02 110c 	mla	r1, r2, ip, r1
 801ab1a:	fb00 1105 	mla	r1, r0, r5, r1
 801ab1e:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801ab20:	fb08 1105 	mla	r1, r8, r5, r1
 801ab24:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801ab28:	2900      	cmp	r1, #0
 801ab2a:	f000 80f5 	beq.w	801ad18 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801ab2e:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801ab32:	d019      	beq.n	801ab68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801ab34:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801ab38:	fb0c fa0a 	mul.w	sl, ip, sl
 801ab3c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ab40:	fb0c fc03 	mul.w	ip, ip, r3
 801ab44:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ab48:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ab4c:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801ab50:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801ab54:	4453      	add	r3, sl
 801ab56:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ab5a:	0a1b      	lsrs	r3, r3, #8
 801ab5c:	0a3f      	lsrs	r7, r7, #8
 801ab5e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ab62:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801ab66:	433b      	orrs	r3, r7
 801ab68:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801ab6a:	2dff      	cmp	r5, #255	@ 0xff
 801ab6c:	d020      	beq.n	801abb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801ab6e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ab70:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ab74:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801ab76:	436f      	muls	r7, r5
 801ab78:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ab7a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ab7e:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801ab80:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ab84:	fb05 fa0a 	mul.w	sl, r5, sl
 801ab88:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ab8c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ab90:	44bc      	add	ip, r7
 801ab92:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ab96:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ab9a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ab9e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aba2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801aba6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801abaa:	ea4c 050a 	orr.w	r5, ip, sl
 801abae:	950e      	str	r5, [sp, #56]	@ 0x38
 801abb0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801abb2:	2dff      	cmp	r5, #255	@ 0xff
 801abb4:	d020      	beq.n	801abf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801abb6:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801abb8:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801abbc:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801abbe:	436f      	muls	r7, r5
 801abc0:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801abc2:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801abc6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801abc8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801abcc:	fb05 fa0a 	mul.w	sl, r5, sl
 801abd0:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801abd4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801abd8:	44bc      	add	ip, r7
 801abda:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801abde:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801abe2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801abe6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801abea:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801abee:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801abf2:	ea4c 050a 	orr.w	r5, ip, sl
 801abf6:	9509      	str	r5, [sp, #36]	@ 0x24
 801abf8:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801abfa:	2dff      	cmp	r5, #255	@ 0xff
 801abfc:	d020      	beq.n	801ac40 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801abfe:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801ac00:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ac04:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801ac06:	436f      	muls	r7, r5
 801ac08:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801ac0a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ac0e:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801ac10:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ac14:	fb05 fa0a 	mul.w	sl, r5, sl
 801ac18:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ac1c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ac20:	44bc      	add	ip, r7
 801ac22:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ac26:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ac2a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ac2e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ac32:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ac36:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ac3a:	ea4c 050a 	orr.w	r5, ip, sl
 801ac3e:	950f      	str	r5, [sp, #60]	@ 0x3c
 801ac40:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ac42:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ac46:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801ac48:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801ac4c:	fb0e f707 	mul.w	r7, lr, r7
 801ac50:	fb02 770c 	mla	r7, r2, ip, r7
 801ac54:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801ac58:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801ac5a:	fb00 770c 	mla	r7, r0, ip, r7
 801ac5e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801ac62:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ac64:	fb08 770c 	mla	r7, r8, ip, r7
 801ac68:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801ac6c:	fb0e fe0c 	mul.w	lr, lr, ip
 801ac70:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ac74:	fb02 e303 	mla	r3, r2, r3, lr
 801ac78:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801ac7a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801ac7c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801ac80:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801ac82:	fb00 330a 	mla	r3, r0, sl, r3
 801ac86:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801ac8a:	fb08 3c0c 	mla	ip, r8, ip, r3
 801ac8e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ac90:	f8b9 0000 	ldrh.w	r0, [r9]
 801ac94:	4359      	muls	r1, r3
 801ac96:	0a3f      	lsrs	r7, r7, #8
 801ac98:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ac9c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801aca0:	1c4b      	adds	r3, r1, #1
 801aca2:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801aca6:	ea47 070c 	orr.w	r7, r7, ip
 801acaa:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801acae:	1202      	asrs	r2, r0, #8
 801acb0:	0c3b      	lsrs	r3, r7, #16
 801acb2:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801acb6:	b2c9      	uxtb	r1, r1
 801acb8:	fb13 f305 	smulbb	r3, r3, r5
 801acbc:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801acc0:	fb02 3201 	mla	r2, r2, r1, r3
 801acc4:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801acc8:	10c3      	asrs	r3, r0, #3
 801acca:	b2ff      	uxtb	r7, r7
 801accc:	00c0      	lsls	r0, r0, #3
 801acce:	b2c0      	uxtb	r0, r0
 801acd0:	fb17 f705 	smulbb	r7, r7, r5
 801acd4:	fb00 7001 	mla	r0, r0, r1, r7
 801acd8:	b292      	uxth	r2, r2
 801acda:	fb1c fc05 	smulbb	ip, ip, r5
 801acde:	b280      	uxth	r0, r0
 801ace0:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801ace4:	fb03 c301 	mla	r3, r3, r1, ip
 801ace8:	1c51      	adds	r1, r2, #1
 801acea:	f100 0c01 	add.w	ip, r0, #1
 801acee:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801acf2:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801acf6:	b29b      	uxth	r3, r3
 801acf8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801acfc:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801ad00:	ea4c 0202 	orr.w	r2, ip, r2
 801ad04:	f103 0c01 	add.w	ip, r3, #1
 801ad08:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801ad0c:	095b      	lsrs	r3, r3, #5
 801ad0e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ad12:	431a      	orrs	r2, r3
 801ad14:	f8a9 2000 	strh.w	r2, [r9]
 801ad18:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801ad1a:	441c      	add	r4, r3
 801ad1c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801ad1e:	f109 0902 	add.w	r9, r9, #2
 801ad22:	441e      	add	r6, r3
 801ad24:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ad28:	e647      	b.n	801a9ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801ad2a:	2800      	cmp	r0, #0
 801ad2c:	f43f aedf 	beq.w	801aaee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801ad30:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801ad34:	9109      	str	r1, [sp, #36]	@ 0x24
 801ad36:	0e09      	lsrs	r1, r1, #24
 801ad38:	9112      	str	r1, [sp, #72]	@ 0x48
 801ad3a:	e6d8      	b.n	801aaee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801ad3c:	b01d      	add	sp, #116	@ 0x74
 801ad3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ad42 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801ad42:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ad46:	b085      	sub	sp, #20
 801ad48:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801ad4c:	9102      	str	r1, [sp, #8]
 801ad4e:	2c00      	cmp	r4, #0
 801ad50:	fb04 7103 	mla	r1, r4, r3, r7
 801ad54:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801ad58:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801ad5c:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801ad60:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801ad64:	f2c0 810c 	blt.w	801af80 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801ad68:	45a6      	cmp	lr, r4
 801ad6a:	f340 8109 	ble.w	801af80 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801ad6e:	2f00      	cmp	r7, #0
 801ad70:	f2c0 8104 	blt.w	801af7c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801ad74:	42bb      	cmp	r3, r7
 801ad76:	f340 8101 	ble.w	801af7c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801ad7a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801ad7e:	1c7a      	adds	r2, r7, #1
 801ad80:	f100 8101 	bmi.w	801af86 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801ad84:	4293      	cmp	r3, r2
 801ad86:	f340 80fe 	ble.w	801af86 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801ad8a:	2e00      	cmp	r6, #0
 801ad8c:	f000 80fd 	beq.w	801af8a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801ad90:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801ad94:	3401      	adds	r4, #1
 801ad96:	f100 80fc 	bmi.w	801af92 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801ad9a:	45a6      	cmp	lr, r4
 801ad9c:	f340 80f9 	ble.w	801af92 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801ada0:	2800      	cmp	r0, #0
 801ada2:	f000 80f9 	beq.w	801af98 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801ada6:	2f00      	cmp	r7, #0
 801ada8:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801adac:	f2c0 80ef 	blt.w	801af8e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801adb0:	42bb      	cmp	r3, r7
 801adb2:	f340 80ec 	ble.w	801af8e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801adb6:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801adba:	3701      	adds	r7, #1
 801adbc:	f100 80ef 	bmi.w	801af9e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801adc0:	42bb      	cmp	r3, r7
 801adc2:	f340 80ec 	ble.w	801af9e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801adc6:	2e00      	cmp	r6, #0
 801adc8:	f000 80eb 	beq.w	801afa2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801adcc:	6852      	ldr	r2, [r2, #4]
 801adce:	b2b6      	uxth	r6, r6
 801add0:	b280      	uxth	r0, r0
 801add2:	fb00 fe06 	mul.w	lr, r0, r6
 801add6:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801adda:	0136      	lsls	r6, r6, #4
 801addc:	eba6 070e 	sub.w	r7, r6, lr
 801ade0:	b280      	uxth	r0, r0
 801ade2:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801ade6:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801adea:	b2bf      	uxth	r7, r7
 801adec:	1a1b      	subs	r3, r3, r0
 801adee:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801adf2:	b29b      	uxth	r3, r3
 801adf4:	fb07 f60a 	mul.w	r6, r7, sl
 801adf8:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801adfc:	fb0b 6603 	mla	r6, fp, r3, r6
 801ae00:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801ae04:	fb00 6609 	mla	r6, r0, r9, r6
 801ae08:	fb0e 6608 	mla	r6, lr, r8, r6
 801ae0c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801ae10:	9600      	str	r6, [sp, #0]
 801ae12:	2e00      	cmp	r6, #0
 801ae14:	f000 80af 	beq.w	801af76 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801ae18:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801ae1c:	fb0b fc0c 	mul.w	ip, fp, ip
 801ae20:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801ae24:	fb0b f505 	mul.w	r5, fp, r5
 801ae28:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801ae2c:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801ae30:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801ae34:	44dc      	add	ip, fp
 801ae36:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ae3a:	9501      	str	r5, [sp, #4]
 801ae3c:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801ae40:	9503      	str	r5, [sp, #12]
 801ae42:	9d01      	ldr	r5, [sp, #4]
 801ae44:	9e02      	ldr	r6, [sp, #8]
 801ae46:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801ae4a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ae4e:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801ae52:	fb0a fc0c 	mul.w	ip, sl, ip
 801ae56:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801ae5a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801ae5e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801ae62:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801ae66:	4465      	add	r5, ip
 801ae68:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801ae6c:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801ae70:	fb09 fc0c 	mul.w	ip, r9, ip
 801ae74:	fb09 f904 	mul.w	r9, r9, r4
 801ae78:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801ae7c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801ae80:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801ae84:	fb08 f404 	mul.w	r4, r8, r4
 801ae88:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801ae8c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801ae90:	fb08 f802 	mul.w	r8, r8, r2
 801ae94:	fb0a fa01 	mul.w	sl, sl, r1
 801ae98:	0a22      	lsrs	r2, r4, #8
 801ae9a:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801ae9e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801aea2:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801aea6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801aeaa:	4414      	add	r4, r2
 801aeac:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801aeb0:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801aeb4:	0a2d      	lsrs	r5, r5, #8
 801aeb6:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801aeba:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801aebe:	9a03      	ldr	r2, [sp, #12]
 801aec0:	8836      	ldrh	r6, [r6, #0]
 801aec2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801aec6:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801aeca:	437d      	muls	r5, r7
 801aecc:	4461      	add	r1, ip
 801aece:	0a24      	lsrs	r4, r4, #8
 801aed0:	fb02 5503 	mla	r5, r2, r3, r5
 801aed4:	0a09      	lsrs	r1, r1, #8
 801aed6:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801aeda:	fb04 540e 	mla	r4, r4, lr, r5
 801aede:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801aee2:	fb01 4100 	mla	r1, r1, r0, r4
 801aee6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aeea:	0a09      	lsrs	r1, r1, #8
 801aeec:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801aef0:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801aef4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801aef8:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801aefc:	fb07 f70a 	mul.w	r7, r7, sl
 801af00:	fb03 7101 	mla	r1, r3, r1, r7
 801af04:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801af08:	9b00      	ldr	r3, [sp, #0]
 801af0a:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801af0e:	fb0e 1e08 	mla	lr, lr, r8, r1
 801af12:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801af16:	fb00 e101 	mla	r1, r0, r1, lr
 801af1a:	43da      	mvns	r2, r3
 801af1c:	1233      	asrs	r3, r6, #8
 801af1e:	b2d2      	uxtb	r2, r2
 801af20:	10f0      	asrs	r0, r6, #3
 801af22:	0a09      	lsrs	r1, r1, #8
 801af24:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801af28:	00f6      	lsls	r6, r6, #3
 801af2a:	4353      	muls	r3, r2
 801af2c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801af30:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801af34:	b2f6      	uxtb	r6, r6
 801af36:	4321      	orrs	r1, r4
 801af38:	4350      	muls	r0, r2
 801af3a:	4356      	muls	r6, r2
 801af3c:	1c5a      	adds	r2, r3, #1
 801af3e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801af42:	0c0b      	lsrs	r3, r1, #16
 801af44:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801af48:	1c42      	adds	r2, r0, #1
 801af4a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801af4e:	0a0a      	lsrs	r2, r1, #8
 801af50:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801af54:	021b      	lsls	r3, r3, #8
 801af56:	00d2      	lsls	r2, r2, #3
 801af58:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801af5c:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801af60:	4313      	orrs	r3, r2
 801af62:	1c72      	adds	r2, r6, #1
 801af64:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801af68:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801af6c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801af70:	4319      	orrs	r1, r3
 801af72:	9b02      	ldr	r3, [sp, #8]
 801af74:	8019      	strh	r1, [r3, #0]
 801af76:	b005      	add	sp, #20
 801af78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801af7c:	2500      	movs	r5, #0
 801af7e:	e6fe      	b.n	801ad7e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801af80:	2100      	movs	r1, #0
 801af82:	460d      	mov	r5, r1
 801af84:	e706      	b.n	801ad94 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801af86:	2100      	movs	r1, #0
 801af88:	e704      	b.n	801ad94 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801af8a:	4631      	mov	r1, r6
 801af8c:	e702      	b.n	801ad94 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801af8e:	2400      	movs	r4, #0
 801af90:	e713      	b.n	801adba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801af92:	2200      	movs	r2, #0
 801af94:	4614      	mov	r4, r2
 801af96:	e71a      	b.n	801adce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801af98:	4602      	mov	r2, r0
 801af9a:	4604      	mov	r4, r0
 801af9c:	e717      	b.n	801adce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801af9e:	2200      	movs	r2, #0
 801afa0:	e715      	b.n	801adce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801afa2:	4632      	mov	r2, r6
 801afa4:	e713      	b.n	801adce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801afa8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801afa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801afac:	b09b      	sub	sp, #108	@ 0x6c
 801afae:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 801afb2:	9218      	str	r2, [sp, #96]	@ 0x60
 801afb4:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801afb6:	9116      	str	r1, [sp, #88]	@ 0x58
 801afb8:	9307      	str	r3, [sp, #28]
 801afba:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801afbe:	9019      	str	r0, [sp, #100]	@ 0x64
 801afc0:	6850      	ldr	r0, [r2, #4]
 801afc2:	6812      	ldr	r2, [r2, #0]
 801afc4:	fb00 1303 	mla	r3, r0, r3, r1
 801afc8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801afcc:	930a      	str	r3, [sp, #40]	@ 0x28
 801afce:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801afd0:	681b      	ldr	r3, [r3, #0]
 801afd2:	930f      	str	r3, [sp, #60]	@ 0x3c
 801afd4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801afd6:	2b00      	cmp	r3, #0
 801afd8:	dc03      	bgt.n	801afe2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801afda:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801afdc:	2b00      	cmp	r3, #0
 801afde:	f340 8386 	ble.w	801b6ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801afe2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801afe4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801afe8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801afec:	1e48      	subs	r0, r1, #1
 801afee:	1e57      	subs	r7, r2, #1
 801aff0:	9b07      	ldr	r3, [sp, #28]
 801aff2:	2b00      	cmp	r3, #0
 801aff4:	f340 8166 	ble.w	801b2c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801aff8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801affc:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b000:	d406      	bmi.n	801b010 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b002:	4584      	cmp	ip, r0
 801b004:	da04      	bge.n	801b010 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b006:	2b00      	cmp	r3, #0
 801b008:	db02      	blt.n	801b010 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b00a:	42bb      	cmp	r3, r7
 801b00c:	f2c0 815b 	blt.w	801b2c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801b010:	f11c 0c01 	adds.w	ip, ip, #1
 801b014:	f100 814b 	bmi.w	801b2ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801b018:	4561      	cmp	r1, ip
 801b01a:	f2c0 8148 	blt.w	801b2ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801b01e:	3301      	adds	r3, #1
 801b020:	f100 8145 	bmi.w	801b2ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801b024:	429a      	cmp	r2, r3
 801b026:	f2c0 8142 	blt.w	801b2ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801b02a:	9b07      	ldr	r3, [sp, #28]
 801b02c:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801b02e:	9317      	str	r3, [sp, #92]	@ 0x5c
 801b030:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801b032:	2b00      	cmp	r3, #0
 801b034:	f340 8165 	ble.w	801b302 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b038:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 801b03a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b03c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801b040:	689b      	ldr	r3, [r3, #8]
 801b042:	1422      	asrs	r2, r4, #16
 801b044:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801b048:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801b04c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801b050:	f100 81d5 	bmi.w	801b3fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801b054:	f103 38ff 	add.w	r8, r3, #4294967295
 801b058:	4542      	cmp	r2, r8
 801b05a:	f280 81d0 	bge.w	801b3fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801b05e:	f1bc 0f00 	cmp.w	ip, #0
 801b062:	f2c0 81cc 	blt.w	801b3fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801b066:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b06a:	45c4      	cmp	ip, r8
 801b06c:	f280 81c7 	bge.w	801b3fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801b070:	b21b      	sxth	r3, r3
 801b072:	fb0c 2203 	mla	r2, ip, r3, r2
 801b076:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801b078:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801b07c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801b080:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801b084:	2900      	cmp	r1, #0
 801b086:	f000 8182 	beq.w	801b38e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801b08a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801b08e:	950b      	str	r5, [sp, #44]	@ 0x2c
 801b090:	0e2d      	lsrs	r5, r5, #24
 801b092:	9512      	str	r5, [sp, #72]	@ 0x48
 801b094:	b180      	cbz	r0, 801b0b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801b096:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801b09a:	3b01      	subs	r3, #1
 801b09c:	009b      	lsls	r3, r3, #2
 801b09e:	3304      	adds	r3, #4
 801b0a0:	eb08 0c03 	add.w	ip, r8, r3
 801b0a4:	f858 3003 	ldr.w	r3, [r8, r3]
 801b0a8:	9308      	str	r3, [sp, #32]
 801b0aa:	0e1b      	lsrs	r3, r3, #24
 801b0ac:	9310      	str	r3, [sp, #64]	@ 0x40
 801b0ae:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801b0b2:	930c      	str	r3, [sp, #48]	@ 0x30
 801b0b4:	0e1b      	lsrs	r3, r3, #24
 801b0b6:	9313      	str	r3, [sp, #76]	@ 0x4c
 801b0b8:	b289      	uxth	r1, r1
 801b0ba:	b280      	uxth	r0, r0
 801b0bc:	fb01 f900 	mul.w	r9, r1, r0
 801b0c0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801b0c4:	0109      	lsls	r1, r1, #4
 801b0c6:	eba1 0809 	sub.w	r8, r1, r9
 801b0ca:	b280      	uxth	r0, r0
 801b0cc:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 801b0d0:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801b0d2:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801b0d4:	fa1f f888 	uxth.w	r8, r8
 801b0d8:	1a09      	subs	r1, r1, r0
 801b0da:	b289      	uxth	r1, r1
 801b0dc:	fb08 f303 	mul.w	r3, r8, r3
 801b0e0:	fb01 330e 	mla	r3, r1, lr, r3
 801b0e4:	fb00 3305 	mla	r3, r0, r5, r3
 801b0e8:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801b0ea:	fb09 3305 	mla	r3, r9, r5, r3
 801b0ee:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b0f2:	2b00      	cmp	r3, #0
 801b0f4:	f000 80d2 	beq.w	801b29c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801b0f8:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801b0fc:	d01b      	beq.n	801b136 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801b0fe:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801b102:	fb0e fa0a 	mul.w	sl, lr, sl
 801b106:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801b10a:	fb0e fe02 	mul.w	lr, lr, r2
 801b10e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801b112:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801b116:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801b11a:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801b11e:	4452      	add	r2, sl
 801b120:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b124:	0a12      	lsrs	r2, r2, #8
 801b126:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b12a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801b12e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801b132:	ea42 020c 	orr.w	r2, r2, ip
 801b136:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801b138:	2dff      	cmp	r5, #255	@ 0xff
 801b13a:	d021      	beq.n	801b180 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801b13c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801b13e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801b142:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801b144:	fb05 fb0b 	mul.w	fp, r5, fp
 801b148:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801b14a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801b14e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801b150:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b154:	fb05 fa0a 	mul.w	sl, r5, sl
 801b158:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b15c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b160:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b164:	44de      	add	lr, fp
 801b166:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b16a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b16e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b172:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b176:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b17a:	ea4e 050a 	orr.w	r5, lr, sl
 801b17e:	950b      	str	r5, [sp, #44]	@ 0x2c
 801b180:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801b182:	2dff      	cmp	r5, #255	@ 0xff
 801b184:	d021      	beq.n	801b1ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801b186:	9d08      	ldr	r5, [sp, #32]
 801b188:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801b18c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801b18e:	fb05 fb0b 	mul.w	fp, r5, fp
 801b192:	9d08      	ldr	r5, [sp, #32]
 801b194:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801b198:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801b19a:	fb05 fa0e 	mul.w	sl, r5, lr
 801b19e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b1a2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b1a6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b1aa:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b1ae:	44de      	add	lr, fp
 801b1b0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b1b4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b1b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b1bc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b1c0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b1c4:	ea4e 050a 	orr.w	r5, lr, sl
 801b1c8:	9508      	str	r5, [sp, #32]
 801b1ca:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801b1cc:	2dff      	cmp	r5, #255	@ 0xff
 801b1ce:	d021      	beq.n	801b214 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801b1d0:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801b1d2:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801b1d6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801b1d8:	fb05 fb0b 	mul.w	fp, r5, fp
 801b1dc:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801b1de:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801b1e2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801b1e4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b1e8:	fb05 fa0a 	mul.w	sl, r5, sl
 801b1ec:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b1f0:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b1f4:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b1f8:	44de      	add	lr, fp
 801b1fa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b1fe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b202:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b206:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b20a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b20e:	ea4e 050a 	orr.w	r5, lr, sl
 801b212:	950c      	str	r5, [sp, #48]	@ 0x30
 801b214:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801b216:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801b21a:	9d08      	ldr	r5, [sp, #32]
 801b21c:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801b220:	fb08 fc0c 	mul.w	ip, r8, ip
 801b224:	fb01 cc0e 	mla	ip, r1, lr, ip
 801b228:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801b22c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801b22e:	fb00 cc0e 	mla	ip, r0, lr, ip
 801b232:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801b236:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801b238:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b23c:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801b240:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801b244:	fb08 f80e 	mul.w	r8, r8, lr
 801b248:	fb01 8202 	mla	r2, r1, r2, r8
 801b24c:	9908      	ldr	r1, [sp, #32]
 801b24e:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801b252:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801b254:	fb00 220a 	mla	r2, r0, sl, r2
 801b258:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 801b25c:	fb09 2900 	mla	r9, r9, r0, r2
 801b260:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b264:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b268:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b26c:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801b270:	ea4c 0c09 	orr.w	ip, ip, r9
 801b274:	2bff      	cmp	r3, #255	@ 0xff
 801b276:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801b27a:	f040 8091 	bne.w	801b3a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801b27e:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801b282:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 801b286:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b28a:	f022 0207 	bic.w	r2, r2, #7
 801b28e:	431a      	orrs	r2, r3
 801b290:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801b294:	ea4c 0c02 	orr.w	ip, ip, r2
 801b298:	f8a7 c000 	strh.w	ip, [r7]
 801b29c:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801b29e:	441c      	add	r4, r3
 801b2a0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b2a2:	441e      	add	r6, r3
 801b2a4:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801b2a6:	3b01      	subs	r3, #1
 801b2a8:	3702      	adds	r7, #2
 801b2aa:	9317      	str	r3, [sp, #92]	@ 0x5c
 801b2ac:	e6c0      	b.n	801b030 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b2ae:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801b2b0:	441c      	add	r4, r3
 801b2b2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b2b4:	441e      	add	r6, r3
 801b2b6:	9b07      	ldr	r3, [sp, #28]
 801b2b8:	3b01      	subs	r3, #1
 801b2ba:	9307      	str	r3, [sp, #28]
 801b2bc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b2be:	3302      	adds	r3, #2
 801b2c0:	930a      	str	r3, [sp, #40]	@ 0x28
 801b2c2:	e695      	b.n	801aff0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801b2c4:	d024      	beq.n	801b310 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801b2c6:	9b07      	ldr	r3, [sp, #28]
 801b2c8:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801b2ca:	3b01      	subs	r3, #1
 801b2cc:	fb00 4003 	mla	r0, r0, r3, r4
 801b2d0:	1400      	asrs	r0, r0, #16
 801b2d2:	f53f aeaa 	bmi.w	801b02a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801b2d6:	3901      	subs	r1, #1
 801b2d8:	4288      	cmp	r0, r1
 801b2da:	f6bf aea6 	bge.w	801b02a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801b2de:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801b2e0:	fb01 6303 	mla	r3, r1, r3, r6
 801b2e4:	141b      	asrs	r3, r3, #16
 801b2e6:	f53f aea0 	bmi.w	801b02a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801b2ea:	3a01      	subs	r2, #1
 801b2ec:	4293      	cmp	r3, r2
 801b2ee:	f6bf ae9c 	bge.w	801b02a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801b2f2:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801b2f6:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 801b2fa:	f1bb 0f00 	cmp.w	fp, #0
 801b2fe:	f300 809a 	bgt.w	801b436 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801b302:	9b07      	ldr	r3, [sp, #28]
 801b304:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801b308:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b30a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801b30e:	930a      	str	r3, [sp, #40]	@ 0x28
 801b310:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801b312:	2b00      	cmp	r3, #0
 801b314:	f340 81eb 	ble.w	801b6ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801b318:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b31c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801b320:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b324:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b326:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b32a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b32e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b332:	eef0 6a62 	vmov.f32	s13, s5
 801b336:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b33a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b33e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b342:	ee16 4a90 	vmov	r4, s13
 801b346:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b34a:	eef0 6a43 	vmov.f32	s13, s6
 801b34e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b352:	ee12 2a90 	vmov	r2, s5
 801b356:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b35a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b35e:	ee13 2a10 	vmov	r2, s6
 801b362:	9327      	str	r3, [sp, #156]	@ 0x9c
 801b364:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b366:	fb92 f3f3 	sdiv	r3, r2, r3
 801b36a:	9328      	str	r3, [sp, #160]	@ 0xa0
 801b36c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801b36e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801b370:	3b01      	subs	r3, #1
 801b372:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b376:	9316      	str	r3, [sp, #88]	@ 0x58
 801b378:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b37a:	bf08      	it	eq
 801b37c:	4613      	moveq	r3, r2
 801b37e:	ee16 6a90 	vmov	r6, s13
 801b382:	9307      	str	r3, [sp, #28]
 801b384:	eeb0 3a67 	vmov.f32	s6, s15
 801b388:	eef0 2a47 	vmov.f32	s5, s14
 801b38c:	e622      	b.n	801afd4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801b38e:	2800      	cmp	r0, #0
 801b390:	f43f ae92 	beq.w	801b0b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801b394:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801b398:	9308      	str	r3, [sp, #32]
 801b39a:	0e1b      	lsrs	r3, r3, #24
 801b39c:	9310      	str	r3, [sp, #64]	@ 0x40
 801b39e:	e68b      	b.n	801b0b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801b3a0:	8839      	ldrh	r1, [r7, #0]
 801b3a2:	4dd4      	ldr	r5, [pc, #848]	@ (801b6f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801b3a4:	43db      	mvns	r3, r3
 801b3a6:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801b3aa:	fa5f f883 	uxtb.w	r8, r3
 801b3ae:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801b3b2:	fb0e fe08 	mul.w	lr, lr, r8
 801b3b6:	10c8      	asrs	r0, r1, #3
 801b3b8:	00cb      	lsls	r3, r1, #3
 801b3ba:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801b3be:	f10e 0101 	add.w	r1, lr, #1
 801b3c2:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801b3c6:	fb00 f008 	mul.w	r0, r0, r8
 801b3ca:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801b3ce:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801b3d2:	f100 0e01 	add.w	lr, r0, #1
 801b3d6:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801b3da:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801b3de:	b2db      	uxtb	r3, r3
 801b3e0:	b2c9      	uxtb	r1, r1
 801b3e2:	00d2      	lsls	r2, r2, #3
 801b3e4:	fb03 f308 	mul.w	r3, r3, r8
 801b3e8:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801b3ec:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b3f0:	430a      	orrs	r2, r1
 801b3f2:	1c59      	adds	r1, r3, #1
 801b3f4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801b3f8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801b3fc:	e748      	b.n	801b290 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801b3fe:	f112 0801 	adds.w	r8, r2, #1
 801b402:	f53f af4b 	bmi.w	801b29c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801b406:	4543      	cmp	r3, r8
 801b408:	f6ff af48 	blt.w	801b29c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801b40c:	f11c 0801 	adds.w	r8, ip, #1
 801b410:	f53f af44 	bmi.w	801b29c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801b414:	45c6      	cmp	lr, r8
 801b416:	f6ff af41 	blt.w	801b29c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801b41a:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801b41e:	fa0f f28e 	sxth.w	r2, lr
 801b422:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801b426:	9200      	str	r2, [sp, #0]
 801b428:	b21b      	sxth	r3, r3
 801b42a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801b42c:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801b42e:	4639      	mov	r1, r7
 801b430:	f7ff fc87 	bl	801ad42 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801b434:	e732      	b.n	801b29c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801b436:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b438:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801b43a:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801b43e:	1421      	asrs	r1, r4, #16
 801b440:	1433      	asrs	r3, r6, #16
 801b442:	fb07 1303 	mla	r3, r7, r3, r1
 801b446:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801b448:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801b44c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801b450:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801b454:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801b458:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b45c:	2a00      	cmp	r2, #0
 801b45e:	f000 8107 	beq.w	801b670 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801b462:	684d      	ldr	r5, [r1, #4]
 801b464:	950d      	str	r5, [sp, #52]	@ 0x34
 801b466:	0e2d      	lsrs	r5, r5, #24
 801b468:	9514      	str	r5, [sp, #80]	@ 0x50
 801b46a:	b178      	cbz	r0, 801b48c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801b46c:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 801b470:	3f01      	subs	r7, #1
 801b472:	00bf      	lsls	r7, r7, #2
 801b474:	3704      	adds	r7, #4
 801b476:	eb01 0e07 	add.w	lr, r1, r7
 801b47a:	59c9      	ldr	r1, [r1, r7]
 801b47c:	9109      	str	r1, [sp, #36]	@ 0x24
 801b47e:	0e09      	lsrs	r1, r1, #24
 801b480:	9111      	str	r1, [sp, #68]	@ 0x44
 801b482:	f8de 1004 	ldr.w	r1, [lr, #4]
 801b486:	910e      	str	r1, [sp, #56]	@ 0x38
 801b488:	0e09      	lsrs	r1, r1, #24
 801b48a:	9115      	str	r1, [sp, #84]	@ 0x54
 801b48c:	b292      	uxth	r2, r2
 801b48e:	b280      	uxth	r0, r0
 801b490:	fb02 f900 	mul.w	r9, r2, r0
 801b494:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801b498:	0112      	lsls	r2, r2, #4
 801b49a:	eba2 0e09 	sub.w	lr, r2, r9
 801b49e:	b280      	uxth	r0, r0
 801b4a0:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801b4a4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801b4a6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801b4a8:	fa1f fe8e 	uxth.w	lr, lr
 801b4ac:	1a09      	subs	r1, r1, r0
 801b4ae:	b289      	uxth	r1, r1
 801b4b0:	fb0e f202 	mul.w	r2, lr, r2
 801b4b4:	fb01 220c 	mla	r2, r1, ip, r2
 801b4b8:	fb00 2205 	mla	r2, r0, r5, r2
 801b4bc:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801b4be:	fb09 2205 	mla	r2, r9, r5, r2
 801b4c2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801b4c6:	2a00      	cmp	r2, #0
 801b4c8:	f000 80c9 	beq.w	801b65e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801b4cc:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801b4d0:	d019      	beq.n	801b506 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801b4d2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801b4d6:	fb0c fa0a 	mul.w	sl, ip, sl
 801b4da:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b4de:	fb0c fc03 	mul.w	ip, ip, r3
 801b4e2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b4e6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b4ea:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801b4ee:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801b4f2:	4453      	add	r3, sl
 801b4f4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b4f8:	0a1b      	lsrs	r3, r3, #8
 801b4fa:	0a3f      	lsrs	r7, r7, #8
 801b4fc:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b500:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801b504:	433b      	orrs	r3, r7
 801b506:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801b508:	2dff      	cmp	r5, #255	@ 0xff
 801b50a:	d020      	beq.n	801b54e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801b50c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801b50e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801b512:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801b514:	436f      	muls	r7, r5
 801b516:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801b518:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801b51c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801b51e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b522:	fb05 fa0a 	mul.w	sl, r5, sl
 801b526:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b52a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b52e:	44bc      	add	ip, r7
 801b530:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801b534:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b538:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b53c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b540:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b544:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b548:	ea4c 050a 	orr.w	r5, ip, sl
 801b54c:	950d      	str	r5, [sp, #52]	@ 0x34
 801b54e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801b550:	2dff      	cmp	r5, #255	@ 0xff
 801b552:	d020      	beq.n	801b596 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801b554:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801b556:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801b55a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801b55c:	436f      	muls	r7, r5
 801b55e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801b560:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801b564:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801b566:	fb05 fa0c 	mul.w	sl, r5, ip
 801b56a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b56e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b572:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b576:	44bc      	add	ip, r7
 801b578:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801b57c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b580:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b584:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b588:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b58c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b590:	ea4c 050a 	orr.w	r5, ip, sl
 801b594:	9509      	str	r5, [sp, #36]	@ 0x24
 801b596:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801b598:	2dff      	cmp	r5, #255	@ 0xff
 801b59a:	d020      	beq.n	801b5de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801b59c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801b59e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801b5a2:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801b5a4:	436f      	muls	r7, r5
 801b5a6:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801b5a8:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801b5ac:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801b5ae:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b5b2:	fb05 fa0a 	mul.w	sl, r5, sl
 801b5b6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b5ba:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b5be:	44bc      	add	ip, r7
 801b5c0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801b5c4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b5c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b5cc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b5d0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b5d4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b5d8:	ea4c 050a 	orr.w	r5, ip, sl
 801b5dc:	950e      	str	r5, [sp, #56]	@ 0x38
 801b5de:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801b5e0:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801b5e4:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801b5e6:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801b5ea:	fb0e f707 	mul.w	r7, lr, r7
 801b5ee:	fb01 770c 	mla	r7, r1, ip, r7
 801b5f2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801b5f6:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801b5f8:	fb00 770c 	mla	r7, r0, ip, r7
 801b5fc:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801b600:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801b602:	fb09 770c 	mla	r7, r9, ip, r7
 801b606:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801b60a:	fb0e fe0c 	mul.w	lr, lr, ip
 801b60e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b612:	fb01 e303 	mla	r3, r1, r3, lr
 801b616:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801b618:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801b61c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801b61e:	fb00 330a 	mla	r3, r0, sl, r3
 801b622:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801b626:	fb09 3c0c 	mla	ip, r9, ip, r3
 801b62a:	0a3f      	lsrs	r7, r7, #8
 801b62c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b630:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801b634:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801b638:	ea47 070c 	orr.w	r7, r7, ip
 801b63c:	2aff      	cmp	r2, #255	@ 0xff
 801b63e:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801b642:	d11e      	bne.n	801b682 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801b644:	097a      	lsrs	r2, r7, #5
 801b646:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 801b64a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b64e:	f023 0307 	bic.w	r3, r3, #7
 801b652:	4313      	orrs	r3, r2
 801b654:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801b658:	431f      	orrs	r7, r3
 801b65a:	f8a8 7000 	strh.w	r7, [r8]
 801b65e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801b660:	441c      	add	r4, r3
 801b662:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b664:	f108 0802 	add.w	r8, r8, #2
 801b668:	441e      	add	r6, r3
 801b66a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b66e:	e644      	b.n	801b2fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801b670:	2800      	cmp	r0, #0
 801b672:	f43f af0b 	beq.w	801b48c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801b676:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801b67a:	9109      	str	r1, [sp, #36]	@ 0x24
 801b67c:	0e09      	lsrs	r1, r1, #24
 801b67e:	9111      	str	r1, [sp, #68]	@ 0x44
 801b680:	e704      	b.n	801b48c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801b682:	f8b8 1000 	ldrh.w	r1, [r8]
 801b686:	43d2      	mvns	r2, r2
 801b688:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801b68c:	fa5f fe82 	uxtb.w	lr, r2
 801b690:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801b694:	fb0c fc0e 	mul.w	ip, ip, lr
 801b698:	10c8      	asrs	r0, r1, #3
 801b69a:	00ca      	lsls	r2, r1, #3
 801b69c:	f10c 0101 	add.w	r1, ip, #1
 801b6a0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801b6a4:	0c39      	lsrs	r1, r7, #16
 801b6a6:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801b6aa:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801b6ae:	4911      	ldr	r1, [pc, #68]	@ (801b6f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801b6b0:	fb00 f00e 	mul.w	r0, r0, lr
 801b6b4:	fa5f fc8c 	uxtb.w	ip, ip
 801b6b8:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801b6bc:	b2d2      	uxtb	r2, r2
 801b6be:	1c41      	adds	r1, r0, #1
 801b6c0:	fb02 f20e 	mul.w	r2, r2, lr
 801b6c4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801b6c8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b6cc:	1c51      	adds	r1, r2, #1
 801b6ce:	00c0      	lsls	r0, r0, #3
 801b6d0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b6d4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801b6d8:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801b6dc:	ea4c 0c00 	orr.w	ip, ip, r0
 801b6e0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801b6e4:	ea47 0c0c 	orr.w	ip, r7, ip
 801b6e8:	f8a8 c000 	strh.w	ip, [r8]
 801b6ec:	e7b7      	b.n	801b65e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801b6ee:	b01b      	add	sp, #108	@ 0x6c
 801b6f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b6f4:	fffff800 	.word	0xfffff800

0801b6f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801b6f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b6fc:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801b700:	2d00      	cmp	r5, #0
 801b702:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801b706:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801b70a:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801b70e:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801b712:	fb05 0e03 	mla	lr, r5, r3, r0
 801b716:	f2c0 808c 	blt.w	801b832 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801b71a:	45a9      	cmp	r9, r5
 801b71c:	f340 8089 	ble.w	801b832 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801b720:	2800      	cmp	r0, #0
 801b722:	f2c0 8084 	blt.w	801b82e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801b726:	4580      	cmp	r8, r0
 801b728:	f340 8081 	ble.w	801b82e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801b72c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801b730:	f01e 0f01 	tst.w	lr, #1
 801b734:	5d16      	ldrb	r6, [r2, r4]
 801b736:	bf0c      	ite	eq
 801b738:	f006 060f 	andeq.w	r6, r6, #15
 801b73c:	1136      	asrne	r6, r6, #4
 801b73e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801b742:	b2f6      	uxtb	r6, r6
 801b744:	1c44      	adds	r4, r0, #1
 801b746:	d477      	bmi.n	801b838 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801b748:	45a0      	cmp	r8, r4
 801b74a:	dd75      	ble.n	801b838 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801b74c:	2f00      	cmp	r7, #0
 801b74e:	d075      	beq.n	801b83c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801b750:	f10e 0a01 	add.w	sl, lr, #1
 801b754:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801b758:	f01a 0f01 	tst.w	sl, #1
 801b75c:	5d14      	ldrb	r4, [r2, r4]
 801b75e:	bf0c      	ite	eq
 801b760:	f004 040f 	andeq.w	r4, r4, #15
 801b764:	1124      	asrne	r4, r4, #4
 801b766:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801b76a:	b2e4      	uxtb	r4, r4
 801b76c:	3501      	adds	r5, #1
 801b76e:	d469      	bmi.n	801b844 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801b770:	45a9      	cmp	r9, r5
 801b772:	dd67      	ble.n	801b844 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801b774:	f1bc 0f00 	cmp.w	ip, #0
 801b778:	d067      	beq.n	801b84a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801b77a:	2800      	cmp	r0, #0
 801b77c:	db60      	blt.n	801b840 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801b77e:	4580      	cmp	r8, r0
 801b780:	dd5e      	ble.n	801b840 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801b782:	eb03 090e 	add.w	r9, r3, lr
 801b786:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801b78a:	f019 0f01 	tst.w	r9, #1
 801b78e:	5d55      	ldrb	r5, [r2, r5]
 801b790:	bf0c      	ite	eq
 801b792:	f005 050f 	andeq.w	r5, r5, #15
 801b796:	112d      	asrne	r5, r5, #4
 801b798:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801b79c:	b2ed      	uxtb	r5, r5
 801b79e:	3001      	adds	r0, #1
 801b7a0:	d456      	bmi.n	801b850 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801b7a2:	4580      	cmp	r8, r0
 801b7a4:	dd54      	ble.n	801b850 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801b7a6:	2f00      	cmp	r7, #0
 801b7a8:	d054      	beq.n	801b854 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801b7aa:	3301      	adds	r3, #1
 801b7ac:	449e      	add	lr, r3
 801b7ae:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801b7b2:	f01e 0f01 	tst.w	lr, #1
 801b7b6:	5cd0      	ldrb	r0, [r2, r3]
 801b7b8:	bf0c      	ite	eq
 801b7ba:	f000 000f 	andeq.w	r0, r0, #15
 801b7be:	1100      	asrne	r0, r0, #4
 801b7c0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801b7c4:	b2c3      	uxtb	r3, r0
 801b7c6:	b2ba      	uxth	r2, r7
 801b7c8:	fa1f fc8c 	uxth.w	ip, ip
 801b7cc:	fb02 f00c 	mul.w	r0, r2, ip
 801b7d0:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801b7d4:	0112      	lsls	r2, r2, #4
 801b7d6:	fa1f fc8c 	uxth.w	ip, ip
 801b7da:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801b7de:	1a12      	subs	r2, r2, r0
 801b7e0:	eba7 070c 	sub.w	r7, r7, ip
 801b7e4:	b292      	uxth	r2, r2
 801b7e6:	b2bf      	uxth	r7, r7
 801b7e8:	4362      	muls	r2, r4
 801b7ea:	fb06 2207 	mla	r2, r6, r7, r2
 801b7ee:	fb0c 2505 	mla	r5, ip, r5, r2
 801b7f2:	fb00 5303 	mla	r3, r0, r3, r5
 801b7f6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b7fa:	b1b3      	cbz	r3, 801b82a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801b7fc:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801b800:	435a      	muls	r2, r3
 801b802:	1c53      	adds	r3, r2, #1
 801b804:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b808:	4a2d      	ldr	r2, [pc, #180]	@ (801b8c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801b80a:	121b      	asrs	r3, r3, #8
 801b80c:	6812      	ldr	r2, [r2, #0]
 801b80e:	2bff      	cmp	r3, #255	@ 0xff
 801b810:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801b814:	d120      	bne.n	801b858 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801b816:	4b2b      	ldr	r3, [pc, #172]	@ (801b8c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801b818:	0950      	lsrs	r0, r2, #5
 801b81a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801b81e:	4033      	ands	r3, r6
 801b820:	4318      	orrs	r0, r3
 801b822:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b826:	4302      	orrs	r2, r0
 801b828:	800a      	strh	r2, [r1, #0]
 801b82a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b82e:	2600      	movs	r6, #0
 801b830:	e788      	b.n	801b744 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801b832:	2400      	movs	r4, #0
 801b834:	4626      	mov	r6, r4
 801b836:	e799      	b.n	801b76c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801b838:	2400      	movs	r4, #0
 801b83a:	e797      	b.n	801b76c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801b83c:	463c      	mov	r4, r7
 801b83e:	e795      	b.n	801b76c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801b840:	2500      	movs	r5, #0
 801b842:	e7ac      	b.n	801b79e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801b844:	2300      	movs	r3, #0
 801b846:	461d      	mov	r5, r3
 801b848:	e7bd      	b.n	801b7c6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801b84a:	4663      	mov	r3, ip
 801b84c:	4665      	mov	r5, ip
 801b84e:	e7ba      	b.n	801b7c6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801b850:	2300      	movs	r3, #0
 801b852:	e7b8      	b.n	801b7c6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801b854:	463b      	mov	r3, r7
 801b856:	e7b6      	b.n	801b7c6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801b858:	880d      	ldrh	r5, [r1, #0]
 801b85a:	b29f      	uxth	r7, r3
 801b85c:	122c      	asrs	r4, r5, #8
 801b85e:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801b862:	43db      	mvns	r3, r3
 801b864:	b2db      	uxtb	r3, r3
 801b866:	fb10 f007 	smulbb	r0, r0, r7
 801b86a:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801b86e:	fb04 0403 	mla	r4, r4, r3, r0
 801b872:	b2f6      	uxtb	r6, r6
 801b874:	10e8      	asrs	r0, r5, #3
 801b876:	b2d2      	uxtb	r2, r2
 801b878:	00ed      	lsls	r5, r5, #3
 801b87a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801b87e:	fb12 f207 	smulbb	r2, r2, r7
 801b882:	fb16 f607 	smulbb	r6, r6, r7
 801b886:	b2ed      	uxtb	r5, r5
 801b888:	b2a4      	uxth	r4, r4
 801b88a:	fb00 6603 	mla	r6, r0, r3, r6
 801b88e:	fb05 2303 	mla	r3, r5, r3, r2
 801b892:	b29a      	uxth	r2, r3
 801b894:	1c63      	adds	r3, r4, #1
 801b896:	b2b0      	uxth	r0, r6
 801b898:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801b89c:	1c53      	adds	r3, r2, #1
 801b89e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b8a2:	1c42      	adds	r2, r0, #1
 801b8a4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b8a8:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801b8ac:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b8b0:	0940      	lsrs	r0, r0, #5
 801b8b2:	4323      	orrs	r3, r4
 801b8b4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801b8b8:	4303      	orrs	r3, r0
 801b8ba:	800b      	strh	r3, [r1, #0]
 801b8bc:	e7b5      	b.n	801b82a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801b8be:	bf00      	nop
 801b8c0:	200119dc 	.word	0x200119dc
 801b8c4:	00fff800 	.word	0x00fff800

0801b8c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b8c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b8cc:	b097      	sub	sp, #92	@ 0x5c
 801b8ce:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 801b8d2:	9214      	str	r2, [sp, #80]	@ 0x50
 801b8d4:	9309      	str	r3, [sp, #36]	@ 0x24
 801b8d6:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801b8d8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801b8dc:	910d      	str	r1, [sp, #52]	@ 0x34
 801b8de:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b8e0:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801b8e4:	9015      	str	r0, [sp, #84]	@ 0x54
 801b8e6:	6850      	ldr	r0, [r2, #4]
 801b8e8:	6812      	ldr	r2, [r2, #0]
 801b8ea:	fb00 1303 	mla	r3, r0, r3, r1
 801b8ee:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801b8f2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b8f4:	689b      	ldr	r3, [r3, #8]
 801b8f6:	3301      	adds	r3, #1
 801b8f8:	f023 0301 	bic.w	r3, r3, #1
 801b8fc:	930a      	str	r3, [sp, #40]	@ 0x28
 801b8fe:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b900:	681f      	ldr	r7, [r3, #0]
 801b902:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801b904:	2b00      	cmp	r3, #0
 801b906:	dc03      	bgt.n	801b910 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801b908:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801b90a:	2b00      	cmp	r3, #0
 801b90c:	f340 8287 	ble.w	801be1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801b910:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b912:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b916:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b91a:	1e48      	subs	r0, r1, #1
 801b91c:	f102 3cff 	add.w	ip, r2, #4294967295
 801b920:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b922:	2b00      	cmp	r3, #0
 801b924:	f340 80c4 	ble.w	801bab0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801b928:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801b92c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b930:	d406      	bmi.n	801b940 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b932:	4586      	cmp	lr, r0
 801b934:	da04      	bge.n	801b940 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b936:	2b00      	cmp	r3, #0
 801b938:	db02      	blt.n	801b940 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b93a:	4563      	cmp	r3, ip
 801b93c:	f2c0 80b9 	blt.w	801bab2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801b940:	f11e 0e01 	adds.w	lr, lr, #1
 801b944:	f100 80aa 	bmi.w	801ba9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801b948:	4571      	cmp	r1, lr
 801b94a:	f2c0 80a7 	blt.w	801ba9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801b94e:	3301      	adds	r3, #1
 801b950:	f100 80a4 	bmi.w	801ba9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801b954:	429a      	cmp	r2, r3
 801b956:	f2c0 80a1 	blt.w	801ba9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801b95a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b95c:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 801b960:	930e      	str	r3, [sp, #56]	@ 0x38
 801b962:	46c8      	mov	r8, r9
 801b964:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b966:	2b00      	cmp	r3, #0
 801b968:	f340 80c3 	ble.w	801baf2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801b96c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b96e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801b972:	1423      	asrs	r3, r4, #16
 801b974:	ea4f 4026 	mov.w	r0, r6, asr #16
 801b978:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801b97c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801b980:	f100 814d 	bmi.w	801bc1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801b984:	f10c 3bff 	add.w	fp, ip, #4294967295
 801b988:	455b      	cmp	r3, fp
 801b98a:	f280 8148 	bge.w	801bc1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801b98e:	2800      	cmp	r0, #0
 801b990:	f2c0 8145 	blt.w	801bc1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801b994:	f10e 3bff 	add.w	fp, lr, #4294967295
 801b998:	4558      	cmp	r0, fp
 801b99a:	f280 8140 	bge.w	801bc1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801b99e:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801b9a0:	fb00 3305 	mla	r3, r0, r5, r3
 801b9a4:	0858      	lsrs	r0, r3, #1
 801b9a6:	07dd      	lsls	r5, r3, #31
 801b9a8:	f817 c000 	ldrb.w	ip, [r7, r0]
 801b9ac:	bf54      	ite	pl
 801b9ae:	f00c 0c0f 	andpl.w	ip, ip, #15
 801b9b2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801b9b6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b9ba:	fa5f fc8c 	uxtb.w	ip, ip
 801b9be:	2a00      	cmp	r2, #0
 801b9c0:	f000 80db 	beq.w	801bb7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801b9c4:	1c58      	adds	r0, r3, #1
 801b9c6:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801b9ca:	07c0      	lsls	r0, r0, #31
 801b9cc:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801b9d0:	bf54      	ite	pl
 801b9d2:	f00e 0e0f 	andpl.w	lr, lr, #15
 801b9d6:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801b9da:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801b9de:	fa5f f08e 	uxtb.w	r0, lr
 801b9e2:	9010      	str	r0, [sp, #64]	@ 0x40
 801b9e4:	b1c9      	cbz	r1, 801ba1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b9e6:	4453      	add	r3, sl
 801b9e8:	0858      	lsrs	r0, r3, #1
 801b9ea:	07dd      	lsls	r5, r3, #31
 801b9ec:	5c38      	ldrb	r0, [r7, r0]
 801b9ee:	bf54      	ite	pl
 801b9f0:	f000 000f 	andpl.w	r0, r0, #15
 801b9f4:	1100      	asrmi	r0, r0, #4
 801b9f6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801b9fa:	3301      	adds	r3, #1
 801b9fc:	b2c0      	uxtb	r0, r0
 801b9fe:	900b      	str	r0, [sp, #44]	@ 0x2c
 801ba00:	0858      	lsrs	r0, r3, #1
 801ba02:	07dd      	lsls	r5, r3, #31
 801ba04:	f817 e000 	ldrb.w	lr, [r7, r0]
 801ba08:	bf54      	ite	pl
 801ba0a:	f00e 030f 	andpl.w	r3, lr, #15
 801ba0e:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801ba12:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ba16:	b2db      	uxtb	r3, r3
 801ba18:	9311      	str	r3, [sp, #68]	@ 0x44
 801ba1a:	b292      	uxth	r2, r2
 801ba1c:	b289      	uxth	r1, r1
 801ba1e:	fb02 f301 	mul.w	r3, r2, r1
 801ba22:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801ba26:	0112      	lsls	r2, r2, #4
 801ba28:	b289      	uxth	r1, r1
 801ba2a:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 801ba2e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801ba30:	1ad2      	subs	r2, r2, r3
 801ba32:	1a40      	subs	r0, r0, r1
 801ba34:	b292      	uxth	r2, r2
 801ba36:	436a      	muls	r2, r5
 801ba38:	b280      	uxth	r0, r0
 801ba3a:	fb0c 2c00 	mla	ip, ip, r0, r2
 801ba3e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801ba40:	fb01 c102 	mla	r1, r1, r2, ip
 801ba44:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801ba46:	fb03 1302 	mla	r3, r3, r2, r1
 801ba4a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ba4e:	b1db      	cbz	r3, 801ba88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801ba50:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801ba52:	4353      	muls	r3, r2
 801ba54:	1c5a      	adds	r2, r3, #1
 801ba56:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801ba5a:	4ac6      	ldr	r2, [pc, #792]	@ (801bd74 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801ba5c:	121b      	asrs	r3, r3, #8
 801ba5e:	6812      	ldr	r2, [r2, #0]
 801ba60:	2bff      	cmp	r3, #255	@ 0xff
 801ba62:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801ba66:	f040 8099 	bne.w	801bb9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801ba6a:	0953      	lsrs	r3, r2, #5
 801ba6c:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801ba70:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ba74:	f02c 0c07 	bic.w	ip, ip, #7
 801ba78:	ea43 0c0c 	orr.w	ip, r3, ip
 801ba7c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ba80:	ea4c 0202 	orr.w	r2, ip, r2
 801ba84:	f8a8 2000 	strh.w	r2, [r8]
 801ba88:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801ba8a:	441c      	add	r4, r3
 801ba8c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ba8e:	441e      	add	r6, r3
 801ba90:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ba92:	3b01      	subs	r3, #1
 801ba94:	f108 0802 	add.w	r8, r8, #2
 801ba98:	930e      	str	r3, [sp, #56]	@ 0x38
 801ba9a:	e763      	b.n	801b964 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801ba9c:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801ba9e:	441c      	add	r4, r3
 801baa0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801baa2:	441e      	add	r6, r3
 801baa4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801baa6:	3b01      	subs	r3, #1
 801baa8:	9309      	str	r3, [sp, #36]	@ 0x24
 801baaa:	f109 0902 	add.w	r9, r9, #2
 801baae:	e737      	b.n	801b920 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801bab0:	d024      	beq.n	801bafc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801bab2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801bab4:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801bab6:	3b01      	subs	r3, #1
 801bab8:	fb00 4003 	mla	r0, r0, r3, r4
 801babc:	1400      	asrs	r0, r0, #16
 801babe:	f53f af4c 	bmi.w	801b95a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801bac2:	3901      	subs	r1, #1
 801bac4:	4288      	cmp	r0, r1
 801bac6:	f6bf af48 	bge.w	801b95a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801baca:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801bacc:	fb01 6303 	mla	r3, r1, r3, r6
 801bad0:	141b      	asrs	r3, r3, #16
 801bad2:	f53f af42 	bmi.w	801b95a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801bad6:	3a01      	subs	r2, #1
 801bad8:	4293      	cmp	r3, r2
 801bada:	f6bf af3e 	bge.w	801b95a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801bade:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801bae2:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801bae6:	930e      	str	r3, [sp, #56]	@ 0x38
 801bae8:	46c8      	mov	r8, r9
 801baea:	f1bb 0f00 	cmp.w	fp, #0
 801baee:	f300 80b7 	bgt.w	801bc60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801baf2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801baf4:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801baf8:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801bafc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801bafe:	2b00      	cmp	r3, #0
 801bb00:	f340 818d 	ble.w	801be1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801bb04:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bb08:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801bb0c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801bb10:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801bb12:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bb16:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bb1a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bb1e:	eef0 6a62 	vmov.f32	s13, s5
 801bb22:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bb26:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bb2a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bb2e:	ee16 4a90 	vmov	r4, s13
 801bb32:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bb36:	eef0 6a43 	vmov.f32	s13, s6
 801bb3a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bb3e:	ee12 2a90 	vmov	r2, s5
 801bb42:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bb46:	fb92 f3f3 	sdiv	r3, r2, r3
 801bb4a:	ee13 2a10 	vmov	r2, s6
 801bb4e:	9323      	str	r3, [sp, #140]	@ 0x8c
 801bb50:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801bb52:	fb92 f3f3 	sdiv	r3, r2, r3
 801bb56:	9324      	str	r3, [sp, #144]	@ 0x90
 801bb58:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801bb5a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801bb5c:	3b01      	subs	r3, #1
 801bb5e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bb62:	930d      	str	r3, [sp, #52]	@ 0x34
 801bb64:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801bb66:	bf08      	it	eq
 801bb68:	4613      	moveq	r3, r2
 801bb6a:	ee16 6a90 	vmov	r6, s13
 801bb6e:	9309      	str	r3, [sp, #36]	@ 0x24
 801bb70:	eeb0 3a67 	vmov.f32	s6, s15
 801bb74:	eef0 2a47 	vmov.f32	s5, s14
 801bb78:	e6c3      	b.n	801b902 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801bb7a:	2900      	cmp	r1, #0
 801bb7c:	f43f af4d 	beq.w	801ba1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bb80:	eb0a 0003 	add.w	r0, sl, r3
 801bb84:	0843      	lsrs	r3, r0, #1
 801bb86:	07c0      	lsls	r0, r0, #31
 801bb88:	5cfb      	ldrb	r3, [r7, r3]
 801bb8a:	bf54      	ite	pl
 801bb8c:	f003 030f 	andpl.w	r3, r3, #15
 801bb90:	111b      	asrmi	r3, r3, #4
 801bb92:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801bb96:	b2db      	uxtb	r3, r3
 801bb98:	930b      	str	r3, [sp, #44]	@ 0x2c
 801bb9a:	e73e      	b.n	801ba1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bb9c:	f8b8 e000 	ldrh.w	lr, [r8]
 801bba0:	fa1f fb83 	uxth.w	fp, r3
 801bba4:	ea4f 202e 	mov.w	r0, lr, asr #8
 801bba8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801bbac:	43db      	mvns	r3, r3
 801bbae:	b2db      	uxtb	r3, r3
 801bbb0:	fb11 f10b 	smulbb	r1, r1, fp
 801bbb4:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801bbb8:	fb00 1003 	mla	r0, r0, r3, r1
 801bbbc:	fa5f fc8c 	uxtb.w	ip, ip
 801bbc0:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801bbc4:	b2d2      	uxtb	r2, r2
 801bbc6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bbca:	b280      	uxth	r0, r0
 801bbcc:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801bbd0:	fb1c fc0b 	smulbb	ip, ip, fp
 801bbd4:	fa5f fe8e 	uxtb.w	lr, lr
 801bbd8:	fb12 fb0b 	smulbb	fp, r2, fp
 801bbdc:	fb01 cc03 	mla	ip, r1, r3, ip
 801bbe0:	fb0e bb03 	mla	fp, lr, r3, fp
 801bbe4:	1c43      	adds	r3, r0, #1
 801bbe6:	fa1f fc8c 	uxth.w	ip, ip
 801bbea:	fa1f fb8b 	uxth.w	fp, fp
 801bbee:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801bbf2:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 801bbf6:	f10c 0101 	add.w	r1, ip, #1
 801bbfa:	f10b 0001 	add.w	r0, fp, #1
 801bbfe:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801bc02:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801bc06:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801bc0a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801bc0e:	4318      	orrs	r0, r3
 801bc10:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801bc14:	ea40 000c 	orr.w	r0, r0, ip
 801bc18:	f8a8 0000 	strh.w	r0, [r8]
 801bc1c:	e734      	b.n	801ba88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801bc1e:	f113 0b01 	adds.w	fp, r3, #1
 801bc22:	f53f af31 	bmi.w	801ba88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801bc26:	45dc      	cmp	ip, fp
 801bc28:	f6ff af2e 	blt.w	801ba88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801bc2c:	f110 0b01 	adds.w	fp, r0, #1
 801bc30:	f53f af2a 	bmi.w	801ba88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801bc34:	45de      	cmp	lr, fp
 801bc36:	f6ff af27 	blt.w	801ba88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801bc3a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801bc3c:	9302      	str	r3, [sp, #8]
 801bc3e:	fa0f f38e 	sxth.w	r3, lr
 801bc42:	9301      	str	r3, [sp, #4]
 801bc44:	fa0f f38c 	sxth.w	r3, ip
 801bc48:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801bc4c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801bc50:	9300      	str	r3, [sp, #0]
 801bc52:	463a      	mov	r2, r7
 801bc54:	4653      	mov	r3, sl
 801bc56:	4641      	mov	r1, r8
 801bc58:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801bc5a:	f7ff fd4d 	bl	801b6f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801bc5e:	e713      	b.n	801ba88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801bc60:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801bc62:	1422      	asrs	r2, r4, #16
 801bc64:	1433      	asrs	r3, r6, #16
 801bc66:	fb05 2303 	mla	r3, r5, r3, r2
 801bc6a:	085a      	lsrs	r2, r3, #1
 801bc6c:	07dd      	lsls	r5, r3, #31
 801bc6e:	5cba      	ldrb	r2, [r7, r2]
 801bc70:	bf54      	ite	pl
 801bc72:	f002 020f 	andpl.w	r2, r2, #15
 801bc76:	1112      	asrmi	r2, r2, #4
 801bc78:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bc7c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801bc80:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801bc84:	b2d2      	uxtb	r2, r2
 801bc86:	2900      	cmp	r1, #0
 801bc88:	d076      	beq.n	801bd78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801bc8a:	f103 0e01 	add.w	lr, r3, #1
 801bc8e:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801bc92:	f01e 0f01 	tst.w	lr, #1
 801bc96:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801bc9a:	bf0c      	ite	eq
 801bc9c:	f00c 0c0f 	andeq.w	ip, ip, #15
 801bca0:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801bca4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801bca8:	fa5f f58c 	uxtb.w	r5, ip
 801bcac:	9512      	str	r5, [sp, #72]	@ 0x48
 801bcae:	b300      	cbz	r0, 801bcf2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801bcb0:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801bcb2:	442b      	add	r3, r5
 801bcb4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801bcb8:	07dd      	lsls	r5, r3, #31
 801bcba:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801bcbe:	bf54      	ite	pl
 801bcc0:	f00c 0c0f 	andpl.w	ip, ip, #15
 801bcc4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801bcc8:	3301      	adds	r3, #1
 801bcca:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801bcce:	fa5f f58c 	uxtb.w	r5, ip
 801bcd2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801bcd6:	950c      	str	r5, [sp, #48]	@ 0x30
 801bcd8:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801bcdc:	07dd      	lsls	r5, r3, #31
 801bcde:	bf54      	ite	pl
 801bce0:	f00c 0c0f 	andpl.w	ip, ip, #15
 801bce4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801bce8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801bcec:	fa5f f38c 	uxtb.w	r3, ip
 801bcf0:	9313      	str	r3, [sp, #76]	@ 0x4c
 801bcf2:	b289      	uxth	r1, r1
 801bcf4:	b280      	uxth	r0, r0
 801bcf6:	fb01 f300 	mul.w	r3, r1, r0
 801bcfa:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801bcfe:	0109      	lsls	r1, r1, #4
 801bd00:	b280      	uxth	r0, r0
 801bd02:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 801bd06:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801bd08:	1ac9      	subs	r1, r1, r3
 801bd0a:	ebac 0c00 	sub.w	ip, ip, r0
 801bd0e:	b289      	uxth	r1, r1
 801bd10:	4369      	muls	r1, r5
 801bd12:	fa1f fc8c 	uxth.w	ip, ip
 801bd16:	fb02 120c 	mla	r2, r2, ip, r1
 801bd1a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801bd1c:	fb00 2001 	mla	r0, r0, r1, r2
 801bd20:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801bd22:	fb03 0302 	mla	r3, r3, r2, r0
 801bd26:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801bd2a:	b1d3      	cbz	r3, 801bd62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801bd2c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801bd2e:	4353      	muls	r3, r2
 801bd30:	1c5a      	adds	r2, r3, #1
 801bd32:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801bd36:	4a0f      	ldr	r2, [pc, #60]	@ (801bd74 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801bd38:	121b      	asrs	r3, r3, #8
 801bd3a:	6812      	ldr	r2, [r2, #0]
 801bd3c:	2bff      	cmp	r3, #255	@ 0xff
 801bd3e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801bd42:	d12d      	bne.n	801bda0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801bd44:	0953      	lsrs	r3, r2, #5
 801bd46:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801bd4a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801bd4e:	f02c 0c07 	bic.w	ip, ip, #7
 801bd52:	ea43 0c0c 	orr.w	ip, r3, ip
 801bd56:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801bd5a:	ea4c 0202 	orr.w	r2, ip, r2
 801bd5e:	f8a8 2000 	strh.w	r2, [r8]
 801bd62:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801bd64:	441c      	add	r4, r3
 801bd66:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801bd68:	f108 0802 	add.w	r8, r8, #2
 801bd6c:	441e      	add	r6, r3
 801bd6e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801bd72:	e6ba      	b.n	801baea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801bd74:	200119dc 	.word	0x200119dc
 801bd78:	2800      	cmp	r0, #0
 801bd7a:	d0ba      	beq.n	801bcf2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801bd7c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801bd7e:	442b      	add	r3, r5
 801bd80:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801bd84:	07db      	lsls	r3, r3, #31
 801bd86:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801bd8a:	bf54      	ite	pl
 801bd8c:	f00c 0c0f 	andpl.w	ip, ip, #15
 801bd90:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801bd94:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801bd98:	fa5f f38c 	uxtb.w	r3, ip
 801bd9c:	930c      	str	r3, [sp, #48]	@ 0x30
 801bd9e:	e7a8      	b.n	801bcf2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801bda0:	f8b8 e000 	ldrh.w	lr, [r8]
 801bda4:	fa1f fa83 	uxth.w	sl, r3
 801bda8:	ea4f 202e 	mov.w	r0, lr, asr #8
 801bdac:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801bdb0:	43db      	mvns	r3, r3
 801bdb2:	b2db      	uxtb	r3, r3
 801bdb4:	fb11 f10a 	smulbb	r1, r1, sl
 801bdb8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801bdbc:	fb00 1003 	mla	r0, r0, r3, r1
 801bdc0:	b2d2      	uxtb	r2, r2
 801bdc2:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801bdc6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bdca:	fa5f fe8e 	uxtb.w	lr, lr
 801bdce:	fb12 f20a 	smulbb	r2, r2, sl
 801bdd2:	fb0e 2203 	mla	r2, lr, r3, r2
 801bdd6:	fa5f fc8c 	uxtb.w	ip, ip
 801bdda:	b280      	uxth	r0, r0
 801bddc:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801bde0:	b292      	uxth	r2, r2
 801bde2:	fb1c fc0a 	smulbb	ip, ip, sl
 801bde6:	fb01 cc03 	mla	ip, r1, r3, ip
 801bdea:	1c43      	adds	r3, r0, #1
 801bdec:	1c51      	adds	r1, r2, #1
 801bdee:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801bdf2:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801bdf6:	fa1f fc8c 	uxth.w	ip, ip
 801bdfa:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801bdfe:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801be02:	4308      	orrs	r0, r1
 801be04:	f10c 0101 	add.w	r1, ip, #1
 801be08:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801be0c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801be10:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801be14:	ea40 000c 	orr.w	r0, r0, ip
 801be18:	f8a8 0000 	strh.w	r0, [r8]
 801be1c:	e7a1      	b.n	801bd62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801be1e:	b017      	add	sp, #92	@ 0x5c
 801be20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801be24 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801be24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801be28:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801be2c:	2d00      	cmp	r5, #0
 801be2e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801be32:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801be36:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801be3a:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801be3e:	fb05 0e03 	mla	lr, r5, r3, r0
 801be42:	f2c0 80b0 	blt.w	801bfa6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801be46:	45a9      	cmp	r9, r5
 801be48:	f340 80ad 	ble.w	801bfa6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801be4c:	2800      	cmp	r0, #0
 801be4e:	f2c0 80a8 	blt.w	801bfa2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801be52:	4580      	cmp	r8, r0
 801be54:	f340 80a5 	ble.w	801bfa2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801be58:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801be5c:	f01e 0f01 	tst.w	lr, #1
 801be60:	5d16      	ldrb	r6, [r2, r4]
 801be62:	bf0c      	ite	eq
 801be64:	f006 060f 	andeq.w	r6, r6, #15
 801be68:	1136      	asrne	r6, r6, #4
 801be6a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801be6e:	b2f6      	uxtb	r6, r6
 801be70:	1c44      	adds	r4, r0, #1
 801be72:	f100 809b 	bmi.w	801bfac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801be76:	45a0      	cmp	r8, r4
 801be78:	f340 8098 	ble.w	801bfac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801be7c:	2f00      	cmp	r7, #0
 801be7e:	f000 8097 	beq.w	801bfb0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801be82:	f10e 0a01 	add.w	sl, lr, #1
 801be86:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801be8a:	f01a 0f01 	tst.w	sl, #1
 801be8e:	5d14      	ldrb	r4, [r2, r4]
 801be90:	bf0c      	ite	eq
 801be92:	f004 040f 	andeq.w	r4, r4, #15
 801be96:	1124      	asrne	r4, r4, #4
 801be98:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801be9c:	b2e4      	uxtb	r4, r4
 801be9e:	3501      	adds	r5, #1
 801bea0:	f100 808a 	bmi.w	801bfb8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801bea4:	45a9      	cmp	r9, r5
 801bea6:	f340 8087 	ble.w	801bfb8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801beaa:	f1bc 0f00 	cmp.w	ip, #0
 801beae:	f000 8086 	beq.w	801bfbe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801beb2:	2800      	cmp	r0, #0
 801beb4:	db7e      	blt.n	801bfb4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801beb6:	4580      	cmp	r8, r0
 801beb8:	dd7c      	ble.n	801bfb4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801beba:	eb03 090e 	add.w	r9, r3, lr
 801bebe:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801bec2:	f019 0f01 	tst.w	r9, #1
 801bec6:	5d55      	ldrb	r5, [r2, r5]
 801bec8:	bf0c      	ite	eq
 801beca:	f005 050f 	andeq.w	r5, r5, #15
 801bece:	112d      	asrne	r5, r5, #4
 801bed0:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801bed4:	b2ed      	uxtb	r5, r5
 801bed6:	3001      	adds	r0, #1
 801bed8:	d474      	bmi.n	801bfc4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801beda:	4580      	cmp	r8, r0
 801bedc:	dd72      	ble.n	801bfc4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801bede:	2f00      	cmp	r7, #0
 801bee0:	d072      	beq.n	801bfc8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801bee2:	3301      	adds	r3, #1
 801bee4:	449e      	add	lr, r3
 801bee6:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801beea:	f01e 0f01 	tst.w	lr, #1
 801beee:	5cd0      	ldrb	r0, [r2, r3]
 801bef0:	bf0c      	ite	eq
 801bef2:	f000 000f 	andeq.w	r0, r0, #15
 801bef6:	1100      	asrne	r0, r0, #4
 801bef8:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801befc:	b2c3      	uxtb	r3, r0
 801befe:	b2ba      	uxth	r2, r7
 801bf00:	fa1f fc8c 	uxth.w	ip, ip
 801bf04:	fb02 f00c 	mul.w	r0, r2, ip
 801bf08:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801bf0c:	0112      	lsls	r2, r2, #4
 801bf0e:	fa1f fc8c 	uxth.w	ip, ip
 801bf12:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801bf16:	1a12      	subs	r2, r2, r0
 801bf18:	eba7 070c 	sub.w	r7, r7, ip
 801bf1c:	b292      	uxth	r2, r2
 801bf1e:	b2bf      	uxth	r7, r7
 801bf20:	4362      	muls	r2, r4
 801bf22:	fb06 2207 	mla	r2, r6, r7, r2
 801bf26:	fb0c 2505 	mla	r5, ip, r5, r2
 801bf2a:	fb00 5303 	mla	r3, r0, r3, r5
 801bf2e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801bf32:	b3a3      	cbz	r3, 801bf9e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801bf34:	4a25      	ldr	r2, [pc, #148]	@ (801bfcc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801bf36:	880e      	ldrh	r6, [r1, #0]
 801bf38:	6815      	ldr	r5, [r2, #0]
 801bf3a:	1234      	asrs	r4, r6, #8
 801bf3c:	b29a      	uxth	r2, r3
 801bf3e:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801bf42:	43db      	mvns	r3, r3
 801bf44:	b2db      	uxtb	r3, r3
 801bf46:	fb10 f002 	smulbb	r0, r0, r2
 801bf4a:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801bf4e:	fb04 0403 	mla	r4, r4, r3, r0
 801bf52:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801bf56:	10f0      	asrs	r0, r6, #3
 801bf58:	b2ed      	uxtb	r5, r5
 801bf5a:	00f6      	lsls	r6, r6, #3
 801bf5c:	fb17 f702 	smulbb	r7, r7, r2
 801bf60:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801bf64:	fb15 f202 	smulbb	r2, r5, r2
 801bf68:	b2f6      	uxtb	r6, r6
 801bf6a:	b2a4      	uxth	r4, r4
 801bf6c:	fb00 7003 	mla	r0, r0, r3, r7
 801bf70:	fb06 2303 	mla	r3, r6, r3, r2
 801bf74:	b29a      	uxth	r2, r3
 801bf76:	1c63      	adds	r3, r4, #1
 801bf78:	b280      	uxth	r0, r0
 801bf7a:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801bf7e:	1c53      	adds	r3, r2, #1
 801bf80:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bf84:	1c42      	adds	r2, r0, #1
 801bf86:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bf8a:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801bf8e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801bf92:	0940      	lsrs	r0, r0, #5
 801bf94:	4323      	orrs	r3, r4
 801bf96:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801bf9a:	4303      	orrs	r3, r0
 801bf9c:	800b      	strh	r3, [r1, #0]
 801bf9e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bfa2:	2600      	movs	r6, #0
 801bfa4:	e764      	b.n	801be70 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801bfa6:	2400      	movs	r4, #0
 801bfa8:	4626      	mov	r6, r4
 801bfaa:	e778      	b.n	801be9e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801bfac:	2400      	movs	r4, #0
 801bfae:	e776      	b.n	801be9e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801bfb0:	463c      	mov	r4, r7
 801bfb2:	e774      	b.n	801be9e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801bfb4:	2500      	movs	r5, #0
 801bfb6:	e78e      	b.n	801bed6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801bfb8:	2300      	movs	r3, #0
 801bfba:	461d      	mov	r5, r3
 801bfbc:	e79f      	b.n	801befe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801bfbe:	4663      	mov	r3, ip
 801bfc0:	4665      	mov	r5, ip
 801bfc2:	e79c      	b.n	801befe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801bfc4:	2300      	movs	r3, #0
 801bfc6:	e79a      	b.n	801befe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801bfc8:	463b      	mov	r3, r7
 801bfca:	e798      	b.n	801befe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801bfcc:	200119dc 	.word	0x200119dc

0801bfd0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bfd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bfd4:	b093      	sub	sp, #76	@ 0x4c
 801bfd6:	461d      	mov	r5, r3
 801bfd8:	920c      	str	r2, [sp, #48]	@ 0x30
 801bfda:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801bfdc:	9107      	str	r1, [sp, #28]
 801bfde:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801bfe2:	9011      	str	r0, [sp, #68]	@ 0x44
 801bfe4:	6850      	ldr	r0, [r2, #4]
 801bfe6:	6812      	ldr	r2, [r2, #0]
 801bfe8:	fb00 1303 	mla	r3, r0, r3, r1
 801bfec:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801bff0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801bff2:	689b      	ldr	r3, [r3, #8]
 801bff4:	3301      	adds	r3, #1
 801bff6:	f023 0301 	bic.w	r3, r3, #1
 801bffa:	9306      	str	r3, [sp, #24]
 801bffc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801bffe:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801c002:	681f      	ldr	r7, [r3, #0]
 801c004:	9b07      	ldr	r3, [sp, #28]
 801c006:	2b00      	cmp	r3, #0
 801c008:	dc03      	bgt.n	801c012 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801c00a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c00c:	2b00      	cmp	r3, #0
 801c00e:	f340 8267 	ble.w	801c4e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801c012:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c014:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c018:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c01c:	1e48      	subs	r0, r1, #1
 801c01e:	f102 3cff 	add.w	ip, r2, #4294967295
 801c022:	2d00      	cmp	r5, #0
 801c024:	f340 80b8 	ble.w	801c198 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801c028:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801c02c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801c030:	d406      	bmi.n	801c040 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c032:	4586      	cmp	lr, r0
 801c034:	da04      	bge.n	801c040 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c036:	2b00      	cmp	r3, #0
 801c038:	db02      	blt.n	801c040 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c03a:	4563      	cmp	r3, ip
 801c03c:	f2c0 80ad 	blt.w	801c19a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 801c040:	f11e 0e01 	adds.w	lr, lr, #1
 801c044:	f100 80a0 	bmi.w	801c188 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801c048:	4571      	cmp	r1, lr
 801c04a:	f2c0 809d 	blt.w	801c188 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801c04e:	3301      	adds	r3, #1
 801c050:	f100 809a 	bmi.w	801c188 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801c054:	429a      	cmp	r2, r3
 801c056:	f2c0 8097 	blt.w	801c188 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801c05a:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801c05e:	9509      	str	r5, [sp, #36]	@ 0x24
 801c060:	46c8      	mov	r8, r9
 801c062:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c064:	2b00      	cmp	r3, #0
 801c066:	f340 80b6 	ble.w	801c1d6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801c06a:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801c06e:	9308      	str	r3, [sp, #32]
 801c070:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c072:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801c076:	1423      	asrs	r3, r4, #16
 801c078:	ea4f 4026 	mov.w	r0, r6, asr #16
 801c07c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801c080:	f100 813e 	bmi.w	801c300 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801c084:	f10c 3bff 	add.w	fp, ip, #4294967295
 801c088:	455b      	cmp	r3, fp
 801c08a:	f280 8139 	bge.w	801c300 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801c08e:	2800      	cmp	r0, #0
 801c090:	f2c0 8136 	blt.w	801c300 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801c094:	f10e 3bff 	add.w	fp, lr, #4294967295
 801c098:	4558      	cmp	r0, fp
 801c09a:	f280 8131 	bge.w	801c300 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801c09e:	9a06      	ldr	r2, [sp, #24]
 801c0a0:	fb00 3302 	mla	r3, r0, r2, r3
 801c0a4:	0858      	lsrs	r0, r3, #1
 801c0a6:	07da      	lsls	r2, r3, #31
 801c0a8:	f817 c000 	ldrb.w	ip, [r7, r0]
 801c0ac:	9a08      	ldr	r2, [sp, #32]
 801c0ae:	bf54      	ite	pl
 801c0b0:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c0b4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c0b8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c0bc:	fa5f fc8c 	uxtb.w	ip, ip
 801c0c0:	2a00      	cmp	r2, #0
 801c0c2:	f000 80cb 	beq.w	801c25c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c0c6:	1c58      	adds	r0, r3, #1
 801c0c8:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801c0cc:	07c0      	lsls	r0, r0, #31
 801c0ce:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c0d2:	bf54      	ite	pl
 801c0d4:	f00e 0e0f 	andpl.w	lr, lr, #15
 801c0d8:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801c0dc:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801c0e0:	fa5f fe8e 	uxtb.w	lr, lr
 801c0e4:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 801c0e8:	b1b9      	cbz	r1, 801c11a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801c0ea:	4453      	add	r3, sl
 801c0ec:	0858      	lsrs	r0, r3, #1
 801c0ee:	07da      	lsls	r2, r3, #31
 801c0f0:	5c38      	ldrb	r0, [r7, r0]
 801c0f2:	bf54      	ite	pl
 801c0f4:	f000 000f 	andpl.w	r0, r0, #15
 801c0f8:	1100      	asrmi	r0, r0, #4
 801c0fa:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801c0fe:	b2c0      	uxtb	r0, r0
 801c100:	900a      	str	r0, [sp, #40]	@ 0x28
 801c102:	1c58      	adds	r0, r3, #1
 801c104:	0843      	lsrs	r3, r0, #1
 801c106:	07c2      	lsls	r2, r0, #31
 801c108:	5cfb      	ldrb	r3, [r7, r3]
 801c10a:	bf54      	ite	pl
 801c10c:	f003 030f 	andpl.w	r3, r3, #15
 801c110:	111b      	asrmi	r3, r3, #4
 801c112:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801c116:	b2db      	uxtb	r3, r3
 801c118:	930e      	str	r3, [sp, #56]	@ 0x38
 801c11a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801c11e:	b289      	uxth	r1, r1
 801c120:	fb02 f301 	mul.w	r3, r2, r1
 801c124:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801c128:	0112      	lsls	r2, r2, #4
 801c12a:	b289      	uxth	r1, r1
 801c12c:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 801c130:	1a40      	subs	r0, r0, r1
 801c132:	fa1f fe80 	uxth.w	lr, r0
 801c136:	1ad2      	subs	r2, r2, r3
 801c138:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801c13a:	b292      	uxth	r2, r2
 801c13c:	4342      	muls	r2, r0
 801c13e:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801c142:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801c144:	fb01 c102 	mla	r1, r1, r2, ip
 801c148:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801c14a:	fb03 1302 	mla	r3, r3, r2, r1
 801c14e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c152:	2bff      	cmp	r3, #255	@ 0xff
 801c154:	f040 8093 	bne.w	801c27e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801c158:	4bbe      	ldr	r3, [pc, #760]	@ (801c454 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801c15a:	681a      	ldr	r2, [r3, #0]
 801c15c:	4bbe      	ldr	r3, [pc, #760]	@ (801c458 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801c15e:	0951      	lsrs	r1, r2, #5
 801c160:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801c164:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801c168:	430b      	orrs	r3, r1
 801c16a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c16e:	4313      	orrs	r3, r2
 801c170:	f8a8 3000 	strh.w	r3, [r8]
 801c174:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801c176:	441c      	add	r4, r3
 801c178:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c17a:	441e      	add	r6, r3
 801c17c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c17e:	3b01      	subs	r3, #1
 801c180:	f108 0802 	add.w	r8, r8, #2
 801c184:	9309      	str	r3, [sp, #36]	@ 0x24
 801c186:	e76c      	b.n	801c062 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c188:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801c18a:	441c      	add	r4, r3
 801c18c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c18e:	3d01      	subs	r5, #1
 801c190:	441e      	add	r6, r3
 801c192:	f109 0902 	add.w	r9, r9, #2
 801c196:	e744      	b.n	801c022 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801c198:	d021      	beq.n	801c1de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801c19a:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801c19c:	1e6b      	subs	r3, r5, #1
 801c19e:	fb00 4003 	mla	r0, r0, r3, r4
 801c1a2:	1400      	asrs	r0, r0, #16
 801c1a4:	f53f af59 	bmi.w	801c05a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801c1a8:	3901      	subs	r1, #1
 801c1aa:	4288      	cmp	r0, r1
 801c1ac:	f6bf af55 	bge.w	801c05a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801c1b0:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801c1b2:	fb01 6303 	mla	r3, r1, r3, r6
 801c1b6:	141b      	asrs	r3, r3, #16
 801c1b8:	f53f af4f 	bmi.w	801c05a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801c1bc:	3a01      	subs	r2, #1
 801c1be:	4293      	cmp	r3, r2
 801c1c0:	f6bf af4b 	bge.w	801c05a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801c1c4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801c1c8:	9308      	str	r3, [sp, #32]
 801c1ca:	46a8      	mov	r8, r5
 801c1cc:	46ce      	mov	lr, r9
 801c1ce:	f1b8 0f00 	cmp.w	r8, #0
 801c1d2:	f300 80b5 	bgt.w	801c340 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c1d6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801c1da:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801c1de:	9b07      	ldr	r3, [sp, #28]
 801c1e0:	2b00      	cmp	r3, #0
 801c1e2:	f340 817d 	ble.w	801c4e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801c1e6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c1ea:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801c1ee:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c1f2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801c1f4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c1f8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c1fc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c200:	eef0 6a62 	vmov.f32	s13, s5
 801c204:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c208:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c20c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c210:	ee16 4a90 	vmov	r4, s13
 801c214:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c218:	eef0 6a43 	vmov.f32	s13, s6
 801c21c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c220:	ee12 2a90 	vmov	r2, s5
 801c224:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c228:	fb92 f3f3 	sdiv	r3, r2, r3
 801c22c:	ee13 2a10 	vmov	r2, s6
 801c230:	931f      	str	r3, [sp, #124]	@ 0x7c
 801c232:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801c234:	fb92 f3f3 	sdiv	r3, r2, r3
 801c238:	9320      	str	r3, [sp, #128]	@ 0x80
 801c23a:	9b07      	ldr	r3, [sp, #28]
 801c23c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801c23e:	3b01      	subs	r3, #1
 801c240:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c244:	9307      	str	r3, [sp, #28]
 801c246:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801c248:	ee16 6a90 	vmov	r6, s13
 801c24c:	bf14      	ite	ne
 801c24e:	461d      	movne	r5, r3
 801c250:	4615      	moveq	r5, r2
 801c252:	eeb0 3a67 	vmov.f32	s6, s15
 801c256:	eef0 2a47 	vmov.f32	s5, s14
 801c25a:	e6d3      	b.n	801c004 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801c25c:	2900      	cmp	r1, #0
 801c25e:	f43f af5c 	beq.w	801c11a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801c262:	eb0a 0003 	add.w	r0, sl, r3
 801c266:	0843      	lsrs	r3, r0, #1
 801c268:	07c0      	lsls	r0, r0, #31
 801c26a:	5cfb      	ldrb	r3, [r7, r3]
 801c26c:	bf54      	ite	pl
 801c26e:	f003 030f 	andpl.w	r3, r3, #15
 801c272:	111b      	asrmi	r3, r3, #4
 801c274:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801c278:	b2db      	uxtb	r3, r3
 801c27a:	930a      	str	r3, [sp, #40]	@ 0x28
 801c27c:	e74d      	b.n	801c11a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801c27e:	2b00      	cmp	r3, #0
 801c280:	f43f af78 	beq.w	801c174 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801c284:	4a73      	ldr	r2, [pc, #460]	@ (801c454 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801c286:	f8b8 c000 	ldrh.w	ip, [r8]
 801c28a:	6810      	ldr	r0, [r2, #0]
 801c28c:	fa1f fe83 	uxth.w	lr, r3
 801c290:	ea4f 212c 	mov.w	r1, ip, asr #8
 801c294:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801c298:	43db      	mvns	r3, r3
 801c29a:	b2db      	uxtb	r3, r3
 801c29c:	fb12 f20e 	smulbb	r2, r2, lr
 801c2a0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801c2a4:	fb01 2103 	mla	r1, r1, r3, r2
 801c2a8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801c2ac:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c2b0:	b2c0      	uxtb	r0, r0
 801c2b2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c2b6:	fb1b fb0e 	smulbb	fp, fp, lr
 801c2ba:	b289      	uxth	r1, r1
 801c2bc:	fb10 fe0e 	smulbb	lr, r0, lr
 801c2c0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801c2c4:	fa5f fc8c 	uxtb.w	ip, ip
 801c2c8:	fb02 b203 	mla	r2, r2, r3, fp
 801c2cc:	1c48      	adds	r0, r1, #1
 801c2ce:	fb0c e303 	mla	r3, ip, r3, lr
 801c2d2:	b292      	uxth	r2, r2
 801c2d4:	b29b      	uxth	r3, r3
 801c2d6:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801c2da:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 801c2de:	f102 0b01 	add.w	fp, r2, #1
 801c2e2:	1c59      	adds	r1, r3, #1
 801c2e4:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801c2e8:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801c2ec:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801c2f0:	0952      	lsrs	r2, r2, #5
 801c2f2:	4301      	orrs	r1, r0
 801c2f4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c2f8:	4311      	orrs	r1, r2
 801c2fa:	f8a8 1000 	strh.w	r1, [r8]
 801c2fe:	e739      	b.n	801c174 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801c300:	f113 0b01 	adds.w	fp, r3, #1
 801c304:	f53f af36 	bmi.w	801c174 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801c308:	45dc      	cmp	ip, fp
 801c30a:	f6ff af33 	blt.w	801c174 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801c30e:	f110 0b01 	adds.w	fp, r0, #1
 801c312:	f53f af2f 	bmi.w	801c174 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801c316:	45de      	cmp	lr, fp
 801c318:	f6ff af2c 	blt.w	801c174 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801c31c:	9a08      	ldr	r2, [sp, #32]
 801c31e:	9302      	str	r3, [sp, #8]
 801c320:	fa0f f38e 	sxth.w	r3, lr
 801c324:	9301      	str	r3, [sp, #4]
 801c326:	fa0f f38c 	sxth.w	r3, ip
 801c32a:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801c32e:	9105      	str	r1, [sp, #20]
 801c330:	9300      	str	r3, [sp, #0]
 801c332:	463a      	mov	r2, r7
 801c334:	4653      	mov	r3, sl
 801c336:	4641      	mov	r1, r8
 801c338:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801c33a:	f7ff fd73 	bl	801be24 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801c33e:	e719      	b.n	801c174 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801c340:	9906      	ldr	r1, [sp, #24]
 801c342:	1422      	asrs	r2, r4, #16
 801c344:	1433      	asrs	r3, r6, #16
 801c346:	fb01 2303 	mla	r3, r1, r3, r2
 801c34a:	085a      	lsrs	r2, r3, #1
 801c34c:	07d9      	lsls	r1, r3, #31
 801c34e:	5cba      	ldrb	r2, [r7, r2]
 801c350:	bf54      	ite	pl
 801c352:	f002 020f 	andpl.w	r2, r2, #15
 801c356:	1112      	asrmi	r2, r2, #4
 801c358:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c35c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801c360:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801c364:	b2d2      	uxtb	r2, r2
 801c366:	2800      	cmp	r0, #0
 801c368:	d062      	beq.n	801c430 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 801c36a:	f103 0a01 	add.w	sl, r3, #1
 801c36e:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801c372:	f01a 0f01 	tst.w	sl, #1
 801c376:	5c79      	ldrb	r1, [r7, r1]
 801c378:	bf0c      	ite	eq
 801c37a:	f001 010f 	andeq.w	r1, r1, #15
 801c37e:	1109      	asrne	r1, r1, #4
 801c380:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801c384:	b2c9      	uxtb	r1, r1
 801c386:	910f      	str	r1, [sp, #60]	@ 0x3c
 801c388:	f1bc 0f00 	cmp.w	ip, #0
 801c38c:	d019      	beq.n	801c3c2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801c38e:	9908      	ldr	r1, [sp, #32]
 801c390:	440b      	add	r3, r1
 801c392:	0859      	lsrs	r1, r3, #1
 801c394:	f013 0f01 	tst.w	r3, #1
 801c398:	5c79      	ldrb	r1, [r7, r1]
 801c39a:	bf0c      	ite	eq
 801c39c:	f001 010f 	andeq.w	r1, r1, #15
 801c3a0:	1109      	asrne	r1, r1, #4
 801c3a2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801c3a6:	b2c9      	uxtb	r1, r1
 801c3a8:	3301      	adds	r3, #1
 801c3aa:	910b      	str	r1, [sp, #44]	@ 0x2c
 801c3ac:	0859      	lsrs	r1, r3, #1
 801c3ae:	07db      	lsls	r3, r3, #31
 801c3b0:	5c79      	ldrb	r1, [r7, r1]
 801c3b2:	bf54      	ite	pl
 801c3b4:	f001 010f 	andpl.w	r1, r1, #15
 801c3b8:	1109      	asrmi	r1, r1, #4
 801c3ba:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801c3be:	b2c9      	uxtb	r1, r1
 801c3c0:	9110      	str	r1, [sp, #64]	@ 0x40
 801c3c2:	b280      	uxth	r0, r0
 801c3c4:	fa1f fc8c 	uxth.w	ip, ip
 801c3c8:	fb00 f30c 	mul.w	r3, r0, ip
 801c3cc:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801c3d0:	0100      	lsls	r0, r0, #4
 801c3d2:	fa1f fc8c 	uxth.w	ip, ip
 801c3d6:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 801c3da:	eba1 010c 	sub.w	r1, r1, ip
 801c3de:	fa1f fa81 	uxth.w	sl, r1
 801c3e2:	1ac0      	subs	r0, r0, r3
 801c3e4:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801c3e6:	b280      	uxth	r0, r0
 801c3e8:	4348      	muls	r0, r1
 801c3ea:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801c3ec:	fb02 020a 	mla	r2, r2, sl, r0
 801c3f0:	fb0c 2c01 	mla	ip, ip, r1, r2
 801c3f4:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801c3f6:	fb03 c302 	mla	r3, r3, r2, ip
 801c3fa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c3fe:	2bff      	cmp	r3, #255	@ 0xff
 801c400:	d12c      	bne.n	801c45c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801c402:	4b14      	ldr	r3, [pc, #80]	@ (801c454 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801c404:	681a      	ldr	r2, [r3, #0]
 801c406:	4b14      	ldr	r3, [pc, #80]	@ (801c458 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801c408:	0951      	lsrs	r1, r2, #5
 801c40a:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801c40e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801c412:	430b      	orrs	r3, r1
 801c414:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c418:	4313      	orrs	r3, r2
 801c41a:	f8ae 3000 	strh.w	r3, [lr]
 801c41e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801c420:	441c      	add	r4, r3
 801c422:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c424:	f10e 0e02 	add.w	lr, lr, #2
 801c428:	441e      	add	r6, r3
 801c42a:	f108 38ff 	add.w	r8, r8, #4294967295
 801c42e:	e6ce      	b.n	801c1ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801c430:	f1bc 0f00 	cmp.w	ip, #0
 801c434:	d0c5      	beq.n	801c3c2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801c436:	9908      	ldr	r1, [sp, #32]
 801c438:	440b      	add	r3, r1
 801c43a:	0859      	lsrs	r1, r3, #1
 801c43c:	07db      	lsls	r3, r3, #31
 801c43e:	5c79      	ldrb	r1, [r7, r1]
 801c440:	bf54      	ite	pl
 801c442:	f001 010f 	andpl.w	r1, r1, #15
 801c446:	1109      	asrmi	r1, r1, #4
 801c448:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801c44c:	b2c9      	uxtb	r1, r1
 801c44e:	910b      	str	r1, [sp, #44]	@ 0x2c
 801c450:	e7b7      	b.n	801c3c2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801c452:	bf00      	nop
 801c454:	200119dc 	.word	0x200119dc
 801c458:	fffff800 	.word	0xfffff800
 801c45c:	2b00      	cmp	r3, #0
 801c45e:	d0de      	beq.n	801c41e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801c460:	4a21      	ldr	r2, [pc, #132]	@ (801c4e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 801c462:	f8be c000 	ldrh.w	ip, [lr]
 801c466:	6810      	ldr	r0, [r2, #0]
 801c468:	fa1f fa83 	uxth.w	sl, r3
 801c46c:	ea4f 212c 	mov.w	r1, ip, asr #8
 801c470:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801c474:	43db      	mvns	r3, r3
 801c476:	b2db      	uxtb	r3, r3
 801c478:	fb12 f20a 	smulbb	r2, r2, sl
 801c47c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801c480:	fb01 2103 	mla	r1, r1, r3, r2
 801c484:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801c488:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c48c:	b2c0      	uxtb	r0, r0
 801c48e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c492:	fa5f fc8c 	uxtb.w	ip, ip
 801c496:	fb10 f00a 	smulbb	r0, r0, sl
 801c49a:	fb0c 0003 	mla	r0, ip, r3, r0
 801c49e:	b289      	uxth	r1, r1
 801c4a0:	fb1b fb0a 	smulbb	fp, fp, sl
 801c4a4:	b280      	uxth	r0, r0
 801c4a6:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801c4aa:	fb02 b203 	mla	r2, r2, r3, fp
 801c4ae:	1c4b      	adds	r3, r1, #1
 801c4b0:	f100 0b01 	add.w	fp, r0, #1
 801c4b4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801c4b8:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801c4bc:	b292      	uxth	r2, r2
 801c4be:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801c4c2:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801c4c6:	ea4b 0101 	orr.w	r1, fp, r1
 801c4ca:	f102 0b01 	add.w	fp, r2, #1
 801c4ce:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801c4d2:	0952      	lsrs	r2, r2, #5
 801c4d4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c4d8:	4311      	orrs	r1, r2
 801c4da:	f8ae 1000 	strh.w	r1, [lr]
 801c4de:	e79e      	b.n	801c41e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801c4e0:	b013      	add	sp, #76	@ 0x4c
 801c4e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c4e6:	bf00      	nop
 801c4e8:	200119dc 	.word	0x200119dc

0801c4ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 801c4ec:	b570      	push	{r4, r5, r6, lr}
 801c4ee:	1208      	asrs	r0, r1, #8
 801c4f0:	b29e      	uxth	r6, r3
 801c4f2:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 801c4f6:	1213      	asrs	r3, r2, #8
 801c4f8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801c4fc:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801c500:	fb13 f305 	smulbb	r3, r3, r5
 801c504:	fb10 f006 	smulbb	r0, r0, r6
 801c508:	4418      	add	r0, r3
 801c50a:	10cc      	asrs	r4, r1, #3
 801c50c:	10d3      	asrs	r3, r2, #3
 801c50e:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801c512:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801c516:	fb13 f305 	smulbb	r3, r3, r5
 801c51a:	fb14 f406 	smulbb	r4, r4, r6
 801c51e:	00c9      	lsls	r1, r1, #3
 801c520:	00d2      	lsls	r2, r2, #3
 801c522:	441c      	add	r4, r3
 801c524:	b2d2      	uxtb	r2, r2
 801c526:	b2cb      	uxtb	r3, r1
 801c528:	fb12 f205 	smulbb	r2, r2, r5
 801c52c:	b280      	uxth	r0, r0
 801c52e:	fb13 f306 	smulbb	r3, r3, r6
 801c532:	4413      	add	r3, r2
 801c534:	1c42      	adds	r2, r0, #1
 801c536:	b29b      	uxth	r3, r3
 801c538:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c53c:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 801c540:	1c58      	adds	r0, r3, #1
 801c542:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801c546:	b2a4      	uxth	r4, r4
 801c548:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801c54c:	4310      	orrs	r0, r2
 801c54e:	1c62      	adds	r2, r4, #1
 801c550:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801c554:	0964      	lsrs	r4, r4, #5
 801c556:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801c55a:	4320      	orrs	r0, r4
 801c55c:	bd70      	pop	{r4, r5, r6, pc}
	...

0801c560 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801c560:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c564:	b08f      	sub	sp, #60	@ 0x3c
 801c566:	461c      	mov	r4, r3
 801c568:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 801c56c:	9004      	str	r0, [sp, #16]
 801c56e:	460d      	mov	r5, r1
 801c570:	4616      	mov	r6, r2
 801c572:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801c574:	2f00      	cmp	r7, #0
 801c576:	f000 80f6 	beq.w	801c766 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 801c57a:	6820      	ldr	r0, [r4, #0]
 801c57c:	6861      	ldr	r1, [r4, #4]
 801c57e:	aa0a      	add	r2, sp, #40	@ 0x28
 801c580:	c203      	stmia	r2!, {r0, r1}
 801c582:	6818      	ldr	r0, [r3, #0]
 801c584:	6859      	ldr	r1, [r3, #4]
 801c586:	aa0c      	add	r2, sp, #48	@ 0x30
 801c588:	c203      	stmia	r2!, {r0, r1}
 801c58a:	a80a      	add	r0, sp, #40	@ 0x28
 801c58c:	f7ef fdda 	bl	800c144 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c590:	4621      	mov	r1, r4
 801c592:	a80c      	add	r0, sp, #48	@ 0x30
 801c594:	f7ef fdfe 	bl	800c194 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c598:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801c59c:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 801c5a0:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801c5a4:	f002 0301 	and.w	r3, r2, #1
 801c5a8:	9306      	str	r3, [sp, #24]
 801c5aa:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801c5ae:	f003 0101 	and.w	r1, r3, #1
 801c5b2:	9105      	str	r1, [sp, #20]
 801c5b4:	9805      	ldr	r0, [sp, #20]
 801c5b6:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801c5ba:	4403      	add	r3, r0
 801c5bc:	fb01 2303 	mla	r3, r1, r3, r2
 801c5c0:	f04f 0802 	mov.w	r8, #2
 801c5c4:	fb93 f3f8 	sdiv	r3, r3, r8
 801c5c8:	441d      	add	r5, r3
 801c5ca:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801c5ce:	441a      	add	r2, r3
 801c5d0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801c5d4:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801c5d8:	4419      	add	r1, r3
 801c5da:	4b64      	ldr	r3, [pc, #400]	@ (801c76c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 801c5dc:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 801c5e0:	6818      	ldr	r0, [r3, #0]
 801c5e2:	6803      	ldr	r3, [r0, #0]
 801c5e4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c5e6:	4798      	blx	r3
 801c5e8:	4a61      	ldr	r2, [pc, #388]	@ (801c770 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 801c5ea:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 801c5ee:	8813      	ldrh	r3, [r2, #0]
 801c5f0:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 801c5f4:	2fff      	cmp	r7, #255	@ 0xff
 801c5f6:	fb03 a404 	mla	r4, r3, r4, sl
 801c5fa:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801c5fe:	f106 0604 	add.w	r6, r6, #4
 801c602:	4611      	mov	r1, r2
 801c604:	fb03 fb0b 	mul.w	fp, r3, fp
 801c608:	d06b      	beq.n	801c6e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 801c60a:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 801c60e:	9303      	str	r3, [sp, #12]
 801c610:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 801c614:	e9cd 3207 	strd	r3, r2, [sp, #28]
 801c618:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 801c61c:	9b07      	ldr	r3, [sp, #28]
 801c61e:	42a3      	cmp	r3, r4
 801c620:	f240 809c 	bls.w	801c75c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 801c624:	9b06      	ldr	r3, [sp, #24]
 801c626:	2b00      	cmp	r3, #0
 801c628:	d039      	beq.n	801c69e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 801c62a:	782b      	ldrb	r3, [r5, #0]
 801c62c:	8822      	ldrh	r2, [r4, #0]
 801c62e:	9804      	ldr	r0, [sp, #16]
 801c630:	f003 030f 	and.w	r3, r3, #15
 801c634:	f105 0801 	add.w	r8, r5, #1
 801c638:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801c63c:	9b03      	ldr	r3, [sp, #12]
 801c63e:	9300      	str	r3, [sp, #0]
 801c640:	463b      	mov	r3, r7
 801c642:	f7ff ff53 	bl	801c4ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801c646:	f824 0b02 	strh.w	r0, [r4], #2
 801c64a:	f109 3bff 	add.w	fp, r9, #4294967295
 801c64e:	f1bb 0f01 	cmp.w	fp, #1
 801c652:	46a2      	mov	sl, r4
 801c654:	f104 0404 	add.w	r4, r4, #4
 801c658:	dd24      	ble.n	801c6a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 801c65a:	f898 3000 	ldrb.w	r3, [r8]
 801c65e:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 801c662:	9804      	ldr	r0, [sp, #16]
 801c664:	091b      	lsrs	r3, r3, #4
 801c666:	f1ab 0b02 	sub.w	fp, fp, #2
 801c66a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801c66e:	9b03      	ldr	r3, [sp, #12]
 801c670:	9300      	str	r3, [sp, #0]
 801c672:	463b      	mov	r3, r7
 801c674:	f7ff ff3a 	bl	801c4ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801c678:	f824 0c04 	strh.w	r0, [r4, #-4]
 801c67c:	f818 3b01 	ldrb.w	r3, [r8], #1
 801c680:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 801c684:	9804      	ldr	r0, [sp, #16]
 801c686:	f003 030f 	and.w	r3, r3, #15
 801c68a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801c68e:	9b03      	ldr	r3, [sp, #12]
 801c690:	9300      	str	r3, [sp, #0]
 801c692:	463b      	mov	r3, r7
 801c694:	f7ff ff2a 	bl	801c4ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801c698:	f824 0c02 	strh.w	r0, [r4, #-2]
 801c69c:	e7d7      	b.n	801c64e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 801c69e:	46a8      	mov	r8, r5
 801c6a0:	46cb      	mov	fp, r9
 801c6a2:	e7d4      	b.n	801c64e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 801c6a4:	d10e      	bne.n	801c6c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 801c6a6:	f898 3000 	ldrb.w	r3, [r8]
 801c6aa:	f8ba 2000 	ldrh.w	r2, [sl]
 801c6ae:	9804      	ldr	r0, [sp, #16]
 801c6b0:	091b      	lsrs	r3, r3, #4
 801c6b2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801c6b6:	9b03      	ldr	r3, [sp, #12]
 801c6b8:	9300      	str	r3, [sp, #0]
 801c6ba:	463b      	mov	r3, r7
 801c6bc:	f7ff ff16 	bl	801c4ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801c6c0:	f82a 0b02 	strh.w	r0, [sl], #2
 801c6c4:	9b08      	ldr	r3, [sp, #32]
 801c6c6:	9a05      	ldr	r2, [sp, #20]
 801c6c8:	881c      	ldrh	r4, [r3, #0]
 801c6ca:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801c6ce:	eba4 0409 	sub.w	r4, r4, r9
 801c6d2:	4413      	add	r3, r2
 801c6d4:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 801c6d8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801c6da:	fb93 f3f2 	sdiv	r3, r3, r2
 801c6de:	441d      	add	r5, r3
 801c6e0:	e79c      	b.n	801c61c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 801c6e2:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 801c6e6:	45a3      	cmp	fp, r4
 801c6e8:	d938      	bls.n	801c75c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 801c6ea:	9b06      	ldr	r3, [sp, #24]
 801c6ec:	b1f3      	cbz	r3, 801c72c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 801c6ee:	782b      	ldrb	r3, [r5, #0]
 801c6f0:	f003 030f 	and.w	r3, r3, #15
 801c6f4:	1c6a      	adds	r2, r5, #1
 801c6f6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801c6fa:	8023      	strh	r3, [r4, #0]
 801c6fc:	f109 30ff 	add.w	r0, r9, #4294967295
 801c700:	3402      	adds	r4, #2
 801c702:	2801      	cmp	r0, #1
 801c704:	4623      	mov	r3, r4
 801c706:	f104 0404 	add.w	r4, r4, #4
 801c70a:	dd12      	ble.n	801c732 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 801c70c:	7813      	ldrb	r3, [r2, #0]
 801c70e:	091b      	lsrs	r3, r3, #4
 801c710:	3802      	subs	r0, #2
 801c712:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801c716:	f824 3c04 	strh.w	r3, [r4, #-4]
 801c71a:	f812 3b01 	ldrb.w	r3, [r2], #1
 801c71e:	f003 030f 	and.w	r3, r3, #15
 801c722:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801c726:	f824 3c02 	strh.w	r3, [r4, #-2]
 801c72a:	e7ea      	b.n	801c702 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 801c72c:	462a      	mov	r2, r5
 801c72e:	4648      	mov	r0, r9
 801c730:	e7e7      	b.n	801c702 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 801c732:	d106      	bne.n	801c742 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 801c734:	7812      	ldrb	r2, [r2, #0]
 801c736:	0912      	lsrs	r2, r2, #4
 801c738:	3302      	adds	r3, #2
 801c73a:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801c73e:	f823 2c02 	strh.w	r2, [r3, #-2]
 801c742:	880c      	ldrh	r4, [r1, #0]
 801c744:	9a05      	ldr	r2, [sp, #20]
 801c746:	eba4 0409 	sub.w	r4, r4, r9
 801c74a:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 801c74e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801c752:	4413      	add	r3, r2
 801c754:	fb93 f3f8 	sdiv	r3, r3, r8
 801c758:	441d      	add	r5, r3
 801c75a:	e7c4      	b.n	801c6e6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801c75c:	4b03      	ldr	r3, [pc, #12]	@ (801c76c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 801c75e:	6818      	ldr	r0, [r3, #0]
 801c760:	6803      	ldr	r3, [r0, #0]
 801c762:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c764:	4798      	blx	r3
 801c766:	b00f      	add	sp, #60	@ 0x3c
 801c768:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c76c:	200119d4 	.word	0x200119d4
 801c770:	200119ce 	.word	0x200119ce

0801c774 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 801c774:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c776:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801c77a:	2dff      	cmp	r5, #255	@ 0xff
 801c77c:	ea4f 2711 	mov.w	r7, r1, lsr #8
 801c780:	d10c      	bne.n	801c79c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 801c782:	2bff      	cmp	r3, #255	@ 0xff
 801c784:	d10a      	bne.n	801c79c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 801c786:	4b25      	ldr	r3, [pc, #148]	@ (801c81c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 801c788:	0948      	lsrs	r0, r1, #5
 801c78a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c78e:	403b      	ands	r3, r7
 801c790:	4318      	orrs	r0, r3
 801c792:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801c796:	4308      	orrs	r0, r1
 801c798:	b280      	uxth	r0, r0
 801c79a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c79c:	fb15 f503 	smulbb	r5, r5, r3
 801c7a0:	b2ab      	uxth	r3, r5
 801c7a2:	1c5d      	adds	r5, r3, #1
 801c7a4:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 801c7a8:	1214      	asrs	r4, r2, #8
 801c7aa:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801c7ae:	fa1f fc85 	uxth.w	ip, r5
 801c7b2:	10d6      	asrs	r6, r2, #3
 801c7b4:	00d0      	lsls	r0, r2, #3
 801c7b6:	43ed      	mvns	r5, r5
 801c7b8:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801c7bc:	f3c1 4207 	ubfx	r2, r1, #16, #8
 801c7c0:	b2eb      	uxtb	r3, r5
 801c7c2:	b2c0      	uxtb	r0, r0
 801c7c4:	fb12 f20c 	smulbb	r2, r2, ip
 801c7c8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801c7cc:	fb04 2403 	mla	r4, r4, r3, r2
 801c7d0:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 801c7d4:	b2c8      	uxtb	r0, r1
 801c7d6:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801c7da:	b2fd      	uxtb	r5, r7
 801c7dc:	fb10 f00c 	smulbb	r0, r0, ip
 801c7e0:	b2a4      	uxth	r4, r4
 801c7e2:	fb02 0003 	mla	r0, r2, r3, r0
 801c7e6:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801c7ea:	fb15 f50c 	smulbb	r5, r5, ip
 801c7ee:	fb06 5503 	mla	r5, r6, r3, r5
 801c7f2:	b283      	uxth	r3, r0
 801c7f4:	1c60      	adds	r0, r4, #1
 801c7f6:	b2ad      	uxth	r5, r5
 801c7f8:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 801c7fc:	1c58      	adds	r0, r3, #1
 801c7fe:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801c802:	1c6b      	adds	r3, r5, #1
 801c804:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c808:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801c80c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801c810:	096d      	lsrs	r5, r5, #5
 801c812:	4320      	orrs	r0, r4
 801c814:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c818:	4328      	orrs	r0, r5
 801c81a:	e7be      	b.n	801c79a <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 801c81c:	00fff800 	.word	0x00fff800

0801c820 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801c820:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c824:	461c      	mov	r4, r3
 801c826:	b08d      	sub	sp, #52	@ 0x34
 801c828:	460d      	mov	r5, r1
 801c82a:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c82c:	6861      	ldr	r1, [r4, #4]
 801c82e:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 801c832:	4680      	mov	r8, r0
 801c834:	6820      	ldr	r0, [r4, #0]
 801c836:	4616      	mov	r6, r2
 801c838:	aa08      	add	r2, sp, #32
 801c83a:	c203      	stmia	r2!, {r0, r1}
 801c83c:	6818      	ldr	r0, [r3, #0]
 801c83e:	6859      	ldr	r1, [r3, #4]
 801c840:	aa0a      	add	r2, sp, #40	@ 0x28
 801c842:	c203      	stmia	r2!, {r0, r1}
 801c844:	a808      	add	r0, sp, #32
 801c846:	f7ef fc7d 	bl	800c144 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c84a:	4621      	mov	r1, r4
 801c84c:	a80a      	add	r0, sp, #40	@ 0x28
 801c84e:	f7ef fca1 	bl	800c194 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c852:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 801c856:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 801c85a:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 801c85e:	f002 0301 	and.w	r3, r2, #1
 801c862:	9303      	str	r3, [sp, #12]
 801c864:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 801c868:	f003 0101 	and.w	r1, r3, #1
 801c86c:	9102      	str	r1, [sp, #8]
 801c86e:	9802      	ldr	r0, [sp, #8]
 801c870:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 801c874:	4403      	add	r3, r0
 801c876:	fb01 2303 	mla	r3, r1, r3, r2
 801c87a:	f04f 0a02 	mov.w	sl, #2
 801c87e:	fb93 f3fa 	sdiv	r3, r3, sl
 801c882:	441d      	add	r5, r3
 801c884:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801c888:	441a      	add	r2, r3
 801c88a:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801c88e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 801c892:	4a3f      	ldr	r2, [pc, #252]	@ (801c990 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 801c894:	9205      	str	r2, [sp, #20]
 801c896:	4419      	add	r1, r3
 801c898:	6810      	ldr	r0, [r2, #0]
 801c89a:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 801c89e:	6803      	ldr	r3, [r0, #0]
 801c8a0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c8a2:	4798      	blx	r3
 801c8a4:	4b3b      	ldr	r3, [pc, #236]	@ (801c994 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 801c8a6:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 801c8aa:	8819      	ldrh	r1, [r3, #0]
 801c8ac:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 801c8b0:	fb01 c404 	mla	r4, r1, r4, ip
 801c8b4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801c8b8:	434f      	muls	r7, r1
 801c8ba:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 801c8be:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 801c8c2:	3604      	adds	r6, #4
 801c8c4:	9204      	str	r2, [sp, #16]
 801c8c6:	9b04      	ldr	r3, [sp, #16]
 801c8c8:	429c      	cmp	r4, r3
 801c8ca:	d258      	bcs.n	801c97e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 801c8cc:	9b03      	ldr	r3, [sp, #12]
 801c8ce:	2b00      	cmp	r3, #0
 801c8d0:	d034      	beq.n	801c93c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 801c8d2:	782b      	ldrb	r3, [r5, #0]
 801c8d4:	f003 030f 	and.w	r3, r3, #15
 801c8d8:	1c6f      	adds	r7, r5, #1
 801c8da:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801c8de:	0e0b      	lsrs	r3, r1, #24
 801c8e0:	d006      	beq.n	801c8f0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 801c8e2:	8822      	ldrh	r2, [r4, #0]
 801c8e4:	9300      	str	r3, [sp, #0]
 801c8e6:	4640      	mov	r0, r8
 801c8e8:	464b      	mov	r3, r9
 801c8ea:	f7ff ff43 	bl	801c774 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801c8ee:	8020      	strh	r0, [r4, #0]
 801c8f0:	3402      	adds	r4, #2
 801c8f2:	f10b 3aff 	add.w	sl, fp, #4294967295
 801c8f6:	f1ba 0f01 	cmp.w	sl, #1
 801c8fa:	dd22      	ble.n	801c942 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 801c8fc:	783b      	ldrb	r3, [r7, #0]
 801c8fe:	091b      	lsrs	r3, r3, #4
 801c900:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801c904:	0e0b      	lsrs	r3, r1, #24
 801c906:	d006      	beq.n	801c916 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 801c908:	8822      	ldrh	r2, [r4, #0]
 801c90a:	9300      	str	r3, [sp, #0]
 801c90c:	4640      	mov	r0, r8
 801c90e:	464b      	mov	r3, r9
 801c910:	f7ff ff30 	bl	801c774 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801c914:	8020      	strh	r0, [r4, #0]
 801c916:	f817 3b01 	ldrb.w	r3, [r7], #1
 801c91a:	f003 030f 	and.w	r3, r3, #15
 801c91e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801c922:	0e0b      	lsrs	r3, r1, #24
 801c924:	d006      	beq.n	801c934 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 801c926:	8862      	ldrh	r2, [r4, #2]
 801c928:	9300      	str	r3, [sp, #0]
 801c92a:	4640      	mov	r0, r8
 801c92c:	464b      	mov	r3, r9
 801c92e:	f7ff ff21 	bl	801c774 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801c932:	8060      	strh	r0, [r4, #2]
 801c934:	3404      	adds	r4, #4
 801c936:	f1aa 0a02 	sub.w	sl, sl, #2
 801c93a:	e7dc      	b.n	801c8f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 801c93c:	462f      	mov	r7, r5
 801c93e:	46da      	mov	sl, fp
 801c940:	e7d9      	b.n	801c8f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 801c942:	d10d      	bne.n	801c960 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 801c944:	783b      	ldrb	r3, [r7, #0]
 801c946:	091b      	lsrs	r3, r3, #4
 801c948:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801c94c:	0e0b      	lsrs	r3, r1, #24
 801c94e:	d006      	beq.n	801c95e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 801c950:	8822      	ldrh	r2, [r4, #0]
 801c952:	9300      	str	r3, [sp, #0]
 801c954:	4640      	mov	r0, r8
 801c956:	464b      	mov	r3, r9
 801c958:	f7ff ff0c 	bl	801c774 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801c95c:	8020      	strh	r0, [r4, #0]
 801c95e:	3402      	adds	r4, #2
 801c960:	9b06      	ldr	r3, [sp, #24]
 801c962:	9a02      	ldr	r2, [sp, #8]
 801c964:	881b      	ldrh	r3, [r3, #0]
 801c966:	eba3 030b 	sub.w	r3, r3, fp
 801c96a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c96e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 801c972:	4413      	add	r3, r2
 801c974:	9a07      	ldr	r2, [sp, #28]
 801c976:	fb93 f3f2 	sdiv	r3, r3, r2
 801c97a:	441d      	add	r5, r3
 801c97c:	e7a3      	b.n	801c8c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 801c97e:	9b05      	ldr	r3, [sp, #20]
 801c980:	6818      	ldr	r0, [r3, #0]
 801c982:	6803      	ldr	r3, [r0, #0]
 801c984:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c986:	4798      	blx	r3
 801c988:	b00d      	add	sp, #52	@ 0x34
 801c98a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c98e:	bf00      	nop
 801c990:	200119d4 	.word	0x200119d4
 801c994:	200119ce 	.word	0x200119ce

0801c998 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 801c998:	b570      	push	{r4, r5, r6, lr}
 801c99a:	1214      	asrs	r4, r2, #8
 801c99c:	788d      	ldrb	r5, [r1, #2]
 801c99e:	f89d 6010 	ldrb.w	r6, [sp, #16]
 801c9a2:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801c9a6:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801c9aa:	fb15 f503 	smulbb	r5, r5, r3
 801c9ae:	fb04 5506 	mla	r5, r4, r6, r5
 801c9b2:	10d0      	asrs	r0, r2, #3
 801c9b4:	784c      	ldrb	r4, [r1, #1]
 801c9b6:	7809      	ldrb	r1, [r1, #0]
 801c9b8:	00d2      	lsls	r2, r2, #3
 801c9ba:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801c9be:	b2d2      	uxtb	r2, r2
 801c9c0:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 801c9c4:	fb14 f403 	smulbb	r4, r4, r3
 801c9c8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c9cc:	fb11 f303 	smulbb	r3, r1, r3
 801c9d0:	fb00 4406 	mla	r4, r0, r6, r4
 801c9d4:	fb02 3306 	mla	r3, r2, r6, r3
 801c9d8:	b2ad      	uxth	r5, r5
 801c9da:	b29b      	uxth	r3, r3
 801c9dc:	b2a4      	uxth	r4, r4
 801c9de:	1c68      	adds	r0, r5, #1
 801c9e0:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 801c9e4:	1c62      	adds	r2, r4, #1
 801c9e6:	1c58      	adds	r0, r3, #1
 801c9e8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801c9ec:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801c9f0:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801c9f4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801c9f8:	0964      	lsrs	r4, r4, #5
 801c9fa:	4328      	orrs	r0, r5
 801c9fc:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801ca00:	4320      	orrs	r0, r4
 801ca02:	bd70      	pop	{r4, r5, r6, pc}

0801ca04 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801ca04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ca08:	b08f      	sub	sp, #60	@ 0x3c
 801ca0a:	461c      	mov	r4, r3
 801ca0c:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 801ca10:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ca12:	4682      	mov	sl, r0
 801ca14:	460e      	mov	r6, r1
 801ca16:	4615      	mov	r5, r2
 801ca18:	2f00      	cmp	r7, #0
 801ca1a:	f000 8142 	beq.w	801cca2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 801ca1e:	6820      	ldr	r0, [r4, #0]
 801ca20:	6861      	ldr	r1, [r4, #4]
 801ca22:	aa0a      	add	r2, sp, #40	@ 0x28
 801ca24:	c203      	stmia	r2!, {r0, r1}
 801ca26:	6818      	ldr	r0, [r3, #0]
 801ca28:	6859      	ldr	r1, [r3, #4]
 801ca2a:	aa0c      	add	r2, sp, #48	@ 0x30
 801ca2c:	c203      	stmia	r2!, {r0, r1}
 801ca2e:	a80a      	add	r0, sp, #40	@ 0x28
 801ca30:	f7ef fb88 	bl	800c144 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ca34:	4621      	mov	r1, r4
 801ca36:	a80c      	add	r0, sp, #48	@ 0x30
 801ca38:	f7ef fbac 	bl	800c194 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ca3c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801ca40:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 801ca44:	f002 0301 	and.w	r3, r2, #1
 801ca48:	9306      	str	r3, [sp, #24]
 801ca4a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801ca4e:	f003 0101 	and.w	r1, r3, #1
 801ca52:	9105      	str	r1, [sp, #20]
 801ca54:	9805      	ldr	r0, [sp, #20]
 801ca56:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801ca5a:	4403      	add	r3, r0
 801ca5c:	fb01 2303 	mla	r3, r1, r3, r2
 801ca60:	f04f 0802 	mov.w	r8, #2
 801ca64:	fb93 f3f8 	sdiv	r3, r3, r8
 801ca68:	441e      	add	r6, r3
 801ca6a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801ca6e:	441a      	add	r2, r3
 801ca70:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801ca74:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801ca78:	4419      	add	r1, r3
 801ca7a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801ca7e:	9303      	str	r3, [sp, #12]
 801ca80:	4b89      	ldr	r3, [pc, #548]	@ (801cca8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 801ca82:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 801ca86:	6818      	ldr	r0, [r3, #0]
 801ca88:	6803      	ldr	r3, [r0, #0]
 801ca8a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801ca8c:	4798      	blx	r3
 801ca8e:	4a87      	ldr	r2, [pc, #540]	@ (801ccac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 801ca90:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 801ca94:	8813      	ldrh	r3, [r2, #0]
 801ca96:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 801ca9a:	2fff      	cmp	r7, #255	@ 0xff
 801ca9c:	fb03 9404 	mla	r4, r3, r4, r9
 801caa0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801caa4:	f105 0504 	add.w	r5, r5, #4
 801caa8:	4694      	mov	ip, r2
 801caaa:	fb03 f30b 	mul.w	r3, r3, fp
 801caae:	d071      	beq.n	801cb94 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801cab0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801cab4:	43f9      	mvns	r1, r7
 801cab6:	e9cd 3207 	strd	r3, r2, [sp, #28]
 801caba:	b2c9      	uxtb	r1, r1
 801cabc:	9104      	str	r1, [sp, #16]
 801cabe:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 801cac2:	9b07      	ldr	r3, [sp, #28]
 801cac4:	42a3      	cmp	r3, r4
 801cac6:	f240 80e7 	bls.w	801cc98 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 801caca:	9b06      	ldr	r3, [sp, #24]
 801cacc:	2b00      	cmp	r3, #0
 801cace:	d03d      	beq.n	801cb4c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 801cad0:	7831      	ldrb	r1, [r6, #0]
 801cad2:	9b04      	ldr	r3, [sp, #16]
 801cad4:	8822      	ldrh	r2, [r4, #0]
 801cad6:	9300      	str	r3, [sp, #0]
 801cad8:	f001 010f 	and.w	r1, r1, #15
 801cadc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801cae0:	463b      	mov	r3, r7
 801cae2:	4429      	add	r1, r5
 801cae4:	4650      	mov	r0, sl
 801cae6:	f7ff ff57 	bl	801c998 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801caea:	9b03      	ldr	r3, [sp, #12]
 801caec:	f824 0b02 	strh.w	r0, [r4], #2
 801caf0:	f106 0801 	add.w	r8, r6, #1
 801caf4:	f103 3bff 	add.w	fp, r3, #4294967295
 801caf8:	f1bb 0f01 	cmp.w	fp, #1
 801cafc:	46a1      	mov	r9, r4
 801cafe:	f104 0404 	add.w	r4, r4, #4
 801cb02:	dd27      	ble.n	801cb54 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 801cb04:	f898 1000 	ldrb.w	r1, [r8]
 801cb08:	9b04      	ldr	r3, [sp, #16]
 801cb0a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 801cb0e:	9300      	str	r3, [sp, #0]
 801cb10:	0909      	lsrs	r1, r1, #4
 801cb12:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801cb16:	463b      	mov	r3, r7
 801cb18:	4429      	add	r1, r5
 801cb1a:	4650      	mov	r0, sl
 801cb1c:	f7ff ff3c 	bl	801c998 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801cb20:	f824 0c04 	strh.w	r0, [r4, #-4]
 801cb24:	f818 1b01 	ldrb.w	r1, [r8], #1
 801cb28:	9b04      	ldr	r3, [sp, #16]
 801cb2a:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 801cb2e:	9300      	str	r3, [sp, #0]
 801cb30:	f001 010f 	and.w	r1, r1, #15
 801cb34:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801cb38:	463b      	mov	r3, r7
 801cb3a:	4429      	add	r1, r5
 801cb3c:	4650      	mov	r0, sl
 801cb3e:	f7ff ff2b 	bl	801c998 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801cb42:	f1ab 0b02 	sub.w	fp, fp, #2
 801cb46:	f824 0c02 	strh.w	r0, [r4, #-2]
 801cb4a:	e7d5      	b.n	801caf8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801cb4c:	46b0      	mov	r8, r6
 801cb4e:	f8dd b00c 	ldr.w	fp, [sp, #12]
 801cb52:	e7d1      	b.n	801caf8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801cb54:	d10f      	bne.n	801cb76 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 801cb56:	f898 1000 	ldrb.w	r1, [r8]
 801cb5a:	9b04      	ldr	r3, [sp, #16]
 801cb5c:	f8b9 2000 	ldrh.w	r2, [r9]
 801cb60:	9300      	str	r3, [sp, #0]
 801cb62:	0909      	lsrs	r1, r1, #4
 801cb64:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801cb68:	463b      	mov	r3, r7
 801cb6a:	4429      	add	r1, r5
 801cb6c:	4650      	mov	r0, sl
 801cb6e:	f7ff ff13 	bl	801c998 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801cb72:	f829 0b02 	strh.w	r0, [r9], #2
 801cb76:	9b08      	ldr	r3, [sp, #32]
 801cb78:	9a05      	ldr	r2, [sp, #20]
 801cb7a:	881c      	ldrh	r4, [r3, #0]
 801cb7c:	9b03      	ldr	r3, [sp, #12]
 801cb7e:	1ae4      	subs	r4, r4, r3
 801cb80:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801cb84:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801cb88:	4413      	add	r3, r2
 801cb8a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801cb8c:	fb93 f3f2 	sdiv	r3, r3, r2
 801cb90:	441e      	add	r6, r3
 801cb92:	e796      	b.n	801cac2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 801cb94:	4f46      	ldr	r7, [pc, #280]	@ (801ccb0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 801cb96:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801cb9a:	42a3      	cmp	r3, r4
 801cb9c:	d97c      	bls.n	801cc98 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 801cb9e:	9a06      	ldr	r2, [sp, #24]
 801cba0:	2a00      	cmp	r2, #0
 801cba2:	d054      	beq.n	801cc4e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801cba4:	7830      	ldrb	r0, [r6, #0]
 801cba6:	f000 000f 	and.w	r0, r0, #15
 801cbaa:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801cbae:	eb05 0e00 	add.w	lr, r5, r0
 801cbb2:	5c28      	ldrb	r0, [r5, r0]
 801cbb4:	f89e 2002 	ldrb.w	r2, [lr, #2]
 801cbb8:	f89e e001 	ldrb.w	lr, [lr, #1]
 801cbbc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801cbc0:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801cbc4:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 801cbc8:	ea42 020e 	orr.w	r2, r2, lr
 801cbcc:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 801cbd0:	f824 2b02 	strh.w	r2, [r4], #2
 801cbd4:	9a03      	ldr	r2, [sp, #12]
 801cbd6:	1c71      	adds	r1, r6, #1
 801cbd8:	f102 3eff 	add.w	lr, r2, #4294967295
 801cbdc:	f1be 0f01 	cmp.w	lr, #1
 801cbe0:	4620      	mov	r0, r4
 801cbe2:	f104 0404 	add.w	r4, r4, #4
 801cbe6:	dd36      	ble.n	801cc56 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 801cbe8:	7808      	ldrb	r0, [r1, #0]
 801cbea:	0900      	lsrs	r0, r0, #4
 801cbec:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801cbf0:	eb05 0a00 	add.w	sl, r5, r0
 801cbf4:	f1ae 0e02 	sub.w	lr, lr, #2
 801cbf8:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801cbfc:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801cc00:	00d2      	lsls	r2, r2, #3
 801cc02:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 801cc06:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801cc0a:	ea49 0202 	orr.w	r2, r9, r2
 801cc0e:	f815 9000 	ldrb.w	r9, [r5, r0]
 801cc12:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801cc16:	f824 2c04 	strh.w	r2, [r4, #-4]
 801cc1a:	f811 0b01 	ldrb.w	r0, [r1], #1
 801cc1e:	f000 000f 	and.w	r0, r0, #15
 801cc22:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801cc26:	eb05 0a00 	add.w	sl, r5, r0
 801cc2a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801cc2e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801cc32:	00d2      	lsls	r2, r2, #3
 801cc34:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 801cc38:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801cc3c:	ea49 0202 	orr.w	r2, r9, r2
 801cc40:	f815 9000 	ldrb.w	r9, [r5, r0]
 801cc44:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801cc48:	f824 2c02 	strh.w	r2, [r4, #-2]
 801cc4c:	e7c6      	b.n	801cbdc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 801cc4e:	4631      	mov	r1, r6
 801cc50:	f8dd e00c 	ldr.w	lr, [sp, #12]
 801cc54:	e7c2      	b.n	801cbdc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 801cc56:	d111      	bne.n	801cc7c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 801cc58:	7809      	ldrb	r1, [r1, #0]
 801cc5a:	0909      	lsrs	r1, r1, #4
 801cc5c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801cc60:	186c      	adds	r4, r5, r1
 801cc62:	5c69      	ldrb	r1, [r5, r1]
 801cc64:	78a2      	ldrb	r2, [r4, #2]
 801cc66:	7864      	ldrb	r4, [r4, #1]
 801cc68:	00e4      	lsls	r4, r4, #3
 801cc6a:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 801cc6e:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801cc72:	4322      	orrs	r2, r4
 801cc74:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 801cc78:	f820 2b02 	strh.w	r2, [r0], #2
 801cc7c:	9a03      	ldr	r2, [sp, #12]
 801cc7e:	f8bc 4000 	ldrh.w	r4, [ip]
 801cc82:	9905      	ldr	r1, [sp, #20]
 801cc84:	1aa4      	subs	r4, r4, r2
 801cc86:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801cc8a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801cc8e:	440a      	add	r2, r1
 801cc90:	fb92 f2f8 	sdiv	r2, r2, r8
 801cc94:	4416      	add	r6, r2
 801cc96:	e780      	b.n	801cb9a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 801cc98:	4b03      	ldr	r3, [pc, #12]	@ (801cca8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 801cc9a:	6818      	ldr	r0, [r3, #0]
 801cc9c:	6803      	ldr	r3, [r0, #0]
 801cc9e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801cca0:	4798      	blx	r3
 801cca2:	b00f      	add	sp, #60	@ 0x3c
 801cca4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cca8:	200119d4 	.word	0x200119d4
 801ccac:	200119ce 	.word	0x200119ce
 801ccb0:	fffff800 	.word	0xfffff800

0801ccb4 <CRC_Lock>:
 801ccb4:	b530      	push	{r4, r5, lr}
 801ccb6:	4a2d      	ldr	r2, [pc, #180]	@ (801cd6c <CRC_Lock+0xb8>)
 801ccb8:	6813      	ldr	r3, [r2, #0]
 801ccba:	f023 0301 	bic.w	r3, r3, #1
 801ccbe:	6013      	str	r3, [r2, #0]
 801ccc0:	4b2b      	ldr	r3, [pc, #172]	@ (801cd70 <CRC_Lock+0xbc>)
 801ccc2:	681c      	ldr	r4, [r3, #0]
 801ccc4:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 801ccc8:	4014      	ands	r4, r2
 801ccca:	f24c 2540 	movw	r5, #49728	@ 0xc240
 801ccce:	42ac      	cmp	r4, r5
 801ccd0:	d005      	beq.n	801ccde <CRC_Lock+0x2a>
 801ccd2:	681c      	ldr	r4, [r3, #0]
 801ccd4:	f24c 2570 	movw	r5, #49776	@ 0xc270
 801ccd8:	4014      	ands	r4, r2
 801ccda:	42ac      	cmp	r4, r5
 801ccdc:	d125      	bne.n	801cd2a <CRC_Lock+0x76>
 801ccde:	4b25      	ldr	r3, [pc, #148]	@ (801cd74 <CRC_Lock+0xc0>)
 801cce0:	681b      	ldr	r3, [r3, #0]
 801cce2:	2b00      	cmp	r3, #0
 801cce4:	d139      	bne.n	801cd5a <CRC_Lock+0xa6>
 801cce6:	4b24      	ldr	r3, [pc, #144]	@ (801cd78 <CRC_Lock+0xc4>)
 801cce8:	681a      	ldr	r2, [r3, #0]
 801ccea:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801ccee:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 801ccf2:	d00d      	beq.n	801cd10 <CRC_Lock+0x5c>
 801ccf4:	681a      	ldr	r2, [r3, #0]
 801ccf6:	f240 4483 	movw	r4, #1155	@ 0x483
 801ccfa:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801ccfe:	42a2      	cmp	r2, r4
 801cd00:	d006      	beq.n	801cd10 <CRC_Lock+0x5c>
 801cd02:	681b      	ldr	r3, [r3, #0]
 801cd04:	f240 4285 	movw	r2, #1157	@ 0x485
 801cd08:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801cd0c:	4293      	cmp	r3, r2
 801cd0e:	d124      	bne.n	801cd5a <CRC_Lock+0xa6>
 801cd10:	4b1a      	ldr	r3, [pc, #104]	@ (801cd7c <CRC_Lock+0xc8>)
 801cd12:	2201      	movs	r2, #1
 801cd14:	601a      	str	r2, [r3, #0]
 801cd16:	681a      	ldr	r2, [r3, #0]
 801cd18:	2a00      	cmp	r2, #0
 801cd1a:	d1fc      	bne.n	801cd16 <CRC_Lock+0x62>
 801cd1c:	4b18      	ldr	r3, [pc, #96]	@ (801cd80 <CRC_Lock+0xcc>)
 801cd1e:	6018      	str	r0, [r3, #0]
 801cd20:	6818      	ldr	r0, [r3, #0]
 801cd22:	1a43      	subs	r3, r0, r1
 801cd24:	4258      	negs	r0, r3
 801cd26:	4158      	adcs	r0, r3
 801cd28:	e00e      	b.n	801cd48 <CRC_Lock+0x94>
 801cd2a:	681b      	ldr	r3, [r3, #0]
 801cd2c:	4013      	ands	r3, r2
 801cd2e:	f24d 2220 	movw	r2, #53792	@ 0xd220
 801cd32:	4293      	cmp	r3, r2
 801cd34:	d111      	bne.n	801cd5a <CRC_Lock+0xa6>
 801cd36:	4b13      	ldr	r3, [pc, #76]	@ (801cd84 <CRC_Lock+0xd0>)
 801cd38:	681b      	ldr	r3, [r3, #0]
 801cd3a:	f240 4286 	movw	r2, #1158	@ 0x486
 801cd3e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801cd42:	4293      	cmp	r3, r2
 801cd44:	d001      	beq.n	801cd4a <CRC_Lock+0x96>
 801cd46:	2000      	movs	r0, #0
 801cd48:	bd30      	pop	{r4, r5, pc}
 801cd4a:	4b0f      	ldr	r3, [pc, #60]	@ (801cd88 <CRC_Lock+0xd4>)
 801cd4c:	2201      	movs	r2, #1
 801cd4e:	601a      	str	r2, [r3, #0]
 801cd50:	681a      	ldr	r2, [r3, #0]
 801cd52:	2a00      	cmp	r2, #0
 801cd54:	d1fc      	bne.n	801cd50 <CRC_Lock+0x9c>
 801cd56:	4b0d      	ldr	r3, [pc, #52]	@ (801cd8c <CRC_Lock+0xd8>)
 801cd58:	e7e1      	b.n	801cd1e <CRC_Lock+0x6a>
 801cd5a:	4b0d      	ldr	r3, [pc, #52]	@ (801cd90 <CRC_Lock+0xdc>)
 801cd5c:	2201      	movs	r2, #1
 801cd5e:	601a      	str	r2, [r3, #0]
 801cd60:	681a      	ldr	r2, [r3, #0]
 801cd62:	2a00      	cmp	r2, #0
 801cd64:	d1fc      	bne.n	801cd60 <CRC_Lock+0xac>
 801cd66:	4b0b      	ldr	r3, [pc, #44]	@ (801cd94 <CRC_Lock+0xe0>)
 801cd68:	e7d9      	b.n	801cd1e <CRC_Lock+0x6a>
 801cd6a:	bf00      	nop
 801cd6c:	e0002000 	.word	0xe0002000
 801cd70:	e000ed00 	.word	0xe000ed00
 801cd74:	e0042000 	.word	0xe0042000
 801cd78:	5c001000 	.word	0x5c001000
 801cd7c:	58024c08 	.word	0x58024c08
 801cd80:	58024c00 	.word	0x58024c00
 801cd84:	46008ff0 	.word	0x46008ff0
 801cd88:	46024c08 	.word	0x46024c08
 801cd8c:	46024c00 	.word	0x46024c00
 801cd90:	40023008 	.word	0x40023008
 801cd94:	40023000 	.word	0x40023000

0801cd98 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801cd98:	6101      	str	r1, [r0, #16]
 801cd9a:	4770      	bx	lr

0801cd9c <_ZN8touchgfx8Gestures4tickEv>:
 801cd9c:	7b83      	ldrb	r3, [r0, #14]
 801cd9e:	b14b      	cbz	r3, 801cdb4 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801cda0:	8903      	ldrh	r3, [r0, #8]
 801cda2:	3301      	adds	r3, #1
 801cda4:	b29b      	uxth	r3, r3
 801cda6:	2b07      	cmp	r3, #7
 801cda8:	8103      	strh	r3, [r0, #8]
 801cdaa:	bf81      	itttt	hi
 801cdac:	2300      	movhi	r3, #0
 801cdae:	8143      	strhhi	r3, [r0, #10]
 801cdb0:	8183      	strhhi	r3, [r0, #12]
 801cdb2:	7383      	strbhi	r3, [r0, #14]
 801cdb4:	4770      	bx	lr
	...

0801cdb8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801cdb8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801cdbc:	4698      	mov	r8, r3
 801cdbe:	8883      	ldrh	r3, [r0, #4]
 801cdc0:	f8ad 3006 	strh.w	r3, [sp, #6]
 801cdc4:	eba8 0303 	sub.w	r3, r8, r3
 801cdc8:	b21b      	sxth	r3, r3
 801cdca:	4604      	mov	r4, r0
 801cdcc:	2b00      	cmp	r3, #0
 801cdce:	4617      	mov	r7, r2
 801cdd0:	4a18      	ldr	r2, [pc, #96]	@ (801ce34 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801cdd2:	9200      	str	r2, [sp, #0]
 801cdd4:	bfb8      	it	lt
 801cdd6:	425b      	neglt	r3, r3
 801cdd8:	8aa2      	ldrh	r2, [r4, #20]
 801cdda:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 801cdde:	f8ad 800a 	strh.w	r8, [sp, #10]
 801cde2:	b21b      	sxth	r3, r3
 801cde4:	460e      	mov	r6, r1
 801cde6:	4293      	cmp	r3, r2
 801cde8:	88c1      	ldrh	r1, [r0, #6]
 801cdea:	f8ad 1008 	strh.w	r1, [sp, #8]
 801cdee:	f04f 0000 	mov.w	r0, #0
 801cdf2:	f88d 0004 	strb.w	r0, [sp, #4]
 801cdf6:	f8ad 500c 	strh.w	r5, [sp, #12]
 801cdfa:	dc07      	bgt.n	801ce0c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 801cdfc:	1a69      	subs	r1, r5, r1
 801cdfe:	b209      	sxth	r1, r1
 801ce00:	2900      	cmp	r1, #0
 801ce02:	bfb8      	it	lt
 801ce04:	4249      	neglt	r1, r1
 801ce06:	b209      	sxth	r1, r1
 801ce08:	428a      	cmp	r2, r1
 801ce0a:	da10      	bge.n	801ce2e <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 801ce0c:	6920      	ldr	r0, [r4, #16]
 801ce0e:	6803      	ldr	r3, [r0, #0]
 801ce10:	4669      	mov	r1, sp
 801ce12:	685b      	ldr	r3, [r3, #4]
 801ce14:	4798      	blx	r3
 801ce16:	eba8 0606 	sub.w	r6, r8, r6
 801ce1a:	2300      	movs	r3, #0
 801ce1c:	1bef      	subs	r7, r5, r7
 801ce1e:	2001      	movs	r0, #1
 801ce20:	8123      	strh	r3, [r4, #8]
 801ce22:	8166      	strh	r6, [r4, #10]
 801ce24:	81a7      	strh	r7, [r4, #12]
 801ce26:	f8a4 8004 	strh.w	r8, [r4, #4]
 801ce2a:	80e5      	strh	r5, [r4, #6]
 801ce2c:	73a0      	strb	r0, [r4, #14]
 801ce2e:	b004      	add	sp, #16
 801ce30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801ce34:	0801fd74 	.word	0x0801fd74

0801ce38 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801ce38:	b5f0      	push	{r4, r5, r6, r7, lr}
 801ce3a:	461e      	mov	r6, r3
 801ce3c:	1e4b      	subs	r3, r1, #1
 801ce3e:	2b01      	cmp	r3, #1
 801ce40:	b085      	sub	sp, #20
 801ce42:	4604      	mov	r4, r0
 801ce44:	460d      	mov	r5, r1
 801ce46:	4617      	mov	r7, r2
 801ce48:	d84b      	bhi.n	801cee2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801ce4a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801ce4e:	1cd3      	adds	r3, r2, #3
 801ce50:	b29b      	uxth	r3, r3
 801ce52:	2b06      	cmp	r3, #6
 801ce54:	d916      	bls.n	801ce84 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801ce56:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 801cef8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801ce5a:	f8cd c004 	str.w	ip, [sp, #4]
 801ce5e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801ce62:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801ce66:	6900      	ldr	r0, [r0, #16]
 801ce68:	f8ad 100c 	strh.w	r1, [sp, #12]
 801ce6c:	f04f 0c00 	mov.w	ip, #0
 801ce70:	f88d c008 	strb.w	ip, [sp, #8]
 801ce74:	f8ad 200a 	strh.w	r2, [sp, #10]
 801ce78:	f8ad 300e 	strh.w	r3, [sp, #14]
 801ce7c:	6803      	ldr	r3, [r0, #0]
 801ce7e:	a901      	add	r1, sp, #4
 801ce80:	689b      	ldr	r3, [r3, #8]
 801ce82:	4798      	blx	r3
 801ce84:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801ce88:	1cd3      	adds	r3, r2, #3
 801ce8a:	b29b      	uxth	r3, r3
 801ce8c:	2b06      	cmp	r3, #6
 801ce8e:	d916      	bls.n	801cebe <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801ce90:	f8df c064 	ldr.w	ip, [pc, #100]	@ 801cef8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801ce94:	f8cd c004 	str.w	ip, [sp, #4]
 801ce98:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801ce9c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801cea0:	6920      	ldr	r0, [r4, #16]
 801cea2:	f8ad 100c 	strh.w	r1, [sp, #12]
 801cea6:	f04f 0c01 	mov.w	ip, #1
 801ceaa:	f88d c008 	strb.w	ip, [sp, #8]
 801ceae:	f8ad 200a 	strh.w	r2, [sp, #10]
 801ceb2:	f8ad 300e 	strh.w	r3, [sp, #14]
 801ceb6:	6803      	ldr	r3, [r0, #0]
 801ceb8:	a901      	add	r1, sp, #4
 801ceba:	689b      	ldr	r3, [r3, #8]
 801cebc:	4798      	blx	r3
 801cebe:	4b0d      	ldr	r3, [pc, #52]	@ (801cef4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801cec0:	9301      	str	r3, [sp, #4]
 801cec2:	6920      	ldr	r0, [r4, #16]
 801cec4:	f88d 5008 	strb.w	r5, [sp, #8]
 801cec8:	2300      	movs	r3, #0
 801ceca:	f8ad 700a 	strh.w	r7, [sp, #10]
 801cece:	f8ad 600c 	strh.w	r6, [sp, #12]
 801ced2:	f8ad 300e 	strh.w	r3, [sp, #14]
 801ced6:	6803      	ldr	r3, [r0, #0]
 801ced8:	a901      	add	r1, sp, #4
 801ceda:	681b      	ldr	r3, [r3, #0]
 801cedc:	4798      	blx	r3
 801cede:	b005      	add	sp, #20
 801cee0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801cee2:	2900      	cmp	r1, #0
 801cee4:	d1eb      	bne.n	801cebe <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801cee6:	80a2      	strh	r2, [r4, #4]
 801cee8:	80c6      	strh	r6, [r0, #6]
 801ceea:	60a1      	str	r1, [r4, #8]
 801ceec:	81a1      	strh	r1, [r4, #12]
 801ceee:	73a1      	strb	r1, [r4, #14]
 801cef0:	e7e5      	b.n	801cebe <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801cef2:	bf00      	nop
 801cef4:	0801fd60 	.word	0x0801fd60
 801cef8:	0801fd88 	.word	0x0801fd88

0801cefc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 801cefc:	b570      	push	{r4, r5, r6, lr}
 801cefe:	790b      	ldrb	r3, [r1, #4]
 801cf00:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
 801cf04:	2b00      	cmp	r3, #0
 801cf06:	bf0c      	ite	eq
 801cf08:	2301      	moveq	r3, #1
 801cf0a:	2300      	movne	r3, #0
 801cf0c:	4604      	mov	r4, r0
 801cf0e:	460e      	mov	r6, r1
 801cf10:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 801cf14:	d109      	bne.n	801cf2a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 801cf16:	b14d      	cbz	r5, 801cf2c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 801cf18:	7933      	ldrb	r3, [r6, #4]
 801cf1a:	2b01      	cmp	r3, #1
 801cf1c:	d10c      	bne.n	801cf38 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801cf1e:	6823      	ldr	r3, [r4, #0]
 801cf20:	4620      	mov	r0, r4
 801cf22:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 801cf24:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801cf28:	4718      	bx	r3
 801cf2a:	b12d      	cbz	r5, 801cf38 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801cf2c:	6823      	ldr	r3, [r4, #0]
 801cf2e:	4620      	mov	r0, r4
 801cf30:	695b      	ldr	r3, [r3, #20]
 801cf32:	4798      	blx	r3
 801cf34:	2d00      	cmp	r5, #0
 801cf36:	d1ef      	bne.n	801cf18 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 801cf38:	bd70      	pop	{r4, r5, r6, pc}

0801cf3a <__aeabi_atexit>:
 801cf3a:	460b      	mov	r3, r1
 801cf3c:	4601      	mov	r1, r0
 801cf3e:	4618      	mov	r0, r3
 801cf40:	f000 b910 	b.w	801d164 <__cxa_atexit>

0801cf44 <_ZdlPvj>:
 801cf44:	f000 b812 	b.w	801cf6c <_ZdlPv>

0801cf48 <__cxa_guard_acquire>:
 801cf48:	6802      	ldr	r2, [r0, #0]
 801cf4a:	07d2      	lsls	r2, r2, #31
 801cf4c:	4603      	mov	r3, r0
 801cf4e:	d405      	bmi.n	801cf5c <__cxa_guard_acquire+0x14>
 801cf50:	7842      	ldrb	r2, [r0, #1]
 801cf52:	b102      	cbz	r2, 801cf56 <__cxa_guard_acquire+0xe>
 801cf54:	deff      	udf	#255	@ 0xff
 801cf56:	2001      	movs	r0, #1
 801cf58:	7058      	strb	r0, [r3, #1]
 801cf5a:	4770      	bx	lr
 801cf5c:	2000      	movs	r0, #0
 801cf5e:	4770      	bx	lr

0801cf60 <__cxa_guard_release>:
 801cf60:	2301      	movs	r3, #1
 801cf62:	6003      	str	r3, [r0, #0]
 801cf64:	4770      	bx	lr

0801cf66 <__cxa_pure_virtual>:
 801cf66:	b508      	push	{r3, lr}
 801cf68:	f000 f80e 	bl	801cf88 <_ZSt9terminatev>

0801cf6c <_ZdlPv>:
 801cf6c:	f000 b844 	b.w	801cff8 <free>

0801cf70 <_ZN10__cxxabiv111__terminateEPFvvE>:
 801cf70:	b508      	push	{r3, lr}
 801cf72:	4780      	blx	r0
 801cf74:	f000 f80d 	bl	801cf92 <abort>

0801cf78 <_ZSt13get_terminatev>:
 801cf78:	4b02      	ldr	r3, [pc, #8]	@ (801cf84 <_ZSt13get_terminatev+0xc>)
 801cf7a:	6818      	ldr	r0, [r3, #0]
 801cf7c:	f3bf 8f5b 	dmb	ish
 801cf80:	4770      	bx	lr
 801cf82:	bf00      	nop
 801cf84:	20000100 	.word	0x20000100

0801cf88 <_ZSt9terminatev>:
 801cf88:	b508      	push	{r3, lr}
 801cf8a:	f7ff fff5 	bl	801cf78 <_ZSt13get_terminatev>
 801cf8e:	f7ff ffef 	bl	801cf70 <_ZN10__cxxabiv111__terminateEPFvvE>

0801cf92 <abort>:
 801cf92:	b508      	push	{r3, lr}
 801cf94:	2006      	movs	r0, #6
 801cf96:	f000 fa5b 	bl	801d450 <raise>
 801cf9a:	2001      	movs	r0, #1
 801cf9c:	f7e4 ff66 	bl	8001e6c <_exit>

0801cfa0 <__assert_func>:
 801cfa0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801cfa2:	4614      	mov	r4, r2
 801cfa4:	461a      	mov	r2, r3
 801cfa6:	4b09      	ldr	r3, [pc, #36]	@ (801cfcc <__assert_func+0x2c>)
 801cfa8:	681b      	ldr	r3, [r3, #0]
 801cfaa:	4605      	mov	r5, r0
 801cfac:	68d8      	ldr	r0, [r3, #12]
 801cfae:	b954      	cbnz	r4, 801cfc6 <__assert_func+0x26>
 801cfb0:	4b07      	ldr	r3, [pc, #28]	@ (801cfd0 <__assert_func+0x30>)
 801cfb2:	461c      	mov	r4, r3
 801cfb4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801cfb8:	9100      	str	r1, [sp, #0]
 801cfba:	462b      	mov	r3, r5
 801cfbc:	4905      	ldr	r1, [pc, #20]	@ (801cfd4 <__assert_func+0x34>)
 801cfbe:	f000 f983 	bl	801d2c8 <fiprintf>
 801cfc2:	f7ff ffe6 	bl	801cf92 <abort>
 801cfc6:	4b04      	ldr	r3, [pc, #16]	@ (801cfd8 <__assert_func+0x38>)
 801cfc8:	e7f4      	b.n	801cfb4 <__assert_func+0x14>
 801cfca:	bf00      	nop
 801cfcc:	20000110 	.word	0x20000110
 801cfd0:	0801e9d9 	.word	0x0801e9d9
 801cfd4:	080200b1 	.word	0x080200b1
 801cfd8:	080200a4 	.word	0x080200a4

0801cfdc <atexit>:
 801cfdc:	2300      	movs	r3, #0
 801cfde:	4601      	mov	r1, r0
 801cfe0:	461a      	mov	r2, r3
 801cfe2:	4618      	mov	r0, r3
 801cfe4:	f000 bb38 	b.w	801d658 <__register_exitproc>

0801cfe8 <malloc>:
 801cfe8:	4b02      	ldr	r3, [pc, #8]	@ (801cff4 <malloc+0xc>)
 801cfea:	4601      	mov	r1, r0
 801cfec:	6818      	ldr	r0, [r3, #0]
 801cfee:	f000 b82d 	b.w	801d04c <_malloc_r>
 801cff2:	bf00      	nop
 801cff4:	20000110 	.word	0x20000110

0801cff8 <free>:
 801cff8:	4b02      	ldr	r3, [pc, #8]	@ (801d004 <free+0xc>)
 801cffa:	4601      	mov	r1, r0
 801cffc:	6818      	ldr	r0, [r3, #0]
 801cffe:	f000 bb87 	b.w	801d710 <_free_r>
 801d002:	bf00      	nop
 801d004:	20000110 	.word	0x20000110

0801d008 <sbrk_aligned>:
 801d008:	b570      	push	{r4, r5, r6, lr}
 801d00a:	4e0f      	ldr	r6, [pc, #60]	@ (801d048 <sbrk_aligned+0x40>)
 801d00c:	460c      	mov	r4, r1
 801d00e:	6831      	ldr	r1, [r6, #0]
 801d010:	4605      	mov	r5, r0
 801d012:	b911      	cbnz	r1, 801d01a <sbrk_aligned+0x12>
 801d014:	f000 fac2 	bl	801d59c <_sbrk_r>
 801d018:	6030      	str	r0, [r6, #0]
 801d01a:	4621      	mov	r1, r4
 801d01c:	4628      	mov	r0, r5
 801d01e:	f000 fabd 	bl	801d59c <_sbrk_r>
 801d022:	1c43      	adds	r3, r0, #1
 801d024:	d103      	bne.n	801d02e <sbrk_aligned+0x26>
 801d026:	f04f 34ff 	mov.w	r4, #4294967295
 801d02a:	4620      	mov	r0, r4
 801d02c:	bd70      	pop	{r4, r5, r6, pc}
 801d02e:	1cc4      	adds	r4, r0, #3
 801d030:	f024 0403 	bic.w	r4, r4, #3
 801d034:	42a0      	cmp	r0, r4
 801d036:	d0f8      	beq.n	801d02a <sbrk_aligned+0x22>
 801d038:	1a21      	subs	r1, r4, r0
 801d03a:	4628      	mov	r0, r5
 801d03c:	f000 faae 	bl	801d59c <_sbrk_r>
 801d040:	3001      	adds	r0, #1
 801d042:	d1f2      	bne.n	801d02a <sbrk_aligned+0x22>
 801d044:	e7ef      	b.n	801d026 <sbrk_aligned+0x1e>
 801d046:	bf00      	nop
 801d048:	20012320 	.word	0x20012320

0801d04c <_malloc_r>:
 801d04c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801d050:	1ccd      	adds	r5, r1, #3
 801d052:	f025 0503 	bic.w	r5, r5, #3
 801d056:	3508      	adds	r5, #8
 801d058:	2d0c      	cmp	r5, #12
 801d05a:	bf38      	it	cc
 801d05c:	250c      	movcc	r5, #12
 801d05e:	2d00      	cmp	r5, #0
 801d060:	4606      	mov	r6, r0
 801d062:	db01      	blt.n	801d068 <_malloc_r+0x1c>
 801d064:	42a9      	cmp	r1, r5
 801d066:	d904      	bls.n	801d072 <_malloc_r+0x26>
 801d068:	230c      	movs	r3, #12
 801d06a:	6033      	str	r3, [r6, #0]
 801d06c:	2000      	movs	r0, #0
 801d06e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801d072:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 801d148 <_malloc_r+0xfc>
 801d076:	f000 f869 	bl	801d14c <__malloc_lock>
 801d07a:	f8d8 3000 	ldr.w	r3, [r8]
 801d07e:	461c      	mov	r4, r3
 801d080:	bb44      	cbnz	r4, 801d0d4 <_malloc_r+0x88>
 801d082:	4629      	mov	r1, r5
 801d084:	4630      	mov	r0, r6
 801d086:	f7ff ffbf 	bl	801d008 <sbrk_aligned>
 801d08a:	1c43      	adds	r3, r0, #1
 801d08c:	4604      	mov	r4, r0
 801d08e:	d158      	bne.n	801d142 <_malloc_r+0xf6>
 801d090:	f8d8 4000 	ldr.w	r4, [r8]
 801d094:	4627      	mov	r7, r4
 801d096:	2f00      	cmp	r7, #0
 801d098:	d143      	bne.n	801d122 <_malloc_r+0xd6>
 801d09a:	2c00      	cmp	r4, #0
 801d09c:	d04b      	beq.n	801d136 <_malloc_r+0xea>
 801d09e:	6823      	ldr	r3, [r4, #0]
 801d0a0:	4639      	mov	r1, r7
 801d0a2:	4630      	mov	r0, r6
 801d0a4:	eb04 0903 	add.w	r9, r4, r3
 801d0a8:	f000 fa78 	bl	801d59c <_sbrk_r>
 801d0ac:	4581      	cmp	r9, r0
 801d0ae:	d142      	bne.n	801d136 <_malloc_r+0xea>
 801d0b0:	6821      	ldr	r1, [r4, #0]
 801d0b2:	1a6d      	subs	r5, r5, r1
 801d0b4:	4629      	mov	r1, r5
 801d0b6:	4630      	mov	r0, r6
 801d0b8:	f7ff ffa6 	bl	801d008 <sbrk_aligned>
 801d0bc:	3001      	adds	r0, #1
 801d0be:	d03a      	beq.n	801d136 <_malloc_r+0xea>
 801d0c0:	6823      	ldr	r3, [r4, #0]
 801d0c2:	442b      	add	r3, r5
 801d0c4:	6023      	str	r3, [r4, #0]
 801d0c6:	f8d8 3000 	ldr.w	r3, [r8]
 801d0ca:	685a      	ldr	r2, [r3, #4]
 801d0cc:	bb62      	cbnz	r2, 801d128 <_malloc_r+0xdc>
 801d0ce:	f8c8 7000 	str.w	r7, [r8]
 801d0d2:	e00f      	b.n	801d0f4 <_malloc_r+0xa8>
 801d0d4:	6822      	ldr	r2, [r4, #0]
 801d0d6:	1b52      	subs	r2, r2, r5
 801d0d8:	d420      	bmi.n	801d11c <_malloc_r+0xd0>
 801d0da:	2a0b      	cmp	r2, #11
 801d0dc:	d917      	bls.n	801d10e <_malloc_r+0xc2>
 801d0de:	1961      	adds	r1, r4, r5
 801d0e0:	42a3      	cmp	r3, r4
 801d0e2:	6025      	str	r5, [r4, #0]
 801d0e4:	bf18      	it	ne
 801d0e6:	6059      	strne	r1, [r3, #4]
 801d0e8:	6863      	ldr	r3, [r4, #4]
 801d0ea:	bf08      	it	eq
 801d0ec:	f8c8 1000 	streq.w	r1, [r8]
 801d0f0:	5162      	str	r2, [r4, r5]
 801d0f2:	604b      	str	r3, [r1, #4]
 801d0f4:	4630      	mov	r0, r6
 801d0f6:	f000 f82f 	bl	801d158 <__malloc_unlock>
 801d0fa:	f104 000b 	add.w	r0, r4, #11
 801d0fe:	1d23      	adds	r3, r4, #4
 801d100:	f020 0007 	bic.w	r0, r0, #7
 801d104:	1ac2      	subs	r2, r0, r3
 801d106:	bf1c      	itt	ne
 801d108:	1a1b      	subne	r3, r3, r0
 801d10a:	50a3      	strne	r3, [r4, r2]
 801d10c:	e7af      	b.n	801d06e <_malloc_r+0x22>
 801d10e:	6862      	ldr	r2, [r4, #4]
 801d110:	42a3      	cmp	r3, r4
 801d112:	bf0c      	ite	eq
 801d114:	f8c8 2000 	streq.w	r2, [r8]
 801d118:	605a      	strne	r2, [r3, #4]
 801d11a:	e7eb      	b.n	801d0f4 <_malloc_r+0xa8>
 801d11c:	4623      	mov	r3, r4
 801d11e:	6864      	ldr	r4, [r4, #4]
 801d120:	e7ae      	b.n	801d080 <_malloc_r+0x34>
 801d122:	463c      	mov	r4, r7
 801d124:	687f      	ldr	r7, [r7, #4]
 801d126:	e7b6      	b.n	801d096 <_malloc_r+0x4a>
 801d128:	461a      	mov	r2, r3
 801d12a:	685b      	ldr	r3, [r3, #4]
 801d12c:	42a3      	cmp	r3, r4
 801d12e:	d1fb      	bne.n	801d128 <_malloc_r+0xdc>
 801d130:	2300      	movs	r3, #0
 801d132:	6053      	str	r3, [r2, #4]
 801d134:	e7de      	b.n	801d0f4 <_malloc_r+0xa8>
 801d136:	230c      	movs	r3, #12
 801d138:	6033      	str	r3, [r6, #0]
 801d13a:	4630      	mov	r0, r6
 801d13c:	f000 f80c 	bl	801d158 <__malloc_unlock>
 801d140:	e794      	b.n	801d06c <_malloc_r+0x20>
 801d142:	6005      	str	r5, [r0, #0]
 801d144:	e7d6      	b.n	801d0f4 <_malloc_r+0xa8>
 801d146:	bf00      	nop
 801d148:	20012324 	.word	0x20012324

0801d14c <__malloc_lock>:
 801d14c:	4801      	ldr	r0, [pc, #4]	@ (801d154 <__malloc_lock+0x8>)
 801d14e:	f000 ba72 	b.w	801d636 <__retarget_lock_acquire_recursive>
 801d152:	bf00      	nop
 801d154:	20012468 	.word	0x20012468

0801d158 <__malloc_unlock>:
 801d158:	4801      	ldr	r0, [pc, #4]	@ (801d160 <__malloc_unlock+0x8>)
 801d15a:	f000 ba6d 	b.w	801d638 <__retarget_lock_release_recursive>
 801d15e:	bf00      	nop
 801d160:	20012468 	.word	0x20012468

0801d164 <__cxa_atexit>:
 801d164:	b510      	push	{r4, lr}
 801d166:	4604      	mov	r4, r0
 801d168:	4804      	ldr	r0, [pc, #16]	@ (801d17c <__cxa_atexit+0x18>)
 801d16a:	4613      	mov	r3, r2
 801d16c:	b120      	cbz	r0, 801d178 <__cxa_atexit+0x14>
 801d16e:	460a      	mov	r2, r1
 801d170:	2002      	movs	r0, #2
 801d172:	4621      	mov	r1, r4
 801d174:	f000 fa70 	bl	801d658 <__register_exitproc>
 801d178:	bd10      	pop	{r4, pc}
 801d17a:	bf00      	nop
 801d17c:	0801d659 	.word	0x0801d659

0801d180 <std>:
 801d180:	2300      	movs	r3, #0
 801d182:	b510      	push	{r4, lr}
 801d184:	4604      	mov	r4, r0
 801d186:	e9c0 3300 	strd	r3, r3, [r0]
 801d18a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801d18e:	6083      	str	r3, [r0, #8]
 801d190:	8181      	strh	r1, [r0, #12]
 801d192:	6643      	str	r3, [r0, #100]	@ 0x64
 801d194:	81c2      	strh	r2, [r0, #14]
 801d196:	6183      	str	r3, [r0, #24]
 801d198:	4619      	mov	r1, r3
 801d19a:	2208      	movs	r2, #8
 801d19c:	305c      	adds	r0, #92	@ 0x5c
 801d19e:	f000 f926 	bl	801d3ee <memset>
 801d1a2:	4b0d      	ldr	r3, [pc, #52]	@ (801d1d8 <std+0x58>)
 801d1a4:	6263      	str	r3, [r4, #36]	@ 0x24
 801d1a6:	4b0d      	ldr	r3, [pc, #52]	@ (801d1dc <std+0x5c>)
 801d1a8:	62a3      	str	r3, [r4, #40]	@ 0x28
 801d1aa:	4b0d      	ldr	r3, [pc, #52]	@ (801d1e0 <std+0x60>)
 801d1ac:	62e3      	str	r3, [r4, #44]	@ 0x2c
 801d1ae:	4b0d      	ldr	r3, [pc, #52]	@ (801d1e4 <std+0x64>)
 801d1b0:	6323      	str	r3, [r4, #48]	@ 0x30
 801d1b2:	4b0d      	ldr	r3, [pc, #52]	@ (801d1e8 <std+0x68>)
 801d1b4:	6224      	str	r4, [r4, #32]
 801d1b6:	429c      	cmp	r4, r3
 801d1b8:	d006      	beq.n	801d1c8 <std+0x48>
 801d1ba:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 801d1be:	4294      	cmp	r4, r2
 801d1c0:	d002      	beq.n	801d1c8 <std+0x48>
 801d1c2:	33d0      	adds	r3, #208	@ 0xd0
 801d1c4:	429c      	cmp	r4, r3
 801d1c6:	d105      	bne.n	801d1d4 <std+0x54>
 801d1c8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 801d1cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d1d0:	f000 ba30 	b.w	801d634 <__retarget_lock_init_recursive>
 801d1d4:	bd10      	pop	{r4, pc}
 801d1d6:	bf00      	nop
 801d1d8:	0801d369 	.word	0x0801d369
 801d1dc:	0801d38b 	.word	0x0801d38b
 801d1e0:	0801d3c3 	.word	0x0801d3c3
 801d1e4:	0801d3e7 	.word	0x0801d3e7
 801d1e8:	20012328 	.word	0x20012328

0801d1ec <stdio_exit_handler>:
 801d1ec:	4a02      	ldr	r2, [pc, #8]	@ (801d1f8 <stdio_exit_handler+0xc>)
 801d1ee:	4903      	ldr	r1, [pc, #12]	@ (801d1fc <stdio_exit_handler+0x10>)
 801d1f0:	4803      	ldr	r0, [pc, #12]	@ (801d200 <stdio_exit_handler+0x14>)
 801d1f2:	f000 b87b 	b.w	801d2ec <_fwalk_sglue>
 801d1f6:	bf00      	nop
 801d1f8:	20000104 	.word	0x20000104
 801d1fc:	0801e0fd 	.word	0x0801e0fd
 801d200:	20000114 	.word	0x20000114

0801d204 <cleanup_stdio>:
 801d204:	6841      	ldr	r1, [r0, #4]
 801d206:	4b0c      	ldr	r3, [pc, #48]	@ (801d238 <cleanup_stdio+0x34>)
 801d208:	4299      	cmp	r1, r3
 801d20a:	b510      	push	{r4, lr}
 801d20c:	4604      	mov	r4, r0
 801d20e:	d001      	beq.n	801d214 <cleanup_stdio+0x10>
 801d210:	f000 ff74 	bl	801e0fc <_fflush_r>
 801d214:	68a1      	ldr	r1, [r4, #8]
 801d216:	4b09      	ldr	r3, [pc, #36]	@ (801d23c <cleanup_stdio+0x38>)
 801d218:	4299      	cmp	r1, r3
 801d21a:	d002      	beq.n	801d222 <cleanup_stdio+0x1e>
 801d21c:	4620      	mov	r0, r4
 801d21e:	f000 ff6d 	bl	801e0fc <_fflush_r>
 801d222:	68e1      	ldr	r1, [r4, #12]
 801d224:	4b06      	ldr	r3, [pc, #24]	@ (801d240 <cleanup_stdio+0x3c>)
 801d226:	4299      	cmp	r1, r3
 801d228:	d004      	beq.n	801d234 <cleanup_stdio+0x30>
 801d22a:	4620      	mov	r0, r4
 801d22c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d230:	f000 bf64 	b.w	801e0fc <_fflush_r>
 801d234:	bd10      	pop	{r4, pc}
 801d236:	bf00      	nop
 801d238:	20012328 	.word	0x20012328
 801d23c:	20012390 	.word	0x20012390
 801d240:	200123f8 	.word	0x200123f8

0801d244 <global_stdio_init.part.0>:
 801d244:	b510      	push	{r4, lr}
 801d246:	4b0b      	ldr	r3, [pc, #44]	@ (801d274 <global_stdio_init.part.0+0x30>)
 801d248:	4c0b      	ldr	r4, [pc, #44]	@ (801d278 <global_stdio_init.part.0+0x34>)
 801d24a:	4a0c      	ldr	r2, [pc, #48]	@ (801d27c <global_stdio_init.part.0+0x38>)
 801d24c:	601a      	str	r2, [r3, #0]
 801d24e:	4620      	mov	r0, r4
 801d250:	2200      	movs	r2, #0
 801d252:	2104      	movs	r1, #4
 801d254:	f7ff ff94 	bl	801d180 <std>
 801d258:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 801d25c:	2201      	movs	r2, #1
 801d25e:	2109      	movs	r1, #9
 801d260:	f7ff ff8e 	bl	801d180 <std>
 801d264:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 801d268:	2202      	movs	r2, #2
 801d26a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d26e:	2112      	movs	r1, #18
 801d270:	f7ff bf86 	b.w	801d180 <std>
 801d274:	20012460 	.word	0x20012460
 801d278:	20012328 	.word	0x20012328
 801d27c:	0801d1ed 	.word	0x0801d1ed

0801d280 <__sfp_lock_acquire>:
 801d280:	4801      	ldr	r0, [pc, #4]	@ (801d288 <__sfp_lock_acquire+0x8>)
 801d282:	f000 b9d8 	b.w	801d636 <__retarget_lock_acquire_recursive>
 801d286:	bf00      	nop
 801d288:	2001246a 	.word	0x2001246a

0801d28c <__sfp_lock_release>:
 801d28c:	4801      	ldr	r0, [pc, #4]	@ (801d294 <__sfp_lock_release+0x8>)
 801d28e:	f000 b9d3 	b.w	801d638 <__retarget_lock_release_recursive>
 801d292:	bf00      	nop
 801d294:	2001246a 	.word	0x2001246a

0801d298 <__sinit>:
 801d298:	b510      	push	{r4, lr}
 801d29a:	4604      	mov	r4, r0
 801d29c:	f7ff fff0 	bl	801d280 <__sfp_lock_acquire>
 801d2a0:	6a23      	ldr	r3, [r4, #32]
 801d2a2:	b11b      	cbz	r3, 801d2ac <__sinit+0x14>
 801d2a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d2a8:	f7ff bff0 	b.w	801d28c <__sfp_lock_release>
 801d2ac:	4b04      	ldr	r3, [pc, #16]	@ (801d2c0 <__sinit+0x28>)
 801d2ae:	6223      	str	r3, [r4, #32]
 801d2b0:	4b04      	ldr	r3, [pc, #16]	@ (801d2c4 <__sinit+0x2c>)
 801d2b2:	681b      	ldr	r3, [r3, #0]
 801d2b4:	2b00      	cmp	r3, #0
 801d2b6:	d1f5      	bne.n	801d2a4 <__sinit+0xc>
 801d2b8:	f7ff ffc4 	bl	801d244 <global_stdio_init.part.0>
 801d2bc:	e7f2      	b.n	801d2a4 <__sinit+0xc>
 801d2be:	bf00      	nop
 801d2c0:	0801d205 	.word	0x0801d205
 801d2c4:	20012460 	.word	0x20012460

0801d2c8 <fiprintf>:
 801d2c8:	b40e      	push	{r1, r2, r3}
 801d2ca:	b503      	push	{r0, r1, lr}
 801d2cc:	4601      	mov	r1, r0
 801d2ce:	ab03      	add	r3, sp, #12
 801d2d0:	4805      	ldr	r0, [pc, #20]	@ (801d2e8 <fiprintf+0x20>)
 801d2d2:	f853 2b04 	ldr.w	r2, [r3], #4
 801d2d6:	6800      	ldr	r0, [r0, #0]
 801d2d8:	9301      	str	r3, [sp, #4]
 801d2da:	f000 fbe5 	bl	801daa8 <_vfiprintf_r>
 801d2de:	b002      	add	sp, #8
 801d2e0:	f85d eb04 	ldr.w	lr, [sp], #4
 801d2e4:	b003      	add	sp, #12
 801d2e6:	4770      	bx	lr
 801d2e8:	20000110 	.word	0x20000110

0801d2ec <_fwalk_sglue>:
 801d2ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801d2f0:	4607      	mov	r7, r0
 801d2f2:	4688      	mov	r8, r1
 801d2f4:	4614      	mov	r4, r2
 801d2f6:	2600      	movs	r6, #0
 801d2f8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801d2fc:	f1b9 0901 	subs.w	r9, r9, #1
 801d300:	d505      	bpl.n	801d30e <_fwalk_sglue+0x22>
 801d302:	6824      	ldr	r4, [r4, #0]
 801d304:	2c00      	cmp	r4, #0
 801d306:	d1f7      	bne.n	801d2f8 <_fwalk_sglue+0xc>
 801d308:	4630      	mov	r0, r6
 801d30a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801d30e:	89ab      	ldrh	r3, [r5, #12]
 801d310:	2b01      	cmp	r3, #1
 801d312:	d907      	bls.n	801d324 <_fwalk_sglue+0x38>
 801d314:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801d318:	3301      	adds	r3, #1
 801d31a:	d003      	beq.n	801d324 <_fwalk_sglue+0x38>
 801d31c:	4629      	mov	r1, r5
 801d31e:	4638      	mov	r0, r7
 801d320:	47c0      	blx	r8
 801d322:	4306      	orrs	r6, r0
 801d324:	3568      	adds	r5, #104	@ 0x68
 801d326:	e7e9      	b.n	801d2fc <_fwalk_sglue+0x10>

0801d328 <siprintf>:
 801d328:	b40e      	push	{r1, r2, r3}
 801d32a:	b500      	push	{lr}
 801d32c:	b09c      	sub	sp, #112	@ 0x70
 801d32e:	ab1d      	add	r3, sp, #116	@ 0x74
 801d330:	9002      	str	r0, [sp, #8]
 801d332:	9006      	str	r0, [sp, #24]
 801d334:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 801d338:	4809      	ldr	r0, [pc, #36]	@ (801d360 <siprintf+0x38>)
 801d33a:	9107      	str	r1, [sp, #28]
 801d33c:	9104      	str	r1, [sp, #16]
 801d33e:	4909      	ldr	r1, [pc, #36]	@ (801d364 <siprintf+0x3c>)
 801d340:	f853 2b04 	ldr.w	r2, [r3], #4
 801d344:	9105      	str	r1, [sp, #20]
 801d346:	6800      	ldr	r0, [r0, #0]
 801d348:	9301      	str	r3, [sp, #4]
 801d34a:	a902      	add	r1, sp, #8
 801d34c:	f000 fa86 	bl	801d85c <_svfiprintf_r>
 801d350:	9b02      	ldr	r3, [sp, #8]
 801d352:	2200      	movs	r2, #0
 801d354:	701a      	strb	r2, [r3, #0]
 801d356:	b01c      	add	sp, #112	@ 0x70
 801d358:	f85d eb04 	ldr.w	lr, [sp], #4
 801d35c:	b003      	add	sp, #12
 801d35e:	4770      	bx	lr
 801d360:	20000110 	.word	0x20000110
 801d364:	ffff0208 	.word	0xffff0208

0801d368 <__sread>:
 801d368:	b510      	push	{r4, lr}
 801d36a:	460c      	mov	r4, r1
 801d36c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801d370:	f000 f8ee 	bl	801d550 <_read_r>
 801d374:	2800      	cmp	r0, #0
 801d376:	bfab      	itete	ge
 801d378:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 801d37a:	89a3      	ldrhlt	r3, [r4, #12]
 801d37c:	181b      	addge	r3, r3, r0
 801d37e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 801d382:	bfac      	ite	ge
 801d384:	6563      	strge	r3, [r4, #84]	@ 0x54
 801d386:	81a3      	strhlt	r3, [r4, #12]
 801d388:	bd10      	pop	{r4, pc}

0801d38a <__swrite>:
 801d38a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d38e:	461f      	mov	r7, r3
 801d390:	898b      	ldrh	r3, [r1, #12]
 801d392:	05db      	lsls	r3, r3, #23
 801d394:	4605      	mov	r5, r0
 801d396:	460c      	mov	r4, r1
 801d398:	4616      	mov	r6, r2
 801d39a:	d505      	bpl.n	801d3a8 <__swrite+0x1e>
 801d39c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801d3a0:	2302      	movs	r3, #2
 801d3a2:	2200      	movs	r2, #0
 801d3a4:	f000 f8c2 	bl	801d52c <_lseek_r>
 801d3a8:	89a3      	ldrh	r3, [r4, #12]
 801d3aa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801d3ae:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 801d3b2:	81a3      	strh	r3, [r4, #12]
 801d3b4:	4632      	mov	r2, r6
 801d3b6:	463b      	mov	r3, r7
 801d3b8:	4628      	mov	r0, r5
 801d3ba:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801d3be:	f000 b8fd 	b.w	801d5bc <_write_r>

0801d3c2 <__sseek>:
 801d3c2:	b510      	push	{r4, lr}
 801d3c4:	460c      	mov	r4, r1
 801d3c6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801d3ca:	f000 f8af 	bl	801d52c <_lseek_r>
 801d3ce:	1c43      	adds	r3, r0, #1
 801d3d0:	89a3      	ldrh	r3, [r4, #12]
 801d3d2:	bf15      	itete	ne
 801d3d4:	6560      	strne	r0, [r4, #84]	@ 0x54
 801d3d6:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 801d3da:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 801d3de:	81a3      	strheq	r3, [r4, #12]
 801d3e0:	bf18      	it	ne
 801d3e2:	81a3      	strhne	r3, [r4, #12]
 801d3e4:	bd10      	pop	{r4, pc}

0801d3e6 <__sclose>:
 801d3e6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801d3ea:	f000 b839 	b.w	801d460 <_close_r>

0801d3ee <memset>:
 801d3ee:	4402      	add	r2, r0
 801d3f0:	4603      	mov	r3, r0
 801d3f2:	4293      	cmp	r3, r2
 801d3f4:	d100      	bne.n	801d3f8 <memset+0xa>
 801d3f6:	4770      	bx	lr
 801d3f8:	f803 1b01 	strb.w	r1, [r3], #1
 801d3fc:	e7f9      	b.n	801d3f2 <memset+0x4>

0801d3fe <_raise_r>:
 801d3fe:	291f      	cmp	r1, #31
 801d400:	b538      	push	{r3, r4, r5, lr}
 801d402:	4605      	mov	r5, r0
 801d404:	460c      	mov	r4, r1
 801d406:	d904      	bls.n	801d412 <_raise_r+0x14>
 801d408:	2316      	movs	r3, #22
 801d40a:	6003      	str	r3, [r0, #0]
 801d40c:	f04f 30ff 	mov.w	r0, #4294967295
 801d410:	bd38      	pop	{r3, r4, r5, pc}
 801d412:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 801d414:	b112      	cbz	r2, 801d41c <_raise_r+0x1e>
 801d416:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801d41a:	b94b      	cbnz	r3, 801d430 <_raise_r+0x32>
 801d41c:	4628      	mov	r0, r5
 801d41e:	f000 f8bb 	bl	801d598 <_getpid_r>
 801d422:	4622      	mov	r2, r4
 801d424:	4601      	mov	r1, r0
 801d426:	4628      	mov	r0, r5
 801d428:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801d42c:	f000 b8a2 	b.w	801d574 <_kill_r>
 801d430:	2b01      	cmp	r3, #1
 801d432:	d00a      	beq.n	801d44a <_raise_r+0x4c>
 801d434:	1c59      	adds	r1, r3, #1
 801d436:	d103      	bne.n	801d440 <_raise_r+0x42>
 801d438:	2316      	movs	r3, #22
 801d43a:	6003      	str	r3, [r0, #0]
 801d43c:	2001      	movs	r0, #1
 801d43e:	e7e7      	b.n	801d410 <_raise_r+0x12>
 801d440:	2100      	movs	r1, #0
 801d442:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 801d446:	4620      	mov	r0, r4
 801d448:	4798      	blx	r3
 801d44a:	2000      	movs	r0, #0
 801d44c:	e7e0      	b.n	801d410 <_raise_r+0x12>
	...

0801d450 <raise>:
 801d450:	4b02      	ldr	r3, [pc, #8]	@ (801d45c <raise+0xc>)
 801d452:	4601      	mov	r1, r0
 801d454:	6818      	ldr	r0, [r3, #0]
 801d456:	f7ff bfd2 	b.w	801d3fe <_raise_r>
 801d45a:	bf00      	nop
 801d45c:	20000110 	.word	0x20000110

0801d460 <_close_r>:
 801d460:	b538      	push	{r3, r4, r5, lr}
 801d462:	4d06      	ldr	r5, [pc, #24]	@ (801d47c <_close_r+0x1c>)
 801d464:	2300      	movs	r3, #0
 801d466:	4604      	mov	r4, r0
 801d468:	4608      	mov	r0, r1
 801d46a:	602b      	str	r3, [r5, #0]
 801d46c:	f7e4 fd20 	bl	8001eb0 <_close>
 801d470:	1c43      	adds	r3, r0, #1
 801d472:	d102      	bne.n	801d47a <_close_r+0x1a>
 801d474:	682b      	ldr	r3, [r5, #0]
 801d476:	b103      	cbz	r3, 801d47a <_close_r+0x1a>
 801d478:	6023      	str	r3, [r4, #0]
 801d47a:	bd38      	pop	{r3, r4, r5, pc}
 801d47c:	20012464 	.word	0x20012464

0801d480 <_reclaim_reent>:
 801d480:	4b29      	ldr	r3, [pc, #164]	@ (801d528 <_reclaim_reent+0xa8>)
 801d482:	681b      	ldr	r3, [r3, #0]
 801d484:	4283      	cmp	r3, r0
 801d486:	b570      	push	{r4, r5, r6, lr}
 801d488:	4604      	mov	r4, r0
 801d48a:	d04b      	beq.n	801d524 <_reclaim_reent+0xa4>
 801d48c:	69c3      	ldr	r3, [r0, #28]
 801d48e:	b1ab      	cbz	r3, 801d4bc <_reclaim_reent+0x3c>
 801d490:	68db      	ldr	r3, [r3, #12]
 801d492:	b16b      	cbz	r3, 801d4b0 <_reclaim_reent+0x30>
 801d494:	2500      	movs	r5, #0
 801d496:	69e3      	ldr	r3, [r4, #28]
 801d498:	68db      	ldr	r3, [r3, #12]
 801d49a:	5959      	ldr	r1, [r3, r5]
 801d49c:	2900      	cmp	r1, #0
 801d49e:	d13b      	bne.n	801d518 <_reclaim_reent+0x98>
 801d4a0:	3504      	adds	r5, #4
 801d4a2:	2d80      	cmp	r5, #128	@ 0x80
 801d4a4:	d1f7      	bne.n	801d496 <_reclaim_reent+0x16>
 801d4a6:	69e3      	ldr	r3, [r4, #28]
 801d4a8:	4620      	mov	r0, r4
 801d4aa:	68d9      	ldr	r1, [r3, #12]
 801d4ac:	f000 f930 	bl	801d710 <_free_r>
 801d4b0:	69e3      	ldr	r3, [r4, #28]
 801d4b2:	6819      	ldr	r1, [r3, #0]
 801d4b4:	b111      	cbz	r1, 801d4bc <_reclaim_reent+0x3c>
 801d4b6:	4620      	mov	r0, r4
 801d4b8:	f000 f92a 	bl	801d710 <_free_r>
 801d4bc:	6961      	ldr	r1, [r4, #20]
 801d4be:	b111      	cbz	r1, 801d4c6 <_reclaim_reent+0x46>
 801d4c0:	4620      	mov	r0, r4
 801d4c2:	f000 f925 	bl	801d710 <_free_r>
 801d4c6:	69e1      	ldr	r1, [r4, #28]
 801d4c8:	b111      	cbz	r1, 801d4d0 <_reclaim_reent+0x50>
 801d4ca:	4620      	mov	r0, r4
 801d4cc:	f000 f920 	bl	801d710 <_free_r>
 801d4d0:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 801d4d2:	b111      	cbz	r1, 801d4da <_reclaim_reent+0x5a>
 801d4d4:	4620      	mov	r0, r4
 801d4d6:	f000 f91b 	bl	801d710 <_free_r>
 801d4da:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 801d4dc:	b111      	cbz	r1, 801d4e4 <_reclaim_reent+0x64>
 801d4de:	4620      	mov	r0, r4
 801d4e0:	f000 f916 	bl	801d710 <_free_r>
 801d4e4:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 801d4e6:	b111      	cbz	r1, 801d4ee <_reclaim_reent+0x6e>
 801d4e8:	4620      	mov	r0, r4
 801d4ea:	f000 f911 	bl	801d710 <_free_r>
 801d4ee:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 801d4f0:	b111      	cbz	r1, 801d4f8 <_reclaim_reent+0x78>
 801d4f2:	4620      	mov	r0, r4
 801d4f4:	f000 f90c 	bl	801d710 <_free_r>
 801d4f8:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 801d4fa:	b111      	cbz	r1, 801d502 <_reclaim_reent+0x82>
 801d4fc:	4620      	mov	r0, r4
 801d4fe:	f000 f907 	bl	801d710 <_free_r>
 801d502:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 801d504:	b111      	cbz	r1, 801d50c <_reclaim_reent+0x8c>
 801d506:	4620      	mov	r0, r4
 801d508:	f000 f902 	bl	801d710 <_free_r>
 801d50c:	6a23      	ldr	r3, [r4, #32]
 801d50e:	b14b      	cbz	r3, 801d524 <_reclaim_reent+0xa4>
 801d510:	4620      	mov	r0, r4
 801d512:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801d516:	4718      	bx	r3
 801d518:	680e      	ldr	r6, [r1, #0]
 801d51a:	4620      	mov	r0, r4
 801d51c:	f000 f8f8 	bl	801d710 <_free_r>
 801d520:	4631      	mov	r1, r6
 801d522:	e7bb      	b.n	801d49c <_reclaim_reent+0x1c>
 801d524:	bd70      	pop	{r4, r5, r6, pc}
 801d526:	bf00      	nop
 801d528:	20000110 	.word	0x20000110

0801d52c <_lseek_r>:
 801d52c:	b538      	push	{r3, r4, r5, lr}
 801d52e:	4d07      	ldr	r5, [pc, #28]	@ (801d54c <_lseek_r+0x20>)
 801d530:	4604      	mov	r4, r0
 801d532:	4608      	mov	r0, r1
 801d534:	4611      	mov	r1, r2
 801d536:	2200      	movs	r2, #0
 801d538:	602a      	str	r2, [r5, #0]
 801d53a:	461a      	mov	r2, r3
 801d53c:	f7e4 fcc2 	bl	8001ec4 <_lseek>
 801d540:	1c43      	adds	r3, r0, #1
 801d542:	d102      	bne.n	801d54a <_lseek_r+0x1e>
 801d544:	682b      	ldr	r3, [r5, #0]
 801d546:	b103      	cbz	r3, 801d54a <_lseek_r+0x1e>
 801d548:	6023      	str	r3, [r4, #0]
 801d54a:	bd38      	pop	{r3, r4, r5, pc}
 801d54c:	20012464 	.word	0x20012464

0801d550 <_read_r>:
 801d550:	b538      	push	{r3, r4, r5, lr}
 801d552:	4d07      	ldr	r5, [pc, #28]	@ (801d570 <_read_r+0x20>)
 801d554:	4604      	mov	r4, r0
 801d556:	4608      	mov	r0, r1
 801d558:	4611      	mov	r1, r2
 801d55a:	2200      	movs	r2, #0
 801d55c:	602a      	str	r2, [r5, #0]
 801d55e:	461a      	mov	r2, r3
 801d560:	f7e4 fc8a 	bl	8001e78 <_read>
 801d564:	1c43      	adds	r3, r0, #1
 801d566:	d102      	bne.n	801d56e <_read_r+0x1e>
 801d568:	682b      	ldr	r3, [r5, #0]
 801d56a:	b103      	cbz	r3, 801d56e <_read_r+0x1e>
 801d56c:	6023      	str	r3, [r4, #0]
 801d56e:	bd38      	pop	{r3, r4, r5, pc}
 801d570:	20012464 	.word	0x20012464

0801d574 <_kill_r>:
 801d574:	b538      	push	{r3, r4, r5, lr}
 801d576:	4d07      	ldr	r5, [pc, #28]	@ (801d594 <_kill_r+0x20>)
 801d578:	2300      	movs	r3, #0
 801d57a:	4604      	mov	r4, r0
 801d57c:	4608      	mov	r0, r1
 801d57e:	4611      	mov	r1, r2
 801d580:	602b      	str	r3, [r5, #0]
 801d582:	f7e4 fc6b 	bl	8001e5c <_kill>
 801d586:	1c43      	adds	r3, r0, #1
 801d588:	d102      	bne.n	801d590 <_kill_r+0x1c>
 801d58a:	682b      	ldr	r3, [r5, #0]
 801d58c:	b103      	cbz	r3, 801d590 <_kill_r+0x1c>
 801d58e:	6023      	str	r3, [r4, #0]
 801d590:	bd38      	pop	{r3, r4, r5, pc}
 801d592:	bf00      	nop
 801d594:	20012464 	.word	0x20012464

0801d598 <_getpid_r>:
 801d598:	f7e4 bc5e 	b.w	8001e58 <_getpid>

0801d59c <_sbrk_r>:
 801d59c:	b538      	push	{r3, r4, r5, lr}
 801d59e:	4d06      	ldr	r5, [pc, #24]	@ (801d5b8 <_sbrk_r+0x1c>)
 801d5a0:	2300      	movs	r3, #0
 801d5a2:	4604      	mov	r4, r0
 801d5a4:	4608      	mov	r0, r1
 801d5a6:	602b      	str	r3, [r5, #0]
 801d5a8:	f7e4 fc8e 	bl	8001ec8 <_sbrk>
 801d5ac:	1c43      	adds	r3, r0, #1
 801d5ae:	d102      	bne.n	801d5b6 <_sbrk_r+0x1a>
 801d5b0:	682b      	ldr	r3, [r5, #0]
 801d5b2:	b103      	cbz	r3, 801d5b6 <_sbrk_r+0x1a>
 801d5b4:	6023      	str	r3, [r4, #0]
 801d5b6:	bd38      	pop	{r3, r4, r5, pc}
 801d5b8:	20012464 	.word	0x20012464

0801d5bc <_write_r>:
 801d5bc:	b538      	push	{r3, r4, r5, lr}
 801d5be:	4d07      	ldr	r5, [pc, #28]	@ (801d5dc <_write_r+0x20>)
 801d5c0:	4604      	mov	r4, r0
 801d5c2:	4608      	mov	r0, r1
 801d5c4:	4611      	mov	r1, r2
 801d5c6:	2200      	movs	r2, #0
 801d5c8:	602a      	str	r2, [r5, #0]
 801d5ca:	461a      	mov	r2, r3
 801d5cc:	f7e4 fc62 	bl	8001e94 <_write>
 801d5d0:	1c43      	adds	r3, r0, #1
 801d5d2:	d102      	bne.n	801d5da <_write_r+0x1e>
 801d5d4:	682b      	ldr	r3, [r5, #0]
 801d5d6:	b103      	cbz	r3, 801d5da <_write_r+0x1e>
 801d5d8:	6023      	str	r3, [r4, #0]
 801d5da:	bd38      	pop	{r3, r4, r5, pc}
 801d5dc:	20012464 	.word	0x20012464

0801d5e0 <__errno>:
 801d5e0:	4b01      	ldr	r3, [pc, #4]	@ (801d5e8 <__errno+0x8>)
 801d5e2:	6818      	ldr	r0, [r3, #0]
 801d5e4:	4770      	bx	lr
 801d5e6:	bf00      	nop
 801d5e8:	20000110 	.word	0x20000110

0801d5ec <__libc_init_array>:
 801d5ec:	b570      	push	{r4, r5, r6, lr}
 801d5ee:	4d0d      	ldr	r5, [pc, #52]	@ (801d624 <__libc_init_array+0x38>)
 801d5f0:	4c0d      	ldr	r4, [pc, #52]	@ (801d628 <__libc_init_array+0x3c>)
 801d5f2:	1b64      	subs	r4, r4, r5
 801d5f4:	10a4      	asrs	r4, r4, #2
 801d5f6:	2600      	movs	r6, #0
 801d5f8:	42a6      	cmp	r6, r4
 801d5fa:	d109      	bne.n	801d610 <__libc_init_array+0x24>
 801d5fc:	4d0b      	ldr	r5, [pc, #44]	@ (801d62c <__libc_init_array+0x40>)
 801d5fe:	4c0c      	ldr	r4, [pc, #48]	@ (801d630 <__libc_init_array+0x44>)
 801d600:	f000 ff0c 	bl	801e41c <_init>
 801d604:	1b64      	subs	r4, r4, r5
 801d606:	10a4      	asrs	r4, r4, #2
 801d608:	2600      	movs	r6, #0
 801d60a:	42a6      	cmp	r6, r4
 801d60c:	d105      	bne.n	801d61a <__libc_init_array+0x2e>
 801d60e:	bd70      	pop	{r4, r5, r6, pc}
 801d610:	f855 3b04 	ldr.w	r3, [r5], #4
 801d614:	4798      	blx	r3
 801d616:	3601      	adds	r6, #1
 801d618:	e7ee      	b.n	801d5f8 <__libc_init_array+0xc>
 801d61a:	f855 3b04 	ldr.w	r3, [r5], #4
 801d61e:	4798      	blx	r3
 801d620:	3601      	adds	r6, #1
 801d622:	e7f2      	b.n	801d60a <__libc_init_array+0x1e>
 801d624:	08072018 	.word	0x08072018
 801d628:	08072018 	.word	0x08072018
 801d62c:	08072018 	.word	0x08072018
 801d630:	0807202c 	.word	0x0807202c

0801d634 <__retarget_lock_init_recursive>:
 801d634:	4770      	bx	lr

0801d636 <__retarget_lock_acquire_recursive>:
 801d636:	4770      	bx	lr

0801d638 <__retarget_lock_release_recursive>:
 801d638:	4770      	bx	lr

0801d63a <memcpy>:
 801d63a:	440a      	add	r2, r1
 801d63c:	4291      	cmp	r1, r2
 801d63e:	f100 33ff 	add.w	r3, r0, #4294967295
 801d642:	d100      	bne.n	801d646 <memcpy+0xc>
 801d644:	4770      	bx	lr
 801d646:	b510      	push	{r4, lr}
 801d648:	f811 4b01 	ldrb.w	r4, [r1], #1
 801d64c:	f803 4f01 	strb.w	r4, [r3, #1]!
 801d650:	4291      	cmp	r1, r2
 801d652:	d1f9      	bne.n	801d648 <memcpy+0xe>
 801d654:	bd10      	pop	{r4, pc}
	...

0801d658 <__register_exitproc>:
 801d658:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801d65c:	4d27      	ldr	r5, [pc, #156]	@ (801d6fc <__register_exitproc+0xa4>)
 801d65e:	4607      	mov	r7, r0
 801d660:	6828      	ldr	r0, [r5, #0]
 801d662:	4691      	mov	r9, r2
 801d664:	460e      	mov	r6, r1
 801d666:	4698      	mov	r8, r3
 801d668:	f7ff ffe5 	bl	801d636 <__retarget_lock_acquire_recursive>
 801d66c:	4a24      	ldr	r2, [pc, #144]	@ (801d700 <__register_exitproc+0xa8>)
 801d66e:	6814      	ldr	r4, [r2, #0]
 801d670:	b93c      	cbnz	r4, 801d682 <__register_exitproc+0x2a>
 801d672:	4b24      	ldr	r3, [pc, #144]	@ (801d704 <__register_exitproc+0xac>)
 801d674:	6013      	str	r3, [r2, #0]
 801d676:	4a24      	ldr	r2, [pc, #144]	@ (801d708 <__register_exitproc+0xb0>)
 801d678:	b112      	cbz	r2, 801d680 <__register_exitproc+0x28>
 801d67a:	6812      	ldr	r2, [r2, #0]
 801d67c:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 801d680:	4c20      	ldr	r4, [pc, #128]	@ (801d704 <__register_exitproc+0xac>)
 801d682:	6863      	ldr	r3, [r4, #4]
 801d684:	2b1f      	cmp	r3, #31
 801d686:	dd06      	ble.n	801d696 <__register_exitproc+0x3e>
 801d688:	6828      	ldr	r0, [r5, #0]
 801d68a:	f7ff ffd5 	bl	801d638 <__retarget_lock_release_recursive>
 801d68e:	f04f 30ff 	mov.w	r0, #4294967295
 801d692:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801d696:	b32f      	cbz	r7, 801d6e4 <__register_exitproc+0x8c>
 801d698:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 801d69c:	b968      	cbnz	r0, 801d6ba <__register_exitproc+0x62>
 801d69e:	4b1b      	ldr	r3, [pc, #108]	@ (801d70c <__register_exitproc+0xb4>)
 801d6a0:	2b00      	cmp	r3, #0
 801d6a2:	d0f1      	beq.n	801d688 <__register_exitproc+0x30>
 801d6a4:	f44f 7084 	mov.w	r0, #264	@ 0x108
 801d6a8:	f7ff fc9e 	bl	801cfe8 <malloc>
 801d6ac:	2800      	cmp	r0, #0
 801d6ae:	d0eb      	beq.n	801d688 <__register_exitproc+0x30>
 801d6b0:	2300      	movs	r3, #0
 801d6b2:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 801d6b6:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 801d6ba:	6863      	ldr	r3, [r4, #4]
 801d6bc:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801d6c0:	2201      	movs	r2, #1
 801d6c2:	409a      	lsls	r2, r3
 801d6c4:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801d6c8:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 801d6cc:	4313      	orrs	r3, r2
 801d6ce:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 801d6d2:	2f02      	cmp	r7, #2
 801d6d4:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 801d6d8:	bf02      	ittt	eq
 801d6da:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 801d6de:	4313      	orreq	r3, r2
 801d6e0:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 801d6e4:	6863      	ldr	r3, [r4, #4]
 801d6e6:	6828      	ldr	r0, [r5, #0]
 801d6e8:	1c5a      	adds	r2, r3, #1
 801d6ea:	3302      	adds	r3, #2
 801d6ec:	6062      	str	r2, [r4, #4]
 801d6ee:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 801d6f2:	f7ff ffa1 	bl	801d638 <__retarget_lock_release_recursive>
 801d6f6:	2000      	movs	r0, #0
 801d6f8:	e7cb      	b.n	801d692 <__register_exitproc+0x3a>
 801d6fa:	bf00      	nop
 801d6fc:	20000160 	.word	0x20000160
 801d700:	200124f8 	.word	0x200124f8
 801d704:	2001246c 	.word	0x2001246c
 801d708:	080200e0 	.word	0x080200e0
 801d70c:	0801cfe9 	.word	0x0801cfe9

0801d710 <_free_r>:
 801d710:	b538      	push	{r3, r4, r5, lr}
 801d712:	4605      	mov	r5, r0
 801d714:	2900      	cmp	r1, #0
 801d716:	d041      	beq.n	801d79c <_free_r+0x8c>
 801d718:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801d71c:	1f0c      	subs	r4, r1, #4
 801d71e:	2b00      	cmp	r3, #0
 801d720:	bfb8      	it	lt
 801d722:	18e4      	addlt	r4, r4, r3
 801d724:	f7ff fd12 	bl	801d14c <__malloc_lock>
 801d728:	4a1d      	ldr	r2, [pc, #116]	@ (801d7a0 <_free_r+0x90>)
 801d72a:	6813      	ldr	r3, [r2, #0]
 801d72c:	b933      	cbnz	r3, 801d73c <_free_r+0x2c>
 801d72e:	6063      	str	r3, [r4, #4]
 801d730:	6014      	str	r4, [r2, #0]
 801d732:	4628      	mov	r0, r5
 801d734:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801d738:	f7ff bd0e 	b.w	801d158 <__malloc_unlock>
 801d73c:	42a3      	cmp	r3, r4
 801d73e:	d908      	bls.n	801d752 <_free_r+0x42>
 801d740:	6820      	ldr	r0, [r4, #0]
 801d742:	1821      	adds	r1, r4, r0
 801d744:	428b      	cmp	r3, r1
 801d746:	bf01      	itttt	eq
 801d748:	6819      	ldreq	r1, [r3, #0]
 801d74a:	685b      	ldreq	r3, [r3, #4]
 801d74c:	1809      	addeq	r1, r1, r0
 801d74e:	6021      	streq	r1, [r4, #0]
 801d750:	e7ed      	b.n	801d72e <_free_r+0x1e>
 801d752:	461a      	mov	r2, r3
 801d754:	685b      	ldr	r3, [r3, #4]
 801d756:	b10b      	cbz	r3, 801d75c <_free_r+0x4c>
 801d758:	42a3      	cmp	r3, r4
 801d75a:	d9fa      	bls.n	801d752 <_free_r+0x42>
 801d75c:	6811      	ldr	r1, [r2, #0]
 801d75e:	1850      	adds	r0, r2, r1
 801d760:	42a0      	cmp	r0, r4
 801d762:	d10b      	bne.n	801d77c <_free_r+0x6c>
 801d764:	6820      	ldr	r0, [r4, #0]
 801d766:	4401      	add	r1, r0
 801d768:	1850      	adds	r0, r2, r1
 801d76a:	4283      	cmp	r3, r0
 801d76c:	6011      	str	r1, [r2, #0]
 801d76e:	d1e0      	bne.n	801d732 <_free_r+0x22>
 801d770:	6818      	ldr	r0, [r3, #0]
 801d772:	685b      	ldr	r3, [r3, #4]
 801d774:	6053      	str	r3, [r2, #4]
 801d776:	4408      	add	r0, r1
 801d778:	6010      	str	r0, [r2, #0]
 801d77a:	e7da      	b.n	801d732 <_free_r+0x22>
 801d77c:	d902      	bls.n	801d784 <_free_r+0x74>
 801d77e:	230c      	movs	r3, #12
 801d780:	602b      	str	r3, [r5, #0]
 801d782:	e7d6      	b.n	801d732 <_free_r+0x22>
 801d784:	6820      	ldr	r0, [r4, #0]
 801d786:	1821      	adds	r1, r4, r0
 801d788:	428b      	cmp	r3, r1
 801d78a:	bf04      	itt	eq
 801d78c:	6819      	ldreq	r1, [r3, #0]
 801d78e:	685b      	ldreq	r3, [r3, #4]
 801d790:	6063      	str	r3, [r4, #4]
 801d792:	bf04      	itt	eq
 801d794:	1809      	addeq	r1, r1, r0
 801d796:	6021      	streq	r1, [r4, #0]
 801d798:	6054      	str	r4, [r2, #4]
 801d79a:	e7ca      	b.n	801d732 <_free_r+0x22>
 801d79c:	bd38      	pop	{r3, r4, r5, pc}
 801d79e:	bf00      	nop
 801d7a0:	20012324 	.word	0x20012324

0801d7a4 <__ssputs_r>:
 801d7a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d7a8:	688e      	ldr	r6, [r1, #8]
 801d7aa:	461f      	mov	r7, r3
 801d7ac:	42be      	cmp	r6, r7
 801d7ae:	680b      	ldr	r3, [r1, #0]
 801d7b0:	4682      	mov	sl, r0
 801d7b2:	460c      	mov	r4, r1
 801d7b4:	4690      	mov	r8, r2
 801d7b6:	d82d      	bhi.n	801d814 <__ssputs_r+0x70>
 801d7b8:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 801d7bc:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 801d7c0:	d026      	beq.n	801d810 <__ssputs_r+0x6c>
 801d7c2:	6965      	ldr	r5, [r4, #20]
 801d7c4:	6909      	ldr	r1, [r1, #16]
 801d7c6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801d7ca:	eba3 0901 	sub.w	r9, r3, r1
 801d7ce:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 801d7d2:	1c7b      	adds	r3, r7, #1
 801d7d4:	444b      	add	r3, r9
 801d7d6:	106d      	asrs	r5, r5, #1
 801d7d8:	429d      	cmp	r5, r3
 801d7da:	bf38      	it	cc
 801d7dc:	461d      	movcc	r5, r3
 801d7de:	0553      	lsls	r3, r2, #21
 801d7e0:	d527      	bpl.n	801d832 <__ssputs_r+0x8e>
 801d7e2:	4629      	mov	r1, r5
 801d7e4:	f7ff fc32 	bl	801d04c <_malloc_r>
 801d7e8:	4606      	mov	r6, r0
 801d7ea:	b360      	cbz	r0, 801d846 <__ssputs_r+0xa2>
 801d7ec:	6921      	ldr	r1, [r4, #16]
 801d7ee:	464a      	mov	r2, r9
 801d7f0:	f7ff ff23 	bl	801d63a <memcpy>
 801d7f4:	89a3      	ldrh	r3, [r4, #12]
 801d7f6:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 801d7fa:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 801d7fe:	81a3      	strh	r3, [r4, #12]
 801d800:	6126      	str	r6, [r4, #16]
 801d802:	6165      	str	r5, [r4, #20]
 801d804:	444e      	add	r6, r9
 801d806:	eba5 0509 	sub.w	r5, r5, r9
 801d80a:	6026      	str	r6, [r4, #0]
 801d80c:	60a5      	str	r5, [r4, #8]
 801d80e:	463e      	mov	r6, r7
 801d810:	42be      	cmp	r6, r7
 801d812:	d900      	bls.n	801d816 <__ssputs_r+0x72>
 801d814:	463e      	mov	r6, r7
 801d816:	6820      	ldr	r0, [r4, #0]
 801d818:	4632      	mov	r2, r6
 801d81a:	4641      	mov	r1, r8
 801d81c:	f000 fd2a 	bl	801e274 <memmove>
 801d820:	68a3      	ldr	r3, [r4, #8]
 801d822:	1b9b      	subs	r3, r3, r6
 801d824:	60a3      	str	r3, [r4, #8]
 801d826:	6823      	ldr	r3, [r4, #0]
 801d828:	4433      	add	r3, r6
 801d82a:	6023      	str	r3, [r4, #0]
 801d82c:	2000      	movs	r0, #0
 801d82e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d832:	462a      	mov	r2, r5
 801d834:	f000 fd38 	bl	801e2a8 <_realloc_r>
 801d838:	4606      	mov	r6, r0
 801d83a:	2800      	cmp	r0, #0
 801d83c:	d1e0      	bne.n	801d800 <__ssputs_r+0x5c>
 801d83e:	6921      	ldr	r1, [r4, #16]
 801d840:	4650      	mov	r0, sl
 801d842:	f7ff ff65 	bl	801d710 <_free_r>
 801d846:	230c      	movs	r3, #12
 801d848:	f8ca 3000 	str.w	r3, [sl]
 801d84c:	89a3      	ldrh	r3, [r4, #12]
 801d84e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801d852:	81a3      	strh	r3, [r4, #12]
 801d854:	f04f 30ff 	mov.w	r0, #4294967295
 801d858:	e7e9      	b.n	801d82e <__ssputs_r+0x8a>
	...

0801d85c <_svfiprintf_r>:
 801d85c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d860:	4698      	mov	r8, r3
 801d862:	898b      	ldrh	r3, [r1, #12]
 801d864:	061b      	lsls	r3, r3, #24
 801d866:	b09d      	sub	sp, #116	@ 0x74
 801d868:	4607      	mov	r7, r0
 801d86a:	460d      	mov	r5, r1
 801d86c:	4614      	mov	r4, r2
 801d86e:	d510      	bpl.n	801d892 <_svfiprintf_r+0x36>
 801d870:	690b      	ldr	r3, [r1, #16]
 801d872:	b973      	cbnz	r3, 801d892 <_svfiprintf_r+0x36>
 801d874:	2140      	movs	r1, #64	@ 0x40
 801d876:	f7ff fbe9 	bl	801d04c <_malloc_r>
 801d87a:	6028      	str	r0, [r5, #0]
 801d87c:	6128      	str	r0, [r5, #16]
 801d87e:	b930      	cbnz	r0, 801d88e <_svfiprintf_r+0x32>
 801d880:	230c      	movs	r3, #12
 801d882:	603b      	str	r3, [r7, #0]
 801d884:	f04f 30ff 	mov.w	r0, #4294967295
 801d888:	b01d      	add	sp, #116	@ 0x74
 801d88a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d88e:	2340      	movs	r3, #64	@ 0x40
 801d890:	616b      	str	r3, [r5, #20]
 801d892:	2300      	movs	r3, #0
 801d894:	9309      	str	r3, [sp, #36]	@ 0x24
 801d896:	2320      	movs	r3, #32
 801d898:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 801d89c:	f8cd 800c 	str.w	r8, [sp, #12]
 801d8a0:	2330      	movs	r3, #48	@ 0x30
 801d8a2:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 801da40 <_svfiprintf_r+0x1e4>
 801d8a6:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 801d8aa:	f04f 0901 	mov.w	r9, #1
 801d8ae:	4623      	mov	r3, r4
 801d8b0:	469a      	mov	sl, r3
 801d8b2:	f813 2b01 	ldrb.w	r2, [r3], #1
 801d8b6:	b10a      	cbz	r2, 801d8bc <_svfiprintf_r+0x60>
 801d8b8:	2a25      	cmp	r2, #37	@ 0x25
 801d8ba:	d1f9      	bne.n	801d8b0 <_svfiprintf_r+0x54>
 801d8bc:	ebba 0b04 	subs.w	fp, sl, r4
 801d8c0:	d00b      	beq.n	801d8da <_svfiprintf_r+0x7e>
 801d8c2:	465b      	mov	r3, fp
 801d8c4:	4622      	mov	r2, r4
 801d8c6:	4629      	mov	r1, r5
 801d8c8:	4638      	mov	r0, r7
 801d8ca:	f7ff ff6b 	bl	801d7a4 <__ssputs_r>
 801d8ce:	3001      	adds	r0, #1
 801d8d0:	f000 80a7 	beq.w	801da22 <_svfiprintf_r+0x1c6>
 801d8d4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801d8d6:	445a      	add	r2, fp
 801d8d8:	9209      	str	r2, [sp, #36]	@ 0x24
 801d8da:	f89a 3000 	ldrb.w	r3, [sl]
 801d8de:	2b00      	cmp	r3, #0
 801d8e0:	f000 809f 	beq.w	801da22 <_svfiprintf_r+0x1c6>
 801d8e4:	2300      	movs	r3, #0
 801d8e6:	f04f 32ff 	mov.w	r2, #4294967295
 801d8ea:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801d8ee:	f10a 0a01 	add.w	sl, sl, #1
 801d8f2:	9304      	str	r3, [sp, #16]
 801d8f4:	9307      	str	r3, [sp, #28]
 801d8f6:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 801d8fa:	931a      	str	r3, [sp, #104]	@ 0x68
 801d8fc:	4654      	mov	r4, sl
 801d8fe:	2205      	movs	r2, #5
 801d900:	f814 1b01 	ldrb.w	r1, [r4], #1
 801d904:	484e      	ldr	r0, [pc, #312]	@ (801da40 <_svfiprintf_r+0x1e4>)
 801d906:	f7e2 fc7b 	bl	8000200 <memchr>
 801d90a:	9a04      	ldr	r2, [sp, #16]
 801d90c:	b9d8      	cbnz	r0, 801d946 <_svfiprintf_r+0xea>
 801d90e:	06d0      	lsls	r0, r2, #27
 801d910:	bf44      	itt	mi
 801d912:	2320      	movmi	r3, #32
 801d914:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 801d918:	0711      	lsls	r1, r2, #28
 801d91a:	bf44      	itt	mi
 801d91c:	232b      	movmi	r3, #43	@ 0x2b
 801d91e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 801d922:	f89a 3000 	ldrb.w	r3, [sl]
 801d926:	2b2a      	cmp	r3, #42	@ 0x2a
 801d928:	d015      	beq.n	801d956 <_svfiprintf_r+0xfa>
 801d92a:	9a07      	ldr	r2, [sp, #28]
 801d92c:	4654      	mov	r4, sl
 801d92e:	2000      	movs	r0, #0
 801d930:	f04f 0c0a 	mov.w	ip, #10
 801d934:	4621      	mov	r1, r4
 801d936:	f811 3b01 	ldrb.w	r3, [r1], #1
 801d93a:	3b30      	subs	r3, #48	@ 0x30
 801d93c:	2b09      	cmp	r3, #9
 801d93e:	d94b      	bls.n	801d9d8 <_svfiprintf_r+0x17c>
 801d940:	b1b0      	cbz	r0, 801d970 <_svfiprintf_r+0x114>
 801d942:	9207      	str	r2, [sp, #28]
 801d944:	e014      	b.n	801d970 <_svfiprintf_r+0x114>
 801d946:	eba0 0308 	sub.w	r3, r0, r8
 801d94a:	fa09 f303 	lsl.w	r3, r9, r3
 801d94e:	4313      	orrs	r3, r2
 801d950:	9304      	str	r3, [sp, #16]
 801d952:	46a2      	mov	sl, r4
 801d954:	e7d2      	b.n	801d8fc <_svfiprintf_r+0xa0>
 801d956:	9b03      	ldr	r3, [sp, #12]
 801d958:	1d19      	adds	r1, r3, #4
 801d95a:	681b      	ldr	r3, [r3, #0]
 801d95c:	9103      	str	r1, [sp, #12]
 801d95e:	2b00      	cmp	r3, #0
 801d960:	bfbb      	ittet	lt
 801d962:	425b      	neglt	r3, r3
 801d964:	f042 0202 	orrlt.w	r2, r2, #2
 801d968:	9307      	strge	r3, [sp, #28]
 801d96a:	9307      	strlt	r3, [sp, #28]
 801d96c:	bfb8      	it	lt
 801d96e:	9204      	strlt	r2, [sp, #16]
 801d970:	7823      	ldrb	r3, [r4, #0]
 801d972:	2b2e      	cmp	r3, #46	@ 0x2e
 801d974:	d10a      	bne.n	801d98c <_svfiprintf_r+0x130>
 801d976:	7863      	ldrb	r3, [r4, #1]
 801d978:	2b2a      	cmp	r3, #42	@ 0x2a
 801d97a:	d132      	bne.n	801d9e2 <_svfiprintf_r+0x186>
 801d97c:	9b03      	ldr	r3, [sp, #12]
 801d97e:	1d1a      	adds	r2, r3, #4
 801d980:	681b      	ldr	r3, [r3, #0]
 801d982:	9203      	str	r2, [sp, #12]
 801d984:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 801d988:	3402      	adds	r4, #2
 801d98a:	9305      	str	r3, [sp, #20]
 801d98c:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 801da50 <_svfiprintf_r+0x1f4>
 801d990:	7821      	ldrb	r1, [r4, #0]
 801d992:	2203      	movs	r2, #3
 801d994:	4650      	mov	r0, sl
 801d996:	f7e2 fc33 	bl	8000200 <memchr>
 801d99a:	b138      	cbz	r0, 801d9ac <_svfiprintf_r+0x150>
 801d99c:	9b04      	ldr	r3, [sp, #16]
 801d99e:	eba0 000a 	sub.w	r0, r0, sl
 801d9a2:	2240      	movs	r2, #64	@ 0x40
 801d9a4:	4082      	lsls	r2, r0
 801d9a6:	4313      	orrs	r3, r2
 801d9a8:	3401      	adds	r4, #1
 801d9aa:	9304      	str	r3, [sp, #16]
 801d9ac:	f814 1b01 	ldrb.w	r1, [r4], #1
 801d9b0:	4824      	ldr	r0, [pc, #144]	@ (801da44 <_svfiprintf_r+0x1e8>)
 801d9b2:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 801d9b6:	2206      	movs	r2, #6
 801d9b8:	f7e2 fc22 	bl	8000200 <memchr>
 801d9bc:	2800      	cmp	r0, #0
 801d9be:	d036      	beq.n	801da2e <_svfiprintf_r+0x1d2>
 801d9c0:	4b21      	ldr	r3, [pc, #132]	@ (801da48 <_svfiprintf_r+0x1ec>)
 801d9c2:	bb1b      	cbnz	r3, 801da0c <_svfiprintf_r+0x1b0>
 801d9c4:	9b03      	ldr	r3, [sp, #12]
 801d9c6:	3307      	adds	r3, #7
 801d9c8:	f023 0307 	bic.w	r3, r3, #7
 801d9cc:	3308      	adds	r3, #8
 801d9ce:	9303      	str	r3, [sp, #12]
 801d9d0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d9d2:	4433      	add	r3, r6
 801d9d4:	9309      	str	r3, [sp, #36]	@ 0x24
 801d9d6:	e76a      	b.n	801d8ae <_svfiprintf_r+0x52>
 801d9d8:	fb0c 3202 	mla	r2, ip, r2, r3
 801d9dc:	460c      	mov	r4, r1
 801d9de:	2001      	movs	r0, #1
 801d9e0:	e7a8      	b.n	801d934 <_svfiprintf_r+0xd8>
 801d9e2:	2300      	movs	r3, #0
 801d9e4:	3401      	adds	r4, #1
 801d9e6:	9305      	str	r3, [sp, #20]
 801d9e8:	4619      	mov	r1, r3
 801d9ea:	f04f 0c0a 	mov.w	ip, #10
 801d9ee:	4620      	mov	r0, r4
 801d9f0:	f810 2b01 	ldrb.w	r2, [r0], #1
 801d9f4:	3a30      	subs	r2, #48	@ 0x30
 801d9f6:	2a09      	cmp	r2, #9
 801d9f8:	d903      	bls.n	801da02 <_svfiprintf_r+0x1a6>
 801d9fa:	2b00      	cmp	r3, #0
 801d9fc:	d0c6      	beq.n	801d98c <_svfiprintf_r+0x130>
 801d9fe:	9105      	str	r1, [sp, #20]
 801da00:	e7c4      	b.n	801d98c <_svfiprintf_r+0x130>
 801da02:	fb0c 2101 	mla	r1, ip, r1, r2
 801da06:	4604      	mov	r4, r0
 801da08:	2301      	movs	r3, #1
 801da0a:	e7f0      	b.n	801d9ee <_svfiprintf_r+0x192>
 801da0c:	ab03      	add	r3, sp, #12
 801da0e:	9300      	str	r3, [sp, #0]
 801da10:	462a      	mov	r2, r5
 801da12:	4b0e      	ldr	r3, [pc, #56]	@ (801da4c <_svfiprintf_r+0x1f0>)
 801da14:	a904      	add	r1, sp, #16
 801da16:	4638      	mov	r0, r7
 801da18:	f3af 8000 	nop.w
 801da1c:	1c42      	adds	r2, r0, #1
 801da1e:	4606      	mov	r6, r0
 801da20:	d1d6      	bne.n	801d9d0 <_svfiprintf_r+0x174>
 801da22:	89ab      	ldrh	r3, [r5, #12]
 801da24:	065b      	lsls	r3, r3, #25
 801da26:	f53f af2d 	bmi.w	801d884 <_svfiprintf_r+0x28>
 801da2a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801da2c:	e72c      	b.n	801d888 <_svfiprintf_r+0x2c>
 801da2e:	ab03      	add	r3, sp, #12
 801da30:	9300      	str	r3, [sp, #0]
 801da32:	462a      	mov	r2, r5
 801da34:	4b05      	ldr	r3, [pc, #20]	@ (801da4c <_svfiprintf_r+0x1f0>)
 801da36:	a904      	add	r1, sp, #16
 801da38:	4638      	mov	r0, r7
 801da3a:	f000 f9bb 	bl	801ddb4 <_printf_i>
 801da3e:	e7ed      	b.n	801da1c <_svfiprintf_r+0x1c0>
 801da40:	080200e4 	.word	0x080200e4
 801da44:	080200ee 	.word	0x080200ee
 801da48:	00000000 	.word	0x00000000
 801da4c:	0801d7a5 	.word	0x0801d7a5
 801da50:	080200ea 	.word	0x080200ea

0801da54 <__sfputc_r>:
 801da54:	6893      	ldr	r3, [r2, #8]
 801da56:	3b01      	subs	r3, #1
 801da58:	2b00      	cmp	r3, #0
 801da5a:	b410      	push	{r4}
 801da5c:	6093      	str	r3, [r2, #8]
 801da5e:	da08      	bge.n	801da72 <__sfputc_r+0x1e>
 801da60:	6994      	ldr	r4, [r2, #24]
 801da62:	42a3      	cmp	r3, r4
 801da64:	db01      	blt.n	801da6a <__sfputc_r+0x16>
 801da66:	290a      	cmp	r1, #10
 801da68:	d103      	bne.n	801da72 <__sfputc_r+0x1e>
 801da6a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801da6e:	f000 bb6d 	b.w	801e14c <__swbuf_r>
 801da72:	6813      	ldr	r3, [r2, #0]
 801da74:	1c58      	adds	r0, r3, #1
 801da76:	6010      	str	r0, [r2, #0]
 801da78:	7019      	strb	r1, [r3, #0]
 801da7a:	4608      	mov	r0, r1
 801da7c:	f85d 4b04 	ldr.w	r4, [sp], #4
 801da80:	4770      	bx	lr

0801da82 <__sfputs_r>:
 801da82:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801da84:	4606      	mov	r6, r0
 801da86:	460f      	mov	r7, r1
 801da88:	4614      	mov	r4, r2
 801da8a:	18d5      	adds	r5, r2, r3
 801da8c:	42ac      	cmp	r4, r5
 801da8e:	d101      	bne.n	801da94 <__sfputs_r+0x12>
 801da90:	2000      	movs	r0, #0
 801da92:	e007      	b.n	801daa4 <__sfputs_r+0x22>
 801da94:	f814 1b01 	ldrb.w	r1, [r4], #1
 801da98:	463a      	mov	r2, r7
 801da9a:	4630      	mov	r0, r6
 801da9c:	f7ff ffda 	bl	801da54 <__sfputc_r>
 801daa0:	1c43      	adds	r3, r0, #1
 801daa2:	d1f3      	bne.n	801da8c <__sfputs_r+0xa>
 801daa4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801daa8 <_vfiprintf_r>:
 801daa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801daac:	460d      	mov	r5, r1
 801daae:	b09d      	sub	sp, #116	@ 0x74
 801dab0:	4614      	mov	r4, r2
 801dab2:	4698      	mov	r8, r3
 801dab4:	4606      	mov	r6, r0
 801dab6:	b118      	cbz	r0, 801dac0 <_vfiprintf_r+0x18>
 801dab8:	6a03      	ldr	r3, [r0, #32]
 801daba:	b90b      	cbnz	r3, 801dac0 <_vfiprintf_r+0x18>
 801dabc:	f7ff fbec 	bl	801d298 <__sinit>
 801dac0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 801dac2:	07d9      	lsls	r1, r3, #31
 801dac4:	d405      	bmi.n	801dad2 <_vfiprintf_r+0x2a>
 801dac6:	89ab      	ldrh	r3, [r5, #12]
 801dac8:	059a      	lsls	r2, r3, #22
 801daca:	d402      	bmi.n	801dad2 <_vfiprintf_r+0x2a>
 801dacc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 801dace:	f7ff fdb2 	bl	801d636 <__retarget_lock_acquire_recursive>
 801dad2:	89ab      	ldrh	r3, [r5, #12]
 801dad4:	071b      	lsls	r3, r3, #28
 801dad6:	d501      	bpl.n	801dadc <_vfiprintf_r+0x34>
 801dad8:	692b      	ldr	r3, [r5, #16]
 801dada:	b99b      	cbnz	r3, 801db04 <_vfiprintf_r+0x5c>
 801dadc:	4629      	mov	r1, r5
 801dade:	4630      	mov	r0, r6
 801dae0:	f000 fb72 	bl	801e1c8 <__swsetup_r>
 801dae4:	b170      	cbz	r0, 801db04 <_vfiprintf_r+0x5c>
 801dae6:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 801dae8:	07dc      	lsls	r4, r3, #31
 801daea:	d504      	bpl.n	801daf6 <_vfiprintf_r+0x4e>
 801daec:	f04f 30ff 	mov.w	r0, #4294967295
 801daf0:	b01d      	add	sp, #116	@ 0x74
 801daf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801daf6:	89ab      	ldrh	r3, [r5, #12]
 801daf8:	0598      	lsls	r0, r3, #22
 801dafa:	d4f7      	bmi.n	801daec <_vfiprintf_r+0x44>
 801dafc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 801dafe:	f7ff fd9b 	bl	801d638 <__retarget_lock_release_recursive>
 801db02:	e7f3      	b.n	801daec <_vfiprintf_r+0x44>
 801db04:	2300      	movs	r3, #0
 801db06:	9309      	str	r3, [sp, #36]	@ 0x24
 801db08:	2320      	movs	r3, #32
 801db0a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 801db0e:	f8cd 800c 	str.w	r8, [sp, #12]
 801db12:	2330      	movs	r3, #48	@ 0x30
 801db14:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 801dcc4 <_vfiprintf_r+0x21c>
 801db18:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 801db1c:	f04f 0901 	mov.w	r9, #1
 801db20:	4623      	mov	r3, r4
 801db22:	469a      	mov	sl, r3
 801db24:	f813 2b01 	ldrb.w	r2, [r3], #1
 801db28:	b10a      	cbz	r2, 801db2e <_vfiprintf_r+0x86>
 801db2a:	2a25      	cmp	r2, #37	@ 0x25
 801db2c:	d1f9      	bne.n	801db22 <_vfiprintf_r+0x7a>
 801db2e:	ebba 0b04 	subs.w	fp, sl, r4
 801db32:	d00b      	beq.n	801db4c <_vfiprintf_r+0xa4>
 801db34:	465b      	mov	r3, fp
 801db36:	4622      	mov	r2, r4
 801db38:	4629      	mov	r1, r5
 801db3a:	4630      	mov	r0, r6
 801db3c:	f7ff ffa1 	bl	801da82 <__sfputs_r>
 801db40:	3001      	adds	r0, #1
 801db42:	f000 80a7 	beq.w	801dc94 <_vfiprintf_r+0x1ec>
 801db46:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801db48:	445a      	add	r2, fp
 801db4a:	9209      	str	r2, [sp, #36]	@ 0x24
 801db4c:	f89a 3000 	ldrb.w	r3, [sl]
 801db50:	2b00      	cmp	r3, #0
 801db52:	f000 809f 	beq.w	801dc94 <_vfiprintf_r+0x1ec>
 801db56:	2300      	movs	r3, #0
 801db58:	f04f 32ff 	mov.w	r2, #4294967295
 801db5c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801db60:	f10a 0a01 	add.w	sl, sl, #1
 801db64:	9304      	str	r3, [sp, #16]
 801db66:	9307      	str	r3, [sp, #28]
 801db68:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 801db6c:	931a      	str	r3, [sp, #104]	@ 0x68
 801db6e:	4654      	mov	r4, sl
 801db70:	2205      	movs	r2, #5
 801db72:	f814 1b01 	ldrb.w	r1, [r4], #1
 801db76:	4853      	ldr	r0, [pc, #332]	@ (801dcc4 <_vfiprintf_r+0x21c>)
 801db78:	f7e2 fb42 	bl	8000200 <memchr>
 801db7c:	9a04      	ldr	r2, [sp, #16]
 801db7e:	b9d8      	cbnz	r0, 801dbb8 <_vfiprintf_r+0x110>
 801db80:	06d1      	lsls	r1, r2, #27
 801db82:	bf44      	itt	mi
 801db84:	2320      	movmi	r3, #32
 801db86:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 801db8a:	0713      	lsls	r3, r2, #28
 801db8c:	bf44      	itt	mi
 801db8e:	232b      	movmi	r3, #43	@ 0x2b
 801db90:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 801db94:	f89a 3000 	ldrb.w	r3, [sl]
 801db98:	2b2a      	cmp	r3, #42	@ 0x2a
 801db9a:	d015      	beq.n	801dbc8 <_vfiprintf_r+0x120>
 801db9c:	9a07      	ldr	r2, [sp, #28]
 801db9e:	4654      	mov	r4, sl
 801dba0:	2000      	movs	r0, #0
 801dba2:	f04f 0c0a 	mov.w	ip, #10
 801dba6:	4621      	mov	r1, r4
 801dba8:	f811 3b01 	ldrb.w	r3, [r1], #1
 801dbac:	3b30      	subs	r3, #48	@ 0x30
 801dbae:	2b09      	cmp	r3, #9
 801dbb0:	d94b      	bls.n	801dc4a <_vfiprintf_r+0x1a2>
 801dbb2:	b1b0      	cbz	r0, 801dbe2 <_vfiprintf_r+0x13a>
 801dbb4:	9207      	str	r2, [sp, #28]
 801dbb6:	e014      	b.n	801dbe2 <_vfiprintf_r+0x13a>
 801dbb8:	eba0 0308 	sub.w	r3, r0, r8
 801dbbc:	fa09 f303 	lsl.w	r3, r9, r3
 801dbc0:	4313      	orrs	r3, r2
 801dbc2:	9304      	str	r3, [sp, #16]
 801dbc4:	46a2      	mov	sl, r4
 801dbc6:	e7d2      	b.n	801db6e <_vfiprintf_r+0xc6>
 801dbc8:	9b03      	ldr	r3, [sp, #12]
 801dbca:	1d19      	adds	r1, r3, #4
 801dbcc:	681b      	ldr	r3, [r3, #0]
 801dbce:	9103      	str	r1, [sp, #12]
 801dbd0:	2b00      	cmp	r3, #0
 801dbd2:	bfbb      	ittet	lt
 801dbd4:	425b      	neglt	r3, r3
 801dbd6:	f042 0202 	orrlt.w	r2, r2, #2
 801dbda:	9307      	strge	r3, [sp, #28]
 801dbdc:	9307      	strlt	r3, [sp, #28]
 801dbde:	bfb8      	it	lt
 801dbe0:	9204      	strlt	r2, [sp, #16]
 801dbe2:	7823      	ldrb	r3, [r4, #0]
 801dbe4:	2b2e      	cmp	r3, #46	@ 0x2e
 801dbe6:	d10a      	bne.n	801dbfe <_vfiprintf_r+0x156>
 801dbe8:	7863      	ldrb	r3, [r4, #1]
 801dbea:	2b2a      	cmp	r3, #42	@ 0x2a
 801dbec:	d132      	bne.n	801dc54 <_vfiprintf_r+0x1ac>
 801dbee:	9b03      	ldr	r3, [sp, #12]
 801dbf0:	1d1a      	adds	r2, r3, #4
 801dbf2:	681b      	ldr	r3, [r3, #0]
 801dbf4:	9203      	str	r2, [sp, #12]
 801dbf6:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 801dbfa:	3402      	adds	r4, #2
 801dbfc:	9305      	str	r3, [sp, #20]
 801dbfe:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 801dcd4 <_vfiprintf_r+0x22c>
 801dc02:	7821      	ldrb	r1, [r4, #0]
 801dc04:	2203      	movs	r2, #3
 801dc06:	4650      	mov	r0, sl
 801dc08:	f7e2 fafa 	bl	8000200 <memchr>
 801dc0c:	b138      	cbz	r0, 801dc1e <_vfiprintf_r+0x176>
 801dc0e:	9b04      	ldr	r3, [sp, #16]
 801dc10:	eba0 000a 	sub.w	r0, r0, sl
 801dc14:	2240      	movs	r2, #64	@ 0x40
 801dc16:	4082      	lsls	r2, r0
 801dc18:	4313      	orrs	r3, r2
 801dc1a:	3401      	adds	r4, #1
 801dc1c:	9304      	str	r3, [sp, #16]
 801dc1e:	f814 1b01 	ldrb.w	r1, [r4], #1
 801dc22:	4829      	ldr	r0, [pc, #164]	@ (801dcc8 <_vfiprintf_r+0x220>)
 801dc24:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 801dc28:	2206      	movs	r2, #6
 801dc2a:	f7e2 fae9 	bl	8000200 <memchr>
 801dc2e:	2800      	cmp	r0, #0
 801dc30:	d03f      	beq.n	801dcb2 <_vfiprintf_r+0x20a>
 801dc32:	4b26      	ldr	r3, [pc, #152]	@ (801dccc <_vfiprintf_r+0x224>)
 801dc34:	bb1b      	cbnz	r3, 801dc7e <_vfiprintf_r+0x1d6>
 801dc36:	9b03      	ldr	r3, [sp, #12]
 801dc38:	3307      	adds	r3, #7
 801dc3a:	f023 0307 	bic.w	r3, r3, #7
 801dc3e:	3308      	adds	r3, #8
 801dc40:	9303      	str	r3, [sp, #12]
 801dc42:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801dc44:	443b      	add	r3, r7
 801dc46:	9309      	str	r3, [sp, #36]	@ 0x24
 801dc48:	e76a      	b.n	801db20 <_vfiprintf_r+0x78>
 801dc4a:	fb0c 3202 	mla	r2, ip, r2, r3
 801dc4e:	460c      	mov	r4, r1
 801dc50:	2001      	movs	r0, #1
 801dc52:	e7a8      	b.n	801dba6 <_vfiprintf_r+0xfe>
 801dc54:	2300      	movs	r3, #0
 801dc56:	3401      	adds	r4, #1
 801dc58:	9305      	str	r3, [sp, #20]
 801dc5a:	4619      	mov	r1, r3
 801dc5c:	f04f 0c0a 	mov.w	ip, #10
 801dc60:	4620      	mov	r0, r4
 801dc62:	f810 2b01 	ldrb.w	r2, [r0], #1
 801dc66:	3a30      	subs	r2, #48	@ 0x30
 801dc68:	2a09      	cmp	r2, #9
 801dc6a:	d903      	bls.n	801dc74 <_vfiprintf_r+0x1cc>
 801dc6c:	2b00      	cmp	r3, #0
 801dc6e:	d0c6      	beq.n	801dbfe <_vfiprintf_r+0x156>
 801dc70:	9105      	str	r1, [sp, #20]
 801dc72:	e7c4      	b.n	801dbfe <_vfiprintf_r+0x156>
 801dc74:	fb0c 2101 	mla	r1, ip, r1, r2
 801dc78:	4604      	mov	r4, r0
 801dc7a:	2301      	movs	r3, #1
 801dc7c:	e7f0      	b.n	801dc60 <_vfiprintf_r+0x1b8>
 801dc7e:	ab03      	add	r3, sp, #12
 801dc80:	9300      	str	r3, [sp, #0]
 801dc82:	462a      	mov	r2, r5
 801dc84:	4b12      	ldr	r3, [pc, #72]	@ (801dcd0 <_vfiprintf_r+0x228>)
 801dc86:	a904      	add	r1, sp, #16
 801dc88:	4630      	mov	r0, r6
 801dc8a:	f3af 8000 	nop.w
 801dc8e:	4607      	mov	r7, r0
 801dc90:	1c78      	adds	r0, r7, #1
 801dc92:	d1d6      	bne.n	801dc42 <_vfiprintf_r+0x19a>
 801dc94:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 801dc96:	07d9      	lsls	r1, r3, #31
 801dc98:	d405      	bmi.n	801dca6 <_vfiprintf_r+0x1fe>
 801dc9a:	89ab      	ldrh	r3, [r5, #12]
 801dc9c:	059a      	lsls	r2, r3, #22
 801dc9e:	d402      	bmi.n	801dca6 <_vfiprintf_r+0x1fe>
 801dca0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 801dca2:	f7ff fcc9 	bl	801d638 <__retarget_lock_release_recursive>
 801dca6:	89ab      	ldrh	r3, [r5, #12]
 801dca8:	065b      	lsls	r3, r3, #25
 801dcaa:	f53f af1f 	bmi.w	801daec <_vfiprintf_r+0x44>
 801dcae:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801dcb0:	e71e      	b.n	801daf0 <_vfiprintf_r+0x48>
 801dcb2:	ab03      	add	r3, sp, #12
 801dcb4:	9300      	str	r3, [sp, #0]
 801dcb6:	462a      	mov	r2, r5
 801dcb8:	4b05      	ldr	r3, [pc, #20]	@ (801dcd0 <_vfiprintf_r+0x228>)
 801dcba:	a904      	add	r1, sp, #16
 801dcbc:	4630      	mov	r0, r6
 801dcbe:	f000 f879 	bl	801ddb4 <_printf_i>
 801dcc2:	e7e4      	b.n	801dc8e <_vfiprintf_r+0x1e6>
 801dcc4:	080200e4 	.word	0x080200e4
 801dcc8:	080200ee 	.word	0x080200ee
 801dccc:	00000000 	.word	0x00000000
 801dcd0:	0801da83 	.word	0x0801da83
 801dcd4:	080200ea 	.word	0x080200ea

0801dcd8 <_printf_common>:
 801dcd8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801dcdc:	4616      	mov	r6, r2
 801dcde:	4698      	mov	r8, r3
 801dce0:	688a      	ldr	r2, [r1, #8]
 801dce2:	690b      	ldr	r3, [r1, #16]
 801dce4:	f8dd 9020 	ldr.w	r9, [sp, #32]
 801dce8:	4293      	cmp	r3, r2
 801dcea:	bfb8      	it	lt
 801dcec:	4613      	movlt	r3, r2
 801dcee:	6033      	str	r3, [r6, #0]
 801dcf0:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 801dcf4:	4607      	mov	r7, r0
 801dcf6:	460c      	mov	r4, r1
 801dcf8:	b10a      	cbz	r2, 801dcfe <_printf_common+0x26>
 801dcfa:	3301      	adds	r3, #1
 801dcfc:	6033      	str	r3, [r6, #0]
 801dcfe:	6823      	ldr	r3, [r4, #0]
 801dd00:	0699      	lsls	r1, r3, #26
 801dd02:	bf42      	ittt	mi
 801dd04:	6833      	ldrmi	r3, [r6, #0]
 801dd06:	3302      	addmi	r3, #2
 801dd08:	6033      	strmi	r3, [r6, #0]
 801dd0a:	6825      	ldr	r5, [r4, #0]
 801dd0c:	f015 0506 	ands.w	r5, r5, #6
 801dd10:	d106      	bne.n	801dd20 <_printf_common+0x48>
 801dd12:	f104 0a19 	add.w	sl, r4, #25
 801dd16:	68e3      	ldr	r3, [r4, #12]
 801dd18:	6832      	ldr	r2, [r6, #0]
 801dd1a:	1a9b      	subs	r3, r3, r2
 801dd1c:	42ab      	cmp	r3, r5
 801dd1e:	dc26      	bgt.n	801dd6e <_printf_common+0x96>
 801dd20:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 801dd24:	6822      	ldr	r2, [r4, #0]
 801dd26:	3b00      	subs	r3, #0
 801dd28:	bf18      	it	ne
 801dd2a:	2301      	movne	r3, #1
 801dd2c:	0692      	lsls	r2, r2, #26
 801dd2e:	d42b      	bmi.n	801dd88 <_printf_common+0xb0>
 801dd30:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 801dd34:	4641      	mov	r1, r8
 801dd36:	4638      	mov	r0, r7
 801dd38:	47c8      	blx	r9
 801dd3a:	3001      	adds	r0, #1
 801dd3c:	d01e      	beq.n	801dd7c <_printf_common+0xa4>
 801dd3e:	6823      	ldr	r3, [r4, #0]
 801dd40:	6922      	ldr	r2, [r4, #16]
 801dd42:	f003 0306 	and.w	r3, r3, #6
 801dd46:	2b04      	cmp	r3, #4
 801dd48:	bf02      	ittt	eq
 801dd4a:	68e5      	ldreq	r5, [r4, #12]
 801dd4c:	6833      	ldreq	r3, [r6, #0]
 801dd4e:	1aed      	subeq	r5, r5, r3
 801dd50:	68a3      	ldr	r3, [r4, #8]
 801dd52:	bf0c      	ite	eq
 801dd54:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801dd58:	2500      	movne	r5, #0
 801dd5a:	4293      	cmp	r3, r2
 801dd5c:	bfc4      	itt	gt
 801dd5e:	1a9b      	subgt	r3, r3, r2
 801dd60:	18ed      	addgt	r5, r5, r3
 801dd62:	2600      	movs	r6, #0
 801dd64:	341a      	adds	r4, #26
 801dd66:	42b5      	cmp	r5, r6
 801dd68:	d11a      	bne.n	801dda0 <_printf_common+0xc8>
 801dd6a:	2000      	movs	r0, #0
 801dd6c:	e008      	b.n	801dd80 <_printf_common+0xa8>
 801dd6e:	2301      	movs	r3, #1
 801dd70:	4652      	mov	r2, sl
 801dd72:	4641      	mov	r1, r8
 801dd74:	4638      	mov	r0, r7
 801dd76:	47c8      	blx	r9
 801dd78:	3001      	adds	r0, #1
 801dd7a:	d103      	bne.n	801dd84 <_printf_common+0xac>
 801dd7c:	f04f 30ff 	mov.w	r0, #4294967295
 801dd80:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801dd84:	3501      	adds	r5, #1
 801dd86:	e7c6      	b.n	801dd16 <_printf_common+0x3e>
 801dd88:	18e1      	adds	r1, r4, r3
 801dd8a:	1c5a      	adds	r2, r3, #1
 801dd8c:	2030      	movs	r0, #48	@ 0x30
 801dd8e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 801dd92:	4422      	add	r2, r4
 801dd94:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 801dd98:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 801dd9c:	3302      	adds	r3, #2
 801dd9e:	e7c7      	b.n	801dd30 <_printf_common+0x58>
 801dda0:	2301      	movs	r3, #1
 801dda2:	4622      	mov	r2, r4
 801dda4:	4641      	mov	r1, r8
 801dda6:	4638      	mov	r0, r7
 801dda8:	47c8      	blx	r9
 801ddaa:	3001      	adds	r0, #1
 801ddac:	d0e6      	beq.n	801dd7c <_printf_common+0xa4>
 801ddae:	3601      	adds	r6, #1
 801ddb0:	e7d9      	b.n	801dd66 <_printf_common+0x8e>
	...

0801ddb4 <_printf_i>:
 801ddb4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801ddb8:	7e0f      	ldrb	r7, [r1, #24]
 801ddba:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801ddbc:	2f78      	cmp	r7, #120	@ 0x78
 801ddbe:	4691      	mov	r9, r2
 801ddc0:	4680      	mov	r8, r0
 801ddc2:	460c      	mov	r4, r1
 801ddc4:	469a      	mov	sl, r3
 801ddc6:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 801ddca:	d807      	bhi.n	801dddc <_printf_i+0x28>
 801ddcc:	2f62      	cmp	r7, #98	@ 0x62
 801ddce:	d80a      	bhi.n	801dde6 <_printf_i+0x32>
 801ddd0:	2f00      	cmp	r7, #0
 801ddd2:	f000 80d2 	beq.w	801df7a <_printf_i+0x1c6>
 801ddd6:	2f58      	cmp	r7, #88	@ 0x58
 801ddd8:	f000 80b9 	beq.w	801df4e <_printf_i+0x19a>
 801dddc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 801dde0:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 801dde4:	e03a      	b.n	801de5c <_printf_i+0xa8>
 801dde6:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 801ddea:	2b15      	cmp	r3, #21
 801ddec:	d8f6      	bhi.n	801dddc <_printf_i+0x28>
 801ddee:	a101      	add	r1, pc, #4	@ (adr r1, 801ddf4 <_printf_i+0x40>)
 801ddf0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801ddf4:	0801de4d 	.word	0x0801de4d
 801ddf8:	0801de61 	.word	0x0801de61
 801ddfc:	0801dddd 	.word	0x0801dddd
 801de00:	0801dddd 	.word	0x0801dddd
 801de04:	0801dddd 	.word	0x0801dddd
 801de08:	0801dddd 	.word	0x0801dddd
 801de0c:	0801de61 	.word	0x0801de61
 801de10:	0801dddd 	.word	0x0801dddd
 801de14:	0801dddd 	.word	0x0801dddd
 801de18:	0801dddd 	.word	0x0801dddd
 801de1c:	0801dddd 	.word	0x0801dddd
 801de20:	0801df61 	.word	0x0801df61
 801de24:	0801de8b 	.word	0x0801de8b
 801de28:	0801df1b 	.word	0x0801df1b
 801de2c:	0801dddd 	.word	0x0801dddd
 801de30:	0801dddd 	.word	0x0801dddd
 801de34:	0801df83 	.word	0x0801df83
 801de38:	0801dddd 	.word	0x0801dddd
 801de3c:	0801de8b 	.word	0x0801de8b
 801de40:	0801dddd 	.word	0x0801dddd
 801de44:	0801dddd 	.word	0x0801dddd
 801de48:	0801df23 	.word	0x0801df23
 801de4c:	6833      	ldr	r3, [r6, #0]
 801de4e:	1d1a      	adds	r2, r3, #4
 801de50:	681b      	ldr	r3, [r3, #0]
 801de52:	6032      	str	r2, [r6, #0]
 801de54:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 801de58:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 801de5c:	2301      	movs	r3, #1
 801de5e:	e09d      	b.n	801df9c <_printf_i+0x1e8>
 801de60:	6833      	ldr	r3, [r6, #0]
 801de62:	6820      	ldr	r0, [r4, #0]
 801de64:	1d19      	adds	r1, r3, #4
 801de66:	6031      	str	r1, [r6, #0]
 801de68:	0606      	lsls	r6, r0, #24
 801de6a:	d501      	bpl.n	801de70 <_printf_i+0xbc>
 801de6c:	681d      	ldr	r5, [r3, #0]
 801de6e:	e003      	b.n	801de78 <_printf_i+0xc4>
 801de70:	0645      	lsls	r5, r0, #25
 801de72:	d5fb      	bpl.n	801de6c <_printf_i+0xb8>
 801de74:	f9b3 5000 	ldrsh.w	r5, [r3]
 801de78:	2d00      	cmp	r5, #0
 801de7a:	da03      	bge.n	801de84 <_printf_i+0xd0>
 801de7c:	232d      	movs	r3, #45	@ 0x2d
 801de7e:	426d      	negs	r5, r5
 801de80:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 801de84:	4859      	ldr	r0, [pc, #356]	@ (801dfec <_printf_i+0x238>)
 801de86:	230a      	movs	r3, #10
 801de88:	e011      	b.n	801deae <_printf_i+0xfa>
 801de8a:	6821      	ldr	r1, [r4, #0]
 801de8c:	6833      	ldr	r3, [r6, #0]
 801de8e:	0608      	lsls	r0, r1, #24
 801de90:	f853 5b04 	ldr.w	r5, [r3], #4
 801de94:	d402      	bmi.n	801de9c <_printf_i+0xe8>
 801de96:	0649      	lsls	r1, r1, #25
 801de98:	bf48      	it	mi
 801de9a:	b2ad      	uxthmi	r5, r5
 801de9c:	2f6f      	cmp	r7, #111	@ 0x6f
 801de9e:	4853      	ldr	r0, [pc, #332]	@ (801dfec <_printf_i+0x238>)
 801dea0:	6033      	str	r3, [r6, #0]
 801dea2:	bf14      	ite	ne
 801dea4:	230a      	movne	r3, #10
 801dea6:	2308      	moveq	r3, #8
 801dea8:	2100      	movs	r1, #0
 801deaa:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 801deae:	6866      	ldr	r6, [r4, #4]
 801deb0:	60a6      	str	r6, [r4, #8]
 801deb2:	2e00      	cmp	r6, #0
 801deb4:	bfa2      	ittt	ge
 801deb6:	6821      	ldrge	r1, [r4, #0]
 801deb8:	f021 0104 	bicge.w	r1, r1, #4
 801debc:	6021      	strge	r1, [r4, #0]
 801debe:	b90d      	cbnz	r5, 801dec4 <_printf_i+0x110>
 801dec0:	2e00      	cmp	r6, #0
 801dec2:	d04b      	beq.n	801df5c <_printf_i+0x1a8>
 801dec4:	4616      	mov	r6, r2
 801dec6:	fbb5 f1f3 	udiv	r1, r5, r3
 801deca:	fb03 5711 	mls	r7, r3, r1, r5
 801dece:	5dc7      	ldrb	r7, [r0, r7]
 801ded0:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801ded4:	462f      	mov	r7, r5
 801ded6:	42bb      	cmp	r3, r7
 801ded8:	460d      	mov	r5, r1
 801deda:	d9f4      	bls.n	801dec6 <_printf_i+0x112>
 801dedc:	2b08      	cmp	r3, #8
 801dede:	d10b      	bne.n	801def8 <_printf_i+0x144>
 801dee0:	6823      	ldr	r3, [r4, #0]
 801dee2:	07df      	lsls	r7, r3, #31
 801dee4:	d508      	bpl.n	801def8 <_printf_i+0x144>
 801dee6:	6923      	ldr	r3, [r4, #16]
 801dee8:	6861      	ldr	r1, [r4, #4]
 801deea:	4299      	cmp	r1, r3
 801deec:	bfde      	ittt	le
 801deee:	2330      	movle	r3, #48	@ 0x30
 801def0:	f806 3c01 	strble.w	r3, [r6, #-1]
 801def4:	f106 36ff 	addle.w	r6, r6, #4294967295
 801def8:	1b92      	subs	r2, r2, r6
 801defa:	6122      	str	r2, [r4, #16]
 801defc:	f8cd a000 	str.w	sl, [sp]
 801df00:	464b      	mov	r3, r9
 801df02:	aa03      	add	r2, sp, #12
 801df04:	4621      	mov	r1, r4
 801df06:	4640      	mov	r0, r8
 801df08:	f7ff fee6 	bl	801dcd8 <_printf_common>
 801df0c:	3001      	adds	r0, #1
 801df0e:	d14a      	bne.n	801dfa6 <_printf_i+0x1f2>
 801df10:	f04f 30ff 	mov.w	r0, #4294967295
 801df14:	b004      	add	sp, #16
 801df16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801df1a:	6823      	ldr	r3, [r4, #0]
 801df1c:	f043 0320 	orr.w	r3, r3, #32
 801df20:	6023      	str	r3, [r4, #0]
 801df22:	4833      	ldr	r0, [pc, #204]	@ (801dff0 <_printf_i+0x23c>)
 801df24:	2778      	movs	r7, #120	@ 0x78
 801df26:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 801df2a:	6823      	ldr	r3, [r4, #0]
 801df2c:	6831      	ldr	r1, [r6, #0]
 801df2e:	061f      	lsls	r7, r3, #24
 801df30:	f851 5b04 	ldr.w	r5, [r1], #4
 801df34:	d402      	bmi.n	801df3c <_printf_i+0x188>
 801df36:	065f      	lsls	r7, r3, #25
 801df38:	bf48      	it	mi
 801df3a:	b2ad      	uxthmi	r5, r5
 801df3c:	6031      	str	r1, [r6, #0]
 801df3e:	07d9      	lsls	r1, r3, #31
 801df40:	bf44      	itt	mi
 801df42:	f043 0320 	orrmi.w	r3, r3, #32
 801df46:	6023      	strmi	r3, [r4, #0]
 801df48:	b11d      	cbz	r5, 801df52 <_printf_i+0x19e>
 801df4a:	2310      	movs	r3, #16
 801df4c:	e7ac      	b.n	801dea8 <_printf_i+0xf4>
 801df4e:	4827      	ldr	r0, [pc, #156]	@ (801dfec <_printf_i+0x238>)
 801df50:	e7e9      	b.n	801df26 <_printf_i+0x172>
 801df52:	6823      	ldr	r3, [r4, #0]
 801df54:	f023 0320 	bic.w	r3, r3, #32
 801df58:	6023      	str	r3, [r4, #0]
 801df5a:	e7f6      	b.n	801df4a <_printf_i+0x196>
 801df5c:	4616      	mov	r6, r2
 801df5e:	e7bd      	b.n	801dedc <_printf_i+0x128>
 801df60:	6833      	ldr	r3, [r6, #0]
 801df62:	6825      	ldr	r5, [r4, #0]
 801df64:	6961      	ldr	r1, [r4, #20]
 801df66:	1d18      	adds	r0, r3, #4
 801df68:	6030      	str	r0, [r6, #0]
 801df6a:	062e      	lsls	r6, r5, #24
 801df6c:	681b      	ldr	r3, [r3, #0]
 801df6e:	d501      	bpl.n	801df74 <_printf_i+0x1c0>
 801df70:	6019      	str	r1, [r3, #0]
 801df72:	e002      	b.n	801df7a <_printf_i+0x1c6>
 801df74:	0668      	lsls	r0, r5, #25
 801df76:	d5fb      	bpl.n	801df70 <_printf_i+0x1bc>
 801df78:	8019      	strh	r1, [r3, #0]
 801df7a:	2300      	movs	r3, #0
 801df7c:	6123      	str	r3, [r4, #16]
 801df7e:	4616      	mov	r6, r2
 801df80:	e7bc      	b.n	801defc <_printf_i+0x148>
 801df82:	6833      	ldr	r3, [r6, #0]
 801df84:	1d1a      	adds	r2, r3, #4
 801df86:	6032      	str	r2, [r6, #0]
 801df88:	681e      	ldr	r6, [r3, #0]
 801df8a:	6862      	ldr	r2, [r4, #4]
 801df8c:	2100      	movs	r1, #0
 801df8e:	4630      	mov	r0, r6
 801df90:	f7e2 f936 	bl	8000200 <memchr>
 801df94:	b108      	cbz	r0, 801df9a <_printf_i+0x1e6>
 801df96:	1b80      	subs	r0, r0, r6
 801df98:	6060      	str	r0, [r4, #4]
 801df9a:	6863      	ldr	r3, [r4, #4]
 801df9c:	6123      	str	r3, [r4, #16]
 801df9e:	2300      	movs	r3, #0
 801dfa0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 801dfa4:	e7aa      	b.n	801defc <_printf_i+0x148>
 801dfa6:	6923      	ldr	r3, [r4, #16]
 801dfa8:	4632      	mov	r2, r6
 801dfaa:	4649      	mov	r1, r9
 801dfac:	4640      	mov	r0, r8
 801dfae:	47d0      	blx	sl
 801dfb0:	3001      	adds	r0, #1
 801dfb2:	d0ad      	beq.n	801df10 <_printf_i+0x15c>
 801dfb4:	6823      	ldr	r3, [r4, #0]
 801dfb6:	079b      	lsls	r3, r3, #30
 801dfb8:	d413      	bmi.n	801dfe2 <_printf_i+0x22e>
 801dfba:	68e0      	ldr	r0, [r4, #12]
 801dfbc:	9b03      	ldr	r3, [sp, #12]
 801dfbe:	4298      	cmp	r0, r3
 801dfc0:	bfb8      	it	lt
 801dfc2:	4618      	movlt	r0, r3
 801dfc4:	e7a6      	b.n	801df14 <_printf_i+0x160>
 801dfc6:	2301      	movs	r3, #1
 801dfc8:	4632      	mov	r2, r6
 801dfca:	4649      	mov	r1, r9
 801dfcc:	4640      	mov	r0, r8
 801dfce:	47d0      	blx	sl
 801dfd0:	3001      	adds	r0, #1
 801dfd2:	d09d      	beq.n	801df10 <_printf_i+0x15c>
 801dfd4:	3501      	adds	r5, #1
 801dfd6:	68e3      	ldr	r3, [r4, #12]
 801dfd8:	9903      	ldr	r1, [sp, #12]
 801dfda:	1a5b      	subs	r3, r3, r1
 801dfdc:	42ab      	cmp	r3, r5
 801dfde:	dcf2      	bgt.n	801dfc6 <_printf_i+0x212>
 801dfe0:	e7eb      	b.n	801dfba <_printf_i+0x206>
 801dfe2:	2500      	movs	r5, #0
 801dfe4:	f104 0619 	add.w	r6, r4, #25
 801dfe8:	e7f5      	b.n	801dfd6 <_printf_i+0x222>
 801dfea:	bf00      	nop
 801dfec:	080200f5 	.word	0x080200f5
 801dff0:	08020106 	.word	0x08020106

0801dff4 <__sflush_r>:
 801dff4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 801dff8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801dffc:	0716      	lsls	r6, r2, #28
 801dffe:	4605      	mov	r5, r0
 801e000:	460c      	mov	r4, r1
 801e002:	d454      	bmi.n	801e0ae <__sflush_r+0xba>
 801e004:	684b      	ldr	r3, [r1, #4]
 801e006:	2b00      	cmp	r3, #0
 801e008:	dc02      	bgt.n	801e010 <__sflush_r+0x1c>
 801e00a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 801e00c:	2b00      	cmp	r3, #0
 801e00e:	dd48      	ble.n	801e0a2 <__sflush_r+0xae>
 801e010:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 801e012:	2e00      	cmp	r6, #0
 801e014:	d045      	beq.n	801e0a2 <__sflush_r+0xae>
 801e016:	2300      	movs	r3, #0
 801e018:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 801e01c:	682f      	ldr	r7, [r5, #0]
 801e01e:	6a21      	ldr	r1, [r4, #32]
 801e020:	602b      	str	r3, [r5, #0]
 801e022:	d030      	beq.n	801e086 <__sflush_r+0x92>
 801e024:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 801e026:	89a3      	ldrh	r3, [r4, #12]
 801e028:	0759      	lsls	r1, r3, #29
 801e02a:	d505      	bpl.n	801e038 <__sflush_r+0x44>
 801e02c:	6863      	ldr	r3, [r4, #4]
 801e02e:	1ad2      	subs	r2, r2, r3
 801e030:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 801e032:	b10b      	cbz	r3, 801e038 <__sflush_r+0x44>
 801e034:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 801e036:	1ad2      	subs	r2, r2, r3
 801e038:	2300      	movs	r3, #0
 801e03a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 801e03c:	6a21      	ldr	r1, [r4, #32]
 801e03e:	4628      	mov	r0, r5
 801e040:	47b0      	blx	r6
 801e042:	1c43      	adds	r3, r0, #1
 801e044:	89a3      	ldrh	r3, [r4, #12]
 801e046:	d106      	bne.n	801e056 <__sflush_r+0x62>
 801e048:	6829      	ldr	r1, [r5, #0]
 801e04a:	291d      	cmp	r1, #29
 801e04c:	d82b      	bhi.n	801e0a6 <__sflush_r+0xb2>
 801e04e:	4a2a      	ldr	r2, [pc, #168]	@ (801e0f8 <__sflush_r+0x104>)
 801e050:	410a      	asrs	r2, r1
 801e052:	07d6      	lsls	r6, r2, #31
 801e054:	d427      	bmi.n	801e0a6 <__sflush_r+0xb2>
 801e056:	2200      	movs	r2, #0
 801e058:	6062      	str	r2, [r4, #4]
 801e05a:	04d9      	lsls	r1, r3, #19
 801e05c:	6922      	ldr	r2, [r4, #16]
 801e05e:	6022      	str	r2, [r4, #0]
 801e060:	d504      	bpl.n	801e06c <__sflush_r+0x78>
 801e062:	1c42      	adds	r2, r0, #1
 801e064:	d101      	bne.n	801e06a <__sflush_r+0x76>
 801e066:	682b      	ldr	r3, [r5, #0]
 801e068:	b903      	cbnz	r3, 801e06c <__sflush_r+0x78>
 801e06a:	6560      	str	r0, [r4, #84]	@ 0x54
 801e06c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 801e06e:	602f      	str	r7, [r5, #0]
 801e070:	b1b9      	cbz	r1, 801e0a2 <__sflush_r+0xae>
 801e072:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 801e076:	4299      	cmp	r1, r3
 801e078:	d002      	beq.n	801e080 <__sflush_r+0x8c>
 801e07a:	4628      	mov	r0, r5
 801e07c:	f7ff fb48 	bl	801d710 <_free_r>
 801e080:	2300      	movs	r3, #0
 801e082:	6363      	str	r3, [r4, #52]	@ 0x34
 801e084:	e00d      	b.n	801e0a2 <__sflush_r+0xae>
 801e086:	2301      	movs	r3, #1
 801e088:	4628      	mov	r0, r5
 801e08a:	47b0      	blx	r6
 801e08c:	4602      	mov	r2, r0
 801e08e:	1c50      	adds	r0, r2, #1
 801e090:	d1c9      	bne.n	801e026 <__sflush_r+0x32>
 801e092:	682b      	ldr	r3, [r5, #0]
 801e094:	2b00      	cmp	r3, #0
 801e096:	d0c6      	beq.n	801e026 <__sflush_r+0x32>
 801e098:	2b1d      	cmp	r3, #29
 801e09a:	d001      	beq.n	801e0a0 <__sflush_r+0xac>
 801e09c:	2b16      	cmp	r3, #22
 801e09e:	d11e      	bne.n	801e0de <__sflush_r+0xea>
 801e0a0:	602f      	str	r7, [r5, #0]
 801e0a2:	2000      	movs	r0, #0
 801e0a4:	e022      	b.n	801e0ec <__sflush_r+0xf8>
 801e0a6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801e0aa:	b21b      	sxth	r3, r3
 801e0ac:	e01b      	b.n	801e0e6 <__sflush_r+0xf2>
 801e0ae:	690f      	ldr	r7, [r1, #16]
 801e0b0:	2f00      	cmp	r7, #0
 801e0b2:	d0f6      	beq.n	801e0a2 <__sflush_r+0xae>
 801e0b4:	0793      	lsls	r3, r2, #30
 801e0b6:	680e      	ldr	r6, [r1, #0]
 801e0b8:	bf08      	it	eq
 801e0ba:	694b      	ldreq	r3, [r1, #20]
 801e0bc:	600f      	str	r7, [r1, #0]
 801e0be:	bf18      	it	ne
 801e0c0:	2300      	movne	r3, #0
 801e0c2:	eba6 0807 	sub.w	r8, r6, r7
 801e0c6:	608b      	str	r3, [r1, #8]
 801e0c8:	f1b8 0f00 	cmp.w	r8, #0
 801e0cc:	dde9      	ble.n	801e0a2 <__sflush_r+0xae>
 801e0ce:	6a21      	ldr	r1, [r4, #32]
 801e0d0:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 801e0d2:	4643      	mov	r3, r8
 801e0d4:	463a      	mov	r2, r7
 801e0d6:	4628      	mov	r0, r5
 801e0d8:	47b0      	blx	r6
 801e0da:	2800      	cmp	r0, #0
 801e0dc:	dc08      	bgt.n	801e0f0 <__sflush_r+0xfc>
 801e0de:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801e0e2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801e0e6:	81a3      	strh	r3, [r4, #12]
 801e0e8:	f04f 30ff 	mov.w	r0, #4294967295
 801e0ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801e0f0:	4407      	add	r7, r0
 801e0f2:	eba8 0800 	sub.w	r8, r8, r0
 801e0f6:	e7e7      	b.n	801e0c8 <__sflush_r+0xd4>
 801e0f8:	dfbffffe 	.word	0xdfbffffe

0801e0fc <_fflush_r>:
 801e0fc:	b538      	push	{r3, r4, r5, lr}
 801e0fe:	690b      	ldr	r3, [r1, #16]
 801e100:	4605      	mov	r5, r0
 801e102:	460c      	mov	r4, r1
 801e104:	b913      	cbnz	r3, 801e10c <_fflush_r+0x10>
 801e106:	2500      	movs	r5, #0
 801e108:	4628      	mov	r0, r5
 801e10a:	bd38      	pop	{r3, r4, r5, pc}
 801e10c:	b118      	cbz	r0, 801e116 <_fflush_r+0x1a>
 801e10e:	6a03      	ldr	r3, [r0, #32]
 801e110:	b90b      	cbnz	r3, 801e116 <_fflush_r+0x1a>
 801e112:	f7ff f8c1 	bl	801d298 <__sinit>
 801e116:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801e11a:	2b00      	cmp	r3, #0
 801e11c:	d0f3      	beq.n	801e106 <_fflush_r+0xa>
 801e11e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 801e120:	07d0      	lsls	r0, r2, #31
 801e122:	d404      	bmi.n	801e12e <_fflush_r+0x32>
 801e124:	0599      	lsls	r1, r3, #22
 801e126:	d402      	bmi.n	801e12e <_fflush_r+0x32>
 801e128:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801e12a:	f7ff fa84 	bl	801d636 <__retarget_lock_acquire_recursive>
 801e12e:	4628      	mov	r0, r5
 801e130:	4621      	mov	r1, r4
 801e132:	f7ff ff5f 	bl	801dff4 <__sflush_r>
 801e136:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801e138:	07da      	lsls	r2, r3, #31
 801e13a:	4605      	mov	r5, r0
 801e13c:	d4e4      	bmi.n	801e108 <_fflush_r+0xc>
 801e13e:	89a3      	ldrh	r3, [r4, #12]
 801e140:	059b      	lsls	r3, r3, #22
 801e142:	d4e1      	bmi.n	801e108 <_fflush_r+0xc>
 801e144:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801e146:	f7ff fa77 	bl	801d638 <__retarget_lock_release_recursive>
 801e14a:	e7dd      	b.n	801e108 <_fflush_r+0xc>

0801e14c <__swbuf_r>:
 801e14c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801e14e:	460e      	mov	r6, r1
 801e150:	4614      	mov	r4, r2
 801e152:	4605      	mov	r5, r0
 801e154:	b118      	cbz	r0, 801e15e <__swbuf_r+0x12>
 801e156:	6a03      	ldr	r3, [r0, #32]
 801e158:	b90b      	cbnz	r3, 801e15e <__swbuf_r+0x12>
 801e15a:	f7ff f89d 	bl	801d298 <__sinit>
 801e15e:	69a3      	ldr	r3, [r4, #24]
 801e160:	60a3      	str	r3, [r4, #8]
 801e162:	89a3      	ldrh	r3, [r4, #12]
 801e164:	071a      	lsls	r2, r3, #28
 801e166:	d501      	bpl.n	801e16c <__swbuf_r+0x20>
 801e168:	6923      	ldr	r3, [r4, #16]
 801e16a:	b943      	cbnz	r3, 801e17e <__swbuf_r+0x32>
 801e16c:	4621      	mov	r1, r4
 801e16e:	4628      	mov	r0, r5
 801e170:	f000 f82a 	bl	801e1c8 <__swsetup_r>
 801e174:	b118      	cbz	r0, 801e17e <__swbuf_r+0x32>
 801e176:	f04f 37ff 	mov.w	r7, #4294967295
 801e17a:	4638      	mov	r0, r7
 801e17c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801e17e:	6823      	ldr	r3, [r4, #0]
 801e180:	6922      	ldr	r2, [r4, #16]
 801e182:	1a98      	subs	r0, r3, r2
 801e184:	6963      	ldr	r3, [r4, #20]
 801e186:	b2f6      	uxtb	r6, r6
 801e188:	4283      	cmp	r3, r0
 801e18a:	4637      	mov	r7, r6
 801e18c:	dc05      	bgt.n	801e19a <__swbuf_r+0x4e>
 801e18e:	4621      	mov	r1, r4
 801e190:	4628      	mov	r0, r5
 801e192:	f7ff ffb3 	bl	801e0fc <_fflush_r>
 801e196:	2800      	cmp	r0, #0
 801e198:	d1ed      	bne.n	801e176 <__swbuf_r+0x2a>
 801e19a:	68a3      	ldr	r3, [r4, #8]
 801e19c:	3b01      	subs	r3, #1
 801e19e:	60a3      	str	r3, [r4, #8]
 801e1a0:	6823      	ldr	r3, [r4, #0]
 801e1a2:	1c5a      	adds	r2, r3, #1
 801e1a4:	6022      	str	r2, [r4, #0]
 801e1a6:	701e      	strb	r6, [r3, #0]
 801e1a8:	6962      	ldr	r2, [r4, #20]
 801e1aa:	1c43      	adds	r3, r0, #1
 801e1ac:	429a      	cmp	r2, r3
 801e1ae:	d004      	beq.n	801e1ba <__swbuf_r+0x6e>
 801e1b0:	89a3      	ldrh	r3, [r4, #12]
 801e1b2:	07db      	lsls	r3, r3, #31
 801e1b4:	d5e1      	bpl.n	801e17a <__swbuf_r+0x2e>
 801e1b6:	2e0a      	cmp	r6, #10
 801e1b8:	d1df      	bne.n	801e17a <__swbuf_r+0x2e>
 801e1ba:	4621      	mov	r1, r4
 801e1bc:	4628      	mov	r0, r5
 801e1be:	f7ff ff9d 	bl	801e0fc <_fflush_r>
 801e1c2:	2800      	cmp	r0, #0
 801e1c4:	d0d9      	beq.n	801e17a <__swbuf_r+0x2e>
 801e1c6:	e7d6      	b.n	801e176 <__swbuf_r+0x2a>

0801e1c8 <__swsetup_r>:
 801e1c8:	b538      	push	{r3, r4, r5, lr}
 801e1ca:	4b29      	ldr	r3, [pc, #164]	@ (801e270 <__swsetup_r+0xa8>)
 801e1cc:	4605      	mov	r5, r0
 801e1ce:	6818      	ldr	r0, [r3, #0]
 801e1d0:	460c      	mov	r4, r1
 801e1d2:	b118      	cbz	r0, 801e1dc <__swsetup_r+0x14>
 801e1d4:	6a03      	ldr	r3, [r0, #32]
 801e1d6:	b90b      	cbnz	r3, 801e1dc <__swsetup_r+0x14>
 801e1d8:	f7ff f85e 	bl	801d298 <__sinit>
 801e1dc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801e1e0:	0719      	lsls	r1, r3, #28
 801e1e2:	d422      	bmi.n	801e22a <__swsetup_r+0x62>
 801e1e4:	06da      	lsls	r2, r3, #27
 801e1e6:	d407      	bmi.n	801e1f8 <__swsetup_r+0x30>
 801e1e8:	2209      	movs	r2, #9
 801e1ea:	602a      	str	r2, [r5, #0]
 801e1ec:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801e1f0:	81a3      	strh	r3, [r4, #12]
 801e1f2:	f04f 30ff 	mov.w	r0, #4294967295
 801e1f6:	e033      	b.n	801e260 <__swsetup_r+0x98>
 801e1f8:	0758      	lsls	r0, r3, #29
 801e1fa:	d512      	bpl.n	801e222 <__swsetup_r+0x5a>
 801e1fc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 801e1fe:	b141      	cbz	r1, 801e212 <__swsetup_r+0x4a>
 801e200:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 801e204:	4299      	cmp	r1, r3
 801e206:	d002      	beq.n	801e20e <__swsetup_r+0x46>
 801e208:	4628      	mov	r0, r5
 801e20a:	f7ff fa81 	bl	801d710 <_free_r>
 801e20e:	2300      	movs	r3, #0
 801e210:	6363      	str	r3, [r4, #52]	@ 0x34
 801e212:	89a3      	ldrh	r3, [r4, #12]
 801e214:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 801e218:	81a3      	strh	r3, [r4, #12]
 801e21a:	2300      	movs	r3, #0
 801e21c:	6063      	str	r3, [r4, #4]
 801e21e:	6923      	ldr	r3, [r4, #16]
 801e220:	6023      	str	r3, [r4, #0]
 801e222:	89a3      	ldrh	r3, [r4, #12]
 801e224:	f043 0308 	orr.w	r3, r3, #8
 801e228:	81a3      	strh	r3, [r4, #12]
 801e22a:	6923      	ldr	r3, [r4, #16]
 801e22c:	b94b      	cbnz	r3, 801e242 <__swsetup_r+0x7a>
 801e22e:	89a3      	ldrh	r3, [r4, #12]
 801e230:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 801e234:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 801e238:	d003      	beq.n	801e242 <__swsetup_r+0x7a>
 801e23a:	4621      	mov	r1, r4
 801e23c:	4628      	mov	r0, r5
 801e23e:	f000 f887 	bl	801e350 <__smakebuf_r>
 801e242:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801e246:	f013 0201 	ands.w	r2, r3, #1
 801e24a:	d00a      	beq.n	801e262 <__swsetup_r+0x9a>
 801e24c:	2200      	movs	r2, #0
 801e24e:	60a2      	str	r2, [r4, #8]
 801e250:	6962      	ldr	r2, [r4, #20]
 801e252:	4252      	negs	r2, r2
 801e254:	61a2      	str	r2, [r4, #24]
 801e256:	6922      	ldr	r2, [r4, #16]
 801e258:	b942      	cbnz	r2, 801e26c <__swsetup_r+0xa4>
 801e25a:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 801e25e:	d1c5      	bne.n	801e1ec <__swsetup_r+0x24>
 801e260:	bd38      	pop	{r3, r4, r5, pc}
 801e262:	0799      	lsls	r1, r3, #30
 801e264:	bf58      	it	pl
 801e266:	6962      	ldrpl	r2, [r4, #20]
 801e268:	60a2      	str	r2, [r4, #8]
 801e26a:	e7f4      	b.n	801e256 <__swsetup_r+0x8e>
 801e26c:	2000      	movs	r0, #0
 801e26e:	e7f7      	b.n	801e260 <__swsetup_r+0x98>
 801e270:	20000110 	.word	0x20000110

0801e274 <memmove>:
 801e274:	4288      	cmp	r0, r1
 801e276:	b510      	push	{r4, lr}
 801e278:	eb01 0402 	add.w	r4, r1, r2
 801e27c:	d902      	bls.n	801e284 <memmove+0x10>
 801e27e:	4284      	cmp	r4, r0
 801e280:	4623      	mov	r3, r4
 801e282:	d807      	bhi.n	801e294 <memmove+0x20>
 801e284:	1e43      	subs	r3, r0, #1
 801e286:	42a1      	cmp	r1, r4
 801e288:	d008      	beq.n	801e29c <memmove+0x28>
 801e28a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801e28e:	f803 2f01 	strb.w	r2, [r3, #1]!
 801e292:	e7f8      	b.n	801e286 <memmove+0x12>
 801e294:	4402      	add	r2, r0
 801e296:	4601      	mov	r1, r0
 801e298:	428a      	cmp	r2, r1
 801e29a:	d100      	bne.n	801e29e <memmove+0x2a>
 801e29c:	bd10      	pop	{r4, pc}
 801e29e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 801e2a2:	f802 4d01 	strb.w	r4, [r2, #-1]!
 801e2a6:	e7f7      	b.n	801e298 <memmove+0x24>

0801e2a8 <_realloc_r>:
 801e2a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801e2ac:	4680      	mov	r8, r0
 801e2ae:	4615      	mov	r5, r2
 801e2b0:	460c      	mov	r4, r1
 801e2b2:	b921      	cbnz	r1, 801e2be <_realloc_r+0x16>
 801e2b4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801e2b8:	4611      	mov	r1, r2
 801e2ba:	f7fe bec7 	b.w	801d04c <_malloc_r>
 801e2be:	b92a      	cbnz	r2, 801e2cc <_realloc_r+0x24>
 801e2c0:	f7ff fa26 	bl	801d710 <_free_r>
 801e2c4:	2400      	movs	r4, #0
 801e2c6:	4620      	mov	r0, r4
 801e2c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801e2cc:	f000 f89e 	bl	801e40c <_malloc_usable_size_r>
 801e2d0:	4285      	cmp	r5, r0
 801e2d2:	4606      	mov	r6, r0
 801e2d4:	d802      	bhi.n	801e2dc <_realloc_r+0x34>
 801e2d6:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 801e2da:	d8f4      	bhi.n	801e2c6 <_realloc_r+0x1e>
 801e2dc:	4629      	mov	r1, r5
 801e2de:	4640      	mov	r0, r8
 801e2e0:	f7fe feb4 	bl	801d04c <_malloc_r>
 801e2e4:	4607      	mov	r7, r0
 801e2e6:	2800      	cmp	r0, #0
 801e2e8:	d0ec      	beq.n	801e2c4 <_realloc_r+0x1c>
 801e2ea:	42b5      	cmp	r5, r6
 801e2ec:	462a      	mov	r2, r5
 801e2ee:	4621      	mov	r1, r4
 801e2f0:	bf28      	it	cs
 801e2f2:	4632      	movcs	r2, r6
 801e2f4:	f7ff f9a1 	bl	801d63a <memcpy>
 801e2f8:	4621      	mov	r1, r4
 801e2fa:	4640      	mov	r0, r8
 801e2fc:	f7ff fa08 	bl	801d710 <_free_r>
 801e300:	463c      	mov	r4, r7
 801e302:	e7e0      	b.n	801e2c6 <_realloc_r+0x1e>

0801e304 <__swhatbuf_r>:
 801e304:	b570      	push	{r4, r5, r6, lr}
 801e306:	460c      	mov	r4, r1
 801e308:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801e30c:	2900      	cmp	r1, #0
 801e30e:	b096      	sub	sp, #88	@ 0x58
 801e310:	4615      	mov	r5, r2
 801e312:	461e      	mov	r6, r3
 801e314:	da0d      	bge.n	801e332 <__swhatbuf_r+0x2e>
 801e316:	89a3      	ldrh	r3, [r4, #12]
 801e318:	f013 0f80 	tst.w	r3, #128	@ 0x80
 801e31c:	f04f 0100 	mov.w	r1, #0
 801e320:	bf14      	ite	ne
 801e322:	2340      	movne	r3, #64	@ 0x40
 801e324:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 801e328:	2000      	movs	r0, #0
 801e32a:	6031      	str	r1, [r6, #0]
 801e32c:	602b      	str	r3, [r5, #0]
 801e32e:	b016      	add	sp, #88	@ 0x58
 801e330:	bd70      	pop	{r4, r5, r6, pc}
 801e332:	466a      	mov	r2, sp
 801e334:	f000 f848 	bl	801e3c8 <_fstat_r>
 801e338:	2800      	cmp	r0, #0
 801e33a:	dbec      	blt.n	801e316 <__swhatbuf_r+0x12>
 801e33c:	9901      	ldr	r1, [sp, #4]
 801e33e:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 801e342:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 801e346:	4259      	negs	r1, r3
 801e348:	4159      	adcs	r1, r3
 801e34a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801e34e:	e7eb      	b.n	801e328 <__swhatbuf_r+0x24>

0801e350 <__smakebuf_r>:
 801e350:	898b      	ldrh	r3, [r1, #12]
 801e352:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801e354:	079d      	lsls	r5, r3, #30
 801e356:	4606      	mov	r6, r0
 801e358:	460c      	mov	r4, r1
 801e35a:	d507      	bpl.n	801e36c <__smakebuf_r+0x1c>
 801e35c:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 801e360:	6023      	str	r3, [r4, #0]
 801e362:	6123      	str	r3, [r4, #16]
 801e364:	2301      	movs	r3, #1
 801e366:	6163      	str	r3, [r4, #20]
 801e368:	b003      	add	sp, #12
 801e36a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801e36c:	ab01      	add	r3, sp, #4
 801e36e:	466a      	mov	r2, sp
 801e370:	f7ff ffc8 	bl	801e304 <__swhatbuf_r>
 801e374:	9f00      	ldr	r7, [sp, #0]
 801e376:	4605      	mov	r5, r0
 801e378:	4639      	mov	r1, r7
 801e37a:	4630      	mov	r0, r6
 801e37c:	f7fe fe66 	bl	801d04c <_malloc_r>
 801e380:	b948      	cbnz	r0, 801e396 <__smakebuf_r+0x46>
 801e382:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801e386:	059a      	lsls	r2, r3, #22
 801e388:	d4ee      	bmi.n	801e368 <__smakebuf_r+0x18>
 801e38a:	f023 0303 	bic.w	r3, r3, #3
 801e38e:	f043 0302 	orr.w	r3, r3, #2
 801e392:	81a3      	strh	r3, [r4, #12]
 801e394:	e7e2      	b.n	801e35c <__smakebuf_r+0xc>
 801e396:	89a3      	ldrh	r3, [r4, #12]
 801e398:	6020      	str	r0, [r4, #0]
 801e39a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 801e39e:	81a3      	strh	r3, [r4, #12]
 801e3a0:	9b01      	ldr	r3, [sp, #4]
 801e3a2:	e9c4 0704 	strd	r0, r7, [r4, #16]
 801e3a6:	b15b      	cbz	r3, 801e3c0 <__smakebuf_r+0x70>
 801e3a8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801e3ac:	4630      	mov	r0, r6
 801e3ae:	f000 f81d 	bl	801e3ec <_isatty_r>
 801e3b2:	b128      	cbz	r0, 801e3c0 <__smakebuf_r+0x70>
 801e3b4:	89a3      	ldrh	r3, [r4, #12]
 801e3b6:	f023 0303 	bic.w	r3, r3, #3
 801e3ba:	f043 0301 	orr.w	r3, r3, #1
 801e3be:	81a3      	strh	r3, [r4, #12]
 801e3c0:	89a3      	ldrh	r3, [r4, #12]
 801e3c2:	431d      	orrs	r5, r3
 801e3c4:	81a5      	strh	r5, [r4, #12]
 801e3c6:	e7cf      	b.n	801e368 <__smakebuf_r+0x18>

0801e3c8 <_fstat_r>:
 801e3c8:	b538      	push	{r3, r4, r5, lr}
 801e3ca:	4d07      	ldr	r5, [pc, #28]	@ (801e3e8 <_fstat_r+0x20>)
 801e3cc:	2300      	movs	r3, #0
 801e3ce:	4604      	mov	r4, r0
 801e3d0:	4608      	mov	r0, r1
 801e3d2:	4611      	mov	r1, r2
 801e3d4:	602b      	str	r3, [r5, #0]
 801e3d6:	f7e3 fd6e 	bl	8001eb6 <_fstat>
 801e3da:	1c43      	adds	r3, r0, #1
 801e3dc:	d102      	bne.n	801e3e4 <_fstat_r+0x1c>
 801e3de:	682b      	ldr	r3, [r5, #0]
 801e3e0:	b103      	cbz	r3, 801e3e4 <_fstat_r+0x1c>
 801e3e2:	6023      	str	r3, [r4, #0]
 801e3e4:	bd38      	pop	{r3, r4, r5, pc}
 801e3e6:	bf00      	nop
 801e3e8:	20012464 	.word	0x20012464

0801e3ec <_isatty_r>:
 801e3ec:	b538      	push	{r3, r4, r5, lr}
 801e3ee:	4d06      	ldr	r5, [pc, #24]	@ (801e408 <_isatty_r+0x1c>)
 801e3f0:	2300      	movs	r3, #0
 801e3f2:	4604      	mov	r4, r0
 801e3f4:	4608      	mov	r0, r1
 801e3f6:	602b      	str	r3, [r5, #0]
 801e3f8:	f7e3 fd62 	bl	8001ec0 <_isatty>
 801e3fc:	1c43      	adds	r3, r0, #1
 801e3fe:	d102      	bne.n	801e406 <_isatty_r+0x1a>
 801e400:	682b      	ldr	r3, [r5, #0]
 801e402:	b103      	cbz	r3, 801e406 <_isatty_r+0x1a>
 801e404:	6023      	str	r3, [r4, #0]
 801e406:	bd38      	pop	{r3, r4, r5, pc}
 801e408:	20012464 	.word	0x20012464

0801e40c <_malloc_usable_size_r>:
 801e40c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801e410:	1f18      	subs	r0, r3, #4
 801e412:	2b00      	cmp	r3, #0
 801e414:	bfbc      	itt	lt
 801e416:	580b      	ldrlt	r3, [r1, r0]
 801e418:	18c0      	addlt	r0, r0, r3
 801e41a:	4770      	bx	lr

0801e41c <_init>:
 801e41c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801e41e:	bf00      	nop
 801e420:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801e422:	bc08      	pop	{r3}
 801e424:	469e      	mov	lr, r3
 801e426:	4770      	bx	lr

0801e428 <_fini>:
 801e428:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801e42a:	bf00      	nop
 801e42c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801e42e:	bc08      	pop	{r3}
 801e430:	469e      	mov	lr, r3
 801e432:	4770      	bx	lr
